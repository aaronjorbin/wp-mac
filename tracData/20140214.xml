<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #25169 (Optimize all images / pngs in core) reopened</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Fri, 14 Feb 2014 23:24:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25169#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25169#comment:16/1392420263392171</guid>
      <description>&lt;p&gt;
This causes numerous issues with &lt;code&gt;npm install&lt;/code&gt; on Windows installs :(
&lt;/p&gt;
&lt;p&gt;
I am reopening the ticket because of the console errors from running &lt;code&gt;npm install&lt;/code&gt;. Previously to the addition of &lt;code&gt;grunt-contrib-imagemin&lt;/code&gt; to &lt;code&gt;package.json&lt;/code&gt; it was an error free build environment for Windows contributors.
&lt;/p&gt;
&lt;p&gt;
Granted I don't think any of the core committers are running Windows to commit against core and the crux of this patch is for the the Grunt &lt;code&gt;precommit&lt;/code&gt; task.
&lt;/p&gt;
&lt;p&gt;
I tested both &lt;code&gt;grunt-contrib-imagemin&lt;/code&gt; v0.4.1 and v0.5.0 and the errors are very similar for both versions.
&lt;/p&gt;
&lt;p&gt;
Using v0.5.0 fails much more gracefully, you still get similar errors but subsequent runs of &lt;code&gt;npm install&lt;/code&gt; does not try to reinstall the missing component.
&lt;/p&gt;
&lt;h2 id="npminstall"&gt;npm install&lt;/h2&gt;
&lt;p&gt;
Using: &lt;code&gt;"grunt-contrib-imagemin" : "~0.4.1",&lt;/code&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;npm install console output log: &lt;a class="ext-link" href="https://gist.github.com/ntwb/8dd0e411650142d721ce"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gist.github.com/ntwb/8dd0e411650142d721ce&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;npm ERR! weird error 8&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;npm ERR! not ok code 0&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Using: `"grunt-contrib-imagemin" : "~0.5.0",
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;npm install console output log: &lt;a class="ext-link" href="https://gist.github.com/ntwb/146da33743792ed85756"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gist.github.com/ntwb/146da33743792ed85756&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;npm WARN optional dep failed, continuing optipng-bin@0.3.1&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="gruntbuild"&gt;grunt build&lt;/h2&gt;
&lt;p&gt;
Using: &lt;code&gt;"grunt-contrib-imagemin" : "~0.4.1",&lt;/code&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;&amp;gt;&amp;gt; Local Npm module "grunt-contrib-imagemin" not found. Is it installed?&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;Done, without errors.&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Using: `"grunt-contrib-imagemin" : "~0.5.0",
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;Done, without errors.&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="gruntprecommit"&gt;grunt precommit&lt;/h2&gt;
&lt;pre class="wiki"&gt;Running "imagemin:core" (imagemin) task
Warning: Cannot find module 'optipng-bin' Use --force to continue.
Aborted due to warnings.
C:\xampp\htdocs\develop.wp.nw [trunk]&amp;gt;
&lt;/pre&gt;</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #27130 (Credentials parameter default in wp_signon() should be an array) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 14 Feb 2014 23:24:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27130#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27130#comment:2/1392420253881899</guid>
      <description>&lt;p&gt;
Seems like the default value of &lt;code&gt;$credentials&lt;/code&gt; should be an array.
&lt;/p&gt;
&lt;p&gt;
We use strict comparison for &lt;code&gt;$secure_cookie&lt;/code&gt; though:
&lt;a href="https://core.trac.wordpress.org/browser/tags/3.8.1/src/wp-includes/user.php#L43"&gt;https://core.trac.wordpress.org/browser/tags/3.8.1/src/wp-includes/user.php#L43&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Could probably use &lt;code&gt;null&lt;/code&gt; instead, but need to be careful with backwards compatibility, so I guess it's safer to keep it a string. The &lt;code&gt;@param&lt;/code&gt; description is correct, it's treated as a boolean value.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27130 (Credentials parameter default in wp_signon() should be an array) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 14 Feb 2014 22:57:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27130#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27130#comment:1/1392418627747236</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27130 (Credentials parameter default in wp_signon() should be an array) created</title>
      
        <dc:creator>tivnet</dc:creator>

      <pubDate>Fri, 14 Feb 2014 22:46:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27130</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27130/1392417973399973</guid>
      <description>&lt;pre class="wiki"&gt; * @param array $credentials Optional. User info in order to sign on.
 * @param bool $secure_cookie Optional. Whether to use secure cookie.
 * @return object Either WP_Error on failure, or WP_User on success.
 */
function wp_signon( $credentials = '', $secure_cookie = '' ) {
&lt;/pre&gt;&lt;ol&gt;&lt;li&gt;&lt;code&gt;@return WP_User|WP_Error Either WP_Error on failure, or WP_User on success.&lt;/code&gt;
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;&lt;code&gt;$credentials = '', $secure_cookie = ''&lt;/code&gt; probably wrong default values. Or wrong &lt;code&gt;@param&lt;/code&gt;
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21300 (Implement autoloader compatible with PSR-0 / PSR-4 for plugins and themes) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Fri, 14 Feb 2014 22:01:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21300#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21300#comment:22/1392415299559565</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21300#comment:21" title="Comment 21"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Let me put it this way, though: my main customer at the moment is running a nuclear wasteland comprising of ~80 mostly forked plugins and four themes due to hard-coded references and child themes all over the place, none of them up to date, with a grand total of ~8000 files full of buggy spaghetti code.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
LOL!  Well, you've definitely got me beat for suckiest main client, at least as far as the code you have to work on. Ugh.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21300 (Implement autoloader compatible with PSR-0 / PSR-4 for plugins and themes) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 14 Feb 2014 21:59:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21300#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21300#comment:21/1392415187385682</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21300#comment:20" title="Comment 20"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Please don't. Deep directory structures are a real pain to deal, especially when you are talking about a small number of files like with most plugins.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
But then, you and I mustn't be dealing with the same plugins on a day to day basis.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That said, struggling to find classes is a problem I never see. What editor do you use?  Doesn't your editor give you tools to find classes easily?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Textmate, and it does.
&lt;/p&gt;
&lt;p&gt;
Let me put it this way, though: my main customer at the moment is running a nuclear wasteland comprising of ~80 mostly forked plugins and four themes due to hard-coded references and child themes all over the place, none of them up to date, with a grand total of ~8000 files full of buggy spaghetti code.
&lt;/p&gt;
&lt;p&gt;
It's not pretty, and the first thing that came to my mind was -- duh! -- to drop WP entirely and rebuild his entire site on top for a sane PHP framework and Postgres.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25623 (The design of update_option etc makes race conditions likely to happen) updated</title>
      
        <dc:creator>sphoid</dc:creator>

      <pubDate>Fri, 14 Feb 2014 21:50:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25623#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25623#comment:4/1392414634538354</guid>
      <description>&lt;p&gt;
I'm fairly certain I'm actually having this very problem. We have 7 web servers in a production environment using the memcached plugin. I've been thinking for the longest time that there is a bug in php-memcache or in memcached itself because we intermittently get stubborn stale cache data but it sounds very likely that cache writes are stepping all over each other causing old data to get written back to the cache which resets the expiry for the key. This is a very difficult thing to prove because it only seems to happen in high load environments with many servers (this is not a common wp configuration outside of wordpress.com) and I'm also thinking the size of the data blob might be a factor too since we only ever experience this with alloptions which is upwards of 500Kb in our environment. I'm watching this ticket with great interest.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26491 (Bundled themes: update to latest version of HTML5 Shiv) updated</title>
      
        <dc:creator>philiparthurmoore</dc:creator>

      <pubDate>Fri, 14 Feb 2014 21:38:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26491#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26491#comment:5/1392413913655150</guid>
      <description>&lt;p&gt;
I'd love to see this in Core; many themes would benefit from it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27125 (Neutral Errormessage in Login) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 14 Feb 2014 21:28:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27125#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27125#comment:2/1392413338298953</guid>
      <description>&lt;p&gt;
Those tickets linked by Helen give a good insight into why this won't be changed. It's worth reading through them if you'd like to know the reasoning.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27127 (Improve plugin search on installed plugins page) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 14 Feb 2014 21:21:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27127#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27127#comment:1/1392412890165805</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is neat and I've previously written a plugin to do a very similar thing (&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/27127/plugin-filter.php" title="Attachment 'plugin-filter.php' in Ticket #27127"&gt;plugin-filter.php&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/27127/plugin-filter.php" title="Download"&gt;​&lt;/a&gt;). It makes searching much, much faster.
&lt;/p&gt;
&lt;p&gt;
One consideration that needs taking into account is that the plugins screen has pagination, although it is set to a high value by default. It does mean that if someone has lowered the value then they may not find plugins they're expecting to find.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>plugin-filter.php attached to Ticket #27127</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 14 Feb 2014 21:19:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27127/plugin-filter.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27127/plugin-filter.php/1392412760767342</guid>
      <description>&lt;p&gt;
"Plugin Filter" plugin
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #24373 (WordPress Importer - Strict Standards compatibility) reopened</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 14 Feb 2014 19:49:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24373#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24373#comment:11/1392407399879026</guid>
      <description>&lt;p&gt;
Let's keep the ticket open as a reminder.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #24373 (WordPress Importer - Strict Standards compatibility) updated</title>
      
        <dc:creator>styledev</dc:creator>

      <pubDate>Fri, 14 Feb 2014 19:34:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24373#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24373#comment:10/1392406460392687</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Any idea when this will actually get added into the plugin hosted on Wordpress.org? The last update was Jan. 14th, 2014 and did not include this patch...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26543 (Backbone Routing doesn't support query arguments as parseable route ...) updated</title>
      
        <dc:creator>matveb</dc:creator>

      <pubDate>Fri, 14 Feb 2014 19:28:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26543#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26543#comment:11/1392406080173991</guid>
      <description>&lt;p&gt;
Thanks for the patch, ehg.
&lt;/p&gt;
&lt;p&gt;
From Backbone 1.1.1 release notes: &lt;em&gt;Added an execute hook to the Router, which allows you to hook in and custom-parse route arguments, like query strings, for example.&lt;/em&gt; Hat-tip mattwiebe
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27107 (Rethink how the "special characters" TinyMCE modal works) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 14 Feb 2014 19:19:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27107#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27107#comment:3/1392405569873292</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27179" title="TinyMCE: when clicking on a character in the Charmap modal, don't ..."&gt;27179&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
TinyMCE: when clicking on a character in the Charmap modal, don't close it if the Crtl key is pressed. Makes it possible to insert several special chars in a row. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27107" title="#27107: enhancement: Rethink how the &amp;#34;special characters&amp;#34; TinyMCE modal works (closed: fixed)"&gt;#27107&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [27179]: TinyMCE: when clicking on a character in the Charmap modal, don't ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 14 Feb 2014 19:19:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27179</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27179/1392405568572815</guid>
      <description>&lt;p&gt;
TinyMCE: when clicking on a character in the Charmap modal, don't close it if the Crtl key is pressed. Makes it possible to insert several special chars in a row. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27107" title="#27107: enhancement: Rethink how the &amp;#34;special characters&amp;#34; TinyMCE modal works (closed: fixed)"&gt;#27107&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>26959-03.patch attached to Ticket #26959</title>
      
        <dc:creator>gcorne</dc:creator>

      <pubDate>Fri, 14 Feb 2014 18:36:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26959/26959-03.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26959/26959-03.patch/1392402964919268</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #20578 (Allow users to delete a plugin without uninstalling) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Fri, 14 Feb 2014 18:29:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20578#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20578#comment:16/1392402573337635</guid>
      <description>&lt;p&gt;
Ahem, you guys. kurtpayne said that he knows the language needs reworking/actual attention.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>widgets.php.patch attached to Ticket #27129</title>
      
        <dc:creator>eliorivero</dc:creator>

      <pubDate>Fri, 14 Feb 2014 18:12:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27129/widgets.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27129/widgets.php.patch/1392401577828034</guid>
      <description>&lt;p&gt;
Inline PHPDocs and Hook Docs.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27129 (Hook Docs (18): wp-includes/widgets.php) created</title>
      
        <dc:creator>eliorivero</dc:creator>

      <pubDate>Fri, 14 Feb 2014 18:11:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27129</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27129/1392401480887217</guid>
      <description>&lt;p&gt;
Hi, first time contributing, hope I got this right.
&lt;/p&gt;
&lt;p&gt;
Added PHPDocs for class properties and public methods. Didn't touch the private ones.
&lt;/p&gt;
&lt;p&gt;
Added inline docs for hooks. Didn't touch the ones labeled as temporary_hook.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #20578 (Allow users to delete a plugin without uninstalling) updated</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Fri, 14 Feb 2014 18:04:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20578#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20578#comment:15/1392401086992033</guid>
      <description>&lt;p&gt;
Or a better answer of "No, delete only the files."
&lt;/p&gt;
&lt;p&gt;
Also why are we capitalizing 'Delete' here, following a comma?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27128 (Theme installator - ajax error message) created</title>
      
        <dc:creator>vinvin27</dc:creator>

      <pubDate>Fri, 14 Feb 2014 18:04:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27128</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27128/1392401068192315</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
I getting ajax error when i opening theme in new tab, only themes were loaded in ajax.
&lt;/p&gt;
&lt;p&gt;
If there are so many results, other themes are loading, opening in current tab is OK but in new tab i getting this message :
&lt;/p&gt;
&lt;pre class="wiki"&gt;{"rows":"
Aucun th\u00e8me ne correspond \u00e0 votre requ\u00eate.&amp;lt;\/div&amp;gt;"}
&lt;/pre&gt;&lt;p&gt;
Cheers :)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21300 (Implement autoloader compatible with PSR-0 / PSR-4 for plugins and themes) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Fri, 14 Feb 2014 18:01:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21300#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21300#comment:20/1392400894732358</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21300#comment:19" title="Comment 19"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It would be *very* sweet if, instead of needing to dig through a hodgepodge of files in order to locate a class, one could find &lt;code&gt;Foo_Bar_Baz&lt;/code&gt; in &lt;code&gt;Foo/Bar/Baz.php&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Please don't. Deep directory structures are a real pain to deal, especially when you are talking about a small number of files like with most plugins.
&lt;/p&gt;
&lt;p&gt;
That said, struggling to find classes is a problem I never see. What editor do you use?  Doesn't your editor give you tools to find classes easily?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26491 (Bundled themes: update to latest version of HTML5 Shiv) updated</title>
      
        <dc:creator>lancewillett</dc:creator>

      <pubDate>Fri, 14 Feb 2014 17:28:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26491#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26491#comment:4/1392398906741846</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26491#comment:2" title="Comment 2"&gt;wonderboymusic&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
anything stopping us from doing this
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sleep, other more urgent work. :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
why don't we bundle this in core and have all themes point at it?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Do we need to? It's lightweight and doesn't need updating very often.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27003 (Introduce wp_get_network() and begin cleanup of multisite load) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Fri, 14 Feb 2014 17:23:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27003#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27003#comment:14/1392398612905061</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27003#comment:13" title="Comment 13"&gt;TobiasBg&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
(happens, in theory, if there are no rows in &lt;code&gt;$wpdb-&amp;gt;site&lt;/code&gt;)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Would it make sense to use another &lt;code&gt;wp_die()&lt;/code&gt; here if the count is 0 to explain that no networks are setup?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>plugins.diff attached to Ticket #27127</title>
      
        <dc:creator>enej</dc:creator>

      <pubDate>Fri, 14 Feb 2014 17:18:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27127/plugins.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27127/plugins.diff/1392398299824857</guid>
      <description>&lt;p&gt;
Inline JavaScript on the plugins page.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27127 (Improve plugin search on installed plugins page) created</title>
      
        <dc:creator>enej</dc:creator>

      <pubDate>Fri, 14 Feb 2014 17:16:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27127</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27127/1392398213499705</guid>
      <description>&lt;p&gt;
If you have lots of plugins installed trying to find one in the installed plugin page is not quick. The search box is quite slow ( requires a page refresh ).
&lt;/p&gt;
&lt;p&gt;
Adding some JavaScript that transforms the current search box into a quickfind box would help solve this problem.
&lt;/p&gt;
&lt;p&gt;
As the user types a keyword the JavaScript searched across the displayed text for the plugin, only displaying the plugins that contain that keyword.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27116 (Some nav tab and media upload CSS broken in colors.css/wp-admin.css merge) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Fri, 14 Feb 2014 16:31:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27116#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27116#comment:8/1392395503051613</guid>
      <description>&lt;p&gt;
I think I know what I did here... My 3.8 test install was not on 3.8 anymore, for some reason... So, you are right. This does not happen on 3.8 and is therefore not a regression. The colors/wp-admin.css merge did not break anything here. I guess the tabs without the bottom border just looked weird to me. So, that part of the ticket is invalid. Sorry for the confusion.
&lt;/p&gt;
&lt;p&gt;
However, while investigating this, I noticed another minor glitch (also not a regression, so no top priority), which is easy to fix: When the &lt;code&gt;.nav-tab-active&lt;/code&gt; is in the bottom row of stacked tabs, the background of the non-active tabs spills into the active tab, as it's transparent. Its background color should simply become the same color as the bottom border.
See the attached screenshot.
&lt;/p&gt;
&lt;p&gt;
Finally, we have the background in the old media upload thickbox (which you can confirm, if I understand correctly).
&lt;/p&gt;
&lt;p&gt;
So, the new &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/27116/27116.3.patch" title="Attachment '27116.3.patch' in Ticket #27116"&gt;27116.3.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/27116/27116.3.patch" title="Download"&gt;​&lt;/a&gt; fixes that and the (newly discovered) &lt;code&gt;.nav-tab-active&lt;/code&gt; glitch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27116.3.patch attached to Ticket #27116</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Fri, 14 Feb 2014 16:31:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27116/27116.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27116/27116.3.patch/1392395479539244</guid>
      <description>&lt;p&gt;
Patch for old media upload thickbox and &lt;code&gt;nav-tab-active&lt;/code&gt; background
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>nav-tab-active-background-shine-through.png attached to Ticket #27116</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Fri, 14 Feb 2014 16:30:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27116/nav-tab-active-background-shine-through.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27116/nav-tab-active-background-shine-through.png/1392395436935109</guid>
      <description>&lt;p&gt;
Background of top nav tab shines through into active tab
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Tickets #20276,​27126 batch updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Fri, 14 Feb 2014 15:41:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=20276%2C27126</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=20276%2C27126/1392392490454138</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20276" title="#20276: task (blessed): Tie nonces and cookies to expirable sessions (closed: fixed)"&gt;#20276&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Tickets #27125,​3708 batch updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Fri, 14 Feb 2014 15:40:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=27125%2C3708</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=27125%2C3708/1392392417414176</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27125" title="#27125: enhancement: Neutral Errormessage in Login (closed: duplicate)"&gt;#27125&lt;/a&gt; was marked as a duplicate.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #27126 (Cookies should be invalidated on logout) created</title>
      
        <dc:creator>fkseven</dc:creator>

      <pubDate>Fri, 14 Feb 2014 15:35:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27126</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27126/1392392113647012</guid>
      <description>&lt;p&gt;
Currently cookies do not get invalidated on logout.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27125 (Neutral Errormessage in Login) created</title>
      
        <dc:creator>fkseven</dc:creator>

      <pubDate>Fri, 14 Feb 2014 15:32:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27125</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27125/1392391954063725</guid>
      <description>&lt;p&gt;
Response messages return by Login Form should be neutral making it impossible to identify valid users.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27122 (Optimization for PHP FPM) updated</title>
      
        <dc:creator>dunglas</dc:creator>

      <pubDate>Fri, 14 Feb 2014 13:54:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27122#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27122#comment:10/1392386080093297</guid>
      <description>&lt;p&gt;
This new patch (&lt;code&gt; shutdown_flush.diff &lt;/code&gt;) includes @Denis-de-Bernardy improvements but calls &lt;code&gt; wp_ob_end_flush_all() &lt;/code&gt; only if necessary.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>shutdown_flush.diff attached to Ticket #27122</title>
      
        <dc:creator>dunglas</dc:creator>

      <pubDate>Fri, 14 Feb 2014 13:53:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27122/shutdown_flush.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27122/shutdown_flush.diff/1392385981370743</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27078 (Use Autoprefixer for CSS vendor prefixes) closed</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Fri, 14 Feb 2014 13:38:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27078#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27078#comment:21/1392385097652090</guid>
      <description>fixed: &lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27078#comment:20" title="Comment 20"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Needs Safari 5.0 for iPad 1st gen and iPhone 3GS.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Safari in Autoprefixer's config refers to desktop Safari; mobile Safari is iOS. In testing, it makes no actual difference to specify it, because Android 2.1 requires just as many, if not more, -webkit- prefixes.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #27122 (Optimization for PHP FPM) updated</title>
      
        <dc:creator>dunglas</dc:creator>

      <pubDate>Fri, 14 Feb 2014 13:13:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27122#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27122#comment:9/1392383629987342</guid>
      <description>&lt;p&gt;
I agree to disable this optimization in debug mode, however the problem with your proposal is that &lt;code&gt; wp_ob_end_flush_all() &lt;/code&gt; is always called even when this is unnecessary.
&lt;/p&gt;
&lt;p&gt;
I'll provide a new batch ASAP.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27122#comment:8" title="Comment 8"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't like this patch. It makes it harder than it needs if you ever need or want to remove the flush function.
&lt;/p&gt;
&lt;p&gt;
Can I suggest the following instead?
&lt;/p&gt;
&lt;pre class="wiki"&gt;function wp_finish_request() {
    if (!WP_DEBUG &amp;amp;&amp;amp; function_exists('fastcgi_finish_request')) {
        fastcgi_finish_request();
    }
}
add_action('shutdown', 'wp_finish_request', 2);
&lt;/pre&gt;&lt;p&gt;
That function would need a docblock, too. The point is, it shouldn't be enabled when debugging, and a plugin should be able to remove it without worrying about its implementation details.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27003 (Introduce wp_get_network() and begin cleanup of multisite load) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Fri, 14 Feb 2014 11:56:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27003#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27003#comment:13/1392378986593267</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/27003/27003-docs-fix.patch" title="Attachment '27003-docs-fix.patch' in Ticket #27003"&gt;27003-docs-fix.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/27003/27003-docs-fix.patch" title="Download"&gt;​&lt;/a&gt; corrects inline docs param types and name.
&lt;/p&gt;
&lt;p&gt;
Then, in &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-includes/ms-load.php?rev=27178#L252"&gt;this line&lt;/a&gt;, we allow &lt;code&gt;$networks&lt;/code&gt; to be an empty array (happens, in theory, if there are no rows in &lt;code&gt;$wpdb-&amp;gt;site&lt;/code&gt;), but in &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-includes/ms-load.php?rev=27178#L253"&gt;the next line&lt;/a&gt; we access &lt;code&gt;$networks[0]&lt;/code&gt;. I'm not sure how likely that is to happen in practice, but we should probably avoid it to not trigger a notice.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27003-docs-fix.patch attached to Ticket #27003</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Fri, 14 Feb 2014 11:55:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27003/27003-docs-fix.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27003/27003-docs-fix.patch/1392378958656272</guid>
      <description>&lt;p&gt;
Fix docs for &lt;code&gt;wp_get_network()&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21300 (Implement autoloader compatible with PSR-0 / PSR-4 for plugins and themes) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 14 Feb 2014 10:50:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21300#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21300#comment:19/1392375025986531</guid>
      <description>&lt;p&gt;
Moreover, I'd argue that the main point in adding this is to guide plugin and theme devs into some level of structure when they develop. It would be *very* sweet if, instead of needing to dig through a hodgepodge of files in order to locate a class, one could find &lt;code&gt;Foo_Bar_Baz&lt;/code&gt; in &lt;code&gt;Foo/Bar/Baz.php&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21300 (Implement autoloader compatible with PSR-0 / PSR-4 for plugins and themes) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 14 Feb 2014 10:48:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21300#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21300#comment:18/1392374880730002</guid>
      <description>&lt;p&gt;
Fwiw, here's a simple autoloader that I'd love to see added to WP, so as to not need to constantly add the same lines of code in each plugin.
&lt;/p&gt;
&lt;p&gt;
Not that the lines are very long:
&lt;/p&gt;
&lt;pre class="wiki"&gt;# PSR-4 Autoloader
spl_autoload_register(function($class) {
    if ($class !== strstr($class, __NAMESPACE__ . '\\')) return;
    $file = substr($class, strlen(__NAMESPACE__));
    $file = str_replace('\\', DIRECTORY_SEPARATOR, $file) . '.php';
    $file = __DIR__ . DIRECTORY_SEPARATOR . 'src' . $file;
    if (file_exists($file)) {
        require $file;
    }
}, true);
&lt;/pre&gt;&lt;p&gt;
Still, I'd not need to constantly remember to copy/paste them if WP version offered something similar, e.g.:
&lt;/p&gt;
&lt;pre class="wiki"&gt;class WP_Autoloader
    function __construct($namespace, $path) {
        $this-&amp;gt;namespace = $namespace;
        $this-&amp;gt;path = $path;
    }
    function load($class) {
        if ($class !== strstr($class, $this-&amp;gt;namespace . '\\')) return;
        $file = substr($class, strlen($this-&amp;gt;namespace));
        $file = str_replace('\\', DIRECTORY_SEPARATOR, $file) . '.php';
        $file = $this-&amp;gt;path . $file;
        if (file_exists($file)) {
            require $file;
        }
    }
}
wp_register_autoloader($namespace, $path) {
    $loader = new WP_Autoloader($namespace, $path);
    spl_autoload_register(array($loader, 'load'), true);
}
&lt;/pre&gt;&lt;p&gt;
Or perhaps a variation of the above that accommodates prefixes instead of namespaces indifferently (I'll happily supply the patch if it's +1'ed). At any rate, I like this idea and think we should re-open the ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26879 (Friendlier welcome when installing WordPress) updated</title>
      
        <dc:creator>mrtortai</dc:creator>

      <pubDate>Fri, 14 Feb 2014 09:41:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26879#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26879#comment:11/1392370876709869</guid>
      <description>&lt;p&gt;
26879-5.patch is attached.
Small margin adjustment for small screens.
A little language cleanup/simplification throughout the install.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>26879-5.patch attached to Ticket #26879</title>
      
        <dc:creator>mrtortai</dc:creator>

      <pubDate>Fri, 14 Feb 2014 09:39:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26879/26879-5.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26879/26879-5.patch/1392370766149152</guid>
      <description>&lt;p&gt;
26879-5.patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27078 (Use Autoprefixer for CSS vendor prefixes) reopened</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 14 Feb 2014 09:33:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27078#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27078#comment:20/1392370400448912</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Safari &amp;gt;= 6.0
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Needs Safari 5.0 for iPad 1st gen and iPhone 3GS.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #20578 (Allow users to delete a plugin without uninstalling) updated</title>
      
        <dc:creator>grapplerulrich</dc:creator>

      <pubDate>Fri, 14 Feb 2014 08:15:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20578#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20578#comment:14/1392365727058993</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8783" title="#8783: enhancement: Plugin Uninstall - Make it optional to uninstall the plugin on delete ... (closed: invalid)"&gt;8783&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The second answer does not fully match the question.
&lt;/p&gt;
&lt;p&gt;
Are you sure you wish to delete these files and data?
Yes, Delete only the files.
&lt;/p&gt;
&lt;p&gt;
A better question would be "Are you sure you want to uninstall these plugins?"
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27122 (Optimization for PHP FPM) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 14 Feb 2014 08:13:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27122#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27122#comment:8/1392365600676481</guid>
      <description>&lt;p&gt;
I don't like this patch. It makes it harder than it needs if you ever need or want to remove the flush function.
&lt;/p&gt;
&lt;p&gt;
Can I suggest the following instead?
&lt;/p&gt;
&lt;pre class="wiki"&gt;function wp_finish_request() {
    if (!WP_DEBUG &amp;amp;&amp;amp; function_exists('fastcgi_finish_request')) {
        fastcgi_finish_request();
    }
}
add_action('shutdown', 'wp_finish_request', 2);
&lt;/pre&gt;&lt;p&gt;
That function would need a docblock, too. The point is, it shouldn't be enabled when debugging, and a plugin should be able to remove it without worrying about its implementation details.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27122 (Optimization for PHP FPM) updated</title>
      
        <dc:creator>dunglas</dc:creator>

      <pubDate>Fri, 14 Feb 2014 08:02:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27122#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27122#comment:7/1392364928587778</guid>
      <description>&lt;p&gt;
The new patch is attached (default-filters.diff).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>default-filters.diff attached to Ticket #27122</title>
      
        <dc:creator>dunglas</dc:creator>

      <pubDate>Fri, 14 Feb 2014 08:01:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27122/default-filters.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27122/default-filters.diff/1392364890908403</guid>
      <description>&lt;p&gt;
Updated patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27122 (Optimization for PHP FPM) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 14 Feb 2014 06:53:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27122#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27122#comment:6/1392360838595985</guid>
      <description>&lt;p&gt;
Nevermind my last comment: I just verified that the globals are still around. They still are in PHP 5.3.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27122 (Optimization for PHP FPM) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 14 Feb 2014 06:49:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27122#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27122#comment:5/1392360594092131</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27122 (Optimization for PHP FPM) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 14 Feb 2014 06:43:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27122#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27122#comment:4/1392360227765281</guid>
      <description>&lt;p&gt;
The reason that function is on the shutdown hook was that (in prior PHP versions at least) PHP would trash the various WP globals prior to calling output buffer-related callback functions.
&lt;/p&gt;
&lt;p&gt;
I'd advise to check if, with this function on the shutdown hook at priority 10, you can still see e.g. &lt;code&gt;$wpdb&lt;/code&gt; at priority 11. If not, adding the call will potentially break plugins that hook after it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27124 (A few more hooks would be desirable in the plugin list and plugin ...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 14 Feb 2014 06:38:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27124#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27124#comment:1/1392359889221375</guid>
      <description>&lt;p&gt;
Oh, another issue I got as:
&lt;/p&gt;
&lt;ol start="6"&gt;&lt;li&gt;There's no convenient means to inject plugin rows in &lt;code&gt;wp-admin/update-core.php&lt;/code&gt;.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>mc-muplugin-loader.php attached to Ticket #27124</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 14 Feb 2014 06:26:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27124/mc-muplugin-loader.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27124/mc-muplugin-loader.php/1392359218155141</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27124 (A few more hooks would be desirable in the plugin list and plugin ...) created</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 14 Feb 2014 06:26:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27124</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27124/1392359175184609</guid>
      <description>&lt;p&gt;
While working on the attached WP MU plugin loader, I encountered a few use-cases where I needed to hack into WP globals and resorting to some jQuery-fu due to the lack of plugin hooks in the WP plugin API.
&lt;/p&gt;
&lt;p&gt;
As the attached plugin will illustrate:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;There's no convenient means to request a version check for extra plugins in &lt;code&gt;wp_update_plugins()&lt;/code&gt;. One has to resort to filtering the http arguments
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;There's no convenient means to post-process the reply in the same function. One has to hook into e.g. &lt;code&gt;pre_set_site_transient_update_plugins&lt;/code&gt; to catch it before it gets stored.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="3"&gt;&lt;li&gt;There's no proper means to pre-process the contents of the plugins admin page so as to inject extra update notices. The only way to do so is to catch a random hook in there and manipulate the $plugins global.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="4"&gt;&lt;li&gt;When displaying plugin rows, it's not possible to remove the row's checkbox without resorting to javascript or an output buffer.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="5"&gt;&lt;li&gt;is_plugin_active() has no useful filter and/or incorrectly reports that mu-plugins are inactive
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #17923 (add_query_arg() should encode values) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Fri, 14 Feb 2014 04:26:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17923#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17923#comment:22/1392351996365112</guid>
      <description>&lt;p&gt;
I keep running into this issue, especially when trying to improve code security. You have to be really careful with this function if you don't want to create bad stuff.
&lt;/p&gt;
&lt;p&gt;
Maybe a better solution is to just introduce a new function, such as &lt;code&gt;add_encoded_query_arg()&lt;/code&gt; that encodes and then calls &lt;code&gt;add_query_arg()&lt;/code&gt;. That way we don't have to worry about passing yet another argument, especially when we would otherwise only pass 2 arguments. This also has the advantage of being able to deprecate &lt;code&gt;add_query_arg()&lt;/code&gt; down the road if we so wish.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26823 (wp_get_image_editor-&gt;multi_resize()) updated</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Fri, 14 Feb 2014 02:56:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26823#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26823#comment:42/1392346585243725</guid>
      <description>&lt;p&gt;
I have added a test for null and zero's
&lt;/p&gt;
&lt;p&gt;
I test that we get an empty array and that file count in folder doesn't change.
&lt;/p&gt;
&lt;p&gt;
But I feel that the re-size function doesn't do the right thing. If you pass both H and W as null/0 with a crop flag an rectangular image should be crop to a square image at the maxmim possible size.
&lt;/p&gt;
&lt;p&gt;
What do you think?
&lt;/p&gt;
&lt;p&gt;
Paul
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>multi_resize.patch attached to Ticket #26823</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Fri, 14 Feb 2014 02:50:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26823/multi_resize.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26823/multi_resize.patch/1392346240194760</guid>
      <description>&lt;p&gt;
patch with null and 0 test
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21300 (Implement autoloader compatible with PSR-0 / PSR-4 for plugins and themes) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Fri, 14 Feb 2014 01:28:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21300#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21300#comment:17/1392341330901408</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21300#comment:16" title="Comment 16"&gt;dave1010&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I understand a Composer-esque vendor system isn't the WordPress way. Perhaps I shouldn't have introduced that in this ticket :-).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Oh I hope you did not take any of my comments as personal criticism.   I too wanted exactly the same until recently after I implemented autoloading and tried to implement composer, and learned all that I did about it.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
...I think there's certain things that WordPress can do for developers who wants to follow PHP best practices without hindering site builders who cannot write PHP code.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed, in concept. Figuring out exactly what those things are is/has been the difficult part.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It's up to plugin and theme authors to structure their code how they want (inside their own wp-content/plugins/foo directory).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is the solution I was proposing. WordPress can't force plugins to use an autoloader, the same way WordPress can't force plugins to use &lt;code&gt;$wpdb&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think I wrote my comments poorly, because forcing developers was not something I was suggesting, and did not mean to imply.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As a developer if all my code (WordPress and other PHP) can follow the letter of the PSR autoloaders then it makes life much easier.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes your code can be structured to follow the letter of the PSR.  My assertion is that would mean you would need to split related code into two files each in order to load hooks but not load their related classes, and it would add required complexity to a plugin's directory &lt;em&gt;if&lt;/em&gt; the developer chose to use the autoloader.
&lt;/p&gt;
&lt;p&gt;
And yes it is the developer's choice, but an autoloader is pretty simple to implement so if a developer want to use one in their plugin nothing is stopping them from doing so right now.
&lt;/p&gt;
&lt;p&gt;
The questions about including in core are: Would the required structure be something WordPress core would want to advocate for, and would the benefits of the autoloader be worth it in the 80 percentile case? My opinion is  &lt;em&gt;"no"&lt;/em&gt; would be the answer to both of those questions.
&lt;/p&gt;
&lt;p&gt;
And personally I do not think there's a benefit to an autoloader in core &lt;em&gt;at this stage of WordPress' evolution.&lt;/em&gt; Maybe later, but not now.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Composer has multiple autoloaded roots in &lt;code&gt;vendor&lt;/code&gt;. WordPress would have them in &lt;code&gt;wp-content/plugins&lt;/code&gt;. I don't see how that's particularly different.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
When I tried implementing Composer and getting the directories to work in a WordPress friendly way required significantly complexity, way more than it should require and really fighting the natural approach of Composer.  Take a look at &lt;a class="ext-link" href="http://stackoverflow.com/a/13547137/102699"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;my StackOverflow question and my own followup answer&lt;/a&gt;. Note that I was discussing use with &lt;em&gt;(my own concept of) "libraries"&lt;/em&gt; but the structure would be the same for plugins. IMO that's too much complexity to bake into WordPress core.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is virtually identical to registering with a PSR-0/4 auto-loader.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Virtually identical and identical are like horseshoes and hand-grenades when it comes to specifications.  If you are following a spec you either follow it exactly or don't say you are following it.  There's a huge benefit to adopting a standard, but not when you have to fit a square peg in a round hole.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Requiring the plugin to know it's path from wp-content seems like a small overhead over just using &lt;code&gt;dirname(__FILE__)&lt;/code&gt; or &lt;code&gt;__DIR__&lt;/code&gt; though. I'm all for WordPress providing a simpler API to an autoloader, but it would be great if the actual autoloader was exposed too.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's just how I presented it in the example. The idea could work with either relative or absolute URLs, developer preference.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is there any reason plugins couldn't register and get access to autoloaded classes immediately if they wanted?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, but for what benefit?  If you are going to always load specific classes why not use a &lt;code&gt;require()&lt;/code&gt; instead of an autoloader?  Yes development might be simpler but I think you should at least hard code those &lt;code&gt;require()&lt;/code&gt;s for deployment.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Authors could always wrap the call to &lt;code&gt;register_autoload_path()&lt;/code&gt; in an &lt;code&gt;add_action()&lt;/code&gt; if they wanted.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not following why this would have value.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
PSR autoloading is already best practices for PHP in general, which I don't see any harm in WordPress at least providing minimal support for. No BC breaks are required and it's purely opt-in.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Because as I said, it's mostly a moot point given the current best practices in the WordPress community.  If WordPress were not so dependent on hooks being loaded on every page load then it would be different. But then it would not be WordPress.
&lt;/p&gt;
&lt;p&gt;
That said, you'll have to convince the core team members to do it if you want; I'm just like you here, another guy offering his opinion.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Plugins can already bootstrap themselves with their own PSR autoloader, or they could use one provided by WordPress. WordPress provides useful tools to plugins (like &lt;code&gt;$wpdb&lt;/code&gt;) so they don't have to reinvent the wheel every time. An autoloader would be a good addition IMO.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
How do you get an autoloader to be able to not load more than 50% of the classes on each page load? That's the question.  If we can tackle that then it might be a lot more clear that adding the extra overhead (in load time, maintenance cost, support issues when people autoloaded classes and hooks didn't get fired, etc.) would be worth it.
&lt;/p&gt;
&lt;p&gt;
How would I approach it?  I'd specify some well-known constants and methods for a class like &lt;code&gt;self::POST_TYPE&lt;/code&gt;, &lt;code&gt;self::ARGS()&lt;/code&gt; and &lt;code&gt;self::HOOKS()&lt;/code&gt; that allow a developer to register post types and add hooks &lt;em&gt;"declaratively"&lt;/em&gt; instead of using procedural code, and then on plugin activation I would load all classes and cache the information to allow all registrations and fixups on normal page load to occur without having to load any of the classes in which the information was defined.
&lt;/p&gt;
&lt;p&gt;
But that approach is nothing like anything else being done in core so I doubt the core team would adopt that approach in the foreseeable future.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Grepping a recent site build, there are 9 plugins (out of 22) that have calls to &lt;code&gt;spl_autoload_register&lt;/code&gt;! How many plugins would use their own DB abstraction layer if WordPress didn't provide &lt;code&gt;$wpdb&lt;/code&gt;?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'd really like to have a look at those plugins to see if in fact they are really benefitting from autoloading, or just instantiating most classes on every page load anyway. If I'm correct and it's the latter, maybe what we need to do &lt;em&gt;instead&lt;/em&gt; is to preach the people should &lt;em&gt;not&lt;/em&gt; use autoloaders with WordPress &lt;em&gt;(unless of course they address the issues I'm bringing up in their own plugin.)&lt;/em&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't think I follow this. Autoloading is just a more consistent and maintainable way of requiring classes. Instantiating them shouldn't be affected.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What I'm saying is that you get no benefit from an autoloader if you load the class files for each class on every page load &lt;em&gt;anyway.&lt;/em&gt; You will end up loading any classes that contain hooks that must be added every page load.
&lt;/p&gt;
&lt;p&gt;
I mentioned the instantiation only because that's what triggers an autoloader to load class files.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I really don't think the ability to to improve things like post type registration would be harmed by making this first step.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't follow how this relates.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As a plugin developer, having a standard autoloader would be a big victory.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'll say it again, it would be a &lt;a class="ext-link" href="https://en.wikipedia.org/wiki/Pyrrhic_victory"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Pyrrhic victory&lt;/a&gt; if the result is more complexity, increased page load times on average and increase support issues where plugins are published but they forget to test all logic paths and thus don't load classes that have needed hooks.
&lt;/p&gt;
&lt;p&gt;
BUT, who knows? Maybe I'm all wrong. Suggestion: If you believe this is important why not implement it as you think it should work and submit a patch. Then we can discuss specifics instead of just bikeshedding. And working code is a lot closer to being committed to core than ideas.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24067 (TinyMCE 4.0) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 14 Feb 2014 01:26:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24067#comment:128</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24067#comment:128/1392341211043336</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/24067#comment:126" title="Comment 126"&gt;programmin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Anyone else noticing that _WP_Editors::editor_settings doesn't output the plugin, when using add_filter( 'mce_external_plugins', 'myfunction' ,12,1);
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Your code works as expected here. TinyMCE 4.0 loads external plugins differently: there is a init setting &lt;code&gt;external_plugins: { 'plugin-name': 'url-to-the-plugin-file' }&lt;/code&gt; and WP_Editor sets that correctly.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This seems to be caused by this, around line 250 of class-wp-editor.php:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If you look closely you'll see that an old style translation file is not required. That code is there for back-compat only. These files are loaded only if set with the &lt;code&gt;'mce_external_languages'&lt;/code&gt; filter. Then each file is "marked as done" so TinyMCE doesn't try to load it again. Agree that keeping the old &lt;code&gt;$ext_plugins&lt;/code&gt; variable name is confusing. Not too late to change.
&lt;/p&gt;
&lt;p&gt;
The &lt;a class="ext-link" href="http://codex.wordpress.org/Plugin_API/Filter_Reference"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;codex page&lt;/a&gt; needs updating. You're welcome to update it too :)
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/24067#comment:127" title="Comment 127"&gt;josh401&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
No WP doesn't do anything to the toolbars or the buttons except overriding some of the font based icons in editor.css. Looks like a TinyMCE thing. Maybe use one of the "dashicons" or add the icon image as background from CSS? Both ways will need a little of CSS added to the page.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27123 (get_categories returning duplicate child categories in 3.9) created</title>
      
        <dc:creator>BStofko</dc:creator>

      <pubDate>Fri, 14 Feb 2014 00:45:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27123</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27123/1392338700988509</guid>
      <description>&lt;p&gt;
Executing the get_categories function for child categories returns duplicate entries in version 3.9. This worked in version 3.8.1 so this is something new.
&lt;/p&gt;
&lt;p&gt;
My call:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$terms = get_categories( array ('child_of' =&amp;gt; $cat));
&lt;/pre&gt;&lt;p&gt;
Under version 3.8.1 returns:
&lt;/p&gt;
&lt;pre class="wiki"&gt;terms: Array (
	[0] =&amp;gt; stdClass Object (
		[term_id] =&amp;gt; 7
		[name] =&amp;gt; Child Category I
		[slug] =&amp;gt; child-category-i
		[term_group] =&amp;gt; 0
		[term_taxonomy_id] =&amp;gt; 7
		[taxonomy] =&amp;gt; category
		[description] =&amp;gt;
		[parent] =&amp;gt; 4
		[count] =&amp;gt; 1
		[cat_ID] =&amp;gt; 7
		[category_count] =&amp;gt; 1
		[category_description] =&amp;gt;
		[cat_name] =&amp;gt; Child Category I
		[category_nicename] =&amp;gt; child-category-i
		[category_parent] =&amp;gt; 4
	)
)
&lt;/pre&gt;&lt;p&gt;
Under version 3.9 returns:
&lt;/p&gt;
&lt;pre class="wiki"&gt;terms: Array (
	[0] =&amp;gt; stdClass Object (
		[term_id] =&amp;gt; 7
		[name] =&amp;gt; Child Category I
		[slug] =&amp;gt; child-category-i
		[term_group] =&amp;gt; 0
		[term_taxonomy_id] =&amp;gt; 7
		[taxonomy] =&amp;gt; category
		[description] =&amp;gt;
		[parent] =&amp;gt; 4
		[count] =&amp;gt; 1
		[cat_ID] =&amp;gt; 7
		[category_count] =&amp;gt; 1
		[category_description] =&amp;gt;
		[cat_name] =&amp;gt; Child Category I
		[category_nicename] =&amp;gt; child-category-i
		[category_parent] =&amp;gt; 4
	)
	[4] =&amp;gt; stdClass Object (
		[term_id] =&amp;gt; 7
		[name] =&amp;gt; Child Category I
		[slug] =&amp;gt; child-category-i
		[term_group] =&amp;gt; 0
		[term_taxonomy_id] =&amp;gt; 7
		[taxonomy] =&amp;gt; category
		[description] =&amp;gt;
		[parent] =&amp;gt; 4
		[count] =&amp;gt; 1
		[object_id] =&amp;gt; 1746
		[filter] =&amp;gt; raw
		[cat_ID] =&amp;gt; 7
		[category_count] =&amp;gt; 1
		[category_description] =&amp;gt;
		[cat_name] =&amp;gt; Child Category I
		[category_nicename] =&amp;gt; child-category-i
		[category_parent] =&amp;gt; 4
	)
)
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27122 (Optimization for PHP FPM) updated</title>
      
        <dc:creator>dunglas</dc:creator>

      <pubDate>Fri, 14 Feb 2014 00:28:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27122#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27122#comment:3/1392337688977474</guid>
      <description>&lt;p&gt;
Sorry, I was not aware that this function is used in other places.
&lt;/p&gt;
&lt;p&gt;
I agree with your solution @dd32 except that this is better in a performance point of view to call &lt;code&gt; fastcgi_finish_request() &lt;/code&gt; before the last call to &lt;code&gt; ob_end_flush() &lt;/code&gt; and it's even better to not call it at all like in the Symfony implementation.
&lt;/p&gt;
&lt;p&gt;
A compromise can be to register &lt;code&gt; fastcgi_finish_request() &lt;/code&gt; to the shutdown hook with a priority of 1 if the function exists and (always if the function exists) to not register &lt;code&gt; wp_ob_end_flush_all() &lt;/code&gt; to this hook.
&lt;/p&gt;
&lt;p&gt;
This will maximizes performances on FPM and will not break existing code because the behavior of &lt;code&gt; wp_ob_end_flush_all() &lt;/code&gt; is not modified.
&lt;/p&gt;
&lt;p&gt;
If you think this solution is fine I'll submit a new patch tomorrow.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27122#comment:1" title="Comment 1"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't think this is a safe optimization to make unfortunately.
&lt;/p&gt;
&lt;p&gt;
Consider the scenario where &lt;code&gt;wp_ob_end_flush_all()&lt;/code&gt; is called mid-pageload by plugins for example, which we also do in core:
&lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-admin/includes/misc.php#L290"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-admin/includes/misc.php#L290&lt;/a&gt;
&lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-admin/includes/class-wp-upgrader-skins.php#L251"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-admin/includes/class-wp-upgrader-skins.php#L251&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Perhaps a safer option, would be to conditionally add &lt;code&gt;fastcgi_finish_request&lt;/code&gt; to the &lt;code&gt;shutdown&lt;/code&gt; action at priority 2? as you can see &lt;code&gt;wp_ob_end_flush_all ()&lt;/code&gt; being used here:
&lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-includes/default-filters.php#L250"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-includes/default-filters.php#L250&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
What do you think @dunglas?
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27110 (Allow filtering the plugin list in the admin) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Fri, 14 Feb 2014 00:27:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27110#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27110#comment:1/1392337621521625</guid>
      <description>&lt;p&gt;
I don't want to derail Ryan's emphasis for creating this ticket, but a non-core use case I can think of straight away is for &lt;a class="ext-link" href="http://tgmpluginactivation.com/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;TGM Plugin Activation&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
This is a set of classes that allow a theme to include a plugin (or a reference to a plugin on the .org repo) that is considered required or recommended for the theme i.e. a plugin that registers a CPT, instead of including it within the theme files. Theme Forest make a direct reference to it in their &lt;a class="ext-link" href="http://support.envato.com/index.php?/Knowledgebase/Article/View/472"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Theme Submission Requirements&lt;/a&gt;, so there are more than a handful of folks using it.
&lt;/p&gt;
&lt;p&gt;
TGMPA currently builds it's own page that &lt;a class="ext-link" href="http://tgmpluginactivation.com/images/plugin-table.png"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;shows&lt;/a&gt; the referenced plugins. Being able to filter these plugin references in to the standard plugins page, with some indicator that the plugins are not yet installed (which would be a new status to consider) would potentially make the user flow for those with themes using TGMPA to be considerably smoother.
&lt;/p&gt;
&lt;p&gt;
(Thomas Griffin is in the process of rewriting TGMPA into a new set of classes that accomplish the same thing with new features.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27122 (Optimization for PHP FPM) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 14 Feb 2014 00:23:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27122#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27122#comment:2/1392337432248175</guid>
      <description>&lt;p&gt;
Yeah, we wouldn't want this in wp_ob_end_flush_all(), but having it on shutdown before priority 10 seems fine to me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24067 (TinyMCE 4.0) updated</title>
      
        <dc:creator>josh401</dc:creator>

      <pubDate>Fri, 14 Feb 2014 00:14:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24067#comment:127</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24067#comment:127/1392336855620182</guid>
      <description>&lt;p&gt;
Hi Andrew,
&lt;/p&gt;
&lt;p&gt;
I'm adding a tinymce split button from one of my addons:
&lt;/p&gt;
&lt;pre class="wiki"&gt;editor.addButton('cleardiv', {
	type: 'splitbutton',
	tooltip: 'Clear Div',
	//text: 'Clear',
	image: url + '/images/cleardiv.gif',
	menu:
	[
		{
			text: 'Clear Left',
			onclick: function() { insertClear('left'); }  // Execute function to clear left
		},
		{
			text: 'Clear Right',
			onclick: function() { insertClear('right'); }  // Execute function to clear right
		},
		{
			text: 'Clear Both',
			onclick: function() { insertClear('both'); }  // Execute function to clear both
		}
	]
});
&lt;/pre&gt;&lt;p&gt;
I cannot seem to get the image for the icon to appear.  I've tried using the &lt;code&gt;image:&lt;/code&gt; and the &lt;code&gt;icon:&lt;/code&gt; settings... but nothing.  Everything else works perfectly.. just no image.  The text will display fine if I use that setting; but I'd prefer to use an icon.
&lt;/p&gt;
&lt;p&gt;
I see when adding a normal button, tinymce will add a style of &lt;code&gt;background-image&lt;/code&gt; to the button; which displays the icon.  I don't see this happening when it is a split button (the style isn't applied).
&lt;/p&gt;
&lt;p&gt;
Does WordPress filter this setting?  Or is it perhaps a tinymce bug?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26050 (Continual Admin Page POST (HeartBeats?) Can Cause SQL Connection Issues) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 14 Feb 2014 00:11:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26050#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26050#comment:8/1392336665615916</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
...it is definitely the large number of post lock refreshes via admin-ajax.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
One reason may be that refreshing the post lock writes to the DB. Unfortunately I don't see a way to make this less frequently. The locks "last" for 150 sec. If the browser window is "blurred", the next refresh will be in 120-135 sec. plus connection time.
&lt;/p&gt;
&lt;p&gt;
The only way to decrease the frequency of writing to the DB would be to (substantially) increase the time locks last. However that brings other problems: the lock should be released when the user navigates away from the Edit Post page. The only way this could be done is by another AJAX request, but since that request fires on window.unload, it is sometimes unsuccessful.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;jQuery(document).off('.refresh-lock');&lt;/code&gt; would work well. Another way would be from PHP by removing the filters &lt;code&gt;add_filter( 'heartbeat_received', 'wp_check_locked_posts', 10, 3 );&lt;/code&gt; and &lt;code&gt;add_filter( 'heartbeat_received', 'wp_refresh_post_lock', 10, 3 );&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Everything in Heartbeat is based on filters, both in JS and PHP, so controlling it should be easy. The same is true for &lt;code&gt;remove_filter( 'heartbeat_settings', 'wp_heartbeat_set_suspension' );&lt;/code&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I hope that as the Heartbeat API makes it into more features (i.e. autosave), that there can be some testing on high-traffic sites that intensively use the post editor.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This has been working on WordPress.com and other huge sites without noticeable increase of server load. Seems the most impact is on medium and large sites.
&lt;/p&gt;
&lt;p&gt;
Disabling the updates of post locks will certainly reduce server load as writing to the DB always takes more resources. Been thinking about ways to make that more efficient, perhaps storing the locks in persistent memory cache (when available) and "flushing" them to the DB every 30 min.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27122 (Optimization for PHP FPM) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 13 Feb 2014 23:59:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27122#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27122#comment:1/1392335963690915</guid>
      <description>&lt;p&gt;
I don't think this is a safe optimization to make unfortunately.
&lt;/p&gt;
&lt;p&gt;
Consider the scenario where &lt;code&gt;wp_ob_end_flush_all()&lt;/code&gt; is called mid-pageload by plugins for example, which we also do in core:
&lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-admin/includes/misc.php#L290"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-admin/includes/misc.php#L290&lt;/a&gt;
&lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-admin/includes/class-wp-upgrader-skins.php#L251"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-admin/includes/class-wp-upgrader-skins.php#L251&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Perhaps a safer option, would be to conditionally add &lt;code&gt;fastcgi_finish_request&lt;/code&gt; to the &lt;code&gt;shutdown&lt;/code&gt; action at priority 2? as you can see &lt;code&gt;wp_ob_end_flush_all ()&lt;/code&gt; being used here:
&lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-includes/default-filters.php#L250"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-includes/default-filters.php#L250&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
What do you think @dunglas?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27003 (Introduce wp_get_network() and begin cleanup of multisite load) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 23:06:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27003#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27003#comment:12/1392332773332408</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27178" title="Multisite: Add get_network_by_path() and wp_get_network() to begin ..."&gt;27178&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Multisite: Add get_network_by_path() and wp_get_network() to begin cleanup of multisite load.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Tries to get network detection under control by simplifying wpmu_current_site(). It now also pops off each subdomain to find a more general match. Adds unit tests for get_network_by_path() and a new network factory for unit tests.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Much of this is likely to change in 3.9 as more of ms-load.php and ms-settings.php gets hacked to bits.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
props jeremyfelt.&lt;br /&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27003" title="#27003: task (blessed): Introduce wp_get_network() and begin cleanup of multisite load (closed: fixed)"&gt;#27003&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [27178]: Multisite: Add get_network_by_path() and wp_get_network() to begin ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 23:06:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27178</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27178/1392332772202133</guid>
      <description>&lt;p&gt;
Multisite: Add get_network_by_path() and wp_get_network() to begin cleanup of multisite load.
&lt;/p&gt;
&lt;p&gt;
Tries to get network detection under control by simplifying wpmu_current_site(). It now also pops off each subdomain to find a more general match. Adds unit tests for get_network_by_path() and a new network factory for unit tests.
&lt;/p&gt;
&lt;p&gt;
Much of this is likely to change in 3.9 as more of ms-load.php and ms-settings.php gets hacked to bits.
&lt;/p&gt;
&lt;p&gt;
props jeremyfelt.
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27003" title="#27003: task (blessed): Introduce wp_get_network() and begin cleanup of multisite load (closed: fixed)"&gt;#27003&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>functions.diff attached to Ticket #27122</title>
      
        <dc:creator>dunglas</dc:creator>

      <pubDate>Thu, 13 Feb 2014 23:00:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27122/functions.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27122/functions.diff/1392332406881562</guid>
      <description>&lt;p&gt;
wp-includes/functions.php patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27122 (Optimization for PHP FPM) created</title>
      
        <dc:creator>dunglas</dc:creator>

      <pubDate>Thu, 13 Feb 2014 22:59:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27122</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27122/1392332361701176</guid>
      <description>&lt;p&gt;
This patch make &lt;code&gt; wp_ob_end_flush_all &lt;/code&gt; calling &lt;code&gt; fastcgi_finish_request &lt;/code&gt; instead of &lt;code&gt; ob_end_flush &lt;/code&gt; when php-fpm is used.
&lt;code&gt; fastcgi_finish_request &lt;/code&gt; flush the buffers &lt;strong&gt;and&lt;/strong&gt; close the connection. This tweak increases page speed.
It also allows to run heavy tasks such as sending mail, writing logs or making complex calculations after the end of the request without slowing down the whole page load.
&lt;/p&gt;
&lt;p&gt;
Symfony uses this tweak too, see this PR FOR further details: &lt;a class="ext-link" href="https://github.com/symfony/symfony/issues/1180"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/symfony/symfony/issues/1180&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27116 (Some nav tab and media upload CSS broken in colors.css/wp-admin.css merge) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 13 Feb 2014 22:27:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27116#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27116#comment:7/1392330443633701</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27116#comment:6" title="Comment 6"&gt;TobiasBg&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, this is a regression, as the tabs look like in your "after patch" screenshot in WP 3.8, so we should restore that look.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not seeing that - attached a screenshot from 3.8.1. There are two changes from your patch - there's the bottom border to the wrapper, yes, but then the other tabs above look like buttons, so that seems wrong.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Screen Shot 2014-02-13 at 5.24.06 PM.png attached to Ticket #27116</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 13 Feb 2014 22:25:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27116/Screen%20Shot%202014-02-13%20at%205.24.06%20PM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27116/Screen%20Shot%202014-02-13%20at%205.24.06%20PM.png/1392330306954703</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27116 (Some nav tab and media upload CSS broken in colors.css/wp-admin.css merge) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Thu, 13 Feb 2014 22:08:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27116#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27116#comment:6/1392329330384037</guid>
      <description>&lt;p&gt;
It will look worse if the text in the tabs has different lengths, as the tabs then overlap in a different way.
Also, this is a regression, as the tabs look like in your "after patch" screenshot in WP 3.8, so we should restore that look.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27116 (Some nav tab and media upload CSS broken in colors.css/wp-admin.css merge) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 13 Feb 2014 22:01:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27116#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27116#comment:5/1392328861585092</guid>
      <description>&lt;p&gt;
I'm not convinced that it looks any better to leave the border there. I uploaded some screenshots - I don't know how you're getting the image you attached. Horizontal tabs have responsive issues, yes, but I don't think the merge broke anything there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Screen Shot 2014-02-13 at 4.55.59 PM.png attached to Ticket #27116</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 13 Feb 2014 21:59:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27116/Screen%20Shot%202014-02-13%20at%204.55.59%20PM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27116/Screen%20Shot%202014-02-13%20at%204.55.59%20PM.png/1392328748576531</guid>
      <description>&lt;p&gt;
Wrapped tabs, after patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Screen Shot 2014-02-13 at 4.57.30 PM.png attached to Ticket #27116</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 13 Feb 2014 21:58:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27116/Screen%20Shot%202014-02-13%20at%204.57.30%20PM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27116/Screen%20Shot%202014-02-13%20at%204.57.30%20PM.png/1392328731886962</guid>
      <description>&lt;p&gt;
Wrapped tabs, before patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>27003.10.diff attached to Ticket #27003</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 21:22:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27003/27003.10.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27003/27003.10.diff/1392326551306244</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19393 (Image crop position) updated</title>
      
        <dc:creator>sccr410</dc:creator>

      <pubDate>Thu, 13 Feb 2014 20:58:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19393#comment:75</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19393#comment:75/1392325089693063</guid>
      <description>&lt;p&gt;
The point of this is for a specific custom image size, set a crop location. So I see absolutely no need for an editor to be involved with what is being asked here. I want to be able to create an image size that shrinks the image and crop is to the top - so people can start getting their foreheads back. This request is not asking to be able to upload an image and then manipulate all the various image sizes like the comp that @chriswallace posted. It is to have an option in the add_image_size function to set the crop position of the image which automatically is generated. Seems like people are over thinking this request.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19393 (Image crop position) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 13 Feb 2014 20:57:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19393#comment:74</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19393#comment:74/1392325077397414</guid>
      <description>&lt;p&gt;
And I think we are hijacking both tickets. There have been a few explorations around individual image size cropping here and there, and I love seeing them and would like to find the right solution, but I feel so bad that what should have been a straightforward change to allow &lt;strong&gt;programmatic&lt;/strong&gt; crop position definitions has thrown us down such a giant rabbithole.
&lt;/p&gt;
&lt;p&gt;
Being willing to iterate and get smaller, more achievable pieces done sooner is not antithetical to eventual larger changes. Can we please stop acting like it is?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19721 (WordPress should support multiple or nested plugin directories) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 13 Feb 2014 20:50:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19721#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19721#comment:5/1392324621613705</guid>
      <description>wontfix</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #19393 (Image crop position) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Thu, 13 Feb 2014 20:34:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19393#comment:73</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19393#comment:73/1392323680119440</guid>
      <description>&lt;p&gt;
I believe it's best for core to drop editing the image sizes. For me that is better for plugins to take care of. Also how it should be done in UI is something that should be addressed in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21811" title="#21811: task (blessed): Add image editing UI to the media modal (closed: fixed)"&gt;#21811&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19393 (Image crop position) updated</title>
      
        <dc:creator>helgatheviking</dc:creator>

      <pubDate>Thu, 13 Feb 2014 20:30:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19393#comment:72</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19393#comment:72/1392323441092508</guid>
      <description>&lt;p&gt;
+1 for Chris' mockup. I have need to be able to crop the different image sizes differently. I think I have used the Post Thumbnail Editor, but it didn't feel "native". The thing I might add would be a focal point... maybe the automatic cropping could be based on that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6331 (TinyMCE should have a code button) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Thu, 13 Feb 2014 20:28:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6331#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6331#comment:16/1392323281421675</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by cs_shadow. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-13&amp;amp;sort=asc#m791659"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27016 (Make placeholders/MCE views for Audio/Video shortcodes) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 13 Feb 2014 20:12:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27016#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27016#comment:10/1392322367071252</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27177" title="TinyMCE: add support for audio and video shortcodes without closing, ..."&gt;27177&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
TinyMCE: add support for audio and video shortcodes without closing, fix jshint warning, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27016" title="#27016: task (blessed): Make placeholders/MCE views for Audio/Video shortcodes (closed: fixed)"&gt;#27016&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [27177]: TinyMCE: add support for audio and video shortcodes without closing, ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 13 Feb 2014 20:12:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27177</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27177/1392322366394750</guid>
      <description>&lt;p&gt;
TinyMCE: add support for audio and video shortcodes without closing, fix jshint warning, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27016" title="#27016: task (blessed): Make placeholders/MCE views for Audio/Video shortcodes (closed: fixed)"&gt;#27016&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>27116.2.patch attached to Ticket #27116</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Thu, 13 Feb 2014 19:48:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27116/27116.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27116/27116.2.patch/1392320916252834</guid>
      <description>&lt;p&gt;
Corrected patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27116 (Some nav tab and media upload CSS broken in colors.css/wp-admin.css merge) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Thu, 13 Feb 2014 19:47:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27116#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27116#comment:4/1392320832102405</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Yes, the removed bottom border is for the individual tabs. This becomes necessary once the tabs wrap to two lines (due to their number). In that case, there's no &lt;code&gt;.nav-tab-active&lt;/code&gt; tab (which explicitely has a bottom border) that then basically pushes all the other ones up one pixel.
I'm using HTML like the following in a plugin (coming from the themes.php HTML for this from previous releases). You can try it with this &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; title on any admin screen (i.e. replace the first &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; in the &lt;code&gt;div.wrap&lt;/code&gt; in the Chrome Dev Tools, then reduce the browser width to make the tabs wrap):
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;h2 class="nav-tab-wrapper"&amp;gt;
&amp;lt;a class="nav-tab nav-tab-active" href="http://..."&amp;gt;Foobar&amp;lt;/a&amp;gt;&amp;lt;a class="nav-tab" href="http://..."&amp;gt;Foobar&amp;lt;/a&amp;gt;&amp;lt;a class="nav-tab" href="http://..."&amp;gt;Foobar&amp;lt;/a&amp;gt;&amp;lt;a class="nav-tab" href="http://..."&amp;gt;Foobar&amp;lt;/a&amp;gt;&amp;lt;a class="nav-tab" href="http://..."&amp;gt;Foobar&amp;lt;/a&amp;gt;
&amp;lt;a class="nav-tab" href="http://..."&amp;gt;Foobar&amp;lt;/a&amp;gt;&amp;lt;a class="nav-tab" href="http://..."&amp;gt;Foobar&amp;lt;/a&amp;gt;&amp;lt;a class="nav-tab" href="http://..."&amp;gt;Foobar&amp;lt;/a&amp;gt;&amp;lt;a class="nav-tab" href="http://..."&amp;gt;Foobar&amp;lt;/a&amp;gt;&amp;lt;a class="nav-tab" href="http://..."&amp;gt;Foobar&amp;lt;/a&amp;gt;
&amp;lt;/h2&amp;gt;
&lt;/pre&gt;&lt;p&gt;
For the Thickbox tabs:
You are right,&lt;code&gt;border-bottom&lt;/code&gt; is correct here. I had accidentally remove &lt;code&gt;-bottom&lt;/code&gt; as well and didn't notice that it adds the border around the entire &lt;code&gt;#media-upload-header&lt;/code&gt; as the colors are pretty similar.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14485 (Taxonomy hierarchy cache isn't properly refreshed) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 19:32:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14485#comment:90</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14485#comment:90/1392319966020656</guid>
      <description>&lt;p&gt;
I can get test_get_terms_grandparent_zero to fail in isolation, and consistently. It passes for me when the get_terms() there receives hide_empty =&amp;gt; false.
&lt;/p&gt;
&lt;p&gt;
Let's take the time to get this right (with patches for review) before another commit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19393 (Image crop position) updated</title>
      
        <dc:creator>rickalee</dc:creator>

      <pubDate>Thu, 13 Feb 2014 19:24:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19393#comment:71</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19393#comment:71/1392319488243232</guid>
      <description>&lt;p&gt;
Chris' illustration looks quite similar to workflow for Post Thumbnail Editor plugin.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://wordpress.org/plugins/post-thumbnail-editor/screenshots/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/plugins/post-thumbnail-editor/screenshots/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19393 (Image crop position) updated</title>
      
        <dc:creator>chriswallace</dc:creator>

      <pubDate>Thu, 13 Feb 2014 19:19:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19393#comment:70</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19393#comment:70/1392319181389903</guid>
      <description>&lt;p&gt;
So what if instead of adding a way to define the crop with a filter we instead give the user the ability to crop the various image sizes themselves?
&lt;/p&gt;
&lt;p&gt;
This is just a rough wireframe of the idea, but imagine uploading an image and being presented with this screen:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://f.cl.ly/items/0S3Q030o462E3X0R2r2v/crop-tool-single-image-upload.jpg"&gt;&lt;img src="http://f.cl.ly/items/0S3Q030o462E3X0R2r2v/crop-tool-single-image-upload.jpg" alt="http://f.cl.ly/items/0S3Q030o462E3X0R2r2v/crop-tool-single-image-upload.jpg" crossorigin="anonymous" title="http://f.cl.ly/items/0S3Q030o462E3X0R2r2v/crop-tool-single-image-upload.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The user would be able to preview the crop for all image sizes and decide if anything needs to be done, then if they decide to edit the crop, they would easily be able to do so for any image sizes added by themes, plugins or Core, all in one screen.
&lt;/p&gt;
&lt;p&gt;
I know there are workflow issues here for multiple images, but it could be an accordion drop-down type list for multiple images and perhaps allow users to bypass this entire screen by having a checkbox for "Crop my images automatically" that is enabled by default.
&lt;/p&gt;
&lt;p&gt;
The other issue is if users have Regenerate Thumbnails installed and are changing the dimensions of their images which could potentially screw up their manual cropping. There would need to be a way to edit the crops or set new ones if a user changes their theme and wants to continue using the images they already have loaded in.
&lt;/p&gt;
&lt;p&gt;
Anyway, just a thought. Take it or leave it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14485 (Taxonomy hierarchy cache isn't properly refreshed) updated</title>
      
        <dc:creator>bpetty</dc:creator>

      <pubDate>Thu, 13 Feb 2014 18:42:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14485#comment:89</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14485#comment:89/1392316942827393</guid>
      <description>&lt;p&gt;
Just for good measure, here's a number of Travis CI PHP 5.2 builds since this commit landed that show the same sort of random test failures throughout term-specific unit tests:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://travis-ci.org/tierra/wordpress/jobs/18787522#L888"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://travis-ci.org/tierra/wordpress/jobs/18787522#L888&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://travis-ci.org/tierra/wordpress/jobs/18788560#L1141"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://travis-ci.org/tierra/wordpress/jobs/18788560#L1141&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://travis-ci.org/tierra/wordpress/jobs/18789439#L1186"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://travis-ci.org/tierra/wordpress/jobs/18789439#L1186&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://travis-ci.org/tierra/wordpress/jobs/18790784#L1190"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://travis-ci.org/tierra/wordpress/jobs/18790784#L1190&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14485 (Taxonomy hierarchy cache isn't properly refreshed) updated</title>
      
        <dc:creator>bpetty</dc:creator>

      <pubDate>Thu, 13 Feb 2014 18:25:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14485#comment:88</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14485#comment:88/1392315948332859</guid>
      <description>&lt;p&gt;
You might need to run it a few times (it's not a consistent failure), Travis CI occasionally fails on other taxonomy tests related to caching too, and I can occasionally reproduce those locally as well:
&lt;/p&gt;
&lt;p&gt;
For example, running &lt;code&gt;phpunit --group taxonomy&lt;/code&gt; four times in a row on the same trunk revision:
&lt;a class="ext-link" href="https://gist.github.com/tierra/8980745"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gist.github.com/tierra/8980745&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Notably:
&lt;/p&gt;
&lt;pre class="wiki"&gt;1) Tests_Term_getTerms::test_get_terms_seven_levels_deep
Failed asserting that an array is not empty.
/vagrant/wordpress/tests/phpunit/tests/term/getTerms.php:311
&lt;/pre&gt;&lt;p&gt;
and
&lt;/p&gt;
&lt;pre class="wiki"&gt;1) Tests_Term_getTerms::test_get_terms_grandparent_zero
Failed asserting that an array is not empty.
/vagrant/wordpress/tests/phpunit/tests/term/getTerms.php:290
&lt;/pre&gt;&lt;p&gt;
FWIW, this is PHP 5.2.17
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27116 (Some nav tab and media upload CSS broken in colors.css/wp-admin.css merge) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 13 Feb 2014 18:09:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27116#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27116#comment:3/1392314960034298</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Also, I would go with just border-bottom as per before with div#media-upload-header - uploaded an amended patch for you to go from if we need to do more for the nav tab issue you described.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27116.diff attached to Ticket #27116</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 13 Feb 2014 18:08:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27116/27116.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27116/27116.diff/1392314902393616</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27116 (Some nav tab and media upload CSS broken in colors.css/wp-admin.css merge) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 13 Feb 2014 18:07:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27116#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27116#comment:2/1392314865533685</guid>
      <description>&lt;p&gt;
I'm not having the issue with the nav tabs bottom border elsewhere - the border-bottom you removed is for an individual tab, not the entire wrapper. Where are you seeing this?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26936 (Create new dashicons) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 13 Feb 2014 18:00:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26936#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26936#comment:25/1392314437931031</guid>
      <description>&lt;p&gt;
Updated dashicons files: &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/26936/" title="Attachments of Ticket #26936"&gt;dashicons-update_2-13.zip&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/26936/" title="Download"&gt;​&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Courtesy of empireoflight.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>dashicons-update_2-13.zip attached to Ticket #26936</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 13 Feb 2014 18:00:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26936/dashicons-update_2-13.zip</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26936/dashicons-update_2-13.zip/1392314406484399</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Tickets #25169,​27078,​27121 batch updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 17:56:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=25169%2C27078%2C27121</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=25169%2C27078%2C27121/1392314190527508</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27176" title="Add `grunt precommit` for running front-end dev and test tasks before ..."&gt;27176&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Add &lt;code&gt;grunt precommit&lt;/code&gt; for running front-end dev and test tasks before commit.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This includes autoprefixer, imagemin, jshint, and qunit.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
props jorbin.&lt;br /&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27121" title="#27121: enhancement: Add a grunt task that encompasses all pre-commit activities (closed: fixed)"&gt;#27121&lt;/a&gt;. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25169" title="#25169: enhancement: Optimize all images / pngs in core (closed: fixed)"&gt;#25169&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27078" title="#27078: task (blessed): Use Autoprefixer for CSS vendor prefixes (closed: fixed)"&gt;#27078&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [27176]: Add `grunt precommit` for running front-end dev and test tasks before ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 17:56:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27176</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27176/1392314189088571</guid>
      <description>&lt;p&gt;
Add &lt;code&gt;grunt precommit&lt;/code&gt; for running front-end dev and test tasks before commit.
&lt;/p&gt;
&lt;p&gt;
This includes autoprefixer, imagemin, jshint, and qunit.
&lt;/p&gt;
&lt;p&gt;
props jorbin.
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27121" title="#27121: enhancement: Add a grunt task that encompasses all pre-commit activities (closed: fixed)"&gt;#27121&lt;/a&gt;. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25169" title="#25169: enhancement: Optimize all images / pngs in core (closed: fixed)"&gt;#25169&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27078" title="#27078: task (blessed): Use Autoprefixer for CSS vendor prefixes (closed: fixed)"&gt;#27078&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #27121 (Add a grunt task that encompasses all pre-commit activities) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 17:49:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27121#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27121#comment:4/1392313745018040</guid>
      <description>&lt;p&gt;
Patch updated based on irc conversation.  It is only focussing on front end tasks and phpunit takes a while, so we are leaving that off.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26936 (Create new dashicons) updated</title>
      
        <dc:creator>scamartist26</dc:creator>

      <pubDate>Thu, 13 Feb 2014 17:48:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26936#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26936#comment:24/1392313699152894</guid>
      <description>&lt;p&gt;
Octocat would be a great addition to the core set of social networks. &lt;a class="ext-link" href="https://github.com/logos"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/logos&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27121.2.diff attached to Ticket #27121</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 17:41:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27121/27121.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27121/27121.2.diff/1392313299123892</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14485 (Taxonomy hierarchy cache isn't properly refreshed) updated</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 17:40:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14485#comment:87</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14485#comment:87/1392313236853798</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14485#comment:86" title="Comment 86"&gt;bpetty&lt;/a&gt;: that's strange. Any more info would be helpful, I get the green light on 5.2.14:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$ /opt/php/5.2.14/bin/php /usr/bin/phpunit tests/phpunit/tests/term/cache.php
OK (3 tests, 300 assertions)
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27121 (Add a grunt task that encompasses all pre-commit activities) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Thu, 13 Feb 2014 17:30:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27121#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27121#comment:3/1392312602478408</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by jorbin. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-13&amp;amp;sort=asc#m791485"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27078 (Use Autoprefixer for CSS vendor prefixes) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Thu, 13 Feb 2014 17:30:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27078#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27078#comment:18/1392312602195979</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by jorbin. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-13&amp;amp;sort=asc#m791484"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25169 (Optimize all images / pngs in core) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Thu, 13 Feb 2014 17:30:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25169#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25169#comment:14/1392312601796466</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by jorbin. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-13&amp;amp;sort=asc#m791483"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27121 (Add a grunt task that encompasses all pre-commit activities) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 17:27:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27121#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27121#comment:2/1392312471222162</guid>
      <description>&lt;p&gt;
I had this locally already. Nice. :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27121 (Add a grunt task that encompasses all pre-commit activities) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 17:27:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27121#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27121#comment:1/1392312429791549</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The above patch sets four tasks (one of which contains multiple tasks) that are to be run.
&lt;/p&gt;
&lt;p&gt;
AutoPrefixer:core ( see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27078" title="#27078: task (blessed): Use Autoprefixer for CSS vendor prefixes (closed: fixed)"&gt;#27078&lt;/a&gt; )
imagemin:core ( see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25169" title="#25169: enhancement: Optimize all images / pngs in core (closed: fixed)"&gt;#25169&lt;/a&gt; )
jshnit
test (which runs both the phpunit tests and the qunit tests )
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27121.diff attached to Ticket #27121</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 17:24:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27121/27121.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27121/27121.diff/1392312249637785</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27121 (Add a grunt task that encompasses all pre-commit activities) created</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 17:23:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27121</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27121/1392312228404746</guid>
      <description>&lt;p&gt;
In &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25169" title="#25169: enhancement: Optimize all images / pngs in core (closed: fixed)"&gt;#25169&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27078" title="#27078: task (blessed): Use Autoprefixer for CSS vendor prefixes (closed: fixed)"&gt;#27078&lt;/a&gt; , it is mentioned that autoprefixer and imagemin are designed to be run before commit. We should consolidate all the tasks that we expect to be run before a commit into one task so none of them are forgotten.
&lt;/p&gt;
&lt;p&gt;
This also makes it so patch creators can run the same steps as committers which will hopefully lead to to better patches that are easier to review and commit.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27119 (disabling wp_auth_check_load does not actually disable the auth check) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Thu, 13 Feb 2014 16:13:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27119#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27119#comment:2/1392308006766353</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/26050" title="#26050: defect (bug): Continual Admin Page POST (HeartBeats?) Can Cause SQL Connection Issues (new)"&gt;#26050&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>screen-shot-2014-02-13-at-9-58-30-am.png attached to Ticket #26952</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 13 Feb 2014 15:50:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26952/screen-shot-2014-02-13-at-9-58-30-am.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26952/screen-shot-2014-02-13-at-9-58-30-am.png/1392306621887474</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #20446 (Add comment form submit button class attribute) reopened</title>
      
        <dc:creator>ktabori</dc:creator>

      <pubDate>Thu, 13 Feb 2014 15:38:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20446#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20446#comment:6/1392305935949473</guid>
      <description>&lt;p&gt;
Id is not a class and this ticket isn't duplicate.
&lt;/p&gt;
&lt;p&gt;
It's a missed feature for templating, if you use bootstrap or other templating/css frameworks.
&lt;/p&gt;
&lt;p&gt;
I have tested the patch and it works fine.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #27119 (disabling wp_auth_check_load does not actually disable the auth check) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Thu, 13 Feb 2014 15:25:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27119#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27119#comment:1/1392305144653545</guid>
      <description>&lt;p&gt;
You could do this, which disables the check entirely, but there will still be a heartbeat connection.
&lt;/p&gt;
&lt;pre class="wiki"&gt;remove_action( 'admin_enqueue_scripts', 'wp_auth_check_load' );
remove_filter( 'heartbeat_send',        'wp_auth_check' );
remove_filter( 'heartbeat_nopriv_send', 'wp_auth_check' );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21352 (wp_lostpassword_url() on multisite) updated</title>
      
        <dc:creator>amandafrench</dc:creator>

      <pubDate>Thu, 13 Feb 2014 15:11:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21352#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21352#comment:16/1392304286735436</guid>
      <description>&lt;p&gt;
Thanks for these patches -- they've solved this annoying issue on my network.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21352#comment:10" title="Comment 10"&gt;jamescollins&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21352#comment:9" title="Comment 9"&gt;jeremyfelt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21352#comment:3" title="Comment 3"&gt;wpmuguru&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I would prefer to see this send the link for the user's primary blog if they have one and the current site when they don't.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1 for this approach.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;code&gt;21352.diff&lt;/code&gt; implements this suggestion.
&lt;/p&gt;
&lt;p&gt;
If using WordPress multisite, use the user's primary blog (falling back to the current site when they don't have a primary blog).
If no-one is logged in, then the current site is used.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23292 (Media uploader loads full size image and slows down, please change to ...) updated</title>
      
        <dc:creator>leemon</dc:creator>

      <pubDate>Thu, 13 Feb 2014 14:48:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23292#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23292#comment:18/1392302913939119</guid>
      <description>&lt;p&gt;
It might be a good idea to default to the "Uploaded to this post" view instead of the "All Media Items" like it is now, too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>26821.2.diff attached to Ticket #26821</title>
      
        <dc:creator>enej</dc:creator>

      <pubDate>Thu, 13 Feb 2014 13:49:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26821/26821.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26821/26821.2.diff/1392299364017426</guid>
      <description>&lt;p&gt;
Second pass at screen.php file
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27115 (HTTPS links to wordpress.org) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 13 Feb 2014 10:33:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27115#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27115#comment:4/1392287599901832</guid>
      <description>&lt;p&gt;
There's a good deal more than this. There's &lt;code&gt;codex.wordpress.org&lt;/code&gt;, &lt;code&gt;make.wordpress.org&lt;/code&gt;, and &lt;code&gt;planet.wordpress.org&lt;/code&gt; links too.
&lt;/p&gt;
&lt;p&gt;
Additionally, the feed URLs in &lt;code&gt;wp-admin/includes/dashboard.php&lt;/code&gt; shouldn't change in case the site can't perform outgoing SSL requests.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26944 (Dashboard "At a glance" widget ignores get_avatar_comment_types filter) updated</title>
      
        <dc:creator>zodiac1978</dc:creator>

      <pubDate>Thu, 13 Feb 2014 10:17:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26944#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26944#comment:4/1392286671224291</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26944#comment:3" title="Comment 3"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Looks good. But it's more an enhancement.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think it is a bug, because if you add gravatar comment_types per filter you should get avatars for this comment_type in all places. But the widget does not show them.
&lt;/p&gt;
&lt;p&gt;
As an alternative the widget could use the same way as the get_avatar function in pluggable.php to check how to handle the comment (e.g. use the same filter to add comment_types, check for ID/email instead of just checking comment_type).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27120 (Add object cache to wp_nav_menu() items) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Thu, 13 Feb 2014 09:46:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27120#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27120#comment:2/1392284762683119</guid>
      <description>&lt;p&gt;
There seems to be an object cache for the default fallback, so if your &lt;code&gt;theme_location&lt;/code&gt; isn't found, when nobody picked a menu location in the admin-ui, caching occurs as it should.
&lt;/p&gt;
&lt;p&gt;
If someone has defined the menu location and it matches &lt;code&gt;theme_location&lt;/code&gt;, there is no caching done pre-patch.
&lt;/p&gt;
&lt;p&gt;
The two queries being ran with each iteration of wp_nav_menu() as mentioned;
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT
	tr.object_id
FROM
	wp_term_relationships AS tr
INNER JOIN
	wp_term_taxonomy AS tt
		ON tr.term_taxonomy_id = tt.term_taxonomy_id
WHERE
	tt.taxonomy IN ('nav_menu')
AND
	tt.term_id IN ('2')
ORDER BY
	tr.object_id ASC
&lt;/pre&gt;&lt;p&gt;
and
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT
	wp_posts.*
FROM
	wp_posts
WHERE
	1=1
AND
	wp_posts.ID IN (35,36,38,39,50,51,118,130,131,132,133,134)
AND
	wp_posts.post_type = 'nav_menu_item'
AND
	((wp_posts.post_status = 'publish'))
ORDER BY
	wp_posts.menu_order ASC
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27016 (Make placeholders/MCE views for Audio/Video shortcodes) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 13 Feb 2014 09:24:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27016#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27016#comment:9/1392283444657848</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
...when written by hand, I always exclude them.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Then the regex will be quite a bit more interesting. Will need a recursion or a loop to catch edge cases like &lt;code&gt;[audio src="1.mp3"][audio src="2.mp3"][audio src="3.mp3"][/audio]&lt;/code&gt;. Will fix it tomorrow.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [27175]: Dev/build tools: Skip new backbone.js and underscore.js files during ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 08:58:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27175</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27175/1392281897752257</guid>
      <description>&lt;p&gt;
Dev/build tools: Skip new backbone.js and underscore.js files during jshint.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #24705 (wp_link_pages() does not showing active current element) updated</title>
      
        <dc:creator>danielpataki</dc:creator>

      <pubDate>Thu, 13 Feb 2014 08:36:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24705#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24705#comment:9/1392280606665390</guid>
      <description>&lt;p&gt;
Hi All,
&lt;/p&gt;
&lt;p&gt;
I've uploaded an alternate patch, I was wondering if it may be better to name the class differently. I think &lt;code&gt;current-page-link&lt;/code&gt; is a better class name, however &lt;code&gt;paginate_links()&lt;/code&gt; creates links which have the &lt;code&gt;current&lt;/code&gt; class. In addition, I've added the class &lt;code&gt;page-numbers&lt;/code&gt; to the individual links and the current span as well.
&lt;/p&gt;
&lt;p&gt;
This way the output of this function will be compatible with the &lt;code&gt;paginate_links()&lt;/code&gt; function which allows for standardized CSS when developing themes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>post-template.diff attached to Ticket #24705</title>
      
        <dc:creator>danielpataki</dc:creator>

      <pubDate>Thu, 13 Feb 2014 08:34:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/24705/post-template.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/24705/post-template.diff/1392280447189480</guid>
      <description>&lt;p&gt;
Alternate Patch For Issue - different class name
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27078 (Use Autoprefixer for CSS vendor prefixes) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 08:29:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27078#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27078#comment:17/1392280157504740</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27174" title="Dev/build tools: Use grunt-autoprefixer for CSS vendor prefixes.
 ..."&gt;27174&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Dev/build tools: Use grunt-autoprefixer for CSS vendor prefixes.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
We'll be using it for two distinct tasks:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Core CSS files will keep prefixes. &lt;code&gt;grunt autoprefixer:core&lt;/code&gt; will update files directly in src/ as a pre-commit step, rather than doing it on build.
&lt;/li&gt;&lt;li&gt;Color CSS files will receive prefixes when they are built.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This commit:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Adds prefixes we were missing to core CSS.
&lt;/li&gt;&lt;li&gt;Removes prefixes that we no longer need from core CSS.
&lt;/li&gt;&lt;li&gt;Removes all prefixes from colors CSS.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
props ocean90.&lt;br /&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27078" title="#27078: task (blessed): Use Autoprefixer for CSS vendor prefixes (closed: fixed)"&gt;#27078&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [27174]: Dev/build tools: Use grunt-autoprefixer for CSS vendor prefixes.  ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 08:29:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27174</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27174/1392280156881806</guid>
      <description>&lt;p&gt;
Dev/build tools: Use grunt-autoprefixer for CSS vendor prefixes.
&lt;/p&gt;
&lt;p&gt;
We'll be using it for two distinct tasks:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Core CSS files will keep prefixes. &lt;code&gt;grunt autoprefixer:core&lt;/code&gt; will update files directly in src/ as a pre-commit step, rather than doing it on build.
&lt;/li&gt;&lt;li&gt;Color CSS files will receive prefixes when they are built.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This commit:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Adds prefixes we were missing to core CSS.
&lt;/li&gt;&lt;li&gt;Removes prefixes that we no longer need from core CSS.
&lt;/li&gt;&lt;li&gt;Removes all prefixes from colors CSS.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
props ocean90.
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27078" title="#27078: task (blessed): Use Autoprefixer for CSS vendor prefixes (closed: fixed)"&gt;#27078&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Tickets #26916,​27078 batch updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 08:27:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=26916%2C27078</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=26916%2C27078/1392280027357032</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26916" title="#26916: enhancement: Remove -webkit-box-shadow (closed: duplicate)"&gt;#26916&lt;/a&gt; was marked as a duplicate.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #27112 (Add widget management to the customizer) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 08:18:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27112#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27112#comment:8/1392279528209767</guid>
      <description>&lt;p&gt;
That said, as long as we tracked and deleted add_option() calls, we could delete them after. That would solve our future defaults issue and would allow for a rollback for the conditional initialization issue. It would be muuch simpler than the older transaction methods, at least.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27112 (Add widget management to the customizer) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 08:17:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27112#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27112#comment:7/1392279459981929</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27112#comment:6" title="Comment 6"&gt;westonruter&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Note that it does not currently support &lt;code&gt;add_option&lt;/code&gt;, for which there may be instances of a single widget declaring the option it saves into up front.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
On the other hand: since these are single-instance widgets, if the widget is already in use, then capturing update_option() is enough. If the widget is not in use, we don't care strongly if add_option() gets used. I see two potential side effects: if an option is conditionally (and oddly) initialized (low severity), and that it has the potential to mess with future defaults (low severity but probably pretty weird if you encountered it).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24067 (TinyMCE 4.0) updated</title>
      
        <dc:creator>programmin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 08:17:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24067#comment:126</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24067#comment:126/1392279448979732</guid>
      <description>&lt;p&gt;
Anyone else noticing that _WP_Editors::editor_settings doesn't output the plugin, when using
&lt;/p&gt;
&lt;p&gt;
add_filter( 'mce_external_plugins', 'myfunction' ,12,1);
&lt;/p&gt;
&lt;p&gt;
Myfunction being a function something like
&lt;/p&gt;
&lt;pre class="wiki"&gt;function myfunction($plugin_array) {
   $plugin_array['pluginid'] = url to js
   return $plugin_array
 }
&lt;/pre&gt;&lt;p&gt;
As documented here: &lt;a class="ext-link" href="http://codex.wordpress.org/Plugin_API/Filter_Reference/mce_external_plugins"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Plugin_API/Filter_Reference/mce_external_plugins&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Although I see the pluginid in the mceInit, I don't see the url referenced anywhere in the source of the page. On a frontend page, if that matters.
&lt;/p&gt;
&lt;p&gt;
Is this a bug, or does MCE4 require different behavior? Update: This seems to be caused by this, around line 250 of class-wp-editor.php:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( ! empty( $mce_external_plugins ) ) {
						/**
						 * This filter loads translations for external TinyMCE 3.x plugins.
						 *
						 * Takes an associative array 'plugin_name' =&amp;gt; 'path', where path is the
						 * include path to the file. The language file should follow the same format as
						 * wp_mce_translation() and should define a variable $strings that
						 * holds all translated strings.
						 */
&lt;/pre&gt;&lt;p&gt;
(It continues to load the plugin, IF a translation is specified. Custom mce_external_language wasn't required before, to load mce_external_plugins.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25169 (Optimize all images / pngs in core) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 08:06:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25169#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25169#comment:13/1392278796812782</guid>
      <description>&lt;p&gt;
I'm with wonderboymusic on this being a pre-commit tool rather than a build tool. It can essentially be in the same boat as autoprefixer (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27078" title="#27078: task (blessed): Use Autoprefixer for CSS vendor prefixes (closed: fixed)"&gt;#27078&lt;/a&gt;). Maybe we'll hook it up to build later, but I think just having the task there is a good first step.
&lt;/p&gt;
&lt;p&gt;
Since it'll be applying these changes directly to files in &lt;code&gt;src&lt;/code&gt;, we need to be really restrictive of which images we apply them to. I made it imagemin:core as imagemin:themes makes sense in the future. That said, all of our theme screenshots are currently perfect, and the optimization of jpeg header images and such is something that is done by hand — balancing quality for file size. So rather than coming up with a rule that would essentially be just screenshots, I left it out for the moment.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27112 (Add widget management to the customizer) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 13 Feb 2014 08:04:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27112#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27112#comment:6/1392278697541786</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm curious whether the options transaction component is necessary. We built the customizer originally by simply storing values and passing them through option_* filters on the fly. I've looked at this a few times now, and I'm not sure what I'm missing?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As per our wordpress-dev chat today, I've reworked the Options Transactions into an Option Capture functionality. With the patch above applied to core, the following change to the plugin can be applied: &lt;a class="ext-link" href="https://github.com/x-team/wp-widget-customizer/compare/eliminate-options-transactions"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/x-team/wp-widget-customizer/compare/eliminate-options-transactions&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Note that it does not currently support &lt;code&gt;add_option&lt;/code&gt;, for which there may be instances of a single widget declaring the option it saves into up front.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25169 (Optimize all images / pngs in core) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 08:02:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25169#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25169#comment:12/1392278569739362</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27173" title="Optimize 69 images (of 127) using the new Grunt task. (See [27172].)
 ..."&gt;27173&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Optimize 69 images (of 127) using the new Grunt task. (See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27172" title="Dev tools: Add `grunt imagemin:core` task for optimizing images ..."&gt;[27172]&lt;/a&gt;.)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25169" title="#25169: enhancement: Optimize all images / pngs in core (closed: fixed)"&gt;#25169&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [27173]: Optimize 69 images (of 127) using the new Grunt task. (See [27172].)  ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 08:02:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27173</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27173/1392278568749452</guid>
      <description>&lt;p&gt;
Optimize 69 images (of 127) using the new Grunt task. (See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27172" title="Dev tools: Add `grunt imagemin:core` task for optimizing images ..."&gt;[27172]&lt;/a&gt;.)
&lt;/p&gt;
&lt;p&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25169" title="#25169: enhancement: Optimize all images / pngs in core (closed: fixed)"&gt;#25169&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #25169 (Optimize all images / pngs in core) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 08:00:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25169#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25169#comment:11/1392278448388449</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27172" title="Dev tools: Add `grunt imagemin:core` task for optimizing images ..."&gt;27172&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Dev tools: Add &lt;code&gt;grunt imagemin:core&lt;/code&gt; task for optimizing images pre-commit.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Adds grunt-contrib-imagemin, so an &lt;code&gt;npm install&lt;/code&gt; will be required.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
props jorbin, wonderboymusic for initial patches.&lt;br /&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25169" title="#25169: enhancement: Optimize all images / pngs in core (closed: fixed)"&gt;#25169&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [27172]: Dev tools: Add `grunt imagemin:core` task for optimizing images ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 08:00:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27172</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27172/1392278447402537</guid>
      <description>&lt;p&gt;
Dev tools: Add &lt;code&gt;grunt imagemin:core&lt;/code&gt; task for optimizing images pre-commit.
&lt;/p&gt;
&lt;p&gt;
Adds grunt-contrib-imagemin, so an &lt;code&gt;npm install&lt;/code&gt; will be required.
&lt;/p&gt;
&lt;p&gt;
props jorbin, wonderboymusic for initial patches.
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25169" title="#25169: enhancement: Optimize all images / pngs in core (closed: fixed)"&gt;#25169&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>option.php.diff attached to Ticket #27112</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 13 Feb 2014 08:00:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27112/option.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27112/option.php.diff/1392278410330899</guid>
      <description>&lt;p&gt;
Add pre_update_option filter to update_option()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27120 (Add object cache to wp_nav_menu() items) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Thu, 13 Feb 2014 07:59:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27120#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27120#comment:1/1392278342403223</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by Clorith. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-13&amp;amp;sort=asc#m791213"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27120.patch attached to Ticket #27120</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Thu, 13 Feb 2014 07:56:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27120/27120.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27120/27120.patch/1392278213436617</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27120 (Add object cache to wp_nav_menu() items) created</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Thu, 13 Feb 2014 07:47:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27120</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27120/1392277678865151</guid>
      <description>&lt;p&gt;
Leveraging &lt;code&gt;$menu_items&lt;/code&gt; in the wp_nav_menu() function call with the Object Cache shows a drop in queries by 2 for each consecutive call for a specific &lt;code&gt;theme_location&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Might need a bit more intense testing to ensure it doesn't negatively impact anything else using the function, but from a front facing side of things it has s ofar not showed any negative effect in my tests.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #26799 (Update to Backbone.js 1.1.0) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 07:36:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26799#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26799#comment:16/1392276962055242</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27171" title="Update media-views and wp.Backbone.View for Backbone 1.1.
 * ..."&gt;27171&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Update media-views and wp.Backbone.View for Backbone 1.1.&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Collection set/add/remove/reset methods now return models, not &lt;code&gt;this&lt;/code&gt;, so they can no longer be chained.
&lt;/li&gt;&lt;li&gt;Options passed to Backbone.View's constructor are no longer attached automatically. wp.Backbone.View now does this automatically.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27170" title="Update Backbone from 1.0 to 1.1.
Also update Underscore to 1.6. ..."&gt;[27170]&lt;/a&gt; for Backbone 1.1 itself.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
props gcorne.&lt;br /&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26799" title="#26799: enhancement: Update to Backbone.js 1.1.0 (closed: fixed)"&gt;#26799&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [27171]: Update media-views and wp.Backbone.View for Backbone 1.1.   * ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 07:36:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27171</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27171/1392276961127278</guid>
      <description>&lt;p&gt;
Update media-views and wp.Backbone.View for Backbone 1.1.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Collection set/add/remove/reset methods now return models, not &lt;code&gt;this&lt;/code&gt;, so they can no longer be chained.
&lt;/li&gt;&lt;li&gt;Options passed to Backbone.View's constructor are no longer attached automatically. wp.Backbone.View now does this automatically.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27170" title="Update Backbone from 1.0 to 1.1.
Also update Underscore to 1.6. ..."&gt;[27170]&lt;/a&gt; for Backbone 1.1 itself.
&lt;/p&gt;
&lt;p&gt;
props gcorne.
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26799" title="#26799: enhancement: Update to Backbone.js 1.1.0 (closed: fixed)"&gt;#26799&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #26799 (Update to Backbone.js 1.1.0) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 07:33:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26799#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26799#comment:15/1392276810060786</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27170" title="Update Backbone from 1.0 to 1.1.
Also update Underscore to 1.6. ..."&gt;27170&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Update Backbone from 1.0 to 1.1.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also update Underscore to 1.6. Includes the development versions of both, which are not included in the build.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Here is Backbone's changelog:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Made the return values of Collection’s &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, and &lt;code&gt;reset&lt;/code&gt; more useful. Instead of returning &lt;code&gt;this&lt;/code&gt;, they now return the changed (added, removed or updated) model or list of
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
models. (This means they can no longer be chained.)&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Backbone Views no longer automatically attach options passed to the constructor as &lt;code&gt;this.options&lt;/code&gt; and Backbone Models no longer attach &lt;code&gt;url&lt;/code&gt; and &lt;code&gt;urlRoot&lt;/code&gt; options, but you can do it yourself if you prefer. (But if you extend &lt;code&gt;wp.Backbone.View&lt;/code&gt;, options will be attached for you.)
&lt;/li&gt;&lt;li&gt;All &lt;code&gt;"invalid"&lt;/code&gt; events now pass consistent arguments. First the model in question, then the error object, then options.
&lt;/li&gt;&lt;li&gt;You are no longer permitted to change the id of your model during &lt;code&gt;parse&lt;/code&gt;. Use &lt;code&gt;idAttribute&lt;/code&gt; instead.
&lt;/li&gt;&lt;li&gt;On the other hand, &lt;code&gt;parse&lt;/code&gt; is now an excellent place to extract and vivify incoming nested JSON into associated submodels.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27171" title="Update media-views and wp.Backbone.View for Backbone 1.1.
 * ..."&gt;[27171]&lt;/a&gt; (next commit) for changes made to WordPress to be compatible with Backbone 1.1.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
props gcorne, georgestephanis.&lt;br /&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26799" title="#26799: enhancement: Update to Backbone.js 1.1.0 (closed: fixed)"&gt;#26799&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [27170]: Update Backbone from 1.0 to 1.1.  Also update Underscore to 1.6. ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 07:33:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27170</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27170/1392276809146738</guid>
      <description>&lt;p&gt;
Update Backbone from 1.0 to 1.1.
&lt;/p&gt;
&lt;p&gt;
Also update Underscore to 1.6. Includes the development versions of both, which are not included in the build.
&lt;/p&gt;
&lt;p&gt;
Here is Backbone's changelog:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Made the return values of Collection’s &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, and &lt;code&gt;reset&lt;/code&gt; more useful. Instead of returning &lt;code&gt;this&lt;/code&gt;, they now return the changed (added, removed or updated) model or list of
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
models. (This means they can no longer be chained.)
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Backbone Views no longer automatically attach options passed to the constructor as &lt;code&gt;this.options&lt;/code&gt; and Backbone Models no longer attach &lt;code&gt;url&lt;/code&gt; and &lt;code&gt;urlRoot&lt;/code&gt; options, but you can do it yourself if you prefer. (But if you extend &lt;code&gt;wp.Backbone.View&lt;/code&gt;, options will be attached for you.)
&lt;/li&gt;&lt;li&gt;All &lt;code&gt;"invalid"&lt;/code&gt; events now pass consistent arguments. First the model in question, then the error object, then options.
&lt;/li&gt;&lt;li&gt;You are no longer permitted to change the id of your model during &lt;code&gt;parse&lt;/code&gt;. Use &lt;code&gt;idAttribute&lt;/code&gt; instead.
&lt;/li&gt;&lt;li&gt;On the other hand, &lt;code&gt;parse&lt;/code&gt; is now an excellent place to extract and vivify incoming nested JSON into associated submodels.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27171" title="Update media-views and wp.Backbone.View for Backbone 1.1.
 * ..."&gt;[27171]&lt;/a&gt; (next commit) for changes made to WordPress to be compatible with Backbone 1.1.
&lt;/p&gt;
&lt;p&gt;
props gcorne, georgestephanis.
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26799" title="#26799: enhancement: Update to Backbone.js 1.1.0 (closed: fixed)"&gt;#26799&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #26799 (Update to Backbone.js 1.1.0) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 07:16:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26799#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26799#comment:14/1392275779790689</guid>
      <description>&lt;p&gt;
Per IRC: We're doing this.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26799#comment:13" title="Comment 13"&gt;gcorne&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
My thought was that we would rely on the build process &lt;code&gt;grunt build&lt;/code&gt; to create the minified versions.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We usually prefer to use a library's official minified version, rather than our own. But I have an idea here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27112 (Add widget management to the customizer) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 13 Feb 2014 07:13:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27112#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27112#comment:5/1392275595447655</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Does widget-customizer-preview.js share a lot of code with widget-customizer.js?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No. There are a couple little functions like &lt;code&gt;widget_id_to_setting_id&lt;/code&gt; which are duplicated, but otherwise they are unique. But I was thinking of creating a &lt;code&gt;widget-customizer-base.js&lt;/code&gt; that had these few common functions, and then make it a dependency for &lt;code&gt;widget-customizer-panel.js&lt;/code&gt; and &lt;code&gt;widget-customizer-preview.js&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27112 (Add widget management to the customizer) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 13 Feb 2014 07:02:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27112#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27112#comment:4/1392274957221685</guid>
      <description>&lt;p&gt;
Version 0.15 has been released: &lt;a class="ext-link" href="https://github.com/x-team/wp-widget-customizer/compare/0.14...0.15"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/x-team/wp-widget-customizer/compare/0.14...0.15&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Add support for wide widget controls by sliding them out horizontally over the preview. Props westonruter.
&lt;/li&gt;&lt;li&gt;Eliminate Update button and so preview updates with each input change for widgets that support live previews. Props westonruter.
&lt;/li&gt;&lt;li&gt;Make widget form controls more compact on smaller screen resolutions. Props michael-arestad.
&lt;/li&gt;&lt;li&gt;Improve styling of widget search field. Props shaunandrews.
&lt;/li&gt;&lt;li&gt;Rename "Update" button to "Apply". Props arnoesterhuizen.
&lt;/li&gt;&lt;li&gt;Prevent error when initializing sidebar containing unregistered widget. Props westonruter.
&lt;/li&gt;&lt;li&gt;Only show one widget form control expanded at a time. Props westonruter.
&lt;/li&gt;&lt;li&gt;Eliminate use of filter_input(). Props westonruter.
&lt;/li&gt;&lt;li&gt;Add live preview support for Twenty Fourteen Ephemera Widget.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26987 (Bug in wp_list_pages(), caused by start_lvl()) updated</title>
      
        <dc:creator>awelzel</dc:creator>

      <pubDate>Thu, 13 Feb 2014 05:58:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26987#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26987#comment:1/1392271107285730</guid>
      <description>&lt;p&gt;
Since I need a working sitemap without empty lines I applied the suggested fix to my WordPress installation - so the example will show the result with the fix applied.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27016 (Make placeholders/MCE views for Audio/Video shortcodes) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Thu, 13 Feb 2014 05:41:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27016#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27016#comment:8/1392270091613172</guid>
      <description>&lt;p&gt;
Good question - any shortcode inserted by editor would have closing, but when written by hand, I always exclude them.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27016 (Make placeholders/MCE views for Audio/Video shortcodes) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 13 Feb 2014 05:23:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27016#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27016#comment:7/1392268999192133</guid>
      <description>&lt;p&gt;
The idea is to eventually remove/refactor the 'wpgallery' TinyMCE plugin and (perhaps) make a 'wpmedia' plugin instead that will use wpViews.
&lt;/p&gt;
&lt;p&gt;
We will also need another "single" mode in the media modal to handle editing of audio/video. Currently title, caption, description and embedding preference (link to or embed) can be set for media files that are in the library. Not sure what could be edited if the media file was added from external site.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
One caveat: the closing of the shortcode is optional.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Do we want to support that or convert all shortcodes without a closing tag on editing? Looks like converting would be better.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27016 (Make placeholders/MCE views for Audio/Video shortcodes) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Thu, 13 Feb 2014 05:19:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27016#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27016#comment:6/1392268799283779</guid>
      <description>&lt;p&gt;
This is killer. Thank you. One caveat: the closing of the shortcode is optional. My test post that had the chromeless YouTube videos used shortcodes with no closer, so the placeholders didn't appear until I added closing tags.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27016 (Make placeholders/MCE views for Audio/Video shortcodes) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 13 Feb 2014 05:11:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27016#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27016#comment:5/1392268267622218</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27169" title="TinyMCE: add image based placeholders for audio and video shortcodes. ..."&gt;[27169]&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
TinyMCE: add image based placeholders for audio and video shortcodes. Props wonderboymusic, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27016" title="#27016: task (blessed): Make placeholders/MCE views for Audio/Video shortcodes (closed: fixed)"&gt;#27016&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [27169]: TinyMCE: add image based placeholders for audio and video shortcodes. ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 13 Feb 2014 05:09:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27169</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27169/1392268144605387</guid>
      <description>&lt;p&gt;
TinyMCE: add image based placeholders for audio and video shortcodes. Props wonderboymusic, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27016" title="#27016: task (blessed): Make placeholders/MCE views for Audio/Video shortcodes (closed: fixed)"&gt;#27016&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #21811 (Add image editing UI to the media modal) updated</title>
      
        <dc:creator>gcorne</dc:creator>

      <pubDate>Thu, 13 Feb 2014 04:57:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21811#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21811#comment:43/1392267442059890</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21811#comment:40" title="Comment 40"&gt;tomauger&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Added &lt;a href="https://core.trac.wordpress.org/attachment/ticket/21811/trac-21811-image-edit-view-01.patch"&gt;trac-21811-image-edit-view-01.patch&lt;/a&gt; which attempts to do the minimum to integrate image-edit.js into the EditImage view by passing the view itself to imageEdit.open() so we can set the previous state on the controller upon imageEdit.close().
&lt;/p&gt;
&lt;p&gt;
What has me completely stumped is why setting the state to 'image-edit' in an ImageDetails View (ie: editing an embedded attachment in tinyMCE) works so well, but attempting to set the same state in the same way within an Attachment.Details view (for example, when choosing a Featured Image) fails silently.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/21811/21811-modal-03.patch" title="Attachment '21811-modal-03.patch' in Ticket #21811"&gt;21811-modal-03.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/21811/21811-modal-03.patch" title="Download"&gt;​&lt;/a&gt;, I took your initial idea for passing a reference to the view, into &lt;code&gt;imageEdit.open()&lt;/code&gt; and also attached &lt;code&gt;_view&lt;/code&gt; to the object so that it could be accessed from &lt;code&gt;close()&lt;/code&gt;. Then, I wired this up to the modal so that when clicking cancel, the user is taken to the previous state, which works pretty well. I also added crude support for the Featured Image workflow, which lives in &lt;code&gt;media-editor.js&lt;/code&gt; and is coded a little differently. The image editing functionality was already working in the "Add Media" workflow.
&lt;/p&gt;
&lt;p&gt;
While working on this, I discovered that the modals are not removed from the DOM when closed, which causes problems with the image editor because of how it uses &lt;code&gt;id&lt;/code&gt; attributes. I will probably open a separate ticket to clean that up.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27045 (Gallery css should use box-sizing) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Thu, 13 Feb 2014 04:48:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27045#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27045#comment:5/1392266922228837</guid>
      <description>&lt;p&gt;
Back-compat is a very good point, but it still seems strange to enforce a percentage based size on them, as well as adding paddings and borders, without box-sizing it in core in my opinion.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26491 (Bundled themes: update to latest version of HTML5 Shiv) updated</title>
      
        <dc:creator>rickalee</dc:creator>

      <pubDate>Thu, 13 Feb 2014 04:33:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26491#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26491#comment:3/1392266010763956</guid>
      <description>&lt;p&gt;
+1 for adding to core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27115.all.2.diff attached to Ticket #27115</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Thu, 13 Feb 2014 04:19:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27115/27115.all.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27115/27115.all.2.diff/1392265172792171</guid>
      <description>&lt;p&gt;
Missed some.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27115 (HTTPS links to wordpress.org) updated</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Thu, 13 Feb 2014 04:01:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27115#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27115#comment:3/1392264119678748</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I did three on their own and then I THINK I got it with the all, but given the rapid movement of WP, it may not be a great idea to use that. I omitted wp-content from my search/replace, since I didn't want to accidentally touch themes and plugins.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26491 (Bundled themes: update to latest version of HTML5 Shiv) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Thu, 13 Feb 2014 04:01:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26491#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26491#comment:2/1392264075952107</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
anything stopping us from doing this? also, why don't we bundle this in core and have all themes point at it (just curious)?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27115.all.diff attached to Ticket #27115</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Thu, 13 Feb 2014 04:00:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27115/27115.all.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27115/27115.all.diff/1392264049507532</guid>
      <description>&lt;p&gt;
Everything (except wp-content files for obv reasons)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #25169 (Optimize all images / pngs in core) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Thu, 13 Feb 2014 03:58:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25169#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25169#comment:10/1392263928910132</guid>
      <description>&lt;p&gt;
Just ran this a bunch of times, it is only sorta slow the very first time it runs. After that, it's way faster than uglify. &lt;code&gt;.2.diff&lt;/code&gt; unJorbins the whitespace.
&lt;/p&gt;
&lt;p&gt;
Something to think about - could this just be a dev tool that generates smushed images that we then check in?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27115.wp-login.diff attached to Ticket #27115</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Thu, 13 Feb 2014 03:55:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27115/27115.wp-login.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27115/27115.wp-login.diff/1392263749009595</guid>
      <description>&lt;p&gt;
wp login
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>25169.2.diff attached to Ticket #25169</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Thu, 13 Feb 2014 03:55:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/25169/25169.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/25169/25169.2.diff/1392263744952747</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>27115.readme.diff attached to Ticket #27115</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Thu, 13 Feb 2014 03:55:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27115/27115.readme.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27115/27115.readme.diff/1392263734235050</guid>
      <description>&lt;p&gt;
Readme
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>27115.xmlrpc.diff attached to Ticket #27115</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Thu, 13 Feb 2014 03:55:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27115/27115.xmlrpc.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27115/27115.xmlrpc.diff/1392263721289350</guid>
      <description>&lt;p&gt;
XMLRPC diff'd
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>21811-modal-03.patch attached to Ticket #21811</title>
      
        <dc:creator>gcorne</dc:creator>

      <pubDate>Thu, 13 Feb 2014 03:52:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21811/21811-modal-03.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21811/21811-modal-03.patch/1392263525728096</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #26050 (Continual Admin Page POST (HeartBeats?) Can Cause SQL Connection Issues) updated</title>
      
        <dc:creator>lisota</dc:creator>

      <pubDate>Thu, 13 Feb 2014 03:51:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26050#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26050#comment:7/1392263468780449</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26050#comment:6" title="Comment 6"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
This is very helpful. I was struggling to increase the heartbeat interval. There is a fair amount of incorrect guidance on the web about this setting.
&lt;/p&gt;
&lt;p&gt;
We are willing to sacrifice post locking by eliminating the wp-refresh-post-lock altogether. The CPU performance hit in our high traffic, multi-editor environment is huge and this has been affecting site performance for awhile now. It took us awhile to narrow down the exact cause, but it is definitely the large number of post lock refreshes via admin-ajax.
&lt;/p&gt;
&lt;p&gt;
I tried to deregister heartbeat.js on all pages, but as you noted, found other problems with post.js dependencies. (Namely that the tag box autocomplete doesn't function.)
&lt;/p&gt;
&lt;p&gt;
Can you provide any guidance on eliminating the wp-refresh-post-lock? I am thinking something like disabling the heartbeat event handlers like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;jQuery(window).load( function() {
  jQuery(document).off('.refresh-lock');
  }
});
&lt;/pre&gt;&lt;p&gt;
I have managed to allow suspension of the heartbeat when post edit windows are left open for a long time via the following. Looks like this was added in 3.8.
&lt;/p&gt;
&lt;pre class="wiki"&gt;remove_filter( 'heartbeat_settings', 'wp_heartbeat_set_suspension' );
&lt;/pre&gt;&lt;p&gt;
I hope that as the Heartbeat API makes it into more features (i.e. autosave), that there can be some testing on high-traffic sites that intensively use the post editor. I'm sure none of this is even noticeable on smaller, infrequently-edited blogs. But on high traffic sites, it's been a CPU crusher.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20601 (Author archives queries should return a 404 when the user isn't a ...) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Thu, 13 Feb 2014 03:40:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20601#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20601#comment:22/1392262825249299</guid>
      <description>&lt;p&gt;
In &lt;code&gt;.7.diff&lt;/code&gt;, I added a unit test that blows up at the end. Someone should take a look. My test is not a real world scenario, but it exposes some weirdness.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>20601.7.diff attached to Ticket #20601</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Thu, 13 Feb 2014 03:38:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/20601/20601.7.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/20601/20601.7.diff/1392262705379677</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27119 (disabling wp_auth_check_load does not actually disable the auth check) created</title>
      
        <dc:creator>lisota</dc:creator>

      <pubDate>Thu, 13 Feb 2014 03:29:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27119</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27119/1392262177311895</guid>
      <description>&lt;p&gt;
Line 4021 of wp-includes\functions.php mentions that the wp_auth_check can be disabled by the following:
&lt;/p&gt;
&lt;pre class="wiki"&gt;remove_action( 'admin_enqueue_scripts', 'wp_auth_check_load' )
&lt;/pre&gt;&lt;p&gt;
I expected that this would remove the auth check hearbeat actions, but the auth-check keeps firing even with this action removed.
&lt;/p&gt;
&lt;p&gt;
We are experiencing sever CPU utilization issues due to heartbeat actions in post editing screens and are looking to disable these where we can. We've isolated the problem to the heartbeat API. Our site is high traffic with many editors who spend at least 8 hrs per day in one or more post edit screens at all times.
&lt;/p&gt;
&lt;p&gt;
It appears that the auth-check is still firing from a combo of post.js and heartbeat.js on post edit screens, likely driven by the refresh-post-lock.
&lt;/p&gt;
&lt;p&gt;
To reproduce, add the remove_action mentioned above to functions.php. Open fiddler (or equivalent), then open a new post for editing. Watch the admin-ajax actions every 15 seconds, and you'll see that the auth-check is still firing.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #26936 (Create new dashicons) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 13 Feb 2014 00:47:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26936#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26936#comment:23/1392252424243030</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/26936/" title="Attachments of Ticket #26936"&gt;widgeticons.ai&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/26936/" title="Download"&gt;​&lt;/a&gt; are some new icons that need to be added for the upcoming widget customizer merge.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>widgeticons.ai attached to Ticket #26936</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 13 Feb 2014 00:46:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26936/widgeticons.ai</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26936/widgeticons.ai/1392252384842314</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21653 (Introduce current_date()) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 00:41:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21653#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21653#comment:7/1392252083295003</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I like danielbachhuber's approach.
&lt;/p&gt;
&lt;p&gt;
Without current_date(), current_date_i18n() seems out of place. And, date_i18n() with only one argument already operates on the current, local timestamp (it has an optional gmt flag as well), so it's not needed.
&lt;/p&gt;
&lt;p&gt;
I doubt current_time() has unit tests, but it'd be nice.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21653 (Introduce current_date()) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Thu, 13 Feb 2014 00:37:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21653#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21653#comment:6/1392251821923162</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by danielbachhuber. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-13&amp;amp;sort=asc#m790901"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18471 (Add action hook after cron processed it's jobs) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Thu, 13 Feb 2014 00:29:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18471#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18471#comment:6/1392251341870155</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by danielbachhuber. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-13&amp;amp;sort=asc#m790885"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14485 (Taxonomy hierarchy cache isn't properly refreshed) reopened</title>
      
        <dc:creator>bpetty</dc:creator>

      <pubDate>Thu, 13 Feb 2014 00:26:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14485#comment:86</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14485#comment:86/1392251216084008</guid>
      <description>&lt;p&gt;
Not all unit tests pass with the last commit:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Tests_Term_Cache::test_hierachy_invalidation
Failed asserting that an array is not empty.
/vagrant/wordpress/tests/phpunit/tests/term/cache.php:83
&lt;/pre&gt;&lt;p&gt;
This fails on PHP 5.2 (but I can confirm it appears to pass fine on PHP 5.3+).
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #25711 (The "{$taxonomy}_children" cache can become stale) reopened</title>
      
        <dc:creator>bpetty</dc:creator>

      <pubDate>Thu, 13 Feb 2014 00:17:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25711#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25711#comment:4/1392250622068154</guid>
      <description>&lt;p&gt;
I'm not sure exactly what values should be tested for here, so I'm not going to attempt a patch, but this does need some eyes on the unit tests again at least.
&lt;/p&gt;
&lt;pre class="wiki"&gt;1) Tests_Term_Cache::test_category_children_cache
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
-    75 =&amp;gt; Array (...)
 )
/vagrant/wordpress/tests/phpunit/tests/term/cache.php:22
&lt;/pre&gt;&lt;p&gt;
Here's the assertion:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$this-&amp;gt;assertEquals( array( $term_id1 =&amp;gt; array( $term_id1_child ) ), $hierarchy );
&lt;/pre&gt;&lt;p&gt;
I've only see this fail on PHP 5.2, however, what I'd like to specifically point out is that this is comparing the result fetched from the factory, which should contain row IDs, and likely a bunch more data that is both irrelevant to this test, and is also volatile (can easily change between runs just like the ID does depending on previous tests run - try running full tests compared to just --group taxonomy).
&lt;/p&gt;
&lt;p&gt;
This really needs to be rewritten with more more specific values used for assertion checks. Try to avoid using arrays, they can frequently fail when just out of order (but still remain functional and correct). In fact, don't even use the variable returned from the factory. Use an entirely explicit static array. We still need to know *exactly* what the test should be returning in case the test is failing (like it is here).
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #26799 (Update to Backbone.js 1.1.0) updated</title>
      
        <dc:creator>gcorne</dc:creator>

      <pubDate>Thu, 13 Feb 2014 00:03:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26799#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26799#comment:13/1392249797001618</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26799#comment:11" title="Comment 11"&gt;georgestephanis&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@gcorne -- it looked like you had added the uncompressed backbone and removed the min version in your previous patch, so I duplicated that for underscore.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
My thought was that we would rely on the build process &lt;code&gt;grunt build&lt;/code&gt; to create the minified versions. Whether or not we actually ship with both compressed and uncompressed versions is up for discussion, but personally I find having the uncompressed versions super helpful during development.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>