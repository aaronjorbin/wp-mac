<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #43937 (Admin Menu Items - Necessary Double Click) closed</title>
      
        <dc:creator>Howdy_McGee</dc:creator>

      <pubDate>Sun, 06 May 2018 23:47:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43937#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43937#comment:3/1525650458107266</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43973 (Email user once removal request completed - GDPR) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 06 May 2018 18:40:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43973#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43973#comment:2/1525632039958045</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
There is some misleading text that's shown to the user when they confirm their data export action.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The site administrator has been notified and will fulfill your request as soon as possible.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Either this text should be changed, or the confirmation email should be sent to the site administrator (or ideally the requestor too).
&lt;/p&gt;
&lt;p&gt;
Moving to 4.9.6 for visibility.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43982 (The test suite shouldn't assume that the data directory exists) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 06 May 2018 16:54:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43982#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43982#comment:1/1525625676936515</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43982.diff attached to Ticket #43982</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 06 May 2018 16:54:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43982/43982.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43982/43982.diff/1525625658513053</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43982 (The test suite shouldn't assume that the data directory exists) created</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 06 May 2018 16:49:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43982</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43982/1525625369391705</guid>
      <description>&lt;p&gt;
It's possible to bundle the WordPress unit test framework inside a project by including the contents of the &lt;code&gt;tests/phpunit/includes&lt;/code&gt; directory.
&lt;/p&gt;
&lt;p&gt;
However the test framework makes an assumption that the &lt;code&gt;tests/phpunit/data/themedir1&lt;/code&gt; directory exists and causes a PHP notice to be triggered:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Notice: tests/phpunit/wordpress-tests-lib/includes/../data/themedir1 is not readable in wp-includes/theme.php on line 471
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43980 (Consider outputting the suggested privacy policy content to a new page ...) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Sun, 06 May 2018 15:43:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43980#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43980#comment:1/1525621419169951</guid>
      <description>&lt;p&gt;
If you gather everything in 1 page and have 15+ plugins with incoming policies that page will be one serious mountain to scroll and really hard to easily find what you want imho.
&lt;/p&gt;
&lt;p&gt;
As a reminder:
This is the reason why I had tabs on my first UI iterations ( 1 of the examples: lower part of &lt;a href="https://core.trac.wordpress.org/attachment/ticket/43481/43481.6.jpg"&gt;https://core.trac.wordpress.org/attachment/ticket/43481/43481.6.jpg&lt;/a&gt; ).
&lt;/p&gt;
&lt;p&gt;
There are plenty of iterations in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43481" title="#43481: enhancement: Add tabs and placeholders to privacy tools page in wp-admin (closed: fixed)"&gt;#43481&lt;/a&gt; if you want a refresh or find ideas that got turned down and I'm still not sure 'why' even though I was already solving these kinds of issues with imho the best flow even if everything was in 1 page.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43938 (Make it clear to administrators that not all plugins support privacy ...) updated</title>
      
        <dc:creator>idea15</dc:creator>

      <pubDate>Sun, 06 May 2018 15:06:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43938#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43938#comment:2/1525619205060979</guid>
      <description>&lt;p&gt;
I'd agree that we can strengthen the language we use to remind administrators that they are responsible for the accuracy of their privacy notices, but when you say "prompt" I think another dashboard admin notice. What did you have in mind?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43750 (Establish a standard means of core reading privacy declarations from ...) updated</title>
      
        <dc:creator>idea15</dc:creator>

      <pubDate>Sun, 06 May 2018 15:05:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43750#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43750#comment:6/1525619130303257</guid>
      <description>&lt;p&gt;
This is one of many chicken and egg discussions that have arisen from the GDPR compliance project: in order to pull data from plugins, we need to establish that within the plugin developer guidelines. Let's return to this after 4.9.6.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>capture2.PNG attached to Ticket #43981</title>
      
        <dc:creator>idea15</dc:creator>

      <pubDate>Sun, 06 May 2018 15:02:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43981/capture2.PNG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43981/capture2.PNG/1525618973948203</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>yellow.PNG attached to Ticket #43981</title>
      
        <dc:creator>idea15</dc:creator>

      <pubDate>Sun, 06 May 2018 15:02:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43981/yellow.PNG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43981/yellow.PNG/1525618966063711</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43981 (Privacy policy guide: improve UX and readability) created</title>
      
        <dc:creator>idea15</dc:creator>

      <pubDate>Sun, 06 May 2018 15:02:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43981</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43981/1525618953866440</guid>
      <description>&lt;p&gt;
We talked a lot about how to convey the information that the user needs about what to write, but presenting it inline as yellow highlighted text does not work in practice.
&lt;/p&gt;
&lt;p&gt;
Additionally, the split of information between the guidance box on top and the text body area is confusing.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43954 (Showing the privacy policy admin notice on all screens is intrusive) updated</title>
      
        <dc:creator>idea15</dc:creator>

      <pubDate>Sun, 06 May 2018 14:55:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43954#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43954#comment:3/1525618531323698</guid>
      <description>&lt;p&gt;
I'm going to agree here and it's me who's been banging on about privacy notices for a year! We don't want to risk any form of consent fatigue for anyone.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>suggested-content-screen.png attached to Ticket #43980</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 06 May 2018 14:34:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43980/suggested-content-screen.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43980/suggested-content-screen.png/1525617256900750</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43980 (Consider outputting the suggested privacy policy content to a new page ...) created</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 06 May 2018 14:32:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43980</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43980/1525617159422414</guid>
      <description>&lt;p&gt;
This is a follow up from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43473" title="#43473: enhancement: Add default text for a privacy policy (closed: fixed)"&gt;#43473&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
It became apparent that the suggested privacy policy content is quite long after we added the tutorial to the default WordPress text. It is too long to display inside of a postbox and be readable and easy to use.
&lt;/p&gt;
&lt;p&gt;
We should explore the alternative to having a postbox. Can output all suggested content to another page in wp-admin and add a link to it when editing the policy page. That way the suggested text will be much more accessible and easier to see and read, no matter how long it becomes after content from plugins and themes is added.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43927 (Filter policy help blocks away from the_content) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 06 May 2018 12:45:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43927#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43927#comment:5/1525610721880683</guid>
      <description>&lt;p&gt;
Yeah, was thinking about this too. If we keep the tutorial "blocks" (with &lt;code&gt;contenteditable="false"&lt;/code&gt;) in post_content (which is currently not the case), we may need to make sure they are kept on saving a draft and  deleted on publishing.
&lt;/p&gt;
&lt;p&gt;
Ideally the users will delete them before publishing, but we can "make sure" and have a filter that removes them too. Don't think we will need a "display filter", we can remove the tutorials on publishing and updating a published post.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43965 (GDPR Privacy Notes Don't Play Nice with Gutenberg) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 06 May 2018 12:03:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43965#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43965#comment:6/1525608180518622</guid>
      <description>&lt;p&gt;
We are also looking at moving the postbox content to a different page/screen as it in most cases the text there will be too long to fit "comfortably" inside the box.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43976 (Provide mechanism to opt-out of commenter cookies without needing to ...) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 06 May 2018 11:57:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43976#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43976#comment:2/1525607842586744</guid>
      <description>worksforme: &lt;blockquote class="citation"&gt;
&lt;p&gt;
you can opt-out by unchecking that box but it requires you post a comment.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No, it's the opposite. You have to opt-in by checking the checkbox. If you don't opt-in the checkbox is not checked regardless of whether you post a comment or not :)
&lt;/p&gt;
&lt;p&gt;
If the users have per-existing cookies that they don't want, it would be best to clear them in the browser. All browsers have that functionality and it works a lot better and does a lot more than any website can offer.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>43583-improvements2.patch attached to Ticket #43583</title>
      
        <dc:creator>ayeshrajans</dc:creator>

      <pubDate>Sun, 06 May 2018 09:48:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43583/43583-improvements2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43583/43583-improvements2.patch/1525600122973952</guid>
      <description>&lt;p&gt;
Thanks for the suggestions. Appreciate if you could review the updated one. Please note that if &lt;code&gt;xml&lt;/code&gt; or &lt;code&gt;intl&lt;/code&gt; extensions are not loaded, this test will issue a warning. Ideally, this test should split for these edge cases and skip the test in PHPUnit if the classes are not available.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>alicewondermiscreations</dc:creator>

      <pubDate>Sun, 06 May 2018 07:38:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:243</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:243/1525592323475083</guid>
      <description>&lt;p&gt;
Reading through the old posts I saw composer mentioned.
&lt;/p&gt;
&lt;p&gt;
I would recommend against that, packagist does absolutely no validation of packages making composer dangerous to use in production environments, it is very easy to get a malicious class installed that way.
&lt;/p&gt;
&lt;p&gt;
Composer is very beneficial to developers and testing, but it's not safe for deployment in my opinion.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>alicewondermiscreations</dc:creator>

      <pubDate>Sun, 06 May 2018 06:50:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:242</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:242/1525589434209162</guid>
      <description>&lt;p&gt;
I would very much like an autoloader.
&lt;/p&gt;
&lt;p&gt;
I wrote a very simple one (I like simple)
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://gist.github.com/AliceWonderMiscreations/4ba7209256f0e2b38d59a8787d164f63"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gist.github.com/AliceWonderMiscreations/4ba7209256f0e2b38d59a8787d164f63&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It just loads class files according to PSR-4 and doesn't bother with PEAR but a PEAR function could easily be added, though it seems most PEAR authors these days are doing namespaced classes that work with PSR-4 too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #36335,​43979 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 06 May 2018 06:41:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=36335%2C43979</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=36335%2C43979/1525588908014855</guid>
      <description>duplicate: &lt;p&gt;
A proposal for an autoloader is already being tracked in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36335" title="#36335: feature request: Next generation: core autoloader proposal (new)"&gt;#36335&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #43979 (PSR-4 Autoloader) updated</title>
      
        <dc:creator>alicewondermiscreations</dc:creator>

      <pubDate>Sun, 06 May 2018 03:29:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43979#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43979#comment:1/1525577359974399</guid>
      <description>&lt;p&gt;
Not tested bug this would probably work for the autoloader
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://gist.github.com/AliceWonderMiscreations/4ba7209256f0e2b38d59a8787d164f63"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gist.github.com/AliceWonderMiscreations/4ba7209256f0e2b38d59a8787d164f63&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43979 (PSR-4 Autoloader) created</title>
      
        <dc:creator>alicewondermiscreations</dc:creator>

      <pubDate>Sun, 06 May 2018 02:21:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43979</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43979/1525573267314826</guid>
      <description>&lt;p&gt;
WordPress really needs a PSR-4 autoloader.
&lt;/p&gt;
&lt;p&gt;
With a PSR-4 autoloader, plugins and classes could require a namespaced class and it would load on demand.
&lt;/p&gt;
&lt;p&gt;
This would solve &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43898" title="#43898: feature request: Google Font Builder (code written) (closed: maybelater)"&gt;#43898&lt;/a&gt; because what I want there can be solved with a class, in fact I'm doing that now on three blogs running it as an mu-plugin - but mu-plugins can't be updated automatically, they can only manually updated.
&lt;/p&gt;
&lt;p&gt;
Things like TGMPA that you find used in many plugins / themes could be loaded that way, instead of needing many copies in each plugin / theme that wants it.
&lt;/p&gt;
&lt;p&gt;
A PSR-4 autoloader would give a way that a plugin or theme could use a third party API without needing to bundle the API itself.
&lt;/p&gt;
&lt;p&gt;
I would suggest wp-content/wp-psr as the directory - with vendor/product directory structure inside, and PSR-4 class installer/updater similar to the plugin/theme installer/updater.
&lt;/p&gt;
&lt;p&gt;
Some things in core could even likely be moved into it.
&lt;/p&gt;
&lt;p&gt;
But anyway a PSR-4 autoloader would solve the issue of some things needing to be in mu-plugins for no other reasons than to make sure they are loaded, and could also be used to take some eye candy out of core that can be loaded that way.
&lt;/p&gt;
&lt;p&gt;
A PSR-4 autoloader would be a single file and could work with every version of PHP that still received security fixes from upstream PHP.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43902 (Small refactoring to prevent multiple chr() calls in MO class) updated</title>
      
        <dc:creator>likemusic</dc:creator>

      <pubDate>Sat, 05 May 2018 22:01:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43902#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43902#comment:2/1525557712793490</guid>
      <description>&lt;p&gt;
Hi @ayeshrajans !
&lt;/p&gt;
&lt;p&gt;
Thanx for review. According to your test for old version php (before 7.0) using constant decrease time almost for 50%. It's good indicator and imho shoud be merged to develop branch because still many WP sites running on old php versions.
&lt;/p&gt;
&lt;p&gt;
I made this fix because loading translations take most time of request handling after installing some extensions.
&lt;/p&gt;
&lt;p&gt;
I looked for MO loader but can't find any other obvious way to increase translation loading performance.
&lt;/p&gt;
&lt;p&gt;
Seems that it's requires to use some cache to not parse all mo files for every requests (that makes every 30 sec when admin page is opened in browser).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>flicker-on-export-tools-page.gif attached to Ticket #43978</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Sat, 05 May 2018 20:16:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43978/flicker-on-export-tools-page.gif</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43978/flicker-on-export-tools-page.gif/1525551371527921</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43978 (Avoid flickering on the Tools / Export page) created</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Sat, 05 May 2018 20:15:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43978</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43978/1525551313879233</guid>
      <description>&lt;p&gt;
The export filters are hidden by default on the Tools / Export page.
&lt;/p&gt;
&lt;p&gt;
But it's only hidden with Javascript in &lt;code&gt;wp-admin/export.php&lt;/code&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;jQuery(document).ready(function($){
    var form = $('#export-filters'),
        filters = form.find('.export-filters');
    filters.hide();
&lt;/pre&gt;&lt;p&gt;
The filters can therefore be visible for a short time, before they are hidden.
&lt;/p&gt;
&lt;p&gt;
Here the &lt;code&gt;filters.hide()&lt;/code&gt; will add a &lt;code&gt;display:none;&lt;/code&gt; inline styling to the corresponding filters.
&lt;/p&gt;
&lt;p&gt;
We can avoid this flickering with CSS, something like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;#export-filters .export-filters {
    display: none;
}
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43966 (Prioritize the User group in Personal Data Exports to right below the ...) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Sat, 05 May 2018 19:15:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43966#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43966#comment:1/1525547718762085</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43968 (Add Request Type into Confirmation Email Subject for GDPR) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Sat, 05 May 2018 19:14:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43968#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43968#comment:3/1525547653462816</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Added two patches. One adds the request type to the subject only, and the other adds the request type to the subject and introduces a filter on the email subject.
&lt;/p&gt;
&lt;p&gt;
I am not sure on the rules of introducing a filter after beta if it is adding to a bug fix.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43968-without-filter.diff attached to Ticket #43968</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Sat, 05 May 2018 19:12:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43968/43968-without-filter.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43968/43968-without-filter.diff/1525547569895683</guid>
      <description>&lt;p&gt;
Add request type to email subject (without filter)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>43968-with-filter.diff attached to Ticket #43968</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Sat, 05 May 2018 19:09:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43968/43968-with-filter.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43968/43968-with-filter.diff/1525547368361287</guid>
      <description>&lt;p&gt;
Add request type to email subject (with filter)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43968 (Add Request Type into Confirmation Email Subject for GDPR) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Sat, 05 May 2018 18:47:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43968#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43968#comment:2/1525546048663432</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43969 (Custom themes will not work in TinyMCE 4.7) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Sat, 05 May 2018 18:46:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43969#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43969#comment:1/1525546005029507</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43970 (Add request type to the confirmation confirmation page - GDPR) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Sat, 05 May 2018 18:44:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43970#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43970#comment:2/1525545881720575</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43975 (If data export &lt; 10MB can it be added to email as attachment - GDPR) updated</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Sat, 05 May 2018 18:08:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43975#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43975#comment:3/1525543738272354</guid>
      <description>&lt;p&gt;
Thanks for the explanation @Clorith, I understand completely. Enjoy your weekend
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43971 (Add safeties to avoid policy help text being displayed on front-end - GDPR) updated</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Sat, 05 May 2018 18:08:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43971#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43971#comment:3/1525543682981597</guid>
      <description>&lt;p&gt;
Thanks for the reference @Clorith I've subscribed there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43972 (Requests never become completed - GDPR) updated</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Sat, 05 May 2018 18:06:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43972#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43972#comment:2/1525543565294761</guid>
      <description>&lt;p&gt;
Thanks @xkon I've subscribed there, appreciate the references.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38323 (Reconsider $object_subtype handling in `register_meta()`) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Sat, 05 May 2018 16:34:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38323#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38323#comment:43/1525538062409014</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43583 (Introduce new PHP cross-version compat function `is_countable()`) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sat, 05 May 2018 16:26:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43583#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43583#comment:19/1525537566916848</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@ayeshrajans Thank you for this additional input and the updated patch.
&lt;/p&gt;
&lt;p&gt;
I've just read up on the latest discussion threads about this in php-src and other polyfills and agree this case should be covered by the WP compat polyfill.
&lt;/p&gt;
&lt;p&gt;
While hard-coding the class names is not pretty, it does seem the only viable way to cover this properly at this time.
&lt;/p&gt;
&lt;p&gt;
Regarding the updated patch:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The &lt;code&gt;is_object()&lt;/code&gt; check is superfluous.
&lt;/li&gt;&lt;li&gt;The &lt;code&gt;\&lt;/code&gt; to indicate the global namespace for the interface/class names needs to be removed. WP still supports PHP 5.2 and this would cause a parse error for PHP 5.2.
&lt;/li&gt;&lt;li&gt;Making this a proper multi-line &lt;code&gt;return&lt;/code&gt; with one condition on each line seems prudent for readability as the line is getting quite long.
&lt;/li&gt;&lt;li&gt;I'd like to suggest adding an additional unit test covering &lt;code&gt;ResourceBundle&lt;/code&gt; as this is currently not covered by any test.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/symfony/polyfill/pull/119/files"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/symfony/polyfill/pull/119/files&lt;/a&gt; looks like a quite clean version of what I'm suggesting.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38323 (Reconsider $object_subtype handling in `register_meta()`) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Sat, 05 May 2018 15:52:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38323#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38323#comment:42/1525535534278740</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38323/38323.6.diff" title="Attachment '38323.6.diff' in Ticket #38323"&gt;38323.6.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38323/38323.6.diff" title="Download"&gt;​&lt;/a&gt; implements the decision (and suggestions) we made in the REST API chat on May 3rd. These are the changes compared to the previous patch:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Meta keys registered for a specific object type and object subtype now overrule meta keys only registered for a specific object type. That means: If you call &lt;code&gt;register_meta( 'post', 'mykey', array( ... ) )&lt;/code&gt;, the registration data from that call will determine the behavior of the key on every post of any post type. However, if you also have &lt;code&gt;register_meta( 'post', 'mykey', array( 'object_subtype' =&amp;gt; 'post', ... )&lt;/code&gt; somewhere else, the registration data from that call will determine the behavior on the posts of the 'post' post type, overriding the other, less-specific registration. For all other post types, the behavior will still be based on the registration data for the entire object type. So registration without specifying an object subtype essentially acts as a fallback. That specifically means:
&lt;ul&gt;&lt;li&gt;A new &lt;code&gt;auth_{$object_type}_meta_{$meta_key}_for_{$object_subtype}&lt;/code&gt; filter is introduced and called in &lt;code&gt;map_meta_cap()&lt;/code&gt; for capability checks related to metadata. If a function is hooked into that filter, that filter will fire. Otherwise, the previously existing, less-specific &lt;code&gt;auth_{$object_type}_meta_{$meta_key}&lt;/code&gt; will fire. To clarify, they are exclusive to each other, and &lt;em&gt;only one&lt;/em&gt; of them will fire for the same check. This must be clearly highlighted in the dev-note. Since conflicts should be rare, most code will continue to work, but it will be recommended to switch to registering for a specific subtype.
&lt;/li&gt;&lt;li&gt;The &lt;code&gt;auth_{$object_type}_{$object_subtype}_meta_{$meta_key}&lt;/code&gt; filter which appears to be an accidental remainder of the original plans from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35658" title="#35658: task (blessed): Provide additional data for registered meta through register_meta() (closed: fixed)"&gt;#35658&lt;/a&gt; is now deprecated, to reduce the chance for conflicts. The name of the new filter is more accurate and prevents weird edge-cases where the filter name for an object type "post" and subtype "post" could theoretically conflict with the filter name for an object type called "post_post" (bad example, but you get the gist).
&lt;/li&gt;&lt;li&gt;A new &lt;code&gt;sanitize_{$object_type}_meta_{$meta_key}_for_{$object_subtype}&lt;/code&gt; filter is introduced in &lt;code&gt;sanitize_meta()&lt;/code&gt;. Similar to the auth filters, if that filter is being used, it will fire, and &lt;em&gt;only otherwise&lt;/em&gt; the previously existing, less-specific &lt;code&gt;sanitize_{$object_type}_meta_{$meta_key}&lt;/code&gt; will fire. This as well must be clearly highlighted in the dev-note.
&lt;/li&gt;&lt;li&gt;The flow of determining the capabilities for metadata capabilities in &lt;code&gt;map_meta_cap()&lt;/code&gt; was adjusted to be easier-readable. First of all the default value for a given meta key is determined by calling &lt;code&gt;is_protected_meta()&lt;/code&gt;. Then, it is filtered through either &lt;code&gt;auth_{$object_type}_meta_{$meta_key}_for_{$object_subtype}&lt;/code&gt; or &lt;code&gt;auth_{$object_type}_meta_{$meta_key}&lt;/code&gt;. Then, it is further filtered through the deprecated &lt;code&gt;auth_{$object_type}_{$object_subtype}_meta_{$meta_key}&lt;/code&gt; (only if still being used, which is unlikely due to the relatively short existence of this filter). After that, we have the final result whether to allow or disallow the action.
&lt;/li&gt;&lt;li&gt;In the REST API, the behavior of a meta key is based on whether it is registered for the current object type and subtype. &lt;em&gt;Only if&lt;/em&gt; there is no such registration present, it falls back to a registration for the object type without subtype (if available).
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Easy-to-understand utility functions wrapping around &lt;code&gt;register_meta()&lt;/code&gt; and &lt;code&gt;unregister_meta_key()&lt;/code&gt; have been introduced, similar like we have functions like &lt;code&gt;get_post_meta()&lt;/code&gt;, &lt;code&gt;get_term_meta()&lt;/code&gt; etc. The new functions are:
&lt;ul&gt;&lt;li&gt;&lt;code&gt;register_post_meta( $post_type, $meta_key, $args )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;unregister_post_meta( $post_type, $meta_key )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;register_term_meta( $taxonomy, $meta_key, $args )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;unregister_term_meta( $taxonomy, $meta_key )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;register_comment_meta( $comment_type, $meta_key, $args )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;unregister_comment_meta( $comment_type, $meta_key )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;register_user_meta( $user_type, $meta_key, $args )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;unregister_user_meta( $user_type, $meta_key )&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
We may wanna discuss the signature of these functions. Some explanation on my approach here: I put the subtype parameter first, as we wanna encourage developers to register their metadata per subtype (i.e. make it a required parameter). While comments and users don't really have subtypes at this point, I still think we should be consistent in all these functions, and by that also keep them future-proof (if we decide to make actual use of comment types or introduce user types). Furthermore, in each of the functions it is documented that an empty string may be passed as first parameter to ignore the subtype and still use the functions for the entire object type - so they still allow for full flexibility.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43583 (Introduce new PHP cross-version compat function `is_countable()`) reopened</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 05 May 2018 15:38:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43583#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43583#comment:18/1525534699298786</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>38323.6.diff attached to Ticket #38323</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Sat, 05 May 2018 15:23:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38323/38323.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38323/38323.6.diff/1525533817899436</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>43583-improvements.patch attached to Ticket #43583</title>
      
        <dc:creator>ayeshrajans</dc:creator>

      <pubDate>Sat, 05 May 2018 14:48:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43583/43583-improvements.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43583/43583-improvements.patch/1525531707503610</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43583 (Introduce new PHP cross-version compat function `is_countable()`) updated</title>
      
        <dc:creator>ayeshrajans</dc:creator>

      <pubDate>Sat, 05 May 2018 14:47:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43583#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43583#comment:17/1525531637452805</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I maintain a standalone PHP polyfill for the &lt;code&gt;is_countable&lt;/code&gt; function, and Craig, who was involved in the PHP RFC to bring this function to PHP 7.3 opened a PR there about an edge-case: &lt;a class="ext-link" href="https://github.com/Ayesh/is_countable-polyfill/pull/4"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/Ayesh/is_countable-polyfill/pull/4&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Turns out PHP classes added by extensions can internally implement a &lt;code&gt;count_elements&lt;/code&gt; handler that allows PHP engine to successfully return a value without triggerring any warnings, which makes all objects from that class are countable.
&lt;/p&gt;
&lt;p&gt;
I tested this with a compiled php-src master.
&lt;/p&gt;
&lt;p&gt;
The attached patch updates the is_countable compat code and expand its test coverage for this edge-case. As of now, &lt;code&gt;SimpleXMLElement&lt;/code&gt; and &lt;code&gt;ResourceBundle&lt;/code&gt; from Intl extension are the only classes that implement this handler. The patch is loosely based on &lt;a class="ext-link" href="https://github.com/Ayesh/is_countable-polyfill/commit/d8c20caa4abd8ef8de5128d3a62d4ee385f51174"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/Ayesh/is_countable-polyfill/commit/d8c20caa4abd8ef8de5128d3a62d4ee385f51174&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17262 (wp_get_attachment_thumb_file should check new 'thumbnail' image size) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 05 May 2018 13:04:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17262#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17262#comment:33/1525525479016363</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17262 (wp_get_attachment_thumb_file should check new 'thumbnail' image size) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 05 May 2018 13:04:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17262#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17262#comment:32/1525525468113884</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43977 (Fix error-prone string to array parsing) created</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Sat, 05 May 2018 11:28:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43977</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43977/1525519681705151</guid>
      <description>&lt;p&gt;
In the REST API (and sometimes in other areas of core too) it's a common procedure to parse a string into an array, splitting at comma characters. I noticed an issue that can easily lead to unexpected behavior when an empty value is passed.
&lt;/p&gt;
&lt;p&gt;
Several functions in core use this behavior: &lt;code&gt;$list = preg_split( '/[\s,]+/', $list );&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
However, it causes empty strings to be parsed into an array containing an empty string, where I would expect it to just be an empty array. In the REST API, this can cause strange behavior:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If you call &lt;code&gt;wp/v2/posts/?include=&lt;/code&gt;, WordPress will search for posts with ID 0 (which won't change the response, but is still somewhat clunky).
&lt;/li&gt;&lt;li&gt;If you call &lt;code&gt;wp/v2/posts/?slug=&lt;/code&gt;, WordPress will search for posts with an empty slug (which won't change the response, but is still somewhat clunky).
&lt;/li&gt;&lt;li&gt;More importantly though: If you call &lt;code&gt;wp/v2/posts/?status=&lt;/code&gt;, you will get a strange error saying "Status is forbidden". That is because it validates the empty string in the parsed array against the enum whitelist, with that check obviously failing. It's not a required parameter, so in this case, it should instead just be ignored.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
We should look for functions that perform the above parsing procedure and fix them.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>17262.5.diff attached to Ticket #17262</title>
      
        <dc:creator>mfgmicha</dc:creator>

      <pubDate>Sat, 05 May 2018 11:26:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17262/17262.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17262/17262.5.diff/1525519589823782</guid>
      <description>&lt;p&gt;
My first patch for WordPress :-) Have not been tested yet. Quick review done by @SergeyBiryukov
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43542 (Duplicate MIME-Version header) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 05 May 2018 10:32:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43542#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43542#comment:5/1525516369775273</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43542 (Duplicate MIME-Version header) updated</title>
      
        <dc:creator>bennemann</dc:creator>

      <pubDate>Sat, 05 May 2018 10:13:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43542#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43542#comment:4/1525515192956078</guid>
      <description>&lt;p&gt;
I just put the solution from @studyboi into a .diff
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>.diff attached to Ticket #43542</title>
      
        <dc:creator>bennemann</dc:creator>

      <pubDate>Sat, 05 May 2018 10:11:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43542/.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43542/.diff/1525515100839728</guid>
      <description>&lt;p&gt;
Patch for preventing to set multiple headers
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43221 (Don't hide the Help tab on small screens) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 05 May 2018 10:11:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43221#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43221#comment:6/1525515096393519</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32548 (Unecessary White Space Above Table) updated</title>
      
        <dc:creator>Matthias Reuter</dc:creator>

      <pubDate>Sat, 05 May 2018 10:08:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32548#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32548#comment:4/1525514902329001</guid>
      <description>&lt;p&gt;
Seems to be a classical wpautop case. When inserting structured HTML into a post, linebreaks will be converted to &amp;lt;br&amp;gt; or &amp;lt;p&amp;gt; through wpautop.
&lt;/p&gt;
&lt;p&gt;
There are plugins available to disable wpautop on certain posts: &lt;a class="ext-link" href="https://de.wordpress.org/plugins/toggle-wpautop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://de.wordpress.org/plugins/toggle-wpautop/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This will require users to decide whether to:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;disable wpautop when linebreak-formatted HTML is used. If you have a big site, you may insert many &amp;lt;p&amp;gt;-Tags and/or &amp;lt;br /&amp;gt; tags manually for formatting text.
&lt;/li&gt;&lt;li&gt;keep wpautop enabled, but write all HTML in line.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This occurs too with linebreak-formatted div-tags etc.
&lt;/p&gt;
&lt;p&gt;
I don't think this is a bug, as wpautop just does it's job and you should disable it when you work with complex HTML in your Post.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43221 (Don't hide the Help tab on small screens) updated</title>
      
        <dc:creator>printsachen1</dc:creator>

      <pubDate>Sat, 05 May 2018 09:57:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43221#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43221#comment:5/1525514271752634</guid>
      <description>&lt;p&gt;
@wcretreat in Germany at the Contributing we are looking at this ticket.
We think it's helpful and works on mobile.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40244 (Inconsistent casing in the list table select filters) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 05 May 2018 09:46:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40244#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40244#comment:8/1525513615330906</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43803 (Change all the occurrences of `(opens in a new window)` to `(opens in ...) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 05 May 2018 09:44:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43803#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43803#comment:5/1525513463113592</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43174" title="Administration: Change all the occurrences of &amp;#34;(opens in a new ..."&gt;43174&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Administration: Change all the occurrences of "(opens in a new window)" to "(opens in a new tab)".&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props chetan200891, ianbelanger, afercia.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43803" title="#43803: enhancement: Change all the occurrences of `(opens in a new window)` to `(opens in ... (closed: fixed)"&gt;#43803&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [43174]: Administration: Change all the occurrences of "(opens in a new ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 05 May 2018 09:44:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43174</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43174/1525513461995987</guid>
      <description>&lt;p&gt;
Administration: Change all the occurrences of "(opens in a new window)" to "(opens in a new tab)".
&lt;/p&gt;
&lt;p&gt;
Props chetan200891, ianbelanger, afercia.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43803" title="#43803: enhancement: Change all the occurrences of `(opens in a new window)` to `(opens in ... (closed: fixed)"&gt;#43803&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #42364 (Customize: Remove deprecated nav menu classes) updated</title>
      
        <dc:creator>Matthias Reuter</dc:creator>

      <pubDate>Sat, 05 May 2018 09:41:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42364#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42364#comment:2/1525513293220515</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>42364.diff attached to Ticket #42364</title>
      
        <dc:creator>Matthias Reuter</dc:creator>

      <pubDate>Sat, 05 May 2018 09:40:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42364/42364.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42364/42364.diff/1525513256191781</guid>
      <description>&lt;p&gt;
I've created a diff with the patch to remove the classes mentioned.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40244 (Inconsistent casing in the list table select filters) updated</title>
      
        <dc:creator>webzunft</dc:creator>

      <pubDate>Sat, 05 May 2018 09:37:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40244#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40244#comment:7/1525513041715853</guid>
      <description>&lt;p&gt;
I looked for more occurrences of similar strings using regex &lt;code&gt;All [a-z]&lt;/code&gt; and didn’t find any that are relevant here. I also checked the code around the fixed strings and didn’t find similar texts that need adjustment of the casing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43964 ("Email Data" button text - Make it more clear that an export link is ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 05 May 2018 09:22:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43964#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43964#comment:7/1525512144346525</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43173" title="Privacy: Change &amp;#34;Email Data&amp;#34; link text on &amp;#34;Export Personal Data&amp;#34; ..."&gt;43173&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Privacy: Change "Email Data" link text on "Export Personal Data" screen to "Send Export Link" for clarity.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props birgire, ianbelanger.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43172" title="Privacy: Change &amp;#34;Email Data&amp;#34; link text on &amp;#34;Export Personal Data&amp;#34; ..."&gt;[43172]&lt;/a&gt; to the 4.9 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43964" title="#43964: enhancement: &amp;#34;Email Data&amp;#34; button text - Make it more clear that an export link is ... (closed: fixed)"&gt;#43964&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [43173]: Privacy: Change "Email Data" link text on "Export Personal Data" ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 05 May 2018 09:22:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43173</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43173/1525512143306341</guid>
      <description>&lt;p&gt;
Privacy: Change "Email Data" link text on "Export Personal Data" screen to "Send Export Link" for clarity.
&lt;/p&gt;
&lt;p&gt;
Props birgire, ianbelanger.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43172" title="Privacy: Change &amp;#34;Email Data&amp;#34; link text on &amp;#34;Export Personal Data&amp;#34; ..."&gt;[43172]&lt;/a&gt; to the 4.9 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43964" title="#43964: enhancement: &amp;#34;Email Data&amp;#34; button text - Make it more clear that an export link is ... (closed: fixed)"&gt;#43964&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43959 (Twenty Seventeen: Responsive width bug) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 05 May 2018 09:21:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43959#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43959#comment:5/1525512077112295</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43964 ("Email Data" button text - Make it more clear that an export link is ...) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 05 May 2018 09:16:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43964#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43964#comment:6/1525511793190381</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43172" title="Privacy: Change &amp;#34;Email Data&amp;#34; link text on &amp;#34;Export Personal Data&amp;#34; ..."&gt;43172&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Privacy: Change "Email Data" link text on "Export Personal Data" screen to "Send Export Link" for clarity.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props birgire, ianbelanger.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43964" title="#43964: enhancement: &amp;#34;Email Data&amp;#34; button text - Make it more clear that an export link is ... (closed: fixed)"&gt;#43964&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [43172]: Privacy: Change "Email Data" link text on "Export Personal Data" ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 05 May 2018 09:16:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43172</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43172/1525511792088106</guid>
      <description>&lt;p&gt;
Privacy: Change "Email Data" link text on "Export Personal Data" screen to "Send Export Link" for clarity.
&lt;/p&gt;
&lt;p&gt;
Props birgire, ianbelanger.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43964" title="#43964: enhancement: &amp;#34;Email Data&amp;#34; button text - Make it more clear that an export link is ... (closed: fixed)"&gt;#43964&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43803 (Change all the occurrences of `(opens in a new window)` to `(opens in ...) updated</title>
      
        <dc:creator>webzunft</dc:creator>

      <pubDate>Sat, 05 May 2018 08:56:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43803#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43803#comment:4/1525510582222670</guid>
      <description>&lt;p&gt;
Checked the patch (43803.2.diff) and it does what it was supposed to. No other occurrences of "opens in a new window" found.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #43927,​43971 batch updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Sat, 05 May 2018 07:06:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=43927%2C43971</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=43927%2C43971/1525503985605452</guid>
      <description>duplicate: &lt;p&gt;
Thank you for the report, we are already tracking this in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43927" title="#43927: enhancement: Filter policy help blocks away from the_content (closed: fixed)"&gt;#43927&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #43975 (If data export &lt; 10MB can it be added to email as attachment - GDPR) closed</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Sat, 05 May 2018 06:59:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43975#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43975#comment:2/1525503573258534</guid>
      <description>wontfix: &lt;p&gt;
Different email hosts have different limitations on attachments, as well as how much free space you may have left for your inbox etc plays in here.
&lt;/p&gt;
&lt;p&gt;
There's just too many "what if" scenarios when sending files of any size, it's better for us to avoid that altogether, as such I'll &lt;code&gt;wontfix&lt;/code&gt; this. If there's a compelling reason why it should be done despite this, please do feel free to re-open.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43964 ("Email Data" button text - Make it more clear that an export link is ...) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Sat, 05 May 2018 06:14:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43964#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43964#comment:5/1525500884538046</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43976 (Provide mechanism to opt-out of commenter cookies without needing to ...) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Sat, 05 May 2018 05:59:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43976#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43976#comment:1/1525499968825976</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43929 (Privacy pages: buttons should be buttons and other coding standards) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Sat, 05 May 2018 05:59:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43929#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43929#comment:4/1525499951658698</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43929/43929.diff" title="Attachment '43929.diff' in Ticket #43929"&gt;43929.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43929/43929.diff" title="Download"&gt;​&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks @afercia for taking time to check things.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;converts &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;lt;buttons&amp;gt;&lt;/code&gt; where needed in &lt;code&gt;user.php&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;converts all css classes with &lt;code&gt;-&lt;/code&gt; instead of &lt;code&gt;_&lt;/code&gt; in &lt;code&gt;user.php&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;groups &lt;code&gt;vars&lt;/code&gt; in &lt;code&gt;xfn.js&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;fixes various coding standards in &lt;code&gt;user.php / xfn.js&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I tested everything ( using trunk ) but please do thorough tests as all action handlers etc have been touched :]
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;Note: I didn't mess with non-privacy code so there are still a couple of CS notices in those files.&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
cc @allendav ( pinging since you know these actions better than anyone :D )
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43929.diff attached to Ticket #43929</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Sat, 05 May 2018 05:50:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43929/43929.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43929/43929.diff/1525499420759513</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43958 (Pingbacks Trackbacks and Data Export/Deletion/GDPR) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Sat, 05 May 2018 04:42:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43958#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43958#comment:2/1525495366865856</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43967 (Admin emails after email confirmation don't work for data privacy requests) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Sat, 05 May 2018 04:40:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43967#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43967#comment:2/1525495241683226</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43968 (Add Request Type into Confirmation Email Subject for GDPR) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Sat, 05 May 2018 04:39:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43968#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43968#comment:1/1525495181721947</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43970 (Add request type to the confirmation confirmation page - GDPR) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Sat, 05 May 2018 04:38:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43970#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43970#comment:1/1525495111213781</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43971 (Add safeties to avoid policy help text being displayed on front-end - GDPR) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Sat, 05 May 2018 04:37:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43971#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43971#comment:1/1525495079150556</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43973 (Email user once removal request completed - GDPR) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Sat, 05 May 2018 04:36:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43973#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43973#comment:1/1525494960027636</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43974 (Both personal data request processes should follow the same convention) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Sat, 05 May 2018 04:34:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43974#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43974#comment:1/1525494882610264</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43975 (If data export &lt; 10MB can it be added to email as attachment - GDPR) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Sat, 05 May 2018 04:32:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43975#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43975#comment:1/1525494773056572</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #43913,​43972 batch updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Sat, 05 May 2018 04:31:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=43913%2C43972</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=43913%2C43972/1525494687582373</guid>
      <description>duplicate: &lt;p&gt;
Hey @garrett-eclipse thanks for the report!
&lt;/p&gt;
&lt;p&gt;
This is a duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43913" title="#43913: defect (bug): On sending the personal data export email, the request should be ... (closed: fixed)"&gt;#43913&lt;/a&gt; ( export ) and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43922" title="#43922: defect (bug): Data removal/erasure requests don't get marked as &amp;#34;Completed&amp;#34; after ... (closed: fixed)"&gt;#43922&lt;/a&gt; ( removal ) and there is a patch there for both already fixing this it was just not committed yet.
&lt;/p&gt;
&lt;p&gt;
Closing this to avoid extra efforts at the moment.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>43936.3.diff attached to Ticket #43936</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Sat, 05 May 2018 03:27:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43936/43936.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43936/43936.3.diff/1525490851424026</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43953 (Seeing the `privacy policy text has changed` notice on fresh installs ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 05 May 2018 03:27:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43953#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43953#comment:1/1525490831645519</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #gdpr-compliance by desrosj. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/gdpr-compliance/p1525490831000011"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43936 (Settings: Warn when open registration and new user default is privileged) updated</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Sat, 05 May 2018 03:14:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43936#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43936#comment:5/1525490071713683</guid>
      <description>&lt;p&gt;
A couple of things:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;We should add a filter so plugins can add additional roles (e.g. Keymaster) to exclude or to allow more roles (e.g. a private intranet where one _does_ want to allow new users as Admins).
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;Does it make sense to exclude roles or exclude certain capabilities?
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43936.2.diff attached to Ticket #43936</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Sat, 05 May 2018 03:11:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43936/43936.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43936/43936.2.diff/1525489905465908</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43936 (Settings: Warn when open registration and new user default is privileged) updated</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Sat, 05 May 2018 03:11:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43936#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43936#comment:4/1525489877467975</guid>
      <description>&lt;p&gt;
Thanks for the patch @subrataemfluence! A couple of logistical notes on the patch - It is helpful to run the svn diff from the root so you have the full path (e.g. src/wp-admin/includes/template.php instead of just template.php). That'll make it easier to apply to patch.
&lt;/p&gt;
&lt;p&gt;
Also, be sure your code follow WordPress Coding Standards ( &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/coding-standards/php/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/handbook/best-practices/coding-standards/php/&lt;/a&gt; ). There were a few spacing issues that I noticed.
&lt;/p&gt;
&lt;p&gt;
Submitting a follow-up patch that includes updated inline docs, coding standards compliance, and implements the modified &lt;code&gt;wp_dropdown_roles&lt;/code&gt; to resolve the ticket issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>