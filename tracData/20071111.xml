<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Changeset in tests [81]: add mask_input_value() util function</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Sun, 11 Nov 2007 22:38:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/81/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/81/tests/1194820737814566</guid>
      <description>&lt;p&gt;
add mask_input_value() util function
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #5339 (Unused $pwd variable in wp_login() function) updated</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Sun, 11 Nov 2007 22:27:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5339#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5339#comment:1/1194820060000000</guid>
      <description>&lt;p&gt;
Perhaps &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2244" title="#2244: defect (bug): Make login error check case-sensitive (closed: fixed)"&gt;#2244&lt;/a&gt; should be decided upon too, I think i removed that variable in the patch there too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>empty-smilie-regex-r6307.patch attached to Ticket #5340</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Sun, 11 Nov 2007 22:04:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5340/empty-smilie-regex-r6307.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5340/empty-smilie-regex-r6307.patch/1194818654000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5340 (Regex warning in convert_smilies) created</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Sun, 11 Nov 2007 22:04:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5340</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5340/1194818641000000</guid>
      <description>&lt;p&gt;
It's possible for convert_smilies() to produce warnings if the $wp_smiliessearch global is empty.  The enclosed patch is a simple defensive conditional to guard against that possbility.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5338 (Performance Tweaks for WordPress Trunk Plugin API) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Sun, 11 Nov 2007 21:32:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5338#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5338#comment:10/1194816726000000</guid>
      <description>&lt;p&gt;
We've documented 1 - 10 in the past, but it was never enforced in code and some places in WP use values like 15, 20, 25, and 50.  We could probably go to a 0 - 15 scale and set values &amp;gt; 15 to 15.  I think 0-15 would cover most current uses.  The priorities used in default-filters can be changed to fall in this range. There's no reason for priorities as high as 50.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5328 (Make default feed format pluggable) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Sun, 11 Nov 2007 21:18:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5328#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5328#comment:9/1194815915000000</guid>
      <description>&lt;p&gt;
FWIW, here's the patch I've been playing with.  It adds a feed_type arg to wp_list_authors() and wp_list_categories().  It deprecates old _rss_link() functions and moves all feed_link functions to link-template.php so that they are not so scattered.  No template changes are made.  That's for later.
&lt;/p&gt;
&lt;p&gt;
This patch still uses get_default_feed() rather than an option.  I'll bring up adding an option for this in the next dev meeting.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>default_feed.diff attached to Ticket #5328</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Sun, 11 Nov 2007 21:14:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5328/default_feed.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5328/default_feed.diff/1194815696000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5338 (Performance Tweaks for WordPress Trunk Plugin API) updated</title>
      
        <dc:creator>Quandary</dc:creator>

      <pubDate>Sun, 11 Nov 2007 21:07:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5338#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5338#comment:9/1194815269000000</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="http://codex.wordpress.org/Function_Reference/add_action"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Wiki&lt;/a&gt;. Apply_filter does not have a corresponding limit. This should go to a new bug; it's tangential to the patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5339 (Unused $pwd variable in wp_login() function) created</title>
      
        <dc:creator>epper</dc:creator>

      <pubDate>Sun, 11 Nov 2007 20:57:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5339</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5339/1194814632000000</guid>
      <description>&lt;p&gt;
I was looking the code of wp_login() in wp-includes/pluggable.php and I've seen that there's an unused variable: $pwd on line 305:
&lt;/p&gt;
&lt;pre class="wiki"&gt;303 	        } else {
304 	            $error = __('&amp;lt;strong&amp;gt;ERROR&amp;lt;/strong&amp;gt;: Incorrect password.');
305 	            $pwd = '';
306 	            return false;
307 	        }
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5338 (Performance Tweaks for WordPress Trunk Plugin API) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Sun, 11 Nov 2007 20:55:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5338#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5338#comment:8/1194814545000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5338#comment:3" title="Comment 3"&gt;Quandary&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
... because the documentation &lt;strong&gt;specifically&lt;/strong&gt; states that priority levels are 1-10. Anyone doing otherwise is broken.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Where do you see that?  Even the default filters in wp-includes/default-filters.php have much higher numbers than that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5338 (Performance Tweaks for WordPress Trunk Plugin API) updated</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Sun, 11 Nov 2007 20:54:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5338#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5338#comment:7/1194814482000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5338 (Performance Tweaks for WordPress Trunk Plugin API) updated</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Sun, 11 Nov 2007 20:13:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5338#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5338#comment:6/1194811995000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Look at the taxonomy. Apply filters are used on objects. Therefore the documentation is correct.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5338#comment:5" title="Comment 5"&gt;Quandary&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
You also need to pre-define it if you take out the array sort (I don't see any sorting being done on $wp_filters anymore). Otherwise, the priorities will get all screwed up. Pri-10 will likely wind up running first, because it'll usually be the first level created.
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;?php
$example = array();
$example[10] = "This is supposed to be last";
$example[1] = "This is supposed to be first";
foreach($example as $text)
    echo "$text\n";
?&amp;gt;
&lt;/pre&gt;&lt;h3 id="Output"&gt;Output&lt;/h3&gt;
&lt;pre class="wiki"&gt;This is supposed to be last
This is supposed to be first
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
This the reason I had keywords 'needs-testing', I had thought this is the case. Without testing, it is unknown whether this would be the case. I will submit a new patch that fixes this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5338 (Performance Tweaks for WordPress Trunk Plugin API) updated</title>
      
        <dc:creator>Quandary</dc:creator>

      <pubDate>Sun, 11 Nov 2007 20:10:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5338#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5338#comment:5/1194811808000000</guid>
      <description>&lt;p&gt;
You also need to pre-define it if you take out the array sort (I don't see any sorting being done on $wp_filters anymore). Otherwise, the priorities will get all screwed up. Pri-10 will likely wind up running first, because it'll usually be the first level created.
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;?php
$example = array();
$example[10] = "This is supposed to be last";
$example[1] = "This is supposed to be first";
foreach($example as $text)
    echo "$text\n";
?&amp;gt;
&lt;/pre&gt;&lt;h3 id="Output"&gt;Output&lt;/h3&gt;
&lt;pre class="wiki"&gt;This is supposed to be last
This is supposed to be first
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5338 (Performance Tweaks for WordPress Trunk Plugin API) updated</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Sun, 11 Nov 2007 20:04:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5338#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5338#comment:4/1194811472000000</guid>
      <description>&lt;p&gt;
Yeah, then it should lock those numbers in, which it doesn't. It allows for any number, therefore unofficially, any priority number must be supported. The documentation states that to keep things standard, but without checks in the code, then it really is just an &lt;strong&gt;suggestion&lt;/strong&gt; on what the plugin authors should do and not what they must do. If it was something they must do, then an error would have been thrown.
&lt;/p&gt;
&lt;p&gt;
The point is, if I hook into 11, then I mostly know that it will be processed last and if I hook into '0' I can guess that it will be run before anything else.
&lt;/p&gt;
&lt;p&gt;
There is no point arguing this, either we add in the checks or we don't, but unless we do, then filling the priority list manually is not an option.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5338 (Performance Tweaks for WordPress Trunk Plugin API) updated</title>
      
        <dc:creator>Quandary</dc:creator>

      <pubDate>Sun, 11 Nov 2007 19:55:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5338#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5338#comment:3/1194810903000000</guid>
      <description>&lt;p&gt;
... because the documentation &lt;strong&gt;specifically&lt;/strong&gt; states that priority levels are 1-10. Anyone doing otherwise is broken.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5338 (Performance Tweaks for WordPress Trunk Plugin API) updated</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Sun, 11 Nov 2007 19:45:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5338#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5338#comment:2/1194810342000000</guid>
      <description>&lt;p&gt;
I can't and will not advocate something so hackish. What about plugins that hook into at priority of '11' or '12'? Plugins that want to execute after everything else would want to hook into priority of 11, as I have done before with 'init'.
&lt;/p&gt;
&lt;p&gt;
If that is the case, then everything else is pointless and should be reverted back, since it has been known to work.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5335 (Performance tweak for apply_filters loop) updated</title>
      
        <dc:creator>Quandary</dc:creator>

      <pubDate>Sun, 11 Nov 2007 19:44:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5335#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5335#comment:4/1194810292000000</guid>
      <description>&lt;p&gt;
For the record, this patch is written and tested against &lt;em&gt;2.3.1&lt;/em&gt;, not 2.4/trunk.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4595 (Format of feed (RSS, Atom) should be an option) updated</title>
      
        <dc:creator>rubys</dc:creator>

      <pubDate>Sun, 11 Nov 2007 19:35:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4595#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4595#comment:8/1194809716000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5338 (Performance Tweaks for WordPress Trunk Plugin API) updated</title>
      
        <dc:creator>Quandary</dc:creator>

      <pubDate>Sun, 11 Nov 2007 19:30:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5338#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5338#comment:1/1194809422000000</guid>
      <description>&lt;p&gt;
The foreach setup breaks in this implementation, because the priority array is not pre-filled; you'll get a bug if, e.g., a pri-1 callback adds a pri-2 callback on the currently-executing hook, and there are no pri-2 callbacks yet. Please see the &lt;em&gt;second&lt;/em&gt; patch attached to bug &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5335" title="#5335: enhancement: Performance tweak for apply_filters loop (closed: invalid)"&gt;#5335&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I'm also pretty sure that filters (as implemented for apply_filters) are applicable to strings &lt;em&gt;only&lt;/em&gt;. do_action is more generic, but it has a completely separate implementation for that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5328 (Make default feed format pluggable) updated</title>
      
        <dc:creator>rubys</dc:creator>

      <pubDate>Sun, 11 Nov 2007 18:47:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5328#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5328#comment:8/1194806876000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5328#comment:6" title="Comment 6"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Let's split this into two parts.The first part would make it possible to change the default feed in the guts of WP.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That would be &lt;a class="ext-link" href="http://trac.wordpress.org/ticket/4595"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Ticket 4595&lt;/a&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The second would allow themes to be feed type neutral, which is the bigger change.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Once of the various patches to ticket 4595 is committed, I'll gladly generate a new patch for 5328 which builds upon this.  Making a subset of the various names translatable and/or actually translating them could be a third ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5328 (Make default feed format pluggable) updated</title>
      
        <dc:creator>jasonadamyoung</dc:creator>

      <pubDate>Sun, 11 Nov 2007 18:22:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5328#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5328#comment:7/1194805363000000</guid>
      <description>&lt;p&gt;
If this is going to be part of core - is there any reason why this shouldn't be part of the wp_options?  I admittedly haven't traced the execution of this everywhere, but it seems like get_option('default_feed_format') would be preferred over get_default_feed and still hardcoding 'rss2' in that (or even hardcoding it in a sense in a wp_feed_selector).
&lt;/p&gt;
&lt;p&gt;
I might be missing something in the overhead of the options use, but it looks like the options already have filter hooks - and sticking this in wp_options leaves open the door for a interface plugin to set the default feed format from within the admin interface.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>plugin.r6328.patch attached to Ticket #5338</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Sun, 11 Nov 2007 17:39:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5338/plugin.r6328.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5338/plugin.r6328.patch/1194802773000000</guid>
      <description>&lt;p&gt;
Based off of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6328" title="phpdoc for get_category_feed_link(). see #5173"&gt;r6328&lt;/a&gt; for the Plugin API
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5338 (Performance Tweaks for WordPress Trunk Plugin API) created</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Sun, 11 Nov 2007 17:39:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5338</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5338/1194802742000000</guid>
      <description>&lt;p&gt;
Clean up Plugin API functions and some optimization tweaks based on WP-Hackers discussion.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Use Foreach instead of while loops
&lt;/li&gt;&lt;li&gt;Move 'all' hook call to its own function
&lt;/li&gt;&lt;li&gt;Set current filter tag variable after the check for the hook's existence.
&lt;/li&gt;&lt;li&gt;Remove merged_filters variable
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5337 (Wrong timezone with comment_time and the_time since DST ended) created</title>
      
        <dc:creator>jrawle</dc:creator>

      <pubDate>Sun, 11 Nov 2007 17:34:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5337</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5337/1194802478000000</guid>
      <description>&lt;p&gt;
I am designing a theme where I want the current timezone to be displayed after the time in comment and post timestamps. For example, I use &amp;lt;?php comment_time() ?&amp;gt; with my default time format set to H:i T.
&lt;/p&gt;
&lt;p&gt;
I am in the UK, and until the clocks changed on 28 October everything was fine. Posts or comments written during a summer gave the time as e.g. "14:00 BST" while those written in the winter said "13:00 GMT".
&lt;/p&gt;
&lt;p&gt;
However, since BST ended, I now see "UTC" for all datestamps, irrespective of whether they were posted during the summer or winter. So the two examples given above would now show "14:00 UTC" and "13:00 UTC" respectively, despite the fact that the first one is incorrect. I also don't understand why it switched from using GMT to UTC.
&lt;/p&gt;
&lt;p&gt;
I do not know whether this bug is present in other timezones.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5336 (TinyMCE Mangles &lt;object&gt; tag's) created</title>
      
        <dc:creator>DaveHope</dc:creator>

      <pubDate>Sun, 11 Nov 2007 10:21:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5336</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5336/1194776470000000</guid>
      <description>&lt;p&gt;
I'm trying to embed some flash to a page on my site, I'm entering the correct &amp;lt;object&amp;gt; &amp;amp; &amp;lt;enbed&amp;gt; code into the page, which displays fine.
&lt;/p&gt;
&lt;p&gt;
However, If I goto edit the page at a later date the code gets mangled, wordpress inserts a &amp;lt;/object&amp;gt; before the &amp;lt;embed&amp;gt; and replaces me closing /&amp;gt; with &amp;gt;&amp;lt;/embed&amp;gt;
&lt;/p&gt;
&lt;p&gt;
This is a real pain, as it means I have to re-edit my flash every time i alter the page.
&lt;/p&gt;
&lt;p&gt;
Is there a tag to prevent wordpress altering html, or should this be reported as a bug? - I'm guessing the html tidy process doesn't like &amp;lt;object&amp;gt; &amp;amp; &amp;lt;embed&amp;gt;
&lt;/p&gt;
&lt;p&gt;
The HTML i'm adding to the code window can be seen here:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" codebase="http://fpdownload.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=8,0,0,0" height="600" width="500"&amp;gt;
&amp;lt;param name="movie" value="/Files/polaroid.swf" /&amp;gt;
&amp;lt;param name="menu" value="false" /&amp;gt;
&amp;lt;param name="quality" value="high" /&amp;gt;
&amp;lt;param name="flashvars" value="flickrID=17378729@N00" /&amp;gt;&amp;lt;embed src="/Files/polaroid.swf" menu="false" quality="high" bgcolor="#fff" flashvars="flickrID=17378729@N00" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" height="600" width="500" /&amp;gt;&amp;lt;/object&amp;gt;
&lt;/pre&gt;&lt;p&gt;
I know that as a wordaround I could probably disable the TinyMCE editor, but 95% of the time it's fine.
&lt;/p&gt;
&lt;p&gt;
Dave
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5328 (Make default feed format pluggable) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Sun, 11 Nov 2007 02:49:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5328#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5328#comment:6/1194749370000000</guid>
      <description>&lt;p&gt;
My patch marks the long name for translation.  Realistically, for translation to be useful, feed info for all feeds need to be in core so that the strings will be in the default message catalog.  Otherwise, the plugin will need to ship with its own translations.  i18n theme authors probably won't bother changing their themes to use feed info if it means relying on an outside catalog. The fact that this requires theme changes and has i18n impact makes this more involved than if we were just changing the default feed links to do atom instead of rss2. comments_feed_link(), for example, is useless for an i18n-ready theme.  Such themes would have to do something like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;p&amp;gt;&amp;lt;a href="&amp;lt;?php echo get_post_comments_feed_link($post-&amp;gt;ID); ?&amp;gt;"&amp;gt;&amp;lt;?php printf(__("%s feed for comments on this post."), get_bloginfo('feed_format_long_name'); ?&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Let's split this into two parts.  The first part would make it possible to change the default feed in the guts of WP.  The second would allow themes to be feed type neutral, which is the bigger change.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5335 (Performance tweak for apply_filters loop) updated</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Sun, 11 Nov 2007 00:07:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5335#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5335#comment:3/1194739668000000</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5335 (Performance tweak for apply_filters loop) updated</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Sat, 10 Nov 2007 23:15:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5335#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5335#comment:2/1194736557000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4595 (Format of feed (RSS, Atom) should be an option) updated</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Sat, 10 Nov 2007 22:55:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4595#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4595#comment:7/1194735325000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Relates to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5328" title="#5328: enhancement: Make default feed format pluggable (closed: fixed)"&gt;#5328&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5235 (Add Pre-flight checks to install) updated</title>
      
        <dc:creator>darkfate</dc:creator>

      <pubDate>Sat, 10 Nov 2007 21:58:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5235#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5235#comment:7/1194731905000000</guid>
      <description>&lt;p&gt;
@DD32: Yes, there should also be check for mail()
&lt;/p&gt;
&lt;p&gt;
I don't think WP should recommend a different host, but do like what's in the patch already. There should obviously be a check again button so that a person who operates their own server can change it and just hit check again and have the next button turn into a link if everything is good to go.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5335 (Performance tweak for apply_filters loop) updated</title>
      
        <dc:creator>Quandary</dc:creator>

      <pubDate>Sat, 10 Nov 2007 21:54:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5335#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5335#comment:1/1194731665000000</guid>
      <description>&lt;p&gt;
Stats on the second patch:
&lt;/p&gt;
&lt;table class="wiki"&gt;
&lt;tr&gt;&lt;td colspan="2"&gt;original&lt;/td&gt;&lt;td&gt;patched
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;total runtime (mean)&lt;/td&gt;&lt;td&gt;1,972,854&lt;/td&gt;&lt;td&gt;1,943,093
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;total runtime (std dev)&lt;/td&gt;&lt;td&gt;116,697&lt;/td&gt;&lt;td&gt;110,741
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;add_filter (mean)&lt;/td&gt;&lt;td&gt;14,424&lt;/td&gt;&lt;td&gt;14,592
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;add_filter (std dev)&lt;/td&gt;&lt;td&gt;5,458&lt;/td&gt;&lt;td&gt;3,224
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;apply_filters (mean)&lt;/td&gt;&lt;td&gt;120,694&lt;/td&gt;&lt;td&gt;103,971
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;apply_filters (std dev)&lt;/td&gt;&lt;td&gt;33,038&lt;/td&gt;&lt;td&gt;25,880
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;
Sample size is still 20.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5305 (permalinks broken when article name is numeric) updated</title>
      
        <dc:creator>darkfate</dc:creator>

      <pubDate>Sat, 10 Nov 2007 21:38:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5305#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5305#comment:2/1194730732000000</guid>
      <description>&lt;p&gt;
I don't think he's using permalinks. I think he's saying, like if his post slug is 123 and his title is 123, it breaks. It looks like 2.4 trunk doesn't break like that though. Unless it is a specific permalink structure.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3433 (Option FollowSymLinks) updated</title>
      
        <dc:creator>darkfate</dc:creator>

      <pubDate>Sat, 10 Nov 2007 21:29:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3433#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3433#comment:5/1194730159000000</guid>
      <description>&lt;p&gt;
To my knowledge, there is no way to check with PHP that it's there. WordPress would have to write a test htaccess file and then ask the user if the redirection was working right. It's just not worth it since the majority of users have it enabled on their server. Maybe we can put a checkbox on the permalinks page that says something like "If you are experiencing 403 errors while using permalinks, check this box, otherwise don't touch it!"
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>use_foreach_with_wp_filter.diff attached to Ticket #5335</title>
      
        <dc:creator>Quandary</dc:creator>

      <pubDate>Sat, 10 Nov 2007 19:56:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5335/use_foreach_with_wp_filter.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5335/use_foreach_with_wp_filter.diff/1194724590000000</guid>
      <description>&lt;p&gt;
Use foreach everywhere $wp_filter is iterated over
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>use_foreach_in_apply_filters.diff attached to Ticket #5335</title>
      
        <dc:creator>Quandary</dc:creator>

      <pubDate>Sat, 10 Nov 2007 19:27:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5335/use_foreach_in_apply_filters.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5335/use_foreach_in_apply_filters.diff/1194722838000000</guid>
      <description>&lt;p&gt;
Optimize apply_filters
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5335 (Performance tweak for apply_filters loop) created</title>
      
        <dc:creator>Quandary</dc:creator>

      <pubDate>Sat, 10 Nov 2007 19:26:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5335</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5335/1194722794000000</guid>
      <description>&lt;p&gt;
This patch uses foreach to reduce the time it takes to execute apply_filters (on my box) from an average of 120,694 ticks/standard deviation 33,038 ticks, to an average of 99,149 ticks/standard deviation 20,636 ticks. The sample size was 20 runs each, before and after.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5334 (Inconsistent errors when trying to add a custom field) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Sat, 10 Nov 2007 12:55:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5334#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5334#comment:1/1194699357000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5328 (Make default feed format pluggable) updated</title>
      
        <dc:creator>rubys</dc:creator>

      <pubDate>Sat, 10 Nov 2007 01:35:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5328#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5328#comment:5/1194658559000000</guid>
      <description>&lt;p&gt;
The way I figure it, going from hardcoding the default feed format to hardcoding the info for all of the feed formats is but a half step.  A plugin is still required, and allowing people to control the full info means they can add Iâ™¥RSS icons, or links to the feed validator, or translate the long name into Russian or whatever.  Furthermore, specific themes could even check for additional information that is not provided by the default.
&lt;/p&gt;
&lt;p&gt;
If you look at the actual sample plugin for Atom, it really isn't all that much burden to the plugin authors, and reduces bloat from the WP Core.
&lt;/p&gt;
&lt;p&gt;
*shrug*
&lt;/p&gt;
&lt;p&gt;
I suggest you try the patch.  Create a clean wordpress install with the default theme, install the patch and active the Atom plugin and see what you think.  If you still prefer hardcoding the info for the feed formats in the core, I'm entirely OK with that.
&lt;/p&gt;
&lt;p&gt;
Unrelated: any idea why Trac won't show an HTML preview for my patches, but will show yours?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>feed-filter.diff attached to Ticket #5328</title>
      
        <dc:creator>rubys</dc:creator>

      <pubDate>Sat, 10 Nov 2007 01:28:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5328/feed-filter.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5328/feed-filter.diff/1194658116000000</guid>
      <description>&lt;p&gt;
second attempt to upload this patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item>
   </channel>
</rss>