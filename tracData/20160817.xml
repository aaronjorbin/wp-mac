<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #30497 (Impossible to change upgrader skin when Language_Pack_Upgrader is ...) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Wed, 17 Aug 2016 22:56:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30497#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30497#comment:3/1471474611145857</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>nicholas_io</dc:creator>

      <pubDate>Wed, 17 Aug 2016 22:46:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:5/1471473970888903</guid>
      <description>&lt;p&gt;
I'm all for it. but this seems to be a duplicated of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32468" title="#32468: feature request: Add Registry Class as WP_App (closed: duplicate)"&gt;#32468&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37700 (Warning: curl_exec() has been disabled for security reasons) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 17 Aug 2016 22:45:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37700#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37700#comment:2/1471473900153375</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looks like there's a logic slip in &lt;code&gt;Requests&lt;/code&gt; where it only bails from using cURL if BOTH &lt;code&gt;curl_init()&lt;/code&gt; AND &lt;code&gt;curl_exec()&lt;/code&gt; are unavailable. WordPress previously bailed when EITHER were unavailable.
&lt;/p&gt;
&lt;p&gt;
Created a PR upstream: &lt;a class="ext-link" href="https://github.com/rmccue/Requests/pull/230"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/rmccue/Requests/pull/230&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Wed, 17 Aug 2016 22:43:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:4/1471473792559959</guid>
      <description>&lt;p&gt;
Sorry for writing multiple messages, but every time I click send, a new thought crosses my mind.
&lt;/p&gt;
&lt;p&gt;
When evaluating whether interfaces are feasible, it should be noted that the current class name (&lt;code&gt;wpdb&lt;/code&gt;) would be ideal as the first level of interface migration.
&lt;/p&gt;
&lt;p&gt;
So, I would recommend starting by creating an interface &lt;code&gt;wpdb&lt;/code&gt;, and rename the current existing concrete implementation to &lt;code&gt;MySQLwpdb implements wpdb&lt;/code&gt;. In this way, we have introduced an interface that can be used for typehinting, while not breaking any existing &lt;code&gt;instanceof&lt;/code&gt; checks.
&lt;/p&gt;
&lt;p&gt;
Once namespaces are available, I would recommend adding another layer:
&lt;code&gt;interface wpdb;&lt;/code&gt;
&lt;code&gt;interface WP\Database extends wpdb;&lt;/code&gt;
&lt;code&gt;class WP\MySQLDatabase implements WP\Database;&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;WP\MySQLDatabase&lt;/code&gt; would still pass the &lt;code&gt;$wpdb instanceof wpdb&lt;/code&gt; checks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37690 (Backspace causes jumping) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Wed, 17 Aug 2016 22:43:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37690#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37690#comment:1/1471473785013600</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Wed, 17 Aug 2016 22:35:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:3/1471473313545277</guid>
      <description>&lt;p&gt;
I just thought of another argument for introducing interfaces.
&lt;/p&gt;
&lt;p&gt;
Right now, we can't just have everything within the Registry/Service Locator, as there's still lots of third-party code that depends on the &lt;code&gt;$wpdb&lt;/code&gt; global.
&lt;/p&gt;
&lt;p&gt;
Having interfaces also allows us to use the Decorator pattern, which we could use to elegantly show "deprecated" notices for code that still uses the actual global. So, the WPDB object gets instantiated, the Registry saves its instance, and then a &lt;code&gt;DeprecatedWPDBDecorator&lt;/code&gt; gets wrapped around that instance, and this wrapped version gets stored as the global &lt;code&gt;$wpdb&lt;/code&gt;. The decorator would just accept the exact same methods as the normal WPDB, but for each method, it would throw a deprecated notice before forwarding the arguments to the real method.
&lt;/p&gt;
&lt;p&gt;
This would open up a safe migration path to get people away from using the globals with due notice.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37697 (Strange behavior with thumbnails on preview in 4.6) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Wed, 17 Aug 2016 22:22:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37697#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37697#comment:7/1471472569524936</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37697/37697.4.diff" title="Attachment '37697.4.diff' in Ticket #37697"&gt;37697.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37697/37697.4.diff" title="Download"&gt;​&lt;/a&gt; is similar to &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37697/37697.3.diff" title="Attachment '37697.3.diff' in Ticket #37697"&gt;37697.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37697/37697.3.diff" title="Download"&gt;​&lt;/a&gt;, but adds some additional cleanup to the unit tests to avoid potential test spillage.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37697.4.diff attached to Ticket #37697</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Wed, 17 Aug 2016 22:20:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37697/37697.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37697/37697.4.diff/1471472447916451</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37680 (PHP Warning: ini_get_all() has been disabled for security reasons) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 17 Aug 2016 22:18:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37680#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37680#comment:5/1471472302592943</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37680#comment:2" title="Comment 2"&gt;blobaugh&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think we should follow in line here an return a false value. That will signify a possible issue with the call. Alternatively it could return a &lt;code&gt;WP_Error&lt;/code&gt; if having the &lt;code&gt;ini_*&lt;/code&gt; functions available is a hard requirement.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The problem is that &lt;code&gt;ini_set()&lt;/code&gt; and &lt;code&gt;ini_get()&lt;/code&gt; are most likely available, it's just that &lt;code&gt;ini_get_all()&lt;/code&gt; is disabled which causes an inability to determine if the &lt;code&gt;ini_set()&lt;/code&gt; will pass or not.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;WP_Error&lt;/code&gt; (which went unchecked) or &lt;code&gt;null&lt;/code&gt; could be also used thanks to core using strict type checking on the call (for some reason) - (&lt;code&gt;true&lt;/code&gt;: changeable, &lt;code&gt;false&lt;/code&gt;: not changeable, &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;WP_Error&lt;/code&gt;: who knows). We'd still only want to bail in the event it was &lt;code&gt;false&lt;/code&gt; and not &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;WP_Error&lt;/code&gt; though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37700 (Warning: curl_exec() has been disabled for security reasons) updated</title>
      
        <dc:creator>pross</dc:creator>

      <pubDate>Wed, 17 Aug 2016 22:16:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37700#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37700#comment:1/1471472188103003</guid>
      <description>&lt;p&gt;
Maybe after a function_exists() it should try a curl_init() and check the response to make sure it will actually work. Just a thought.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37697.3.diff attached to Ticket #37697</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 17 Aug 2016 22:12:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37697/37697.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37697/37697.3.diff/1471471922433891</guid>
      <description>&lt;p&gt;
Remove file upload
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37700 (Warning: curl_exec() has been disabled for security reasons) created</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Wed, 17 Aug 2016 22:10:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37700</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37700/1471471839155181</guid>
      <description>&lt;p&gt;
Some installs now use cURL when they didn't before following 4.6
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://wordpress.org/support/topic/warning-curl_exec-has-been-disabled-for-security-reasons?replies=13"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/warning-curl_exec-has-been-disabled-for-security-reasons?replies=13&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
As Otto said:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Additionally, the new Requests_Transport_cURL class does indeed check for function_exists('curl_exec') before attempting to use it, so it seems likely that your host is using suhosin or some other means of disabling functions which doesn't cause PHP to properly report that function as disabled.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Also some Jetpack folks have reported it and it doesn't seem that they rolled back.
&lt;/p&gt;
&lt;p&gt;
I don't know if there's a better check we can do for this.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Wed, 17 Aug 2016 22:08:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:2/1471471698107453</guid>
      <description>&lt;p&gt;
Now that I think about it, I might have just made some assumptions regarding the pattern name (have been doing too much work in that area lately). What you propose can indeed be called a Registry, provided that it never instantiates an object by itself, but only stores them. This would mean that the responsibility for instantiating the objects must lie somewhere else though.
&lt;/p&gt;
&lt;p&gt;
Opposed to that, the Service Locator would not retrieve instances to store them, but would rather instantiate them as needed when they are requested (and then storing them if they need to be shared).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37697 (Strange behavior with thumbnails on preview in 4.6) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 17 Aug 2016 22:03:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37697#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37697#comment:6/1471471426299734</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
There needs to be a unit test showing the effect of the additional &lt;code&gt;$post_id != $_REQUEST['preview_id']&lt;/code&gt; check.
&lt;/p&gt;
&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37697/37697.2.diff" title="Attachment '37697.2.diff' in Ticket #37697"&gt;37697.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37697/37697.2.diff" title="Download"&gt;​&lt;/a&gt; I added second unit test to demonstrate the fixed behaviour. I also added an &lt;code&gt;empty( $_REQUEST['preview_id'] )&lt;/code&gt; check to &lt;code&gt;_wp_preview_post_thumbnail_filter()&lt;/code&gt; and simplified the tests a bit.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;resets inside the tests should happen before the assertions. If an assertion fails, the following could won't be called
&lt;/li&gt;&lt;li&gt;simply doing &lt;code&gt;$GLOBALS['post'] = $old_post; &lt;/code&gt; should be enough there
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Wed, 17 Aug 2016 22:02:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:1/1471471348316466</guid>
      <description>&lt;p&gt;
Hell yes, it would be awesome to get rid of the globals.
&lt;/p&gt;
&lt;p&gt;
I'm fully aware that this is just a very rough first pass to get the discussions started, so I won't delve too much into technical details. I'd like to share some early observations, though, based on what you posted so far.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;1. Patch is huge&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
The patch is very unwieldy when the goal is to discuss basic concepts first. I think it would be more practical to limit patches on the actual "Registry", and one or two use cases until the general direction is clear.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;2. Existing pattern&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
What you call "Registry" here is commonly called a "Service Locator", which is a known pattern. The Service Locator is responsible for letting major subsystems interact with each other, by providing instances to each subsystem when requested.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;3. Still global&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
The way you've implemented this Registry/Service Locator here means that you've replaced one global with another global. When we start to put more subsystems into that Service Locator, the number of globals will of course reduce, but it cannot be completely brought down this way. A reference to &lt;code&gt;WP::get()&lt;/code&gt; means that the method &lt;code&gt;get()&lt;/code&gt; is called on the static (=global) &lt;code&gt;WP&lt;/code&gt; "instance". I put "instance" in brackets here, because it has not technically been instantiated (through the &lt;code&gt;new&lt;/code&gt; keyword), but it has state, and this state is made globally accessible.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;4. Using WP as object&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Relying on the &lt;code&gt;WP&lt;/code&gt; class name as the Service Locator is not ideal, as a future version of WordPress (PHP 5.3+) would most likely have &lt;code&gt;WP&lt;/code&gt; as the root namespace. That future version would probably offer something like &lt;code&gt;WP\Service::get( 'wpdb' );&lt;/code&gt;, so something like &lt;code&gt;WP_Service::get( 'wpdb' );&lt;/code&gt; would be preferable. Keeping this as future-proof and flexible as possible should be a priority.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;5. Dependency injection&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
WordPress is mostly procedural, but the places in the code where we do already have classes should try to start using dependency injection.
As an example, consider the &lt;code&gt;WP_Comment_Query&lt;/code&gt; class, for which you proposed something like the following:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;class WP_Comment_Query {
   protected $dbh;
   public function __construct( $query = '' ) {
      $this-&amp;gt;dbh = WP::get( 'wpdb' );
      // [...]
   }
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
There's a missed opportunity there to start using dependency injection to make it easier to do unit tests. Even worse: right now, with the globals, the unit tests can still set the global to a mock DB. With the above code, there's no proper way of injecting a mock DB for testing anymore.
&lt;/p&gt;
&lt;p&gt;
So, while we cannot yet have a proper injector decide what to inject in what context, we can at least let the constructor take an injected dependency, and provide a "Poka-yoke" for as long as we are not able to do real injection. This would look something like this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;class WP_Comment_Query {
   protected $dbh;
   public function __construct( $query = '', $wpdb = null ) {
      $this-&amp;gt;dbh = null !== $wpdb ? $wpdb : WP_service::get( 'wpdb' );
      // [...]
   }
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Improvements would be using the short-form ternary (PHP 5.3+) and typehinting against an interface. However, please, &lt;strong&gt;do not typehint against the WPDB class&lt;/strong&gt;, this defeats the whole point. This would just very tightly couple the class to the exact WPDB implementation, and any dependency injection would just be of esthetic nature.
&lt;/p&gt;
&lt;p&gt;
With the above constructor, the injected dependency is optional, so existing code will still work, but the unit tests can now inject a mocked WPDB instance into the constructor for real unit tests.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;6. What about the interface&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
As mentioned under 5., typehinting against an interface would be a clear improvement. Let's imagine we had a &lt;code&gt;WPDB_Interface&lt;/code&gt; and examine what would happen if we use it together with the idea of a Service Locator.
&lt;/p&gt;
&lt;p&gt;
First of all, any code making DB operations would need to be coded against that interface, not against the actual implementation. For code that does not using any typehinting or instance-checking, this should not make a difference.
&lt;/p&gt;
&lt;p&gt;
For our example code above, we would now have something like this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;class WP_Comment_Query {
   /** @var WPDB_Interface */
   protected $dbh;
   public function __construct( $query = '', WPDB_Interface $wpdb = null ) {
      $this-&amp;gt;dbh = null !== $wpdb ? $wpdb : WP_Service::get( WPDB_Interface );
      // [...]
   }
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
We have two changes here:
&lt;/p&gt;
&lt;ol class="upperalpha"&gt;&lt;li&gt;The constructor argument is type-hinted. This means that, would we instantiate the &lt;code&gt;WP_Comment_Query&lt;/code&gt; through a real Injector, the Injector could by itself figure out that it needs to pass the instance of the current DB handler into that constructor. So in that (wishful thinking) scenario, neither the &lt;code&gt;WP_Comment_Query&lt;/code&gt; class, nor its surrounding code would need to know anything about the DB stack at all. &lt;code&gt;WP_Comment_Query&lt;/code&gt; needs something that behaves like a WPDB, and it can just assume that when it gets instantiated, what it needs is automagically available within its constructor.
&lt;/li&gt;&lt;li&gt;The poka-yoke fallback that uses the Service Locator does not request an arbitrary string identifier, it requests an object that implements the interface it needs. The Service Locator, which should know more about the current environment than the &lt;code&gt;WP_Comment_Query&lt;/code&gt; class, will then decide what exact object to pass around. Some objects, like the WPDB here, are globally shared, so everyone gets a reference to the same instance. Others might be freshly instantiated for each request, like a &lt;code&gt;WP_Query&lt;/code&gt;. The Service Locator will deal with this behind the scenes, the ones requesting such interfaces should not need to care.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Hope this all makes sense, and can't wait to see where this ticket will take us... :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37697.2.diff attached to Ticket #37697</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 17 Aug 2016 21:58:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37697/37697.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37697/37697.2.diff/1471471128610840</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37697 (Strange behavior with thumbnails on preview in 4.6) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 17 Aug 2016 21:38:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37697#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37697#comment:5/1471469887480129</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1471469885000149"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37697 (Strange behavior with thumbnails on preview in 4.6) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Wed, 17 Aug 2016 21:36:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37697#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37697#comment:4/1471469808261975</guid>
      <description>&lt;p&gt;
For those wanting to test this issue, you'll need to add something like the below code after the main loop on a custom page template and then preview a page using that template.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$test_args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s1"&gt;'post_type'&lt;/span&gt;  &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'post'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'posts_per_page'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'meta_query'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                        &lt;span class="s1"&gt;'key'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'_thumbnail_id'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="s1"&gt;'compare'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'EXISTS'&lt;/span&gt;
                &lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s1"&gt;'ignore_sticky_posts'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$stories&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WP_Query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$test_args&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$stories&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;have_posts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$stories&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;the_post&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;has_post_thumbnail&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;the_post_thumbnail&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;wp_reset_postdata&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37697 (Strange behavior with thumbnails on preview in 4.6) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Wed, 17 Aug 2016 21:25:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37697#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37697#comment:3/1471469110462906</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@jbenton Thanks for the ticket. I noticed this bug at almost the same time you did, I think. The issue is that the new &lt;code&gt;_wp_preview_post_thumbnail_filter()&lt;/code&gt; function fails to check if the &lt;code&gt;$post_id&lt;/code&gt; is from the post we're previewing, so it can affect any secondary loops on the preview page.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37697/37697.diff" title="Attachment '37697.diff' in Ticket #37697"&gt;37697.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37697/37697.diff" title="Download"&gt;​&lt;/a&gt; adds an additional check to make sure we're only affecting the main post object from the preview page and updates the unit test for this function so it includes the check as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37697.diff attached to Ticket #37697</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Wed, 17 Aug 2016 21:20:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37697/37697.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37697/37697.diff/1471468815568138</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #26511 (Introduce a locale-switching function) updated</title>
      
        <dc:creator>tfrommen</dc:creator>

      <pubDate>Wed, 17 Aug 2016 21:08:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26511#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26511#comment:30/1471468104776413</guid>
      <description>&lt;p&gt;
I just added &lt;a href="https://core.trac.wordpress.org/attachment/ticket/26511/26511.3.patch"&gt;a refreshed patch for 4.7&lt;/a&gt; (including some minor tweaks).
&lt;/p&gt;
&lt;p&gt;
So, how do we get this thing rolling now? :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>26511.3.patch attached to Ticket #26511</title>
      
        <dc:creator>tfrommen</dc:creator>

      <pubDate>Wed, 17 Aug 2016 21:05:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26511/26511.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26511/26511.3.patch/1471467954893016</guid>
      <description>&lt;p&gt;
Refreshed patch for 4.7
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37696 (WP_Comment_Query loses sql_clauses with Object Cache) updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:57:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37696#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37696#comment:7/1471467428825157</guid>
      <description>&lt;p&gt;
SiteGround support was able to reproduce on my account with clean from scratch WP 4.6 install. Doesn’t sound like they got any idea why their caching setup doesn't like it though. And since you got patch posted they closed my ticket. :)
&lt;/p&gt;
&lt;p&gt;
Let me know if I can look into any info necessary about caching kinks. I have a hunch that if this isn't resolved it will keep coming up in different contexts.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37699.diff attached to Ticket #37699</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:50:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37699/37699.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37699/37699.diff/1471467037105379</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) created</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:49:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699/1471466969448139</guid>
      <description>&lt;p&gt;
Storing application state in globals is ... bad.
Using global state to store objects is ... bad.
Using globals to avoid writing classes is ... bad.
Using globals to pass data between functions is ... bad.
Training people to assume that globals will always be set to the value they expect is ... bad.
&lt;/p&gt;
&lt;p&gt;
Globals are an artifact of a #dark-er time, think PHP 3. It would be nice if we didn't use globals. We have a backward compatibility strait jacket, but that shouldn't stop us from exploring ways to eradicate them.
&lt;/p&gt;
&lt;p&gt;
We can start with class instances, because variables hold a reference to the actual instance when set. We can also start with a simple registry that allows us to create a data that can get / set globals for us (or not!). We can also add a few static methods onto &lt;code&gt;WP&lt;/code&gt; to hide all of this away.
&lt;/p&gt;
&lt;p&gt;
Attached is a POC that removes (every instance of?) &lt;code&gt;$wpdb&lt;/code&gt; as a global, and instead uses the registry. Take a glance. All unit tests (seem to) pass.
&lt;/p&gt;
&lt;p&gt;
This will evolve before it becomes a reality, but I encourage you to unleash your imagination unto a world where WordPress' codecase resembles something globallessly lovely.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37321 (Improve documentation of user_can_richedit()) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:48:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37321#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37321#comment:3/1471466914237461</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch only needs some minor tweaks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36912 (Improve documentation for install_plugin_install_status()) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:46:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36912#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36912#comment:7/1471466812113263</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37625 (Add PHP 7.1 to tested versions in Travis) closed</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:45:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37625#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37625#comment:5/1471466713532279</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38273" title="Build/Test Tools: Ensure PHP 7.1 is tested on Travis.
PHP 7.1 is the ..."&gt;38273&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Build/Test Tools: Ensure PHP 7.1 is tested on Travis.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
PHP 7.1 is the next version of PHP and WordPress should support it with the first major version after 7.1 launches. This will facilitate testing. Failures on 7.1 won't necessitate builds failing while 7.1 is still in beta.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37625" title="#37625: defect (bug): Add PHP 7.1 to tested versions in Travis (closed: fixed)"&gt;#37625&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38273]: Build/Test Tools: Ensure PHP 7.1 is tested on Travis.  PHP 7.1 is the ...</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:45:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38273</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38273/1471466707238412</guid>
      <description>&lt;p&gt;
Build/Test Tools: Ensure PHP 7.1 is tested on Travis.
&lt;/p&gt;
&lt;p&gt;
PHP 7.1 is the next version of PHP and WordPress should support it with the first major version after 7.1 launches. This will facilitate testing. Failures on 7.1 won't necessitate builds failing while 7.1 is still in beta.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37625" title="#37625: defect (bug): Add PHP 7.1 to tested versions in Travis (closed: fixed)"&gt;#37625&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #23794 (load_plugin_textdomain fails if plugin is loaded from mu-plugins) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:44:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23794#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23794#comment:18/1471466691619856</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36811 (Remove Download option from the Updates Screen) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:43:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36811#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36811#comment:5/1471466588125940</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36224 (WP_Taxonomy class) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:41:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36224#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36224#comment:12/1471466485152425</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36934 (Use of get_the_excerpt($post) is broken if post has no excerpt and you ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:40:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36934#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36934#comment:23/1471466447435428</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30497 (Impossible to change upgrader skin when Language_Pack_Upgrader is ...) closed</title>
      
        <dc:creator>rodrigosprimo</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:32:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30497#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30497#comment:2/1471465926126267</guid>
      <description>invalid: &lt;p&gt;
@danielbachhuber and I can't reproduce anymore the WP-CLI issue that led me to open this ticket (&lt;a class="ext-link" href="https://github.com/wp-cli/wp-cli/issues/1501#issuecomment-240537508"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/wp-cli/wp-cli/issues/1501#issuecomment-240537508&lt;/a&gt;). It seems that this was fixed somehow on WP core so I'm closing this ticket.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #26669 (wp-admin.css should be broken up into modules) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:28:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26669#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26669#comment:24/1471465731521093</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1471465729004734"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37697 (Strange behavior with thumbnails on preview in 4.6) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:21:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37697#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37697#comment:2/1471465263019332</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37698 (wp_kses_split global variable pollution) created</title>
      
        <dc:creator>xknown</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:20:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37698</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37698/1471465215652421</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/10339" title="Use preg_replace_callback instead of preg_replace with eval. Props ..."&gt;r10339&lt;/a&gt;, &lt;code&gt;wp_kses_split&lt;/code&gt; was modified so it doesn't longer require the &lt;code&gt;preg_replace&lt;/code&gt; with the &lt;code&gt;e&lt;/code&gt; (eval) modifier. This implementation uses globals to pass the values of &lt;code&gt;$allowed_html&lt;/code&gt; and &lt;code&gt;$allowed_protocols&lt;/code&gt; to the &lt;code&gt;_wp_kses_split_callback&lt;/code&gt; function.
While in most cases this isn't really a problem, we noticed that a call to &lt;code&gt;wp_kses_split&lt;/code&gt; (via a filter) from within &lt;code&gt;_wp_kses_split_callback&lt;/code&gt; may have undesirable effects on the next replacements.
The snippet below illustrates this problem, you can see in action in &lt;a class="ext-link" href="https://3v4l.org/YmYTZ"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://3v4l.org/YmYTZ&lt;/a&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;?php
function wp_kses_split( $string, $allowed_html, $allowed_protocols ) {
    global $pass_allowed_html, $pass_allowed_protocols;
    $pass_allowed_html = $allowed_html;
    $pass_allowed_protocols = $allowed_protocols;
    return preg_replace_callback( '%((&amp;lt;!--.*?(--&amp;gt;|$))|(&amp;lt;[^&amp;gt;]*(&amp;gt;|$)|&amp;gt;))%', '_wp_kses_split_callback', $string );
}
function _wp_kses_split_callback( $match ) {
    global $pass_allowed_html, $pass_allowed_protocols;
    return wp_kses_split2( $match[1], $pass_allowed_html, $pass_allowed_protocols );
}
function wp_kses_split2($string, $allowed_html, $allowed_protocols) {
    wp_kses_split('', array(), array()); // this overrides the globals.
    print_r( array( $allowed_html, $allowed_protocols ) );
}
wp_kses_split("&amp;lt;a style='color: red;'&amp;gt;I link this&amp;lt;/a&amp;gt;", array('a'=&amp;gt;array( 'style' =&amp;gt; array() )), array('http') );
&lt;/pre&gt;&lt;p&gt;
One way to fix this would be to use an anonymous function, but I guess that's only available on PHP &amp;gt;= 5.3. Another way is to encapsulate the callback in a class and tie the arguments to an instance of this class.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37697 (Strange behavior with thumbnails on preview in 4.6) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:18:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37697#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37697#comment:1/1471465090953735</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37697 (Strange behavior with thumbnails on preview in 4.6) created</title>
      
        <dc:creator>jbenton</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:17:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37697</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37697/1471465054310757</guid>
      <description>&lt;p&gt;
Since upgrading my site to 4.6, we've had strange behavior regarding featured images on preview. Whenever a preview_nonce appears in a preview URL, an additional &amp;amp;_thumbnail_id=xxxxxxx appears. And at that point, all featured-image thumbnails on the page become that specific image — even when they appear in a different loop or are called through other means. @swissspidy says on Twitter this may be related to this change in 4.6: &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38118" title="Post Thumbnails: Only update featured images when saving a post.
 ..."&gt;[38118]&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Adding a wp_reset_postdata() does not seem to fix the problem. Screenshots and code available in this tweets in this Twitter thread:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://twitter.com/swissspidy/status/766004453807882244"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://twitter.com/swissspidy/status/766004453807882244&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36483 (Inline image replacement in Post Editor does not replace image) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:15:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36483#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36483#comment:7/1471464917997336</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by ipstenu. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1471464915004714"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37016 (Minor Fixes: Text color for "Delete" button on widget should be Red) updated</title>
      
        <dc:creator>ibachal</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:11:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37016#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37016#comment:14/1471464690199008</guid>
      <description>&lt;p&gt;
Hey Folks,
&lt;/p&gt;
&lt;p&gt;
I have attached a patch (37016.diff) with screenshots for the color of Delete / Remove links in admin Widgets and Customizer Widgets. Please review.
&lt;/p&gt;
&lt;p&gt;
This is my first patch so, please let me know if there’s anything to be improved / changed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37680 (PHP Warning: ini_get_all() has been disabled for security reasons) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:08:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37680#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37680#comment:4/1471464516957605</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by ocean90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1471464514004700"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Screen Shot 2016-08-18 at 1.30.44 AM.png attached to Ticket #37016</title>
      
        <dc:creator>ibachal</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:03:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37016/Screen%20Shot%202016-08-18%20at%201.30.44%20AM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37016/Screen%20Shot%202016-08-18%20at%201.30.44%20AM.png/1471464184630574</guid>
      <description>&lt;p&gt;
37016 After patch in customizer Widgets
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Screen Shot 2016-08-18 at 1.29.06 AM.png attached to Ticket #37016</title>
      
        <dc:creator>ibachal</dc:creator>

      <pubDate>Wed, 17 Aug 2016 20:02:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37016/Screen%20Shot%202016-08-18%20at%201.29.06%20AM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37016/Screen%20Shot%202016-08-18%20at%201.29.06%20AM.png/1471464136297964</guid>
      <description>&lt;p&gt;
37016 After patch in admin Widgets
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #28053 (Fields with same name added to new media modal using ...) updated</title>
      
        <dc:creator>drosendo</dc:creator>

      <pubDate>Wed, 17 Aug 2016 19:46:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28053#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28053#comment:16/1471463179588681</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28053#comment:15" title="Comment 15"&gt;LindsayBSC&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I was asking why you felt the patch needed rewriting - which, even though you said you didn't want to discuss why, you actually did explain.
&lt;/p&gt;
&lt;p&gt;
So you feel your patch is more readable than the provided previous patch? I am asking for my own reference to understand if/when/how my code could be improved.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
Actually I now recall why I did my patch, I believe your patch doesn't include multiple select fields, and only handles checkboxes.
Am I incorrect?
&lt;/p&gt;
&lt;p&gt;
Thanks,
David
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37016.diff attached to Ticket #37016</title>
      
        <dc:creator>ibachal</dc:creator>

      <pubDate>Wed, 17 Aug 2016 19:45:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37016/37016.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37016/37016.diff/1471463104435329</guid>
      <description>&lt;p&gt;
Patch for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37016" title="#37016: defect (bug): Minor Fixes: Text color for &amp;#34;Delete&amp;#34; button on widget should be Red (closed: fixed)"&gt;#37016&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37696 (WP_Comment_Query loses sql_clauses with Object Cache) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 17 Aug 2016 19:39:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37696#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37696#comment:6/1471462795262127</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37696#comment:5" title="Comment 5"&gt;Rarst&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I have applied patch on live site and it seems to resolve the issue, I no longer see errors logged on a load of page with comments.
&lt;/p&gt;
&lt;p&gt;
I had cache-related issues on this site before, for a while every core update was locking me out of admin due to some mismatch in database version between cache and DB.
&lt;/p&gt;
&lt;p&gt;
If you want more insight into that I would recommend to get in touch with SiteGround folks (I have reported issue to them as well, with link to this ticket).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is really helpful - thanks, @Rarst.
&lt;/p&gt;
&lt;p&gt;
Can I get a sanity check from someone who understands the arcana contained in &lt;code&gt;fill_descendants()&lt;/code&gt;? Ping @wonderboymusic, @rachelbaker
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28053 (Fields with same name added to new media modal using ...) updated</title>
      
        <dc:creator>LindsayBSC</dc:creator>

      <pubDate>Wed, 17 Aug 2016 19:08:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28053#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28053#comment:15/1471460926422298</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28053#comment:14" title="Comment 14"&gt;drosendo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi @LindsayBSC ,
&lt;/p&gt;
&lt;p&gt;
I don't fully understand your question, but how is my better? I'm really not discussing witch one is better, I believe both are viable solutions, but since none have been approved over the past 2 years since reported. I just rather use my code, I believe it to be more "readable/clean" and I do think that it covers all scenarios. Correct me if I'm wrong.
&lt;/p&gt;
&lt;p&gt;
Thanks,
David
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I was asking why you felt the patch needed rewriting - which, even though you said you didn't want to discuss why, you actually did explain.
&lt;/p&gt;
&lt;p&gt;
So you feel your patch is more readable than the provided previous patch? I am asking for my own reference to understand if/when/how my code could be improved.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28053 (Fields with same name added to new media modal using ...) updated</title>
      
        <dc:creator>drosendo</dc:creator>

      <pubDate>Wed, 17 Aug 2016 19:06:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28053#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28053#comment:14/1471460768487622</guid>
      <description>&lt;p&gt;
Hi @LindsayBSC ,
&lt;/p&gt;
&lt;p&gt;
I don't fully understand your question, but how is my better? I'm really not discussing witch one is better, I believe both are viable solutions, but since none have been approved over the past 2 years since reported. I just rather use my code, I believe it to be more "readable/clean" and I do think that it covers all scenarios. Correct me if I'm wrong.
&lt;/p&gt;
&lt;p&gt;
Thanks,
David
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37689 (Issues with utf8mb4 collation and the 4.6 update) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 17 Aug 2016 18:54:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37689#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37689#comment:10/1471460083044504</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm afraid I'm out of ideas.
&lt;/p&gt;
&lt;p&gt;
@pento any ideas what could cause this?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28053 (Fields with same name added to new media modal using ...) updated</title>
      
        <dc:creator>LindsayBSC</dc:creator>

      <pubDate>Wed, 17 Aug 2016 18:49:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28053#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28053#comment:13/1471459796122073</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28053#comment:12" title="Comment 12"&gt;drosendo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
Any feedback on this? is my patch viable?
&lt;/p&gt;
&lt;p&gt;
Thanks,
David
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Can you explain how your patch is more efficiently coded than the one already provided in this ticket? The previously submitted one looks for the default scenario for checkbox naming where if you are provided a list of checkboxes as options for a single "question", you use brackets [] in your naming convention. Because this is default behavior, we just look for that to know if we are looking at a multiple checkbox select option or not.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37684 (Allow sites to have filterable "states" akin to posts &amp; media) updated</title>
      
        <dc:creator>thomaswm</dc:creator>

      <pubDate>Wed, 17 Aug 2016 18:41:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37684#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37684#comment:5/1471459282391566</guid>
      <description>&lt;p&gt;
Related: &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/37392" title="#37392: enhancement: Multisite &amp;#34;Sites&amp;#34; screen: Add links to filter websites by status (assigned)"&gt;#37392&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37641 (Support queries on `spam` and `deleted` fields in `WP_User_Query` on ...) updated</title>
      
        <dc:creator>thomaswm</dc:creator>

      <pubDate>Wed, 17 Aug 2016 18:33:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37641#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37641#comment:2/1471458822950002</guid>
      <description>&lt;p&gt;
It has been suggested in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/34316" title="#34316: enhancement: User status inconsistent between single-site &amp;amp; multisite (new)"&gt;#34316&lt;/a&gt; to remove the &lt;code&gt;spam&lt;/code&gt; and &lt;code&gt;deleted&lt;/code&gt; fields from the users database table and introduce a user status API instead.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37646 (Make wp-settings.php a series of do_actions()) updated</title>
      
        <dc:creator>lgedeon</dc:creator>

      <pubDate>Wed, 17 Aug 2016 18:32:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37646#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37646#comment:3/1471458762558192</guid>
      <description>&lt;p&gt;
With appropriate warnings in the PHPdoc for each action and everywhere these are ever mentioned, this could be really awesome!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37682 (Fix docs for `get_sample_permalink` filter) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 17 Aug 2016 18:29:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37682#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37682#comment:3/1471458587512327</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38272" title="Permalinks: Correct the documentation for the `get_sample_permalink` ..."&gt;38272&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Permalinks: Correct the documentation for the &lt;code&gt;get_sample_permalink&lt;/code&gt; filter, and improve the documentation for the &lt;code&gt;get_sample_permalink()&lt;/code&gt; function.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props sebastian.pisula for the original patch&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37682" title="#37682: defect (bug): Fix docs for `get_sample_permalink` filter (closed: fixed)"&gt;#37682&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38272]: Permalinks: Correct the documentation for the `get_sample_permalink` ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 17 Aug 2016 18:29:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38272</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38272/1471458587024951</guid>
      <description>&lt;p&gt;
Permalinks: Correct the documentation for the &lt;code&gt;get_sample_permalink&lt;/code&gt; filter, and improve the documentation for the &lt;code&gt;get_sample_permalink()&lt;/code&gt; function.
&lt;/p&gt;
&lt;p&gt;
Props sebastian.pisula for the original patch
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37682" title="#37682: defect (bug): Fix docs for `get_sample_permalink` filter (closed: fixed)"&gt;#37682&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37696 (WP_Comment_Query loses sql_clauses with Object Cache) updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Wed, 17 Aug 2016 18:28:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37696#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37696#comment:5/1471458492150372</guid>
      <description>&lt;p&gt;
I have applied patch on live site and it seems to resolve the issue, I no longer see errors logged on a load of page with comments.
&lt;/p&gt;
&lt;p&gt;
I had cache-related issues on this site before, for a while every core update was locking me out of admin due to some mismatch in database version between cache and DB.
&lt;/p&gt;
&lt;p&gt;
If you want more insight into that I would recommend to get in touch with SiteGround folks (I have reported issue to them as well, with link to this ticket).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37682.2.patch attached to Ticket #37682</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 17 Aug 2016 18:26:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37682/37682.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37682/37682.2.patch/1471458402847184</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37682 (Fix docs for `get_sample_permalink` filter) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 17 Aug 2016 18:19:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37682#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37682#comment:2/1471457972212211</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37696 (WP_Comment_Query loses sql_clauses with Object Cache) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 17 Aug 2016 18:16:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37696#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37696#comment:4/1471457801154934</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks, @Rarst.
&lt;/p&gt;
&lt;p&gt;
I looked into this a bit more, and it does seem to be related to a partially primed cache. I'm uncertain how this happens in the wild, since all caches are linked to the same 'last_changed' incrementor - meaning that they should all stand or fall together. Clearly, though, there are cases where they can be out of sync, so the query in question should be more resilient.
&lt;/p&gt;
&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37696/37696.diff" title="Attachment '37696.diff' in Ticket #37696"&gt;37696.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37696/37696.diff" title="Download"&gt;​&lt;/a&gt;, I discarded the technique that relied on the existing SQL clauses, in favor of a fresh call to &lt;code&gt;get_comments()&lt;/code&gt;. There's also a test there that contrives a situation that demonstrates the failure.
&lt;/p&gt;
&lt;p&gt;
@Rarst Are you able to test this patch in an environment where you're experiencing the bug?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8592 (Private Pages not listed in the Parent dropdown) updated</title>
      
        <dc:creator>OSD</dc:creator>

      <pubDate>Wed, 17 Aug 2016 18:15:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8592#comment:209</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8592#comment:209/1471457703492273</guid>
      <description>&lt;p&gt;
Just updated to WordPress 4.6 “Pepper” and guess what, after this ticket opening 8 years ago, not working again....
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37696.diff attached to Ticket #37696</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 17 Aug 2016 18:13:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37696/37696.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37696/37696.diff/1471457617109966</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37691 (plugins directory not being actively checked) updated</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Wed, 17 Aug 2016 18:11:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37691#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37691#comment:2/1471457492844717</guid>
      <description>&lt;p&gt;
@bheadrick
&lt;/p&gt;
&lt;p&gt;
So was the site DB copied over to the new site, or was it just the plugins from the plugin folder?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35166.diff attached to Ticket #35166</title>
      
        <dc:creator>coderste</dc:creator>

      <pubDate>Wed, 17 Aug 2016 17:53:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35166/35166.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35166/35166.diff/1471456430319578</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35166 (strange effect in tab active) updated</title>
      
        <dc:creator>coderste</dc:creator>

      <pubDate>Wed, 17 Aug 2016 17:53:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35166#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35166#comment:6/1471456381639417</guid>
      <description>&lt;p&gt;
Regarding the issue @ocean90 pointed out. I believe this is because when you &lt;code&gt;hover&lt;/code&gt; on an item that is active there is no &lt;code&gt;CSS&lt;/code&gt; inside the &lt;code&gt;@media screen and (max-width: 600px)&lt;/code&gt; for an active tab therefore it is using the desktop &lt;code&gt;CSS&lt;/code&gt; which is using a &lt;code&gt;border-bottom: 1px solid #f1f1f1;&lt;/code&gt; on &lt;code&gt;hover&lt;/code&gt; hence it removing the bottom &lt;code&gt;border&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I have attached a patch that fixes the issue but if it doesn't relate to this ticket I will create a new one :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37691 (plugins directory not being actively checked) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 17 Aug 2016 17:50:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37691#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37691#comment:1/1471456231837555</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
you can't just copy them (plugins) to the plugins directory and have them register as being installed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If I understand it right, that would mean when you upload plugins to &lt;code&gt;wp-content/plugins&lt;/code&gt; with FTP they don't show on the Plugins screen? Can't reproduce this. All plugins added to (or deleted from) the &lt;code&gt;plugins&lt;/code&gt; directory show properly on the Plugins page in wp-admin. Perhaps when you copied them they ended up with (very) restrictive file permissions?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37696 (WP_Comment_Query loses sql_clauses with Object Cache) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 17 Aug 2016 17:33:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37696#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37696#comment:3/1471455183029244</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>WikiStart edited</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 17 Aug 2016 17:24:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/wiki/WikiStart?version=44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/wiki/WikiStart?version=44/1471454691947160</guid>
      <description> (&lt;a href="http://core.trac.wordpress.org/wiki/WikiStart?action=diff&amp;amp;version=44"&gt;diff&lt;/a&gt;)</description>
      <category>wiki</category>
    </item><item>
      <title>WikiStart edited</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 17 Aug 2016 17:24:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/wiki/WikiStart?version=43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/wiki/WikiStart?version=43/1471454656127456</guid>
      <description>&lt;p&gt;
Move the mailing list and rss feed info to the bottom
&lt;/p&gt;
 (&lt;a href="http://core.trac.wordpress.org/wiki/WikiStart?action=diff&amp;amp;version=43"&gt;diff&lt;/a&gt;)</description>
      <category>wiki</category>
    </item><item>
      <title>Ticket #37692 (Introduce WP_Database_Table base class) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Wed, 17 Aug 2016 17:11:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37692#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37692#comment:1/1471453861393595</guid>
      <description>&lt;p&gt;
&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37656" title="#37656: enhancement: Improve plugin bootstrapping processes (new)"&gt;#37656&lt;/a&gt; brought up better bootstrapping for plugin updates, so I guess it is related.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37677 (Introduce WP_Plugin class analogous to WP_Theme) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Wed, 17 Aug 2016 17:09:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37677#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37677#comment:3/1471453762187421</guid>
      <description>&lt;p&gt;
Proposal from &lt;a href="https://core.trac.wordpress.org/ticket/37656#comment:4"&gt;a comment I left on #37656&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As far as making &lt;code&gt;WP_Plugin&lt;/code&gt; hold the plugin header data as &lt;code&gt;WP_Theme&lt;/code&gt; does for themes, I have a proposal to make in regard to that. What if instead of having to read the file to parse the plugin headers, the header data was passed directly to a function?
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;WP_Plugins&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="na"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
   &lt;span class="s1"&gt;'
   Plugin Name: Foo
   ...
   '&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The cool thing is that this will still work with the file parsing, since &lt;code&gt;get_file_data()&lt;/code&gt; doesn't specifically look for this information only within PHP comments. But it also allows us to get the raw headers without having to read the files at all. So when the plugin is active, we can parse this string passed directly to our function to get the plugin data, and we can still read it with &lt;code&gt;get_file_data()&lt;/code&gt; when the plugin is inactive.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In other words, the main file of the plugin would call this function, in lieu of placing these headers in the opening docblock.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37696 (WP_Comment_Query loses sql_clauses with Object Cache) updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Wed, 17 Aug 2016 16:56:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37696#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37696#comment:2/1471452966245488</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37696#comment:1" title="Comment 1"&gt;boonebgorges&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In case it's relevant, what is &lt;code&gt;QM_DB&lt;/code&gt;? I assume this is a db.php drop-in?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's from Query Monitor plugin, I think it only does drop-in for the purpose of more thorough logging.
&lt;/p&gt;
&lt;p&gt;
The query goes wrong before it's executed against DB in this case, so shouldn't be relevant I think.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37696 (WP_Comment_Query loses sql_clauses with Object Cache) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 17 Aug 2016 16:49:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37696#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37696#comment:1/1471452575275972</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Possibly related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36487" title="#36487: defect (bug): Hierarchical comments do not display on second call of comments_template (closed: fixed)"&gt;#36487&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37184" title="#37184: defect (bug): Stop FOUND_ROWS running in comment query is cached (closed: fixed)"&gt;#37184&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
@Rarst Thanks very much for the ticket. It appears that this is the same bug as &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36487" title="#36487: defect (bug): Hierarchical comments do not display on second call of comments_template (closed: fixed)"&gt;#36487&lt;/a&gt;, but arises when the cache is primed for only a subset of all the matched comments. I'll run some tests.
&lt;/p&gt;
&lt;p&gt;
In case it's relevant, what is &lt;code&gt;QM_DB&lt;/code&gt;? I assume this is a db.php drop-in?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>WikiStart edited</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 17 Aug 2016 16:27:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/wiki/WikiStart?version=42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/wiki/WikiStart?version=42/1471451222834544</guid>
      <description> (&lt;a href="http://core.trac.wordpress.org/wiki/WikiStart?action=diff&amp;amp;version=42"&gt;diff&lt;/a&gt;)</description>
      <category>wiki</category>
    </item><item>
      <title>Ticket #37696 (WP_Comment_Query loses sql_clauses with Object Cache) created</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Wed, 17 Aug 2016 16:07:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37696</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37696/1471450057671145</guid>
      <description>&lt;p&gt;
Once I updated my live site to WP 4.6 my error log started filling up with following:
&lt;code&gt;&amp;gt; WordPress database error You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE AND comment_parent IN (266250,266252,266255,266258,266259,266262,266264,2' at line 1 for query SELECT wp_comments.comment_ID, wp_comments.comment_parent WHERE AND comment_parent IN (266250,266252,266255,266258,266259,266262,266264,266267,266269) ORDER BY comment_date_gmt ASC, comment_ID ASC made by require('wp-blog-header.php'), require_once('wp-includes/template-loader.php'), include('/themes/twentysixteen/single.php'), comments_template, WP_Comment_Query-&amp;gt;__construct, WP_Comment_Query-&amp;gt;query, WP_Comment_Query-&amp;gt;get_comments, WP_Comment_Query-&amp;gt;fill_descendants, QM_DB-&amp;gt;query&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Note the highly invalid query, missing parts like &lt;code&gt;FROM&lt;/code&gt; altogether.
&lt;/p&gt;
&lt;p&gt;
The immediate cause seems to be &lt;code&gt;sql_clauses&lt;/code&gt; property is not meaningfully filled at that point.
&lt;/p&gt;
&lt;p&gt;
Issue goes away if I disable Object Cache (Siteground's Memcached). If I flush cache I see clauses filling up correctly first time, then going blank again on reload.
&lt;/p&gt;
&lt;p&gt;
I would guess this is related to caching changes that shipped, but I cannot reproduce locally with different OC (APCu) or figure out at which point it goes wrong.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37682 (Fix docs for `get_sample_permalink` filter) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 17 Aug 2016 15:24:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37682#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37682#comment:1/1471447492371301</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37694 (Can't disable dns-prefetch to s.w.org) closed</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 17 Aug 2016 14:48:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37694#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37694#comment:1/1471445293847600</guid>
      <description>invalid: &lt;p&gt;
Hey there,
&lt;/p&gt;
&lt;p&gt;
This code snippet I shared on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34292" title="#34292: feature request: Support for DNS Prefetching &amp;amp; Prerender (closed: fixed)"&gt;#34292&lt;/a&gt; was for removing resource hints for scripts and styles, not the s.w.org domain. That's why it doesn't work.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;return array_diff( $hints, wp_dependencies_unique_hosts() );&lt;/code&gt; means "keep all but scripts &amp;amp; styles".
&lt;/p&gt;
&lt;p&gt;
Instead, you'd want &lt;code&gt;array_diff( wp_dependencies_unique_hosts(), $hints )&lt;/code&gt;, i.e. "keep scripts &amp;amp; styles but nothing else.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Tickets #37680,​37695 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 17 Aug 2016 14:46:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=37680%2C37695</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=37680%2C37695/1471445166638341</guid>
      <description>duplicate: &lt;p&gt;
Hi @nerijus-eimanaviius, welcome to Trac!
&lt;/p&gt;
&lt;p&gt;
Thanks for the ticket, we're already tracking this issue in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37680" title="#37680: defect (bug): PHP Warning: ini_get_all() has been disabled for security reasons (closed: fixed)"&gt;#37680&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #37695 (wp_is_ini_value_changeable should check if ini_get_all is not disabled ...) created</title>
      
        <dc:creator>Nerijus Eimanaviius</dc:creator>

      <pubDate>Wed, 17 Aug 2016 14:41:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37695</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37695/1471444872093576</guid>
      <description>&lt;p&gt;
when ini_get_all function is disabled via disable_functions php.ini setting &lt;a class="ext-link" href="http://php.net/manual/en/ini.core.php#ini.disable-functions"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://php.net/manual/en/ini.core.php#ini.disable-functions&lt;/a&gt; we get E_WARNING
&lt;/p&gt;
&lt;p&gt;
Error message
E_WARNING: ini_get_all() has been disabled for security reasons
&lt;/p&gt;
&lt;p&gt;
Stack trace
releases/20160817060343/web/foundation/wp-includes/
load.php (1020)
releases/20160817060343/web/foundation/wp-includes/
default-constants.php (46)
releases/20160817060343/web/foundation/
wp-settings.php (43)
releases/20160817060343/web/
wp-config.php (9)
releases/20160817060343/web/foundation/
wp-load.php (44)
releases/20160817060343/web/foundation/wp-admin/admin-ajax.php (22)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37694 (Can't disable dns-prefetch to s.w.org) created</title>
      
        <dc:creator>superpoincare</dc:creator>

      <pubDate>Wed, 17 Aug 2016 14:40:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37694</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37694/1471444833014814</guid>
      <description>&lt;p&gt;
According to the ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34292" title="#34292: feature request: Support for DNS Prefetching &amp;amp; Prerender (closed: fixed)"&gt;#34292&lt;/a&gt;, dns-prefetch to s.w.org can be disabled with the following code (modified with the actual function):
&lt;/p&gt;
&lt;pre class="wiki"&gt;function trac34292_example_resource_hints( $hints, $relation_type ) {
    if ( 'dns-prefetch' === $relation_type ) {
        return array_diff( $hints, wp_dependencies_unique_hosts() );
    }
    return $hints;
}
add_filter( 'wp_resource_hints', 'trac34292_example_resource_hints', 10, 2 );
&lt;/pre&gt;&lt;p&gt;
However this doesn't work. I still see the dns-prefetch in HTML.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37686 (Add object_type column to term_relationships table) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 17 Aug 2016 14:30:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37686#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37686#comment:3/1471444253936984</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14513" title="#14513: feature request: Time for a wp_post_relationships table? (closed: maybelater)"&gt;#14513&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Object-to-object relationships sound real nice now that the taxonomy roadmap has shown very good results (with thanks to @boonebgorges Tha God and everybody who's worked on it). In this instance, use cases/scenarios and idealized solutions need to be identified and documented before wandering into real solutions. The real solution might end up something like what's being proposed here, there's just not enough information to actually decide on it just yet. As far as I'm aware, nobody has picked that train of thought back up in the recent past, but there could be Trac tickets or who knows what else that haven't been collated.
&lt;/p&gt;
&lt;p&gt;
There's also still the consolidating tables part of the roadmap that hasn't been tackled yet, curious if that should happen before proceeding to the relationships-for-everybody part, as was originally indicated in the timeline.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37693 (TinyMCE: backtics not handled correctly in paragraphs that already ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 17 Aug 2016 14:29:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37693#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37693#comment:2/1471444186949243</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37693 (TinyMCE: backtics not handled correctly in paragraphs that already ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 17 Aug 2016 14:27:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37693#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37693#comment:1/1471444058065139</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-tinymce by borekb. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-tinymce/p1471444055000083"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37693 (TinyMCE: backtics not handled correctly in paragraphs that already ...) created</title>
      
        <dc:creator>borekb</dc:creator>

      <pubDate>Wed, 17 Aug 2016 14:27:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37693</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37693/1471444046409833</guid>
      <description>&lt;p&gt;
Steps to reproduce:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Have a paragraph that contains literal backticks. For example, copy this to TinyMCE: &lt;code&gt; In this paragraph with `backticks`, try to add some more. &lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Anywhere in this paragraph, enter &lt;code&gt;`test`&lt;/code&gt; and press a spacebar.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
It should convert it to &lt;code&gt;&amp;lt;code&amp;gt;test&amp;lt;/code&amp;gt;&lt;/code&gt; but it doesn't.
&lt;/p&gt;
&lt;p&gt;
My guess is that a regex or something similar doesn't handle multiple backtics in a paragraph correctly.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #3901 (Version Database updater displays to any user, not just administrators) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 17 Aug 2016 14:19:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3901#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3901#comment:10/1471443582548308</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by swissspidy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1471443579004644"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37680 (PHP Warning: ini_get_all() has been disabled for security reasons) updated</title>
      
        <dc:creator>blobaugh</dc:creator>

      <pubDate>Wed, 17 Aug 2016 14:08:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37680#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37680#comment:2/1471442889590476</guid>
      <description>&lt;p&gt;
From &lt;a class="ext-link" href="http://php.net/manual/en/function.ini-set.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://php.net/manual/en/function.ini-set.php&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Returns the old value on success, FALSE on failure.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think we should follow in line here an return a false value. That will signify a possible issue with the call. Alternatively it could return a &lt;code&gt;WP_Error&lt;/code&gt; if having the &lt;code&gt;ini_*&lt;/code&gt; functions available is a hard requirement.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36010 (New password reset styling changes are confusing to casual users) updated</title>
      
        <dc:creator>markcbain</dc:creator>

      <pubDate>Wed, 17 Aug 2016 13:43:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36010#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36010#comment:10/1471441385532334</guid>
      <description>&lt;p&gt;
Hi there
&lt;/p&gt;
&lt;p&gt;
We're testing a site with users, and the registration flow is causing a great deal of confusion.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;it's not clear that the pre-filled password needs to be accepted (or changed to something else). Users seem to think that it's already their new password. They don't know that they need to click anything.
&lt;/li&gt;&lt;li&gt;the wording of the label on the button compounds this: when registering for the first time, they  are not resetting anything, so it seems irrelevant to them.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This is actually more confusing than when someone is resetting, due to the label. Maybe a new ticket is required?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37692 (Introduce WP_Database_Table base class) created</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 17 Aug 2016 13:23:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37692</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37692/1471440208393122</guid>
      <description>&lt;p&gt;
I've always thought it odd that WordPress only versions blogs, and not each individual database table. On one hand, it's great that the schema changes rarely enough that WordPress core would not get a lot of use out of it. On the other, many plugins would benefit pretty hugely from a smart base class that encapsulated a lot of the procedural work of having custom database tables and maintaining a schema.
&lt;/p&gt;
&lt;p&gt;
BuddyPress, for example, comes with several object &amp;amp; metadata pairs, for groups, activity, friends, profiles, messages, notifications, etc... It currently takes WordPress's approach of having a big-dumb installer and a bunch of tangled together upgrade routines. I'd love it if each component could manage it's own schema on the fly, with it's own upgrade routines and database table classes to separate the responsibilities, but without needing to setup &lt;code&gt;admin_init&lt;/code&gt; hooks and &lt;code&gt;version_compare()&lt;/code&gt; checks for each component.
&lt;/p&gt;
&lt;p&gt;
Django has something similar currently, as do other open-source projects like Piwik, GitLab, Mattermost, etc...
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
I'm imagining that each core database table would extend the &lt;code&gt;WP_DB_Table&lt;/code&gt; class, each with their own &lt;code&gt;db_version&lt;/code&gt; and their own methods for upgrading to newer versions.
&lt;/p&gt;
&lt;p&gt;
Global tables (like &lt;code&gt;wp_users&lt;/code&gt;) would use &lt;code&gt;site_id&lt;/code&gt; &lt;code&gt;-1&lt;/code&gt; in the &lt;code&gt;wp_sitemeta&lt;/code&gt; database table to distinguish them as global, and not per-network or per-site.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
This way, when a plugin like WooCommerce wants to introduce new database tables, they just extend the base class, pass in an array of column-keys &amp;amp; attributes, and the base class would handle the &lt;code&gt;$wpdb&lt;/code&gt; table registration and all of the other bits and bobs.
&lt;/p&gt;
&lt;p&gt;
Eventually... eventually it could get paired up with some kind of a &lt;code&gt;WP_Base_Query&lt;/code&gt; class to automatically handle cache-key assignments, and generate basic crud methods based on the parameters in the associated &lt;code&gt;WP_Database_Table&lt;/code&gt; extension.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
I think this becomes particularly useful in REST applications, where WordPress's APIs can be used and extended for any manner of scalable data storage outside of the core database schemas.
&lt;/p&gt;
&lt;p&gt;
Obviously this is a huge idea with lots of moving parts, and without a core need ideas like this are pretty slow on the go. I am already starting to do something similar in my own plugins though - just without the base class - and it feels much easier to maintain each plugin knowing there is a similar convention between them.
&lt;/p&gt;
&lt;p&gt;
See: &lt;a class="ext-link" href="https://code.flox.io/stuttter/wp-site-aliases/blob/master/includes/class-wp-site-aliases-db-table.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://code.flox.io/stuttter/wp-site-aliases/blob/master/includes/class-wp-site-aliases-db-table.php&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37684 (Allow sites to have filterable "states" akin to posts &amp; media) updated</title>
      
        <dc:creator>blobaugh</dc:creator>

      <pubDate>Wed, 17 Aug 2016 13:22:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37684#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37684#comment:4/1471440153885201</guid>
      <description>&lt;p&gt;
As someone who often works on large multisite and multinetwork installs I think this is a great feature to have.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37689 (Issues with utf8mb4 collation and the 4.6 update) updated</title>
      
        <dc:creator>danielkanchev</dc:creator>

      <pubDate>Wed, 17 Aug 2016 13:21:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37689#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37689#comment:9/1471440093921023</guid>
      <description>&lt;p&gt;
I tried reverting those two as well but the issue remains. @ocean90 if you want I may give you access to a test site which is experiencing this issue or I can revert other changes as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37689 (Issues with utf8mb4 collation and the 4.6 update) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 17 Aug 2016 12:57:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37689#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37689#comment:8/1471438635603526</guid>
      <description>&lt;p&gt;
There are two other related changes: &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37523" title="Database: Use the `utf8mb4_unicode_520_ci` collation, when available.
 ..."&gt;[37523]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37521" title="Database: Obey locale-specific `utf8` collation settings.
Some sites ..."&gt;[37521]&lt;/a&gt;. Maybe it's one of these?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37691 (plugins directory not being actively checked) created</title>
      
        <dc:creator>bheadrick</dc:creator>

      <pubDate>Wed, 17 Aug 2016 12:49:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37691</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37691/1471438169084870</guid>
      <description>&lt;p&gt;
This may be by design, but I've discovered that with 4.6, if you have several plugins from a previous install, you can't just copy them to the plugins directory and have them register as being installed.
&lt;/p&gt;
&lt;p&gt;
This is what I did, then I viewed the "installed plugins" page, and it was empty (said no plugins are installed)
&lt;/p&gt;
&lt;p&gt;
I had to go through the process of installing them through the dashboard.
&lt;/p&gt;
&lt;p&gt;
I confirmed that restores from pre 4.6 - plugins restored will still not register as being installed
Deleting _transient_timeout_plugin_slugs and _transient_plugin_slugs wp_options records seems to force the installed plugins to update, but unless I'm just being impatient, it doesn't look like the plugins will show up otherwise.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37689 (Issues with utf8mb4 collation and the 4.6 update) updated</title>
      
        <dc:creator>danielkanchev</dc:creator>

      <pubDate>Wed, 17 Aug 2016 12:11:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37689#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37689#comment:7/1471435911330427</guid>
      <description>&lt;p&gt;
I reverted &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37601" title="Database: Split the logic of `wpdb::init_charset()` into a separate ..."&gt;[37601]&lt;/a&gt; and the issue was not resolved - the site is still showing gibberish if the define('DB_CHARSET', 'utf8mb4') is not commented. Other than that the DB_COLLATE is indeed empty in the wp-config.php
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17268 (Use native gettext library when available) updated</title>
      
        <dc:creator>luciole135</dc:creator>

      <pubDate>Wed, 17 Aug 2016 12:10:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17268#comment:69</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17268#comment:69/1471435845773419</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17268#comment:68" title="Comment 68"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@luciole135 100% sure this has nothing to do with this ticket. That error message is quite common and usually happens when your server temporarily cannot access wordpress.org.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You are right on my site online there is a problem with this hack, but not on my local test site. So it is the server configuration is in question.
I apologize for the inconvenience.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17268 (Use native gettext library when available) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 17 Aug 2016 12:04:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17268#comment:68</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17268#comment:68/1471435452158322</guid>
      <description>&lt;p&gt;
@luciole135 100% sure this has nothing to do with this ticket. That error message is quite common and usually happens when your server temporarily cannot access wordpress.org.
&lt;/p&gt;
&lt;p&gt;
If you continue to see this error, please post your issue in the &lt;a class="ext-link" href="https://wordpress.org/support/forum/how-to-and-troubleshooting"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;support forums&lt;/a&gt; along with some details about your site, server, etc. Trac is not for support.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17268 (Use native gettext library when available) updated</title>
      
        <dc:creator>luciole135</dc:creator>

      <pubDate>Wed, 17 Aug 2016 11:44:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17268#comment:67</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17268#comment:67/1471434246665629</guid>
      <description>&lt;p&gt;
With WordPress 4.6, there is a problem when we want to add a plugin from the dashboard of WordPress: « An unexpected error occurred. Something seems not to work with WordPress.org or configuring the server. If you continue to have problems, please try the support forums. »
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25293 (Switch_to_blog not switching the siteid) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Wed, 17 Aug 2016 11:33:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25293#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25293#comment:9/1471433598726798</guid>
      <description>&lt;p&gt;
For the above concept, it could look something like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function switch_to_site( $site, $switch_network = false ) {
	if ( $switch_network ) {
		if ( ! is_object( $site ) {
			$site = get_site( $site );
		}
		$site_id = $site-&amp;gt;blog_id;
		$GLOBALS['_wp_switched_sites_stack'][] = $GLOBALS['current_blog'];
	} else {
		if ( is_object( $site ) {
			$site_id = $site-&amp;gt;blog_id;
			$site = $site_id;
		} else {
			$site_id = $site;
		}
		$GLOBALS['_wp_switched_sites_stack'][] = $GLOBALS['current_blog']-&amp;gt;blog_id;
	}
	// do rest of the regular logic with $site_id
	if ( $switch_network ) {
		switch_to_network( $site-&amp;gt;site_id );
	}
}
function restore_current_site() {
	if ( empty( $GLOBALS['_wp_switched_sites_stack'] ) ) {
		return false;
	}
	$restore_network = false;
	$site = array_pop( $GLOBALS['_wp_switched_sites_stack'] );
	if ( is_object( $site ) ) {
		$site_id = $site-&amp;gt;blog_id;
		$restore_network = true;
	} else {
		$site_id = $site;
	}
	// do rest of the regular logic with $site_id
	if ( $restore_network ) {
		restore_current_network();
	}
}
function switch_to_network( $network, $switch_site = false ) {
	if ( $switch_site ) {
		if ( ! is_object( $network ) {
			$network = get_network( $network );
		}
		$network_id = $network-&amp;gt;id;
		$GLOBALS['_wp_switched_networks_stack'][] = $GLOBALS['current_site'];
	} else {
		if ( is_object( $network ) {
			$network_id = $network-&amp;gt;id;
			$network = $network_id;
		} else {
			$network_id = $network;
		}
		$GLOBALS['_wp_switched_networks_stack'][] = $GLOBALS['current_site']-&amp;gt;id;
	}
	// do rest of the regular logic with $network_id
	if ( $switch_site ) {
		switch_to_site( $network-&amp;gt;blog_id );
	}
}
function restore_current_network() {
	if ( empty( $GLOBALS['_wp_switched_networks_stack'] ) ) {
		return false;
	}
	$restore_site = false;
	$network = array_pop( $GLOBALS['_wp_switched_networks_stack'] );
	if ( is_object( $network ) ) {
		$network_id = $network-&amp;gt;id;
		$restore_site = true;
	} else {
		$network_id = $network;
	}
	// do rest of the regular logic with $network_id
	if ( $restore_site ) {
		restore_current_site();
	}
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37686 (Add object_type column to term_relationships table) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 17 Aug 2016 11:32:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37686#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37686#comment:2/1471433561949549</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
This means that a taxonomy term ID cannot be used for both post ID's and user ID's, as there is no way to know if an object_id is for a post ID or a user ID.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Just to clarify on this, currently we tie taxonomies to an &lt;code&gt;$object_type&lt;/code&gt; which although is normally thought of as &lt;code&gt;post_type&lt;/code&gt;  nothing prevents you from using &lt;code&gt;'user'&lt;/code&gt; as the object type. What you cannot do however, is have &lt;code&gt;$object_type&lt;/code&gt; be an array of multiple differently indexed types (so no &lt;code&gt;[ 'user', 'post' ]&lt;/code&gt;, or &lt;code&gt;[ 'user', 'option' ]&lt;/code&gt;).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This means that a taxonomy term ID cannot be used for both post ID's and user ID's, as there is no way to know if an object_id is for a post ID or a user ID.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This isn't an issue going forward, as now that we have split terms, each taxonomy (which still, IMHO, should only be added to a single collection of uniquely id'd terms) will get it's own term_taxonomy_id. It shouldn't really be possible to have the ID of &lt;code&gt;TermA&lt;/code&gt; in a posts taxonomy also assigned to a user in another taxonomy, nor should they be sharing the same taxonomy name IMHO..
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
This sort of functionality has been on the radar, and has always been, as part of the &lt;a class="ext-link" href="https://make.wordpress.org/core/2013/07/28/potential-roadmap-for-taxonomy-meta-and-post-relationships/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Taxonomy Roadmap&lt;/a&gt; work (Scroll down to the final references to &lt;code&gt;wp_term_relationships&lt;/code&gt;) but was never fully ironed out as what to do there, as we've had a long amount of simplifying to do to get to where we are today.
&lt;/p&gt;
&lt;p&gt;
I'm not 100% sold that the solution here should be to switch from a single unique ID &lt;code&gt;(object_id) =&amp;gt; term_id&lt;/code&gt; to a tuple of &lt;code&gt;(object_type, object_id) =&amp;gt; term_id&lt;/code&gt; though. As outlined in the above link, a more powerful useful implementation may be to convert to a object linking table of &lt;code&gt;(object_type, object_id) =&amp;gt; (object_type, object_id)&lt;/code&gt; which would allow far more flexibility in how it's used, and also prevent hacky solutions like using a taxonomy as a middleman to link two pieces of content together.
At first, it seems that implementing just &lt;code&gt;(object_type, object_id) =&amp;gt; term_id&lt;/code&gt; is a step in the right direction, and that it could then be upgraded/iterated on later to add the object_type to the right side of the equation, however I feel that it would needlessly complicate matters and muddy the upgrade paths going forward.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37686 (Add object_type column to term_relationships table) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 17 Aug 2016 11:32:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37686#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37686#comment:1/1471433533080422</guid>
      <description>&lt;p&gt;
I am ambivalent towards this change.
&lt;/p&gt;
&lt;p&gt;
On the one hand, there are many potential use cases for allowing taxonomies against all objects.
&lt;/p&gt;
&lt;p&gt;
On the other hand, this has significant backwards compatibility issues, particularly for any code that does custom queries against &lt;code&gt;wp_term_relationships&lt;/code&gt; - suddenly, an &lt;code&gt;object_id&lt;/code&gt; doesn't necessarily correlate with a &lt;code&gt;post_id&lt;/code&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
...&lt;code&gt;site&lt;/code&gt;, or &lt;code&gt;network&lt;/code&gt; could make for interesting taxonomy term relationships.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thank you for volunteering to maintain global terms! ;-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25293 (Switch_to_blog not switching the siteid) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Wed, 17 Aug 2016 11:12:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25293#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25293#comment:8/1471432334207738</guid>
      <description>&lt;p&gt;
@Rahe:
The ticket is still relevant.
Actually I'm just seeing this ticket right now. It would be great to get this implemented somehow as it would also give a ticket like &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37414" title="#37414: enhancement: Use `get_network()` instead of global `$current_site` (closed: fixed)"&gt;#37414&lt;/a&gt; more value.
&lt;/p&gt;
&lt;p&gt;
@jeremyfelt:
For &lt;code&gt;switch_to_network()&lt;/code&gt; (and the related restore function), we could, for the most part, take the function from the WP Multi Network plugin. What I like about that implementation is that the entire network object is stored in the switched stack global.
&lt;/p&gt;
&lt;p&gt;
For the site switching, I really like your idea of introducing a &lt;code&gt;switch_to_site()&lt;/code&gt; for it. Maybe the second parameter could be a bool &lt;code&gt;$switch_network&lt;/code&gt; instead of the network ID so that the function detects the network to switch to automatically. I don't think there's a use-case for switching the site and network simultaneously in a way that they don't belong together. &lt;code&gt;switch_to_network()&lt;/code&gt; could have a similar second parameter &lt;code&gt;$switch_site&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
To prevent database queries on every switch, maybe both functions should accept _either_ an ID or an object. The site object has the network ID already in place (so does the network object have the site ID), so no additional query necessary. If the user passes an ID, we call &lt;code&gt;get_site( $id )&lt;/code&gt; (or &lt;code&gt;get_network( $id )&lt;/code&gt; respectively) which is not too unlikely to get a cache hit under these circumstances. In the related &lt;code&gt;restore_current_*()&lt;/code&gt; functions, we could prevent queries in a similar way, by storing the entire objects in the switched stack globals. Maybe we should make what we store there dependent on whether the user provided &lt;code&gt;$switch_network = true&lt;/code&gt;. If switching the network too, we store the object, if only the site, we store the ID. Then in the &lt;code&gt;restore_current_*()&lt;/code&gt; function we can detect whether that last switch only switched the site or also the network. This way we wouldn't have DB queries there either, and we wouldn't even need a conditional parameter whether to switch the network as well since that would be automatically detected.
&lt;/p&gt;
&lt;p&gt;
If we hold on to &lt;code&gt;switch_to_blog()&lt;/code&gt; to use it internally (in &lt;code&gt;switch_to_site()&lt;/code&gt;), we would need to adjust that to also accept an object and store that in stack. Or we create &lt;code&gt;switch_to_site()&lt;/code&gt; from scratch with a global &lt;code&gt;_wp_switched_sites_stack&lt;/code&gt; to not mess with &lt;code&gt;switch_to_blog()&lt;/code&gt;, considering it deprecated at some point.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37689 (Issues with utf8mb4 collation and the 4.6 update) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 17 Aug 2016 11:08:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37689#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37689#comment:6/1471432117523689</guid>
      <description>&lt;p&gt;
@danielkanchev Thanks, this could be related to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37683" title="#37683: defect (bug): $collate and $charset can be undefined in wpdb::init_charset() (closed: fixed)"&gt;#37683&lt;/a&gt; and the change in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37601" title="Database: Split the logic of `wpdb::init_charset()` into a separate ..."&gt;[37601]&lt;/a&gt;. Do you have a test install where you can test if a revert of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37601" title="Database: Split the logic of `wpdb::init_charset()` into a separate ..."&gt;[37601]&lt;/a&gt; will fix the issue?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37264-2.patch attached to Ticket #37264</title>
      
        <dc:creator>sibprogrammer</dc:creator>

      <pubDate>Wed, 17 Aug 2016 11:07:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37264/37264-2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37264/37264-2.patch/1471432055743587</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37689 (Issues with utf8mb4 collation and the 4.6 update) updated</title>
      
        <dc:creator>danielkanchev</dc:creator>

      <pubDate>Wed, 17 Aug 2016 11:00:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37689#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37689#comment:5/1471431659136388</guid>
      <description>&lt;p&gt;
@ocean90 here is the requested information:
&lt;/p&gt;
&lt;p&gt;
MySQL Server version:
&lt;/p&gt;
&lt;p&gt;
Server version: 5.6.28-76.1-log Percona Server (GPL), Release 76.1, Revision 5759e76
&lt;/p&gt;
&lt;p&gt;
MySQL client version:
&lt;/p&gt;
&lt;p&gt;
mysql --version
mysql  Ver 14.14 Distrib 5.6.27-75.0, for Linux (x86_64) using  5.1
&lt;/p&gt;
&lt;p&gt;
PHP Details:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://pandjarov.com/updatetest/info.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://pandjarov.com/updatetest/info.php&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Table Collation before the upgrade:
&lt;/p&gt;
&lt;p&gt;
utf8mb4_unicode_ci
&lt;/p&gt;
&lt;p&gt;
Table Collation after the upgrade:
&lt;/p&gt;
&lt;p&gt;
utf8mb4_unicode_ci
&lt;/p&gt;
&lt;p&gt;
So the issue is that before the upgrade the site works as expected and after the upgrade all the text was gibberish.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37689 (Issues with utf8mb4 collation and the 4.6 update) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 17 Aug 2016 10:51:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37689#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37689#comment:4/1471431068293904</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@hristo-sg Can you provide some details about your PHP and MySQL (client) versions? What's the current charset/collation of your tables?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37689 (Issues with utf8mb4 collation and the 4.6 update) updated</title>
      
        <dc:creator>danielkanchev</dc:creator>

      <pubDate>Wed, 17 Aug 2016 10:50:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37689#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37689#comment:3/1471431043290910</guid>
      <description>&lt;p&gt;
Yes, the nasty part is that I suspect everyone who has defined the charset to be utf8mb4 may see a broken site after the update to 4.6.
&lt;/p&gt;
&lt;p&gt;
If you need more information about the site @Hristo Sg mention I can provide the exact MySQL version, MySQL client version, PHP version, etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37689 (Issues with utf8mb4 collation and the 4.6 update) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 17 Aug 2016 10:46:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37689#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37689#comment:2/1471430779033379</guid>
      <description>&lt;p&gt;
IIRC leaving the default at &lt;code&gt;define('DB_CHARSET', 'utf8');&lt;/code&gt; works best as WordPress will automatically convert to &lt;code&gt;utf8mb4&lt;/code&gt; if possible. But of course that's not "the" solution.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37685 (Creating new multisite blog - wpmu_create_blog tries to execute ...) updated</title>
      
        <dc:creator>fliespl</dc:creator>

      <pubDate>Wed, 17 Aug 2016 10:44:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37685#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37685#comment:2/1471430664099621</guid>
      <description>&lt;p&gt;
@johnjamesjacoby Those are logs from a multisite that was customized at some parts due to size/amount of traffic.
&lt;/p&gt;
&lt;p&gt;
Yet I am pretty confident (99%) that those errors were not triggered by them - I have checked full backtrace that lead to this notices and those were happening (and triggered) solely by core functions (before any plugin / modification hopped in).
&lt;/p&gt;
&lt;p&gt;
Still, I will create later today a clean site without any modifications just to be 100% sure.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37690 (Backspace causes jumping) created</title>
      
        <dc:creator>ModernNovel</dc:creator>

      <pubDate>Wed, 17 Aug 2016 10:43:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37690</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37690/1471430597499515</guid>
      <description>&lt;p&gt;
This is a follow-up to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37072" title="#37072: defect (bug): Unexpected behavior when using backspace/replacing content in the text ... (closed: fixed)"&gt;#37072&lt;/a&gt;.  The backspace causing jumping problem did not occur in previous versions but now occurs in 4.6 using Firefox 48.0
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37689 (Issues with utf8mb4 collation and the 4.6 update) created</title>
      
        <dc:creator>Hristo Sg</dc:creator>

      <pubDate>Wed, 17 Aug 2016 10:42:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37689</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37689/1471430565815678</guid>
      <description>&lt;p&gt;
If you have a pre-4.6 WP install with charset configured in the wp-config.php file and set to utf8mb4:
&lt;/p&gt;
&lt;p&gt;
define('DB_CHARSET', 'utf8mb4');
&lt;/p&gt;
&lt;p&gt;
After the update, all site symbols including those in the options table are converted into incorrect characters.
&lt;/p&gt;
&lt;p&gt;
If you comment out the line:
&lt;/p&gt;
&lt;p&gt;
#define('DB_CHARSET', 'utf8mb4');
&lt;/p&gt;
&lt;p&gt;
The website starts showing characters correctly.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37685 (Creating new multisite blog - wpmu_create_blog tries to execute ...) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 17 Aug 2016 10:38:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37685#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37685#comment:1/1471430320334105</guid>
      <description>&lt;p&gt;
Hey @fliespl. Thanks for the report. Do you have any plugins activated on this installation? If so, are you comfortable listing them here? (I'd like to rule out the chance that a plugin is interfering with the core functionality of the &lt;code&gt;wpmu_create_blog()&lt;/code&gt; function.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37687 (Multisite - Enormous number of update queries during site creation ...) updated</title>
      
        <dc:creator>fliespl</dc:creator>

      <pubDate>Wed, 17 Aug 2016 10:34:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37687#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37687#comment:1/1471430071849866</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This was supposed to be marked as "Multisite" instead of General.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37686.diff attached to Ticket #37686</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 17 Aug 2016 10:34:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37686/37686.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37686/37686.diff/1471430057712950</guid>
      <description>&lt;p&gt;
First pass at adding the &lt;code&gt;object_type&lt;/code&gt; column with a compound index to include it along with &lt;code&gt;object_id&lt;/code&gt; and &lt;code&gt;term_taxonomy_id&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37687 (Multisite - Enormous number of update queries during site creation ...) created</title>
      
        <dc:creator>fliespl</dc:creator>

      <pubDate>Wed, 17 Aug 2016 10:33:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37687</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37687/1471430007650201</guid>
      <description>&lt;p&gt;
This is mostly because the wp_roles+caps are added one by one causing a very nice overhead.
&lt;/p&gt;
&lt;pre class="wiki"&gt;
query: INSERT INTO `wp_86_options` (`option_name`, `option_value`, `autoload`) VALUES ('wp_86_user_roles', 'a:1:{s:13:\"administrator\";a:2:{s:4:\"name\";s:13:\"Administrator\";s:12:\"capabilities\";a:0:{}}}', 'yes') ON DUPLICATE KEY UPDATE `option_name` = VALUES(`option_name`), `option_value` = VALUES(`option_value`), `autoload` = VALUES(`autoload`)
query: UPDATE `wp_86_options` SET `option_value` = 'a:2:{s:13:\"administrator\";a:2:{s:4:\"name\";s:13:\"Administrator\";s:12:\"capabilities\";a:0:{}}s:6:\"editor\";a:2:{s:4:\"name\";s:6:\"Editor\";s:12:\"capabilities\";a:0:{}}}' WHERE `option_name` = 'wp_86_user_roles'
query: UPDATE `wp_86_options` SET `option_value` = 'a:3:{s:13:\"administrator\";a:2:{s:4:\"name\";s:13:\"Administrator\";s:12:\"capabilities\";a:0:{}}s:6:\"editor\";a:2:{s:4:\"name\";s:6:\"Editor\";s:12:\"capabilities\";a:0:{}}s:6:\"author\";a:2:{s:4:\"name\";s:6:\"Author\";s:12:\"capabilities\";a:0:{}}}' WHERE `option_name` = 'wp_86_user_roles'
query: UPDATE `wp_86_options` SET `option_value` = 'a:5:{s:13:\"administrator\";a:2:{s:4:\"name\";s:13:\"Administrator\";s:12:\"capabilities\";a:3:{s:13:\"switch_themes\";b:1;s:11:\"edit_themes\";b:1;s:16:\"activate_plugins\";b:1;}}s:6:\"editor\";a:2:{s:4:\"name\";s:6:\"Editor\";s:12:\"capabilities\";a:0:{}}s:6:\"author\";a:2:{s:4:\"name\";s:6:\"Author\";s:12:\"capabilities\";a:0:{}}s:11:\"contributor\";a:2:{s:4:\"name\";s:11:\"Contributor\";s:12:\"capabilities\";a:0:{}}s:10:\"subscriber\";a:2:{s:4:\"name\";s:10:\"Subscriber\";s:12:\"capabilities\";a:0:{}}}' WHERE `option_name` = 'wp_86_user_roles'
[...] One hunder queries later:
UPDATE `wp_86_options` SET `option_value` = 'a:5:{s:13:\"administrator\";a:2:{s:4:\"name\";s:13:\"Administrator\";s:12:\"capabilities\";a:61:{s:13:\"switch_themes\";b:1;s:11:\"edit_themes\";b:1;s:16:\"activate_plugins\";b:1;s:12:\"edit_plugins\";b:1;s:10:\"edit_users\";b:1;s:10:\"edit_files\";b:1;s:14:\"manage_options\";b:1;s:17:\"moderate_comments\";b:1;s:17:\"manage_categories\";b:1;s:12:\"manage_links\";b:1;s:12:\"upload_files\";b:1;s:6:\"import\";b:1;s:15:\"unfiltered_html\";b:1;s:10:\"edit_posts\";b:1;s:17:\"edit_others_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:10:\"edit_pages\";b:1;s:4:\"read\";b:1;s:8:\"level_10\";b:1;s:7:\"level_9\";b:1;s:7:\"level_8\";b:1;s:7:\"level_7\";b:1;s:7:\"level_6\";b:1;s:7:\"level_5\";b:1;s:7:\"level_4\";b:1;s:7:\"level_3\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:17:\"edit_others_pages\";b:1;s:20:\"edit_published_pages\";b:1;s:13:\"publish_pages\";b:1;s:12:\"delete_pages\";b:1;s:19:\"delete_others_pages\";b:1;s:22:\"delete_published_pages\";b:1;s:12:\"delete_posts\";b:1;s:19:\"delete_others_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:20:\"delete_private_posts\";b:1;s:18:\"edit_private_posts\";b:1;s:18:\"read_private_posts\";b:1;s:20:\"delete_private_pages\";b:1;s:18:\"edit_private_pages\";b:1;s:18:\"read_private_pages\";b:1;s:12:\"delete_users\";b:1;s:12:\"create_users\";b:1;s:17:\"unfiltered_upload\";b:1;s:14:\"edit_dashboard\";b:1;s:14:\"update_plugins\";b:1;s:14:\"delete_plugins\";b:1;s:15:\"install_plugins\";b:1;s:13:\"update_themes\";b:1;s:14:\"install_themes\";b:1;s:11:\"update_core\";b:1;s:10:\"list_users\";b:1;s:12:\"remove_users\";b:1;s:13:\"promote_users\";b:1;s:18:\"edit_theme_options\";b:1;s:13:\"delete_themes\";b:1;s:6:\"export\";b:1;}}s:6:\"editor\";a:2:{s:4:\"name\";s:6:\"Editor\";s:12:\"capabilities\";a:34:{s:17:\"moderate_comments\";b:1;s:17:\"manage_categories\";b:1;s:12:\"manage_links\";b:1;s:12:\"upload_files\";b:1;s:15:\"unfiltered_html\";b:1;s:10:\"edit_posts\";b:1;s:17:\"edit_others_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:10:\"edit_pages\";b:1;s:4:\"read\";b:1;s:7:\"level_7\";b:1;s:7:\"level_6\";b:1;s:7:\"level_5\";b:1;s:7:\"level_4\";b:1;s:7:\"level_3\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:17:\"edit_others_pages\";b:1;s:20:\"edit_published_pages\";b:1;s:13:\"publish_pages\";b:1;s:12:\"delete_pages\";b:1;s:19:\"delete_others_pages\";b:1;s:22:\"delete_published_pages\";b:1;s:12:\"delete_posts\";b:1;s:19:\"delete_others_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:20:\"delete_private_posts\";b:1;s:18:\"edit_private_posts\";b:1;s:18:\"read_private_posts\";b:1;s:20:\"delete_private_pages\";b:1;s:18:\"edit_private_pages\";b:1;s:18:\"read_private_pages\";b:1;}}s:6:\"author\";a:2:{s:4:\"name\";s:6:\"Author\";s:12:\"capabilities\";a:10:{s:12:\"upload_files\";b:1;s:10:\"edit_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:4:\"read\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:12:\"delete_posts\";b:1;s:22:\"delete_published_posts\";b:1;}}s:11:\"contributor\";a:2:{s:4:\"name\";s:11:\"Contributor\";s:12:\"capabilities\";a:5:{s:10:\"edit_posts\";b:1;s:4:\"read\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:12:\"delete_posts\";b:1;}}s:10:\"subscriber\";a:2:{s:4:\"name\";s:10:\"Subscriber\";s:12:\"capabilities\";a:2:{s:4:\"read\";b:1;s:7:\"level_0\";b:1;}}}' WHERE `option_name` = 'wp_86_user_roles'
&lt;/pre&gt;&lt;p&gt;
Possible idea: instantiate &lt;code&gt;wp_roles&lt;/code&gt; with &lt;code&gt;use_db&lt;/code&gt; false during blog creation and force saving roles data into database after &lt;code&gt;populate_roles();&lt;/code&gt; function.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37686 (Add object_type column to term_relationships table) created</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 17 Aug 2016 10:32:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37686</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37686/1471429943581870</guid>
      <description>&lt;p&gt;
&lt;strong&gt;Prologue&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Today in WordPress core, taxonomy terms are only ever registered to post objects. This makes it easy to discern that in the &lt;code&gt;wp_term_relationships&lt;/code&gt; database table, every &lt;code&gt;object_id&lt;/code&gt; points to a post ID from the &lt;code&gt;wp_posts&lt;/code&gt; database table.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
&lt;strong&gt;Problem&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
When using taxonomies for things other than posts, it's impossible to discern the type of object that a taxonomy term is related to.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
&lt;strong&gt;Example&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
The WP User Groups plugin registers taxonomies for users, and uses the &lt;code&gt;object_id&lt;/code&gt; column for user IDs from the &lt;code&gt;wp_users&lt;/code&gt; database table (instead of post IDs.)
&lt;/p&gt;
&lt;p&gt;
This means that a taxonomy term ID cannot be used for both post ID's and user ID's, as there is no way to know if an &lt;code&gt;object_id&lt;/code&gt; is for a post ID or a user ID.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
&lt;strong&gt;Solution&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Introduce an additional column in the &lt;code&gt;wp_term_relationships&lt;/code&gt; table for an &lt;code&gt;object_type&lt;/code&gt;. Core object types would be registered according to their primary function: &lt;code&gt;post&lt;/code&gt;, &lt;code&gt;comment&lt;/code&gt;, &lt;code&gt;user&lt;/code&gt;, and heck... even &lt;code&gt;term&lt;/code&gt;, &lt;code&gt;option&lt;/code&gt;, &lt;code&gt;site&lt;/code&gt;, or &lt;code&gt;network&lt;/code&gt; could make for interesting taxonomy term relationships.
&lt;/p&gt;
&lt;p&gt;
This change also -- relatively easily -- allows for many-to-many object-to-object relationships, where posts, comments, and users can share a common tag or category, without being required to.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37685 (Creating new multisite blog - wpmu_create_blog tries to execute ...) created</title>
      
        <dc:creator>fliespl</dc:creator>

      <pubDate>Wed, 17 Aug 2016 10:04:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37685</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37685/1471428285788222</guid>
      <description>&lt;p&gt;
I have noticed that while creating new wordpress site in multisite install I get quite a few notices about executed queries while using verbose logging.
&lt;/p&gt;
&lt;pre class="wiki"&gt;query: SELECT option_name, option_value FROM wp_85_options WHERE autoload = 'yes'
status: ERR: Table 'wp1.wp_85_options' doesn't exist
&lt;/pre&gt;&lt;p&gt;
which is triggered by &lt;code&gt;wp_roles()-&amp;gt;reinit();&lt;/code&gt; during switch_to_blog function
&lt;/p&gt;
&lt;p&gt;
Another are from get_blogaddress_by_id (inside install_blog function):
&lt;/p&gt;
&lt;pre class="wiki"&gt;query: SELECT option_name, option_value FROM wp_85_options
status: ERR: Table 'wp1.wp_85_options' doesn't exist
query: SELECT option_value FROM wp_85_options WHERE option_name = 'home' LIMIT 1
status: ERR: Table 'wp1.wp_85_options' doesn't exist
query: SELECT option_value FROM wp_85_options WHERE option_name = 'blogname' LIMIT 1
status: ERR: Table 'wp1.wp_85_options' doesn't exist
query: SELECT option_value FROM wp_85_options WHERE option_name = 'siteurl' LIMIT 1
status: ERR: Table 'wp1.wp_85_options' doesn't exist
query: SELECT option_value FROM wp_85_options WHERE option_name = 'post_count' LIMIT 1
status: ERR: Table 'wp1.wp_85_options' doesn't exist
query: SELECT option_name, option_value FROM wp_85_options WHERE autoload = 'yes'
status: ERR: Table 'wp1.wp_85_options' doesn't exist
&lt;/pre&gt;&lt;p&gt;
Wouldn't it make sense to skip execution of those queries unless tables has been created?
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;code&gt;get_blogaddress_by_id&lt;/code&gt; calls get_blog_details with $get_all as true while it makes no sense since additional fields will either be empty.
&lt;/li&gt;&lt;li&gt;Do not call reinit of wp_roles if in blog creation mode
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37683 ($collate and $charset can be undefined in wpdb::init_charset()) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 17 Aug 2016 09:41:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37683#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37683#comment:3/1471426860490345</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Introduced in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36917" title="#36917: task (blessed): Re-architect wpdb::init_charset() for unit testing (closed: fixed)"&gt;#36917&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://wordpress.org/support/topic/wordpress-46-installation-error?replies=3"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Another report&lt;/a&gt; mentions that is also happens for &lt;code&gt;$charset&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25239 ($_SERVER['SERVER_NAME'] not a reliable when generating email host names) updated</title>
      
        <dc:creator>mensmaximus</dc:creator>

      <pubDate>Wed, 17 Aug 2016 09:05:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25239#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25239#comment:22/1471424726743599</guid>
      <description>&lt;p&gt;
To make the function more flexible and to strip the subdomain for email addresses we could pass some arguments:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;function get_current_domain( $strip_subdomain = true, $blog_id = '' ) {
        $blog_id = empty( $blog_id ) ? get_current_blog_id() : $blog_id;
        $domain = parse_url( get_home_url( $blog_id ), PHP_URL_HOST );
        if ( true === $strip_subdomain ) {
                $domain_parts = explode ( ".", $domain );
                array_shift( $domain_parts );
                $domain = implode( '.', $domain_parts );
        }
        return $domain;
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37684 (Allow sites to have filterable "states" akin to posts &amp; media) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 17 Aug 2016 08:34:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37684#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37684#comment:3/1471422848399504</guid>
      <description>&lt;p&gt;
Paging @jeremyfelt for a 2nd-opinion &amp;amp; sign-off.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37684 (Allow sites to have filterable "states" akin to posts &amp; media) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 17 Aug 2016 08:32:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37684#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37684#comment:2/1471422775236827</guid>
      <description>&lt;i&gt;Description&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Editing the title &amp;amp; description to focus on adding the filter &amp;amp; debating the correct approach going forward for improving site-states.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37684.03.diff attached to Ticket #37684</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 17 Aug 2016 08:30:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37684/37684.03.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37684/37684.03.diff/1471422625657294</guid>
      <description>&lt;p&gt;
An alternative approach that adds &lt;code&gt;site_states()&lt;/code&gt; as a method in &lt;code&gt;WP_MS_Sites_List_Table&lt;/code&gt;. This is cleaner, but makes the idea &amp;amp; output exclusive to this list table object, meaning plugins wanting to take advantage of site-states would need to duplicate this bit of code.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #25239 ($_SERVER['SERVER_NAME'] not a reliable when generating email host names) updated</title>
      
        <dc:creator>mensmaximus</dc:creator>

      <pubDate>Wed, 17 Aug 2016 08:25:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25239#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25239#comment:21/1471422342382926</guid>
      <description>&lt;p&gt;
Can we fix this for 4.7 please?
&lt;/p&gt;
&lt;p&gt;
There are several places in WordPress where we rely on &lt;code&gt;$_SERVER['SERVER_NAME']&lt;/code&gt; or &lt;code&gt;$_SERVER['HTTP_HOST']&lt;/code&gt;. While I personally never trust in &lt;code&gt;$_SERVER['SERVER_NAME']&lt;/code&gt; I understand some feel uncomfortable with &lt;code&gt;$_SERVER['HTTP_HOST']&lt;/code&gt; either.
&lt;/p&gt;
&lt;p&gt;
Given the fact that &lt;code&gt;home_url&lt;/code&gt; and &lt;code&gt;blog_id&lt;/code&gt; are always set and can be trusted, introducing a new function might be a solution:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;function get_current_domain() {
        return parse_url( get_home_url( get_current_blog_id() ), PHP_URL_HOST );
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The function name follows the syntax from other &lt;code&gt;get_&lt;/code&gt; functions in WordPress. It's name says what it does. It relies on WordPress core functions and settings that always exist. It works with PHP down to 4.0.
&lt;/p&gt;
&lt;p&gt;
So instead of using &lt;code&gt;$_SERVER['SERVER_NAME']&lt;/code&gt; or &lt;code&gt;$_SERVER['HTTP_HOST']&lt;/code&gt; you could use &lt;code&gt;get_current_domain()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33055 (Support Parallel HTTP Requests in WP_Http, et al) updated</title>
      
        <dc:creator>Hrohh</dc:creator>

      <pubDate>Wed, 17 Aug 2016 08:25:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33055#comment:73</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33055#comment:73/1471422305022532</guid>
      <description>&lt;p&gt;
Hi, please, now I have WP4.6 and my filter "http_api_curl" dont work at all. How can I use this action? Thx
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33885 (meta_form performs a potentially expensive query) updated</title>
      
        <dc:creator>jb510</dc:creator>

      <pubDate>Wed, 17 Aug 2016 08:24:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33885#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33885#comment:37/1471422241088971</guid>
      <description>&lt;p&gt;
I was consistently seeing a 15s query time, ran &lt;code&gt;ALTER TABLE wp_postmeta MODIFY meta_key varchar(191);&lt;/code&gt; on the table and now it's down to 0.3s.
&lt;/p&gt;
&lt;p&gt;
The wp_post_meta table is about 2m rows.
&lt;/p&gt;
&lt;p&gt;
TY @tollmanz hoping someone can get this into core soon?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37684.02.diff attached to Ticket #37684</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 17 Aug 2016 08:23:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37684/37684.02.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37684/37684.02.diff/1471422204372293</guid>
      <description>&lt;p&gt;
Remove site states from &lt;code&gt;WP_MS_Sites_List_Table&lt;/code&gt; class
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37264 (Please do not chmod 666 the wp-config.php file on installation.) updated</title>
      
        <dc:creator>sibprogrammer</dc:creator>

      <pubDate>Wed, 17 Aug 2016 08:20:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37264#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37264#comment:8/1471422045203910</guid>
      <description>&lt;p&gt;
First of all we're talking about the new installations and about &lt;strong&gt;security&lt;/strong&gt;. It seems more reasonable to make chmod 600 instead of 666. If you afraid of breaking of old hosts that will try to install the WordPress, the following steps could be made. Check the owner of PHP process and compare it with the installation directory owner. If it matches, we can do chmod 600 w/o any doubts. If the owners don't match, we can show additional checkbox on installation form saying "Allow other users (besides &amp;lt;detected-php-process-user&amp;gt;) to write to wp-config.php" (unchecked by default).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25293 (Switch_to_blog not switching the siteid) updated</title>
      
        <dc:creator>Rahe</dc:creator>

      <pubDate>Wed, 17 Aug 2016 08:15:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25293#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25293#comment:7/1471421743793926</guid>
      <description>&lt;p&gt;
With the new 4.6 out, is this ticket still relevant ? Or is the bug still here ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37684 (Allow sites to have filterable "states" akin to posts &amp; media) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 17 Aug 2016 08:13:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37684#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37684#comment:1/1471421635113441</guid>
      <description>&lt;p&gt;
Heh.
&lt;/p&gt;
&lt;p&gt;
So... I'm a bit slow. Sites *do* have states, kinda, but they're baked into &lt;code&gt;WP_MS_Sites_List_Table::column_blogname()&lt;/code&gt; and not currently filterable. I'll update my patch to normalize this with Posts &amp;amp; Media.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Screen Shot 2016-08-17 at 03.10.31.png attached to Ticket #37684</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 17 Aug 2016 08:11:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37684/Screen%20Shot%202016-08-17%20at%2003.10.31.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37684/Screen%20Shot%202016-08-17%20at%2003.10.31.png/1471421472596204</guid>
      <description>&lt;p&gt;
Screenshot. See "-- Main" state in top row
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>37684.diff attached to Ticket #37684</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 17 Aug 2016 08:10:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37684/37684.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37684/37684.diff/1471421405112386</guid>
      <description>&lt;p&gt;
Add &lt;code&gt;_site_states()&lt;/code&gt; to &lt;code&gt;wp-admin/includes/template.php&lt;/code&gt; and use in Sites list-table
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37684 (Allow sites to have filterable "states" akin to posts &amp; media) created</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 17 Aug 2016 07:56:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37684</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37684/1471420600569458</guid>
      <description>&lt;p&gt;
Posts &amp;amp; Media have "states". (See &lt;code&gt;_media_states()&lt;/code&gt; &amp;amp; &lt;code&gt;_post_states()&lt;/code&gt; for more.)
&lt;/p&gt;
&lt;p&gt;
It would be nice if this paradigm existed for Sites, too, beyond just statuses. It would allow plugins to extend those states, for example, having "Protected" sites that cannot be deleted, even by super admins, or to communicate to network admins which site is the "Main" site in the network, which right now is not visually conveyed to the user.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37683 ($collate and $charset can be undefined in wpdb::init_charset()) updated</title>
      
        <dc:creator>robsat91</dc:creator>

      <pubDate>Wed, 17 Aug 2016 07:33:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37683#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37683#comment:2/1471419184365636</guid>
      <description>&lt;p&gt;
Wow, that was fast.
Perfect, thanks mate! :)
&lt;/p&gt;
&lt;p&gt;
Good job with 4.6 btw, noticing the speed increase already!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37683 ($collate and $charset can be undefined in wpdb::init_charset()) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 17 Aug 2016 07:28:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37683#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37683#comment:1/1471418923944159</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the bug report, @robsat91!
&lt;/p&gt;
&lt;p&gt;
You're correct, this warning will occur if &lt;code&gt;DB_COLLATE&lt;/code&gt; isn't set - we'll get this fixed up it 4.6.1.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37683 ($collate and $charset can be undefined in wpdb::init_charset()) created</title>
      
        <dc:creator>robsat91</dc:creator>

      <pubDate>Wed, 17 Aug 2016 07:22:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37683</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37683/1471418578488819</guid>
      <description>&lt;p&gt;
Hello!
&lt;/p&gt;
&lt;p&gt;
After updating from 5.3.1 to 4.6 i got an error:
&lt;em&gt;Notice: Undefined variable: collate in /Users/robert/Nettsider/wp/ehc-wordpress/webroot/wordpress/wp-includes/wp-db.php on line 752&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
It seems that the reason for the error is that i did not set the constant "DB_COLLATE" in wp-config.php. This worked before, but not in 4.6.
&lt;/p&gt;
&lt;p&gt;
Is there some issue with fallback values if some constants are not set maybe?
&lt;/p&gt;
&lt;p&gt;
Best regards, Robert Sather.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>37682.patch attached to Ticket #37682</title>
      
        <dc:creator>sebastian.pisula</dc:creator>

      <pubDate>Wed, 17 Aug 2016 06:30:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37682/37682.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37682/37682.patch/1471415458179687</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37682 (Fix docs for `get_sample_permalink` filter) created</title>
      
        <dc:creator>sebastian.pisula</dc:creator>

      <pubDate>Wed, 17 Aug 2016 06:30:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37682</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37682/1471415436624034</guid>
      <description>&lt;p&gt;
Fix docs for &lt;code&gt;get_sample_permalink&lt;/code&gt; filter
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37673 (Masonry problem in Safari (also in iOS)) updated</title>
      
        <dc:creator>anatrog</dc:creator>

      <pubDate>Wed, 17 Aug 2016 05:41:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37673#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37673#comment:2/1471412517822003</guid>
      <description>&lt;p&gt;
After an update to WordPress 4.6 ... the same problem!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37599 (Editor (WP_Editor or TinyMCE) page template body class) updated</title>
      
        <dc:creator>webmandesign</dc:creator>

      <pubDate>Wed, 17 Aug 2016 05:25:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37599#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37599#comment:3/1471411506172025</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've made a patch for this. And judging by how the WordPress creates additional page template classes when applying them on HTML body on front-end, I think using simple &lt;code&gt;page-template-{filename}&lt;/code&gt; class would be enough. Let me know if this is OK with you, guys.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37599.patch attached to Ticket #37599</title>
      
        <dc:creator>webmandesign</dc:creator>

      <pubDate>Wed, 17 Aug 2016 05:22:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37599/37599.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37599/37599.patch/1471411347474078</guid>
      <description>&lt;p&gt;
Adding a page template CSS class on TinyMCE body
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32920 (Centering iFrames using visual editor) updated</title>
      
        <dc:creator>prionkor</dc:creator>

      <pubDate>Wed, 17 Aug 2016 04:45:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32920#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32920#comment:9/1471409141941200</guid>
      <description>&lt;p&gt;
Now that we have the major release of WP done. Can you shed more light into this ticket and discuss what need to be done moving forward?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37599 (Editor (WP_Editor or TinyMCE) page template body class) updated</title>
      
        <dc:creator>webmandesign</dc:creator>

      <pubDate>Wed, 17 Aug 2016 04:44:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37599#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37599#comment:2/1471409096130390</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37599#comment:1" title="Comment 1"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Assuming that class will have to change "dynamically" when selecting another template from the drop-down, the same way post type classes work. This is fairly easy to do from a plugin or theme, but maybe it should happen by default.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hi. Yes, I am doing this in the theme already (just not applying all the page template related classes as there is too many of them ;)) but I really think this should be part of the core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34648 (Requesting easier handling / replacing of menu items) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Wed, 17 Aug 2016 03:07:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34648#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34648#comment:1/1471403241979609</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the ticket!
&lt;/p&gt;
&lt;p&gt;
I may be mistaken but wouldn't this only apply to Custom Links? It feels like a large lift for not a lot of gain and may be better as a plugin. Vote to close.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37681 (Remove `function_exists( 'ini_get' )` from `_load_image_to_edit_path()`) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 17 Aug 2016 03:04:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37681#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37681#comment:1/1471403059270276</guid>
      <description>&lt;p&gt;
If anyone is curious as to when this code is hit..
&lt;/p&gt;
&lt;p&gt;
It appears to be hit if you're editing an image which was uploaded pre-2.7 and/or if the file metadata has gone missing. In that case, the image editors will treat the image URL as the source image through the filesystem wrappers, bypassing &lt;code&gt;wp_remote_get()&lt;/code&gt;, which is why the &lt;code&gt;fopen&lt;/code&gt; and &lt;code&gt;allow_url_fopen&lt;/code&gt; are there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37681.diff attached to Ticket #37681</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 17 Aug 2016 03:02:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37681/37681.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37681/37681.diff/1471402968576488</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37681 (Remove `function_exists( 'ini_get' )` from `_load_image_to_edit_path()`) created</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 17 Aug 2016 03:02:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37681</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37681/1471402953944392</guid>
      <description>&lt;p&gt;
Introduced with &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/20806" title="Create a new attachment and make a copy of the image when selecting an ..."&gt;[20806]&lt;/a&gt; is a check for &lt;code&gt;function_exists( 'ini_get' )&lt;/code&gt; we don't check the ability to call &lt;code&gt;ini_get()&lt;/code&gt; anywhere else in core, so removing this from the check increases the consistency in core.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #34235 (Multi selection in menu) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Wed, 17 Aug 2016 02:59:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34235#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34235#comment:1/1471402774043827</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the ticket! Did you want to take a shot at a patch?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32088 (Bug in get_admin_page_parent( $parent = '' ) when only having 1 ...) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Wed, 17 Aug 2016 02:56:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32088#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32088#comment:4/1471402614805825</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33742 (Menu Customizer: Adding draft items?) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Wed, 17 Aug 2016 02:52:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33742#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33742#comment:4/1471402366474601</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>33742.diff attached to Ticket #33742</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Wed, 17 Aug 2016 02:52:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33742/33742.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33742/33742.diff/1471402345202079</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33742 (Menu Customizer: Adding draft items?) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Wed, 17 Aug 2016 02:52:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33742#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33742#comment:3/1471402321621399</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
You can't add draft items to menus via the customizer. Attached is a patch to restrict the quick search to &lt;code&gt;'post_status' =&amp;gt; true&lt;/code&gt; in the classic menu page.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37680 (PHP Warning: ini_get_all() has been disabled for security reasons) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 17 Aug 2016 02:47:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37680#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37680#comment:1/1471402040638153</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I primarily see two main options:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Silence the PHP Warning &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37680/37680.diff" title="Attachment '37680.diff' in Ticket #37680"&gt;37680.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37680/37680.diff" title="Download"&gt;​&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Check the &lt;code&gt;disable_functions&lt;/code&gt; list (as we do elsewhere for &lt;code&gt;phpinfo()&lt;/code&gt;) &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37680/37680.2.diff" title="Attachment '37680.2.diff' in Ticket #37680"&gt;37680.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37680/37680.2.diff" title="Download"&gt;​&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
That then leaves the question of what to do when disabled, Do we return true anyway as a "We can't determine if it's changeable, so we're just assuming it probably is."? or do we just continue to return false as 4.6 currently does?
&lt;/p&gt;
&lt;p&gt;
I've taken the angle that we should return true in the event we can't be sure, this may result in PHP warnings being emitted from &lt;code&gt;ini_set()&lt;/code&gt;, however we already silence warnings on the &lt;code&gt;ini_set()&lt;/code&gt;'s at least for the memory_limit (which is the only thing this function is used for currently). It's the &lt;code&gt;is_array()&lt;/code&gt; block at the end of the function in both patches that's responsible for this behaviour.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37680.2.diff attached to Ticket #37680</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 17 Aug 2016 02:41:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37680/37680.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37680/37680.2.diff/1471401700604103</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>37680.diff attached to Ticket #37680</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 17 Aug 2016 02:38:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37680/37680.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37680/37680.diff/1471401534828012</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37680 (PHP Warning: ini_get_all() has been disabled for security reasons) created</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 17 Aug 2016 02:38:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37680</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37680/1471401507439049</guid>
      <description>&lt;p&gt;
As reported in the Support Forums, WordPress 4.6 calls &lt;code&gt;ini_get_all()&lt;/code&gt; which may be disabled on some hosts (possibly due to an old PHP 5.3.x security vulnerability).
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://wordpress.org/support/topic/warning-ini_get_all-has-been-disabled-for-security-reasons"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/warning-ini_get_all-has-been-disabled-for-security-reasons&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This can be duplicated by adding &lt;code&gt;disable_functions = ini_get_all&lt;/code&gt; to your &lt;code&gt;php.ini&lt;/code&gt; file.
&lt;/p&gt;
&lt;p&gt;
Looking at our usage of the &lt;code&gt;ini_*&lt;/code&gt; functions in core, we:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;sometimes silence warnings from &lt;code&gt;ini_set()&lt;/code&gt; - usually early in the bootstrap, so I'm assuming from before &lt;code&gt;wp_debug_mode()&lt;/code&gt; is called.
&lt;/li&gt;&lt;li&gt;never silence &lt;code&gt;ini_get()&lt;/code&gt; calls.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The current breakage on the affected hosts would be:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A PHP Warning will be displayed on sites post-upgrade to 4.6.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;wp_raise_memory_limit()&lt;/code&gt; will fail to increase the memory limit, which may result in some admin pages not loading, or image uploads failing to create resized images.
&lt;/li&gt;&lt;li&gt;WSOD - Single-site installs will not increase their memory limit to 40M, multisite will fail to increase to 64M, both of these could cause WSOD if the memory limit was set arbitrarily low and the site was running plugins which use a lot of memory.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
We should fix this to at least not present with a PHP Warning, although I recognise that almost any function could be in the &lt;code&gt;disable_functions&lt;/code&gt; setting, some (such as &lt;code&gt;phpinfo()&lt;/code&gt; and &lt;code&gt;ini_*&lt;/code&gt;) are historically much more likely to be there.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32075" title="#32075: defect (bug): Only set WP_MAX_MEMORY_LIMIT by default when its greater than memory_limit (closed: fixed)"&gt;#32075&lt;/a&gt; for introduction.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #33747 (Reorder and Done need different context?) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Wed, 17 Aug 2016 02:32:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33747#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33747#comment:6/1471401153092228</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
synchronized to
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;&amp;lt;span class="reorder"&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="nx"&gt;_ex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Reorder'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Reorder items in Customizer'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&amp;lt;/span&amp;gt;
&amp;lt;span class="reorder-done"&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="nx"&gt;_ex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Done'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Cancel reordering items in Customizer'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&amp;lt;/span&amp;gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Didn't touch the screen-reader-text part
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>33747.diff attached to Ticket #33747</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Wed, 17 Aug 2016 02:29:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33747/33747.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33747/33747.diff/1471400995318508</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #34343 (Customizer: Make panel headers sticky?) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Wed, 17 Aug 2016 02:29:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34343#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34343#comment:7/1471400991070398</guid>
      <description>&lt;p&gt;
I would probably prefer this approach to moving the back buttons again; the current headers offer nice consistency when navigating around.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33640 (Unable to add menu items to menus on Ubuntu droplet) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Wed, 17 Aug 2016 01:33:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33640#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33640#comment:1/1471397583759759</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Is this still relevant?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32785 (Removing admin submenu items lack consistency) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Wed, 17 Aug 2016 01:31:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32785#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32785#comment:4/1471397485823651</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32700 (Allow media attachments in nav menus) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Wed, 17 Aug 2016 01:27:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32700#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32700#comment:4/1471397230431732</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch applies cleanly and confirming indicated setup works.
&lt;/p&gt;
&lt;p&gt;
You can create test in the tests/phpunit/tests/menu folder.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>IMG_0940.PNG attached to Ticket #36650</title>
      
        <dc:creator>reddalek</dc:creator>

      <pubDate>Wed, 17 Aug 2016 01:26:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36650/IMG_0940.PNG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36650/IMG_0940.PNG/1471397218599076</guid>
      <description>&lt;p&gt;
Bug on Chrome on iOS
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36650 (inline link editor won't disappear in Chrome and obscures text) updated</title>
      
        <dc:creator>reddalek</dc:creator>

      <pubDate>Wed, 17 Aug 2016 01:26:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36650#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36650#comment:7/1471397188129836</guid>
      <description>&lt;p&gt;
Thanks for taking a look.
&lt;/p&gt;
&lt;p&gt;
I can still reproduce (in Chrome, latest version, Windows PC) after clearing my cache, going incognito or using another computer. It's a little fiddly, but I can even reproduce on Chrome on iOS (screenshot attached). No errors or warnings in the console.
&lt;/p&gt;
&lt;p&gt;
I can't reproduce on Edge either.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36716 (Copy and paste removes extra spaces) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 17 Aug 2016 01:21:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36716#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36716#comment:1/1471396872075360</guid>
      <description>worksforme: &lt;p&gt;
Looks like upstream bug but seems to be working properly now. Tested in Chrome and Firefox. Perhaps it was fixed with the TinyMCE update.
&lt;/p&gt;
&lt;p&gt;
Feel free to reopen if this still happens in 4.6.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Tickets #36683,​36739 batch updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 17 Aug 2016 01:15:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=36683%2C36739</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=36683%2C36739/1471396507277062</guid>
      <description>duplicate: &lt;p&gt;
Hi @myhelpblog, looks like a duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36683" title="#36683: defect (bug): New Links with Text are not being inserted in visual editor for 4.5 ... (new)"&gt;#36683&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #32088 (Bug in get_admin_page_parent( $parent = '' ) when only having 1 ...) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Wed, 17 Aug 2016 01:13:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32088#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32088#comment:3/1471396406648909</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the ticket!
&lt;/p&gt;
&lt;p&gt;
Given your understanding of the issue, you're probably the best person to take a shot at a patch. Give it a shot!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #36683,​37360 batch updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 17 Aug 2016 01:11:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=36683%2C37360</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=36683%2C37360/1471396309454423</guid>
      <description>duplicate: &lt;p&gt;
Thanks @vincentgustav for the bug report. I can reproduce it too, but looks like it is a duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36683" title="#36683: defect (bug): New Links with Text are not being inserted in visual editor for 4.5 ... (new)"&gt;#36683&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #37599 (Editor (WP_Editor or TinyMCE) page template body class) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 17 Aug 2016 01:06:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37599#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37599#comment:1/1471396001135744</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Assuming that class will have to change "dynamically" when selecting another template from the drop-down, the same way post type classes work. This is fairly easy to do from a plugin or theme, but maybe it should happen by default.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31391 (Make the list of registered nav menus filterable) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Wed, 17 Aug 2016 01:05:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31391#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31391#comment:4/1471395900793997</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The patch still applies but we need some inline docs - &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/inline-documentation-standards/php/#4-hooks-actions-and-filter"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/handbook/best-practices/inline-documentation-standards/php/#4-hooks-actions-and-filter&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I would implement the filter everywhere it needs to go so the patch represents the entire change set and some unit tests couldn't either.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #36683,​37676 batch updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 17 Aug 2016 00:57:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=36683%2C37676</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=36683%2C37676/1471395426543359</guid>
      <description>duplicate: &lt;p&gt;
Looks like a duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36683" title="#36683: defect (bug): New Links with Text are not being inserted in visual editor for 4.5 ... (new)"&gt;#36683&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #36650 (inline link editor won't disappear in Chrome and obscures text) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 17 Aug 2016 00:45:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36650#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36650#comment:6/1471394736742520</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36650#comment:5" title="Comment 5"&gt;reddalek&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I am able to reproduce this bug on Wordpress 4.6 and Chrome on a clean install without any plugins activated.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This works properly here in latest Chrome, Firefox, IE and Edge.
&lt;/p&gt;
&lt;p&gt;
Could you empty your browser's cache and try again. If still able to reproduce, could you look for JS errors in the browser console and paste them here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37275 (Facilitate creating controls that manipulate settings with object values) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 17 Aug 2016 00:03:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37275#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37275#comment:2/1471392186018460</guid>
      <description>&lt;p&gt;
Instead of &lt;code&gt;data-customize-setting-property-link&lt;/code&gt; I think it would be better if the existing &lt;code&gt;data-customize-setting-link&lt;/code&gt; supported multidimensional paths. For example, let's say a control is associated with a setting which represents a &lt;code&gt;WP_Post&lt;/code&gt; object with a setting ID. Then a textarea control could be added with the field element having &lt;code&gt;data-customize-setting-link="default[post_content]"&lt;/code&gt; to link it to the property of the &lt;code&gt;default&lt;/code&gt; setting, which here would be something like &lt;code&gt;post[page][123]&lt;/code&gt;. This is better over the existing implementation in Customize Posts for &lt;code&gt;data-customize-setting-property-link&lt;/code&gt; in that it will continue to allow us to associate a control with multiple settings, as opposed to introducing a limitation whereby only one setting's properties can be synced with.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37656 (Improve plugin bootstrapping processes) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 16 Aug 2016 23:56:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37656#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37656#comment:11/1471391806558211</guid>
      <description>&lt;p&gt;
@swissspidy: Good point. Searching through the codebase, I found an example &lt;code&gt;"auth_post_{$post_type}_meta_{$meta_key}"&lt;/code&gt; (just introduced in 4.6), so I guess it's fine. :) Also I think having the plugin basename not at the end of the hook name makes sense semantically in this case.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37269 (Introduce removed event for wp.customize.Values collection) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 16 Aug 2016 23:20:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37269#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37269#comment:2/1471389615355581</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36697 (Combining the HTTP requests for obtaining the available nav menu items ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 16 Aug 2016 23:19:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36697#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36697#comment:4/1471389567796175</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36678 (Shift-click in Customizer when collapsed does nothing) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 16 Aug 2016 23:19:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36678#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36678#comment:3/1471389544464799</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36582 (Export main query from Customizer preview) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 16 Aug 2016 23:18:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36582#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36582#comment:8/1471389511579711</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34747 (Provide more flexibility for "You are customizing" text) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 16 Aug 2016 23:17:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34747#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34747#comment:12/1471389464675663</guid>
      <description>&lt;p&gt;
The text is proposed to be removed entirely in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/35186" title="#35186: enhancement: Put the Customizer &amp;#34;back&amp;#34; button next to the &amp;#34;Close&amp;#34; button (new)"&gt;#35186&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31436 (Handle conflicts in concurrent Customizer sessions) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 16 Aug 2016 23:14:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31436#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31436#comment:18/1471389277286908</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Work is being resumed here: &lt;a class="ext-link" href="https://github.com/xwp/wp-customize-concurrency/pull/4"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wp-customize-concurrency/pull/4&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Feature plugin will be released and then after community review it will be prepared for a core patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29932 (There is no error reporting in the Customizer (for upload failures)) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 16 Aug 2016 23:12:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29932#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29932#comment:13/1471389156283027</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37006 (Improve performance of widgets in the customizer (at scale)) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 16 Aug 2016 23:09:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37006#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37006#comment:5/1471388966474463</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36633 (Customizer Doesn't Save Defaults in The Database for a Theme) closed</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 16 Aug 2016 23:08:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36633#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36633#comment:7/1471388906704903</guid>
      <description>maybelater</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #35687 (Customizer active_callback) closed</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 16 Aug 2016 23:06:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35687#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35687#comment:4/1471388760760585</guid>
      <description>maybelater: &lt;p&gt;
Closing due to inactivity. May be duplicated by &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37653" title="#37653: defect (bug): customizer sections with 'active_callback' set to 'is_front_page' ... (new)"&gt;#37653&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #35451 (Customizer: aggregated multidimensional settings overwrite changes ...) closed</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 16 Aug 2016 23:02:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35451#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35451#comment:2/1471388552760411</guid>
      <description>wontfix: &lt;p&gt;
Closing due to inactivity and an alternative solution which I believe to be better and renders the issue invalid.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #34880 (Hidden state for Site Title and Tagline) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 16 Aug 2016 23:01:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34880#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34880#comment:10/1471388489086385</guid>
      <description>&lt;p&gt;
Related: Example code to make the Site Title and Tagline controls contextual based on whether the checkbox is checked: &lt;a class="ext-link" href="https://make.xwp.co/2016/07/24/dependently-contextual-customizer-controls/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.xwp.co/2016/07/24/dependently-contextual-customizer-controls/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35186 (Put the Customizer "back" button next to the "Close" button) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 16 Aug 2016 22:59:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35186#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35186#comment:17/1471388388342710</guid>
      <description>&lt;p&gt;
Perhaps duplicated by &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34343" title="#34343: enhancement: Customizer: Make panel headers sticky? (closed: fixed)"&gt;#34343&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34343 (Customizer: Make panel headers sticky?) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 16 Aug 2016 22:59:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34343#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34343#comment:6/1471388373508475</guid>
      <description>&lt;p&gt;
This may be a duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/35186" title="#35186: enhancement: Put the Customizer &amp;#34;back&amp;#34; button next to the &amp;#34;Close&amp;#34; button (new)"&gt;#35186&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34343 (Customizer: Make panel headers sticky?) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 16 Aug 2016 22:57:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34343#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34343#comment:5/1471388278825862</guid>
      <description>&lt;p&gt;
Closely related to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34391" title="#34391: defect (bug): Harden panel/section UI code by removing contents from being logically ... (closed: fixed)"&gt;#34391&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33139 (Customizer on mobile: 'Save &amp; Publish' button may overflow when translated.) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 16 Aug 2016 22:56:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33139#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33139#comment:3/1471388178166543</guid>
      <description>&lt;p&gt;
I think we just simplify this from “Save &amp;amp; Publish” (or “Save &amp;amp; Activate”) to just “Save”.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30529 (Customizer: Settings with type 'option' not saved before refresh) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 16 Aug 2016 22:52:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30529#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30529#comment:4/1471387963760490</guid>
      <description>&lt;p&gt;
@jaspermdegroot wow, 20 months files by fast. Is this still an issue?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30084 (Theme Customizer seems to bypass all other hooks) closed</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 16 Aug 2016 22:48:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30084#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30084#comment:5/1471387733694357</guid>
      <description>invalid: &lt;p&gt;
Closing due to inactivity.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #24528 (Customizer checkbox with refresh option gives inconsistent values) closed</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 16 Aug 2016 22:47:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24528#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24528#comment:4/1471387656597149</guid>
      <description>invalid: &lt;p&gt;
It seems the answer is sanitizing as a boolean. Otherwise, closing this due to inactivity. It can be re-opened if there is still a bug here.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #22037 (Customizer: Live preview fetches page but does not display (show error ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 16 Aug 2016 22:44:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22037#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22037#comment:23/1471387490811067</guid>
      <description>&lt;p&gt;
This is another place where a notification area would be helpful, to add a message when the preview fails to send a &lt;code&gt;ready&lt;/code&gt; message to the controls. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35210" title="#35210: enhancement: Add notification area to Customizer (closed: fixed)"&gt;#35210&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22037 (Customizer: Live preview fetches page but does not display (show error ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 16 Aug 2016 22:42:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22037#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22037#comment:22/1471387369212173</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30937 (Add Customizer state persistence in changesets (formerly “transactions”)) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 16 Aug 2016 22:39:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30937#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30937#comment:50/1471387166311208</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Putting back on radar.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35210 (Add notification area to Customizer) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 16 Aug 2016 22:38:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35210#comment:67</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35210#comment:67/1471387139723914</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20907 (About screen text assumes user has update privileges) updated</title>
      
        <dc:creator>voldemortensen</dc:creator>

      <pubDate>Tue, 16 Aug 2016 20:53:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20907#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20907#comment:7/1471380831108465</guid>
      <description>&lt;p&gt;
After taking 2 seconds longer to think about this, part of the problem is that this string changes with every release when the about page is redone. Since the about page is manually designed every release, this needs to be thought about every time. There's not a one time fix for this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20907 (About screen text assumes user has update privileges) updated</title>
      
        <dc:creator>voldemortensen</dc:creator>

      <pubDate>Tue, 16 Aug 2016 20:51:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20907#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20907#comment:6/1471380707632401</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Just confirmed on 4.6 that issue still exists.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>stuck editor.PNG attached to Ticket #36650</title>
      
        <dc:creator>reddalek</dc:creator>

      <pubDate>Tue, 16 Aug 2016 20:42:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36650/stuck%20editor.PNG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36650/stuck%20editor.PNG/1471380143892153</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36650 (inline link editor won't disappear in Chrome and obscures text) reopened</title>
      
        <dc:creator>reddalek</dc:creator>

      <pubDate>Tue, 16 Aug 2016 20:42:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36650#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36650#comment:5/1471380121044396</guid>
      <description>&lt;p&gt;
I am able to reproduce this bug on Wordpress 4.6 and Chrome on a clean install without any plugins activated.
&lt;/p&gt;
&lt;p&gt;
Steps to reproduce:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Highlight text in the text editor
&lt;/li&gt;&lt;li&gt;Click to insert a link
&lt;/li&gt;&lt;li&gt;Enter a URL and then click on the editing gear icon
&lt;/li&gt;&lt;li&gt;Click 'Update'
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
The inline link editor remains stuck on the screen.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Changeset [38271]: The 4.6 branch is now 4.6.1-alpha.</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 16 Aug 2016 20:38:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38271</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38271/1471379927241747</guid>
      <description>&lt;p&gt;
The 4.6 branch is now 4.6.1-alpha.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Tue, 16 Aug 2016 20:35:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:9/1471379758933643</guid>
      <description>&lt;p&gt;
@celloexpressions
&lt;/p&gt;
&lt;p&gt;
The feature filter will be really useful.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38270]: Tag 4.6</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 16 Aug 2016 20:35:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38270</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38270/1471379738854660</guid>
      <description>&lt;p&gt;
Tag 4.6
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37648 (Bind label to Plugins &gt; Install search input field) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Tue, 16 Aug 2016 20:33:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37648#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37648#comment:3/1471379594931412</guid>
      <description>&lt;p&gt;
Because this field is labeled implicitly, adding the for and id attributes doesn't accomplish anything. However, if the label were changed so it did *not* wrap the input, then the for and id attributes were added, this would improve accessibility for users of voice input software.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>mrahmadawais</dc:creator>

      <pubDate>Tue, 16 Aug 2016 20:19:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:8/1471378794386040</guid>
      <description>&lt;p&gt;
@celloexpressions This is incredible! Customizer FTW!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Milestone 4.6 completed</title>
      

      <pubDate>Tue, 16 Aug 2016 20:15:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/milestone/4.6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/milestone/4.6/1471378505000000</guid>
      <description></description>
      <category>milestone</category>
    </item><item>
      <title>Ticket #37679 (Actions that remove and add themselves again, break other actions) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 16 Aug 2016 19:31:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37679#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37679#comment:3/1471375914036050</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@noplanman The issue is way older than 5 years though :-) It's currently slated for the 4.7 milestone, so chances are high it might finally get in.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #17817,​37679 batch updated</title>
      
        <dc:creator>noplanman</dc:creator>

      <pubDate>Tue, 16 Aug 2016 19:16:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=17817%2C37679</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=17817%2C37679/1471374970208133</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17817" title="#17817: defect (bug): do_action/apply_filters/etc. recursion on same filter kills underlying call (closed: fixed)"&gt;#17817&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Didn't find that one, thanks for linking it.
&lt;/p&gt;
&lt;p&gt;
Really hope this gets fixed soon, as it's been an issue since 2011.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #37679 (Actions that remove and add themselves again, break other actions) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 16 Aug 2016 19:10:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37679#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37679#comment:1/1471374603831096</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17817" title="#17817: defect (bug): do_action/apply_filters/etc. recursion on same filter kills underlying call (closed: fixed)"&gt;#17817&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37679 (Actions that remove and add themselves again, break other actions) created</title>
      
        <dc:creator>noplanman</dc:creator>

      <pubDate>Tue, 16 Aug 2016 19:08:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37679</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37679/1471374486648864</guid>
      <description>&lt;p&gt;
Scenario:
I have 2 actions for save_post with priorities 11 and 12, let's call them sp11 and sp12.
&lt;/p&gt;
&lt;p&gt;
sp11 gets called before sp12, which is correct.
&lt;/p&gt;
&lt;p&gt;
Now, if sp11 removes itself via &lt;code&gt;remove_action&lt;/code&gt; and then adds itself again via &lt;code&gt;add_action&lt;/code&gt;, sp12 is never called, BUT instead, sp11 is called again, so twice in total!
&lt;/p&gt;
&lt;p&gt;
I've dug into the code a bit and found the problem:
This happens because the &lt;code&gt;$wp_filters['save_post']&lt;/code&gt; array gets reordered and the call list isn't correct any more.
&lt;/p&gt;
&lt;p&gt;
The problem happens in the last loop of do_action &lt;a href="https://core.trac.wordpress.org/browser/tags/4.5.3/src/wp-includes/plugin.php#L523"&gt;here&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Because the loop is using pointers, when an item is removed and re-added, the pointer is wrong if the items have changed their original position.
&lt;/p&gt;
&lt;p&gt;
For my example above, when sp11 gets removed and added again, it gets added to the end of the array, thus skipping over sp12 and calling sp11 again.
&lt;/p&gt;
&lt;p&gt;
To help visualise what happens (simplified):
&lt;/p&gt;
&lt;pre class="wiki"&gt;// Loop starts, current (first) element.
$wp_filters['save_post'] =&amp;gt; [
  11 =&amp;gt; 'sp11', //pointer here
  12 =&amp;gt; 'sp12',
];
&lt;/pre&gt;&lt;p&gt;
-&amp;gt; execute sp11
&lt;/p&gt;
&lt;pre class="wiki"&gt;// After remove_action and add_action in sp11.
$wp_filters['save_post'] =&amp;gt; [
  12 =&amp;gt; 'sp12', //pointer here
  11 =&amp;gt; 'sp11',
];
&lt;/pre&gt;&lt;pre class="wiki"&gt;// Next element.
$wp_filters['save_post'] =&amp;gt; [
  12 =&amp;gt; 'sp12',
  11 =&amp;gt; 'sp11', //pointer here
];
&lt;/pre&gt;&lt;p&gt;
-&amp;gt; execute sp11
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Changeset [38269]: WordPress 4.6.</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 16 Aug 2016 18:18:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38269</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38269/1471371529982103</guid>
      <description>&lt;p&gt;
WordPress 4.6.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37678 (Add an action hook for plugins to do database upgrades on) created</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Tue, 16 Aug 2016 18:10:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37678</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37678/1471371059505949</guid>
      <description>&lt;p&gt;
Currently, plugins that have custom database tables usually hook into &lt;code&gt;admin_init&lt;/code&gt; and pray for rain when comes to their database alterations. This pollutes the &lt;code&gt;admin_init&lt;/code&gt; hook namespace quite a bit, particularly with database actions that are almost always necessary in order for plugins to actually work correctly.
&lt;/p&gt;
&lt;p&gt;
It would be nice if WordPress core had a dedicated action hook meant for executing database alterations &amp;amp; upgrades, no different than there being one for &lt;code&gt;plugins_loaded&lt;/code&gt;, &lt;code&gt;template_redirect&lt;/code&gt;, et all...
&lt;/p&gt;
&lt;p&gt;
I'm conflicted on where exactly this hook should be. I'm 95% sure it belongs somewhere after &lt;code&gt;admin_init&lt;/code&gt; so that admin area plugins have a chance to hook everything in. I'm also 95% certain I don't want this as part of the plugin activation sequence, because it's becoming more common to deploy plugins via WP CLI, version control, or some other deployment process, and activation hooks aren't usually ran that way.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37246 (4.6 About Page) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 16 Aug 2016 18:00:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37246#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37246#comment:45/1471370409979304</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38268" title="About Page: Add release video and move images to CDN.
Merge of ..."&gt;38268&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
About Page: Add release video and move images to CDN.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38267" title="About Page: Add release video and move images to CDN.
Props ..."&gt;[38267]&lt;/a&gt; to the 4.6 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props JerrySarcastic, rosso99, petya, hugobaeta, RoseAppleMedia.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37246" title="#37246: task (blessed): 4.6 About Page (closed: fixed)"&gt;#37246&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38268]: About Page: Add release video and move images to CDN.  Merge of ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 16 Aug 2016 18:00:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38268</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38268/1471370408743776</guid>
      <description>&lt;p&gt;
About Page: Add release video and move images to CDN.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38267" title="About Page: Add release video and move images to CDN.
Props ..."&gt;[38267]&lt;/a&gt; to the 4.6 branch.
&lt;/p&gt;
&lt;p&gt;
Props JerrySarcastic, rosso99, petya, hugobaeta, RoseAppleMedia.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37246" title="#37246: task (blessed): 4.6 About Page (closed: fixed)"&gt;#37246&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37246 (4.6 About Page) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 16 Aug 2016 17:57:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37246#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37246#comment:44/1471370227413416</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38267" title="About Page: Add release video and move images to CDN.
Props ..."&gt;38267&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
About Page: Add release video and move images to CDN.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props jerrysarcastic, rosso99, petya, hugobaeta, jerrysarcastic.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37246" title="#37246: task (blessed): 4.6 About Page (closed: fixed)"&gt;#37246&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38267]: About Page: Add release video and move images to CDN.  Props ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 16 Aug 2016 17:57:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38267</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38267/1471370226928225</guid>
      <description>&lt;p&gt;
About Page: Add release video and move images to CDN.
&lt;/p&gt;
&lt;p&gt;
Props jerrysarcastic, rosso99, petya, hugobaeta, jerrysarcastic.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37246" title="#37246: task (blessed): 4.6 About Page (closed: fixed)"&gt;#37246&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #20491 (Introduce some JavaScript i18n functions) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 16 Aug 2016 17:13:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20491#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20491#comment:27/1471367587970096</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-i18n by swissspidy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-i18n/p1471367586000045"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37677 (Introduce WP_Plugin class analogous to WP_Theme) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Tue, 16 Aug 2016 17:09:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37677#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37677#comment:2/1471367348925258</guid>
      <description>&lt;p&gt;
Having an equivalent &lt;code&gt;WP_Plugin&lt;/code&gt; class to &lt;code&gt;WP_Theme&lt;/code&gt; would be great. Personally, having written code to pull header data from both plugins/themes, it would allow for more reusable code.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37648 (Bind label to Plugins &gt; Install search input field) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 16 Aug 2016 16:10:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37648#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37648#comment:2/1471363858867433</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37482 (Copy/paste shortcode view containing HTML tags is broken) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 16 Aug 2016 16:10:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37482#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37482#comment:9/1471363856499018</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by ocean90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1471363854004225"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37665 (Font Natively: Google maps can change the active font) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 16 Aug 2016 16:09:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37665#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37665#comment:6/1471363782273043</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by ocean90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1471363779004222"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37677 (Introduce WP_Plugin class analogous to WP_Theme) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 16 Aug 2016 16:09:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37677#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37677#comment:1/1471363754661683</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37656 (Improve plugin bootstrapping processes) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 16 Aug 2016 16:04:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37656#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37656#comment:10/1471363462014759</guid>
      <description>&lt;p&gt;
@flixos90 I don't know if there are any hooks in core using the &lt;code&gt;'abc_' . $foo . '_xyz'&lt;/code&gt; notation. If there aren't, &lt;code&gt;'abc_xyz_' . $foo&lt;/code&gt; should be preferred.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37672 (wpautop adds a closing p-tag without an opening p-tag) updated</title>
      
        <dc:creator>TBarregren</dc:creator>

      <pubDate>Tue, 16 Aug 2016 15:52:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37672#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37672#comment:1/1471362727410750</guid>
      <description>&lt;p&gt;
If it is to any help, this is my function.php code to solve this (and related) problem(s).
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'the_content'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$html&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nv"&gt;$html_pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;$last_html_pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$html&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;$opening_pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;$text_pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// See http://w3c.github.io/html/single-page.html#elementdef-p
&lt;/span&gt;  &lt;span class="c1"&gt;// and http://w3c.github.io/html/single-page.html#kinds-of-content-phrasing-content
&lt;/span&gt;  &lt;span class="nv"&gt;$self_closing_tags_allowed_in_p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;explode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;' '&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'area br embed img input link wbr'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nv"&gt;$not_self_closing_tags_allowed_in_p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;explode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;' '&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'a abbr audio b bdi bdo button canvas cite code data datalist del dfn em i iframe ins kbd label map mark math meter noscript object output picture progress q ruby s samp script select small span strong sub sup svg template textarea time u var video text'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;$html_pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;strpos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$html_pos&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$html_pos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;!--'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nv"&gt;$html_pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;strpos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'--&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$html_pos&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$html_pos&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Too messy, don't do anything further.
&lt;/span&gt;      &lt;span class="nv"&gt;$html_pos&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$opening_pos&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$html_pos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;pre'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$html_pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;strpos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;/pre&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$html_pos&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$html_pos&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Too messy, don't do anything further.
&lt;/span&gt;        &lt;span class="nv"&gt;$html_pos&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;strtolower&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$html_pos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;p'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$opening_pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$html_pos&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;$html_pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;strpos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$html_pos&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$html_pos&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Too messy, don't do anything further.
&lt;/span&gt;        &lt;span class="nv"&gt;$text_pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="nv"&gt;$html_pos&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;strtolower&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$html_pos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;/p&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// See https://core.trac.wordpress.org/ticket/37672
&lt;/span&gt;        &lt;span class="nv"&gt;$html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$html_pos&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$html_pos&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$last_html_pos&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$html_pos&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;strtolower&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$html_pos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;/p&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$text_pos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$html_pos&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;$text_pos&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nv"&gt;$html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$opening_pos&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$html_pos&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="nv"&gt;$html_pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$opening_pos&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="nv"&gt;$last_html_pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$html&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nv"&gt;$html_pos&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nv"&gt;$opening_pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$tag_end_pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$html_pos&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$html&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$tag_end_pos&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="s1"&gt;'&amp;gt;'&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;ctype_space&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$html&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$tag_end_pos&lt;/span&gt;&lt;span class="p"&gt;}))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="nv"&gt;$tag_end_pos&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nv"&gt;$tag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;strtolower&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$html_pos&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$tag_end_pos&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;$html_pos&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;in_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$tag&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$self_closing_tags_allowed_in_p&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nv"&gt;$html_pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;strpos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$tag_end_pos&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$html_pos&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Too messy, don't do anything further.
&lt;/span&gt;          &lt;span class="nv"&gt;$html_pos&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;in_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$tag&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$not_self_closing_tags_allowed_in_p&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nv"&gt;$html_pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;strpos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;/&lt;/span&gt;&lt;span class="si"&gt;$tag&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$tag_end_pos&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$html_pos&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Too messy, don't do anything further.
&lt;/span&gt;          &lt;span class="nv"&gt;$html_pos&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nv"&gt;$tag_end_pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;strpos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;/&lt;/span&gt;&lt;span class="si"&gt;$tag&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$tag_end_pos&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$tag_end_pos&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Too messy, don't do anything further.
&lt;/span&gt;          &lt;span class="nv"&gt;$tag_end_pos&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nb"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;/&lt;/span&gt;&lt;span class="si"&gt;$tag&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="nv"&gt;$html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$html_pos&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;/p&amp;gt;'&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$html_pos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$tag_end_pos&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;$html_pos&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;p&amp;gt;'&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$tag_end_pos&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$opening_pos&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$html&lt;/span&gt; &lt;span class="o"&gt;.=&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;/p&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37656 (Improve plugin bootstrapping processes) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 16 Aug 2016 15:51:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37656#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37656#comment:9/1471362680024490</guid>
      <description>&lt;p&gt;
Created a new ticket for a "simple" &lt;code&gt;WP_Plugin&lt;/code&gt; class, see &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37677" title="#37677: enhancement: Introduce WP_Plugin class analogous to WP_Theme (new)"&gt;#37677&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37677 (Introduce WP_Plugin class analogous to WP_Theme) created</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 16 Aug 2016 15:50:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37677</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37677/1471362659904179</guid>
      <description>&lt;p&gt;
Background:
&lt;/p&gt;
&lt;p&gt;
This ticket emerged from &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37656" title="#37656: enhancement: Improve plugin bootstrapping processes (new)"&gt;#37656&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
A &lt;code&gt;WP_Plugin&lt;/code&gt; class has been previously mentioned in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22256" title="#22256: enhancement: Hook namespacing (closed: wontfix)"&gt;#22256&lt;/a&gt; and brought up with a patch in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21883" title="#21883: enhancement: WP_Plugin action/filter concept (closed: maybelater)"&gt;#21883&lt;/a&gt;, but only in regards of hooks and filters (i.e. &lt;code&gt;$GLOBALS['wp_global_hooks'] = new WP_Plugin();&lt;/code&gt;. With &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17817" title="#17817: defect (bug): do_action/apply_filters/etc. recursion on same filter kills underlying call (closed: fixed)"&gt;#17817&lt;/a&gt; in contention, that approach would need some more tweaking. Also, the class name isn't ideal too because of &lt;code&gt;WP_Theme&lt;/code&gt;. Using &lt;code&gt;WP_Plugin&lt;/code&gt; for hooks but themes can use hooks too? Confusing.
&lt;/p&gt;
&lt;p&gt;
Proposal:
&lt;/p&gt;
&lt;p&gt;
Introducing a new &lt;code&gt;WP_Plugin&lt;/code&gt; class that does similar things as the already existing &lt;code&gt;WP_Theme&lt;/code&gt; class but for plugins.
&lt;/p&gt;
&lt;p&gt;
This would mainly mean handling caching, retrieving data from plugin file headers and adding any needed helper methods. As a result, we're less prone to errors since we can use 1 reliable API instead of &lt;code&gt;get_plugin_data()&lt;/code&gt;, &lt;code&gt;get_plugins()&lt;/code&gt;, etc.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37025 (Improve the "disaster recovery" mode) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 16 Aug 2016 15:50:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37025#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37025#comment:13/1471362640734056</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by sergey. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1471362636004185"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35955 (Improvements for Menus) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Tue, 16 Aug 2016 15:14:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35955#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35955#comment:1/1471360498157005</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the ticket!
&lt;/p&gt;
&lt;p&gt;
It would be a good start to submit a patch or maybe some screenshots of what you have in mind.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10752 (Uploading new media to existing posts/pages backdates file location) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 16 Aug 2016 14:42:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10752#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10752#comment:9/1471358561862253</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by sergey. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1471358560004172"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>insert-from-url.png attached to Ticket #32417</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Tue, 16 Aug 2016 14:38:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32417/insert-from-url.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32417/insert-from-url.png/1471358309670217</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Tue, 16 Aug 2016 14:38:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:69</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:69/1471358289479704</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/32417#comment:68" title="Comment 68"&gt;georgestephanis&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Not to throw another wrench in the works, but there's likely to be a number of folks who want to embed an image or media that isn't in their media library -- by url.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The media library already handles that scenario. See attached image.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>32082.patch attached to Ticket #32082</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 16 Aug 2016 14:13:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32082/32082.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32082/32082.patch/1471356838360789</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37656 (Improve plugin bootstrapping processes) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 16 Aug 2016 14:11:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37656#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37656#comment:8/1471356663749257</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37656/37656.diff" title="Attachment '37656.diff' in Ticket #37656"&gt;37656.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37656/37656.diff" title="Download"&gt;​&lt;/a&gt; I implemented my proposal from above for activation hooks, as a reference of what it could be like.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37656.diff attached to Ticket #37656</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 16 Aug 2016 14:09:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37656/37656.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37656/37656.diff/1471356578192015</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37656 (Improve plugin bootstrapping processes) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 16 Aug 2016 13:57:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37656#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37656#comment:7/1471355853658824</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37656#comment:3" title="Comment 3"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Starting small has probably the highest chance of getting this into core, i.e. a &lt;code&gt;WP_Plugin&lt;/code&gt; class analogous to &lt;code&gt;WP_Theme&lt;/code&gt;. Forgetting &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21883" title="#21883: enhancement: WP_Plugin action/filter concept (closed: maybelater)"&gt;#21883&lt;/a&gt; and &lt;code&gt;register_plugin()&lt;/code&gt; in the beginning.
&lt;/p&gt;
&lt;p&gt;
While &lt;code&gt;register_plugin()&lt;/code&gt; and an additional interface sounds interesting, I do not think anyone would use it because of backward compatibility with older WordPress versions. Who wants to basically maintain two versions of their plugin?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Tbh I would like this ticket to go more into the direction of the latter. I agree that &lt;code&gt;WP_Plugin&lt;/code&gt; shouldn't be used as the class name for this (because like you said it should rather have parity with &lt;code&gt;WP_Theme&lt;/code&gt;), however I think there are two different tasks here which are not really related to each other. &lt;code&gt;WP_Plugin&lt;/code&gt; as we talked about it now should be handled in a separate ticket.
&lt;/p&gt;
&lt;p&gt;
About this ticket, maybe we can find a way to improve plugin setup processes in a way like @jdgrimes mentioned. I actually like the idea of handling network-wide activation in Core. Maybe it could be like the following:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;if plugin is activated network-wide, ...
&lt;ul&gt;&lt;li&gt;detect whether the plugin has hooked into a (new) action &lt;code&gt;activate_{$plugin_basename}_for_site&lt;/code&gt;; if it has, automatically iterate through the sites in the network (only if not &lt;code&gt;wp_is_large_network( 'sites' )&lt;/code&gt;) and run &lt;code&gt;activate_{$plugin_basename}_for_site&lt;/code&gt; on each site
&lt;/li&gt;&lt;li&gt;in addition, run another (new) action &lt;code&gt;activate_{$plugin_basename}_for_network&lt;/code&gt; which the plugin developer can hook into to perform network-wide activation stuff (probably a minor number of plugins needs that, only those that actual deal with multisite stuff)
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;if the plugin is activated on a single site, ...
&lt;ul&gt;&lt;li&gt;only run the &lt;code&gt;activate_{$plugin_basename}_for_site&lt;/code&gt; hook
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The existing &lt;code&gt;activate_{$plugin_basename}&lt;/code&gt; hook would stay completely unaffected by this. It would still run as before. The new ways would become the new best practice though.
&lt;/p&gt;
&lt;p&gt;
Deactivation could work similarly. For uninstallation we would need to think a bit more on what's the best way to implement a similar solution in Core or whether it should remain as is for now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>georgestephanis</dc:creator>

      <pubDate>Tue, 16 Aug 2016 13:52:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:68</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:68/1471355523384425</guid>
      <description>&lt;p&gt;
Not to throw another wrench in the works, but there's likely to be a number of folks who want to embed an image or media that isn't in their media library -- by url.
&lt;/p&gt;
&lt;p&gt;
The Jetpack image widget supports that, but I'd certainly love to see a better ui for it -- maybe one that prepopulates all the fields by a selected media library item, and then the user can just tweak text fields if they like to customize or change urls?  Unsure.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/Automattic/jetpack/blob/master/modules/widgets/image-widget.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/Automattic/jetpack/blob/master/modules/widgets/image-widget.php&lt;/a&gt;
&lt;a class="ext-link" href="https://jetpack.com/support/extra-sidebar-widgets/image-widget/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://jetpack.com/support/extra-sidebar-widgets/image-widget/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I just have this nagging fear that something as 'simple' as an Image Widget will become so overly complicated that it won't be mergeable.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37656 (Improve plugin bootstrapping processes) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Tue, 16 Aug 2016 13:29:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37656#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37656#comment:6/1471354155315394</guid>
      <description>&lt;p&gt;
Sorry for posting yet another comment, but I wanted to say that all of the plugin bootstrap doesn't need to go into a single class. WordPress can help plugins un/install/update themselves better, etc., without a &lt;code&gt;WP_Plugin&lt;/code&gt; class, by adding other helper classes that plugins can use to aid them in performing these and other tasks. Really, each part of this bootstrap (if it ever materializes in core) should be its own class. It shouldn't all be stuffed into a giant monster. But each part could be integrated with a &lt;code&gt;WP_Plugin&lt;/code&gt; class or the like as it evolves. In other words such a bootstrap should be composed of multiple separate APIs.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37656 (Improve plugin bootstrapping processes) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Tue, 16 Aug 2016 13:24:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37656#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37656#comment:5/1471353885556957</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37656#comment:3" title="Comment 3"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
While &lt;code&gt;register_plugin()&lt;/code&gt; and an additional interface sounds interesting, I do not think anyone would use it because of backward compatibility with older WordPress versions. Who wants to basically maintain two versions of their plugin?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sometimes this kind argument makes sense for a feature, and sometimes it doesn't. Just because plugins might not be able to take advantage of a feature right away doesn't mean that it isn't core material. There was a time when plugins couldn't use the action/filter API because of back-compat. :-) Same goes for every single other thing introduced to core. However, I do see your point that asking a plugin to implement an interface means that they would have to maintain two different classes, since the interface is required, but in older versions of WordPress wouldn't exist. It isn't a feature that can be wrapped in an &lt;code&gt;if&lt;/code&gt; version check, it's all or nothing.
&lt;/p&gt;
&lt;p&gt;
Or is it?
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Foo_Plugin&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;interface_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'WP_Plugin_Interface'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Foo_Plugin_With_Interface&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;WP_Plugin_Interface&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
   &lt;span class="nx"&gt;register_plugin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;__FILE__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Foo_Plugin_With_Interface'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
That said, I agree that this has to be done slowly and by increments.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37656 (Improve plugin bootstrapping processes) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Tue, 16 Aug 2016 13:16:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37656#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37656#comment:4/1471353401330802</guid>
      <description>&lt;p&gt;
FWIW, &lt;a class="ext-link" href="https://github.com/WordPoints/wordpoints/blob/4cad924f90ab9d9e6a7376e4b0a5d61ac7d4696b/src/includes/class-un-installer-base.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;here is what I use in WordPoints&lt;/a&gt; to perform install, uninstall, and update. Takes care of multisite, network vs per-site activation, etc. (It really needs to be reworked into separate classes for each of these actions [uninstall/install/update].) But I think really adding anything like this would be for a separate ticket. As @swissspidy said, this has to start small if it is going to become part of core.
&lt;/p&gt;
&lt;p&gt;
As far as making &lt;code&gt;WP_Plugin&lt;/code&gt; hold the plugin header data as &lt;code&gt;WP_Theme&lt;/code&gt; does for themes, I have a proposal to make in regard to that. What if instead of having to read the file to parse the plugin headers, the header data was passed directly to a function?
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;WP_Plugins&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="na"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
   &lt;span class="s1"&gt;'
   Plugin Name: Foo
   ...
   '&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The cool thing is that this will still work with the file parsing, since &lt;code&gt;get_file_data()&lt;/code&gt; doesn't specifically look for this information only within PHP comments. But it also allows us to get the raw headers without having to read the files at all. So when the plugin is active, we can parse this string passed directly to our function to get the plugin data, and we can still read it with &lt;code&gt;get_file_data()&lt;/code&gt; when the plugin is inactive. (I already &lt;a class="ext-link" href="https://github.com/WordPoints/wordpoints/blob/4cad924f90ab9d9e6a7376e4b0a5d61ac7d4696b/src/includes/class-modules.php#L158"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;do this for modules in WordPoints&lt;/a&gt;.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>krogsgard</dc:creator>

      <pubDate>Tue, 16 Aug 2016 13:15:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:67</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:67/1471353356061480</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/32417#comment:66" title="Comment 66"&gt;celloexpressions&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I feel like even if we add rich editing to the text widget, media should remain a distinct thing. If we think about widgets like "content blocks", which they really are in a lot of ways, introducing all of the major functionality into one type of widget will likely go too far into the direction of using a single widget for everything, and then being disappointed that you need to split than content into another widget to add something from another widget somewhere in the middle of it.
&lt;/p&gt;
&lt;p&gt;
Widgets are designed to be modular, so we should keep their uses distinct. A media widget is a much simpler concept than trying to add media capabilities to the text widget.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
From a user experience perspective, this is also quite logical. Text widgets have long been a dumping ground but that doesn't mean they &lt;em&gt;should&lt;/em&gt; be a dumping ground.
&lt;/p&gt;
&lt;p&gt;
It makes sense from a user perspective to go to the customizer widgets screen and say, "Add an Image" or "Add a video" or whatever. Trying to turn the text widget into a tiny site builder interface without breaking lots of stuff seems unrealistic and probably a bad user experience without lots of work.
&lt;/p&gt;
&lt;p&gt;
The idea of an "Add Media" button or visual editor in the text widget has merit, but it doesn't stop a need for a simpler implementation for just adding an image like the sample plugins in this thread show. Any time I build a tiny little website for someone, putting a little "About {Person}" widget is on the agenda. Ditto for folks that want small calls to action or whatever else. This is a use case for millions of websites.
&lt;/p&gt;
&lt;p&gt;
Image attachments already offer a framework for available options with captions and description (that can be used for description text in a case like my "About" widget). With a link field added, the framework is there to solve a lot of use cases.
&lt;/p&gt;
&lt;p&gt;
Is there a way to move forward on this without rethinking every single thing about widgets and having to deal with a 7 year old stagnated issue of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10457" title="#10457: enhancement: Parse shortcodes in text widgets by default (closed: fixed)"&gt;#10457&lt;/a&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37656 (Improve plugin bootstrapping processes) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 16 Aug 2016 13:08:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37656#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37656#comment:3/1471352909493464</guid>
      <description>&lt;p&gt;
A &lt;code&gt;WP_Plugin&lt;/code&gt; class has been previously mentioned in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22256" title="#22256: enhancement: Hook namespacing (closed: wontfix)"&gt;#22256&lt;/a&gt; and brought up with a patch in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21883" title="#21883: enhancement: WP_Plugin action/filter concept (closed: maybelater)"&gt;#21883&lt;/a&gt;, but only in regards of hooks and filters (i.e. &lt;code&gt;$GLOBALS['wp_global_hooks'] = new WP_Plugin();&lt;/code&gt;. With &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17817" title="#17817: defect (bug): do_action/apply_filters/etc. recursion on same filter kills underlying call (closed: fixed)"&gt;#17817&lt;/a&gt; in contention, that approach would need some more tweaking. Also, the class name isn't ideal too because of &lt;code&gt;WP_Theme&lt;/code&gt;. Using &lt;code&gt;WP_Plugin&lt;/code&gt; for hooks but themes can use hooks too? Confusing.
&lt;/p&gt;
&lt;p&gt;
Starting small has probably the highest chance of getting this into core, i.e. a &lt;code&gt;WP_Plugin&lt;/code&gt; class analogous to &lt;code&gt;WP_Theme&lt;/code&gt;. Forgetting &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21883" title="#21883: enhancement: WP_Plugin action/filter concept (closed: maybelater)"&gt;#21883&lt;/a&gt; and &lt;code&gt;register_plugin()&lt;/code&gt; in the beginning.
&lt;/p&gt;
&lt;p&gt;
While &lt;code&gt;register_plugin()&lt;/code&gt; and an additional interface sounds interesting, I do not think anyone would use it because of backward compatibility with older WordPress versions. Who wants to basically maintain two versions of their plugin?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37676 (Links disappear when saving) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 16 Aug 2016 12:39:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37676#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37676#comment:1/1471351191641286</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the video @Lindstromer!
&lt;/p&gt;
&lt;p&gt;
I can confirm this in 4.5 and trunk, but only when switching to the "extended" link modal. Also happens when simply switching to the text editor or vice-versa (instead of hitting publish)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34466 (wp_register_form, wp_lost_password_form function) updated</title>
      
        <dc:creator>atomicjack</dc:creator>

      <pubDate>Tue, 16 Aug 2016 12:17:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34466#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34466#comment:3/1471349863957290</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>20160816_links_disappear_480p.mov attached to Ticket #37676</title>
      
        <dc:creator>Lindstromer</dc:creator>

      <pubDate>Tue, 16 Aug 2016 12:11:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37676/20160816_links_disappear_480p.mov</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37676/20160816_links_disappear_480p.mov/1471349481899838</guid>
      <description>&lt;p&gt;
Steps to reproduce the bug
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37676 (Links disappear when saving) created</title>
      
        <dc:creator>Lindstromer</dc:creator>

      <pubDate>Tue, 16 Aug 2016 12:09:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37676</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37676/1471349344494895</guid>
      <description>&lt;p&gt;
When inserting links using the new inlinke link tool in the wysiwyg editor you loose the link upon saving. The link is lost if you don't link an existing word(see video) but seems to work if it's an existing word that's being linked.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>37043.3.diff attached to Ticket #37043</title>
      
        <dc:creator>barryceelen</dc:creator>

      <pubDate>Tue, 16 Aug 2016 11:25:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37043/37043.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37043/37043.3.diff/1471346713544275</guid>
      <description>&lt;p&gt;
Align @param tags according to coding standards
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37665 (Font Natively: Google maps can change the active font) updated</title>
      
        <dc:creator>stephenharris</dc:creator>

      <pubDate>Tue, 16 Aug 2016 10:23:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37665#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37665#comment:5/1471342983371420</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37665-ubnutu-higher.diff attached to Ticket #37665</title>
      
        <dc:creator>stephenharris</dc:creator>

      <pubDate>Tue, 16 Aug 2016 10:22:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37665/37665-ubnutu-higher.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37665/37665-ubnutu-higher.diff/1471342957404388</guid>
      <description>&lt;p&gt;
Move Ubuntu above Roboto
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>37665-roboto-lower.diff attached to Ticket #37665</title>
      
        <dc:creator>stephenharris</dc:creator>

      <pubDate>Tue, 16 Aug 2016 10:22:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37665/37665-roboto-lower.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37665/37665-roboto-lower.diff/1471342932800903</guid>
      <description>&lt;p&gt;
Move Roboto below Ubuntu
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37665 (Font Natively: Google maps can change the active font) updated</title>
      
        <dc:creator>stephenharris</dc:creator>

      <pubDate>Tue, 16 Aug 2016 10:12:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37665#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37665#comment:4/1471342365774095</guid>
      <description>&lt;p&gt;
This seems likely to be an issue specific to Linux distributions.
&lt;/p&gt;
&lt;p&gt;
I've tested this on a mac and, as expected, the native system font is used. On Windows it uses Segoe UI. Both of these have a higher priority than Roboto.
&lt;/p&gt;
&lt;p&gt;
On Ubuntu, however, the native system font is lower in priority than Roboto. I would suggesting moving Ubuntu above Roboto (or Roboto below Ubuntu, if we want to keep Oxygen-Sans in a relatively high position).
&lt;/p&gt;
&lt;p&gt;
In either case it will provide a consistent experience for Linux users.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37665 (Font Natively: Google maps can change the active font) updated</title>
      
        <dc:creator>NateWr</dc:creator>

      <pubDate>Tue, 16 Aug 2016 08:55:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37665#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37665#comment:3/1471337726118185</guid>
      <description>&lt;p&gt;
I've read the discussion in Slack, where questions were raised about where in the admin the map is getting loaded and why it's not in an iframe.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;I'm reporting the effect from seeing it on the admin bar on the frontend, although the effect is the same if a map is loaded in the admin outside of TinyMCE. You can see an example of this with the [Event Organiser](&lt;a class="ext-link" href="https://wordpress.org/plugins/event-organiser/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/event-organiser/&lt;/a&gt;) plugin if you provide an address for a venue (Events &amp;gt; Venues &amp;gt; Add New).
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;Version 3 of the Google Maps API uses the HTML5 &lt;code&gt;canvas&lt;/code&gt; element to render maps. I believe the iframe is only a fallback for browsers that do not support &lt;code&gt;canvas&lt;/code&gt;.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37675 (Update Masonry (v4.1.0) &amp; imagesLoaded (v4.1.0) package) created</title>
      
        <dc:creator>grapplerulrich</dc:creator>

      <pubDate>Tue, 16 Aug 2016 08:29:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37675</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37675/1471336159877771</guid>
      <description>&lt;p&gt;
As this updates drops IE8 and 9 support we cannot update directly to these versions. We can't make the same switch from &lt;code&gt;jquery-masonry&lt;/code&gt; to &lt;code&gt;masonry&lt;/code&gt; as we don't have a shiv and which is a bit counterproductive if IE 8 &amp;amp; 9 support has been dropped.
&lt;/p&gt;
&lt;p&gt;
I think it would be good to think for the future as I expect version v5 will also be a breaking change.
&lt;/p&gt;
&lt;p&gt;
Possible solutions:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Register a new handle &lt;code&gt;masonry-4&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Deprecate Masonry from core. &lt;code&gt;jquery-masonry&lt;/code&gt; is used for the custom-header script, Twenty Thirteen and Twenty Fourteen.
&lt;/li&gt;&lt;li&gt;Add an option to &lt;code&gt;wp_enqueue_script&lt;/code&gt; to define which version of script that is needed. We can include v3.x and v4.x and the developer can define which version that they need.
&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="Masonry"&gt;Masonry&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;v4.0.0 removes IE8 &amp;amp; 9 support: &lt;a class="ext-link" href="https://github.com/desandro/masonry/releases/tag/v4.0.0"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/desandro/masonry/releases/tag/v4.0.0&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;v4.1.0 - stagger option: &lt;a class="ext-link" href="https://github.com/desandro/masonry/releases/tag/v4.1.0"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/desandro/masonry/releases/tag/v4.1.0&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="imagesloaded"&gt;imagesloaded&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;v4.0.0 - remove IE8 support: &lt;a class="ext-link" href="https://github.com/desandro/imagesloaded/releases/tag/v4.0.0"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/desandro/imagesloaded/releases/tag/v4.0.0&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;v4.1.0 - ev-emitter: &lt;a class="ext-link" href="https://github.com/desandro/imagesloaded/releases/tag/v4.1.0"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/desandro/imagesloaded/releases/tag/v4.1.0&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37368 (get_object_taxonomies() ignores output type argument for attachments) updated</title>
      
        <dc:creator>deeptiboddapati</dc:creator>

      <pubDate>Tue, 16 Aug 2016 07:27:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37368#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37368#comment:6/1471332473988381</guid>
      <description>&lt;p&gt;
I looked into this and tested out the patch. I definitely recreated the bug and the patch seemingly fixes it. But when I dug deeper it ended up being a lot bigger than it first seemed.
&lt;/p&gt;
&lt;p&gt;
So I looked at 3 functions get_object_taxonomies, get_attachment_taxonomies, get_post_taxonomies.
&lt;/p&gt;
&lt;p&gt;
I looked at get_post_taxonomies because it supposed to work with all WP_Post objects and seems to repeat the get_attachment_taxonomies function.
&lt;/p&gt;
&lt;p&gt;
get_object_taxonomies() and get_attachment_taxonomies()call each other to evaluate WP_Post objects that are attachments. But get_attachment_taxonomies() just passes it back to get_object_taxonomies() after doing a lot of unneeded text parsing.
&lt;/p&gt;
&lt;p&gt;
This circular dependency should be removed because a lot of other functions depend on get_object_taxonomies(). But the patch suggested doesn't remove it so while I think it fixes it, I think for the long run we should go another direction.
&lt;/p&gt;
&lt;p&gt;
It also doesn't address any of the issues I found below. I don't know if we are supposed to address this here or if I should open bug reports for each of the things I found below.
&lt;/p&gt;
&lt;p&gt;
I tested the functions and I found issues with each of the functions and I have questions about how to approach fixing them.
I broke the problems and my questions down here.
&lt;/p&gt;
&lt;h2 id="get_object_taxonomies"&gt;get_object_taxonomies()&lt;/h2&gt;
&lt;h4 id="Return"&gt;Return&lt;/h4&gt;
&lt;p&gt;
the names or objects of the taxonomies which are registered for the requested object or object type, such as a post object or post type name.
&lt;/p&gt;
&lt;h4 id="Allowedinput"&gt;Allowed input&lt;/h4&gt;
&lt;p&gt;
Param 1-
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;WP_Post object
&lt;/li&gt;&lt;li&gt;String for post type name
&lt;/li&gt;&lt;li&gt;Array? The docs don't specify what this array should be.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;strong&gt;Question: What is the array?&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Param 2-
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;String either 'names' or 'objects'
&lt;/li&gt;&lt;/ul&gt;&lt;h3 id="IOtable"&gt;I/O table&lt;/h3&gt;
&lt;table class="wiki"&gt;
&lt;tr&gt;&lt;td&gt; Input I = Invalid ?= unsure                  &lt;/td&gt;&lt;td&gt;Right return for "Objects"&lt;/td&gt;&lt;td style="text-align: right"&gt; Right return for "Names"
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; (object) Attachment                          &lt;/td&gt;&lt;td&gt; NO      &lt;/td&gt;&lt;td&gt; YES
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; (string) "attachment"                        &lt;/td&gt;&lt;td&gt; YES     &lt;/td&gt;&lt;td&gt; YES
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; ? (array) Attachment                         &lt;/td&gt;&lt;td&gt; YES     &lt;/td&gt;&lt;td&gt; YES
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; ? (array) attachment objects*                &lt;/td&gt;&lt;td&gt; NO      &lt;/td&gt;&lt;td&gt; NO
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; (object) Post                                &lt;/td&gt;&lt;td&gt; YES     &lt;/td&gt;&lt;td&gt; YES
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; (string) "post"                              &lt;/td&gt;&lt;td&gt; YES     &lt;/td&gt;&lt;td&gt; YES
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; ? (array) Post                               &lt;/td&gt;&lt;td&gt; YES     &lt;/td&gt;&lt;td&gt; YES
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; ?(array) WP_Post objects assorted post types &lt;/td&gt;&lt;td&gt; NO      &lt;/td&gt;&lt;td&gt; NO
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; ?(array) post_types as strings*              &lt;/td&gt;&lt;td&gt; YES     &lt;/td&gt;&lt;td&gt; YES
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; I (int) id of post or attachment             &lt;/td&gt;&lt;td&gt; YES     &lt;/td&gt;&lt;td&gt; YES
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h3 id="Issues"&gt;Issues&lt;/h3&gt;
&lt;p&gt;
*Docs say that you should be able to pass in an array. They don't specify what kind of array.
It works for a post array.
It doesn't work for an array of post arrays or an array of post objects.
&lt;/p&gt;
&lt;p&gt;
It works if you pass in an array with different post type names. For example:
get_object_taxonomies(['attachment','post'], 'objects');
returns the union of taxonomy objects associated with either attachments or posts
&lt;strong&gt;Question: Is this an intended behavior?&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
For param 2 it evaluates 'objects' as anything that is not 'names' so you could pass anything in.
This returns taxonomy objects:
get_object_taxonomies(WP_Post, false)
&lt;strong&gt;Question: Is this an intended behavior or should it specifically check for 'objects'?&lt;/strong&gt;
&lt;/p&gt;
&lt;h2 id="get_attachment_taxonomies"&gt;get_attachment_taxonomies()&lt;/h2&gt;
&lt;h4 id="Return1"&gt;Return&lt;/h4&gt;
&lt;p&gt;
an array of names of taxonomies associated with a given attachment
&lt;/p&gt;
&lt;h4 id="Allowedinput1"&gt;Allowed input&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;An id of an Attachment
&lt;/li&gt;&lt;li&gt;An Attachment object
&lt;/li&gt;&lt;li&gt;Data Array? The docs don't specify what this data array should be.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;strong&gt;Question: What is the data array?&lt;/strong&gt;
&lt;/p&gt;
&lt;h3 id="IOtable1"&gt;I/O table&lt;/h3&gt;
&lt;table class="wiki"&gt;
&lt;tr&gt;&lt;td style="text-align: left"&gt;Input I= invalid ?=unsure   &lt;/td&gt;&lt;th&gt; Is it correct?
&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; (object) Attachment        &lt;/td&gt;&lt;td&gt; Yes
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; ?(array) Attachment        &lt;/td&gt;&lt;td&gt; Yes
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; (int) id of Attachment     &lt;/td&gt;&lt;td&gt; Yes
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; I (string) 'attachment'    &lt;/td&gt;&lt;td&gt; Yes
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="text-align: right"&gt; ?(array) Attachment objects&lt;/td&gt;&lt;td style="text-align: right"&gt; Yes but with Notice*
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; ?(array) Attachment arrays &lt;/td&gt;&lt;td style="text-align: right"&gt; Yes but with Notice*
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; ?(array) Attachment ids    &lt;/td&gt;&lt;td style="text-align: right"&gt; Yes but with Notice*
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; I (object) Post            &lt;/td&gt;&lt;td&gt; No
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; I (int) Post Id            &lt;/td&gt;&lt;td&gt; No
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h3 id="Issues1"&gt;Issues&lt;/h3&gt;
&lt;p&gt;
Passing an array of Attachment objects, ids or arrays returns the names of the taxonomies correctly but displays a notice:
&lt;/p&gt;
&lt;p&gt;
Notice: Undefined property: stdClass::$ID in C:\MAMP\htdocs\trunk\src\wp-includes\media.php on line 2709
&lt;/p&gt;
&lt;p&gt;
It looks like it works by accident. If it wasn't chained on to get_object_taxonomies it wouldn't work.
&lt;/p&gt;
&lt;p&gt;
If you pass in a Post object or id it returns all taxonomy associated with Attachments. It should return an empty array since this is invalid input.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Question: Should this return an empty array for invalid post types or return an array of Taxonomies associated with attachments? Is this within the scope of this bug fix?
&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Inside this function it does a lot of text parsing and creates an array of the attachment's post_type mime type, file extension etc. Then it checks if there are any taxonomies associated with each of them. Currently taxonomies are only associated with Post Types.
&lt;strong&gt;Question:Should I remove the superflous code?
Curiosity Question: When were taxonomies associated with file extension and mime types?&lt;/strong&gt;
&lt;/p&gt;
&lt;h2 id="get_post_taxonomies"&gt;get_post_taxonomies()&lt;/h2&gt;
&lt;h4 id="Return2"&gt;Return&lt;/h4&gt;
&lt;p&gt;
an array of names of taxonomies associated with a given WP_Post object.
&lt;/p&gt;
&lt;h4 id="Allowedinput2"&gt;Allowed input&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;A WP_Post object
&lt;/li&gt;&lt;li&gt;An id of a WP_Post object
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;strong&gt;Question: Should this function always return an empty array if input is invalid?&lt;/strong&gt;
&lt;/p&gt;
&lt;h3 id="IOtable2"&gt;I/O table&lt;/h3&gt;
&lt;table class="wiki"&gt;
&lt;tr&gt;&lt;td style="text-align: center"&gt;  Inputs, I = invalid        &lt;/td&gt;&lt;td&gt; Does it work correctly?
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; (object) Attachment         &lt;/td&gt;&lt;td&gt; YES
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; (int) Attachment Id         &lt;/td&gt;&lt;td&gt; YES
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; I (array) Attachment        &lt;/td&gt;&lt;td&gt; NO*
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="text-align: right"&gt; I (array) Attachment objects&lt;/td&gt;&lt;td&gt; NO*
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; I (array) Attachment arrays &lt;/td&gt;&lt;td&gt; NO*
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; I (string) "attachment"     &lt;/td&gt;&lt;td&gt; YES Empty Array
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; (object) Post               &lt;/td&gt;&lt;td&gt; YES
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; (int) Post Id               &lt;/td&gt;&lt;td&gt; YES
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; I (array) Post              &lt;/td&gt;&lt;td&gt; NO*
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; I (array) Post arrays       &lt;/td&gt;&lt;td&gt; NO*
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; I (array) Post objects      &lt;/td&gt;&lt;td&gt; NO*
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; I (string) "post"           &lt;/td&gt;&lt;td&gt; YES Empty Array
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h3 id="Issues2"&gt;Issues&lt;/h3&gt;
&lt;p&gt;
*These don't work correctly. Its just defaulting to post id=1. So it returns what ever taxonomies are associated with that post.
It should return an empty array for invalid inputs.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Question: Should I patch this in this bug or is this out of the scope of this bug fix?&lt;/strong&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37671 (Emptying Bin with large amount of posts results in whitescreen) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Tue, 16 Aug 2016 03:49:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37671#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37671#comment:7/1471319393245508</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Wow, that code is so terribly inefficient.
&lt;/p&gt;
&lt;p&gt;
Some immediate thoughts, ordered by easiest win to hardest.
&lt;/p&gt;
&lt;p&gt;
Order the &lt;code&gt;$comment_ids&lt;/code&gt; array by &lt;code&gt;comment_ID DESC&lt;/code&gt;, so that newest comments are deleted first, and &lt;code&gt;wp_delete_comment()&lt;/code&gt; doesn't need to re-parent every single sub-comment that it's just about to delete.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;delete_metadata_by_mid()&lt;/code&gt; could be extended to take an array of meta ids, none of the actions fired prevent a delete from occurring, so they can all be fired, then the delete could happen in one query. This could also be used by &lt;code&gt;wp_delete_comment()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
There's a reasonable argument for &lt;code&gt;wp_delete_posts()&lt;/code&gt; and &lt;code&gt;wp_delete_comments()&lt;/code&gt; functions that optimise how they do all their queries - updating comment and post parents could be optimised, and clearing the cache can happen at the end.
&lt;/p&gt;
&lt;p&gt;
A new &lt;code&gt;wp_delete_revisions()&lt;/code&gt; would be able to use &lt;code&gt;wp_delete_posts()&lt;/code&gt;, giving more performance benefits.
&lt;/p&gt;
&lt;p&gt;
If someone wants to tackle a patch, I'm happy to review, etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>customize-installed-themes-still.png attached to Ticket #37661</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Tue, 16 Aug 2016 03:42:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37661/customize-installed-themes-still.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37661/customize-installed-themes-still.png/1471318964353745</guid>
      <description>&lt;p&gt;
Still view of the installed themes section, to facilitate more refined UI discussions.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>themes-unsaved-changes-api-error.gif attached to Ticket #37661</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Tue, 16 Aug 2016 03:42:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37661/themes-unsaved-changes-api-error.gif</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37661/themes-unsaved-changes-api-error.gif/1471318936391597</guid>
      <description>&lt;p&gt;
Error handling, and save &amp;amp; publish notice/functionality in the themes panel.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37674 (Auto-generate password length on Password Reset page cannot be altered) updated</title>
      
        <dc:creator>achbed</dc:creator>

      <pubDate>Tue, 16 Aug 2016 02:08:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37674#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37674#comment:1/1471313313529518</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37527 (Customizer: Links within text should be underlined) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Tue, 16 Aug 2016 01:45:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37527#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37527#comment:9/1471311927145832</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
related &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37529" title="#37529: defect (bug): Links in the admin footer should be underlined (closed: fixed)"&gt;#37529&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Tue, 16 Aug 2016 01:43:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:7/1471311815358811</guid>
      <description>&lt;p&gt;
Of course - user testing and and design iterations will absolutely be necessary here. I should have clarified that the list above is base functionality that still needs to be developed, but I wanted to get the rest out there in the meantime so that we can start iterating on the design and UX. Any feedback and discussion during the design meeting would be fantastic as a first step. I'm adding a couple more visuals including a still of the main panel view to help document the current state of the patch.
&lt;/p&gt;
&lt;p&gt;
I'll also note that most of the UI currently in the patch is derived from the themes pages in the admin. I think we should be willing to diverge from that UI here as we work to optimize the experience, and improvements to the admin page could be synced back in the future.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37670 (wp_validate_redirect fails when running WordPress on a port) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 16 Aug 2016 00:31:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37670#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37670#comment:2/1471307519029866</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37670" title="#37670: defect (bug): wp_validate_redirect fails when running WordPress on a port (new)"&gt;raptor235&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
where
&lt;/p&gt;
&lt;pre class="wiki"&gt;$wpp = parse_url(home_url());
&lt;/pre&gt;&lt;p&gt;
equals
&lt;/p&gt;
&lt;pre class="wiki"&gt;array (size=2)
  'scheme' =&amp;gt; string 'http' (length=4)
  'host' =&amp;gt; string 'localhost:3002' (length=23)
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
Hi @raptor235 and welcome back to Trac :)
&lt;/p&gt;
&lt;p&gt;
Can you do some extra debugging around this line and let us know the exact inputs and versions of PHP which you're running?
&lt;/p&gt;
&lt;p&gt;
PHP specifically specifically separates out the port, in &lt;a class="ext-link" href="https://3v4l.org/seEbR"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;all versions of PHP&lt;/a&gt; when using the input &lt;code&gt;http://localhost:3002&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10483 (Change post_name's length from 200 to 400) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 16 Aug 2016 00:06:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10483#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10483#comment:33/1471306017039303</guid>
      <description>&lt;p&gt;
80 was a reference to the topic title input on support forums, it looks like the title input on Edit Post screen doesn't have a &lt;code&gt;maxlength&lt;/code&gt; attribute at all. 80 is obviously better than 33 though :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37270 (Improve handling of active state for dynamically-created ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 16 Aug 2016 00:02:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37270#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37270#comment:3/1471305743270748</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@sayedwp that does look good!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>