<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #11863 (Trashed items interfere with page/post slug generation) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Sun, 10 Apr 2016 23:36:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11863#comment:156</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11863#comment:156/1460331362611258</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11863#comment:154" title="Comment 154"&gt;pavelevap&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Yes, when you publish post "Trash" (slug &lt;code&gt;trash&lt;/code&gt;) and move it to Trash, &lt;code&gt;post_name&lt;/code&gt; will be changed to &lt;code&gt;trash__trashed&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Correct
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11863#comment:154" title="Comment 154"&gt;pavelevap&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
And when you restore it, &lt;code&gt;post_name&lt;/code&gt; is changed back to &lt;code&gt;trash&lt;/code&gt; and &lt;code&gt;_wp_old_slug&lt;/code&gt; with value &lt;code&gt;trash__trashed&lt;/code&gt; is created.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Correct
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11863#comment:154" title="Comment 154"&gt;pavelevap&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The only feature of &lt;code&gt;_wp_old_slug&lt;/code&gt; in this case is possible redirection from &lt;code&gt;trash__trashed&lt;/code&gt; to &lt;code&gt;trash&lt;/code&gt;? But I do not understand why?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Correct, the &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/11863/11863.18.diff" title="Attachment '11863.18.diff' in Ticket #11863"&gt;11863.18.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/11863/11863.18.diff" title="Download"&gt;â€‹&lt;/a&gt; would have bypassed saving &lt;code&gt;_wp_old_slug&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11863#comment:154" title="Comment 154"&gt;pavelevap&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
No user knows (for default Posts and Pages) this temporary trashed slug and there is no need to save this redirect.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
For default post types yes, for custom post types like bbPress' use case knowing and using the trashed slug is required.
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11863#comment:154" title="Comment 154"&gt;pavelevap&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
And if it is possible problem on bbPress side, it should be solved there because it is not WP core issue?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There is no longer any issue on bbPress side, it also couldn't be handled by bbPress alone, this is WP core functionality that changed that bbPress itself could not change.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11863#comment:154" title="Comment 154"&gt;pavelevap&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
For most of WP users it has only downsizes, I guess, that means bloated database with not usable values :-(
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, but again this would be pretty limited numbers for most users
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11863 (Trashed items interfere with page/post slug generation) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Sun, 10 Apr 2016 23:25:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11863#comment:155</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11863#comment:155/1460330754860361</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11863#comment:153" title="Comment 153"&gt;ericlewis&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11863#comment:152" title="Comment 152"&gt;netweb&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
you get an automatic redirect to &lt;code&gt;.../forums/topic/my-topic__/?view=all&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Did you mean a redirect to &lt;code&gt;.../forums/topic/my-topic/?view=all&lt;/code&gt;? The underscores should be removed when untrashed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, my bad, edited and fixed copy pasta.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23394 (Remove version from readme.html / Upgrade core doesn't restore the file) closed</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Sun, 10 Apr 2016 23:25:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23394#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23394#comment:13/1460330709561219</guid>
      <description>wontfix: &lt;p&gt;
IETF's recommendation 14.39 in RFC 2038 refers to a header that was previously used for intra-network communication for use in identifying the processing software or for general use server surveys. This specific header would contain information about a level that is higher than the application layer of WordPress, and thus should not be construed as guidance to projects like WordPress or other software that runs at the same layer as WordPress. An example of data previously contained in this header was:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
CERN/3.0 libwww/2.17
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This header no longer exists. In fact the RFC you referenced was written in 1997, and was itself invalidated and supersceded by RFC 2616 in 1999. As of the 1999 RFC, no RFCs since, about the HTTP protocol have contained similar guidance, partially because the header in question doesn't exist beginning in RFC 2616.
&lt;/p&gt;
&lt;p&gt;
The license.txt file contains the GPL license text which is a component of the GPL license which WordPress uses.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Regarding removing version numbers from CSS and JS files: As I mentioned above, replace the version number with a salted hash (or other unique random key) that changes each time the version is updated.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This would break backwards compatibility that plugins can rely on, and it doesn't solve the problem that it's just as easy to compare the contents of the file as it is to parse the version out of the url.
&lt;/p&gt;
&lt;p&gt;
Moreover, there appears to be a suggestion that even if you remove these files, hide the meta generator tag, and randomize the version appended to strings, somehow that will plug all of your version concerns. However, if one really wants the version number you can simply run a string comparison on the outputted css or js files. Moreover, the WordPress REST API framework requires versioning, which inherently must be public in order for the feature to use, and that versioning can be directly mapped to versions of WordPress. That itself cannot be prevented.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We have to assume that sooner or later, a vulnerability will be found in every single version of WordPress.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Using a version detection library attached to a standard exploit library set such as metasploit, one can simply just run through all vulnerabilities ever found for WordPress just as quickly as detecting the version on a site that's done what you've prescribed. The fact of the matter is that security by obscurity (version hiding being an example), does not make the site any more or less secure (as pointed out in the OWASP). In actuality in certain penetration software it makes it faster. Many frameworks, upon being unable to deduce a version number of an application, simply iterate over all vulnerabilities anyways.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Very true...but WordPress.org's own usage stats show that approximately 48% of WordPress users aren't even updated to the 4.4 (current) branch so that leaves about half of WordPress' users out of luck if a more proactive approach to security isn't taken.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is a soon to be obsolete argument. WordPress is moving towards Chromium style updates, where major versions are done automatically. Existing tail end WordPress installs are automatically being updated major versions now, even if they were not previously by a combination of WordPress outreach to major web hosting companies and other relevant parties. As this continues to occur, the number of sites on the current major version in perpetuity will continue to grow. It wouldn't surprise me if after 2 years, that's up to 85-90% of all installs always on the current major version.
&lt;/p&gt;
&lt;p&gt;
Furthermore, on sites where WordPress has autoupdate minor releases (all sites since 3.7, so about 80%+ of all WP installs), any newly discovered vulnerabilities can be pushed and patched in real time. Hiding versions does not in any way, shape or form help make any site newer than 3.7 more secure than they already were.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It's also being proposed to add the WP version number in Etags, and this is already implemented in v4.5-RC2, which is also not a great idea. Please see &lt;a href="https://core.trac.wordpress.org/ticket/28722#comment:25"&gt;my comments&lt;/a&gt; on the &lt;a href="https://core.trac.wordpress.org/ticket/28722#comment:27"&gt;ticket here&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's not a proposal, it's a merged feature that will ship with WordPress 4.5 in 2 days.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Not revealing version numbers is merely one aspect of following establshed good security principles, so this shouldn't be seen as an odd request. I've seen requests similar to this keep getting shut down over the years and it makes me scratch my head.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;If we can make some relatively easy changes to remove all the version number leakage throughout WordPress, and reduce the number of successful hacks (even if only by a small percent), for &lt;em&gt;nearly half of WordPress users&lt;/em&gt; that don't upgrade as quickly, doesn't it seem like that's something we should do?&lt;/strong&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
These are only successful because either users fail to upgrade major versions (something that again will not be as significant if at all an issue in the future) or have something else that's vulnerable, generally a plugin, which does not in any way have anything to do with WordPress version number "leakage". In the meantime, the users who don't upgrade will never see this update to remove the version numbers, so in the end, this type of thing provides a net benefit of helping no one. A site is either up to date and thus secure via security releases, or doesn't update and will never see this update anyway.
&lt;/p&gt;
&lt;p&gt;
Note, I'm going to reclose this ticket, however, a closed ticket does not mean discussion has to stop. You (and others) can continue commenting on the ticket while it is closed.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36461 (wpLink autocomplete results styles are not available when wp_editor() ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 10 Apr 2016 22:50:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36461#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36461#comment:11/1460328614562510</guid>
      <description>&lt;p&gt;
We shouldn't be using &lt;code&gt;.item-title&lt;/code&gt; and &lt;code&gt;.item-type&lt;/code&gt; in autocomplete as they are used in the "rivers" in wpLink where the styling is different. Also, &lt;code&gt;.item-title&lt;/code&gt; is not needed there at all. If we must change the class name, lets make it something more specific to the editor. See 36461.3.patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36461.3.patch attached to Ticket #36461</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 10 Apr 2016 22:46:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36461/36461.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36461/36461.3.patch/1460328361230797</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36461 (wpLink autocomplete results styles are not available when wp_editor() ...) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 10 Apr 2016 22:42:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36461#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36461#comment:10/1460328122397642</guid>
      <description>&lt;p&gt;
+1 for &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36461/36461.2.patch" title="Attachment '36461.2.patch' in Ticket #36461"&gt;36461.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36461/36461.2.patch" title="Download"&gt;â€‹&lt;/a&gt;. There are some other styling issues that existed in 4.4 (probably earlier) once you hit the gear icon, but that's not a regression.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36468 (Error in docs of get_home_url() and home_url()) created</title>
      
        <dc:creator>thomaswm</dc:creator>

      <pubDate>Sun, 10 Apr 2016 22:19:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36468</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36468/1460326783563860</guid>
      <description>&lt;p&gt;
In the docs of &lt;code&gt;get_home_url()&lt;/code&gt; and &lt;code&gt;home_url()&lt;/code&gt;, it says:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Returns the â€˜homeâ€™ option with the appropriate protocol, &lt;strong&gt;â€˜httpsâ€™ if is_ssl() and â€˜httpâ€™ otherwise&lt;/strong&gt;. If $scheme is â€˜httpâ€™ or â€˜httpsâ€™, is_ssl() is overridden.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's not entirely correct. If &lt;code&gt;get_home_url()&lt;/code&gt; is called without the &lt;code&gt;$scheme&lt;/code&gt; parameter, then:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If &lt;code&gt;is_ssl()&lt;/code&gt; is true, then &lt;code&gt;get_home_url()&lt;/code&gt; will return a URL with the HTTPS scheme.
&lt;/li&gt;&lt;li&gt;If &lt;code&gt;is_ssl()&lt;/code&gt; is false, then &lt;code&gt;get_home_url()&lt;/code&gt; will return a URL with the same scheme as the &lt;code&gt;home&lt;/code&gt; option. That can be either HTTP or HTTPS.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36459 (Inconsistent triggering of backtick shortcut for code tags) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 10 Apr 2016 22:18:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36459#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36459#comment:11/1460326696331927</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Bumping this to a future release. There's not much we can do when processing backticks on some keyboard layouts because of the way these are communicated from the OS to the browser. We'll probably look closer at how these patterns are processed. Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33300" title="#33300: task (blessed): More text patterns (closed: fixed)"&gt;#33300&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36459 (Inconsistent triggering of backtick shortcut for code tags) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 10 Apr 2016 22:11:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36459#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36459#comment:10/1460326279074753</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core-editor by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1460326275001036"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36467 (disable zip extension in themes directroy) created</title>
      
        <dc:creator>ahmedash95</dc:creator>

      <pubDate>Sun, 10 Apr 2016 21:44:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36467</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36467/1460324678816797</guid>
      <description>&lt;p&gt;
a lot of developers upload theme zip file to wp-content/themes/theme_name.zip then they extact the file and forget to remove it later . and thats make it easy to anyone to download this seem later if he view source and get theme directory wp-content/themes/ahmed_theme/style.css if he tries to download the file wp-content/themes/ahmed_theme.zip the file will start to download . so i think wordpress default htaccess must come with this rewrite rule to protected users .
&lt;/p&gt;
&lt;pre class="wiki"&gt;
RewriteRule ^wp-content/themes/.*\.(zip|rar)$ - [F,L,NC]
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36459 (Inconsistent triggering of backtick shortcut for code tags) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 10 Apr 2016 21:26:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36459#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36459#comment:9/1460323603237596</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1460323600004584"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36461 (wpLink autocomplete results styles are not available when wp_editor() ...) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 10 Apr 2016 20:51:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36461#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36461#comment:9/1460321511610032</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36461#comment:6" title="Comment 6"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
36461.1.patch only copies the already used styles and makes them available on the front-end.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
See &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-admin/css/forms.css?rev=36619&amp;amp;marks=586-594,598-601,605-606#L584"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-admin/css/forms.css?rev=36619&amp;amp;marks=586-594,598-601,605-606#L584&lt;/a&gt;.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Noticed another issue with  the too common &lt;code&gt;.alignright&lt;/code&gt; class in Twenty Sixteen, see &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36461/before.png" title="Attachment 'before.png' in Ticket #36461"&gt;before.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36461/before.png" title="Download"&gt;â€‹&lt;/a&gt;. Fixed in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36461/36461.2.patch" title="Attachment '36461.2.patch' in Ticket #36461"&gt;36461.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36461/36461.2.patch" title="Download"&gt;â€‹&lt;/a&gt; by using the same class names as in the old modal, see &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36461/after.png" title="Attachment 'after.png' in Ticket #36461"&gt;after.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36461/after.png" title="Download"&gt;â€‹&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>after.png attached to Ticket #36461</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 10 Apr 2016 20:49:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36461/after.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36461/after.png/1460321391298671</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>36461.2.patch attached to Ticket #36461</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 10 Apr 2016 20:49:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36461/36461.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36461/36461.2.patch/1460321384042465</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>before.png attached to Ticket #36461</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 10 Apr 2016 20:49:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36461/before.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36461/before.png/1460321377559509</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36461 (wpLink autocomplete results styles are not available when wp_editor() ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 10 Apr 2016 20:20:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36461#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36461#comment:8/1460319658729899</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1460319655004578"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36461 (wpLink autocomplete results styles are not available when wp_editor() ...) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sun, 10 Apr 2016 20:19:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36461#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36461#comment:7/1460319582734241</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36461#comment:6" title="Comment 6"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
would be good to consider it for fixing in 4.5 even this late. 36461.1.patch only copies the already used styles and makes them available on the front-end.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed. This is dangerously close to (if not) a regression anyway.
&lt;/p&gt;
&lt;p&gt;
Let's get the other review needed to commit this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34584 (Editor/TinyMCE - Enhance Blockquote Functionality to Allow Citations) closed</title>
      
        <dc:creator>downstairsdev</dc:creator>

      <pubDate>Sun, 10 Apr 2016 19:56:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34584#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34584#comment:2/1460318215751226</guid>
      <description>maybelater: &lt;p&gt;
I released this feature as a plugin: &lt;a class="ext-link" href="https://wordpress.org/plugins/better-blockquotes/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://wordpress.org/plugins/better-blockquotes/&lt;/a&gt;. We can see if it gets any traction and re-open as a core ticket later if we want to pursue.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36459 (Inconsistent triggering of backtick shortcut for code tags) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 10 Apr 2016 19:39:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36459#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36459#comment:8/1460317158166308</guid>
      <description>&lt;p&gt;
I enabled the OSX Norwegian keyboard layout to try and reproduce. I'm still able to (via Shift - \) create code blocks at a normal pace.
&lt;/p&gt;
&lt;p&gt;
However, wherever ` could be used as a modifier to add a grave accent, it definitely interrupts the process. If used before a character that does not get the accent, it works as normal.
&lt;/p&gt;
&lt;pre class="wiki"&gt;English keyboard: `a code block` and `this code block`
Norwegian keyboard: Ã  code block and `this code block`
&lt;/pre&gt;&lt;p&gt;
When typing the closing backtick, I get the indicator that it's waiting to be used as a modifier until I type something else. I wonder if the backtick's use as a modifier key is confusing the JS?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33055 (Support Parallel HTTP Requests in WP_Http, et al) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 10 Apr 2016 19:31:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33055#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33055#comment:19/1460316680134025</guid>
      <description>&lt;p&gt;
Some random thoughts about &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/33055/33055.2.diff" title="Attachment '33055.2.diff' in Ticket #33055"&gt;33055.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/33055/33055.2.diff" title="Download"&gt;â€‹&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Requests uses &lt;code&gt;spl_autoload_register()&lt;/code&gt; so we have to provide a fallback in case SPL is disabled.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;WP_Requests_Hooks&lt;/code&gt; needs some whitespace love. Is it part of Request or WP? Asking because of the &lt;code&gt;@package&lt;/code&gt; tag and because it's in the root of &lt;code&gt;/wp-includes/&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;/wp-includes/requests/Requests/&lt;/code&gt; looks weird. Can we move it up one dir?
&lt;/li&gt;&lt;li&gt;What's the status of &lt;a class="ext-link" href="https://github.com/rmccue/Requests-WPHTTP/issues/1"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/rmccue/Requests-WPHTTP/issues/1&lt;/a&gt;?
&lt;/li&gt;&lt;li&gt;Are they any other tickets which could be marked as fixed as soon as Requests lands? (&lt;a href="https://core.trac.wordpress.org/query?status=!closed&amp;amp;component=HTTP+API"&gt;https://core.trac.wordpress.org/query?status=!closed&amp;amp;component=HTTP+API&lt;/a&gt;)
&lt;/li&gt;&lt;li&gt;Can we get a refresh of the patch so it could potentially land on day one of 4.6?
&lt;/li&gt;&lt;li&gt;"We can also remove the HTTP tests from the core tests if you'd like, since they're all covered by Requests' tests already. " I wouldn't remove them directly. Let's make sure that our tests are passing too and remove them only when the implementation is finished.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11863 (Trashed items interfere with page/post slug generation) updated</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Sun, 10 Apr 2016 19:30:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11863#comment:154</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11863#comment:154/1460316616723308</guid>
      <description>&lt;p&gt;
Yes, when you publish post "Trash" (slug &lt;code&gt;trash&lt;/code&gt;) and move it to Trash, &lt;code&gt;post_name&lt;/code&gt; will be changed to &lt;code&gt;trash__trashed&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
And when you restore it, &lt;code&gt;post_name&lt;/code&gt; is changed back to &lt;code&gt;trash&lt;/code&gt; and &lt;code&gt;_wp_old_slug&lt;/code&gt; with value &lt;code&gt;trash__trashed&lt;/code&gt; is created.
&lt;/p&gt;
&lt;p&gt;
The only feature of &lt;code&gt;_wp_old_slug&lt;/code&gt; in this case is possible redirection from &lt;code&gt;trash__trashed&lt;/code&gt; to &lt;code&gt;trash&lt;/code&gt;? But I do not understand why? No user knows (for default Posts and Pages) this temporary trashed slug and there is no need to save this redirect. And if it is possible problem on bbPress side, it should be solved there because it is not WP core issue? For most of WP users it has only downsizes, I guess, that means bloated database with not usable values :-(
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36459 (Inconsistent triggering of backtick shortcut for code tags) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Sun, 10 Apr 2016 19:11:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36459#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36459#comment:7/1460315513428313</guid>
      <description>&lt;p&gt;
Can confirm the additional findings, also if the first one is broken you can't "fix" the first one without removing any additional ones first, they seems to block each other out so to speak.
&lt;/p&gt;
&lt;p&gt;
I still can't make it trigger by typing slowly, I do need to hit the space bar and the backtick almost at the same time for them to convert to code tags, odd.
&lt;/p&gt;
&lt;p&gt;
I'm no wizard with gifs unfortunately so mine get larger in size but the behavior for my part is apparent in &lt;a class="ext-link" href="http://imgur.com/Q3JNWJj"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://imgur.com/Q3JNWJj&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36450 (alt attribute missing from site icon preview) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 10 Apr 2016 19:07:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36450#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36450#comment:4/1460315276666025</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looks like the empty &lt;code&gt;alt&lt;/code&gt; tag was added during the 4.4 milestone. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34583" title="#34583: defect (bug): Missing image alt attributes in core (closed: fixed)"&gt;#34583&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36459 (Inconsistent triggering of backtick shortcut for code tags) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 10 Apr 2016 18:54:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36459#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36459#comment:6/1460314444552333</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36459#comment:5" title="Comment 5"&gt;Clorith&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36459#comment:4" title="Comment 4"&gt;jeremyfelt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I can consistently reproduce this in Chrome 49.0.2623.112 and Firefox 45.0.1 in OSX if I very quickly hit the spacebar immediately after the closing backtick.
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;body id="tinymce" class="mce-content-body content post-type-post post-status-draft post-format-standard locale-en-us mceContentBody webkit wp-editor wp-autoresize html5-captions has-focus" data-id="content" contenteditable="true" style="overflow-y: hidden;"&amp;gt;
    &amp;lt;p&amp;gt;`the spacebar was hit very quickly after this closing backtick`&amp;amp;nbsp;&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
You are quite right, if I hit the buttons fast enough, as in practically at the same time, I can trigger the code block consistently every time.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think this is the opposite for me. When I type at a slower pace, the code block is generated. If I type something very quickly after the closing backtick, it breaks.
&lt;/p&gt;
&lt;p&gt;
The gif above should show the behavior.
&lt;/p&gt;
&lt;p&gt;
Additional findings:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Once a paragraph experiences a non-working backtick, any remaining uses on that line won't work either.
&lt;/li&gt;&lt;li&gt;This does not impact new paragraphs. Things reset.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>breaking-backticks.gif attached to Ticket #36459</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 10 Apr 2016 18:49:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36459/breaking-backticks.gif</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36459/breaking-backticks.gif/1460314143055240</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36460 (Unable to break out of code tags in visual mode when using keyboard ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 10 Apr 2016 18:44:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36460#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36460#comment:2/1460313855036098</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core-editor by clorith. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1460313852000932"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36459 (Inconsistent triggering of backtick shortcut for code tags) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Sun, 10 Apr 2016 18:40:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36459#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36459#comment:5/1460313652035625</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36459#comment:4" title="Comment 4"&gt;jeremyfelt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I can consistently reproduce this in Chrome 49.0.2623.112 and Firefox 45.0.1 in OSX if I very quickly hit the spacebar immediately after the closing backtick.
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;body id="tinymce" class="mce-content-body content post-type-post post-status-draft post-format-standard locale-en-us mceContentBody webkit wp-editor wp-autoresize html5-captions has-focus" data-id="content" contenteditable="true" style="overflow-y: hidden;"&amp;gt;
    &amp;lt;p&amp;gt;`the spacebar was hit very quickly after this closing backtick`&amp;amp;nbsp;&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
You are quite right, if I hit the buttons fast enough, as in practically at the same time, I can trigger the code block consistently every time.
&lt;/p&gt;
&lt;p&gt;
This is a bit awkward though (at least on a Norwegian keyboard) as the backtick is a shift-key combination to access to begin with (and this should perhaps be a pattern recognition, not a timing dependent one?)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36462 (Updating or publishing a (custom) post that hasn't loaded completely ...) updated</title>
      
        <dc:creator>archon810</dc:creator>

      <pubDate>Sun, 10 Apr 2016 18:10:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36462#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36462#comment:1/1460311813238281</guid>
      <description>&lt;p&gt;
This has been driving me nuts for a long time now. To add, it's not always even the case with custom posts, even regular posts on our main blog close comments sometimes because of this bug (especially longer posts).
&lt;/p&gt;
&lt;p&gt;
Plugins that do some processing on the edit page, a slowdown in db, or really quick fingers seem to bring it about.
&lt;/p&gt;
&lt;p&gt;
I was only able to trace down the real cause after enabling the query log and seeing that comments get closed from the edit page, then reproducing quite easily.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36459 (Inconsistent triggering of backtick shortcut for code tags) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 10 Apr 2016 17:57:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36459#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36459#comment:4/1460311024054355</guid>
      <description>&lt;p&gt;
I can consistently reproduce this in Chrome 49.0.2623.112 and Firefox 45.0.1 in OSX if I very quickly hit the spacebar immediately after the closing backtick.
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;body id="tinymce" class="mce-content-body content post-type-post post-status-draft post-format-standard locale-en-us mceContentBody webkit wp-editor wp-autoresize html5-captions has-focus" data-id="content" contenteditable="true" style="overflow-y: hidden;"&amp;gt;
    &amp;lt;p&amp;gt;`the spacebar was hit very quickly after this closing backtick`&amp;amp;nbsp;&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11863 (Trashed items interfere with page/post slug generation) updated</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Sun, 10 Apr 2016 17:50:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11863#comment:153</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11863#comment:153/1460310655992976</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11863#comment:152" title="Comment 152"&gt;netweb&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
you get an automatic redirect to &lt;code&gt;.../forums/topic/my-topic__/?view=all&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Did you mean a redirect to &lt;code&gt;.../forums/topic/my-topic/?view=all&lt;/code&gt;? The underscores should be removed when untrashed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36358 (Return of _wp_json_prepare_data() in wp_json_encode() should be used.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 10 Apr 2016 17:39:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36358#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36358#comment:3/1460309947264468</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by jrf. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1460309944001909"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36466 (Remove "appearance" reference in customizer permissions error) created</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 10 Apr 2016 17:30:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36466</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36466/1460309434735451</guid>
      <description>&lt;p&gt;
The customizer can be used for things much broader than the appearance of the site, such as menus and widgets. Accordingly, we try to avoid referencing specific things that could be customized when describing what the Customizer does.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33668" title="#33668: enhancement: Cheatin' uh?: Update in wp-admin/customize.php (closed: fixed)"&gt;#33668&lt;/a&gt; / &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/33857" title="Provide more helpful feedback than just &amp;#34;Cheatin' uh?&amp;#34; for permission ..."&gt;[33857]&lt;/a&gt; introduced a more helpful error message when a user without permissions accesses the customizer. However, it specifically references customizing the appearance of the site. Also note that permission to open the customizer but not make changes can be granted, so due to the varying potential for what exactly this message would mean, going more generic would be good.
&lt;/p&gt;
&lt;pre class="wiki"&gt;You are not allowed to customize the appearance of this site.
&lt;/pre&gt;&lt;p&gt;
Should be changed to:
&lt;/p&gt;
&lt;pre class="wiki"&gt;You are not allowed to customize this site.
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36461 (wpLink autocomplete results styles are not available when wp_editor() ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 10 Apr 2016 16:52:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36461#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36461#comment:6/1460307162303333</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@imath thanks.
&lt;/p&gt;
&lt;p&gt;
I realize this is relatively minor, and plugins can add these styles themselves, but would be good to consider it for fixing in 4.5 even this late. 36461.1.patch only copies the already used styles and makes them available on the front-end.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36460 (Unable to break out of code tags in visual mode when using keyboard ...) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 10 Apr 2016 16:33:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36460#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36460#comment:1/1460305995617335</guid>
      <description>worksforme: &lt;p&gt;
This is not a new bug or a regression. Unfortunately that is how contentEditable behaves in many cases. Happens with all inline elements that are at the end of a block element/paragraph. Pressing Enter/Return is the standard way to "break out".
&lt;/p&gt;
&lt;p&gt;
This is also the main reason TinyMCE has an "element path" at the bottom of the editor, so the user can click/tab to it and choose the "currently selected" element where the caret is.
&lt;/p&gt;
&lt;p&gt;
I realize this behaviour is not ideal, but there is very little we can do to change it. Pretty much all "word processors" behave in this or very similar way. Some would even "maintain" the current formatting, meaning they will insert a &amp;lt;code&amp;gt; tag in the new paragraph created on Enter, and place the caret there. The only way to remove that is by using the Clear formatting button (second row).
&lt;/p&gt;
&lt;p&gt;
Going to close this as worksforme, feel free to reopen if there are better examples of how the editors should behave in this case.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36461 (wpLink autocomplete results styles are not available when wp_editor() ...) updated</title>
      
        <dc:creator>imath</dc:creator>

      <pubDate>Sun, 10 Apr 2016 16:31:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36461#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36461#comment:5/1460305873689046</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Great!
&lt;/p&gt;
&lt;p&gt;
@azaozz i've just tested the patch and i confirm it's fixing the issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36461 (wpLink autocomplete results styles are not available when wp_editor() ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 10 Apr 2016 16:19:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36461#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36461#comment:4/1460305184950493</guid>
      <description>&lt;p&gt;
In 36461.1.patch: add the styles for UI Autocomplete to editor.css and make them a bit more specific to not interfere with the default autocomplete styling.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36459 (Inconsistent triggering of backtick shortcut for code tags) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Sun, 10 Apr 2016 16:19:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36459#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36459#comment:3/1460305167769221</guid>
      <description>&lt;p&gt;
Here's the body of the extended screenshot
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;body id="tinymce" class="mce-content-body content post-type-post post-status-draft post-format-standard locale-en-us mceContentBody webkit wp-editor wp-autoresize html5-captions has-focus" data-id="content" contenteditable="true" style="overflow-y: hidden;"&amp;gt;
&amp;lt;h2&amp;gt;A whole new world&amp;lt;/h2&amp;gt;
&amp;lt;p&amp;gt;A new &amp;lt;code&amp;gt;fantastic&amp;lt;/code&amp;gt;&amp;amp;nbsp;point of view&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;No one to tell us `no` or `where` to go&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;`Or say we're only dreaming`&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;Was it the `newlines` causing this?&amp;lt;/p&amp;gt;
&amp;lt;h2&amp;gt;I'll make a man out of you&amp;lt;/h2&amp;gt;
&amp;lt;p&amp;gt;Let's get down to `business`.&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;To &amp;lt;code&amp;gt;defeat&amp;lt;/code&amp;gt;&amp;amp;nbsp;the huns.&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;Did they send me &amp;lt;code&amp;gt;daughters&amp;lt;/code&amp;gt;&amp;amp;nbsp;when I asked for &amp;lt;code&amp;gt;sons&amp;lt;/code&amp;gt;.&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;You're the &amp;lt;code&amp;gt;sadest&amp;lt;/code&amp;gt;&amp;amp;nbsp;bunch I ever saw, but you can &amp;lt;code&amp;gt;bet&amp;lt;/code&amp;gt;&amp;amp;nbsp;before we're through&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;`Mister`&amp;amp;nbsp;I'll make a man out of you&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/pre&gt;&lt;p&gt;
The line breaks after each &lt;code&gt;h2&lt;/code&gt; and &lt;code&gt;p&lt;/code&gt; tag are mine for readability
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36461.1.patch attached to Ticket #36461</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 10 Apr 2016 16:17:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36461/36461.1.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36461/36461.1.patch/1460305059773653</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36461 (wpLink autocomplete results styles are not available when wp_editor() ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 10 Apr 2016 16:12:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36461#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36461#comment:3/1460304733296751</guid>
      <description>&lt;p&gt;
No need to make another stylesheet for this. These styles should be in editor.css which is for styling around both editors. They also will need to be a bit more specific to not interfere with the default UI Autocomplete styling that may be used at other places. Patch coming up.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36461 (wpLink autocomplete results styles are not available when wp_editor() ...) updated</title>
      
        <dc:creator>imath</dc:creator>

      <pubDate>Sun, 10 Apr 2016 15:57:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36461#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36461#comment:2/1460303879799980</guid>
      <description>&lt;p&gt;
@ocean90
&lt;/p&gt;
&lt;p&gt;
Sure. This is before the patch:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/KQiToRYznL.png"&gt;&lt;img src="https://cldup.com/KQiToRYznL.png" alt="https://cldup.com/KQiToRYznL.png" crossorigin="anonymous" title="https://cldup.com/KQiToRYznL.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
And this is once the patch is applied
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/n2uEu6PpPh.png"&gt;&lt;img src="https://cldup.com/n2uEu6PpPh.png" alt="https://cldup.com/n2uEu6PpPh.png" crossorigin="anonymous" title="https://cldup.com/n2uEu6PpPh.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28722 (Boost performance with ETag in load-scripts.php and load-styles.php) updated</title>
      
        <dc:creator>RedSand</dc:creator>

      <pubDate>Sun, 10 Apr 2016 15:54:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28722#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28722#comment:30/1460303696726210</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28722#comment:29" title="Comment 29"&gt;jeremyfelt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi @RedSand, thanks for taking the time to share your thoughts.
&lt;/p&gt;
&lt;p&gt;
We've been using WordPress version numbers on scripts and styles for quite a while to break client side caching after an upgrade. If we didn't use WordPress version numbers, we'd have to use another number that could be automatically scanned. If we didn't use that, then the size or content of the script itself would be used for automatic scanning.
&lt;/p&gt;
&lt;p&gt;
A benefit of having cache breaking version numbers attached to scripts is that it helps guarantee immediate upgrades if there ever is a security issue. It's also an easy way for us to &lt;del&gt;scold&lt;/del&gt; nudge people we know that are running old versions of WordPress. :)
&lt;/p&gt;
&lt;p&gt;
I'm going to re-close this ticket as fixed as it is completed against the 4.5 milestone, which is now in RC2. I'd suggest a new ticket to continue discussing this concern, especially if there are other approaches that can be used to break scripts. Similar discussions are worth searching for as well, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4155" title="#4155: enhancement: Let's hide the version number from public display (closed: wontfix)"&gt;#4155&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hi Jeremy,
&lt;/p&gt;
&lt;p&gt;
You're very welcome. :)
&lt;/p&gt;
&lt;p&gt;
Yes, I'm aware of the usage and the reasons for it, as I've been a WordPress developer and plugin developer for a decade. :)
&lt;/p&gt;
&lt;p&gt;
I'll be happy to open a separate ticket to explore this further for the next releases. Yes, there are a number of ways to break the caching without having to even add query strings. In fact, the use of query strings appended to the scripts actually creates a new performance issue, because caching scripts speeds up the site. But I won't get into that here and now.
&lt;/p&gt;
&lt;p&gt;
My main point here was that it would be better for the Etags to use some other unique string that could be updated when the version is changed, as opposed to the version number.
&lt;/p&gt;
&lt;p&gt;
I will put together some data and solutions for a new ticket.
&lt;/p&gt;
&lt;p&gt;
@Presskopp :
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I follow you. You opened the door to discuss security aspects in a greater range - let's do so :)
&lt;/p&gt;
&lt;p&gt;
I don't want to spam here, but what about the general use of Etags?
&lt;a class="ext-link" href="https://developer.yahoo.com/blogs/ydn/high-performance-sites-rule-13-configure-etags-7211.html"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://developer.yahoo.com/blogs/ydn/high-performance-sites-rule-13-configure-etags-7211.html&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Outstanding! Yes, WordPress security is something that definitely needs to start being discussed in much greater depth. :)
&lt;/p&gt;
&lt;p&gt;
If you're on slack, hit me up there (same username) and we can chat.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36461 (wpLink autocomplete results styles are not available when wp_editor() ...) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 10 Apr 2016 15:38:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36461#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36461#comment:1/1460302703988464</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@imath Can you attach some before/after screenshots please?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23394 (Remove version from readme.html / Upgrade core doesn't restore the file) reopened</title>
      
        <dc:creator>RedSand</dc:creator>

      <pubDate>Sun, 10 Apr 2016 15:37:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23394#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23394#comment:12/1460302679081493</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23394#comment:9" title="Comment 9"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Given the &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;sheer number of security vulnerabilities&lt;/a&gt; that WordPress has had in the last two years, and changes in cybersecurity and increasing occurrences of hacking that have happened in the last 3 years, I think &lt;em&gt;it's definitely time to reopen this topic&lt;/em&gt;, and to start taking a more aggressive approach to WordPress security.
&lt;/p&gt;
&lt;p&gt;
While not the most important security flaw, it is still a poor security practice to reveal software version numbers in web software. If you want to hack a site, the first thing you want is to get the type of software and version number. This is known as fingerprinting.
&lt;/p&gt;
&lt;p&gt;
The IETF (Internet Engineering Task Force) has this to say in &lt;a class="ext-link" href="http://www.ietf.org/rfc/rfc2068.txt"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;RFC 2068&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
"Revealing the specific software version of the server may allow the server machine to become more vulnerable to attacks against software that is known to contain security holes."
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Additionally, from &lt;a class="ext-link" href="https://www.owasp.org/index.php/Fingerprint_Web_Application_Framework_(OTG-INFO-008)"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Fingerprint Web Application Framework (OTG-INFO-008)&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;strong&gt;Web framework[*] fingerprinting is an important subtask of the&lt;em&gt; information gathering process&lt;/em&gt;. &lt;em&gt;Knowing the type of framework can automatically give a great advantage if such a framework has already been tested by the penetration tester.&lt;/em&gt; It is not only the &lt;em&gt;known vulnerabilities in unpatched versions but specific misconfigurations&lt;/em&gt; in the framework and known file structure that makes the fingerprinting process so important....&lt;/strong&gt;
[*] Please note that this article makes no differentiation between Web Application Frameworks (WAF) and Content Management Systems (CMS). This has been done to make it convenient to fingerprint both of them in one chapter. Furthermore, both categories are referenced as web frameworks.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
And...
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;strong&gt;Remove any unnecessary or unused files on the server. This implies text files disclosing information about versions and installation too.&lt;/strong&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Which is exactly what we're asking for here...to remove the readme and license files.
&lt;/p&gt;
&lt;p&gt;
Rsponding to a couple of @nacin 's previous comments (granted, I realize they are 3 years old, but this for others considering this issue now):
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
With publicly accessible web application software, there is no way to prevent version detection. The readme and generator versions are just the fairly cheap ways to do it. My favorite is looking at publicly accessible CSS and JS files, but there are many others.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right...so let's fix that. If these are areas that can be used to find out the software version, then why not remove it from them? In CSS and JS files, the version numbers have no advantage over some type of hashed key.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Script kiddies blindly attack sites. They don't sniff version numbers first.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
While that used to be true (in 2013 when your response was posted), that's simply not the case anymore. In 2016, they absolutely do sniff version numbers. With the sheer number of exploits out in the wild now, it's not really practical to just attack blindly. That would be an easy way to be detected, and not to mention it takes a lot of bandwidth for the hacker. Sure, there are still bots employed by script kiddies that just try to hit a site with a variety of common exploits. More often though, hackers set bots to not try any attacks on their first pass...they are merely scanning sites collecting data for a targeted attack in the next step. They are building a list of sites that have specific vulnerable software versions. They can either be hit again automatically right after the data is collected. Or, the hacker employing the bot, can review the list manually and single out interesting targets. Either way, the bots are sent again, this time going for specific vulnerabilities and that's when they attack. This has a much higher success rate, and is harder to catch.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Even if they did, this means they're looking for core vulnerabilities. (Of which there are few, and anything of note requires a user account these days, at a minimum.)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's absolutely not true anymore either...There have been exploits in every version of WordPress released, as revealed over the last two years. There is no such thing as 100% secure software. We have to assume that sooner or later, a vulnerability will be found in every single version of WordPress.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
So, you're either running an out of date version â€” don't hide the version number, *update* â€” or you're running the latest (at which point, that's on us, and no suppressing that version is going to help you).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Very true...but &lt;a class="ext-link" href="https://wordpress.org/about/stats/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;WordPress.org's own usage stats&lt;/a&gt; show that &lt;strong&gt;approximately 48% of WordPress users aren't even updated to the 4.4 (current) branch&lt;/strong&gt; so that leaves about half of WordPress' users out of luck if a more proactive approach to security isn't taken. 31% are still using PHP 5.2 and 5.3, so this shows pretty clearly that a high percentage of users are not practicing good security. So, we as developers need to help them out and make it as secure as possible. Not everyone has expert security consultants helping them, or a good working knowledge of security. (This can change if we educate users but it will likely take years.)  While I'm with you that people need to upgrade (and believe me, I preach it), we can't lay all the responsibility on users.
&lt;/p&gt;
&lt;p&gt;
One idea for securing the readme and license files is to have it secured somewhere in the admin with the relevant info. It could even be a link to readme and license files hosted on WordPress.org for that particular version. Or, if they were available on a page of the admin, the files/data should only be accessible by .php, not .txt or .html, so no version numbers would be revealed externally.
&lt;/p&gt;
&lt;p&gt;
Regarding removing version numbers from CSS and JS files: As I mentioned above, replace the version number with a salted hash (or other unique random key) that changes each time the version is updated.
&lt;/p&gt;
&lt;p&gt;
Regarding the version numbers in the page head...Code located in general-template.php on line 3451 (v4.5-RC2) for example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$gen = '&amp;lt;meta name="generator" content="WordPress ' . get_bloginfo( 'version' ) . '"&amp;gt;';
&lt;/pre&gt;&lt;p&gt;
One option would be to have WordPress but leave out the version number....just cut
&lt;/p&gt;
&lt;pre class="wiki"&gt;get_bloginfo( 'version' )
&lt;/pre&gt;&lt;p&gt;
It really isn't necessary. Almost every security plugin removes this generator code completely. (And that is not being over-aggressive.)
&lt;/p&gt;
&lt;p&gt;
It's also being proposed to add the WP version number in Etags, and this is already implemented in v4.5-RC2, which is also not a great idea. Please see &lt;a href="https://core.trac.wordpress.org/ticket/28722#comment:25"&gt;my comments&lt;/a&gt; on the &lt;a href="https://core.trac.wordpress.org/ticket/28722#comment:27"&gt;ticket here&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Not revealing version numbers is merely one aspect of following establshed good security principles, so this shouldn't be seen as an odd request. I've seen requests similar to this keep getting shut down over the years and it makes me scratch my head.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;If we can make some relatively easy changes to remove all the version number leakage throughout WordPress, and reduce the number of successful hacks (even if only by a small percent), for &lt;em&gt;nearly half of WordPress users&lt;/em&gt; that don't upgrade as quickly, doesn't it seem like that's something we should do?&lt;/strong&gt;
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #36465 (Implement get_content_id_by_slug() function) created</title>
      
        <dc:creator>eclare</dc:creator>

      <pubDate>Sun, 10 Apr 2016 15:30:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36465</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36465/1460302231383777</guid>
      <description>&lt;p&gt;
Sometimes theme &amp;amp; plugin creators have a need to get the ID of any content type (usually a page) by its slug. Aside from use cases where developers prefer to hardcode slugs rather than IDs themselves (which seems better), this could also be used to detect and set some default values, for example: finding the contact page (slug: contact, contact-us, contact-2), home page etc...
&lt;/p&gt;
&lt;p&gt;
This currently requires a few lines of code, posted here: &lt;a class="ext-link" href="https://gist.github.com/eddt/ee1018f26f8fc195629a"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://gist.github.com/eddt/ee1018f26f8fc195629a&lt;/a&gt; (not sure if it would work with child theme slugs without parent slugs).
&lt;/p&gt;
&lt;p&gt;
This could be in the core as get_content_id_by_slug() or similarly named function.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #28722 (Boost performance with ETag in load-scripts.php and load-styles.php) closed</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 10 Apr 2016 15:16:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28722#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28722#comment:29/1460301397317159</guid>
      <description>fixed: &lt;p&gt;
Hi @RedSand, thanks for taking the time to share your thoughts.
&lt;/p&gt;
&lt;p&gt;
We've been using WordPress version numbers on scripts and styles for quite a while to break client side caching after an upgrade. If we didn't use WordPress version numbers, we'd have to use another number that could be automatically scanned. If we didn't use that, then the size or content of the script itself would be used for automatic scanning.
&lt;/p&gt;
&lt;p&gt;
A benefit of having cache breaking version numbers attached to scripts is that it helps guarantee immediate upgrades if there ever is a security issue. It's also an easy way for us to &lt;del&gt;scold&lt;/del&gt; nudge people we know that are running old versions of WordPress. :)
&lt;/p&gt;
&lt;p&gt;
I'm going to re-close this ticket as fixed as it is completed against the 4.5 milestone, which is now in RC2. I'd suggest a new ticket to continue discussing this concern, especially if there are other approaches that can be used to break scripts. Similar discussions are worth searching for as well, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4155" title="#4155: enhancement: Let's hide the version number from public display (closed: wontfix)"&gt;#4155&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36464 (Create an emoji picker) created</title>
      
        <dc:creator>eclare</dc:creator>

      <pubDate>Sun, 10 Apr 2016 15:15:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36464</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36464/1460301340284903</guid>
      <description>&lt;p&gt;
WordPress now supports emoticons (aka smileys) &amp;amp; emojis which have different implementation.
&lt;/p&gt;
&lt;p&gt;
None of those options is available via any selection menu, which would be nice especially for emojis, as they are quite hard to include in a post.
&lt;/p&gt;
&lt;p&gt;
Currently one has to find an emoji on the web, copy the correct symbol (so not the image itself, but the proper unicode character, which sometimes is a square in the browser) and paste in into WordPress. Some emojis have a colon notation like :airplane: (airplane with colons surrounding it), but that's even harder to find and learn - a hover with that text might be helpful for learning.
&lt;/p&gt;
&lt;p&gt;
So, an emoji/emoticon chooser would be a great addition to the visual editor.
&lt;/p&gt;
&lt;p&gt;
Example emoji picker which might be considered for inclusion: &lt;a class="ext-link" href="https://github.com/needim/wdt-emoji-bundle"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/needim/wdt-emoji-bundle&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36463 (Horizontal Rule QUnit test fails from the command line) closed</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sun, 10 Apr 2016 15:14:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36463#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36463#comment:3/1460301284564445</guid>
      <description>invalid: &lt;p&gt;
May have been an out of date library; after some further testing and updating everything the original test passes as expected. Closing.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #28722 (Boost performance with ETag in load-scripts.php and load-styles.php) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Sun, 10 Apr 2016 15:09:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28722#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28722#comment:28/1460300993047113</guid>
      <description>&lt;p&gt;
I follow you. You opened the door to discuss security aspects in a greater range - let's do so :)
&lt;/p&gt;
&lt;p&gt;
I don't want to spam here, but what about the general use of Etags?
&lt;a class="ext-link" href="https://developer.yahoo.com/blogs/ydn/high-performance-sites-rule-13-configure-etags-7211.html"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://developer.yahoo.com/blogs/ydn/high-performance-sites-rule-13-configure-etags-7211.html&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36463 (Horizontal Rule QUnit test fails from the command line) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sun, 10 Apr 2016 15:06:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36463#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36463#comment:2/1460300779827849</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36463/36463.diff" title="Attachment '36463.diff' in Ticket #36463"&gt;36463.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36463/36463.diff" title="Download"&gt;â€‹&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Adjust the &lt;code&gt;hr&lt;/code&gt; test to pass when run from the command line.
&lt;/li&gt;&lt;li&gt;Match the pattern established in other tests: start with the shortcut text, type a return &lt;code&gt;\n&lt;/code&gt; and test what happens.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>36463.diff attached to Ticket #36463</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sun, 10 Apr 2016 15:04:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36463/36463.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36463/36463.diff/1460300673136848</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36463 (Horizontal Rule QUnit test fails from the command line) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sun, 10 Apr 2016 15:02:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36463#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36463#comment:1/1460300559610784</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Screenshot showing the failing test:
&lt;a style="padding:0; border:none" href="http://cl.ly/0N302r2g2d1W/1._adamsilversteinAdams-MacBook-Pro-2_develop.svn.wordpress.orgtrunk_zsh_2016-04-10_08-08-12.jpg"&gt;&lt;img src="http://cl.ly/0N302r2g2d1W/1._adamsilversteinAdams-MacBook-Pro-2_develop.svn.wordpress.orgtrunk_zsh_2016-04-10_08-08-12.jpg" alt="http://cl.ly/0N302r2g2d1W/1._adamsilversteinAdams-MacBook-Pro-2_develop.svn.wordpress.orgtrunk_zsh_2016-04-10_08-08-12.jpg" crossorigin="anonymous" title="http://cl.ly/0N302r2g2d1W/1._adamsilversteinAdams-MacBook-Pro-2_develop.svn.wordpress.orgtrunk_zsh_2016-04-10_08-08-12.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36463 (Horizontal Rule QUnit test fails from the command line) created</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sun, 10 Apr 2016 15:01:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36463</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36463/1460300504584947</guid>
      <description>&lt;p&gt;
The added QUnit test &lt;code&gt;tinymce.plugins.wptextpattern - Horizontal Rule&lt;/code&gt; for the edit &lt;code&gt;&amp;lt;hr&amp;gt;&lt;/code&gt; shortcut (&lt;code&gt;---&lt;/code&gt;) fails when run from the command line. The exception shows that the patter was not expanded.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #32075 (Only set WP_MAX_MEMORY_LIMIT by default when its greater than memory_limit) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sun, 10 Apr 2016 14:49:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32075#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32075#comment:23/1460299752752541</guid>
      <description>&lt;p&gt;
P.S.: and just in case someone sees the &lt;code&gt;wp_is_ini_value_changable()&lt;/code&gt; function and now thinks:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
"&lt;em&gt;Hang on, that's wrong, &lt;code&gt;INI_ALL&lt;/code&gt; and &lt;code&gt;INI_USER&lt;/code&gt; aren't constants, aren't they called &lt;code&gt;PHP_INI_ALL&lt;/code&gt; and &lt;code&gt;PHP_INI_USER&lt;/code&gt; ?&lt;/em&gt;".
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sorry, but no, you're wrong ;-)
&lt;/p&gt;
&lt;p&gt;
(Confused me briefly as well)
@see &lt;a class="ext-link" href="http://php.net/manual/en/info.constants.php"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://php.net/manual/en/info.constants.php&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36462 (Updating or publishing a (custom) post that hasn't loaded completely ...) created</title>
      
        <dc:creator>SeBsZ</dc:creator>

      <pubDate>Sun, 10 Apr 2016 14:44:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36462</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36462/1460299468626857</guid>
      <description>&lt;p&gt;
I am using a custom post type, but I assume this happens to the default post type as well. On the edit post screen (post.php?post=1&amp;amp;action=edit) I have several custom meta boxes. Some of these have content that is quite slow to load. You can reproduce this behavior by adding a sleep(5) statement somewhere in the code that loads the content for a custom meta box. Now in the document's DOM, the sidebar is loaded before the custom meta boxes. This introduces a situation where it is possible to update or publish a post before all the meta boxes have completely loaded. In most cases this isn't a huge problem - I myself check to see if the $_POST fields are there and if they are not then I don't act upon them.
&lt;/p&gt;
&lt;p&gt;
Unfortunately this does not happen for the included "Discussion" meta box. This box has a checkbox named "Allow Comments" which gets switched off when you update the post before this meta box has loaded into the DOM.
&lt;/p&gt;
&lt;p&gt;
The culprit is the code in wp-admin/includes/post.php on line 133 in the _wp_translate_postdata() function:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;if (!isset( $post_data['comment_status'] ))
  $post_data['comment_status'] = 'closed';
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Since the comment_status field is not in the post data, it is automatically assumed it needs to be closed.
&lt;/p&gt;
&lt;p&gt;
Of course there are two "workarounds" I can think of that would improve my current situation. One is for me to optimize the meta boxes so the page loads quicker, the other is to move the Discussion metabox to the top of the page, so it loads first.
&lt;/p&gt;
&lt;p&gt;
Is this expected behavior? I would much rather see the current comment_status be preserved - don't touch it if I didn't intend to modify it. Of course there might be a reason for this implementation that I don't know about.
&lt;/p&gt;
&lt;p&gt;
This post data is then finally presented to wp_insert_post in wp-includes/post.php which actually updates the post's comment_status to become closed, which finally answers my boss' question why comments kept getting disabled automatically.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36459 (Inconsistent triggering of backtick shortcut for code tags) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Sun, 10 Apr 2016 14:42:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36459#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36459#comment:2/1460299376106875</guid>
      <description>&lt;p&gt;
What does the DOM look like in the inspector?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32075 (Only set WP_MAX_MEMORY_LIMIT by default when its greater than memory_limit) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sun, 10 Apr 2016 14:32:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32075#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32075#comment:22/1460298729539117</guid>
      <description>&lt;p&gt;
Added a check for whether the memory limit can actually be changed as per @mensmaximus suggestion.
This check is applied to the setting of both the &lt;code&gt;WP_MEMORY_LIMIT&lt;/code&gt; constant as well as the &lt;code&gt;WP_MAX_MEMORY_LIMIT&lt;/code&gt; constant.
&lt;/p&gt;
&lt;p&gt;
This makes the value of these constants more realistic and prevents trying to change the memory limit if it cannot be changed.
The actual end result of the attempt to raise the memory is not affected by this, so it's more a cosmetic change than anything else.
&lt;/p&gt;
&lt;p&gt;
The check does necessitate yet another new function to be added to the &lt;code&gt;load.php&lt;/code&gt; file.
&lt;/p&gt;
&lt;p&gt;
Other than that, the new patch (v7):
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;has been rebased against the current master.
&lt;/li&gt;&lt;li&gt;adds unit tests for both of the new functions in &lt;code&gt;load.php&lt;/code&gt;. As there was no test file for &lt;code&gt;load.php&lt;/code&gt; yet (AFAICS), I've created one.
&lt;/li&gt;&lt;li&gt;contains a minor improvement in how the &lt;code&gt;wp_php_ini_bytes_to_int()&lt;/code&gt; function deals with large values on 32-bit systems. Please note: This change does prevent the memory limit being raised to &amp;gt; 2G on 32-bit systems, however it prevents the value being disregarded completely.
&lt;/li&gt;&lt;li&gt;presumes that this patch will not make it into 4.5 (upped the @since tags to 4.6.0).
&lt;/li&gt;&lt;li&gt;adds @since changelog tags to the filters.
&lt;/li&gt;&lt;li&gt;fixes a typo in the documentation.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32075 (Only set WP_MAX_MEMORY_LIMIT by default when its greater than memory_limit) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sun, 10 Apr 2016 14:15:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32075#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32075#comment:21/1460297723073495</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>32075-improved-patch-v7.patch attached to Ticket #32075</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sun, 10 Apr 2016 14:14:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32075/32075-improved-patch-v7.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32075/32075-improved-patch-v7.patch/1460297687410847</guid>
      <description>&lt;p&gt;
Rebased against master, added check for changability of the memory limit, added unit tests
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #28722 (Boost performance with ETag in load-scripts.php and load-styles.php) updated</title>
      
        <dc:creator>RedSand</dc:creator>

      <pubDate>Sun, 10 Apr 2016 14:02:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28722#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28722#comment:27/1460296948411295</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28722#comment:26" title="Comment 26"&gt;Presskopp&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@RedSand:
Isn't it so that it's not so hard to find out a site is using WordPress, whatever you try to hide? Security doesn't come from hidden version number.. :)
And the bots must not even test for WP running or check version, they just fire in all directions, and if they find an open door - bingo, if not, they probably don't try to find out why, but just switch to the next possible target.
This doesn't mean to don't care about protection and security! :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hey @Presskopp
&lt;/p&gt;
&lt;p&gt;
Yes, finding out a site is using WordPress is easy. The directory structure (among many other things) would give that away, so revealing &lt;em&gt;it's WordPress&lt;/em&gt; is not the concern. Keep in mind, I said it's the &lt;strong&gt;version numbers&lt;/strong&gt; that shouldn't be advertised.
&lt;/p&gt;
&lt;p&gt;
That's actually not how most hacks happen these days. With the sheer number of exploits out in the wild now, it's not really practical to just "fire in all directions anymore". That would be an easy way to be detected, and not to mention it takes a lot of bandwidth for the hacker. Sure, there are still bots employed by script kiddies that just try to hit a site with a variety of common exploits. More often though, hackers set bots to not try any attacks on their first pass...they are merely scanning sites collecting data for a targeted attack in the next step. They are building a list of sites that have specific vulnerable software versions. They can either be hit again automatically right after the data is collected. Or, the hacker employing the bot, can review the list manually and single out interesting targets. Either way, the bots are sent again, this time going for specific vulnerabilities and that's when they attack. This has a much higher success rate, and is harder to catch.
&lt;/p&gt;
&lt;p&gt;
I hear you about hiding the version numbers not being a mighty security measure &lt;em&gt;in and of itself&lt;/em&gt;, but notice I didn't say that &lt;em&gt;security &lt;strong&gt;came from&lt;/strong&gt; hiding the version number&lt;/em&gt;. It's one small layer in the whole strategy, though, and stats show that hiding the version number throughout the site will reduce the number of sites that get hacked.
&lt;/p&gt;
&lt;p&gt;
For example, if I can do a quick scan of your site, and see that you're using a specific version of WordPress that's known the have &lt;em&gt;x&lt;/em&gt; vulnerabilities, it makes it that much easier for me to target your site. That doesn't mean you shouldn't practice good security though...you should by all means, and be using updated versions.
&lt;/p&gt;
&lt;p&gt;
But the fact that 48% of WordPress users aren't even updated to the 4.4 branch and 31% are still using PHP 5.2 and 5.3, shows pretty clearly that a high percentage of users are not practicing good security. So, we need to help them out and make it as secure as possible. Not everyone has expert security consultants helping them.
&lt;/p&gt;
&lt;p&gt;
We do security consulting day in and day out for clients, and most hacks come from outdated software, and revealing version numbers makes it easier for hackers to gather data and target. Most hacks also don't come from really talented hackers...they come from hackers with low to intermediate skill. Yet they cause a lot of damage.
&lt;/p&gt;
&lt;p&gt;
Security &lt;em&gt;isn't binary&lt;/em&gt;...it's not an &lt;em&gt;on or off&lt;/em&gt; type of thing. Security is about&lt;em&gt; reducing risk&lt;/em&gt;, and &lt;em&gt;lowering the statistical probability of a successful attack.&lt;/em&gt; You can never eliminate risk fully, and there is no such thing as 100% impenetrable security, even with the best measures in place.
&lt;/p&gt;
&lt;p&gt;
In most criminal acts, itâ€™s about following the path of least resistance â€” if you increase the difficulty of success (sometimes by even a small margin) then often the hacker will go somewhere else.
&lt;/p&gt;
&lt;p&gt;
Good security requires a &lt;em&gt;layered strategy&lt;/em&gt;. It's really not necessary for anyone other than the site owner to know the version number, so why put that out there? (Similarly, WordPress needs to remove all references to the version number throughout the site, so I will put in tickets regarding those as well.)
&lt;/p&gt;
&lt;p&gt;
This is a pretty well-established security principle (granted - only one among many) to avoid web server fingerprinting, and to avoid revealing specific version numbers, so I'm not sure why we would want to ignore &lt;em&gt;any&lt;/em&gt; good security principles, however small they may seem.
&lt;/p&gt;
&lt;p&gt;
So while this may not seem like a big thing in and of itself...look at it like this: If we make some small changes like this throughout WordPress core - not revealing version numbers - and it can help prevent &lt;em&gt;some&lt;/em&gt; of WordPress' users from being hacked, why wouldn't we want to do it? :)
&lt;/p&gt;
&lt;p&gt;
It would be easy to use a kind of salted hash or other random stored key for the Etags instead, and not use the WordPress version number. It would be easy enough to have it change when the WordPress version gets updated, so the same goal would be accomplished. Etags aren't supposed to contain identifiable information anyway...they are supposed to be a static random value that can be used for comparison to tell when something changes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32075 (Only set WP_MAX_MEMORY_LIMIT by default when its greater than memory_limit) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sun, 10 Apr 2016 14:01:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32075#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32075#comment:20/1460296877618096</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
As for now WP_MAX_MEMORY_LIMIT is simply set to 256M by default. There is no verification whether it is really possible to set this value.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As the constant can be set in &lt;code&gt;wp-config.php&lt;/code&gt; as well, this is - IMHO - not really in the scope of this issue. The WP_MAX_MEMORY_LIMIT is a &lt;em&gt;*target*&lt;/em&gt; value, not a definite.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Plugins like WooCommerce "report" this value in the backend on a status page and a user is told "the memory is ok".
&lt;/p&gt;
&lt;p&gt;
You are absolutely correct a developer should never ever rely on any constant. But as you can see it is done. Not in the means of a "dependency" but in the means of reported "unchecked and unfiltered". Reporting something to the user that isn't true and may complicate the troubleshooting is simply spoken wrong.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It's useful information if presented properly. The fact that WooCommerce apparently presents it with the presumption that the actual setting will always succeed is wrong. However, that is more of a plugin developer education issue which is again - IMHO - outside of the scope of this issue.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Imho you have to get the allocated memory first, than try to increase it to 256M. If the return value is true you can define WP_MAX_MEMORY_LIMIT to 256M otherwise you set it to the currently allocated memory.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The constant only provides the target value and - again - as this can also be set in &lt;code&gt;wp-config.php&lt;/code&gt;, validation of whether the target value is realistic is not in the scope of this issue. This issue is about making sure it's never &lt;em&gt;*lower*&lt;/em&gt; than the &lt;em&gt;*current* &lt;/em&gt; memory limit.
&lt;/p&gt;
&lt;p&gt;
The actual raising of the memory is only needed/done in WP in two particular circumstances at this moment and normally not needed. Doing so and then reverting on every page load just to try to get a more realistic target constant seems superfluous to me.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In today's hosting environments you will find PHP-FPM very often and there it is easy to restrict the memory allocation by defining it with php_admin_value[memory_limit] instead of php_value[memory_limit].
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Good point and that is actually something I can work with, though it won't be fool-proof (re: setting of constant in&lt;code&gt;wp-config.php&lt;/code&gt;). Let me see what I can come up with on that end.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36461.patch attached to Ticket #36461</title>
      
        <dc:creator>imath</dc:creator>

      <pubDate>Sun, 10 Apr 2016 13:56:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36461/36461.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36461/36461.patch/1460296574535489</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36461 (wpLink autocomplete results styles are not available when wp_editor() ...) created</title>
      
        <dc:creator>imath</dc:creator>

      <pubDate>Sun, 10 Apr 2016 13:55:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36461</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36461/1460296539605223</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
I'm not sure if WordPress should deal with this, but just in case it should, i've noticed for one of my plugin that uses the &lt;code&gt;wp_editor()&lt;/code&gt; on front end that autocomplete results were looking a bit ugly. So i've fixed it at my level (see &lt;a class="ext-link" href="https://github.com/imath/wp-idea-stream/issues/56"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/imath/wp-idea-stream/issues/56&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
But if WordPress should deal with this more globally. Here's the explanation, now the wpLink feature is using the jQuery Autocomplete UI to populate results, as the wp-admin/css/forms.css is only loaded in back-end results are looking pretty ugly on front-end...
&lt;/p&gt;
&lt;p&gt;
I suggest the attached patch, just in case.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #28722 (Boost performance with ETag in load-scripts.php and load-styles.php) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Sun, 10 Apr 2016 12:54:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28722#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28722#comment:26/1460292871004968</guid>
      <description>&lt;p&gt;
@RedSand:
Isn't it so that it's not so hard to find out a site is using WordPress, whatever you try to hide? Security doesn't come from hidden version number.. :)
And the bots must not even test for WP running or check version, they just fire in all directions, and if they find an open door - bingo, if not, they probably don't try to find out why, but just switch to the next possible target.
This doesn't mean to don't care about protection and security! :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35566 (Remove title attributes: Tag cloud widget uses title to display topic count) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 10 Apr 2016 12:18:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35566#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35566#comment:11/1460290693996579</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35566 (Remove title attributes: Tag cloud widget uses title to display topic count) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 10 Apr 2016 12:11:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35566#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35566#comment:10/1460290303449234</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by emirpprime. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1460290301000472"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35566.patch attached to Ticket #35566</title>
      
        <dc:creator>emirpprime</dc:creator>

      <pubDate>Sun, 10 Apr 2016 12:10:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35566/35566.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35566/35566.patch/1460290212224959</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35566 (Remove title attributes: Tag cloud widget uses title to display topic count) updated</title>
      
        <dc:creator>emirpprime</dc:creator>

      <pubDate>Sun, 10 Apr 2016 12:09:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35566#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35566#comment:9/1460290182897445</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
We worked it up into a plugin: &lt;a class="ext-link" href="https://github.com/mikelittle/accessible-tag-cloud-widget"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/mikelittle/accessible-tag-cloud-widget&lt;/a&gt; which creates a new accessible widget.
&lt;/p&gt;
&lt;p&gt;
I've attached a patch for testing that implements a slightly modified version. This always outputs the accessible version of the links, and an ugly inline style block to reduce the chance of it breaking themes (this definitely needs looking at). The defaults of the wp_tag_cloud function are not changed, however the WP_Widget_Tag_Cloud class now defaults to an accessible version.
Tested against Twenty Sixteen -&amp;gt; Ten and looks ok.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28722 (Boost performance with ETag in load-scripts.php and load-styles.php) reopened</title>
      
        <dc:creator>RedSand</dc:creator>

      <pubDate>Sun, 10 Apr 2016 11:48:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28722#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28722#comment:25/1460288933077477</guid>
      <description>&lt;p&gt;
The WordPress version should not be used in headers like this, as it's a security risk. Revealing software version in headers or code is not a good security practice in general.
&lt;/p&gt;
&lt;p&gt;
The IETF (Internet Engineering Task Force) has this to say in &lt;a class="ext-link" href="http://www.ietf.org/rfc/rfc2068.txt"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;RFC 2068&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
"Revealing the specific software version of the server may allow the server machine to become more vulnerable to attacks against software that is known to contain security holes."
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If a security vulnerability is discovered, and a site owner hasn't upgraded their site yet, revealing this makes it easy for hackers to run automated scripts to scan their site and discover the version number. That's why most security hardening plugins remove the WordPress version number from the site's code.
&lt;/p&gt;
&lt;p&gt;
Obviously, a website owner should practice good security, but even so, this should be changed so that WordPress code leaks as little data as possible.
&lt;/p&gt;
&lt;p&gt;
Keep in mind that every version of WordPress released in the last couple years has had security vulnerabilities discovered after a while, so it's safe to assume that a vulnerability will be discovered in 4.5 sooner or later. If you look at the stats of what &lt;a class="ext-link" href="https://wordpress.org/about/stats/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;WordPress versions people are running&lt;/a&gt; compared against a list of &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;vulnerable WordPress versions&lt;/a&gt;, you can see that only about 52% of users are running 4.4 or higher, and a good portion of the rest are using vulnerable versions. (Not everyone has upgraded to the security patched minor version in their branch.) If you look ahead 6 months or a year, there may still be users who haven't upgraded from 4.5 who will be in that same situation.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #35557 (grunt precommit should run phpunit tests) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Sun, 10 Apr 2016 11:45:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35557#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35557#comment:28/1460288748270272</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35557/35557.6.diff" title="Attachment '35557.6.diff' in Ticket #35557"&gt;35557.6.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35557/35557.6.diff" title="Download"&gt;â€‹&lt;/a&gt; are two fixes/tweaks:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;First fixes a mistake I made in my original patch which landed as part of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36906" title="Improve grunt precommit task
Instead of running all tasks, all the ..."&gt;r36906&lt;/a&gt;, for CSS files the &lt;code&gt;precommit&lt;/code&gt; task should be calling the &lt;code&gt;precommit:css&lt;/code&gt; task, and not &lt;code&gt;postcss:core&lt;/code&gt; directly. FWIW the &lt;code&gt;postcss:core&lt;/code&gt; task only calls &lt;code&gt;precommit:css&lt;/code&gt; anyway, so its not broken per se, but it's not inline with the purpose of the original patch and should be fixed to operate in the same fashion as the other &lt;code&gt;precommit&lt;/code&gt; sub tasks.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Secondly a tweak to the &lt;code&gt;prerelease&lt;/code&gt; task introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36930" title="Add grunt prerelease task
An unintended consequence of improving the ..."&gt;r36930&lt;/a&gt;, the patch removes the task &lt;code&gt;build&lt;/code&gt; from the &lt;code&gt;prerelease&lt;/code&gt; task list as &lt;code&gt;build&lt;/code&gt; was being ran twice causing the &lt;code&gt;prerelease&lt;/code&gt; task to take much more time than it should. The &lt;code&gt;build&lt;/code&gt; task is triggered as part of the &lt;code&gt;precommit:js&lt;/code&gt; task which in turn calls the &lt;code&gt;qunit:compiled&lt;/code&gt; task which includes the &lt;code&gt;build&lt;/code&gt; task in its task list.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>35557.6.diff attached to Ticket #35557</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Sun, 10 Apr 2016 11:36:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35557/35557.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35557/35557.6.diff/1460288164603119</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36460 (Unable to break out of code tags in visual mode when using keyboard ...) created</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Sun, 10 Apr 2016 10:28:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36460</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36460/1460284125512822</guid>
      <description>&lt;p&gt;
If you've entered the backtick shortcut to add a &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; tag as the last bit of text in the editor, and then use the keyboard to navigate around in the text (say to fix a typo earlier on), going to the end of the document either by keyboard navigation or clicking the end with the mouse puts you inside the code tag and it can't be broken out of unless you hit return to create a new paragraph.
&lt;/p&gt;
&lt;p&gt;
If you create a new paragraph then try to backspace to remove it again you are once more put inside the code tag, the only way to break this is by going into text mode and adding any symbol that isn't a space after the code tag manually.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36459 (Inconsistent triggering of backtick shortcut for code tags) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Sun, 10 Apr 2016 10:22:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36459#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36459#comment:1/1460283749250467</guid>
      <description>&lt;p&gt;
In IE11 (11.0.9600.18098) it seems to be triggering every time, up until you try to use an uppercase letter inside a backtick, then it starts behaving inconsistently across the board again.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36424 (graphically visualize if comments are closed (in wp-admin/edit.php)) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Sun, 10 Apr 2016 10:21:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36424#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36424#comment:10/1460283686725563</guid>
      <description>&lt;p&gt;
Yes, this X-thing was more a "feasibility study" :)
So you like the rest of it? Did you try?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>backtick-problem-2.png attached to Ticket #36459</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Sun, 10 Apr 2016 10:12:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36459/backtick-problem-2.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36459/backtick-problem-2.png/1460283138248041</guid>
      <description>&lt;p&gt;
Extended visual, it isn't just a "only the first instance works" case
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>backtick problem.png attached to Ticket #36459</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Sun, 10 Apr 2016 10:06:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36459/backtick%20problem.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36459/backtick%20problem.png/1460282768519934</guid>
      <description>&lt;p&gt;
The backticks triggering in one instance, but not the others
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36459 (Inconsistent triggering of backtick shortcut for code tags) created</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Sun, 10 Apr 2016 10:05:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36459</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36459/1460282746360612</guid>
      <description>&lt;p&gt;
The backticks to trigger &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; blocks is inconsistent in when it wants to trigger, some times it doesn't convert at all, other times it'll randomly convert it a while after you've stopped typing and I've been unable to lock down why this happens.
&lt;/p&gt;
&lt;p&gt;
Currently tested on Chrome 49.0.2623.112 and reported in &lt;a class="ext-link" href="https://wordpress.org/support/topic/text-pattern-for-code-not-working-in-latest-trunk-version"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://wordpress.org/support/topic/text-pattern-for-code-not-working-in-latest-trunk-version&lt;/a&gt; (which also includes a preview gif of the issues)..
&lt;/p&gt;
&lt;p&gt;
I've tried with the code block being the only text on a line, as well as it being inline with other content, both ways seem to kick in when they feel like it with no observable pattern.
&lt;/p&gt;
&lt;p&gt;
I've attached a screenshot showing the current random behavior as well.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #32075 (Only set WP_MAX_MEMORY_LIMIT by default when its greater than memory_limit) updated</title>
      
        <dc:creator>mensmaximus</dc:creator>

      <pubDate>Sun, 10 Apr 2016 08:25:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32075#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32075#comment:19/1460276702943477</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/32075#comment:18" title="Comment 18"&gt;jrf&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Imho the WP_MAX_MEMORY_LIMIT constant should never report a larger amount of memory than the maximum allocatable memory.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
AFAIK there is no reliable way to find out the maximum allocatable memory on the server, so there is no way I can think of to take that into account when setting the constant, quite apart from the fact that the constant can be defined in &lt;code&gt;wp-config.php&lt;/code&gt; outside of our control.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I should have written "allocated" instead of "allocatable". As for now WP_MAX_MEMORY_LIMIT is simply set to 256M by default. There is no verification whether it is really possible to set this value. Plugins like WooCommerce "report" this value in the backend on a status page and a user is told "the memory is ok".
&lt;/p&gt;
&lt;p&gt;
You are absolutely correct a developer should never ever rely on any constant. But as you can see it is done. Not in the means of a "dependency" but in the means of reported "unchecked and unfiltered". Reporting something to the user that isn't true and may complicate the troubleshooting is simply spoken wrong.
&lt;/p&gt;
&lt;p&gt;
Imho you have to get the allocated memory first, than try to increase it to 256M. If the return value is true you can define WP_MAX_MEMORY_LIMIT to 256M otherwise you set it to the currently allocated memory.
&lt;/p&gt;
&lt;p&gt;
In today's hosting environments you will find PHP-FPM very often and there it is easy to restrict the memory allocation by defining it with php_admin_value[memory_limit] instead of php_value[memory_limit].
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36424 (graphically visualize if comments are closed (in wp-admin/edit.php)) updated</title>
      
        <dc:creator>pixelverbieger</dc:creator>

      <pubDate>Sun, 10 Apr 2016 08:00:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36424#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36424#comment:9/1460275213980008</guid>
      <description>&lt;p&gt;
but an X is ambiguous. it can stand for a &lt;em&gt;yes&lt;/em&gt; and a &lt;em&gt;no&lt;/em&gt;. this depends on the context! in a feature list or table the X oftentimes stands for &lt;em&gt;is set&lt;/em&gt; or &lt;em&gt;exists&lt;/em&gt; or &lt;em&gt;included&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>patch_36453.patch attached to Ticket #36453</title>
      
        <dc:creator>shahpranaf</dc:creator>

      <pubDate>Sun, 10 Apr 2016 06:30:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36453/patch_36453.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36453/patch_36453.patch/1460269858333896</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36453 (Disable 'replace' button in replace media frame while attachment is ...) updated</title>
      
        <dc:creator>shahpranaf</dc:creator>

      <pubDate>Sun, 10 Apr 2016 06:30:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36453#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36453#comment:1/1460269828275004</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @ungestaltbar's,
&lt;/p&gt;
&lt;p&gt;
Firstly thanks for posting this bug. I followed the steps and confirm that its a bug.
And yes you were right about missing require selection option. I have fixed that bug with the patch.
&lt;/p&gt;
&lt;p&gt;
Thanks
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>patch_36450.patch attached to Ticket #36450</title>
      
        <dc:creator>shahpranaf</dc:creator>

      <pubDate>Sun, 10 Apr 2016 06:15:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36450/patch_36450.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36450/patch_36450.patch/1460268959802892</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36450 (alt attribute missing from site icon preview) updated</title>
      
        <dc:creator>shahpranaf</dc:creator>

      <pubDate>Sun, 10 Apr 2016 06:15:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36450#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36450#comment:3/1460268917995678</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @TacoVerdo,
&lt;/p&gt;
&lt;p&gt;
Firstly thanks for posting this bug. Along with your bug of "favicon preview image", @swissspidy also found another bug of empty alt for "Crop image". So have added patch for both.
Let me know if the alt name used by me is correct or not?
For crop image : "Crop your image"
for Favicon: "Preview as a browser icon"
&lt;/p&gt;
&lt;p&gt;
Thanks
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37173]: Post 4.5-RC2 version bump.</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sun, 10 Apr 2016 05:15:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37173</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37173/1460265350463657</guid>
      <description>&lt;p&gt;
Post 4.5-RC2 version bump.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [37172]: 4.5-RC2</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sun, 10 Apr 2016 04:20:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37172</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37172/1460262026477643</guid>
      <description>&lt;p&gt;
4.5-RC2
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #11863 (Trashed items interfere with page/post slug generation) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Sun, 10 Apr 2016 04:03:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11863#comment:152</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11863#comment:152/1460260998548408</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11863#comment:151" title="Comment 151"&gt;ericlewis&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Thinking about this a little further...I wonder if this is useful in some cases, like BBPress, where trashed posts are visible on the front-end
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I stand by this logic and think this is desirable behavior. Closing this, please open new tickets for any bugs.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, all good here from a bbPress perspective :+1
&lt;/p&gt;
&lt;p&gt;
And, yes, it is actually useful from a forum moderation perspective, if a topic or reply was trashed and you're using the trashed slug, e.g. &lt;code&gt;.../forums/topic/my-topic__trashed/?view=all&lt;/code&gt; and another moderator or admin restores the topic, thanks to &lt;code&gt;_wp_old_slug&lt;/code&gt; you get an automatic redirect to &lt;code&gt;.../forums/topic/my-topic/?view=all&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36392 (wp_add_inline_script() breaks script dependency order when using ...) closed</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 10 Apr 2016 03:32:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36392#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36392#comment:39/1460259167637366</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37171" title="Ensure consistent dependency order when using `wp_add_inline_script()` ..."&gt;37171&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Ensure consistent dependency order when using &lt;code&gt;wp_add_inline_script()&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This disables the concatenation of remaining enqueued scripts once &lt;code&gt;wp_add_inline_script()&lt;/code&gt; is invoked, which allows us to reliably print these scripts and their before/after inline scripts in the desired order.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props gitlost, azaozz, swisspidy, ocean90.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36392" title="#36392: defect (bug): wp_add_inline_script() breaks script dependency order when using ... (closed: fixed)"&gt;#36392&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37171]: Ensure consistent dependency order when using `wp_add_inline_script()` ...</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 10 Apr 2016 03:32:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37171</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37171/1460259167000417</guid>
      <description>&lt;p&gt;
Ensure consistent dependency order when using &lt;code&gt;wp_add_inline_script()&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
This disables the concatenation of remaining enqueued scripts once &lt;code&gt;wp_add_inline_script()&lt;/code&gt; is invoked, which allows us to reliably print these scripts and their before/after inline scripts in the desired order.
&lt;/p&gt;
&lt;p&gt;
Props gitlost, azaozz, swisspidy, ocean90.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36392" title="#36392: defect (bug): wp_add_inline_script() breaks script dependency order when using ... (closed: fixed)"&gt;#36392&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36392 (wp_add_inline_script() breaks script dependency order when using ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 10 Apr 2016 03:08:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36392#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36392#comment:38/1460257699956102</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1460257698004367"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36392 (wp_add_inline_script() breaks script dependency order when using ...) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 10 Apr 2016 03:07:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36392#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36392#comment:37/1460257627048399</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36392/36392.2.diff" title="Attachment '36392.2.diff' in Ticket #36392"&gt;36392.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36392/36392.2.diff" title="Download"&gt;â€‹&lt;/a&gt; looks good to me as well. &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36392/36392.3.diff" title="Attachment '36392.3.diff' in Ticket #36392"&gt;36392.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36392/36392.3.diff" title="Download"&gt;â€‹&lt;/a&gt; is the exact same except for an additional test that accounts for the case of mixed concat/non-concat for core scripts when scripts one and two are standard and the third script has an inline script before. This works as expected.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36392.3.diff attached to Ticket #36392</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 10 Apr 2016 03:03:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36392/36392.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36392/36392.3.diff/1460257387186207</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36173 (4.5 About Page) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sun, 10 Apr 2016 02:25:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36173#comment:56</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36173#comment:56/1460255106010454</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This needs to have the images responsified + CDN'd and the final video in, which happens just before release.
&lt;/p&gt;
&lt;p&gt;
Otherwise, should be complete.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36457 (Customizer Device Preview: Use px units for tablet preview size) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 10 Apr 2016 02:22:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36457#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36457#comment:4/1460254953591860</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
As small as this change seems, I think we need a set of screenshots showing the difference it makes on various devices. We've had this implemented as is in RC for quite a bit now and should leave it.
&lt;/p&gt;
&lt;p&gt;
I don't think it's too much to change in a minor release after testing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>33301.voiceover.diff attached to Ticket #36458</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 10 Apr 2016 02:16:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36458/33301.voiceover.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36458/33301.voiceover.diff/1460254568274021</guid>
      <description>&lt;p&gt;
@afercia's patch from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33301" title="#33301: task (blessed): Create and edit links inline (closed: fixed)"&gt;#33301&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36458 (Fix support for Safari + VoiceOver when editing inline links) created</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 10 Apr 2016 02:15:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36458</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36458/1460254540017613</guid>
      <description>&lt;p&gt;
From @afercia's comment on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33301" title="#33301: task (blessed): Create and edit links inline (closed: fixed)"&gt;#33301&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
About the issue with Safari, I've recently had the opportunity to test using Safari+VoiceOver and noticed the Twitter search suggestion (which perfectly works) sets an aria-selected="true" on the highlighted option item. Quickly tried that and it seems it makes Safari understand what's going on, finally the autocomplete items get read out. Need to build a clean patch and test a lot but we're probably on the right track now :)
Can confirm that in Safari after Cmd+K the focus goes forth and back from the Editor to the combobox 2-3 times, sometimes it lands on the search field, sometimes not. Couldn't reproduce consistently.
Please consider I'm a newbie with VoiceOver, but I've noticed this focus "jump" doesn't happen when I diligently follow VoiceOver instructions telling me: "To enter the web area, press Control-Option-Shift-Down Arrow". After this, everything works nicely. Would greatly appreciate some feedback from VoiceOver experienced users, specifically if pressing "Control-Option-Shift-Down Arrow" enters a sort of "forms mode" and affects how JavaScript keyboard events behave. @MarcoZ any thoughts? When you have a chance! Thanks very much :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm attaching @afercia's patch to fix this issue as well.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #33301 (Create and edit links inline) closed</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 10 Apr 2016 02:12:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33301#comment:93</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33301#comment:93/1460254345294856</guid>
      <description>fixed: &lt;p&gt;
While I think it would be great to get the a11y change in, and while it's a very small change, I'm concerned that we haven't had enough testing with VoiceOver to be confident in this change so late in the cycle.
&lt;/p&gt;
&lt;p&gt;
I'm going to close this as fixed again and open a new ticket with @afercia's patch. Once we spend some more time testing, I think it can go into the next cycle and a minor release.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #32075 (Only set WP_MAX_MEMORY_LIMIT by default when its greater than memory_limit) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sun, 10 Apr 2016 02:06:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32075#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32075#comment:18/1460253976710412</guid>
      <description>&lt;p&gt;
@mensmaximus
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How usefull can it be to set WP_MAX_MEMORY_LIMIT to 256M by default if the allocated memory ( ini_get( 'memory_limit' ) ) is less than 256M?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The PHP &lt;code&gt;memory_limit&lt;/code&gt; ini value can be changed at runtime which is what this function tries to do.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What would happen if a plugin developer would rely on the constants value and this value exceeds the memory allocated by the server (and restricted by the hosting company)?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You can never rely on the changing at runtime to succeed. This function &lt;em&gt;*attempts*&lt;/em&gt; to raise the memory limit, there is no guarantee that it will. &lt;code&gt;ini_set()&lt;/code&gt; will return &lt;code&gt;false&lt;/code&gt; if it fails to change the value.
&lt;/p&gt;
&lt;p&gt;
As a plugin developer, you should only rely on the success of this if you have control of the server your plugin runs on. This will generally only be the case for one-off, custom plugins.
&lt;/p&gt;
&lt;p&gt;
In all other circumstances: if you get a lot of complaints from users about fatal errors related to memory usage, trying to lower the memory usage of your plugin is the safer (and better) practice.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Imho the WP_MAX_MEMORY_LIMIT constant should never report a larger amount of memory than the maximum allocatable memory.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
AFAIK there is no reliable way to find out the maximum allocatable memory on the server, so there is no way I can think of to take that into account when setting the constant, quite apart from the fact that the constant can be defined in &lt;code&gt;wp-config.php&lt;/code&gt; outside of our control.
&lt;/p&gt;
&lt;p&gt;
N.B.: There is a &lt;code&gt;memory_get_peak_usage( true )&lt;/code&gt; PHP function, but the output of this is AFAIK not reliable across all servers.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36173 (4.5 About Page) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 10 Apr 2016 02:02:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36173#comment:55</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36173#comment:55/1460253725820825</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37170" title="4.5 About Page, second round.
* Adjust text.
* Improve headings ..."&gt;37170&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
4.5 About Page, second round.&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Adjust text.
&lt;/li&gt;&lt;li&gt;Improve headings hierarchy.
&lt;/li&gt;&lt;li&gt;Add translation functions and translator comments throughout.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Props ocean90, afercia, ramiy, mikeschroder, mattfelten, helen. &lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36173" title="#36173: task (blessed): 4.5 About Page (closed: fixed)"&gt;#36173&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37170]: 4.5 About Page, second round.  * Adjust text. * Improve headings ...</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 10 Apr 2016 02:02:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37170</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37170/1460253724703642</guid>
      <description>&lt;p&gt;
4.5 About Page, second round.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Adjust text.
&lt;/li&gt;&lt;li&gt;Improve headings hierarchy.
&lt;/li&gt;&lt;li&gt;Add translation functions and translator comments throughout.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Props ocean90, afercia, ramiy, mikeschroder, mattfelten, helen.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36173" title="#36173: task (blessed): 4.5 About Page (closed: fixed)"&gt;#36173&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #28521 (FORCE_SSL constant for really forcing SSL) updated</title>
      
        <dc:creator>pcgeek86</dc:creator>

      <pubDate>Sun, 10 Apr 2016 01:22:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28521#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28521#comment:9/1460251377332553</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Any progress on this? It's really frustrating to do a fresh install of WordPress 4.4.2 and still see mixed content problems on the setup-config.php and install.php pages, not to mention all the other problems post-install.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36424 (graphically visualize if comments are closed (in wp-admin/edit.php)) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Sun, 10 Apr 2016 00:54:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36424#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36424#comment:8/1460249663648982</guid>
      <description>&lt;p&gt;
Latest brainstorming, at least it's working..
&lt;/p&gt;
&lt;p&gt;
I thought if we show a locked lock we can also switch to an open lock if comments are allowed. And why not change the boring mdash for a sexy X ? ;-)
Another interesting dashicon candidate would be 'dashicons-welcome-comments' (it is already used in the dashboard welcome panel):
&lt;a class="ext-link" href="https://developer.wordpress.org/resource/dashicons/#welcome-comments"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://developer.wordpress.org/resource/dashicons/#welcome-comments&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Still not sure about how to deal with translations here.
&lt;/p&gt;
&lt;p&gt;
And I ask myself where core ends and plugins territory begins.
&lt;/p&gt;
&lt;p&gt;
However, here something to play around:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;                // If comments are closed, show a lock then
                if ( ! comments_open( $post_id ) ) {
                        printf( '&amp;lt;span aria-hidden="true"&amp;gt;&amp;lt;span class="dashicons dashicons-lock"&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span class="screen-reader-text"&amp;gt;%s&amp;lt;/span&amp;gt;',
                                __( 'Comments are closed' )
                        );
                }
                // Comments are allowed, show open lock
                else {
                        printf( '&amp;lt;span aria-hidden="true"&amp;gt;&amp;lt;span class="dashicons dashicons-unlock"&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span class="screen-reader-text"&amp;gt;%s&amp;lt;/span&amp;gt;',
                                __( 'Comments are allowed' )
                        );
                }
                // No comments at all, show X icon instead of mdash
                if ( ! $approved_comments &amp;amp;&amp;amp; ! $pending_comments ) {
                        printf( '&amp;lt;span aria-hidden="true"&amp;gt;&amp;lt;span class="dashicons dashicons-no-alt"&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span class="screen-reader-text"&amp;gt;%s&amp;lt;/span&amp;gt;',
                                __( 'No comments' )
                        );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36457 (Customizer Device Preview: Use px units for tablet preview size) updated</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Sun, 10 Apr 2016 00:49:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36457#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36457#comment:3/1460249359663964</guid>
      <description>&lt;p&gt;
I think this would be better to fix in the first 4.5 minor release.
&lt;/p&gt;
&lt;p&gt;
It's a borderline between an enhancement "make sizes more consistent" and a bug "sizes can be wildly different". While it's a contained fix, I think it makes more sense to not worry about it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36173 (4.5 About Page) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sat, 09 Apr 2016 22:44:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36173#comment:54</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36173#comment:54/1460241845979648</guid>
      <description>&lt;p&gt;
Per @ocean90's suggestion, &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36173/36173.22.diff" title="Attachment '36173.22.diff' in Ticket #36173"&gt;36173.22.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36173/36173.22.diff" title="Download"&gt;â€‹&lt;/a&gt; is the same, but with "link" changed to "URL" in the translator's comment.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36173.22.diff attached to Ticket #36173</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sat, 09 Apr 2016 22:43:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36173/36173.22.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36173/36173.22.diff/1460241795203337</guid>
      <description>&lt;p&gt;
Changed 'link' to 'URL' in comment
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36173 (4.5 About Page) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 09 Apr 2016 22:35:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36173#comment:53</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36173#comment:53/1460241316868325</guid>
      <description>&lt;p&gt;
From an i18n point of view I support the change from &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36173#comment:49" title="Comment 49"&gt;comment:49&lt;/a&gt;. I'd only change "link" to "URL" in the comment.
Reading &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36173/36173.21.diff" title="Attachment '36173.21.diff' in Ticket #36173"&gt;36173.21.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36173/36173.21.diff" title="Download"&gt;â€‹&lt;/a&gt; and it looks good so far. Can't apply and verify the header changes because I'm mobile.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33301 (Create and edit links inline) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 09 Apr 2016 22:13:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33301#comment:92</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33301#comment:92/1460240014115501</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1460240010004349"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36173 (4.5 About Page) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 09 Apr 2016 22:13:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36173#comment:52</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36173#comment:52/1460240013886617</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1460240010004349"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36173 (4.5 About Page) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 09 Apr 2016 22:11:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36173#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36173#comment:51/1460239898932444</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Just to confirm, the merged patch 36173.21.diff is good to go here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36457 (Customizer Device Preview: Use px units for tablet preview size) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sat, 09 Apr 2016 21:43:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36457#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36457#comment:2/1460238180281881</guid>
      <description>&lt;p&gt;
Personal opinion is that it seems too late for this in 4.5, but interested in hearing if others think it's important to make this change now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36173 (4.5 About Page) updated</title>
      
        <dc:creator>dimadin</dc:creator>

      <pubDate>Sat, 09 Apr 2016 21:16:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36173#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36173#comment:50/1460236607833739</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36173#comment:49" title="Comment 49"&gt;mikeschroder&lt;/a&gt;:
Just now I was translating and wanted to propose this change as well. Good timing. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36173.21.2.diff attached to Ticket #36173</title>
      
        <dc:creator>dimadin</dc:creator>

      <pubDate>Sat, 09 Apr 2016 21:12:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36173/36173.21.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36173/36173.21.2.diff/1460236333081961</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36173 (4.5 About Page) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sat, 09 Apr 2016 21:12:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36173#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36173#comment:49/1460236320293586</guid>
      <description>&lt;p&gt;
Per feedback from @boonebgorges and @obenland, &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36173/36173.21.diff" title="Attachment '36173.21.diff' in Ticket #36173"&gt;36173.21.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36173/36173.21.diff" title="Download"&gt;â€‹&lt;/a&gt; changes "Preview mobile, tablet, and desktop views directly in the customizer." to be two strings -- one with a link, and one without.
&lt;/p&gt;
&lt;p&gt;
Tried to have this match up with the way this is done for Site Identity.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36173.21.diff attached to Ticket #36173</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sat, 09 Apr 2016 21:10:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36173/36173.21.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36173/36173.21.diff/1460236241503909</guid>
      <description>&lt;p&gt;
Duplicated string to avoid lone translatable "customizer" string as link.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36457 (Customizer Device Preview: Use px units for tablet preview size) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 09 Apr 2016 21:04:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36457#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36457#comment:1/1460235880392615</guid>
      <description>&lt;p&gt;
Additional note that the &lt;code&gt;720px&lt;/code&gt; size loosely aligns with the size at which the preview toggle buttons are no longer available, so that users wouldn't be able to switch to tablet mode once there's no difference between that and the preview as they see it (with the customizer controls expanded).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36457.diff attached to Ticket #36457</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 09 Apr 2016 21:02:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36457/36457.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36457/36457.diff/1460235765325393</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36457 (Customizer Device Preview: Use px units for tablet preview size) created</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 09 Apr 2016 21:02:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36457</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36457/1460235729088498</guid>
      <description>&lt;p&gt;
There is a lot of inconsistency with how different devices interpret &lt;code&gt;in&lt;/code&gt; units. They were originally used to provide ambiguity in the size of the preview to avoid themes designing specifically to the customizer breakpoints, but browsers and devices can also change they way these units are represented and that can be a jarring experience for users. Additionally, the tablet preview can become too similar to the mobile preview in the information it provides with respect to previewing a variety of device sizes.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1460233108004296"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://wordpress.slack.com/archives/core/p1460233108004296&lt;/a&gt;. Note: this issue is difficult to explain with screenshots due to the variation across devices, but a few are posted on slack at the above link.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36262 (Page Restore Autosave Not Working) updated</title>
      
        <dc:creator>jawad96</dc:creator>

      <pubDate>Sat, 09 Apr 2016 20:20:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36262#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36262#comment:4/1460233235073998</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36262#comment:3" title="Comment 3"&gt;adamsilverstein&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Ok, I will test again with revisions disabled this way, thanks for clearing that up. Be well!
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Cool, thanks. Let me know if you can also replicate on your end.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36262 (Page Restore Autosave Not Working) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sat, 09 Apr 2016 20:16:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36262#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36262#comment:3/1460233016162824</guid>
      <description>&lt;p&gt;
Ok, I will test again with revisions disabled this way, thanks for clearing that up. Be well!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36262 (Page Restore Autosave Not Working) updated</title>
      
        <dc:creator>jawad96</dc:creator>

      <pubDate>Sat, 09 Apr 2016 20:12:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36262#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36262#comment:2/1460232771557658</guid>
      <description>&lt;p&gt;
@adamsilverstein
&lt;/p&gt;
&lt;p&gt;
Sorry for the late reply. I have been very ill the past week and slowly getting on top of things. I have managed to replicate this issue again. Please add
&lt;/p&gt;
&lt;pre class="wiki"&gt;define('WP_POST_REVISIONS', false );
&lt;/pre&gt;&lt;p&gt;
to your wp-config.php. Of course this code is used to prevent Wordpress from creating revisions. But it seems to have an adverse affect on the autosave.
&lt;/p&gt;
&lt;p&gt;
Many Thanks,
Jawad
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36173 (4.5 About Page) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 09 Apr 2016 19:55:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36173#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36173#comment:48/1460231726676192</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1460231723004281"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33301 (Create and edit links inline) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 09 Apr 2016 19:55:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33301#comment:91</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33301#comment:91/1460231726503775</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1460231723004281"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36173 (4.5 About Page) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sat, 09 Apr 2016 19:48:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36173#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36173#comment:47/1460231305489331</guid>
      <description>&lt;p&gt;
Attached &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36173/36173.20.diff" title="Attachment '36173.20.diff' in Ticket #36173"&gt;36173.20.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36173/36173.20.diff" title="Download"&gt;â€‹&lt;/a&gt;, which combines 36173.17.diff, 36173.17.2.diff, 36173.18.diff, and 36173.19.diff for easy review. It also adds two titles for translation, so that we can get the strings in before freeze.
&lt;/p&gt;
&lt;p&gt;
Noticed that "It's really cool." does not have the period linked, even though the whole sentence is otherwise linked. I'm pretty Â¯\_(ãƒ„)_/Â¯ about whether it should be (and fine with it as it is, for consistency), but if someone thinks it should, feel free to say so.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36173.20.diff attached to Ticket #36173</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sat, 09 Apr 2016 19:46:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36173/36173.20.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36173/36173.20.diff/1460231170420210</guid>
      <description>&lt;p&gt;
Combined patches, added titles.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36173 (4.5 About Page) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 09 Apr 2016 18:49:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36173#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36173#comment:46/1460227799002079</guid>
      <description>&lt;p&gt;
Patch &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36173/36173.19.diff" title="Attachment '36173.19.diff' in Ticket #36173"&gt;36173.19.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36173/36173.19.diff" title="Download"&gt;â€‹&lt;/a&gt; changes the level of the headings inside the &lt;code&gt;.changelog&lt;/code&gt; section, adjusting CSS accordingly so there are no visual changes. This way, the headings hierarchy is a bit improved and reflects the 3 main groups on the screen, see screenshot:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/Lk6hvGcSs1.png"&gt;&lt;img src="https://cldup.com/Lk6hvGcSs1.png" alt="https://cldup.com/Lk6hvGcSs1.png" crossorigin="anonymous" title="https://cldup.com/Lk6hvGcSs1.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36173.19.diff attached to Ticket #36173</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 09 Apr 2016 18:47:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36173/36173.19.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36173/36173.19.diff/1460227625412777</guid>
      <description>&lt;p&gt;
better headings hierarchy
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36392 (wp_add_inline_script() breaks script dependency order when using ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 09 Apr 2016 18:12:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36392#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36392#comment:36/1460225540839762</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1460225536004268"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36456 (oEmbeds containing Emojis aren't cached if the meta_value column's ...) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Sat, 09 Apr 2016 17:50:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36456#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36456#comment:2/1460224215321216</guid>
      <description>&lt;p&gt;
We could additionally look at the &lt;code&gt;$cache&lt;/code&gt; value to see if &lt;code&gt;$cachekey&lt;/code&gt; already exists.
&lt;/p&gt;
&lt;p&gt;
The two updated suggestions are now:
&lt;/p&gt;
&lt;p&gt;
1)
&lt;/p&gt;
&lt;pre class="wiki"&gt;// Maybe cache the result
if ( $html ) {
    $updated_cachekey = update_post_meta( $post_ID, $cachekey, $html );
    if( ! $updated_cachekey &amp;amp;&amp;amp; ! $cache ) {
        update_post_meta( $post_ID, $cachekey, '{{unknown}}' );
    }
    update_post_meta( $post_ID, $cachekey_time, time() );
} elseif ( ! $cache ) {
    update_post_meta( $post_ID, $cachekey, '{{unknown}}' );
}
&lt;/pre&gt;&lt;p&gt;
or 2)
&lt;/p&gt;
&lt;pre class="wiki"&gt;// Maybe cache the result
if ( $html ) {
    global $wpdb;
    // Encode Emojis if the charset of the meta_value column is 'utf8' instead of 'utf8mb4'
    if (    method_exists( $wpdb, 'get_col_charset' )
         &amp;amp;&amp;amp; 'utf8' === $wpdb-&amp;gt;get_col_charset( $wpdb-&amp;gt;postmeta, 'meta_value' )
         &amp;amp;&amp;amp; function_exists( 'wp_encode_emoji' )
    ) {
        $html = wp_encode_emoji( $html );
    }
    $updated_cachekey = update_post_meta( $post_ID, $cachekey, $html );
    if( ! $updated_cachekey &amp;amp;&amp;amp; ! $cache ) {
        update_post_meta( $post_ID, $cachekey, '{{unknown}}' );
    }
    update_post_meta( $post_ID, $cachekey_time, time() );
} elseif ( ! $cache ) {
    update_post_meta( $post_ID, $cachekey, '{{unknown}}' );
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33301 (Create and edit links inline) reopened</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 09 Apr 2016 16:54:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33301#comment:90</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33301#comment:90/1460220897063796</guid>
      <description>&lt;p&gt;
Reopen for a quick consideration of the accessibility fix.
&lt;/p&gt;
&lt;p&gt;
33301.voiceover.diff looks good here. I can't think of anything that might break by adding/removing another attribute on the selected UI Autocomplete menu item, but at the other hand... 3 days before release? :)
&lt;/p&gt;
&lt;p&gt;
+1 from me anyway.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #33301 (Create and edit links inline) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 09 Apr 2016 16:07:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33301#comment:89</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33301#comment:89/1460218053664449</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1460218051000469"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36173 (4.5 About Page) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 09 Apr 2016 16:02:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36173#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36173#comment:45/1460217767798806</guid>
      <description>&lt;p&gt;
For clarity, 36173.17.diff and 36173.17.2.diff are unrelated. It just happened they were renamed this way because they were uploaded in the exact, same, time.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33301 (Create and edit links inline) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 09 Apr 2016 15:56:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33301#comment:88</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33301#comment:88/1460217396295629</guid>
      <description>&lt;p&gt;
In my testing, &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/33301/33301.voiceover.diff" title="Attachment '33301.voiceover.diff' in Ticket #33301"&gt;33301.voiceover.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/33301/33301.voiceover.diff" title="Download"&gt;â€‹&lt;/a&gt; makes Safari + VoiceOver read out the autocomplete items. Would greatly appreciate some testing and a JS review, couldn't find a cleaner way to remove the &lt;code&gt;aria-selected&lt;/code&gt; attribute.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>33301.voiceover.diff attached to Ticket #33301</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 09 Apr 2016 15:53:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33301/33301.voiceover.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33301/33301.voiceover.diff/1460217218572218</guid>
      <description>&lt;p&gt;
a11y help for VoiceOver
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33301 (Create and edit links inline) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 09 Apr 2016 15:42:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33301#comment:87</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33301#comment:87/1460216549140064</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1460216545004234"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36173 (4.5 About Page) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 09 Apr 2016 15:39:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36173#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36173#comment:44/1460216397189546</guid>
      <description>&lt;p&gt;
All three patches: 36173.17.diff, 36173.17.2.diff, and 36173.18.diff look good.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36392 (wp_add_inline_script() breaks script dependency order when using ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 09 Apr 2016 15:17:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36392#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36392#comment:35/1460215030012440</guid>
      <description>&lt;p&gt;
36392.2.diff looks good here.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I got rid of the extra disable_concat property
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yep, &lt;code&gt;do_concat&lt;/code&gt; can be reused for this. I mostly added another "toggle" as if it is local (at the top of &lt;code&gt;WP_Scripts::do_item()&lt;/code&gt;) it will act as a "break" in concatenating. That would make it work as described above: concat scripts as usual, when there is a script with "before" or "after", output all already concatenated scripts, then output the current script with the extras, and after that continue concatenating. That was actually the initial patch, perhaps something to try next release :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Since nobody seems to be in favor of reverting the feature...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm actually 51/49 for 36392.2.diff vs. reverting at the moment. That change may still bring regression(s) somewhere. Hoping today more people will look, test, push it, etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36173 (4.5 About Page) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sat, 09 Apr 2016 14:52:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36173#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36173#comment:43/1460213562028025</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36173/36173.18.diff" title="Attachment '36173.18.diff' in Ticket #36173"&gt;36173.18.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36173/36173.18.diff" title="Download"&gt;â€‹&lt;/a&gt;: Removing unneeded i18n &lt;code&gt;__()&lt;/code&gt; function.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36173.18.diff attached to Ticket #36173</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sat, 09 Apr 2016 14:50:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36173/36173.18.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36173/36173.18.diff/1460213446124788</guid>
      <description>&lt;p&gt;
remove &lt;span class="underline"&gt;() function, it's not a translation string
&lt;/span&gt;&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35805 (Reverse page order in wp_list_comments() with newest comments first) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 09 Apr 2016 14:11:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35805#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35805#comment:8/1460211073251258</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35805#comment:7" title="Comment 7"&gt;Ninos Ego&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Will this bug be fixed in new version 4.5? :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No, unfortunately. I haven't yet been able to find a suitable solution. If you have ideas, please feel free to post them here. Otherwise we'll try for 4.6.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35805 (Reverse page order in wp_list_comments() with newest comments first) updated</title>
      
        <dc:creator>Ninos Ego</dc:creator>

      <pubDate>Sat, 09 Apr 2016 13:57:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35805#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35805#comment:7/1460210257993790</guid>
      <description>&lt;p&gt;
Will this bug be fixed in new version 4.5? :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36392 (wp_add_inline_script() breaks script dependency order when using ...) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 09 Apr 2016 13:22:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36392#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36392#comment:34/1460208128691657</guid>
      <description>&lt;p&gt;
@jeremyfelt Nice catch, thanks. Thought we had a test for this so I haven't checked that explicit.
&lt;/p&gt;
&lt;p&gt;
Since nobody seems to be in favor of reverting the feature (What a surprise. ;)) &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36392/36392.diff" title="Attachment '36392.diff' in Ticket #36392"&gt;36392.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36392/36392.diff" title="Download"&gt;â€‹&lt;/a&gt; looks like the only way to keep &lt;code&gt;wp_add_inline_script()&lt;/code&gt; without a major refactoring to support adding scripts to core dependencies.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36392/36392.2.diff" title="Attachment '36392.2.diff' in Ticket #36392"&gt;36392.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36392/36392.2.diff" title="Download"&gt;â€‹&lt;/a&gt; is the same as &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36392/36392.diff" title="Attachment '36392.diff' in Ticket #36392"&gt;36392.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36392/36392.diff" title="Download"&gt;â€‹&lt;/a&gt; but with more descriptive method names and two more scripts for the last test.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36392.2.diff attached to Ticket #36392</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 09 Apr 2016 12:58:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36392/36392.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36392/36392.2.diff/1460206726380713</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33301 (Create and edit links inline) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 09 Apr 2016 12:26:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33301#comment:86</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33301#comment:86/1460204782932951</guid>
      <description>&lt;p&gt;
About the issue with Safari, I've recently had the opportunity to test using Safari+VoiceOver and noticed the Twitter search suggestion (which perfectly works) sets an &lt;code&gt;aria-selected="true"&lt;/code&gt; on the highlighted option item. Quickly tried that and it seems it makes Safari understand what's going on, finally the autocomplete items get read out. Need to build a clean patch and test a lot but we're probably on the right track now :)
&lt;/p&gt;
&lt;p&gt;
Can confirm that in Safari after Cmd+K the focus goes forth and back from the Editor to the combobox 2-3 times, sometimes it lands on the search field, sometimes not. Couldn't reproduce consistently.
Please consider I'm a newbie with VoiceOver, but I've noticed this focus "jump" doesn't happen when I diligently follow VoiceOver instructions telling me: "To enter the web area, press Control-Option-Shift-Down Arrow". After this, everything works nicely. Would greatly appreciate some feedback from VoiceOver experienced users, specifically if pressing "Control-Option-Shift-Down Arrow" enters a sort of "forms mode" and affects how JavaScript keyboard events behave. @MarcoZ any thoughts? When you have a chance! Thanks very much :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36424 (graphically visualize if comments are closed (in wp-admin/edit.php)) updated</title>
      
        <dc:creator>pixelverbieger</dc:creator>

      <pubDate>Sat, 09 Apr 2016 11:35:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36424#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36424#comment:7/1460201750773584</guid>
      <description>&lt;p&gt;
I think comments in trash should not count.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36424 (graphically visualize if comments are closed (in wp-admin/edit.php)) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Sat, 09 Apr 2016 11:32:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36424#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36424#comment:6/1460201539958945</guid>
      <description>&lt;p&gt;
This is a little more complicated than I thought. My code above is rubbish :)
&lt;/p&gt;
&lt;p&gt;
I think we need to use st. like
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;if ( ! comments_open( $post_id ) &amp;amp;&amp;amp; ( empty(wp_count_comments( $post_id )-&amp;gt;total_comments))) {
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
What about comments in trash? Do they count?
&lt;/p&gt;
&lt;p&gt;
We could divide this into many cases, but it could also lead to an overkill.
&lt;/p&gt;
&lt;p&gt;
I'll wait now for some reaction of someone who understands more than I.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35288 (Search Engines Discouraged message improvements) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 09 Apr 2016 11:26:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35288#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35288#comment:5/1460201198268769</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35288#comment:4" title="Comment 4"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It's worth noting that Google may still index sites even though it's blocked by robots.txt.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yep. Bad, bad, bots :) Crawlers are not required to honor this directive, so saying "not accessible" wouldn't be so correct. A while ago I've also looked at all the history of this message and all the past discussions and that's the reason why the text was changed from &lt;code&gt;Search Engines Blocked&lt;/code&gt; to &lt;code&gt;Search Engines Discouraged&lt;/code&gt;.
I'd stick with a minimal approach and just remove the capitalization and make the message visually more evident since now it's just a line of text surrounded by other text.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36456 (oEmbeds containing Emojis aren't cached if the meta_value column's ...) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Sat, 09 Apr 2016 11:18:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36456#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36456#comment:1/1460200737040260</guid>
      <description>&lt;p&gt;
ps: regarding the two suggestions above, it looks like I forgot that &lt;code&gt;update_post_meta&lt;/code&gt; also returns &lt;code&gt;false&lt;/code&gt; when trying to update the same existing meta value. So we need to take that into account as well ;-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36173 (4.5 About Page) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 09 Apr 2016 11:16:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36173#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36173#comment:42/1460200593508622</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1460200590000463"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36424 (graphically visualize if comments are closed (in wp-admin/edit.php)) updated</title>
      
        <dc:creator>pixelverbieger</dc:creator>

      <pubDate>Sat, 09 Apr 2016 11:14:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36424#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36424#comment:5/1460200454117660</guid>
      <description>&lt;p&gt;
+1 for showing both number and lock
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35288 (Search Engines Discouraged message improvements) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 09 Apr 2016 11:11:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35288#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35288#comment:4/1460200299214711</guid>
      <description>&lt;p&gt;
It's worth noting that Google may still index sites even though it's blocked by robots.txt. It just shows a little message in the search results:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
A description for this result is not available because of this site's robots.txt â€“ learn more.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36173 (4.5 About Page) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 09 Apr 2016 11:08:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36173#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36173#comment:41/1460200085502704</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36173 (4.5 About Page) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 09 Apr 2016 11:04:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36173#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36173#comment:40/1460199883572058</guid>
      <description>&lt;p&gt;
The headings would need some love, looks like they're used for visual purposes. The result is the "Under the Hood" heading and its sub-headings are hierarchically below "Customization Improvements". Two possible options:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;change all the headings highlighed in the screenshot and move them one level up
&lt;/li&gt;&lt;li&gt;or change all the other headings (except Welcome and What's New) moving them one level down
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/debvp0w5k4.png"&gt;&lt;img src="https://cldup.com/debvp0w5k4.png" alt="https://cldup.com/debvp0w5k4.png" crossorigin="anonymous" title="https://cldup.com/debvp0w5k4.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36173 (4.5 About Page) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 09 Apr 2016 10:58:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36173#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36173#comment:39/1460199509978797</guid>
      <description>&lt;p&gt;
Uh we uploaded a patch in the same exact moment? @ocean90 :) Anyways, the four images in the screen are just "decorative" images, no need to describe their content but they would need at least an empty alt attribute. See &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36173/36173.17.2.diff" title="Attachment '36173.17.2.diff' in Ticket #36173"&gt;36173.17.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36173/36173.17.2.diff" title="Download"&gt;â€‹&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36456 (oEmbeds containing Emojis aren't cached if the meta_value column's ...) created</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Sat, 09 Apr 2016 10:56:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36456</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36456/1460199360998800</guid>
      <description>&lt;p&gt;
oEmbeds (e.g. Instagram, Twitter, ... ) that contains Emojis aren't cached in the &lt;code&gt;wp_postmeta&lt;/code&gt; table, if the &lt;code&gt;meta_value&lt;/code&gt; column's charset is reported as &lt;code&gt;utf8&lt;/code&gt; and not &lt;code&gt;utf8mb4&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This means that &lt;code&gt;wp_oembed_get()&lt;/code&gt; is called for every such embed on each page load.
&lt;/p&gt;
&lt;p&gt;
Here's an example of an Instagram containing an Emoji:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://www.instagram.com/p/_cj9NXvhrh/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://www.instagram.com/p/_cj9NXvhrh/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
where only the:
&lt;/p&gt;
&lt;pre class="wiki"&gt;_oembed_time_02ba39bcc45811ad672a288b772ca9a2
&lt;/pre&gt;&lt;p&gt;
is written to the &lt;code&gt;wp_postmeta&lt;/code&gt; table but not
&lt;/p&gt;
&lt;pre class="wiki"&gt;_oembed_02ba39bcc45811ad672a288b772ca9a2
&lt;/pre&gt;&lt;p&gt;
containing the cached oEmbed content.
&lt;/p&gt;
&lt;p&gt;
I just noticed this for a site with a shared database server with MySQL version &amp;lt; 5.5.3.
&lt;/p&gt;
&lt;p&gt;
In the &lt;code&gt;WP_Embed::shortcode()&lt;/code&gt; method we have following:
&lt;/p&gt;
&lt;pre class="wiki"&gt;// Maybe cache the result
if ( $html ) {
	update_post_meta( $post_ID, $cachekey, $html );
	update_post_meta( $post_ID, $cachekey_time, time() );
} elseif ( ! $cache ) {
	update_post_meta( $post_ID, $cachekey, '{{unknown}}' );
}
&lt;/pre&gt;&lt;p&gt;
This doesn't take care of the situation when &lt;code&gt;update_postmeta()&lt;/code&gt; fails to write to the database.
&lt;/p&gt;
&lt;p&gt;
For new meta inserts it uses:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$result = $wpdb-&amp;gt;insert( $table, array(
        $column =&amp;gt; $object_id,
        'meta_key' =&amp;gt; $meta_key,
        'meta_value' =&amp;gt; $meta_value
    ) );
&lt;/pre&gt;&lt;p&gt;
This is a wrapper for:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wpdb::_insert_replace_helper()
&lt;/pre&gt;&lt;p&gt;
that contains this part:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$data = $this-&amp;gt;process_fields( $table, $data, $format );
if ( false === $data ) {
    return false;
}
&lt;/pre&gt;&lt;p&gt;
And similarly within &lt;code&gt;wpdb::process_fields()&lt;/code&gt; we have:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$converted_data = $this-&amp;gt;strip_invalid_text( $data );
if ( $data !== $converted_data ) {
    return false;
}
&lt;/pre&gt;&lt;p&gt;
and this can return &lt;code&gt;false&lt;/code&gt; for some data conversions.
&lt;/p&gt;
&lt;h2 id="Example"&gt;Example&lt;/h2&gt;
&lt;p&gt;
We can test this with a simple example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;update_post_meta( 123, 'test', 'Smile ????' );
&lt;/pre&gt;&lt;p&gt;
that returns &lt;code&gt;false&lt;/code&gt; if:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$wpdb-&amp;gt;get_col_charset( $wpdb-&amp;gt;postmeta, 'meta_value' )
&lt;/pre&gt;&lt;p&gt;
returns &lt;code&gt;'utf8'&lt;/code&gt; and not &lt;code&gt;'utf8mb4'&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
In this case nothing is written to the &lt;code&gt;wp_postmeta&lt;/code&gt; table.
&lt;/p&gt;
&lt;h2 id="Workaround"&gt;Workaround&lt;/h2&gt;
&lt;p&gt;
Here's what I constructed as a temporary workaround:
&lt;/p&gt;
&lt;pre class="wiki"&gt;/**
 * Encode Emojis in all oembed results, if the charset for the meta_value column is utf8.
 */
add_filter( 'oembed_result', function( $html, $url, $args ) use ( $wpdb )
{
	/**
	 * For WordPress 4.2+ where the get_col_charset method and wp_encode_emoji function where introduced.
	 * The charset check is based on the https://codex.wordpress.org/Function_Reference/wp_encode_emoji#Example
	 */
	if (   method_exists( $wpdb, 'get_col_charset' )
		 &amp;amp;&amp;amp; 'utf8' === $wpdb-&amp;gt;get_col_charset( $wpdb-&amp;gt;postmeta, 'meta_value' )
	 )
		$html = wp_encode_emoji( $html );
	return $html;
}, 10, 3 );
&lt;/pre&gt;&lt;h2 id="Suggestions"&gt;Suggestions&lt;/h2&gt;
&lt;p&gt;
I see two possibilities to rewrite this part:
&lt;/p&gt;
&lt;pre class="wiki"&gt;// Maybe cache the result
if ( $html ) {
	update_post_meta( $post_ID, $cachekey, $html );
	update_post_meta( $post_ID, $cachekey_time, time() );
} elseif ( ! $cache ) {
	update_post_meta( $post_ID, $cachekey, '{{unknown}}' );
}
&lt;/pre&gt;&lt;p&gt;
to fix the caching.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Suggestion 1)&lt;/strong&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;// Maybe cache the result
if ( $html ) {
    $updated_cachekey = update_post_meta( $post_ID, $cachekey, $html );
    if( $updated_cachekey ) {
        update_post_meta( $post_ID, $cachekey_time, time() );
     } else {
        update_post_meta( $post_ID, $cachekey, '{{unknown}}' );
     }
 } elseif ( ! $cache ) {
     update_post_meta( $post_ID, $cachekey, '{{unknown}}' );
 }
&lt;/pre&gt;&lt;p&gt;
This means that only the link will show up if &lt;code&gt;$updated_cachekey&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; and the cache key for the time isn't written to the db as well.
&lt;/p&gt;
&lt;p&gt;
We could also rewrite this to only contain a single &lt;code&gt;update_post_meta()&lt;/code&gt; call.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Suggestion 2)&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
We could also extend 1) to encode the Emojis if needed:
&lt;/p&gt;
&lt;pre class="wiki"&gt;// Maybe cache the result
if ( $html ) {
    // Encode Emojis if the charset of the meta_value column is 'utf8'
    if (    method_exists( $wpdb, 'get_col_charset' )
         &amp;amp;&amp;amp; 'utf8' === $wpdb-&amp;gt;get_col_charset( $wpdb-&amp;gt;postmeta, 'meta_value' )
         &amp;amp;&amp;amp; function_exists( 'wp_encode_emoji' )
    ) {
        $html = wp_encode_emoji( $html );
    }
    $updated_cachekey = update_post_meta( $post_ID, $cachekey, $html );
    if( $updated_cachekey ) {
        update_post_meta( $post_ID, $cachekey_time, time() );
     } else {
        update_post_meta( $post_ID, $cachekey, '{{unknown}}' );
     }
 } elseif ( ! $cache ) {
     update_post_meta( $post_ID, $cachekey, '{{unknown}}' );
 }
&lt;/pre&gt;&lt;p&gt;
where we encode the Emojis when the meta_value column's charset is utf8. The method/function checks would be needed since they are only available in WP 4.2+.
&lt;/p&gt;
&lt;p&gt;
This should give us the cached content instead of only the link.
&lt;/p&gt;
&lt;p&gt;
PS: For the above case the Query Monitor plugin reports 4 HTTP GET requests for a single instagram oEmbed url, that contains an Emoji.
&lt;/p&gt;
&lt;p&gt;
Example:
&lt;/p&gt;
&lt;p&gt;
For &lt;a class="ext-link" href="https://www.instagram.com/p/_cj9NXvhrh/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://www.instagram.com/p/_cj9NXvhrh/&lt;/a&gt; they are:
&lt;/p&gt;
&lt;pre class="wiki"&gt;https://api.instagram.com/oembed
?maxwidth=640
&amp;amp;maxheight=960
&amp;amp;url=https%3A%2F%2Fwww.instagram.com%2Fp%2F_cj9NXvhrh%2F
&amp;amp;format=json
https://api.instagram.com/publicapi/oembed/
?maxwidth=640
&amp;amp;maxheight=960
&amp;amp;url=https%3A%2F%2Fwww.instagram.com%2Fp%2F_cj9NXvhrh%2F
&amp;amp;format=json
https://www.instagram.com/publicapi/oembed/
?maxwidth=640
&amp;amp;maxheight=960
&amp;amp;url=https://www.instagram.com/p/_cj9NXvhrh/
&amp;amp;format=json
https://api.instagram.com/oembed/
?maxwidth=640
&amp;amp;maxheight=960
&amp;amp;url=https://www.instagram.com/p/_cj9NXvhrh/
&amp;amp;format=json
&lt;/pre&gt;&lt;p&gt;
I'm not sure why but I only get a single request for a Twitter oEmbed containing Emojis.
&lt;/p&gt;
&lt;p&gt;
PPS: Sorry for the long post.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36173 (4.5 About Page) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 09 Apr 2016 10:55:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36173#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36173#comment:38/1460199340160738</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36173/36173.17.diff" title="Attachment '36173.17.diff' in Ticket #36173"&gt;36173.17.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36173/36173.17.diff" title="Download"&gt;â€‹&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Add translators comments
&lt;/li&gt;&lt;li&gt;Fix typo, Customizer -&amp;gt; customizer
&lt;/li&gt;&lt;li&gt;Fix use of add_query_arg(), see &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/31427" title="Escape Customizer links in the admin menu. Fix usage of ..."&gt;[31427]&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Escape late
&lt;/li&gt;&lt;li&gt;Copy tagline to credits.php and freedom.php
&lt;/li&gt;&lt;li&gt;Move &lt;code&gt;wp_add_inline_script()&lt;/code&gt; out of translatable string
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>36173.17.2.diff attached to Ticket #36173</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 09 Apr 2016 10:55:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36173/36173.17.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36173/36173.17.2.diff/1460199329557247</guid>
      <description>&lt;p&gt;
missing alt attributes
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>36173.17.diff attached to Ticket #36173</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 09 Apr 2016 10:54:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36173/36173.17.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36173/36173.17.diff/1460199289792499</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36424 (graphically visualize if comments are closed (in wp-admin/edit.php)) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Sat, 09 Apr 2016 10:47:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36424#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36424#comment:4/1460198829255516</guid>
      <description>&lt;p&gt;
I had a night to think about it. What if there is at least 1 comment AND comments are closed. Do we show the 'comments closed' sign or do we show the bubble with the number? Or both??
&lt;/p&gt;
&lt;p&gt;
The other thing is the line for screen reader - "Comments are closed." seems to be the standard throwout in this case inside WP and not just "Comments closed".
I'm not sure about if a new line for translation is needed here, or if it gets done when we use "Comments are closed" - and what about the dot at the end of the string? "Comments are closed." Is it needed or not?
&lt;/p&gt;
&lt;p&gt;
This is showing the lock only when there also are no comments:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;                // Comments are closed, show a lock then - Translation needed
                if ( ! comments_open( $post_id ) &amp;amp;&amp;amp; ( ! wp_count_comments( $post_id ))) {
                        printf( '&amp;lt;span aria-hidden="true"&amp;gt;&amp;lt;span class="dashicons dashicons-lock"&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span class="screen-reader-text"&amp;gt;%s&amp;lt;/span&amp;gt;',
                                __( 'Comments are closed' )
                        );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35854 (XML Parsing Error) updated</title>
      
        <dc:creator>ingstra</dc:creator>

      <pubDate>Sat, 09 Apr 2016 10:35:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35854#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35854#comment:6/1460198102465886</guid>
      <description>&lt;p&gt;
Hello.
&lt;/p&gt;
&lt;p&gt;
Is there any progress on this matter? A friend who is more well versed in these areas than I am suggests the use of numerical entities instead.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36392 (wp_add_inline_script() breaks script dependency order when using ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 09 Apr 2016 10:30:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36392#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36392#comment:33/1460197855546191</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36392/36392.diff" title="Attachment '36392.diff' in Ticket #36392"&gt;36392.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36392/36392.diff" title="Download"&gt;â€‹&lt;/a&gt; I iterated on the latest patch to fix the unit tests. Afterwards, I got rid of the extra &lt;code&gt;disable_concat &lt;/code&gt; property and the tests still ran properly.
&lt;/p&gt;
&lt;p&gt;
Feedback appreciated.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36392.diff attached to Ticket #36392</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 09 Apr 2016 10:27:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36392/36392.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36392/36392.diff/1460197638845959</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36455 (Call opcache_reset() after plug-in, theme or core update) created</title>
      
        <dc:creator>nigro.simone</dc:creator>

      <pubDate>Sat, 09 Apr 2016 09:14:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36455</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36455/1460193242682174</guid>
      <description>&lt;p&gt;
wordpress it seem not reset Zend OpCache after plug-in, theme or core are updated.
&lt;/p&gt;
&lt;p&gt;
For solve this issue i have set in the php.ini
&lt;/p&gt;
&lt;pre class="wiki"&gt;opcache.validate_timestamps=1
&lt;/pre&gt;&lt;p&gt;
all work correctly but validate_timestamps when it's enabled, PHP will check the file timestamp each request with a performance degradation. When it's disabled, PHP files are NEVER checked for updated code. When wordpress updating code, new code files can get mixed with old ones, the results are unknown. It's unsafe as hell.
&lt;/p&gt;
&lt;p&gt;
Why wordpress not perform an opcache_reset() after each update if opcache is active and opcache.validate_timestamps is false?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36392 (wp_add_inline_script() breaks script dependency order when using ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 09 Apr 2016 08:54:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36392#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36392#comment:32/1460192066912966</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by azaozz. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1460192064004214"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36392 (wp_add_inline_script() breaks script dependency order when using ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 09 Apr 2016 08:48:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36392#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36392#comment:31/1460191728579737</guid>
      <description>&lt;p&gt;
Think I figured it out. To be able to control when scripts tags are printed we would need to append all tags (strings) to another var inside $wp_scripts including the tag(s) with the concatenated scripts.
&lt;/p&gt;
&lt;p&gt;
Currently we are echoing these tags directly from $wp_scripts::do_item(), but "holding" the scripts that can be concatenated to the very end. That's why any script that has "before" or "after" is always printed above the concatenated scripts.
&lt;/p&gt;
&lt;p&gt;
Making new var to hold all script tags until the end (instead of echoing) seems straightforward, but thinking even a small risk of introducing regressions it too much at this point.
&lt;/p&gt;
&lt;p&gt;
In 36392.7.patch: when concatenating scripts if "before" or "after" is set, stop concatenating and output all already processed scripts right away. This basically turns off concatenating when a plugin sets "before" or "after" on a core script, however keeps the already concatenated scripts.
&lt;/p&gt;
&lt;p&gt;
The tests need fixing since now we echo from do_item() (getting too late here, will look tomorrow). Of course, more eyes welcome :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36392.7.patch attached to Ticket #36392</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 09 Apr 2016 08:27:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36392/36392.7.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36392/36392.7.patch/1460190460563719</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36454 (Post Status Transition hook error if title contains quotes or special chars) created</title>
      
        <dc:creator>mikylucky</dc:creator>

      <pubDate>Sat, 09 Apr 2016 07:04:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36454</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36454/1460185458349101</guid>
      <description>&lt;p&gt;
Hi,
this is my fist bug report, so I hope doing it well :D
I think i found a bug.
I wrote a plugin which uses the 'draft_to_publish' hook. It usually works well, but I have some problems if the post title contains quotes or special chars.
Going more specific, I access the post with "$post = get_post($id)" inside my function, but if I try to access the post title with "$post-&amp;gt;post_title" it gives me an empty string.
Moreover, this is very strange, if I use $wpdb-&amp;gt;insert(), $wpdb-&amp;gt;insert_id results null even if the insert is correctly executed.
If the title does not contains quotes or special chars all works well
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36173 (4.5 About Page) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 09 Apr 2016 06:22:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36173#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36173#comment:37/1460182940009728</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37169" title="4.5 About screen.
Props mikeschroder, melchoyce, ocean90, ryelle, ..."&gt;37169&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
4.5 About screen.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props mikeschroder, melchoyce, ocean90, ryelle, jeremyfelt, Ipstenu, celloexpressions, DrewAPicture.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36173" title="#36173: task (blessed): 4.5 About Page (closed: fixed)"&gt;#36173&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37169]: 4.5 About screen.  Props mikeschroder, melchoyce, ocean90, ryelle, ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 09 Apr 2016 06:22:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37169</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37169/1460182938359191</guid>
      <description>&lt;p&gt;
4.5 About screen.
&lt;/p&gt;
&lt;p&gt;
Props mikeschroder, melchoyce, ocean90, ryelle, jeremyfelt, Ipstenu, celloexpressions, DrewAPicture.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36173" title="#36173: task (blessed): 4.5 About Page (closed: fixed)"&gt;#36173&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36392 (wp_add_inline_script() breaks script dependency order when using ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 09 Apr 2016 05:24:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36392#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36392#comment:30/1460179477329408</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
One way to implement this is to add load-scripts.php?â€¦ via $wp_scripts-&amp;gt;add(â€¦) multiple times.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right. However that will make calculating the dependencies pretty complex. We will probably need to be able to go back and re-calculate things when a previously enqueued dependency has to be moved to another "chain" of concatenated scripts.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I explored many options today and everything eventually comes back to this. HTTP/2 is an argument as well.
&lt;/p&gt;
&lt;p&gt;
However, are we confident in disabling concatenating in this case? Will this confuse developers expecting concatenated scripts all the time?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
On a "script heavy" wp-admin screens this will probably be noticeable. However don't think we have much choice. If we want granular control, concatenating will be in the way. Even if we implement multiple calls to load-scripts.php, chances are several scripts will have "before" or "after" and we will end up with 3, 4, 5... different concatenated "pieces", making it quite less effective. (Generally the concatenated scripts are different for each wp-admin screen, so they aren't cached in the browser very often. Single scripts are the same on every screen so caching happens more frequently.)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Printing them individually is a sane way to maintain that control and is what we should be thinking about for HTTP/2.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36173 (4.5 About Page) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 09 Apr 2016 05:21:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36173#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36173#comment:36/1460179287046170</guid>
      <description>&lt;p&gt;
Reviewed .15 at @mikeschroder's request. I've improved the Selective Refresh and Script Loader descriptions to better follow description style for the About page, and to actually have subjects. The selective refresh string doesn't extend beyond 4 lines and the the script loader string doesn't extend beyond 2.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36173/36173.16.diff" title="Attachment '36173.16.diff' in Ticket #36173"&gt;36173.16.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36173/36173.16.diff" title="Download"&gt;â€‹&lt;/a&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;strong&gt;Selective Refresh&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
The customizer now supports a &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36173" title="#36173: task (blessed): 4.5 About Page (closed: fixed)"&gt;comprehensive framework&lt;/a&gt; for rendering parts of the preview without rewriting your PHP code in JavaScript. See it in action with &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36173" title="#36173: task (blessed): 4.5 About Page (closed: fixed)"&gt;Menus&lt;/a&gt; or &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36173" title="#36173: task (blessed): 4.5 About Page (closed: fixed)"&gt;Widgets&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;strong&gt;Script Loader Improvements&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Better support has been added for script header/footer dependencies. New &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36173" title="#36173: task (blessed): 4.5 About Page (closed: fixed)"&gt;wp_add_inline_script()&lt;/a&gt; enables adding extra code to registered scripts.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36173.16.diff attached to Ticket #36173</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 09 Apr 2016 05:16:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36173/36173.16.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36173/36173.16.diff/1460178974424678</guid>
      <description>&lt;p&gt;
Improved selective refresh and script loader strings
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11863 (Trashed items interfere with page/post slug generation) closed</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Sat, 09 Apr 2016 04:41:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11863#comment:151</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11863#comment:151/1460176890325433</guid>
      <description>fixed: &lt;blockquote class="citation"&gt;
&lt;p&gt;
Thinking about this a little further...I wonder if this is useful in some cases, like BBPress, where trashed posts are visible on the front-end
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I stand by this logic and think this is desirable behavior. Closing this, please open new tickets for any bugs.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #11863 (Trashed items interfere with page/post slug generation) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sat, 09 Apr 2016 04:27:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11863#comment:150</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11863#comment:150/1460176034072351</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11863 (Trashed items interfere with page/post slug generation) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 09 Apr 2016 04:26:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11863#comment:149</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11863#comment:149/1460175961704586</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1460175959004185"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36173 (4.5 About Page) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sat, 09 Apr 2016 04:23:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36173#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36173#comment:35/1460175806807594</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>36173.15.diff attached to Ticket #36173</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sat, 09 Apr 2016 04:19:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36173/36173.15.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36173/36173.15.diff/1460175576151120</guid>
      <description>&lt;p&gt;
Takes leading spaces out of translatable text.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>36173.14.diff attached to Ticket #36173</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 09 Apr 2016 03:22:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36173/36173.14.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36173/36173.14.diff/1460172174312362</guid>
      <description>&lt;p&gt;
Check for partial refresh support for widgets if showing the widgets link.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36173 (4.5 About Page) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 09 Apr 2016 03:12:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36173#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36173#comment:34/1460171572670303</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36173/36173.13.diff" title="Attachment '36173.13.diff' in Ticket #36173"&gt;36173.13.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36173/36173.13.diff" title="Download"&gt;â€‹&lt;/a&gt; cleans up the customize links and their conditionals - I think this part is good to go now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11863 (Trashed items interfere with page/post slug generation) reopened</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Sat, 09 Apr 2016 03:05:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11863#comment:148</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11863#comment:148/1460171105878305</guid>
      <description>&lt;p&gt;
Will take a look and test &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/11863/11863.18.diff" title="Attachment '11863.18.diff' in Ticket #11863"&gt;11863.18.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/11863/11863.18.diff" title="Download"&gt;â€‹&lt;/a&gt; in a couple of hours.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>36173.13.diff attached to Ticket #36173</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 09 Apr 2016 03:04:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36173/36173.13.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36173/36173.13.diff/1460171089202689</guid>
      <description>&lt;p&gt;
Improves customizer link handling.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36392 (wp_add_inline_script() breaks script dependency order when using ...) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sat, 09 Apr 2016 02:30:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36392#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36392#comment:29/1460169032274793</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36392 (wp_add_inline_script() breaks script dependency order when using ...) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sat, 09 Apr 2016 02:30:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36392#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36392#comment:28/1460169017402883</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36392#comment:27" title="Comment 27"&gt;jeremyfelt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think we need a patch that does this.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed. Can someone please put it together?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36173 (4.5 About Page) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sat, 09 Apr 2016 01:33:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36173#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36173#comment:33/1460165590673742</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36173/36173.12.diff" title="Attachment '36173.12.diff' in Ticket #36173"&gt;36173.12.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36173/36173.12.diff" title="Download"&gt;â€‹&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Fixed whitespace issue and restored feature-section class placement
&lt;/li&gt;&lt;li&gt;Fixes "customize" check which was keeping the custom logo customizer link section from appearing.
&lt;/li&gt;&lt;li&gt;Changed tagline to "WordPress 4.5 streamlines your workflow, whether you're writing or building your site." -- I'm wondering if going even simpler with "WordPress 4.5: A more streamlined experience." is even better.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>36173.12.diff attached to Ticket #36173</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sat, 09 Apr 2016 01:30:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36173/36173.12.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36173/36173.12.diff/1460165403614329</guid>
      <description></description>
      <category>attachment</category>
    </item>
   </channel>
</rss>