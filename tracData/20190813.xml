<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #47873 (Introduce handling of "Big Images") updated</title>
      
        <dc:creator>joyously</dc:creator>

      <pubDate>Tue, 13 Aug 2019 23:46:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47873#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47873#comment:1/1565739982744100</guid>
      <description>&lt;p&gt;
I have seen support topics asking about why their big image is all fuzzy after uploading to WP. (this was a photographer, another was trying to do those huge astronomy photos)&lt;br /&gt;
Or why the file size grew once WP processed the image (usually PNG).&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47873 (Introduce handling of "Big Images") created</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 13 Aug 2019 23:39:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47873</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47873/1565739569318357</guid>
      <description>&lt;p&gt;
There are generally two types of images that are uploaded:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Images that have been edited or created in an image editing application.
&lt;/li&gt;&lt;li&gt;Photos that are uploaded either directly from the camera or haven't been edited.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
In the first case the images are usually "web ready". They may have been scaled down to an appropriate size and optimized.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In the second case the images are usually much bigger than needed and are not optimized for web use. A photo taken with an average modern smart phone is easily over 5MB in file size. Photos taken with a good quality camera can be much larger.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The Big Image "special handling" idea has been around for quite some time. The two options are:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Edit the image after upload and make it "web ready" (including scaling and file size optimizing).
&lt;/li&gt;&lt;li&gt;Store the original image but not use it on the website.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Each option has drawbacks, but considering that generally storage is cheaper than bandwidth, and that we would want to preserve the user's photos, the second option seems more desirable.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #47870 (Unable to load source maps from webpack in Firefox) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 13 Aug 2019 23:37:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47870#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47870#comment:1/1565739458990788</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #46946 (Site Health: Text adjustment (add a link and remove "we")) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 13 Aug 2019 23:34:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/46946#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/46946#comment:24/1565739294271299</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/45791" title="Site Health: Simplify the language in Status Health Info page ..."&gt;45791&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Site Health: Simplify the language in Status Health Info page introduction, add a link to Status page.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props birgire, mukesh27, subrataemfluence, leogermani.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/46946" title="#46946: enhancement: Site Health: Text adjustment (add a link and remove &amp;#34;we&amp;#34;) (closed: fixed)"&gt;#46946&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [45791]: Site Health: Simplify the language in Status Health Info page ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 13 Aug 2019 23:34:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/45791</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/45791/1565739293192341</guid>
      <description>&lt;p&gt;
Site Health: Simplify the language in Status Health Info page introduction, add a link to Status page.
&lt;/p&gt;
&lt;p&gt;
Props birgire, mukesh27, subrataemfluence, leogermani.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/46946" title="#46946: enhancement: Site Health: Text adjustment (add a link and remove &amp;#34;we&amp;#34;) (closed: fixed)"&gt;#46946&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #47863 (Fix odd, unexpected output from shortcode_parse_attts) updated</title>
      
        <dc:creator>mauteri</dc:creator>

      <pubDate>Tue, 13 Aug 2019 22:30:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47863#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47863#comment:16/1565735444442272</guid>
      <description>&lt;p&gt;
@birgire yeah, i don't think we are going to win with that edge case :-/ as that can go either way. probably best to assume if it is right before the &lt;code&gt;]&lt;/code&gt; that it was intentionally part of the self closing shortcode. what do you think?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
yeah, we can probably tighten this up a bit by extending the &lt;code&gt;preg_match&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47012 (Proposal: Simplify WordPress Admin Navigation) updated</title>
      
        <dc:creator>nrqsnchz</dc:creator>

      <pubDate>Tue, 13 Aug 2019 22:04:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47012#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47012#comment:35/1565733878525795</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
The bigger problem in my opinion is, that users have to know where plugin X is adding its menu entries. We have to search all level of menu entries to find the one we are looking for.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Wouldn't @jameskoster's solution fix this? By compartmentalizing each plugin's options into their own meta level menus, the user wouldn't have to go hunting a loooong list of items to find the right one.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47872 (Try to create image sub-sizes again when uploading fails with a PHP ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 13 Aug 2019 21:39:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47872#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47872#comment:3/1565732365910046</guid>
      <description>&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/39647" title="#39647: defect (bug): Make media upload &amp;#34;HTTP error.&amp;#34; more user-helpful (new)"&gt;#39647&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40439" title="#40439: enhancement: Save progress of intermediate image creation after upload (closed: fixed)"&gt;#40439&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47872 (Try to create image sub-sizes again when uploading fails with a PHP ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 13 Aug 2019 21:27:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47872#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47872#comment:2/1565731649800825</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by azaozz. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1565731648208800"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41545 (Allow cmd/ctrl-enter to submit comment forms) closed</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Tue, 13 Aug 2019 21:25:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41545#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41545#comment:30/1565731558795056</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/45790" title="Comments: enable typing cmd/ctrl-enter to submit comment forms.
Add a ..."&gt;45790&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Comments: enable typing cmd/ctrl-enter to submit comment forms.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Add a key handler on the comment form that detects the cmd/ctrl-enter key press and submits the comment form. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props xyfi, Lindstromer, helen, splitti.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41545" title="#41545: enhancement: Allow cmd/ctrl-enter to submit comment forms (closed: fixed)"&gt;#41545&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [45790]: Comments: enable typing cmd/ctrl-enter to submit comment forms.  Add a ...</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Tue, 13 Aug 2019 21:25:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/45790</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/45790/1565731557706359</guid>
      <description>&lt;p&gt;
Comments: enable typing cmd/ctrl-enter to submit comment forms.
&lt;/p&gt;
&lt;p&gt;
Add a key handler on the comment form that detects the cmd/ctrl-enter key press and submits the comment form.
&lt;/p&gt;
&lt;p&gt;
Props xyfi, Lindstromer, helen, splitti.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41545" title="#41545: enhancement: Allow cmd/ctrl-enter to submit comment forms (closed: fixed)"&gt;#41545&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #41545 (Allow cmd/ctrl-enter to submit comment forms) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Tue, 13 Aug 2019 21:24:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41545#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41545#comment:29/1565731476314172</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47872 (Try to create image sub-sizes again when uploading fails with a PHP ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 13 Aug 2019 21:23:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47872#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47872#comment:1/1565731382288355</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In 47872.diff:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;When an image upload fails with HTTP 500 error do another AJAX request to try to create any missing image sub-sizes. This currently works in the Media modal and on the Media Library screen, including support for the old inline uploader in Media =&amp;gt; Add New. This is attempted three more times.
&lt;/li&gt;&lt;li&gt;Uses a temporary uploaded file reference (for images only) to retrieve the new attachment_id (saved in a transient for 6 hours).
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Currently there are no specific UI changes but the HTTP 500 errors are visible in the browser console. If it still fails after four attempts (the initial upload plus three re-tries) it shows the error messages that come from the server, if any. Then it falls back to the default HTTP 500 error (the text was updated to better reflect what's going on).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Testing is very much appreciated, although it's not very straightforward. To test best would be to artificially "crash" PHP.&lt;br /&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Set &lt;code&gt;max_execution_time=4&lt;/code&gt; in php.ini to cause a timeout. Upload a large image, something like 5 - 6MB and watch the request in the browser tools "network" tab. If it doesn't time out, try larger image or set the max_execution_time to 3 seconds (and don't forget to put it back to the original value when done, default &lt;code&gt;max_execution_time&lt;/code&gt; is 30 seconds).
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;Set &lt;code&gt;memory_limit=64M&lt;/code&gt; in php.ini and add &lt;code&gt;define( 'WP_MAX_MEMORY_LIMIT', '64M' );&lt;/code&gt; in wp-config.php to limit the memory. Again, try uploading a bigger image and watch the browser tools for HTTP 500 responses. Couple of tests are possible here. If the memory is low and the image big, it may run out of memory on the initial loading of the image. Then there will be 4 HTTP 500 errors pretty fast one after the other. In that case if you bump the memory limit up by a few MB it will start failing while creating the sub-sizes. Then the result will be several requests the last of which should be a "success".
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47871 (Cache item schema in REST controllers) updated</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Tue, 13 Aug 2019 21:16:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47871#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47871#comment:3/1565731004266226</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>47872.diff attached to Ticket #47872</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 13 Aug 2019 21:00:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47872/47872.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47872/47872.diff/1565730046255932</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47872 (Try to create image sub-sizes again when uploading fails with a PHP ...) created</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 13 Aug 2019 20:47:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47872</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47872/1565729248769841</guid>
      <description>&lt;p&gt;
A common reason uploading of images fails is because the server runs out of resources while creating image sub-sizes. That results in either a timeout or out of memory errors.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In these cases the image file has been uploaded successfully but some or all of the sub-sizes haven't been created. Because of the PHP fatal error, the response to the browser/client is an "Internal Server Error" (HTTP 500) which currently results in showing an unfriendly/non-actionable "HTTP Error" message in the UI. It also leaves the "orphaned" image sub-sizes that were created before the server crash in the upload directory.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
After &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40439" title="#40439: enhancement: Save progress of intermediate image creation after upload (closed: fixed)"&gt;#40439&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/45538" title="Save progress of intermediate image creation after upload. First run. ..."&gt;[45538]&lt;/a&gt; it became possible to create the missing image sub-sizes when an image file was uploaded successfully. Ideally that should happen right after the file was uploaded, so the user has access to all expected sub-sizes.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #47863 (Fix odd, unexpected output from shortcode_parse_attts) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Tue, 13 Aug 2019 20:27:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47863#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47863#comment:15/1565728042726475</guid>
      <description>&lt;p&gt;
I wonder if we could simplify with e.g.:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( preg_match( '#^\[[\w-]+([^\]]*?)\/?\]#', $text, $matches ) ) {
	$text = $matches[1];
}
&lt;/pre&gt;&lt;p&gt;
i.e. use non-greedy &lt;code&gt;*?&lt;/code&gt; check to allow for the latter &lt;code&gt;\/?&lt;/code&gt; check.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This seems to run the tests successfully.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
ps: here's though another kind of edge case:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;array(
	'[unittest link=https://unit.test/]Lorem Ipsum[/unittest]',
	array(
		'link'  =&amp;gt; 'https://unit.test/',
	),
),
&lt;/pre&gt;&lt;p&gt;
that will not pass. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44975 (REST API support switching draft to unscheduled) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Tue, 13 Aug 2019 20:18:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44975#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44975#comment:22/1565727489458219</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44975/44975.3.diff" title="Attachment '44975.3.diff' in Ticket #44975"&gt;44975.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44975/44975.3.diff" title="Download"&gt;​&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Use a &lt;code&gt;null&lt;/code&gt; value in the test.
&lt;/li&gt;&lt;li&gt;update doc blocks
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
In my testing sending a null value works just like sending a blank string. I updated the test to use null and adjusted the doc blocks a little as well.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Matching draft PR (with tests running): &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/81"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/wordpress-develop/pull/81&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47871 (Cache item schema in REST controllers) updated</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Tue, 13 Aug 2019 20:17:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47871#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47871#comment:2/1565727460292335</guid>
      <description>&lt;p&gt;
Following up to the above, I ran a few more post counts then dumped my tests into a spreadsheet and confirmed that the time taken up by calling &lt;code&gt;get_item_schema&lt;/code&gt; grows linearly the more posts are requested.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44975.3.diff attached to Ticket #44975</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Tue, 13 Aug 2019 20:15:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44975/44975.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44975/44975.3.diff/1565727328883665</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47871 (Cache item schema in REST controllers) updated</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Tue, 13 Aug 2019 20:11:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47871#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47871#comment:1/1565727073563285</guid>
      <description>&lt;p&gt;
I did some basic naive performance profiling by wrapping the post controller's get_item_schema method with a microtime diff and counting how often it was called. On a &lt;code&gt;wp/v2/posts&lt;/code&gt; collection with two posts, &lt;code&gt;get_item_schema&lt;/code&gt; is called on the posts controller 56 times total, accounting for roughly 30ms of time.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
On a collection of 100 posts, however, a &lt;code&gt;wp/v2/posts?per_page=100&lt;/code&gt; request generated 644 individual get_item_schema requests. Using the naive microtime logging, these calls accounted for around 290-300ms within one request's lifecycle over a series of tests, with a few outlier runs yielding up to 700ms of total time.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I would be quite keen to get this in and see those numbers drop :) &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #46349 (Is your/this admin email still correct) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 13 Aug 2019 19:52:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/46349#comment:60</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/46349#comment:60/1565725971558962</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/45789" title="Remove trailing white space in upgrade.php.
See #46349."&gt;45789&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Remove trailing white space in upgrade.php.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/46349" title="#46349: enhancement: Is your/this admin email still correct (closed: fixed)"&gt;#46349&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [45789]: Remove trailing white space in upgrade.php.  See #46349.</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 13 Aug 2019 19:52:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/45789</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/45789/1565725970483746</guid>
      <description>&lt;p&gt;
Remove trailing white space in upgrade.php.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/46349" title="#46349: enhancement: Is your/this admin email still correct (closed: fixed)"&gt;#46349&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #41305 (Add lazily evaluated translations) updated</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Tue, 13 Aug 2019 19:49:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41305#comment:68</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41305#comment:68/1565725789782510</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The ticket to cache item schema in REST controllers has been opened as &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/47871" title="#47871: enhancement: Cache item schema in REST controllers (closed: fixed)"&gt;#47871&lt;/a&gt;. Removing this from 5.3 per comments above.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47871 (Cache item schema in REST controllers) created</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Tue, 13 Aug 2019 19:17:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47871</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47871/1565723826923666</guid>
      <description>&lt;p&gt;
The &lt;code&gt;get_item_schema&lt;/code&gt; method on the REST controllers should be idempotent. These methods are called many times when validating schemas, sanitizing, &lt;code&gt;filter_response_by_context&lt;/code&gt;, etc, and generating them isn't particularly cheap. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/ticket/41305"&gt;https://core.trac.wordpress.org/ticket/41305&lt;/a&gt; demonstrates one such place that adds overhead, also the Posts controller &lt;code&gt;get_item_schema&lt;/code&gt; makes many calls and asks for a lot of data: &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/master/wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php#L1872"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/master/wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php#L1872&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
We should look into caching these on the class instance. Doing a count on how many times these methods are called, say on a &lt;code&gt;/wp-json/&lt;/code&gt; request should be easy, and indicate if there will be significant performance gains by doing this.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41305 (Add lazily evaluated translations) updated</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Tue, 13 Aug 2019 19:14:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41305#comment:67</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41305#comment:67/1565723696410023</guid>
      <description>&lt;p&gt;
@joehoyle is going to open a new ticket to capture a quicker win of &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/master/wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php#L1872"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;caching the `get_item_schema` results&lt;/a&gt;; we'd still have to translate a few hundred strings, but only once.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
We can then de-milestone this from 5.3 until we can sync back up on the lazy string / _noop questions, especially since the PHP version issue blocking the use of closures have been mercifully removed by the efforts of the servehappy team :)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41305 (Add lazily evaluated translations) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 13 Aug 2019 19:01:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41305#comment:66</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41305#comment:66/1565722889837323</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by kadamwhite. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1565722888287900"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42094 (REST API: extend _fields parameter to selectively include nested ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 13 Aug 2019 19:01:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42094#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42094#comment:16/1565722860393763</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by kadamwhite. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1565722859287000"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38583 (Support for objects in schema validation and sanitization) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 13 Aug 2019 18:53:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38583#comment:53</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38583#comment:53/1565722433474949</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by joehoyle. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1565722431276000"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43392 (Support 'object' and 'array' types in register_meta()) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 13 Aug 2019 18:51:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43392#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43392#comment:36/1565722299629943</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by kadamwhite. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1565722298273500"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43691 (class-wp-rest-server sends response body regardless of actual response ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 13 Aug 2019 18:49:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43691#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43691#comment:11/1565722197238809</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by kadamwhite. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1565722196270800"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39953 (REST API: Do not update date when preparing post if date is known to ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 13 Aug 2019 18:45:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39953#comment:61</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39953#comment:61/1565721923982889</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by kadamwhite. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1565721922265200"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44975 (REST API support switching draft to unscheduled) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 13 Aug 2019 18:45:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44975#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44975#comment:21/1565721912862717</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by kadamwhite. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1565721911264800"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47012 (Proposal: Simplify WordPress Admin Navigation) updated</title>
      
        <dc:creator>Horttcore</dc:creator>

      <pubDate>Tue, 13 Aug 2019 18:37:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47012#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47012#comment:34/1565721478427051</guid>
      <description>&lt;p&gt;
The bigger problem in my opinion is, that users have to know where pluginX is adding its menu entries.&lt;br /&gt;
We have to search all level of menu entries to find the one we are looking for.&lt;br /&gt;
Instead of separating entries by plugins, we should more include them.&lt;br /&gt;
I like the idea of the meta level, but why not combing these two ideas?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40383 (Comments Controller is not checking permission of Custom Post Type ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 13 Aug 2019 18:37:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40383#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40383#comment:13/1565721425401039</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by timothybjacobs. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1565721424256800"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45677 (REST Autosaves Controller creating extra instance of a post type REST ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 13 Aug 2019 18:36:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45677#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45677#comment:21/1565721386389495</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by kadamwhite. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1565721385256000"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #46907 (Pass current request object to rest_authentication_errors filter) updated</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Tue, 13 Aug 2019 18:35:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/46907#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/46907#comment:11/1565721337221774</guid>
      <description>&lt;p&gt;
Discussed again in &lt;a class="ext-link" href="https://wordpress.slack.com/archives/C02RQC26G/p1565721079251800"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;ticket scrub today&lt;/a&gt;; I think the issue here is that we're using a strange pattern in the JWT plugin, and not that the logic here is incorrect. The authentication check should just be determining the current user. I'm inclined to revert this.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #46907 (Pass current request object to rest_authentication_errors filter) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 13 Aug 2019 18:31:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/46907#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/46907#comment:10/1565721079747876</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by kadamwhite. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1565721078251700"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47024 ((Comments REST API) Contributor can't update/delete own comment) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 13 Aug 2019 18:28:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47024#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47024#comment:5/1565720927907971</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by kadamwhite. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1565720926250000"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42238 (Notice when Rest Comments controler is checking permision for a non ...) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Tue, 13 Aug 2019 18:20:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42238#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42238#comment:11/1565720454469514</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Going to take a look at this. Is related to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40383" title="#40383: defect (bug): Comments Controller is not checking permission of Custom Post Type ... (closed: fixed)"&gt;#40383&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42209 (register_taxonomy with a non-sequential array index of post_types ...) updated</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Tue, 13 Aug 2019 18:20:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42209#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42209#comment:7/1565720429247103</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Assigning to @timothybjacobs after scrub in REST API slack channel. He's noted that an &lt;code&gt;array_values&lt;/code&gt; call within the REST API controller may be safer.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Provisionally accepting for 5.3.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42238 (Notice when Rest Comments controler is checking permision for a non ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 13 Aug 2019 18:18:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42238#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42238#comment:10/1565720302102836</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by timothybjacobs. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1565720300241500"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41774 (REST-API: Media endpoint (POST): Unable to upload files) closed</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Tue, 13 Aug 2019 18:17:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41774#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41774#comment:3/1565720237876017</guid>
      <description>invalid: &lt;p&gt;
Closing due to lack of feedback, as this does not appear to have been a recurring issue with the API itself.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #42209 (register_taxonomy with a non-sequential array index of post_types ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 13 Aug 2019 18:15:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42209#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42209#comment:6/1565720146827874</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by timothybjacobs. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1565720145238400"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41774 (REST-API: Media endpoint (POST): Unable to upload files) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 13 Aug 2019 18:14:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41774#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41774#comment:2/1565720090197522</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by timothybjacobs. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1565720089237700"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41683 (Add Widget REST API endpoint) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Tue, 13 Aug 2019 18:14:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41683#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41683#comment:6/1565720072014645</guid>
      <description>&lt;p&gt;
This looks to be something that the Gutenberg team is actively working on: &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/issues/13204"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/issues/13204&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Work should probably be happening there for now.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41683 (Add Widget REST API endpoint) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Tue, 13 Aug 2019 18:13:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41683#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41683#comment:5/1565720021586874</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41683 (Add Widget REST API endpoint) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 13 Aug 2019 18:10:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41683#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41683#comment:4/1565719855043559</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by timothybjacobs. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1565719853234600"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41411 (REST API: Terms endpoint responses for PUT &amp; POST requests don't set ...) updated</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Tue, 13 Aug 2019 18:10:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41411#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41411#comment:4/1565719800952244</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Accepting for 5.3 as a quick win. I'll look into writing up a test.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41411 (REST API: Terms endpoint responses for PUT &amp; POST requests don't set ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 13 Aug 2019 18:08:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41411#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41411#comment:3/1565719683571024</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by timothybjacobs. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1565719682231900"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40383 (Comments Controller is not checking permission of Custom Post Type ...) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Tue, 13 Aug 2019 18:03:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40383#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40383#comment:12/1565719388889649</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47580 (Prevent output of invalid HTML in `_default_wp_die_handler()`) updated</title>
      
        <dc:creator>dinhtungdu</dc:creator>

      <pubDate>Tue, 13 Aug 2019 17:47:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47580#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47580#comment:6/1565718435302636</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
After considering checking for tags in the &lt;code&gt;$message&lt;/code&gt; and replacing &lt;code&gt;p&lt;/code&gt; by &lt;code&gt;div&lt;/code&gt;, I think it's better to use &lt;code&gt;div&lt;/code&gt; for the die message wrapper.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
We can check if &lt;code&gt;$message&lt;/code&gt; contains &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;, but it means that we need to check for other tags as well. &lt;code&gt;h1&lt;/code&gt; for example, can't be a child element of &lt;code&gt;p&lt;/code&gt;. A full covered check can make the current function more complex.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
On the other hand, replacing &lt;code&gt;p&lt;/code&gt; by &lt;code&gt;div&lt;/code&gt; doesn't increase the complexity of &lt;code&gt;_default_wp_die_handler&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
What I did:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Use &lt;code&gt;div&lt;/code&gt; as &lt;code&gt;$message&lt;/code&gt; wrapper in the function &lt;code&gt;_default_wp_die_handler&lt;/code&gt;. The error message now is always wrapped by &lt;code&gt;div.wp-die-message&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Update CSS rules in &lt;code&gt;common.css&lt;/code&gt; and internal CSS for error page to keep the current die message unchanged in term of visual.
&lt;/li&gt;&lt;li&gt;Update this to match with the new wrapper: &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/index.php?rev=45649&amp;amp;marks=33-55#L32"&gt;https://core.trac.wordpress.org/browser/trunk/src/index.php?rev=45649&amp;amp;marks=33-55#L32&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47012 (Proposal: Simplify WordPress Admin Navigation) updated</title>
      
        <dc:creator>lessbloat</dc:creator>

      <pubDate>Tue, 13 Aug 2019 17:40:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47012#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47012#comment:33/1565718035805371</guid>
      <description>&lt;p&gt;
I love seeing activity on this thread again! This is exciting. 🤗&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This is me attempting to distill things, but just to make sure we're on the same page, I thought I might attempt to clarify the concerns each of you are expressing.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
@DeFries, what I'm hearing you say is that you're worried about there being a situation where &lt;em&gt;some&lt;/em&gt; plugins reside in the default WP menu, while others (perhaps the more complicated plugins) are broken out into their own sections. Is that your primary concern? &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
@jameskoster it sounds like one of your primary concerns is around the scalability of having to force all links within a single core menu?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Is that right, or is there more?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #46349 (Is your/this admin email still correct) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 13 Aug 2019 17:39:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/46349#comment:59</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/46349#comment:59/1565717947172115</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/45788" title="Admin email verification:
- Add the `admin_email_lifespan` option when ..."&gt;45788&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Admin email verification:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Add the &lt;code&gt;admin_email_lifespan&lt;/code&gt; option when installing. Fixes a bug where the verification screen is shown right after installation.
&lt;/li&gt;&lt;li&gt;Reset the same option when upgrading and the user doing the DB upgrade is not an admin. This will ensure the email verification is shown next time an admin logs in.
&lt;/li&gt;&lt;li&gt;Use &lt;code&gt;site_url()&lt;/code&gt; instead of &lt;code&gt;network_site_url()&lt;/code&gt; for the form action. The latter seems needed only for password reset.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/46349" title="#46349: enhancement: Is your/this admin email still correct (closed: fixed)"&gt;#46349&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [45788]: Admin email verification: - Add the `admin_email_lifespan` option when ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 13 Aug 2019 17:39:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/45788</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/45788/1565717946119379</guid>
      <description>&lt;p&gt;
Admin email verification:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Add the &lt;code&gt;admin_email_lifespan&lt;/code&gt; option when installing. Fixes a bug where the verification screen is shown right after installation.
&lt;/li&gt;&lt;li&gt;Reset the same option when upgrading and the user doing the DB upgrade is not an admin. This will ensure the email verification is shown next time an admin logs in.
&lt;/li&gt;&lt;li&gt;Use &lt;code&gt;site_url()&lt;/code&gt; instead of &lt;code&gt;network_site_url()&lt;/code&gt; for the form action. The latter seems needed only for password reset.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/46349" title="#46349: enhancement: Is your/this admin email still correct (closed: fixed)"&gt;#46349&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>47580.diff attached to Ticket #47580</title>
      
        <dc:creator>dinhtungdu</dc:creator>

      <pubDate>Tue, 13 Aug 2019 17:31:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47580/47580.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47580/47580.diff/1565717475377222</guid>
      <description>&lt;p&gt;
Use &lt;code&gt;div&lt;/code&gt; for wrapper instead of &lt;code&gt;p&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47012 (Proposal: Simplify WordPress Admin Navigation) updated</title>
      
        <dc:creator>jameskoster</dc:creator>

      <pubDate>Tue, 13 Aug 2019 17:29:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47012#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47012#comment:32/1565717361076702</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
If we were to say on the one hand, "hey let's group everything content together", and on the other hand were to go "but not with plugin X" (where plugin X stands for WooCommerce in this example), how are we actually solving the bring content together in the default menu if we're not, in fact, using the default. &lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Just in case it wasn't clear, WooCommerce would not be the exception. I imagine all of those kinds of plugins you mention would introduce their own menu, just as WooCommerce does in the prototype I shared. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Another way to look at it: Content Management might just be the default "app" on fresh WP installs. It and other "apps" (e.g. Woo) run on top of WordPress as an operating system. We might abstract all of the general settings and options into a dedicated "system preferences" section, so the "Content Management app" feels more like an app, rather than a kernel. Something more like this: &lt;a class="ext-link" href="https://s.codepen.io/jameskoster/debug/rNBxpwY"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://s.codepen.io/jameskoster/debug/rNBxpwY&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
this proposal solves the original problem very nicely, but introduces a variant of the problem somewhere else. &lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Am I right in understanding that you think we should explore enabling plugins to apply context within a single core menu system? Without the separate "meta level" menu? My concern with that is that as you add more plugins the lines simply blur too much. Although I must admit it's not something I've explored in any great detail just yet.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #46349 (Is your/this admin email still correct) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 13 Aug 2019 17:29:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/46349#comment:58</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/46349#comment:58/1565717344726316</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/46349#comment:56" title="Comment 56"&gt;desrosj&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks for testing :)&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
...the interval should also be passed through the &lt;code&gt;admin_email_check_interval&lt;/code&gt; filter so sites and plugins can fully control the frequency from the beginning.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Plugins are (usually) not active right after installation when the default options are set. There is another way to override all defaults which I think is sufficient. Another way, of course, would be to change the option directly. That's "not recommended" but.... Pretty sure some will do.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40383 (Comments Controller is not checking permission of Custom Post Type ...) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Tue, 13 Aug 2019 17:23:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40383#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40383#comment:11/1565717017689075</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>40383.2.diff attached to Ticket #40383</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Tue, 13 Aug 2019 17:23:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40383/40383.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40383/40383.2.diff/1565716987310888</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40383 (Comments Controller is not checking permission of Custom Post Type ...) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Tue, 13 Aug 2019 17:22:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40383#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40383#comment:10/1565716951746103</guid>
      <description>&lt;p&gt;
That'd work. Interestingly, it isn't enforced or documented that the &lt;code&gt;rest_controller_class&lt;/code&gt; must extend &lt;code&gt;WP_REST_Posts_Controller&lt;/code&gt;, just &lt;code&gt;WP_REST_Controller&lt;/code&gt;. I don't know if that changes the thinking any.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The different usages of the controller have different requirements, so I opted to make the &lt;code&gt;::get_for_post_type&lt;/code&gt; method be as conservative in possible in what it should return. It matches how &lt;code&gt;create_initial_rest_routes&lt;/code&gt; works.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>namespace.patch attached to Ticket #47870</title>
      
        <dc:creator>pierlo</dc:creator>

      <pubDate>Tue, 13 Aug 2019 17:00:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47870/namespace.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47870/namespace.patch/1565715629235313</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47870 (Unable to load source maps from webpack in Firefox) created</title>
      
        <dc:creator>pierlo</dc:creator>

      <pubDate>Tue, 13 Aug 2019 17:00:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47870</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47870/1565715609621642</guid>
      <description>&lt;p&gt;
By default, Webpack uses &lt;code&gt;output.library&lt;/code&gt; as the namespace for module source maps, which generates the URL &lt;code&gt;webpack://wp.[name]/&amp;lt;path of module&amp;gt;&lt;/code&gt;. This loads fine in Chrome, but in Firefox it throws an error similar to:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Source map error: TypeError: Invalid URL: webpack://wp.[name]/webpack/bootstrap&lt;br /&gt;
Resource URL: &lt;a class="ext-link" href="http://localhost:8888/wp-content/plugins/gutenberg/build/components/index.js?ver=1565639281"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://localhost:8888/wp-content/plugins/gutenberg/build/components/index.js?ver=1565639281&lt;/a&gt;&lt;br /&gt;
Source Map URL: index.js.map&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The solution to this is to specify a &lt;a class="ext-link" href="https://webpack.js.org/configuration/output/#outputdevtoolnamespace"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;devtoolNamespace&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
So for example, setting &lt;code&gt;devtoolNamespace&lt;/code&gt;to &lt;code&gt;wp&lt;/code&gt; would result in the URL &lt;code&gt;webpack://wp/&amp;lt;path of module&amp;gt;&lt;/code&gt; (which the attached patch does).&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43709 (Fix or remove the "delete revision" endpoint) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 13 Aug 2019 16:49:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43709#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43709#comment:22/1565714972538445</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by dlh. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1565714971227200"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #46349 (Is your/this admin email still correct) updated</title>
      
        <dc:creator>Kelderic</dc:creator>

      <pubDate>Tue, 13 Aug 2019 16:46:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/46349#comment:57</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/46349#comment:57/1565714805864137</guid>
      <description>&lt;p&gt;
It might be a bit late in the process to point this out, but we are using the term "&lt;strong&gt;email&lt;/strong&gt;" when we are actually referring to "&lt;strong&gt;email address&lt;/strong&gt;". &lt;code&gt;person@website.com&lt;/code&gt; is an "&lt;strong&gt;email address&lt;/strong&gt;", which can be sent an "&lt;strong&gt;email&lt;/strong&gt;".&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47012 (Proposal: Simplify WordPress Admin Navigation) updated</title>
      
        <dc:creator>DeFries</dc:creator>

      <pubDate>Tue, 13 Aug 2019 16:37:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47012#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47012#comment:31/1565714232663941</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/47012#comment:30" title="Comment 30"&gt;jameskoster&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
But with an eCommerce store, inventory management is generally secondary to other tasks like checking reports, fulfilling orders, moderating reviews, marketing the store etc, so it makes sense for those sections to have more prominence than "content management".&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As much as I love the meta menu, menus that bring together contextual navigation, I feel like we'd be going the wrong direction. If we were to say on the one hand, "hey let's group everything content together", and on the other hand were to go "but not with plugin X" (where plugin X stands for WooCommerce in this example), how are we actually solving the bring content together in the default menu if we're not, in fact, using the default. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I mean, the way I see it, plugins like WooCommerce, BuddyPress, bbPress, event managers, job managers, etc, all revolve around having two things. Content and Settings/Workflows. I'd love to see us solve that specific problem, because the way I see it now, this proposal solves the original problem very nicely, but introduces a variant of the problem somewhere else. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Don't get me wrong, I very much like the thought behind the meta menu, I think that's a winner. I just don't think we're solving everything we could be, &lt;em&gt;should&lt;/em&gt; be solving by using the example as is.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47012 (Proposal: Simplify WordPress Admin Navigation) updated</title>
      
        <dc:creator>jameskoster</dc:creator>

      <pubDate>Tue, 13 Aug 2019 15:56:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47012#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47012#comment:30/1565711794893260</guid>
      <description>&lt;p&gt;
@DeFries yes, that would be the case with this approach. The idea being to create the expectation that anything WooCommerce-related lives in the WooCommerce meta menu - whether it's a setting, content management, or more abstract features like order management.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This also allows us to tailor the menu order accordingly. For example - when you're managing your "site", content is likely going to feature very frequently in that workflow, so it makes sense for it to be the first menu item. But with an eCommerce store, inventory management is generally secondary to other tasks like checking reports, fulfilling orders, moderating reviews, marketing the store etc, so it makes sense for those sections to have more prominence than "content management".&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Pictures don't always do these things justice so I threw a very rough CodePen together for y'all to play around with: &lt;a class="ext-link" href="https://s.codepen.io/jameskoster/debug/JjPGrYq"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://s.codepen.io/jameskoster/debug/JjPGrYq&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47820 (should update_option() check "manage_options" capability?) updated</title>
      
        <dc:creator>dinhtungdu</dc:creator>

      <pubDate>Tue, 13 Aug 2019 15:37:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47820#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47820#comment:6/1565710673600186</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22430 (wp_ob_end_flush_all bug when zlib.output_compression = On) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 13 Aug 2019 15:09:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22430#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22430#comment:12/1565708980321702</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37110 (Update to jQuery 3.*) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 13 Aug 2019 14:57:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37110#comment:76</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37110#comment:76/1565708227955533</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-js by adamsilverstein. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-js/p1565708226337200"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44427 (Introduce lazy-loading API for media and other elements) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 13 Aug 2019 14:42:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44427#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44427#comment:18/1565707352164499</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-js by pierlo. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-js/p1565707351325100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47012 (Proposal: Simplify WordPress Admin Navigation) updated</title>
      
        <dc:creator>DeFries</dc:creator>

      <pubDate>Tue, 13 Aug 2019 14:11:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47012#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47012#comment:29/1565705485393627</guid>
      <description>&lt;p&gt;
@jameskoster would this mean in the case of WooCommerce that the actual content of WooCommerce, the products, would move over to the meta menu? Because that doesn't make a lot of sense to me personally. Content should be &lt;em&gt;all&lt;/em&gt; the content.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43332 (Better Basic Support for CDN Integration) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 13 Aug 2019 14:09:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43332#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43332#comment:3/1565705397013056</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-js by adamsilverstein. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-js/p1565705395278600"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47012 (Proposal: Simplify WordPress Admin Navigation) updated</title>
      
        <dc:creator>jameskoster</dc:creator>

      <pubDate>Tue, 13 Aug 2019 13:55:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47012#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47012#comment:28/1565704509015433</guid>
      <description>&lt;p&gt;
Over the last few weeks I've spent a lot of time thinking about navigation in WooCommerce core, and how we might improve it. Needless to say I'm super excited to see this issue opened, because we've (Woo) essentially outgrown the structural affordances of the existing wp-admin menu system.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For any new navigation in WordPress core to be a success I think it is critical that we consider how third parties (plugins) should interface with it, and the impact those interactions would have, right from the beginning. I would argue that is the biggest failing of the existing navigation - it simply doesn't scale. Activate a few plugins and the left-hand menu grows out of control, and navigating it becomes an absolute nightmare.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The concepts shared in this issue so far would definitely be an improvement, and simplify the stock navigation, but I worry about how they scale. &lt;br /&gt;
&lt;/p&gt;
&lt;h2 id="Roughconcepts"&gt;Rough concepts&lt;/h2&gt;
&lt;p&gt;
As a quick experiment, I added our proposed Woo menu items to the concepts shared above. Take a look: &lt;a class="ext-link" href="https://jameskoster.files.wordpress.com/2019/08/combo.png"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://jameskoster.files.wordpress.com/2019/08/combo.png&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Now, it's not clear whether users would be able to expand all sections simultaneously like in the screenshot - but regardless - the menu gets very, very long when the WooCommerce menu items (purple) are added. And this is just a single plugin. Add a couple of other big players like BuddyPress or bbPress into the mix and things could get totally out of hand.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
How could we solve this?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
One solution we explored was to add an abstracted "meta menu" affordance that would enable plugins to provide their own contextual interfaces within wp-admin. This is probably easier to explain with a picture: &lt;a class="ext-link" href="https://jameskoster.files.wordpress.com/2019/08/meta.png"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://jameskoster.files.wordpress.com/2019/08/meta.png&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The benefit here is that users always understand the context of their current workflow. To manage products it's clear you have to switch to Woo context. To draft a blog post it's clear you have to switch to "WordPress" context. We've usability tested a similar concept with very positive results.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
These layers of context also provide a visual framework and guidance for plugin authors when they're considering where to add their menu items. Building a plugin that affects comments? Settings for that would be accessed through the "WordPress" menu. Building a payment gateway plugin for Woo? Settings for that would be accessed through the WooCommerce menu.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
To be clear - I'm not saying this solution is perfect, or the direction we should definitely head in. But I think it presents an interesting point for discussion: Should plugins be integrating directly with the provided navigation menu, or should they have an affordance to break out into their own contextual area when necessary? I think that answering this question as early as possible will help shape the direction we move in with regards to design.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47866 (Document that register_meta's show_in_rest for Custom Post Types ...) updated</title>
      
        <dc:creator>leogermani</dc:creator>

      <pubDate>Tue, 13 Aug 2019 13:32:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47866#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47866#comment:4/1565703137717243</guid>
      <description>&lt;p&gt;
Great, I had to find out it myself couple of days ago and it wasn't straight forward.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As a suggestion, maybe it could indicate more directly what needs to be present. Something like: "... declare support to custom post types by having 'custom-fields' in its 'supports' array. (@see register_post_type)"&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47868 (wp_delete_attachment returning successfully, deleting all DB data, but ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 13 Aug 2019 13:31:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47868#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47868#comment:1/1565703081847033</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #46349 (Is your/this admin email still correct) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Tue, 13 Aug 2019 13:10:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/46349#comment:56</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/46349#comment:56/1565701822255135</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
First, I love this! Second, I came to report the same as @garrett-eclipse above. &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/46349/46349.5.diff" title="Attachment '46349.5.diff' in Ticket #46349"&gt;46349.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/46349/46349.5.diff" title="Download"&gt;​&lt;/a&gt; looks good to me, but I think the interval should also be passed through the &lt;code&gt;admin_email_check_interval&lt;/code&gt; filter so sites and plugins can fully control the frequency from the beginning.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This would also benefit from a dev note, even if short. Marking for one.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47869 (Missmatch between actual check and warning message for Background Updates) created</title>
      
        <dc:creator>kraftner</dc:creator>

      <pubDate>Tue, 13 Aug 2019 13:07:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47869</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47869/1565701648987234</guid>
      <description>&lt;p&gt;
The site health check currently might sometimes have a mismatch between wording and the actual checks performed. It is reporting disabled background updates while they actually work.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Let me elaborate the setup:&lt;br /&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;code&gt;DISALLOW_FILE_MODS&lt;/code&gt; is set to true to disable plugin/theme editor, manual updates, installation,...
&lt;/li&gt;&lt;li&gt;But since the auto-update functionality is still desired the &lt;code&gt;file_mod_allowed&lt;/code&gt; filter is used to re-enable &lt;strong&gt;automatic&lt;/strong&gt; updates:
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'file_mod_allowed'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$file_mod_allowed&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$context&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$context&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s1"&gt;'automatic_updater'&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$file_mod_allowed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;The actual check being performed in &lt;code&gt;WP_Site_Health::check_wp_version_check_exists&lt;/code&gt; though is &lt;code&gt;current_user_can( 'update_core' )&lt;/code&gt; which is way broader than actually checking for a working background update.
&lt;/li&gt;&lt;li&gt;Even if we'd get past that check having &lt;code&gt;DISALLOW_FILE_MODS&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt; also reports as an error, while actually the check should probably be for &lt;code&gt;wp_is_file_mod_allowed( 'automatic_updater' )&lt;/code&gt; just like inside &lt;code&gt;WP_Automatic_Updater::is_disabled&lt;/code&gt;.
&lt;/li&gt;&lt;/ol&gt;&lt;hr /&gt;
&lt;p&gt;
I see two possible courses of action:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;This is a bug in the check and the check needs to be fixed.
&lt;/li&gt;&lt;li&gt;This is a wording issue for the site health page.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Looking for feedback on how to proceed.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #47868 (wp_delete_attachment returning successfully, deleting all DB data, but ...) created</title>
      
        <dc:creator>Jossnaz</dc:creator>

      <pubDate>Tue, 13 Aug 2019 12:03:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47868</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47868/1565697786602679</guid>
      <description>&lt;p&gt;
from &lt;br /&gt;
&lt;a class="ext-link" href="https://wordpress.stackexchange.com/questions/344976/wp-delete-attachment-returning-successfully-deleting-all-db-data-but-not-delet?noredirect=1#comment505976_344976"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.stackexchange.com/questions/344976/wp-delete-attachment-returning-successfully-deleting-all-db-data-but-not-delet?noredirect=1#comment505976_344976&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I digged into wp_delete_attachment here &lt;a href="https://core.trac.wordpress.org/browser/tags/5.2.1/src/wp-includes/post.php#L5450"&gt;https://core.trac.wordpress.org/browser/tags/5.2.1/src/wp-includes/post.php#L5450&lt;/a&gt; , it calls wp_delete_attachment_files&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
wp_delete_attachment_files returns false on failure, but this is ignored! in wp_delete_attachment. Now I'm not gonna go on a rant how bad that 'design' is. My question is, how can I make sure that the files DO get deleted?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm calling&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt; $attachments = get_attached_media('', $post-&amp;gt;ID);
 foreach ($attachments as $attachment) {
    wp_delete_attachment($attachment-&amp;gt;ID, true);
wp_delete_attachment never returns falsy.
&lt;/pre&gt;&lt;p&gt;
How can I figure out and fix wp_delete_attachment ?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
in my case it seems that some post_meta might be damaged, as the file location sometimes can be lost for some reason. This should return false or better throw and error&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #47528 (Site Health: Add test for file checksums) updated</title>
      
        <dc:creator>pgogy</dc:creator>

      <pubDate>Tue, 13 Aug 2019 11:44:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47528#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47528#comment:14/1565696652350507</guid>
      <description>&lt;p&gt;
Ah sorry - I forgot a bit - was imagining you could have the checksum added to the DB post upgrade (as the upgrade scripts adds it for core) for all the core files&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22430 (wp_ob_end_flush_all bug when zlib.output_compression = On) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 13 Aug 2019 11:05:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22430#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22430#comment:11/1565694343908219</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by bobbingwide. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1565694341297900"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22430 (wp_ob_end_flush_all bug when zlib.output_compression = On) updated</title>
      
        <dc:creator>bobbingwide</dc:creator>

      <pubDate>Tue, 13 Aug 2019 11:04:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22430#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22430#comment:10/1565694267745161</guid>
      <description>&lt;p&gt;
I've recently noticed this where my hosting ( TSOhost ) have switched to PHP 7.3 and have set &lt;code&gt;zlib.output_compression=on&lt;/code&gt; by default, and where my sites have WP_DEBUG true. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Is it not possible to detect the PHP ini setting and not attach the &lt;code&gt;wp_ob_end_flush_all&lt;/code&gt; action function to &lt;code&gt;shutdown&lt;/code&gt; when it's set?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Or alter the function to do nothing. e.g. &lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( ini_get( 'zlib.output_compression') ) {
  return;
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>47820.2.diff attached to Ticket #47820</title>
      
        <dc:creator>dinhtungdu</dc:creator>

      <pubDate>Tue, 13 Aug 2019 10:55:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47820/47820.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47820/47820.2.diff/1565693720257344</guid>
      <description>&lt;p&gt;
Fix grammar issues.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>47867.2.diff attached to Ticket #47867</title>
      
        <dc:creator>donmhico</dc:creator>

      <pubDate>Tue, 13 Aug 2019 09:44:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47867/47867.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47867/47867.2.diff/1565689455454107</guid>
      <description>&lt;p&gt;
Set &lt;code&gt;$num_words&lt;/code&gt; to 0 if non-numeric argument is passed.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29424 (Query argument 'orderby' makes duplicated parameters possible; does ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 13 Aug 2019 09:42:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29424#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29424#comment:12/1565689367966178</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47867 (wp_trim_excerpt and wp_trim_words don't validate the excerpt length (int)) updated</title>
      
        <dc:creator>donmhico</dc:creator>

      <pubDate>Tue, 13 Aug 2019 09:37:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47867#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47867#comment:3/1565689048668297</guid>
      <description>&lt;p&gt;
Hey @pikamander2, I see your point. I supposed that if existing plugins / themes do want to use the default 55, they should have not passed anything as &lt;code&gt;$num_words&lt;/code&gt; instead of passing empty string or null. And WP.org stays true to provide backward compatibility and not breaking any existing behaviour as much as possible. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'll upload an updated patch shortly.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47867 (wp_trim_excerpt and wp_trim_words don't validate the excerpt length (int)) updated</title>
      
        <dc:creator>pikamander2</dc:creator>

      <pubDate>Tue, 13 Aug 2019 09:23:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47867#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47867#comment:2/1565688230511384</guid>
      <description>&lt;p&gt;
Hi @donmhico, thanks for the quick fix.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
My main concern with defaulting the value to 55 is that it changes a longstanding behavior. Any plugins or themes that are passing "" or null to that function are currently receiving zero words, but once the patch is applied they'll be receiving 55 words.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In the case of Elementor Pro, for example, many users' Post Cards will suddenly change from this:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://i.imgur.com/qljC2Ec.png"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://i.imgur.com/qljC2Ec.png&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
to this:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://i.imgur.com/SNnqn5g.png"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://i.imgur.com/SNnqn5g.png&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
And because it's an obscure issue, they're gonna have no idea what caused it or how to fix it. That's going to lead to a lot of frustration.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Granted, that's not necessarily WordPress's problem, and it might be better to just go ahead and "rip off the band-aid" so to speak, but it's definitely something to consider.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43826 (get_post_galleries() should return gallery blocks) updated</title>
      
        <dc:creator>russhylov</dc:creator>

      <pubDate>Tue, 13 Aug 2019 09:07:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43826#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43826#comment:37/1565687255364464</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
WP 5.2.2 &lt;br /&gt;
All this functions ( get_post_gallery, get_post_galleries, get_post_galleries_images, get_attached_media) return empty array or false because post_parent cell is stays 0 when wp_post gets new record or the existing post is edited. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47867 (wp_trim_excerpt and wp_trim_words don't validate the excerpt length (int)) updated</title>
      
        <dc:creator>donmhico</dc:creator>

      <pubDate>Tue, 13 Aug 2019 08:52:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47867#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47867#comment:1/1565686373326273</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@pikamander2 - Welcome in the trac. Congratulations and thank you for your very first ticket. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I've attached a patched - &lt;a href="https://core.trac.wordpress.org/attachment/ticket/47867/47867.diff"&gt;47867.diff&lt;/a&gt; - that should fix your concern. However instead of using &lt;code&gt;0&lt;/code&gt; as length for non-numeric &lt;code&gt;$num_words&lt;/code&gt; passed to &lt;code&gt;wp_trim_words()&lt;/code&gt; (e.g. ' ', 'abc'), I think it's more reasonable to use the default &lt;code&gt;55&lt;/code&gt; length.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also, I didn't apply the fix in &lt;code&gt;wp_trim_excerpt()&lt;/code&gt; since it's ultimately uses &lt;code&gt;wp_trim_words()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>47867.diff attached to Ticket #47867</title>
      
        <dc:creator>donmhico</dc:creator>

      <pubDate>Tue, 13 Aug 2019 08:38:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47867/47867.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47867/47867.diff/1565685497654490</guid>
      <description>&lt;p&gt;
Patch + unit tests.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47867 (wp_trim_excerpt and wp_trim_words don't validate the excerpt length (int)) created</title>
      
        <dc:creator>pikamander2</dc:creator>

      <pubDate>Tue, 13 Aug 2019 07:57:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47867</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47867/1565683048375973</guid>
      <description>&lt;p&gt;
We noticed that our error log was filled with messages like this:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;PHP message: PHP Warning: A non-numeric value encountered in [...]/public_html/wp-includes/formatting.php on line 3770&lt;/strong&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The immediate culprit turned out to be Elementor Pro, which allows the user to input an excerpt length for its "Cards" element, but doesn't validate the value at all, so if the user's input is blank then it will set the excerpt length to a blank string value rather than 0. It does so via the &lt;code&gt;excerpt_length&lt;/code&gt; filter.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I've submitted the fix to their support, but shouldn't WordPress's core be validating that value as well? I can't think of any possible reason why you would want WordPress to attempt to use a non-numeric value in those functions.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Here are the relevant lines in wp-includes\formatting.php that prompt the warning:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;$excerpt_more = apply_filters( 'excerpt_more', ' ' . '[&amp;amp;hellip;]' );
$text         = wp_trim_words( $text, $excerpt_length, $excerpt_more );
//if...
$words_array = array_slice( $words_array[0], 0, $num_words + 1 );
//else...
$words_array = preg_split( "/[\n\r\t ]+/", $text, $num_words + 1, PREG_SPLIT_NO_EMPTY );
&lt;/pre&gt;&lt;p&gt;
Basically, the WordPress core sets the default excerpt length to 55, then applies the filters, then doesn't check the resulting value to make sure that it's valid.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I think that the sanitization logic should look something like this:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If the resulting value is neither and integer nor a float, replace it with 0.
&lt;/li&gt;&lt;li&gt;Else if the resulting value is a float, cast it to an integer
&lt;/li&gt;&lt;li&gt;Else use the value without any modification (since it's an integer and therefore valid)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Assuming that that all sounds good, I'm not sure whether it would be more appropriate to put the check at the end of &lt;code&gt;wp_trim_excerpt&lt;/code&gt; or at the start of &lt;code&gt;wp_trim_words&lt;/code&gt; (or both?).&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Tickets #33383,​47174 batch updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Tue, 13 Aug 2019 05:08:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=33383%2C47174</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=33383%2C47174/1565672895599875</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/45787" title="Comments: Include post permalink in comment reply link.
Include the ..."&gt;45787&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Comments: Include post permalink in comment reply link.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Include the post's permalink when generating reply links in &lt;code&gt;get_comment_reply_link()&lt;/code&gt; to account for comments displayed on index and archive pages.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This reapplies &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/32786" title="In `get_comment_reply_link()`, when generating the reply link, add the ..."&gt;[32786]&lt;/a&gt; which was inadvertently reverted in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42360" title="Comments: Modernise JavaScript for comment reply links.
Update the ..."&gt;[42360]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props justinahinon, donmhico.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33383" title="#33383: defect (bug): Comment reply links are always to first comment form on a page even ... (closed: fixed)"&gt;#33383&lt;/a&gt;.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/47174" title="#47174: defect (bug): Comment reply links are always to first comment form on a page when ... (closed: fixed)"&gt;#47174&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [45787]: Comments: Include post permalink in comment reply link.  Include the ...</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Tue, 13 Aug 2019 05:08:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/45787</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/45787/1565672894523195</guid>
      <description>&lt;p&gt;
Comments: Include post permalink in comment reply link.
&lt;/p&gt;
&lt;p&gt;
Include the post's permalink when generating reply links in &lt;code&gt;get_comment_reply_link()&lt;/code&gt; to account for comments displayed on index and archive pages.
&lt;/p&gt;
&lt;p&gt;
This reapplies &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/32786" title="In `get_comment_reply_link()`, when generating the reply link, add the ..."&gt;[32786]&lt;/a&gt; which was inadvertently reverted in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42360" title="Comments: Modernise JavaScript for comment reply links.
Update the ..."&gt;[42360]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Props justinahinon, donmhico.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33383" title="#33383: defect (bug): Comment reply links are always to first comment form on a page even ... (closed: fixed)"&gt;#33383&lt;/a&gt;.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/47174" title="#47174: defect (bug): Comment reply links are always to first comment form on a page when ... (closed: fixed)"&gt;#47174&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #47174 (Comment reply links are always to first comment form on a page when ...) updated</title>
      
        <dc:creator>donmhico</dc:creator>

      <pubDate>Tue, 13 Aug 2019 03:48:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47174#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47174#comment:6/1565668117225094</guid>
      <description>&lt;p&gt;
@peterwilsoncc - No problem. I'm reviewing your changes so my future patches would be better. Thank you as well.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47174 (Comment reply links are always to first comment form on a page when ...) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Tue, 13 Aug 2019 03:41:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47174#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47174#comment:5/1565667672947451</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks @donmhico, you read my mind!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/47174/47174.3.diff" title="Attachment '47174.3.diff' in Ticket #47174"&gt;47174.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/47174/47174.3.diff" title="Download"&gt;​&lt;/a&gt; is almost identical to version 2 with the following changes:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;some coding standards fixes
&lt;/li&gt;&lt;li&gt;renamed a couple of variables for clarity to indicate they contain IDs rather than objects
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>47174.3.diff attached to Ticket #47174</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Tue, 13 Aug 2019 03:36:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47174/47174.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47174/47174.3.diff/1565667365997454</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47820 (should update_option() check "manage_options" capability?) updated</title>
      
        <dc:creator>dinhtungdu</dc:creator>

      <pubDate>Tue, 13 Aug 2019 03:07:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47820#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47820#comment:5/1565665659883937</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/47820#comment:4" title="Comment 4"&gt;SergeyBiryukov&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Marking as a &lt;code&gt;good-first-bug&lt;/code&gt; to reflect that in the function documentation.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I updated the doc of &lt;code&gt;update_option&lt;/code&gt; to reflect the topic we discussed here.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47714 (Site Health: Alert about missing tables) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Tue, 13 Aug 2019 03:07:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47714#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47714#comment:1/1565665628975305</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Woo is checking their own custom tables, so I feel this is a separate thing (there's no reason Woo couldn't add a Site Health Check looking for their tables though, if that's something they'd like to do).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As for looking up missing tables from WordPress core, I'm a bit on the fence. I'd have to do some testing, but I would expect your install to be unusable if important tables were missing in the first place, I've not tested that though, so I'll have to do a bit of digging to see how that.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
And of course, is this a frequent enough scenario to warrant checks for it in the first place ?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>47820.diff attached to Ticket #47820</title>
      
        <dc:creator>dinhtungdu</dc:creator>

      <pubDate>Tue, 13 Aug 2019 03:00:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47820/47820.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47820/47820.diff/1565665242352767</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47866 (Document that register_meta's show_in_rest for Custom Post Types ...) closed</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Tue, 13 Aug 2019 01:51:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47866#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47866#comment:3/1565661061196332</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/45786" title="Docs: Clarify custom-fields support requirement for viewing custom ..."&gt;45786&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Clarify custom-fields support requirement for viewing custom post meta in REST API.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/47866" title="#47866: defect (bug): Document that register_meta's show_in_rest for Custom Post Types ... (closed: fixed)"&gt;#47866&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [45786]: Docs: Clarify custom-fields support requirement for viewing custom ...</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Tue, 13 Aug 2019 01:51:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/45786</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/45786/1565661060144573</guid>
      <description>&lt;p&gt;
Docs: Clarify custom-fields support requirement for viewing custom post meta in REST API.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/47866" title="#47866: defect (bug): Document that register_meta's show_in_rest for Custom Post Types ... (closed: fixed)"&gt;#47866&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>47863-4.patch attached to Ticket #47863</title>
      
        <dc:creator>mauteri</dc:creator>

      <pubDate>Tue, 13 Aug 2019 01:19:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47863/47863-4.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47863/47863-4.patch/1565659165465358</guid>
      <description>&lt;p&gt;
Extra semi-colon in last patch.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>47863-3.patch attached to Ticket #47863</title>
      
        <dc:creator>mauteri</dc:creator>

      <pubDate>Tue, 13 Aug 2019 01:18:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47863/47863-3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47863/47863-3.patch/1565659092643681</guid>
      <description>&lt;p&gt;
Additional tests and slight code adjustment.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47863 (Fix odd, unexpected output from shortcode_parse_attts) updated</title>
      
        <dc:creator>mauteri</dc:creator>

      <pubDate>Tue, 13 Aug 2019 01:17:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47863#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47863#comment:14/1565659033404959</guid>
      <description>&lt;p&gt;
Thanks @birgire, good points there. I've adjusted the trimming a bit. Mostly just pulling off any hanging &lt;code&gt;/&lt;/code&gt; at the end of the string with a preg_replace before trimming whitespace. I also added a few more tests you mentioned above with what I think the expected output would be given the circumstance. Let me know of you agree or if you have any comments on the additional tests. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Image 2019-08-12 at 6.13.20 PM.jpg attached to Ticket #25473</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Tue, 13 Aug 2019 00:14:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/25473/Image%202019-08-12%20at%206.13.20%20PM.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/25473/Image%202019-08-12%20at%206.13.20%20PM.jpg/1565655266260418</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #25473 (wp_text_diff creates wrong number of columns if title arguments are set) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Tue, 13 Aug 2019 00:14:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25473#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25473#comment:21/1565655240463271</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/25473/25473.2.diff" title="Attachment '25473.2.diff' in Ticket #25473"&gt;25473.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/25473/25473.2.diff" title="Download"&gt;​&lt;/a&gt; updates language and formatting slightly.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>25473.2.diff attached to Ticket #25473</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Tue, 13 Aug 2019 00:10:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/25473/25473.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/25473/25473.2.diff/1565655001289433</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47866 (Document that register_meta's show_in_rest for Custom Post Types ...) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Mon, 12 Aug 2019 23:56:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47866#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47866#comment:2/1565654192708924</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>superdav42</dc:creator>

      <pubDate>Mon, 12 Aug 2019 23:30:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:249</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:249/1565652629281164</guid>
      <description>&lt;p&gt;
Any plan to revisit this now that PHP 5.6 is the minimum version?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The PHP version requirement never really prevented an autoloader from being implemented but without needed to support PHP 5.2 the implementation can be much simpler.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Opcache &lt;a class="ext-link" href="https://wiki.php.net/rfc/preload"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Preloading&lt;/a&gt; will be introduced in PHP 7.4 and to properly take advantage of it WordPress will need a proper class pre-loader.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47866 (Document that register_meta's show_in_rest for Custom Post Types ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 12 Aug 2019 23:23:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47866#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47866#comment:1/1565652225659627</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #docs by kadamwhite. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/docs/p1565652224242700"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>docs-change.diff attached to Ticket #47866</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Mon, 12 Aug 2019 23:09:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47866/docs-change.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47866/docs-change.diff/1565651350324648</guid>
      <description>&lt;p&gt;
Proposed documentation adjustment for show_in_rest field
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47866 (Document that register_meta's show_in_rest for Custom Post Types ...) created</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Mon, 12 Aug 2019 23:08:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47866</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47866/1565651322842857</guid>
      <description>&lt;p&gt;
As noted previously in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40408" title="#40408: defect (bug): REST API (v2) Does not handle metadata (closed: reported-upstream)"&gt;#40408&lt;/a&gt; and captured in a &lt;a class="ext-link" href="https://github.com/WP-API/docs/issues/51"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;REST API handbook ticket&lt;/a&gt;, a custom post type must include &lt;code&gt;custom-fields&lt;/code&gt; in its &lt;code&gt;supports&lt;/code&gt; array or the &lt;code&gt;meta&lt;/code&gt; key will not appear in REST API responses even if that meta is properly registered using &lt;code&gt;register_meta&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This is true for both &lt;code&gt;register_meta&lt;/code&gt; and the derivative &lt;code&gt;register_post_meta&lt;/code&gt; method, as in the below rough example:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;register_post_type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'book'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s1"&gt;'public'&lt;/span&gt;       &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'show_in_rest'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'supports'&lt;/span&gt;     &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'title'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'editor'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;register_post_meta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'book'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'awards'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s1"&gt;'show_in_rest'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'single'&lt;/span&gt;       &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'type'&lt;/span&gt;         &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'integer'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The &lt;code&gt;meta&lt;/code&gt; key will be missing from the REST API responses for the &lt;code&gt;book&lt;/code&gt; post type in this example because &lt;code&gt;custom-fields&lt;/code&gt; is not included in the &lt;code&gt;supports&lt;/code&gt; array.&lt;br /&gt;
As meta over REST becomes more important to the block editor and complex plugins, I propose we expand the documentation of the &lt;code&gt;show_in_rest&lt;/code&gt; argument for &lt;code&gt;register_meta&lt;/code&gt; to highlight this caveat.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #47863 (Fix odd, unexpected output from shortcode_parse_attts) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Mon, 12 Aug 2019 22:05:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47863#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47863#comment:13/1565647558954529</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/47863#comment:12" title="Comment 12"&gt;mauteri&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@birgire oh, I think I misread the docblock on the return for &lt;code&gt;''&lt;/code&gt;. This looks to work as expected as I read through your additional tests. Thanks.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think we should also consider cases like:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;[unittest link=https://unit.test/ /]
[unittest title https://unit.test/ /]
&lt;/pre&gt;&lt;p&gt;
but then the trimming might remove too much.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
What do you think?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47863 (Fix odd, unexpected output from shortcode_parse_attts) updated</title>
      
        <dc:creator>mauteri</dc:creator>

      <pubDate>Mon, 12 Aug 2019 21:44:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47863#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47863#comment:12/1565646283709621</guid>
      <description>&lt;p&gt;
@birgire oh, I think I misread the docblock on the return for &lt;code&gt;''&lt;/code&gt;. This looks to work as expected as I read through your additional tests. Thanks.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47863 (Fix odd, unexpected output from shortcode_parse_attts) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Mon, 12 Aug 2019 21:24:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47863#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47863#comment:11/1565645066953896</guid>
      <description>&lt;p&gt;
I adjusted the inline docs and some WPCS in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/47863/47863-2.diff" title="Attachment '47863-2.diff' in Ticket #47863"&gt;47863-2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/47863/47863-2.diff" title="Download"&gt;​&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Added two trivial test cases.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I also think I would expect the inputs &lt;code&gt;'""'&lt;/code&gt; and &lt;code&gt;'\'\''&lt;/code&gt; to return an empty array, as the inline docs mentioned:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;* Returns empty array if trim( $text ) == '""'.
&lt;/pre&gt;&lt;p&gt;
The tests in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/47863/47863-2.diff" title="Attachment '47863-2.diff' in Ticket #47863"&gt;47863-2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/47863/47863-2.diff" title="Download"&gt;​&lt;/a&gt; run successfully on my install.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
OK (12 tests, 12 assertions)&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>47863-2.diff attached to Ticket #47863</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Mon, 12 Aug 2019 21:14:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47863/47863-2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47863/47863-2.diff/1565644456577254</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #46349 (Is your/this admin email still correct) updated</title>
      
        <dc:creator>nrqsnchz</dc:creator>

      <pubDate>Mon, 12 Aug 2019 19:33:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/46349#comment:55</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/46349#comment:55/1565638408580795</guid>
      <description>&lt;p&gt;
Adding some feedback from a user who wasn't able to comment on this ticket (&lt;a class="ext-link" href="https://make.wordpress.org/design/2019/08/07/design-meeting-notes-for-august-7-2019/#comment-25917"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/design/2019/08/07/design-meeting-notes-for-august-7-2019/#comment-25917&lt;/a&gt;)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
"I’m just a user, interested in the admin email confirmation because my company has a need for a similar sort of verification, so following the WP decisions about it is providing some helpful perspective. I had an idea and couldn’t comment on the ticket so I figured I’d drop a reply here in case anyone sees it.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I presume (or would hope, at least) that WP has integrated email tracking and you’d be able to tell whether any email to the admin address got opened or not. You could set the 6-month verification timeout based on the last open from that address, rather than arbitrarily every 6 calendar months. As a user, I’d be mildly annoyed to be asked to confirm an address that “you should know” I’m actively using, so this approach could maybe help minimize that."&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45917 (Twenty Nineteen: Consider adding a search option in the page header) updated</title>
      
        <dc:creator>craigtommola</dc:creator>

      <pubDate>Mon, 12 Aug 2019 19:08:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45917#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45917#comment:2/1565636889643558</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Curious if this has been looked into further ... I'd suggest that there's a bug beneath the decision to leave out the search field. I'm working in a child theme of 2019 and added a search field both "long hand" and with get_search_form(). On pages which also have navigation (I'm working in a multisite network - some subsites do not have a menu / nav) the search won't work while within div.site-branding ... it loses focus when I try to insert my cursor.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In the event listeners tab of Chrome dev tools, /wp-content/themes/twentynineteen/js/touch-keyboard-navigation.js?ver=1.1 seems to be the culprit? If I comment out the wp_enqueue_script at /wp-content/themes/twentynineteen/functions.php:226 the search field works consistently.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm probably going to end up with a bunch of extraneous wrappers to sort this out, but if there's a more correct solution, it'd be much appreciated.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47798 (WP Events Dashboard widget could be improved for multi-days events) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Mon, 12 Aug 2019 18:58:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47798#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47798#comment:13/1565636287378857</guid>
      <description>&lt;p&gt;
Ahh okay, thanks for the info! That makes sense.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>47798.4.2.patch attached to Ticket #47798</title>
      
        <dc:creator>imath</dc:creator>

      <pubDate>Mon, 12 Aug 2019 17:53:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47798/47798.4.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47798/47798.4.2.patch/1565632399280290</guid>
      <description>&lt;p&gt;
Using – at both places
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>47798.4.patch attached to Ticket #47798</title>
      
        <dc:creator>imath</dc:creator>

      <pubDate>Mon, 12 Aug 2019 17:41:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47798/47798.4.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47798/47798.4.patch/1565631668339418</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47798 (WP Events Dashboard widget could be improved for multi-days events) updated</title>
      
        <dc:creator>imath</dc:creator>

      <pubDate>Mon, 12 Aug 2019 17:40:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47798#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47798#comment:12/1565631639960710</guid>
      <description>&lt;p&gt;
Thanks a lot for your feedback @melchoyce : I haven't touch to how Meetups are displayed, the "18 h 30 min" is the meeting hour in French way of displaying a meeting time. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It depends on the date/hour settings of WordPress. I guess it must be something like "6:30 pm" for &lt;code&gt;en_US&lt;/code&gt;. For instance on this new screenshot below, I've used an en dash and changed my WordPress settings to use another way to display hours.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/xAIr06FPgc.png"&gt;&lt;img src="https://cldup.com/xAIr06FPgc.png" alt="https://cldup.com/xAIr06FPgc.png" crossorigin="anonymous" title="https://cldup.com/xAIr06FPgc.png" /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
47798.4.patch is using an en dash instead of an hyphen when WordCamps are more than one day long.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I've read @hareesh-pillai feedback about using a "short month" format for WordCamps. I think it's important to be consistent with how it is displayed on central.wordcamp.org. That's why I'm using a "full month" format.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40020 (Customizer fails to load in Safari due to X-Origin Header mismatch) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 12 Aug 2019 17:13:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40020#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40020#comment:17/1565629985060432</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-editor by adamsilverstein. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1565629983089900"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39625 (Give an error message when a non-image is uploaded for featured image) updated</title>
      
        <dc:creator>kjellr</dc:creator>

      <pubDate>Mon, 12 Aug 2019 17:04:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39625#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39625#comment:23/1565629442244054</guid>
      <description>&lt;p&gt;
Hey @worldweb — thanks for providing the screenshots. The design team had another look at this during our triage today: &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1565628896461300"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/design/p1565628896461300&lt;/a&gt; &lt;br /&gt;
&lt;em&gt;(A WordPress.org slack account is required to view that link)&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In general, this update looks great. Our only comment is that this could benefit from providing a list of the accepted file types. Is that something we can do here? &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks!&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39625 (Give an error message when a non-image is uploaded for featured image) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 12 Aug 2019 16:54:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39625#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39625#comment:22/1565628898007772</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by karmatosed. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1565628896461300"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47137 (Insufficient form semantics) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 12 Aug 2019 16:54:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47137#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47137#comment:4/1565628848223859</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by karmatosed. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1565628847460200"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47148 (Insufficient labelling and inappropriate nesting of form controls) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 12 Aug 2019 16:51:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47148#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47148#comment:4/1565628711792461</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by karmatosed. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1565628710457600"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47528 (Site Health: Add test for file checksums) updated</title>
      
        <dc:creator>killerbishop</dc:creator>

      <pubDate>Mon, 12 Aug 2019 16:49:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47528#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47528#comment:13/1565628540785222</guid>
      <description>&lt;p&gt;
@pgogy - I have the checksum download stored in a transient since that should not change. The checksum download is cached for one hour right now - but that could be changed if that is not long enough.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If you are talking about caching the results - I think you would want it to check every time in case some files were changed since the last run.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47145 (Feature Image dialog does not follow the dialog pattern) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 12 Aug 2019 16:48:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47145#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47145#comment:14/1565628516186644</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by karmatosed. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1565628514454500"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6148 (Internationalization of personal names) updated</title>
      
        <dc:creator>kjellr</dc:creator>

      <pubDate>Mon, 12 Aug 2019 16:48:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6148#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6148#comment:19/1565628511586688</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
👋 Would someone mind sharing a screenshot of the changes? That will help the design team weigh in on the update. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I think the patch may need an update as well — its failing to apply cleanly at the moment. Thanks!&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47610 (Media modal: add more headings to better identify the main sections ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 12 Aug 2019 16:47:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47610#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47610#comment:3/1565628478368520</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by karmatosed. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1565628477453600"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47798 (WP Events Dashboard widget could be improved for multi-days events) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Mon, 12 Aug 2019 16:43:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47798#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47798#comment:11/1565628210564015</guid>
      <description>&lt;p&gt;
One other comment — the “18 h 00 min” in @imath's last screenshot is confusing, IMO. Is that 18 hours until the event? Or the event itself is 18 hours long? Why is that information important?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6148 (Internationalization of personal names) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 12 Aug 2019 16:41:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6148#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6148#comment:18/1565628117984841</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by karmatosed. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1565628113450600"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47798 (WP Events Dashboard widget could be improved for multi-days events) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Mon, 12 Aug 2019 16:34:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47798#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47798#comment:10/1565627674670932</guid>
      <description>&lt;p&gt;
Super minor, can we be sure to use an en dash instead of a hyphen between date values? &lt;a class="ext-link" href="https://practicaltypography.com/hyphens-and-dashes.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://practicaltypography.com/hyphens-and-dashes.html&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47798 (WP Events Dashboard widget could be improved for multi-days events) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 12 Aug 2019 16:32:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47798#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47798#comment:9/1565627526792301</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by karmatosed. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1565627525446300"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47797 (Provide compatible core update for users not on PHP &gt;= 5.6) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 12 Aug 2019 16:27:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47797#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47797#comment:4/1565627265849145</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-site-health by garrett-eclipse. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-site-health/p1565627264179800"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47321 (Show different fatal error message when in Recovery Mode and unable to ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 12 Aug 2019 16:26:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47321#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47321#comment:41/1565627206085633</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-site-health by garrett-eclipse. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-site-health/p1565627204179300"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47528 (Site Health: Add test for file checksums) updated</title>
      
        <dc:creator>pgogy</dc:creator>

      <pubDate>Mon, 12 Aug 2019 16:22:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47528#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47528#comment:12/1565626922686859</guid>
      <description>&lt;p&gt;
Heya, first comment so apologies if this is all the wrong&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Discussion on site-health slack to possibly store the checksums in an JSON object in a transient post update, or after a check, so a sweep is faster. Apologies if already in there&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47528 (Site Health: Add test for file checksums) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 12 Aug 2019 16:15:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47528#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47528#comment:11/1565626528456771</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-site-health by pgogy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-site-health/p1565626527173500"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47765 (Email from improved fatal error protection) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 12 Aug 2019 16:13:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47765#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47765#comment:2/1565626392631540</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-site-health by clorith. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-site-health/p1565626391171700"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47626 (Multisite URL sent by mail on a classic site) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 12 Aug 2019 16:13:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47626#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47626#comment:3/1565626392548734</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-site-health by clorith. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-site-health/p1565626391171700"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47865 (Custom Post Types – Published Posts – Preview Changes URL’s – Page not ...) created</title>
      
        <dc:creator>SwansonPhotos</dc:creator>

      <pubDate>Mon, 12 Aug 2019 14:45:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47865</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47865/1565621141794059</guid>
      <description>&lt;p&gt;
Seeing as I started a forum discussion on this, perhaps the best place to start is there:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://wordpress.org/support/topic/custom-post-types-published-posts-preview-changes-urls-page-not-found/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/custom-post-types-published-posts-preview-changes-urls-page-not-found/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It includes all I believe should be relevant to the topic.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #13340 (wpautop breaks inline MathMl) updated</title>
      
        <dc:creator>conner_bw</dc:creator>

      <pubDate>Mon, 12 Aug 2019 14:40:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13340#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13340#comment:16/1565620836081757</guid>
      <description>&lt;p&gt;
PS: Would affect TinyMCE too:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/28ad3662fc6a7f829b33753785fa3a295bec121f/wp-admin/js/editor.js#L1012"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/28ad3662fc6a7f829b33753785fa3a295bec121f/wp-admin/js/editor.js#L1012&lt;/a&gt;&lt;br /&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/28ad3662fc6a7f829b33753785fa3a295bec121f/wp-admin/js/editor.js#L886"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/28ad3662fc6a7f829b33753785fa3a295bec121f/wp-admin/js/editor.js#L886&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>47863.1.patch attached to Ticket #47863</title>
      
        <dc:creator>mauteri</dc:creator>

      <pubDate>Mon, 12 Aug 2019 13:31:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47863/47863.1.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47863/47863.1.patch/1565616661381716</guid>
      <description>&lt;p&gt;
Updates to patch per first round of reviews
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47863 (Fix odd, unexpected output from shortcode_parse_attts) updated</title>
      
        <dc:creator>mauteri</dc:creator>

      <pubDate>Mon, 12 Aug 2019 13:30:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47863#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47863#comment:10/1565616623996236</guid>
      <description>&lt;p&gt;
@birgire this doesn't appear to be true from what I can tell...&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;* Returns empty string if trim( $text ) == ''.
&lt;/pre&gt;&lt;p&gt;
I wrote a test for this and it failed. I then removed my code changes to see if I introduced a bug and it still failed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This was my dataProvider for the test:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;array(
	'\'\'',
	'',
),
&lt;/pre&gt;&lt;pre class="wiki"&gt;There was 1 failure:
1) Tests_Shortcode::test_shortcode_parse_atts with data set #0 ('''', '')
Failed asserting that Array &amp;amp;0 () is identical to ''.
/srv/www/wordpress-trunk/public_html/tests/phpunit/tests/shortcode.php:1054
&lt;/pre&gt;&lt;p&gt;
Possible this was wrong for a while and no one noticed due to lack of tests?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Curious if this is the case, that this function now only returns arrays and not strings. I can spend more time and see what kind of coverage we have for the function with the tests I've already written.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Added &lt;code&gt;47863.1.patch&lt;/code&gt; with most recent updates, though more changes to DocBlocks will definitely need to be added.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47863 (Fix odd, unexpected output from shortcode_parse_attts) updated</title>
      
        <dc:creator>mauteri</dc:creator>

      <pubDate>Mon, 12 Aug 2019 12:40:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47863#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47863#comment:9/1565613625483584</guid>
      <description>&lt;p&gt;
Great, thanks to both of you for the additional info and reasoning.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47320 (Site Health: Call to API with $_COOKIE and PHPSESSID) updated</title>
      
        <dc:creator>netweblogic</dc:creator>

      <pubDate>Mon, 12 Aug 2019 12:37:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47320#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47320#comment:9/1565613455095242</guid>
      <description>&lt;p&gt;
For anyone wondering, if you open a session early to load up $_SESSION variables, and then session_write_close(), you can reopen it and write at any point in time by just using session_start() again, writing what you need and closing it right after. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If the session is open early on, headers are sent and starting a session even after headers are sent is not going to cause any warnings/errors.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I've found in my case this gets around any session locking issues and allows you to read/write to sessions without any hindrance.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47863 (Fix odd, unexpected output from shortcode_parse_attts) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Mon, 12 Aug 2019 11:17:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47863#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47863#comment:8/1565608643447768</guid>
      <description>&lt;p&gt;
I agree with @SergeyBiryukov in keeping the &lt;code&gt;$text&lt;/code&gt;, if the documentation is improved. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It also comes to mind that it might be worth mentioning that this is meant for a single shortcode as we would not be able to find what key/value belongs to each shortcode, from the output of e.g. &lt;code&gt; shortcode_parse_atts( '[a b="c"][d e="f"]' )&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
ps:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I updated my comment above regarding the &lt;code&gt;@ticket 47863&lt;/code&gt; annotation.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47863 (Fix odd, unexpected output from shortcode_parse_attts) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 12 Aug 2019 10:14:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47863#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47863#comment:7/1565604892881575</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/47863#comment:6" title="Comment 6"&gt;mauteri&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Could that standard now be dated since shorthand arrays in PHP was introduced in PHP 5.4 and maybe the WordPress standard should be updated to reflect what is possible in the new minimum version of PHP?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The &lt;a class="ext-link" href="https://make.wordpress.org/core/2019/07/12/php-coding-standards-changes/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PHP Coding Standards Changes&lt;/a&gt; post linked above explains the reasoning:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;strong&gt;Short Array Syntax&lt;/strong&gt;&lt;br /&gt;
A little less controversial, but still with varying opinions, was the proposal to require short array syntax ( &lt;code&gt;[ 1, 2, 3 ]&lt;/code&gt; ) instead of long array syntax ( &lt;code&gt;array( 1, 2, 3 )&lt;/code&gt; ) for declaring arrays.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
While I’m personally partial to short array syntax, there were two particularly convincing arguments for using long array syntax:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;It’s easier to distinguish from other forms of braces, particularly for those with vision difficulties.
&lt;/li&gt;&lt;li&gt;It’s much more descriptive for beginners.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
So, this change to the coding standards is the opposite of what was originally proposed, but is ultimately the more inclusive option.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Coding Standards Change&lt;/strong&gt;&lt;br /&gt;
Arrays must be declared using long array syntax in WordPress Core.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, I found the &lt;code&gt;$text&lt;/code&gt; parameter naming to be a bit odd. Just from seeing the name of the function &lt;code&gt;shortcode_parse_atts&lt;/code&gt; seems it should ONLY accept shortcodes to have their atts parsed (which made it very odd to me when it messed that up in the first place).  Seems a better name for that argument would be &lt;code&gt;$shortcode&lt;/code&gt; to make it very clear that a shortcode should be passed to it to have its atts parsed.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Based on the current usage in core (a string of shortcode attributes, rather than a full shortcode), I would keep the &lt;code&gt;$text&lt;/code&gt; name as is and clarify in the documentation that it can also be a shortcode. That said, I wouldn't object too strongly to changing the name.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47767 (Simplify and backport the local environment) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Mon, 12 Aug 2019 09:22:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47767#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47767#comment:42/1565601721153705</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/45785" title="Build Tools: Remove the old `docker-compose.yml` file, now no longer ..."&gt;45785&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Build Tools: Remove the old &lt;code&gt;docker-compose.yml&lt;/code&gt; file, now no longer used.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/47767" title="#47767: task (blessed): Simplify and backport the local environment (assigned)"&gt;#47767&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [45785]: Build Tools: Remove the old `docker-compose.yml` file, now no longer ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Mon, 12 Aug 2019 09:22:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/45785</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/45785/1565601720126677</guid>
      <description>&lt;p&gt;
Build Tools: Remove the old &lt;code&gt;docker-compose.yml&lt;/code&gt; file, now no longer used.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/47767" title="#47767: task (blessed): Simplify and backport the local environment (assigned)"&gt;#47767&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #47767 (Simplify and backport the local environment) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Mon, 12 Aug 2019 09:20:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47767#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47767#comment:41/1565601607401366</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/45784" title="Build Tools: Add the `docker-compose.yml` file, missed in [45783].
 ..."&gt;45784&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Build Tools: Add the &lt;code&gt;docker-compose.yml&lt;/code&gt; file, missed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/45783" title="Build Tools: Miscellaneous `local-env` improvements.
- Move the ..."&gt;[45783]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/47767" title="#47767: task (blessed): Simplify and backport the local environment (assigned)"&gt;#47767&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [45784]: Build Tools: Add the `docker-compose.yml` file, missed in [45783].  ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Mon, 12 Aug 2019 09:20:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/45784</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/45784/1565601606347493</guid>
      <description>&lt;p&gt;
Build Tools: Add the &lt;code&gt;docker-compose.yml&lt;/code&gt; file, missed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/45783" title="Build Tools: Miscellaneous `local-env` improvements.
- Move the ..."&gt;[45783]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/47767" title="#47767: task (blessed): Simplify and backport the local environment (assigned)"&gt;#47767&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #47174 (Comment reply links are always to first comment form on a page when ...) updated</title>
      
        <dc:creator>donmhico</dc:creator>

      <pubDate>Mon, 12 Aug 2019 09:05:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47174#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47174#comment:4/1565600702027865</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I added unit test in my patch - &lt;a href="https://core.trac.wordpress.org/attachment/ticket/47174/47174.2.diff"&gt;47174.2.diff&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Seeing that this issue "resurfaced", a unit test would be beneficially to prevent this from happening again.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>47174.2.diff attached to Ticket #47174</title>
      
        <dc:creator>donmhico</dc:creator>

      <pubDate>Mon, 12 Aug 2019 09:01:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47174/47174.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47174/47174.2.diff/1565600462513673</guid>
      <description>&lt;p&gt;
Added unit test.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47767 (Simplify and backport the local environment) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Mon, 12 Aug 2019 08:28:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47767#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47767#comment:40/1565598514569363</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/45783" title="Build Tools: Miscellaneous `local-env` improvements.
- Move the ..."&gt;45783&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Build Tools: Miscellaneous &lt;code&gt;local-env&lt;/code&gt; improvements.&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Move the functionality for controlling &lt;code&gt;local-env&lt;/code&gt; out of &lt;code&gt;package.json&lt;/code&gt;, into JS scripts.
&lt;/li&gt;&lt;li&gt;Merge the &lt;code&gt;docker-compose&lt;/code&gt; config files, and move it to the root directory. This allows &lt;code&gt;docker-compose.override.yml&lt;/code&gt; to work for local overrides.
&lt;/li&gt;&lt;li&gt;Fix nginx redirecting to port 80 under some circumstances.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;npm run env:install&lt;/code&gt; now creates &lt;code&gt;wp-tests.config.php&lt;/code&gt; for you.
&lt;/li&gt;&lt;li&gt;Cleaned up a bunch of cruft in &lt;code&gt;.travis.yml&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
See &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/47767" title="#47767: task (blessed): Simplify and backport the local environment (assigned)"&gt;#47767&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [45783]: Build Tools: Miscellaneous `local-env` improvements.  - Move the ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Mon, 12 Aug 2019 08:28:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/45783</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/45783/1565598513443039</guid>
      <description>&lt;p&gt;
Build Tools: Miscellaneous &lt;code&gt;local-env&lt;/code&gt; improvements.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Move the functionality for controlling &lt;code&gt;local-env&lt;/code&gt; out of &lt;code&gt;package.json&lt;/code&gt;, into JS scripts.
&lt;/li&gt;&lt;li&gt;Merge the &lt;code&gt;docker-compose&lt;/code&gt; config files, and move it to the root directory. This allows &lt;code&gt;docker-compose.override.yml&lt;/code&gt; to work for local overrides.
&lt;/li&gt;&lt;li&gt;Fix nginx redirecting to port 80 under some circumstances.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;npm run env:install&lt;/code&gt; now creates &lt;code&gt;wp-tests.config.php&lt;/code&gt; for you.
&lt;/li&gt;&lt;li&gt;Cleaned up a bunch of cruft in &lt;code&gt;.travis.yml&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
See &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/47767" title="#47767: task (blessed): Simplify and backport the local environment (assigned)"&gt;#47767&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #47861 (PHPDoc correction for get_last_updated in wp-includes/ms-blogs.php) updated</title>
      
        <dc:creator>atachibana</dc:creator>

      <pubDate>Mon, 12 Aug 2019 07:44:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47861#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47861#comment:4/1565595867556530</guid>
      <description>&lt;p&gt;
@SergeyBiryukov &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thank you for correcting my knowledge by&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
For reference, @since MU (3.0.0) is not the same as @since 3.0.0,&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It must have been tough work to merge two stream lines into one...&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47767 (Simplify and backport the local environment) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Mon, 12 Aug 2019 07:33:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47767#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47767#comment:39/1565595192466958</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/47767/47767.18.diff" title="Attachment '47767.18.diff' in Ticket #47767"&gt;47767.18.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/47767/47767.18.diff" title="Download"&gt;​&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;npm run env:install&lt;/code&gt; now sets up a &lt;code&gt;wp-tests-config.php&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;A bunch of unnecessary cruft is gone from .travis.yml.
&lt;/li&gt;&lt;/ul&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
I noticed some places where the JavaScript doesn't quite follow our JavaScript coding standards and so ran the Gutenberg lint tool on these changes, see below. (Does Core have a similar tool? Could we get it to check these new files?)&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Core uses JSHint, but it's configured for ES5, not ES6. I don't know if anyone is working merging the different tools between Gutenberg and Core.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>47767.18.diff attached to Ticket #47767</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Mon, 12 Aug 2019 07:23:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47767/47767.18.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47767/47767.18.diff/1565594582433811</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>47767.17.diff attached to Ticket #47767</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Mon, 12 Aug 2019 07:22:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47767/47767.17.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47767/47767.17.diff/1565594531777699</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37998 (readme.txt and readme.md) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Mon, 12 Aug 2019 06:54:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37998#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37998#comment:13/1565592877606377</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37998#comment:12" title="Comment 12"&gt;noisysocks&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/45745" title="Build Tools: Add a WordPress Development Environment.
This commit ..."&gt;[45745]&lt;/a&gt; included a &lt;code&gt;README.md&lt;/code&gt; file.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
👌🏼&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37998 (readme.txt and readme.md) closed</title>
      
        <dc:creator>noisysocks</dc:creator>

      <pubDate>Mon, 12 Aug 2019 06:29:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37998#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37998#comment:12/1565591381027175</guid>
      <description>fixed: &lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/45745" title="Build Tools: Add a WordPress Development Environment.
This commit ..."&gt;[45745]&lt;/a&gt; included a &lt;code&gt;README.md&lt;/code&gt; file.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #23498 (wp_list_authors ignores 'exclude_admin' arg when admin account has a ...) updated</title>
      
        <dc:creator>donmhico</dc:creator>

      <pubDate>Mon, 12 Aug 2019 05:55:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23498#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23498#comment:12/1565589325097004</guid>
      <description>&lt;p&gt;
The bug still persist in 5.3. I've attached a refreshed patch - &lt;a href="https://core.trac.wordpress.org/attachment/ticket/23498/23498.4.diff"&gt;23498.4.diff&lt;/a&gt; - and I did some updates in the unit test.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47223 (Site Health Check: "last missed cron" test too aggressive) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Mon, 12 Aug 2019 05:52:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47223#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47223#comment:30/1565589151651519</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/47223/47223.8.diff" title="Attachment '47223.8.diff' in Ticket #47223"&gt;47223.8.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/47223/47223.8.diff" title="Download"&gt;​&lt;/a&gt; is &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/47223/47223.7.diff" title="Attachment '47223.7.diff' in Ticket #47223"&gt;47223.7.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/47223/47223.7.diff" title="Download"&gt;​&lt;/a&gt; but now with unit tests.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>47223.8.diff attached to Ticket #47223</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Mon, 12 Aug 2019 05:50:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47223/47223.8.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47223/47223.8.diff/1565589027201583</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>23498.4.diff attached to Ticket #23498</title>
      
        <dc:creator>donmhico</dc:creator>

      <pubDate>Mon, 12 Aug 2019 05:50:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23498/23498.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23498/23498.4.diff/1565589023423622</guid>
      <description>&lt;p&gt;
Refreshed the patch for 5.3.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47863 (Fix odd, unexpected output from shortcode_parse_attts) updated</title>
      
        <dc:creator>mauteri</dc:creator>

      <pubDate>Mon, 12 Aug 2019 02:35:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47863#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47863#comment:6/1565577319766007</guid>
      <description>&lt;p&gt;
Thanks for the feedback, @birgire. All sounds very reasonable. Curious about the long array syntax since PHP minimum requirement was just raised from 5.2 to 5.6.20 only in last major version. Could that standard now be dated since shorthand arrays in PHP was introduced in PHP 5.4 and maybe the WordPress standard should be updated to reflect what is possible in the new minimum version of PHP?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also, I found the &lt;code&gt;$text&lt;/code&gt; parameter naming to be a bit odd. Just from seeing the name of the function &lt;code&gt;shortcode_parse_atts&lt;/code&gt; seems it should ONLY accept shortcodes to have their atts parsed (which made it very odd to me when it messed that up in the first place).  Seems a better name for that argument would be &lt;code&gt;$shortcode&lt;/code&gt; to make it very clear that a shortcode should be passed to it to have its atts parsed. I'm just thinking of other improvements that could be made if you and others agree.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47767 (Simplify and backport the local environment) updated</title>
      
        <dc:creator>noisysocks</dc:creator>

      <pubDate>Mon, 12 Aug 2019 02:01:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47767#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47767#comment:38/1565575291314817</guid>
      <description>&lt;p&gt;
This looks great! It's nice that we're able to avoid so much repetition. I applied &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/47767/47767.16.diff" title="Attachment '47767.16.diff' in Ticket #47767"&gt;47767.16.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/47767/47767.16.diff" title="Download"&gt;​&lt;/a&gt; and tested all of the commands on my macOS machine and it's working as before.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I noticed some places where the JavaScript doesn't quite follow our JavaScript coding standards and so ran the Gutenberg lint tool on these changes, see below. (Does Core have a similar tool? Could we get it to check these new files?)&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;$ cp ~/projects/gutenberg/.eslintrc.js .
$ npm install --no-save eslint-plugin-jest
$ npx eslint tools/local-env/scripts/*.js
/Users/robert/projects/wordpress-develop/tools/local-env/scripts/install.js
   2:7    error  Identifier 'wait_on' is not in camel case  camelcase
  13:30   error  Expected space(s) after '${'               template-curly-spacing
  13:58   error  Expected space(s) before '}'               template-curly-spacing
  14:34   error  Expected space(s) after '${'               template-curly-spacing
  14:66   error  Expected space(s) before '}'               template-curly-spacing
  15:38   error  Expected space(s) after '${'               template-curly-spacing
  15:74   error  Expected space(s) before '}'               template-curly-spacing
  16:34   error  Expected space(s) after '${'               template-curly-spacing
  16:66   error  Expected space(s) before '}'               template-curly-spacing
  22:40   error  Expected space(s) after '${'               template-curly-spacing
  22:64   error  Expected space(s) before '}'               template-curly-spacing
  22:66   error  A space is required before ']'             array-bracket-spacing
  25:162  error  Expected space(s) after '${'               template-curly-spacing
  25:186  error  Expected space(s) before '}'               template-curly-spacing
  33:10   error  Identifier 'wp_cli' is not in camel case   camelcase
  34:41   error  Expected space(s) after '${'               template-curly-spacing
  34:46   error  Expected space(s) before '}'               template-curly-spacing
/Users/robert/projects/wordpress-develop/tools/local-env/scripts/start.js
  12:58   error  Expected space(s) after '${'  template-curly-spacing
  12:93   error  Expected space(s) before '}'  template-curly-spacing
  12:121  error  Missing semicolon             semi
  13:14   error  Expected space(s) after '${'  template-curly-spacing
  13:26   error  Expected space(s) before '}'  template-curly-spacing
  13:40   error  Expected space(s) after '${'  template-curly-spacing
  13:73   error  Expected space(s) before '}'  template-curly-spacing
  13:92   error  Expected space(s) after '${'  template-curly-spacing
  13:116  error  Expected space(s) before '}'  template-curly-spacing
  13:132  error  Expected space(s) after '${'  template-curly-spacing
  13:156  error  Expected space(s) before '}'  template-curly-spacing
  13:159  error  Expected space(s) after '${'  template-curly-spacing
  13:183  error  Expected space(s) before '}'  template-curly-spacing
✖ 30 problems (30 errors, 0 warnings)
  28 errors and 0 warnings potentially fixable with the `--fix` option.
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47828 (Two constants  DB_CHARSET &amp; DB_COLLATE  in health site WordPress Constants) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 12 Aug 2019 01:53:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47828#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47828#comment:3/1565574798376376</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/45782" title="Site Health: Add database charset and collation information to debug ..."&gt;45782&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Site Health: Add database charset and collation information to debug info.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props sharaz, Clorith, SergeyBiryukov.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/47828" title="#47828: enhancement: Two constants  DB_CHARSET &amp;amp; DB_COLLATE  in health site WordPress Constants (closed: fixed)"&gt;#47828&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [45782]: Site Health: Add database charset and collation information to debug ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 12 Aug 2019 01:53:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/45782</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/45782/1565574797308092</guid>
      <description>&lt;p&gt;
Site Health: Add database charset and collation information to debug info.
&lt;/p&gt;
&lt;p&gt;
Props sharaz, Clorith, SergeyBiryukov.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/47828" title="#47828: enhancement: Two constants  DB_CHARSET &amp;amp; DB_COLLATE  in health site WordPress Constants (closed: fixed)"&gt;#47828&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #47767 (Simplify and backport the local environment) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Mon, 12 Aug 2019 01:07:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47767#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47767#comment:37/1565572065002754</guid>
      <description>&lt;p&gt;
Here's a sample &lt;code&gt;docker-compose.override.yml&lt;/code&gt; to place in your WordPress checkout, which will load Gutenberg when you start the environment (assuming your Gutenberg directory is in a sibling directory called &lt;code&gt;gutenberg&lt;/code&gt;, of course 🙂).&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;version: '3.7'
services:
  wordpress-develop:
    volumes:
      - ../gutenberg:/var/www/${LOCAL_DIR-src}/wp-content/plugins/gutenberg
  php:
    volumes:
      - ../gutenberg:/var/www/${LOCAL_DIR-src}/wp-content/plugins/gutenberg
  cli:
    volumes:
      - ../gutenberg:/var/www/${LOCAL_DIR-src}/wp-content/plugins/gutenberg
  phpunit:
    volumes:
      - ../gutenberg:/wordpress-develop/${LOCAL_DIR-src}/wp-content/plugins/gutenberg
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47767 (Simplify and backport the local environment) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Mon, 12 Aug 2019 01:00:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47767#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47767#comment:36/1565571659405185</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/47767/47767.16.diff" title="Attachment '47767.16.diff' in Ticket #47767"&gt;47767.16.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/47767/47767.16.diff" title="Download"&gt;​&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Combine the &lt;code&gt;docker-compose.yml&lt;/code&gt; and &lt;code&gt;docker-compose.scripts.yml&lt;/code&gt; files, and move them to the root directory. This means we don't have to specify the filenames when running &lt;code&gt;docker-compose&lt;/code&gt;, so can now use &lt;code&gt;docker-compose.override.yml&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Fix nginx redirecting to port 80 when the URL is a directory name, but doesn't end in a &lt;code&gt;/&lt;/code&gt;. (eg, requesting &lt;code&gt;/wp-admin&lt;/code&gt; instead of &lt;code&gt;/wp-admin/&lt;/code&gt;.)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Note for committing: &lt;code&gt;docker-compose.override.yml&lt;/code&gt; will need to be added to &lt;code&gt;svn:ignore&lt;/code&gt;. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
@youknowriad: I think there are issues when running the Gutenberg local environment and Core local environment at the same time, the MySQL instances try to mount the same internal data directory, or something of that nature.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm experimenting with how best to modify Gutenberg's local environment, so it can use Core, instead. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>47767.16.diff attached to Ticket #47767</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Mon, 12 Aug 2019 00:54:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47767/47767.16.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47767/47767.16.diff/1565571270908903</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>4.diff attached to Ticket #47528</title>
      
        <dc:creator>killerbishop</dc:creator>

      <pubDate>Mon, 12 Aug 2019 00:33:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47528/4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47528/4.diff/1565570015671308</guid>
      <description>&lt;p&gt;
Patch for &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/47528" title="#47528: enhancement: Site Health: Add test for file checksums (new)"&gt;#47528&lt;/a&gt; - requested changes
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47863 (Fix odd, unexpected output from shortcode_parse_attts) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Mon, 12 Aug 2019 00:16:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47863#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47863#comment:5/1565568978558642</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks @SergeyBiryukov &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Reading the docblock's description of &lt;code&gt;shortcode_parse_atts()&lt;/code&gt;,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/browser/tags/5.2/src/wp-includes/shortcodes.php#L483"&gt;https://core.trac.wordpress.org/browser/tags/5.2/src/wp-includes/shortcodes.php#L483&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
it seems to indicate that this should be supported, e.g.:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt; * Retrieve all attributes from the shortcodes tag.
&lt;/pre&gt;&lt;p&gt;
So at a first glance, it seems like a good enhancement.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Maybe the docblock could be enhanced as well, e.g. adding a descripton to the &lt;code&gt;* @param string $text&lt;/code&gt; part?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Just curious about the &lt;code&gt;\w+&lt;/code&gt; choice in the patch, as I noticed that in &lt;code&gt;get_shortcode_atts_regex()&lt;/code&gt; &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/browser/tags/5.2/src/wp-includes/shortcodes.php#L480"&gt;https://core.trac.wordpress.org/browser/tags/5.2/src/wp-includes/shortcodes.php#L480&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
we have &lt;code&gt;[\w-]+&lt;/code&gt;. I guess these should match?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I didn't find any explicit tests for &lt;code&gt;shortcode_parse_atts()&lt;/code&gt;, so it seems good to add them.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In the description of &lt;code&gt;shortcode_parse_atts()&lt;/code&gt; we have:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;* @return array|string List of attribute values.
*                      Returns empty array if trim( $text ) == '""'.
*                      Returns empty string if trim( $text ) == ''.
*                      All other matches are checked for not empty().
&lt;/pre&gt;&lt;p&gt;
so I would suggest adding these test cases to the data provider in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/47863/47863.patch" title="Attachment '47863.patch' in Ticket #47863"&gt;47863.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/47863/47863.patch" title="Download"&gt;​&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
And also test cases with &lt;code&gt;-&lt;/code&gt; in the shortcode's tag name.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
ps: &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
According to &lt;a class="ext-link" href="https://make.wordpress.org/core/2019/07/12/php-coding-standards-changes/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2019/07/12/php-coding-standards-changes/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Arrays must be declared using long array syntax in WordPress Core.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
so I would assume it applying to the tests as well.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Then we would need to add a &lt;code&gt;@ticket 47863&lt;/code&gt; in the docblock of the test method.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47528 (Site Health: Add test for file checksums) updated</title>
      
        <dc:creator>killerbishop</dc:creator>

      <pubDate>Mon, 12 Aug 2019 00:11:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47528#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47528#comment:10/1565568687173299</guid>
      <description>&lt;p&gt;
@Clorith - sure - I'll push an update with the missing &lt;code&gt;__()&lt;/code&gt; wrapper function for translations - I only see one right now. I also rename all &lt;code&gt;code_integrity&lt;/code&gt; to &lt;code&gt;core_integrity&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Scenarios that are covered:&lt;br /&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;strong&gt;Checksum download failure&lt;/strong&gt;: If the &lt;code&gt;core_get_checksums()&lt;/code&gt; function fails to return checksums for any reason - then an error will be produced.
&lt;/li&gt;&lt;/ol&gt;&lt;ul&gt;&lt;li&gt;&lt;em&gt;Status&lt;/em&gt;: &lt;code&gt;critical&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;em&gt;Label&lt;/em&gt;: &lt;code&gt;Unable to scan core files for changes&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;em&gt;Description&lt;/em&gt;: &lt;code&gt;The checksum file list could not be downloaded. There maybe a connection issue or a list is not available for this version. Please try to run this test again at a later time.&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;ol start="2"&gt;&lt;li&gt;&lt;strong&gt;Checksum mismatch or missing files&lt;/strong&gt;: If any file is found missing or with a mismatched checksum - then this recommendation status will be produced. The exception is for any items listed in &lt;code&gt;wp-content&lt;/code&gt; - that directory is ignored. The action links to the &lt;code&gt;update-core.php?force_check=1&lt;/code&gt; admin URL.
&lt;/li&gt;&lt;/ol&gt;&lt;ul&gt;&lt;li&gt;&lt;em&gt;Status&lt;/em&gt;: &lt;code&gt;recommended&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;em&gt;Label&lt;/em&gt;: &lt;code&gt;Some core files may have been modified&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;em&gt;Description&lt;/em&gt;: &lt;code&gt;Some WordPress core files may have been changed. One reason this check can fail is that you need to install a version that makes use of the right translation files. If you have the ability to do so, a simple fix is to reinstall WordPress. Reinstall of the core system should not affect any plugins, themes, or content that you have posted.&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;em&gt;Action&lt;/em&gt;: &lt;code&gt;Reinstall WordPress manually&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;ol start="3"&gt;&lt;li&gt;&lt;strong&gt;Everything checks out fine&lt;/strong&gt;: If everything is OK - then the test is considered passed.
&lt;/li&gt;&lt;/ol&gt;&lt;ul&gt;&lt;li&gt;&lt;em&gt;Status&lt;/em&gt;: &lt;code&gt;good&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;em&gt;Label&lt;/em&gt;: &lt;code&gt;No changes to the core files are detected&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;em&gt;Description&lt;/em&gt;: &lt;code&gt;A scan for changes to the core WordPress files was performed. No changes are detected.&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The label declared in the async process list is &lt;code&gt;WordPress Core Files Integrity Check&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>