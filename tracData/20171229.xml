<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #42998 (Custom HTML Widget uses widget_text twice in markup) updated</title>
      
        <dc:creator>dreamwhisper</dc:creator>

      <pubDate>Fri, 29 Dec 2017 21:55:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42998#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42998#comment:1/1514584504443849</guid>
      <description>&lt;p&gt;
For additional information, this only happens if a theme alters the before_widget attribute to include an element with a class attribute. This is due to the regex in &lt;a href="https://core.trac.wordpress.org/changeset/41117"&gt;https://core.trac.wordpress.org/changeset/41117&lt;/a&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;register_sidebar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="s1"&gt;'name'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Primary Widget Area'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'twentyten'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="s1"&gt;'id'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'primary-widget-area'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;'description'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Add widgets here to appear in your sidebar.'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'twentyten'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="s1"&gt;'before_widget'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;div id="%1$s" class="widget-container %2$s"&amp;gt;&amp;lt;div class="widget-wrap"&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;'after_widget'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;'before_title'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;h3 class="widget-title"&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;'after_title'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;/h3&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43001 (Page Slug and Attachment - Conflict) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 29 Dec 2017 21:26:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43001#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43001#comment:2/1514582788752600</guid>
      <description>&lt;p&gt;
Note that media items which aren't attached to a post can be accessed via &lt;code&gt;example.com/my-attachment-slug/&lt;/code&gt;, hence this check within &lt;code&gt;wp_unique_post_slug()&lt;/code&gt;. Your patch would break that behaviour.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43001 (Page Slug and Attachment - Conflict) updated</title>
      
        <dc:creator>sebastian.pisula</dc:creator>

      <pubDate>Fri, 29 Dec 2017 21:23:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43001#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43001#comment:1/1514582603499709</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43001.patch attached to Ticket #43001</title>
      
        <dc:creator>sebastian.pisula</dc:creator>

      <pubDate>Fri, 29 Dec 2017 21:16:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43001/43001.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43001/43001.patch/1514582200773251</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43001 (Page Slug and Attachment - Conflict) created</title>
      
        <dc:creator>sebastian.pisula</dc:creator>

      <pubDate>Fri, 29 Dec 2017 21:15:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43001</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43001/1514582131119011</guid>
      <description>&lt;p&gt;
I found problem. My attachment have post_name "test" and I want set for my new page post_name "test" and WordPress generate "test-2". I think that problem is with wp_unique_post_slug function in file: wp-includes/post.php:3950:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$check_sql  = "SELECT post_name FROM $wpdb-&amp;gt;posts WHERE post_name = %s AND post_type IN ( %s, 'attachment' ) AND ID != %d AND post_parent = %d LIMIT 1";
&lt;/pre&gt;&lt;p&gt;
I attach fix
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43000 (Search for pages or media does not work) updated</title>
      
        <dc:creator>beachymel</dc:creator>

      <pubDate>Fri, 29 Dec 2017 19:46:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43000#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43000#comment:1/1514576811401085</guid>
      <description>&lt;p&gt;
Website: www.miltonscene.com
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43000 (Search for pages or media does not work) created</title>
      
        <dc:creator>beachymel</dc:creator>

      <pubDate>Fri, 29 Dec 2017 19:46:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43000</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43000/1514576773302367</guid>
      <description>&lt;p&gt;
When I try to search for a specific page or an image in the media library, I cannot. Search yields the main page. It's super frustrating.
&lt;/p&gt;
&lt;p&gt;
Cleared cache, updated everything, etc. It has been broken for a good month.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42999 (A Super Admin can have no caps on a /wp/v2/users/me?context=edit REST ...) updated</title>
      
        <dc:creator>imath</dc:creator>

      <pubDate>Fri, 29 Dec 2017 18:36:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42999#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42999#comment:1/1514572599128694</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>42999.diff attached to Ticket #42999</title>
      
        <dc:creator>imath</dc:creator>

      <pubDate>Fri, 29 Dec 2017 18:35:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42999/42999.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42999/42999.diff/1514572516720543</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42999 (A Super Admin can have no caps on a /wp/v2/users/me?context=edit REST ...) created</title>
      
        <dc:creator>imath</dc:creator>

      <pubDate>Fri, 29 Dec 2017 18:34:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42999</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42999/1514572487381370</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
When testing Gutenberg, as it uses the REST API &lt;code&gt;/wp/v2/users/me?context=edit&lt;/code&gt; request to get the current user capabilities I've noticed this request can return an empty object for the user's capabilities although the current user is a Super Administrator.
&lt;/p&gt;
&lt;p&gt;
Steps to reproduce in a multisite config:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;log as a super administrator.
&lt;/li&gt;&lt;li&gt;create a new user from the network administration.
&lt;/li&gt;&lt;li&gt;create a new site for this created user.
&lt;/li&gt;&lt;li&gt;Request &lt;code&gt;/wp/v2/users/me?context=edit&lt;/code&gt; on the newly created site.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
I think even if a Super Admin has no role on a given site, as he can actually perform all the site's administrator actions, the site's &lt;code&gt;/wp/v2/users/me?context=edit&lt;/code&gt; request should return the administrator's capabilities for this Super Admin.
&lt;/p&gt;
&lt;p&gt;
I'm attaching a diff containing my suggestion to fix what i think is an issue + a unit test.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42989 (REST API: Using array type when defining fields in ...) closed</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Fri, 29 Dec 2017 18:28:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42989#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42989#comment:5/1514572095414960</guid>
      <description>worksforme: &lt;p&gt;
@sarukuku You can update the documentation for the REST API handbook from this Github repo: &lt;a class="ext-link" href="https://github.com/WP-API/docs"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WP-API/docs&lt;/a&gt; .
&lt;/p&gt;
&lt;p&gt;
I am going to close this Trac ticket for now.  It can be reopened in the future if needed.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #42997 (Add filter to WP_Comments_List_Table::prepare_items get_comments arguments) closed</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Fri, 29 Dec 2017 18:20:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42997#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42997#comment:3/1514571613994133</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42420" title="Comments: Introduce filter for the arguments for the comment query in ..."&gt;42420&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Comments: Introduce filter for the arguments for the comment query in the comments list table.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Add &lt;code&gt;comments_list_table_query_args&lt;/code&gt; filter to the Comments List Table.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props soulseekah, birgire.&lt;br /&gt;
Fixes &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/42997" title="#42997: enhancement: Add filter to WP_Comments_List_Table::prepare_items get_comments arguments (reopened)"&gt;#42997&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42420]: Comments: Introduce filter for the arguments for the comment query in ...</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Fri, 29 Dec 2017 18:20:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42420</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42420/1514571613531922</guid>
      <description>&lt;p&gt;
Comments: Introduce filter for the arguments for the comment query in the comments list table.
&lt;/p&gt;
&lt;p&gt;
Add &lt;code&gt;comments_list_table_query_args&lt;/code&gt; filter to the Comments List Table.
&lt;/p&gt;
&lt;p&gt;
Props soulseekah, birgire.
Fixes &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/42997" title="#42997: enhancement: Add filter to WP_Comments_List_Table::prepare_items get_comments arguments (reopened)"&gt;#42997&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #42997 (Add filter to WP_Comments_List_Table::prepare_items get_comments arguments) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Fri, 29 Dec 2017 18:04:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42997#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42997#comment:2/1514570649511157</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42968 (Media: Grid View: new upload, file is in the wrong position in the ...) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 29 Dec 2017 17:47:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42968#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42968#comment:3/1514569648302060</guid>
      <description>&lt;p&gt;
cc: @joemcgill, @westonruter
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42974 (Merge login process back into one screen/form) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 29 Dec 2017 17:28:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42974#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42974#comment:3/1514568515645999</guid>
      <description>invalid: &lt;p&gt;
There must be a plugin or theme active on your site which is overriding the login process with its own. The built-in login process in WordPress has only one step.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #42974 (Merge login process back into one screen/form) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 29 Dec 2017 17:13:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42974#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42974#comment:2/1514567608957975</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42998 (Custom HTML Widget uses widget_text twice in markup) created</title>
      
        <dc:creator>dreamwhisper</dc:creator>

      <pubDate>Fri, 29 Dec 2017 16:34:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42998</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42998/1514565283682867</guid>
      <description>&lt;p&gt;
In &lt;a href="https://core.trac.wordpress.org/changeset/41117"&gt;https://core.trac.wordpress.org/changeset/41117&lt;/a&gt;, classes were added to the Custom HTML Widget to apply the same styling as the Text Widget in themes.
&lt;/p&gt;
&lt;p&gt;
However, there's an extra widget_text class that isn't in the Text Widget.
&lt;/p&gt;
&lt;p&gt;
Example markup:
&lt;/p&gt;
&lt;p&gt;
Custom HTML widget - The widget_text is on the section and the widget-wrap div.
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;section id="custom_html-2" class="widget_text widget widget_custom_html"&amp;gt;
&amp;lt;div class="widget_text widget-wrap"&amp;gt;
&amp;lt;h3 class="widgettitle widget-title"&amp;gt;Custom HTML&amp;lt;/h3&amp;gt;
&amp;lt;div class="textwidget custom-html-widget"&amp;gt;
Custom HTML Content
&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/section&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Text Widget - The widget-wrap div has only that class.
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;section id="text-2" class="widget widget_text"&amp;gt;
&amp;lt;div class="widget-wrap"&amp;gt;
&amp;lt;h3 class="widgettitle widget-title"&amp;gt;Text Widget&amp;lt;/h3&amp;gt;
&amp;lt;div class="textwidget"&amp;gt;
&amp;lt;p&amp;gt;Text Widget Content&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/section&amp;gt;
&lt;/pre&gt;&lt;p&gt;
As a result, any theme that has styled widget_text may have unintended styling issues.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #40985 (Lack of Screen Options toggle on mobile prevents accessing features) updated</title>
      
        <dc:creator>chetan200891</dc:creator>

      <pubDate>Fri, 29 Dec 2017 16:24:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40985#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40985#comment:7/1514564683570105</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@johnbillion I have attached screenshot from my iPhone 6S Plus. Please have a look!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>screen-options-on.jpg attached to Ticket #40985</title>
      
        <dc:creator>chetan200891</dc:creator>

      <pubDate>Fri, 29 Dec 2017 16:23:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40985/screen-options-on.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40985/screen-options-on.jpg/1514564627583507</guid>
      <description>&lt;p&gt;
Screenshot: Screen options on
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>screen-options-off.jpg attached to Ticket #40985</title>
      
        <dc:creator>chetan200891</dc:creator>

      <pubDate>Fri, 29 Dec 2017 16:23:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40985/screen-options-off.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40985/screen-options-off.jpg/1514564609229282</guid>
      <description>&lt;p&gt;
Screenshot: Screen options off
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40985 (Lack of Screen Options toggle on mobile prevents accessing features) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 29 Dec 2017 16:12:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40985#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40985#comment:6/1514563969960396</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the patch, @chetan200891. Can you provide a screenshot of the change on a mobile device?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40985 (Lack of Screen Options toggle on mobile prevents accessing features) updated</title>
      
        <dc:creator>chetan200891</dc:creator>

      <pubDate>Fri, 29 Dec 2017 15:41:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40985#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40985#comment:5/1514562088618418</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I have added patch &lt;a href="https://core.trac.wordpress.org/attachment/ticket/40985/40985.diff"&gt;40985.diff&lt;/a&gt; which enables Screen Options on mobile.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>40985.diff attached to Ticket #40985</title>
      
        <dc:creator>chetan200891</dc:creator>

      <pubDate>Fri, 29 Dec 2017 15:36:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40985/40985.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40985/40985.diff/1514561809003941</guid>
      <description>&lt;p&gt;
Creted patch to enable Screen Options on mobile.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40985 (Lack of Screen Options toggle on mobile prevents accessing features) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 29 Dec 2017 15:09:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40985#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40985#comment:4/1514560149817707</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42985 (No error message returned by empty wp-login.php form) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 29 Dec 2017 13:47:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42985#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42985#comment:6/1514555279633674</guid>
      <description>&lt;p&gt;
Currently there seems to be no unit tests for e.g. &lt;code&gt;wp_signon()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
There's already a ticket &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36476" title="#36476: enhancement: The login form is not covered by a test (new)"&gt;#36476&lt;/a&gt; - &lt;a href="https://core.trac.wordpress.org/ticket/36476"&gt;The login form is not covered by a test&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42985 (No error message returned by empty wp-login.php form) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 29 Dec 2017 13:22:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42985#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42985#comment:5/1514553727304510</guid>
      <description>&lt;p&gt;
Seems the original change was the login refactoring in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6643" title="Refactor login. see #5405"&gt;[6643]&lt;/a&gt;, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5405" title="#5405: task (blessed): Refactor wp-login.php (closed: fixed)"&gt;#5405&lt;/a&gt;. Before this change, the last switch case (login/default) displayed both errors and checked also for &lt;code&gt;$_POST&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42985 (No error message returned by empty wp-login.php form) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 29 Dec 2017 13:21:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42985#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42985#comment:4/1514553673981467</guid>
      <description>&lt;p&gt;
I wonder if the &lt;code&gt;wp_signon()&lt;/code&gt;, should be allowed to return the empty username and password error and handle it in the &lt;code&gt;wp-login.php&lt;/code&gt;, for better flexibility.
&lt;/p&gt;
&lt;p&gt;
I checked version 2.3 mentioned by @afercia  and there it seems to be handled in &lt;code&gt;wp-login.php&lt;/code&gt; with:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( $_POST &amp;amp;&amp;amp; empty( $user_login ) )
    $errors['user_login'] = __('&amp;lt;strong&amp;gt;ERROR&amp;lt;/strong&amp;gt;: The username field is empty.');
if ( $_POST &amp;amp;&amp;amp; empty( $user_pass ) )
    $errors['user_pass'] = __('&amp;lt;strong&amp;gt;ERROR&amp;lt;/strong&amp;gt;: The password field is empty.');
&lt;/pre&gt;&lt;p&gt;
before the &lt;code&gt;login_header(__('Login'));&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a href="https://core.trac.wordpress.org/browser/tags/2.3/wp-login.php#L335"&gt;source&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18298 (deprecate TEMPLATEPATH and STYLESHEETPATH) updated</title>
      
        <dc:creator>hkchakladar</dc:creator>

      <pubDate>Fri, 29 Dec 2017 12:31:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18298#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18298#comment:39/1514550664738475</guid>
      <description>&lt;p&gt;
Are those constants deprecated? I can't see deprecated tag in WP-4.9.1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42985 (No error message returned by empty wp-login.php form) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 29 Dec 2017 12:19:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42985#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42985#comment:3/1514549996599935</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
For some background, see a relevant ticket and related changes:
&lt;a href="https://core.trac.wordpress.org/ticket/8938"&gt;https://core.trac.wordpress.org/ticket/8938&lt;/a&gt;
&lt;a href="https://core.trac.wordpress.org/ticket/8938#comment:6"&gt;https://core.trac.wordpress.org/ticket/8938#comment:6&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/changeset/10455"&gt;https://core.trac.wordpress.org/changeset/10455&lt;/a&gt;
&lt;a href="https://core.trac.wordpress.org/changeset/10463"&gt;https://core.trac.wordpress.org/changeset/10463&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Where the reasoning seems to be the will to avoid to show the error on normal login page loads. However, seems to me there should be one previous relevant change. I've noticed that in WordPress 2.3 (!) this scenario was covered and two error messages were displayed when both fields were empty:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/YKNmGIGrds.png"&gt;&lt;img src="https://cldup.com/YKNmGIGrds.png" alt="https://cldup.com/YKNmGIGrds.png" crossorigin="anonymous" title="https://cldup.com/YKNmGIGrds.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Then, in WordPress 2.5 these 2 messages disappeared. Still have to find the relevant change.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40822 (Addressing Proximity in the admin area) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 29 Dec 2017 12:07:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40822#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40822#comment:6/1514549223889770</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Some screenshots with clear examples of how UI controls can be very hard to discover for people with low vision, visual field loss, screen magnifier users, etc., due to lack of proximity:
&lt;/p&gt;
&lt;p&gt;
Quick edit (same for Bulk edit):
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/8vzuJzR7Ob.jpg"&gt;&lt;img src="https://cldup.com/8vzuJzR7Ob.jpg" alt="https://cldup.com/8vzuJzR7Ob.jpg" crossorigin="anonymous" title="https://cldup.com/8vzuJzR7Ob.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Reply to comment (same for edit comment):
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/d98RdU-KeT.jpg"&gt;&lt;img src="https://cldup.com/d98RdU-KeT.jpg" alt="https://cldup.com/d98RdU-KeT.jpg" crossorigin="anonymous" title="https://cldup.com/d98RdU-KeT.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Save/Delete menu:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/rxF0ahYXq8.jpg"&gt;&lt;img src="https://cldup.com/rxF0ahYXq8.jpg" alt="https://cldup.com/rxF0ahYXq8.jpg" crossorigin="anonymous" title="https://cldup.com/rxF0ahYXq8.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Appearance &amp;gt; Theme details: notice "Delete" is on the right:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/bzuc02OcHD.jpg"&gt;&lt;img src="https://cldup.com/bzuc02OcHD.jpg" alt="https://cldup.com/bzuc02OcHD.jpg" crossorigin="anonymous" title="https://cldup.com/bzuc02OcHD.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Customizer &amp;gt; Theme details: notice the placement of controls is inverted compared to the Appearance screen. This forces users to "learn" a new interface and introduces inconsistency with no apparent reason:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/VYiaYkmtKO.jpg"&gt;&lt;img src="https://cldup.com/VYiaYkmtKO.jpg" alt="https://cldup.com/VYiaYkmtKO.jpg" crossorigin="anonymous" title="https://cldup.com/VYiaYkmtKO.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Gutenberg (see the toolbar on a very large display):
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/dmyFnAJI2M.jpg"&gt;&lt;img src="https://cldup.com/dmyFnAJI2M.jpg" alt="https://cldup.com/dmyFnAJI2M.jpg" crossorigin="anonymous" title="https://cldup.com/dmyFnAJI2M.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Additionally, across the whole WordPress admin, the primary action button (the blue one) is placed inconsistently. Sometimes it's on the left, sometimes on the right. I guess this is mostly for historical reasons: in a so large project it's perfectly understandable to have some inconsistency across UI sections that were designed at different times. I seem to remember this was also discussed a few times but never fully addressed. It would be great to establish a solid, predictable, pattern and always have the primary action button where users expect.
&lt;/p&gt;
&lt;p&gt;
Lastly, worth noting a new pattern was recently introduced in the edit term screen, see &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40655" title="Taxonomy: Add a &amp;#34;delete&amp;#34; button on term edit page.
Add a 'delete' ..."&gt;[40655]&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/gPhxX2xTP3.jpg"&gt;&lt;img src="https://cldup.com/gPhxX2xTP3.jpg" alt="https://cldup.com/gPhxX2xTP3.jpg" crossorigin="anonymous" title="https://cldup.com/gPhxX2xTP3.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
In this case, the placement of controls is far better for accessibility: the "delete" link is next to the update button and easily discoverable. I understand the concerns about avoiding unintentional clicks so I'd agree there should be some grade of separation between the primary action control and a Delete/Cancel control, but I'm confident this can be achieved respecting the proximity principle.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40822 (Addressing Proximity in the admin area) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 29 Dec 2017 11:42:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40822#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40822#comment:5/1514547741812442</guid>
      <description>&lt;p&gt;
Some resources, highly recommended for designers and UI/UX folks:
&lt;/p&gt;
&lt;p&gt;
Types of Low Vision
&lt;a class="ext-link" href="https://webaim.org/articles/visual/lowvision"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://webaim.org/articles/visual/lowvision&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
W3C draft: Accessibility Requirements for People with Low Vision
3.6 Point of Regard and Proximity
&lt;a class="ext-link" href="https://www.w3.org/TR/low-vision-needs/#point-of-regard-and-proximity"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.w3.org/TR/low-vision-needs/#point-of-regard-and-proximity&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Point of Regard and Proximity of Controls (straw test)
&lt;a class="ext-link" href="http://www.d.umn.edu/~lcarlson/wcagwg/point_of_regard/#straw_test_2"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.d.umn.edu/~lcarlson/wcagwg/point_of_regard/#straw_test_2&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Youtube video (2 mins): the straw test in action, by Derek Featherstone
HCB University: Accessibility 101 "The Straw Test"
&lt;a class="ext-link" href="https://www.youtube.com/watch?v=S1j6CYT3kWA"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.youtube.com/watch?v=S1j6CYT3kWA&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Post about a similar accessibility session by Derek Featherstone:
Responsive Design &amp;amp; Accessibility
&lt;a class="ext-link" href="http://www.berndtgroup.net/thinking/blog/ux/responsive-design-and-accessibility"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.berndtgroup.net/thinking/blog/ux/responsive-design-and-accessibility&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42985 (No error message returned by empty wp-login.php form) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 29 Dec 2017 11:22:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42985#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42985#comment:2/1514546528959927</guid>
      <description>&lt;p&gt;
Within the &lt;code&gt;wp_signon()&lt;/code&gt; function, we have this part:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$user = wp_authenticate( $credentials['user_login'], $credentials['user_password'] );
if ( is_wp_error( $user ) ) {
    if ( $user-&amp;gt;get_error_codes() == array( 'empty_username', 'empty_password' ) ) {
        $user = new WP_Error( '', '' );
    }
    return $user;
}
&lt;/pre&gt;&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/browser/tags/4.9/src/wp-includes/user.php#L90"&gt;Source&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
If the username and password fields are both empty, then the corresponding error is overridden with &lt;code&gt;$user = new WP_Error( '', '' );&lt;/code&gt;. That means no errors show up for the login form.
&lt;/p&gt;
&lt;p&gt;
If that would not be the case then we would get the login form shaking and the corresponding error messages. See &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/42985/empty_username_password_errors.JPG" title="Attachment 'empty_username_password_errors.JPG' in Ticket #42985"&gt;empty_username_password_errors.JPG&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/42985/empty_username_password_errors.JPG" title="Download"&gt;​&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>empty_username_password_errors.JPG attached to Ticket #42985</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 29 Dec 2017 11:20:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42985/empty_username_password_errors.JPG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42985/empty_username_password_errors.JPG/1514546401672793</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42989 (REST API: Using array type when defining fields in ...) updated</title>
      
        <dc:creator>sarukuku</dc:creator>

      <pubDate>Fri, 29 Dec 2017 10:16:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42989#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42989#comment:4/1514542588101887</guid>
      <description>&lt;p&gt;
It seems that the &lt;code&gt;items&lt;/code&gt; needs to be an array that has the key &lt;code&gt;type&lt;/code&gt; in it. The example below works as I'd expect and It's also much more readable.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;register_rest_route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'test/v1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'array_test'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s1"&gt;'methods'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;WP_REST_Server&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="na"&gt;READABLE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'callback'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;WP_REST_Request&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// Just reflect back the value of the test parameter
&lt;/span&gt;      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;rest_ensure_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get_param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'test'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s1"&gt;'args'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="s1"&gt;'test'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s1"&gt;'type'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'array'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'items'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="s1"&gt;'type'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'string'&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
But as we see here it's quite hard to figure these out without any documentation. This issue as it is can (probably?) be closed now but how should we go with improving the documentation on this? Should I open a new issue to somewhere else?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>42997.1.diff attached to Ticket #42997</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Fri, 29 Dec 2017 10:09:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42997/42997.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42997/42997.1.diff/1514542173776771</guid>
      <description>&lt;p&gt;
Naming
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42989 (REST API: Using array type when defining fields in ...) updated</title>
      
        <dc:creator>sarukuku</dc:creator>

      <pubDate>Fri, 29 Dec 2017 10:07:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42989#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42989#comment:3/1514542074786275</guid>
      <description>&lt;p&gt;
I tried setting the &lt;code&gt;items&lt;/code&gt; key for the &lt;code&gt;test&lt;/code&gt; arg to &lt;code&gt;string&lt;/code&gt; like you suggested above but I get something like this after that:
&lt;a style="padding:0; border:none" href="https://www.dropbox.com/s/h8sjdewr2utjrxv/Screen%20Shot%202017-12-29%20at%2011.40.52.png?dl=1"&gt;&lt;img src="https://www.dropbox.com/s/h8sjdewr2utjrxv/Screen%20Shot%202017-12-29%20at%2011.40.52.png?dl=1" alt="https://www.dropbox.com/s/h8sjdewr2utjrxv/Screen%20Shot%202017-12-29%20at%2011.40.52.png" crossorigin="anonymous" title="https://www.dropbox.com/s/h8sjdewr2utjrxv/Screen%20Shot%202017-12-29%20at%2011.40.52.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Your debugging output is telling you exactly where to look in the code to see what is wrong.
&lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-includes/rest-api.php#L1092"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-includes/rest-api.php#L1092&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I tried reading the rest api code from trac but couldn't figure out what the &lt;code&gt;items&lt;/code&gt; keyword was used for. I also tried to google for documentation or blog posts where someone would have used the &lt;code&gt;array&lt;/code&gt; type but came short.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is your bug report that &lt;code&gt;items&lt;/code&gt; should not be required for &lt;code&gt;array&lt;/code&gt; type params?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Because I couldn't find any documentation or examples related to the different options available for the &lt;code&gt;type&lt;/code&gt; key for args and then encountered an error I couldn't fix I felt that opening an issue here was the right thing to do. At this point I'm asking the community if I'm using this wrong or if there's a possible bug or a chance for improvement here.
&lt;/p&gt;
&lt;p&gt;
What comes to the validation I think having a compulsory type set for the array values sounds like a good idea as long as it supports all current types, works recursively (like it does now) and its usage is documented somewhere.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42997 (Add filter to WP_Comments_List_Table::prepare_items get_comments arguments) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 29 Dec 2017 10:03:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42997#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42997#comment:1/1514541830991811</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @soulseekah
&lt;/p&gt;
&lt;p&gt;
This seems to be in line with other table query argument filters.
&lt;/p&gt;
&lt;p&gt;
For example within the users list table:
&lt;/p&gt;
&lt;pre class="wiki"&gt; /**
  * Filters the query arguments used to retrieve users for the current users list table.
  *
  * @since 4.4.0
  *
  * @param array $args Arguments passed to WP_User_Query to retrieve items for the current
  *                    users list table.
  */
  $args = apply_filters( 'users_list_table_query_args', $args );
&lt;/pre&gt;&lt;p&gt;
and within the sites list table:
&lt;/p&gt;
&lt;pre class="wiki"&gt;/**
 * Filters the arguments for the site query in the sites list table.
 *
 * @since 4.6.0
 *
 * @param array $args An array of get_sites() arguments.
 */
$args = apply_filters( 'ms_sites_list_table_query_args', $args );
&lt;/pre&gt;&lt;p&gt;
For the comments list table, I would suggest adjusting &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/42997/42997.diff" title="Attachment '42997.diff' in Ticket #42997"&gt;42997.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/42997/42997.diff" title="Download"&gt;​&lt;/a&gt; according to the same filter naming convention:
&lt;/p&gt;
&lt;pre class="wiki"&gt;/**
 * Filters the arguments for the comment query in the comments list table.
 *
 * @since trunk
 *
 * @param array $args An array of get_comments() arguments.
 */
$args = apply_filters( 'comments_list_table_query_args', $args );
&lt;/pre&gt;&lt;p&gt;
with similar adjustments to the docblock as for the sites list table.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>42997.diff attached to Ticket #42997</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Fri, 29 Dec 2017 07:12:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42997/42997.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42997/42997.diff/1514531530303934</guid>
      <description>&lt;p&gt;
Concept
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42997 (Add filter to WP_Comments_List_Table::prepare_items get_comments arguments) created</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Fri, 29 Dec 2017 07:10:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42997</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42997/1514531401961566</guid>
      <description>&lt;p&gt;
Filtering the comments in the backend is quite hacky right now if not impossible.
&lt;/p&gt;
&lt;p&gt;
This is a proposal to add a simple filter the &lt;code&gt;$args&lt;/code&gt; parameter to the &lt;code&gt;get_comments&lt;/code&gt; calls inside &lt;code&gt;WP_Comments_List_Table::prepare_items&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41973 (HTTP Error when uploading images on PHP 7.1.7) updated</title>
      
        <dc:creator>cmb42</dc:creator>

      <pubDate>Fri, 29 Dec 2017 05:05:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41973#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41973#comment:32/1514523946610771</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41973#comment:31" title="Comment 31"&gt;mbeerli&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Create file called .user.ini in root firectory of wp installation (if it doesn’t already exist.)
memory_limit = 128M
max_execution_time = 300
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This does not solve the issue. The issue is resolved by unticking the option in php option of hosting provider called "imagick". see screenshot here &lt;a href="https://core.trac.wordpress.org/ticket/42843"&gt;https://core.trac.wordpress.org/ticket/42843&lt;/a&gt;
and what you are referencing is in php.ini
Which I already have:
max_execution_time    = 600;  Maximum execution time of each script, in seconds
max_input_time        = 600;  Maximum amount of time each script may spend parsing request
memory_limit          = 128M; Maximum amount of memory a script may consume (8MB) default
upload_max_filesize   = 64M;  The maximum size of an uploaded file.
post_max_size         = 64M;
mysql.connect_timeout = 120;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I respectfully suggest that your reply is not "THE" solution, but, like mine, is one of many. Depending on environments, some work and others don't.  The root workaround solution seems to be allocating enough memory. However, different environments are requiring different implementations. Some people are able to do this in wp-config.php. This didn't work for me, but doing it in .user.ini did work. Your solution was to implement it in php.ini. Depending on whether the user owns the server, or the service is provided by a service, the user may or may not be able to access or change the php.ini file. Still others have different workarounds and solutions. Replacing Imagick with GD is also a workaround for others. (Personally, I don't believe a replacement like this should be necessary. If the problem is really Imagick, then it should be replaced as a default of the install process, or something more consistent and permanent should be done.)
&lt;/p&gt;
&lt;p&gt;
Having said all that, and as a systems programmer, my opinion is that there's still a root underlying cause, perhaps still unidentified, that needs to be universally fixed so that this problem doesn't continue to frustrate WP users everywhere. Also, there are enough workarounds now that a whitepaper could probably be created to provide an entire process for finding a workaround that works in a particular user's environment.
&lt;/p&gt;
&lt;p&gt;
Just my opinions.  ;-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42996 (TinyMCE Bullets with periods don't come through properly from ...) updated</title>
      
        <dc:creator>jaredt112</dc:creator>

      <pubDate>Fri, 29 Dec 2017 00:43:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42996#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42996#comment:1/1514508183490421</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42996 (TinyMCE Bullets with periods don't come through properly from ...) created</title>
      
        <dc:creator>jaredt112</dc:creator>

      <pubDate>Fri, 29 Dec 2017 00:33:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42996</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42996/1514507599808243</guid>
      <description>&lt;p&gt;
Copy/pasting text from a bulleted item using Microsoft Word 2016 will remove all of the text that appears before a period in the list item.
&lt;/p&gt;
&lt;p&gt;
For example, if you copy the following from a Word document bulleted list:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;1222222.4 mm body thickness
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
and paste it into the default WP editor, it will appear as this:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;4 mm body thickness
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This only occurs in the Visual Editor and not the Text Editor portion of the editor.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42995 (Wordpress XML-RPC editComment return error 500 changing date_created_gmt) updated</title>
      
        <dc:creator>fpilee</dc:creator>

      <pubDate>Thu, 28 Dec 2017 19:03:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42995#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42995#comment:1/1514487805810750</guid>
      <description>&lt;p&gt;
I believe you have to create first a &lt;a class="ext-link" href="https://developer.wordpress.org/reference/classes/ixr_date/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/reference/classes/ixr_date/&lt;/a&gt;
object with date_created_gmt string before to call getIso.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42995 (Wordpress XML-RPC editComment return error 500 changing date_created_gmt) created</title>
      
        <dc:creator>fpilee</dc:creator>

      <pubDate>Thu, 28 Dec 2017 19:01:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42995</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42995/1514487685421544</guid>
      <description>&lt;p&gt;
Grettings,
&lt;/p&gt;
&lt;p&gt;
This:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;em&gt; Do some timestamp voodoo
if (!empty($content_struct&lt;a class="missing wiki"&gt;date_created_gmt?&lt;/a&gt;)) {
&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;em&gt; We know this is supposed to be GMT, so we're going to slap that Z on there by force
$dateCreated = rtrim($content_struct&lt;a class="missing wiki"&gt;date_created_gmt?&lt;/a&gt;-&amp;gt;getIso(), 'Z') . 'Z';
$comment_date = get_date_from_gmt(iso8601_to_datetime($dateCreated));
$comment_date_gmt = iso8601_to_datetime($dateCreated, 'GMT');
&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
[Thu Dec 28 15:52:34.123148 2017] [php7:notice] [pid 5507] [client 127.0.0.1:39464] PHP Fatal error:  Uncaught Error: Call to a member function getIso() on string in wp-includes/class-wp-xmlrpc-server.php:3533
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42006 (Safari + VoiceOver sometimes read out the screen-reader-text not ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 28 Dec 2017 18:57:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42006#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42006#comment:7/1514487427945073</guid>
      <description>&lt;p&gt;
Still an issue on latest macOS High Sierra, Safari 11.0.2, VoiceOver Utility 8 (562.13).
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/jPbs9qeZ6Z.png"&gt;&lt;img src="https://cldup.com/jPbs9qeZ6Z.png" alt="https://cldup.com/jPbs9qeZ6Z.png" crossorigin="anonymous" title="https://cldup.com/jPbs9qeZ6Z.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41451 (Use pretty permalinks by default in the test suite) updated</title>
      
        <dc:creator>Frank Klein</dc:creator>

      <pubDate>Thu, 28 Dec 2017 18:46:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41451#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41451#comment:5/1514486815669811</guid>
      <description>&lt;p&gt;
The patch above contains the code that makes all the tests, except three multisite tests, pass with pretty permalinks enabled. I was unable to fix these, so I'd be happy if somebody else could look into this.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://travis-ci.org/fklein-lu/wordpress-develop/jobs/322620789"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;This Travis CI log&lt;/a&gt; contains the failing tests:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;Tests_Query_VerbosePageRules&lt;/code&gt;: This keeps failing no matter what I try. The way &lt;code&gt;WP_UnitTestCase::goto&lt;/code&gt; behaves is not very transparent, and I can't figure it out.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;Tests_Rewrite_OldSlugRedirect&lt;/code&gt; and &lt;code&gt;Tests_Feeds_RSS2&lt;/code&gt; pass on local, but fail on Travis.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
A few notes about the patch:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I did not account for non-Core test runs at this point. We could add a bunch of &lt;code&gt;WP_RUN_CORE_TESTS&lt;/code&gt; checks, but I feel like a more elegant solution would be welcome.
&lt;/li&gt;&lt;li&gt;I introduced helper functions for permalink handling. I'm not a fan of stuffing everything into &lt;code&gt;WP_UnitTestCase&lt;/code&gt; if it doesn't need to be part of the class. The helper functions are also more efficient, as &lt;code&gt;UnitTestCase::set_permalink_structure&lt;/code&gt; calls &lt;code&gt;WP_Rewrite::init&lt;/code&gt; twice.
&lt;/li&gt;&lt;li&gt;I did only adapt the existing tests so that they pass. This might not always be the past way for the thing being tested.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>41451.patch attached to Ticket #41451</title>
      
        <dc:creator>Frank Klein</dc:creator>

      <pubDate>Thu, 28 Dec 2017 18:34:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41451/41451.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41451/41451.patch/1514486056978374</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42989 (REST API: Using array type when defining fields in ...) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Thu, 28 Dec 2017 18:00:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42989#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42989#comment:2/1514484023343644</guid>
      <description>&lt;p&gt;
@sarukuku what happens if you set the &lt;code&gt;items&lt;/code&gt; key for the &lt;code&gt;test&lt;/code&gt; arg?  It looks like you haven't set what type of values expect from the array.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="nx"&gt;register_rest_route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'test/v1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'array_test'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="s1"&gt;'methods'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;WP_REST_Server&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="na"&gt;READABLE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;'callback'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;WP_REST_Request&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="c1"&gt;// Just reflect back the value of the test parameter
&lt;/span&gt;               &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;rest_ensure_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get_param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'test'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
             &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;'args'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="s1"&gt;'test'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="s1"&gt;'type'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'array'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;'items'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'string'&lt;/span&gt;
                &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="p"&gt;));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Your debugging output is telling you exactly where to look in the code to see what is wrong.  &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-includes/rest-api.php#L1092"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-includes/rest-api.php#L1092&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Is your bug report that &lt;code&gt;items&lt;/code&gt; should not be required for &lt;code&gt;array&lt;/code&gt; type params?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42992 (Menu Customizer - Inconsistent use of Tags and Format Menu Items) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 28 Dec 2017 16:49:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42992#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42992#comment:1/1514479759812723</guid>
      <description>&lt;p&gt;
@monikarao you may want to check the Screen Options in &lt;code&gt;wp-admin/nav-menus.php&lt;/code&gt;, and see if Tags and Format are checked.
@westonruter shouldn't these Screen Options be synced in the Customizer?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>tags-standard-administration.png attached to Ticket #42994</title>
      
        <dc:creator>monikarao</dc:creator>

      <pubDate>Thu, 28 Dec 2017 16:04:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42994/tags-standard-administration.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42994/tags-standard-administration.png/1514477085212787</guid>
      <description>&lt;p&gt;
Tag - In Standard administration
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42993 (WordPress Multisite: Allow for different ports) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 28 Dec 2017 16:04:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42993#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42993#comment:1/1514477056864408</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>format.png attached to Ticket #42994</title>
      
        <dc:creator>monikarao</dc:creator>

      <pubDate>Thu, 28 Dec 2017 16:04:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42994/format.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42994/format.png/1514477049034695</guid>
      <description>&lt;p&gt;
Format
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>tags.png attached to Ticket #42994</title>
      
        <dc:creator>monikarao</dc:creator>

      <pubDate>Thu, 28 Dec 2017 16:03:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42994/tags.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42994/tags.png/1514477023042797</guid>
      <description>&lt;p&gt;
Tags
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42994 (Menu Customizer - Add "Add" option for Tags and Format Taxonomy) created</title>
      
        <dc:creator>monikarao</dc:creator>

      <pubDate>Thu, 28 Dec 2017 15:13:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42994</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42994/1514473985264756</guid>
      <description>&lt;p&gt;
In Menu Customizer there is no option to add new tags and format taxonomy. There should be option to add new tags and format like "Post" taxonomy in administration.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42993 (WordPress Multisite: Allow for different ports) created</title>
      
        <dc:creator>Blackbam</dc:creator>

      <pubDate>Thu, 28 Dec 2017 15:09:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42993</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42993/1514473790722446</guid>
      <description>&lt;p&gt;
The WordPress Codex says it is not possible to run WordPress on a different Port than Port 80 or Port 443. In times of Docker and complex development environment setups this is a real pain in the ass. Furthermore there are some common ports like 8080 which are not unusual for a webserver to use.
&lt;/p&gt;
&lt;p&gt;
Please lets get rid of this completely unnecessary restriction on WordPress network installations. The following solutions seems to describe which parts of the Core have to be adapted:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://benohead.com/wordpress-running-multisite-different-port/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://benohead.com/wordpress-running-multisite-different-port/&lt;/a&gt;
&lt;a class="ext-link" href="https://wordpress.stackexchange.com/questions/212978/multisite-network-port-num-issues"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.stackexchange.com/questions/212978/multisite-network-port-num-issues&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Maybe there are one or to more things which must be changed, in order to get it to work properly.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>customizer-menu.png attached to Ticket #42992</title>
      
        <dc:creator>monikarao</dc:creator>

      <pubDate>Thu, 28 Dec 2017 15:06:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42992/customizer-menu.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42992/customizer-menu.png/1514473560556676</guid>
      <description>&lt;p&gt;
Customizer Menu - Tag, Format Options displayed
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>standard-menu.png attached to Ticket #42992</title>
      
        <dc:creator>monikarao</dc:creator>

      <pubDate>Thu, 28 Dec 2017 15:05:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42992/standard-menu.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42992/standard-menu.png/1514473521913400</guid>
      <description>&lt;p&gt;
Standard Menu in administration (No Tag, Format Option)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42992 (Menu Customizer - Inconsistent use of Tags and Format Menu Items) created</title>
      
        <dc:creator>monikarao</dc:creator>

      <pubDate>Thu, 28 Dec 2017 15:03:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42992</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42992/1514473430074676</guid>
      <description>&lt;p&gt;
When using the standard menu administration it does not display "Tags" and "Format" to add into menu items.
When using the menu controls in the customizer, it display "Tags" and "Format" options to appear as menu-items.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>No-Result-Found.png attached to Ticket #42991</title>
      
        <dc:creator>monikarao</dc:creator>

      <pubDate>Thu, 28 Dec 2017 14:54:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42991/No-Result-Found.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42991/No-Result-Found.png/1514472857489175</guid>
      <description>&lt;p&gt;
On Searching "Home" - No Result Found Message
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Home-Custom-Link.png attached to Ticket #42991</title>
      
        <dc:creator>monikarao</dc:creator>

      <pubDate>Thu, 28 Dec 2017 14:53:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42991/Home-Custom-Link.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42991/Home-Custom-Link.png/1514472830031680</guid>
      <description>&lt;p&gt;
Created Home Custom Link
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42991 (Customizer: Search Menu item not working on Custom Link) created</title>
      
        <dc:creator>monikarao</dc:creator>

      <pubDate>Thu, 28 Dec 2017 14:52:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42991</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42991/1514472750915380</guid>
      <description>&lt;p&gt;
In Customizer "Search Menu Item Field" is present to search all menu items but it's not working on Custom Links.
Ex. Added "Home" as Custom Link but when searching this "Home" it displayed message "no-result-found".
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41973 (HTTP Error when uploading images on PHP 7.1.7) updated</title>
      
        <dc:creator>mbeerli</dc:creator>

      <pubDate>Thu, 28 Dec 2017 14:40:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41973#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41973#comment:31/1514472044924456</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Create file called .user.ini in root firectory of wp installation (if it doesn’t already exist.)
memory_limit = 128M
max_execution_time = 300
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This does not solve the issue. The issue is resolved by unticking the option in php option of hosting provider called "imagick". see screenshot here &lt;a href="https://core.trac.wordpress.org/ticket/42843"&gt;https://core.trac.wordpress.org/ticket/42843&lt;/a&gt;
and what you are referencing is in php.ini
Which I already have:
max_execution_time    = 600;  Maximum execution time of each script, in seconds
max_input_time        = 600;  Maximum amount of time each script may spend parsing request
memory_limit          = 128M; Maximum amount of memory a script may consume (8MB) default
upload_max_filesize   = 64M;  The maximum size of an uploaded file.
post_max_size         = 64M;
mysql.connect_timeout = 120;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42990 (Deprecate WP_UnitTestCase::_make_attachment) updated</title>
      
        <dc:creator>Frank Klein</dc:creator>

      <pubDate>Thu, 28 Dec 2017 13:10:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42990#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42990#comment:1/1514466646004973</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>42990.patch attached to Ticket #42990</title>
      
        <dc:creator>Frank Klein</dc:creator>

      <pubDate>Thu, 28 Dec 2017 13:10:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42990/42990.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42990/42990.patch/1514466616137561</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42990 (Deprecate WP_UnitTestCase::_make_attachment) created</title>
      
        <dc:creator>Frank Klein</dc:creator>

      <pubDate>Thu, 28 Dec 2017 13:07:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42990</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42990/1514466456867068</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/35309" title="Unit Tests: consolidate the many separate implementations of ..."&gt;r35309&lt;/a&gt;, several ways of creating an attachment for an uploaded media file were consolidated into a single method, &lt;code&gt;WP_UnitTestCase::_make_attachment&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
As part of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34855" title="Merge the Responsive Images feature plugin into core, initial commit. ..."&gt;r34855&lt;/a&gt;, a new method, &lt;code&gt;create_upload_object&lt;/code&gt;, was added to &lt;code&gt;WP_UnitTest_Factory_For_Attachment&lt;/code&gt;. It contains all of the code from &lt;code&gt;_make_attachment&lt;/code&gt;, but additionally it also handles the upload of the media file.
&lt;/p&gt;
&lt;p&gt;
We should deprecate the &lt;code&gt;_make_attachment&lt;/code&gt; helper method, and use the factory method instead. This reduces duplicate code, and makes the interface of &lt;code&gt;WP_UnitTestCase&lt;/code&gt; cleaner.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41973 (HTTP Error when uploading images on PHP 7.1.7) updated</title>
      
        <dc:creator>cmb42</dc:creator>

      <pubDate>Thu, 28 Dec 2017 12:23:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41973#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41973#comment:30/1514463826741588</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;
SOLUTION FOUND for my similar issue:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Create file called .user.ini in root firectory of wp installation (if it doesn’t already exist.)
Add the following lines. The FIRST cured my issue, the second may solve others(optional):
&lt;/p&gt;
&lt;p&gt;
memory_limit = 128M
max_execution_time = 300
&lt;/p&gt;
&lt;p&gt;
You can adjust the number as needed.
Place the file in the root dir for the website (same dir as wp_config.php).
&lt;/p&gt;
&lt;p&gt;
Since this seems so closely tied to plugins, and, at least WordFence adds the .user.ini file to the env., maybe this is a big clue to the underlying cause?  I added &lt;code&gt;define( 'WP_MEMORY_LIMIT', '256M' );&lt;/code&gt; to wp-config.php, but it did nothing for this problem. Adding/changing .user.ini did fix it.
&lt;/p&gt;
&lt;p&gt;
Maybe this will help others.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28407 (You are unable to override the attachment name in wp_mail() when ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 28 Dec 2017 11:58:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28407#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28407#comment:9/1514462308248181</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I just uploaded &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/28407/28407.2.diff" title="Attachment '28407.2.diff' in Ticket #28407"&gt;28407.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/28407/28407.2.diff" title="Download"&gt;​&lt;/a&gt; as a refreshed patch of the original idea, along with unit tests.
&lt;/p&gt;
&lt;p&gt;
While I was at it, I also created &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/28407/28407-alternative.diff" title="Attachment '28407-alternative.diff' in Ticket #28407"&gt;28407-alternative.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/28407/28407-alternative.diff" title="Download"&gt;​&lt;/a&gt;, which would allow developers to override every argument for an attachment. An example from the unit test:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;wp_mail( 'user@example.org', 'Subject', 'Hello World', '', array(
        array(
                'path' =&amp;gt; DIR_TESTDATA . '/images/canola.jpg',
                'name' =&amp;gt; 'myawesomeimage.jpg',
                'encoding' =&amp;gt; '8bit',
                'type' =&amp;gt; 'image/jpeg',
                'disposition' =&amp;gt; 'attachment',
        ),
        array(
                'path' =&amp;gt; DIR_TESTDATA . '/images/waffles.jpg',
                'name' =&amp;gt; 'foobar.jpg',
                'encoding' =&amp;gt; 'base64',
                'type' =&amp;gt; 'image/png',
                'disposition' =&amp;gt; 'inline',
        ),
) );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
I'm not 100% this is a good idea, since it makes it very easy to mess something up. But it would certainly be more future-proof than using an associative array.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>28407-alternative.diff attached to Ticket #28407</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 28 Dec 2017 11:55:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28407/28407-alternative.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28407/28407-alternative.diff/1514462113027620</guid>
      <description>&lt;p&gt;
Alternative patch that allows changing every argument of addAttachment()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>28407.2.diff attached to Ticket #28407</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 28 Dec 2017 11:38:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28407/28407.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28407/28407.2.diff/1514461097234751</guid>
      <description>&lt;p&gt;
Refreshed patch with unit tests
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42989 (REST API: Using array type when defining fields in ...) updated</title>
      
        <dc:creator>sarukuku</dc:creator>

      <pubDate>Thu, 28 Dec 2017 11:13:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42989#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42989#comment:1/1514459605860661</guid>
      <description>&lt;p&gt;
These might be related but I'm not sure:
&lt;a href="https://core.trac.wordpress.org/ticket/42875"&gt;https://core.trac.wordpress.org/ticket/42875&lt;/a&gt;
&lt;a href="https://core.trac.wordpress.org/ticket/42961"&gt;https://core.trac.wordpress.org/ticket/42961&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42989 (REST API: Using array type when defining fields in ...) created</title>
      
        <dc:creator>sarukuku</dc:creator>

      <pubDate>Thu, 28 Dec 2017 11:07:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42989</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42989/1514459249862992</guid>
      <description>&lt;p&gt;
I have error reporting turned on in dev. Then I register a route like this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;register_rest_route( 'test/v1', 'array_test', array(
  array(
    'methods' =&amp;gt; WP_REST_Server::READABLE,
    'callback' =&amp;gt; function ( WP_REST_Request $request ) {
      // Just reflect back the value of the test parameter
      return rest_ensure_response( $request-&amp;gt;get_param( 'test' ) );
    },
    'args' =&amp;gt; array(
      'test' =&amp;gt; array(
        'type' =&amp;gt; 'array'
      )
    )
  )
));
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Then I call it like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;your-dev-domain&amp;gt;/wp-json/test/v1/array_test/?test[]=value1&amp;amp;test[]=value2
&lt;/pre&gt;&lt;p&gt;
I expect to get back a JSON response where the content looks like this: ["value1","value2"]. Instead I get Notice: Undefined index: items in /var/www/html/wp-includes/rest-api.php on line 1092 twice and then Warning: Cannot modify header information - headers already sent by (output started at /var/www/html/wp-includes/rest-api.php:1092) in /var/www/html/wp-includes/rest-api/class-wp-rest-server.php on line 1248.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://www.dropbox.com/s/2ftpv08md3eofsw/Screen%20Shot%202017-12-28%20at%2013.02.00.png?dl=1"&gt;&lt;img src="https://www.dropbox.com/s/2ftpv08md3eofsw/Screen%20Shot%202017-12-28%20at%2013.02.00.png?dl=1" alt="https://www.dropbox.com/s/2ftpv08md3eofsw/Screen%20Shot%202017-12-28%20at%2013.02.00.png" crossorigin="anonymous" title="https://www.dropbox.com/s/2ftpv08md3eofsw/Screen%20Shot%202017-12-28%20at%2013.02.00.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42987 (is_active_sidebar returns true on after plugin deactivation) updated</title>
      
        <dc:creator>tpaksu</dc:creator>

      <pubDate>Thu, 28 Dec 2017 10:54:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42987#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42987#comment:2/1514458493716833</guid>
      <description>&lt;p&gt;
I solved it on my theme by using &lt;code&gt;retrieve_widgets&lt;/code&gt; function which internally calls &lt;code&gt;_wp_remove_unregistered_widgets&lt;/code&gt; that I think clears the inactive and disabled widgets from the database. But I don't feel comfortable with that solution that runs on every page render.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42166 (Bundle fonts used by default themes) updated</title>
      
        <dc:creator>stefannagy</dc:creator>

      <pubDate>Thu, 28 Dec 2017 10:35:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42166#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42166#comment:2/1514457318024527</guid>
      <description>&lt;p&gt;
Hi @dd32,
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We also used to use OpenSans in WordPress admin itself, however we dropped that in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36753" title="#36753: task (blessed): Use system fonts for a faster, more native-feeling admin (closed: fixed)"&gt;#36753&lt;/a&gt; in favour of system fonts.
&lt;/p&gt;
&lt;p&gt;
While I can't promise you that future default themes won't use Google Fonts if it provides the best user experience, know that it's always taken into consideration during the theme design process, and if anything, the fact we no longer need to use OpenSans in the admin should be a good sign for the future.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm really glad you dropped OpenSans in the admin panel in favour of system fonts. But in my view theme fonts are a different problem – that's why I don't think that this ticket is a duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26072" title="#26072: task (blessed): Bundle the Open Sans font (closed: wontfix)"&gt;#26072&lt;/a&gt;. When we talk about fonts in themes it's not a real option to drop them in favour of system fonts.
&lt;/p&gt;
&lt;p&gt;
The WP default themes seem to be designed for users with latin languages; in case of greek, cyrillic… charsets system fonts are used instead of the careful chosen ones. I'm quite sure that the reason for this is not because fonts are not so important for designers after all but because default themes are something like 'showcase themes' and it's just impossible to create a beautiful design that works for / with all different writing systems / charsets.
&lt;/p&gt;
&lt;p&gt;
In case of OpenSans you were talking about a font that supports many charsets (cyrillic, cyrillic-ext, greek, greek-ext, latin, latin-ext, viatnamese) while in case of Libre Franklin and most other fonts used in default themes we're talking about fonts that support only two charsets (latin and latin-ext). Apart from that as I understand it today most browsers support WOFF2 and unicode-range subsetting.
&lt;/p&gt;
&lt;p&gt;
So I opened this ticket because 1. default themes are different use cases – with different alternative options (dropping carefully chosen fonts in favour of system fonts is not one of them) and 2. in the last four years the basis for decision-making changed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42814 (PHP 7.2 Warning: ...wp-includes/post-template.php on line 284) updated</title>
      
        <dc:creator>Theolobias</dc:creator>

      <pubDate>Thu, 28 Dec 2017 09:36:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42814#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42814#comment:12/1514453784296405</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/42814#comment:11" title="Comment 11"&gt;kenwood31&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hey,
&lt;/p&gt;
&lt;p&gt;
Yes, it happens when Jetpack plugin is activated.
After checking several settings on this plugin, I noticed this is due to the feature "publicize".
&lt;/p&gt;
&lt;p&gt;
In my case, I didn't use it so I just switched it off (in Jetpack &amp;gt; Settings &amp;gt; Sharing) and the error is not displayed anymore.
Hope it will help you to fix it before a real fix on this ;)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I can't confirm this - deactivating the Pubilcize-feature doesn't change anything. (Maybe in your case it's due to another PHP-version?)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42983 (HTML Form to open links no longer working) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Thu, 28 Dec 2017 06:21:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42983#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42983#comment:2/1514442072856392</guid>
      <description>&lt;i&gt;Description&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42987 (is_active_sidebar returns true on after plugin deactivation) updated</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Thu, 28 Dec 2017 01:06:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42987#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42987#comment:1/1514423192902948</guid>
      <description>&lt;p&gt;
I think it is by design, so it checks in database if it has something inside, so that widget should get removed before or after plugin deactivation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>