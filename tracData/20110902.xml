<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #18573 (Missing HTML tag in kses.php) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2011 23:38:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18573#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18573#comment:5/1315006721792960</guid>
      <description>&lt;p&gt;
Need to wait until the patch is reviewed by someone from the core team.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18576 (setup-config.php CSS issues) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2011 23:35:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18576#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18576#comment:1/1315006544253523</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18180" title="#18180: task (blessed): Missing i18n in setup-config.php (closed: fixed)"&gt;#18180&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>18576.patch attached to Ticket #18576</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2011 23:34:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18576/18576.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18576/18576.patch/1315006483087212</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>18576.credentials-after.png attached to Ticket #18576</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2011 23:34:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18576/18576.credentials-after.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18576/18576.credentials-after.png/1315006473460268</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>18576.credentials-before.png attached to Ticket #18576</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2011 23:34:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18576/18576.credentials-before.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18576/18576.credentials-before.png/1315006464557532</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>18576.create-manually-after.png attached to Ticket #18576</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2011 23:34:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18576/18576.create-manually-after.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18576/18576.create-manually-after.png/1315006454334508</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>18576.create-manually-before.png attached to Ticket #18576</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2011 23:34:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18576/18576.create-manually-before.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18576/18576.create-manually-before.png/1315006445005730</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18573 (Missing HTML tag in kses.php) updated</title>
      
        <dc:creator>pbarney</dc:creator>

      <pubDate>Fri, 02 Sep 2011 23:33:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18573#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18573#comment:4/1315006412991886</guid>
      <description>&lt;p&gt;
Thank you for the help! I'm new to Trac; what am I supposed to do to close this out?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18576 (setup-config.php CSS issues) created</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2011 23:33:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18576</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18576/1315006408760458</guid>
      <description>&lt;p&gt;
See the screenshots.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #17979 (Avoid losing widgets when switching themes) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Fri, 02 Sep 2011 23:29:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17979#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17979#comment:49/1315006185957583</guid>
      <description>&lt;p&gt;
[17979.10.diff] does basically what's in that screenshot.  It eliminates #wp_inactive_widgets in favor of .sidebar-inactive further up (so that inactive and orphaned sidebars can be handled with the same code).
&lt;/p&gt;
&lt;p&gt;
#wp_inactive_widgets is still used in some javascript in /wp-admin/js/widgets(.dev).js but I'm not sure whether we just want to replace with .sidebar-inactive or if we want to include .sidebar-inactive AND .sidebar-orphaned.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>17979.10.diff attached to Ticket #17979</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Fri, 02 Sep 2011 23:22:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17979/17979.10.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17979/17979.10.diff/1315005779774280</guid>
      <description>&lt;p&gt;
Moves orphaned widgets to main content area above inactive widgets
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #17979 (Avoid losing widgets when switching themes) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Fri, 02 Sep 2011 23:16:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17979#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17979#comment:48/1315005397594974</guid>
      <description>&lt;p&gt;
What about a look like this:
&lt;a style="padding:0; border:none" href="http://core.trac.wordpress.org/attachment/ticket/17979/orphaned-sidebars-concept.png"&gt;&lt;img width="100%" crossorigin="anonymous" src="http://core.trac.wordpress.org/raw-attachment/ticket/17979/orphaned-sidebars-concept.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>orphaned-sidebars-concept.png attached to Ticket #17979</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Fri, 02 Sep 2011 23:10:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17979/orphaned-sidebars-concept.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17979/orphaned-sidebars-concept.png/1315005015385501</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18549 (wp_texturize incorrectly curls closing quotes after inline HTML end tags) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2011 23:00:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18549#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18549#comment:1/1315004432370948</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18575" title="#18575: defect (bug): wptexturize modifies code inside tag attributes (closed: worksforme)"&gt;#18575&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18575 (wptexturize modifies code inside tag attributes) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2011 23:00:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18575#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18575#comment:2/1315004423263965</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related: &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/18549" title="#18549: defect (bug): wp_texturize incorrectly curls closing quotes after inline HTML end tags (assigned)"&gt;#18549&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>18575.patch attached to Ticket #18575</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2011 22:59:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18575/18575.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18575/18575.patch/1315004362267395</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #17979 (Avoid losing widgets when switching themes) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 02 Sep 2011 22:49:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17979#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17979#comment:47/1315003774732133</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17979#comment:46" title="Comment 46"&gt;aaroncampbell&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Yes, changing the look makes it better but thinking we will have to change the placement so the users don't perceive the inactive sidebars the same as the active.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18575 (wptexturize modifies code inside tag attributes) updated</title>
      
        <dc:creator>iamcal</dc:creator>

      <pubDate>Fri, 02 Sep 2011 22:37:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18575#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18575#comment:1/1315003068126817</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18575 (wptexturize modifies code inside tag attributes) created</title>
      
        <dc:creator>iamcal</dc:creator>

      <pubDate>Fri, 02 Sep 2011 22:36:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18575</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18575/1315002985297658</guid>
      <description>&lt;p&gt;
In certain circumstances, wptexturize() will try to smart quote things inside attributes, screwing up the markup. For example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;[hello &amp;lt;a href="foo[bar]('baz')"&amp;gt;world&amp;lt;/a&amp;gt;
&lt;/pre&gt;&lt;p&gt;
The tokenizer that generates $textarr will split the text like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;0: [hello &amp;lt;a href="foo[bar]
1:('baz')"&amp;gt;world
2:&amp;lt;/a&amp;gt;
&lt;/pre&gt;&lt;p&gt;
and so element 1 gets treated like non-tag text even though it's from an attribute. the easy fix is to not allow starting braces inside a brace set:
&lt;/p&gt;
&lt;p&gt;
old:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$textarr = preg_split('/(&amp;lt;.*&amp;gt;|\[.*\])/Us', $text, -1, PREG_SPLIT_DELIM_CAPTURE);
&lt;/pre&gt;&lt;p&gt;
new:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$textarr = preg_split('/(&amp;lt;[^&amp;lt;]*&amp;gt;|\[[^\[]*\])/Us', $text, -1, PREG_SPLIT_DELIM_CAPTURE);
&lt;/pre&gt;&lt;p&gt;
this happens on trunk. code is in wp-includes/formatting.php. after the patch, the tokenizer works as intended:
&lt;/p&gt;
&lt;pre class="wiki"&gt;0: [hello
1: &amp;lt;a href="foo[bar]('baz')"&amp;gt;
2: world
3: &amp;lt;/a&amp;gt;
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #17979 (Avoid losing widgets when switching themes) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Fri, 02 Sep 2011 22:25:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17979#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17979#comment:46/1315002305983274</guid>
      <description>&lt;p&gt;
Lance was working on some CSS that makes the interface more obvious, but try this to see if it makes the working more obvious:
&lt;/p&gt;
&lt;pre class="wiki"&gt;.sidebar-orphaned .sidebar-name,
.sidebar-orphaned .sidebar-description {
	opacity: 0.5;
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>11571.6.diff attached to Ticket #11571</title>
      
        <dc:creator>leewillis77</dc:creator>

      <pubDate>Fri, 02 Sep 2011 22:19:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11571/11571.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11571/11571.6.diff/1315001954311203</guid>
      <description>&lt;p&gt;
Adds filters as per scribu's comments
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #17979 (Avoid losing widgets when switching themes) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 02 Sep 2011 22:13:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17979#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17979#comment:45/1315001636081266</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/18630" title="Avoid losing widgets when switching themes - take one, props ..."&gt;[18630]&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Avoid losing widgets when switching themes - take one, props aaroncampbell, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17979" title="#17979: task (blessed): Avoid losing widgets when switching themes (closed: fixed)"&gt;#17979&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [18630]: Avoid losing widgets when switching themes - take one, props ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 02 Sep 2011 22:13:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/18630</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/18630/1315001635191419</guid>
      <description>&lt;p&gt;
Avoid losing widgets when switching themes - take one, props aaroncampbell, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17979" title="#17979: task (blessed): Avoid losing widgets when switching themes (closed: fixed)"&gt;#17979&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #17979 (Avoid losing widgets when switching themes) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 02 Sep 2011 22:09:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17979#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17979#comment:44/1315001360264987</guid>
      <description>&lt;p&gt;
I'm still not sure about all the inactive sidebars. What can the users do with them? The logical thing would probably be to be able to replace an active sidebar with an inactive. However that is pretty easy to do by dragging the widgets around. Not sure it warrants the added UI complexity.
&lt;/p&gt;
&lt;p&gt;
Having the widgets magically reappear when switching to the previous theme is very neat, but showing most sidebars from the previous theme as inactive at exactly the same place (when switching from theme with 5 sidebars (twenty eleven) to theme with only one sidebar) seems quite confusing even if we make them different color.
&lt;/p&gt;
&lt;p&gt;
If we have to have them perhaps we should move them between the Available Widgets and Inactive Widgets and make them different color. That would at least signify the "inactive" status.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11571 (Provide easy way to return url of thumbnail image) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 02 Sep 2011 21:55:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11571#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11571#comment:16/1315000538326317</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11571#comment:14" title="Comment 14"&gt;leewillis77&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Happy to add the begin/end_fetch_post_thumbnail_src hooks, but not sure what the use case would be?
&lt;/p&gt;
&lt;p&gt;
Not sure I know enough about the core code to pick up scribu's comments - but happy to have a bash over the next few days if that's helpful?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
After talking with nacin on IRC, the idea is to use the '{begin|end}_fetch_post_thumbnail_html' hooks again.
&lt;/p&gt;
&lt;p&gt;
That way, no other changes are necessary, either on our part or on plugin authors' part.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18522 (Search using double quotes stopped working at v3.1) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2011 21:54:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18522#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18522#comment:16/1315000444220059</guid>
      <description>&lt;p&gt;
Could you by any chance check if the issue still exists in WP 3.2.1?
&lt;/p&gt;
&lt;p&gt;
If you don't want to upgrade the live site, I'd suggest installing WP 3.2.1 in a subdirectory just to test.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18573 (Missing HTML tag in kses.php) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2011 21:45:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18573#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18573#comment:3/1314999918604843</guid>
      <description>&lt;p&gt;
I guess not, unless we want to allow it in comments as well. There's already a number of equally innocuous tags left out there, possibly on purpose.
&lt;/p&gt;
&lt;p&gt;
I've blamed it back to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/767" title="Tag cleanup.
"&gt;[767]&lt;/a&gt;, and the commit message just says "Tag cleanup".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>11571.5.diff attached to Ticket #11571</title>
      
        <dc:creator>leewillis77</dc:creator>

      <pubDate>Fri, 02 Sep 2011 21:38:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11571/11571.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11571/11571.5.diff/1314999531800425</guid>
      <description>&lt;p&gt;
Lower case bools
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18573 (Missing HTML tag in kses.php) updated</title>
      
        <dc:creator>pbarney</dc:creator>

      <pubDate>Fri, 02 Sep 2011 21:37:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18573#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18573#comment:2/1314999438284112</guid>
      <description>&lt;p&gt;
Should it also be somewhere near line 430 as well?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11571 (Provide easy way to return url of thumbnail image) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2011 21:37:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11571#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11571#comment:15/1314999421465020</guid>
      <description>&lt;pre class="wiki"&gt;return FALSE;
&lt;/pre&gt;&lt;p&gt;
According to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16302" title="#16302: defect (bug): Don't shout booleans (closed: fixed)"&gt;#16302&lt;/a&gt;, booleans should be lowercased.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11571 (Provide easy way to return url of thumbnail image) updated</title>
      
        <dc:creator>leewillis77</dc:creator>

      <pubDate>Fri, 02 Sep 2011 21:30:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11571#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11571#comment:14/1314999028518598</guid>
      <description>&lt;p&gt;
Revised patch (11571.4.diff) which addresses most of nacin's comments. Also fixes a comment in  get_the_post_thumbnail.
&lt;/p&gt;
&lt;p&gt;
Happy to add the begin/end_fetch_post_thumbnail_src hooks, but not sure what the use case would be?
&lt;/p&gt;
&lt;p&gt;
Not sure I know enough about the core code to pick up scribu's comments - but happy to have a bash over the next few days if that's helpful?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>11571.4.diff attached to Ticket #11571</title>
      
        <dc:creator>leewillis77</dc:creator>

      <pubDate>Fri, 02 Sep 2011 21:28:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11571/11571.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11571/11571.4.diff/1314998887931188</guid>
      <description>&lt;p&gt;
Revised patch to address (most of) nacin's comments
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16695 (quicktags needs some refactoring) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 02 Sep 2011 21:25:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16695#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16695#comment:48/1314998743340013</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/18629" title="s/hask/hack/. props scribu, see #16695."&gt;[18629]&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
s/hask/hack/. props scribu, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16695" title="#16695: enhancement: quicktags needs some refactoring (closed: fixed)"&gt;#16695&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [18629]: s/hask/hack/. props scribu, see #16695.</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 02 Sep 2011 21:25:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/18629</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/18629/1314998742490306</guid>
      <description>&lt;p&gt;
s/hask/hack/. props scribu, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16695" title="#16695: enhancement: quicktags needs some refactoring (closed: fixed)"&gt;#16695&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16695 (quicktags needs some refactoring) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 02 Sep 2011 21:25:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16695#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16695#comment:47/1314998712057605</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16695#comment:46" title="Comment 46"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Yes, saw that too late, will fix in the next patch :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11571 (Provide easy way to return url of thumbnail image) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 02 Sep 2011 21:24:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11571#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11571#comment:13/1314998646563465</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I question the lack of a need for filters. Seems to me like we may even want to duplicate the begin/end_fetch_post_thumbnail_html hooks.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In that case, all higher post thumbnail functions should use get_the_post_thumbnail_src(), so that these new filters are applied consistently.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11571 (Provide easy way to return url of thumbnail image) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 02 Sep 2011 21:20:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11571#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11571#comment:12/1314998454855583</guid>
      <description>&lt;p&gt;
A few things to tweak for commit:
&lt;/p&gt;
&lt;p&gt;
No need for the logic on line 112. get_post_thumbnail_id() can take the default null. Likewise we can remove that code from get_the_post_thumbnail().
&lt;/p&gt;
&lt;p&gt;
Docblock needs &lt;code&gt;@return string|bool Image src, or false if the post does not have a thumbnail&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
We can bail with false, rather than the if/else, then the code can become un-indented a bit.
&lt;/p&gt;
&lt;p&gt;
I question the lack of a need for filters. Seems to me like we may even want to duplicate the begin/end_fetch_post_thumbnail_html hooks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18572 (Adding new link category fails with no error message.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2011 21:18:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18572#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18572#comment:2/1314998313274635</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Can't reproduce. Tested in IE 9 and Firefox 7. Sounds like a JavaScript conflict with a plugin or theme.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16695 (quicktags needs some refactoring) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 02 Sep 2011 21:11:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16695#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16695#comment:46/1314997894133097</guid>
      <description>&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/18628" title="More quicktags back-compat, see #16695"&gt;[18628]&lt;/a&gt; introduced a typo: 'hask' :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11571 (Provide easy way to return url of thumbnail image) updated</title>
      
        <dc:creator>downstairsdev</dc:creator>

      <pubDate>Fri, 02 Sep 2011 20:58:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11571#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11571#comment:11/1314997106112657</guid>
      <description>&lt;p&gt;
+1 For @leewillis77's patch.  Tested in the loop with image size and without image size.
&lt;/p&gt;
&lt;p&gt;
I am wondering if we should also have the companion function for output in the loop, or if that's overkill:
&lt;/p&gt;
&lt;pre class="wiki"&gt;/**
 * Display The Post Thumbnail Source
 *
 *
 * @param int $size Optional. Image size.  Defaults to 'post-thumbnail', which theme sets using set_post_thumbnail_src( $width, $height, $crop_flag );.
 * @param string|array $attr Optional. Query string or array of attributes.
 */
function the_post_thumbnail_src( $size = 'post-thumbnail', $attr = '' ) {
	echo get_the_post_thumbnail_src( null, $size, $attr );
}
&lt;/pre&gt;&lt;p&gt;
BTW: My use case is for a responsive portfolio layout.  If images have height/width attributes they scale badly with min-width:100% in CSS.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16695 (quicktags needs some refactoring) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 02 Sep 2011 20:40:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16695#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16695#comment:45/1314996048435258</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/18628" title="More quicktags back-compat, see #16695"&gt;[18628]&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
More quicktags back-compat, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16695" title="#16695: enhancement: quicktags needs some refactoring (closed: fixed)"&gt;#16695&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [18628]: More quicktags back-compat, see #16695</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 02 Sep 2011 20:40:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/18628</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/18628/1314996047690286</guid>
      <description>&lt;p&gt;
More quicktags back-compat, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16695" title="#16695: enhancement: quicktags needs some refactoring (closed: fixed)"&gt;#16695&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #18553 (Counting of categories doesn't work without refreshing?) updated</title>
      
        <dc:creator>kurtpayne</dc:creator>

      <pubDate>Fri, 02 Sep 2011 20:09:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18553#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18553#comment:1/1314994153390386</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I looked into this and was able to duplicate the problem.  I also found that the table striping doesn't update correctly when adding multiple categories.  See &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/18553/add_category_incorrect_striping.png" title="Attachment 'add_category_incorrect_striping.png' in Ticket #18553"&gt;add_category_incorrect_striping.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/18553/add_category_incorrect_striping.png" title="Download"&gt;​&lt;/a&gt; for an example.
&lt;/p&gt;
&lt;p&gt;
It seems like this defect would cover updating the striping and total category count when deleting categories.
&lt;/p&gt;
&lt;p&gt;
I'm happy to own this, but I would like usability feedback on one issue.  If the user has entered a search query, should the number of search result matches, or the number categories displayed in the table?  See &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/18553/add_category_usability_question.png" title="Attachment 'add_category_usability_question.png' in Ticket #18553"&gt;add_category_usability_question.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/18553/add_category_usability_question.png" title="Download"&gt;​&lt;/a&gt; for an explanation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>add_category_usability_question.png attached to Ticket #18553</title>
      
        <dc:creator>kurtpayne</dc:creator>

      <pubDate>Fri, 02 Sep 2011 20:06:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18553/add_category_usability_question.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18553/add_category_usability_question.png/1314993987070661</guid>
      <description>&lt;p&gt;
Explanation of usability question in comment
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>18574.diff attached to Ticket #18574</title>
      
        <dc:creator>andy</dc:creator>

      <pubDate>Fri, 02 Sep 2011 20:04:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18574/18574.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18574/18574.diff/1314993875644967</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18574 (Add class_name support to wpdb) created</title>
      
        <dc:creator>andy</dc:creator>

      <pubDate>Fri, 02 Sep 2011 20:03:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18574</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18574/1314993838579576</guid>
      <description>&lt;p&gt;
As of PHP 5.0.0, the second parameter to mysql_fetch_object takes a class name which will be instantiated instead of stdClass. This will be handy as we upgrade core objects (see &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/12267" title="#12267: enhancement: Upgrade loop objects to provide identical presentational interfaces (reopened)"&gt;#12267&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15458" title="#15458: enhancement: Lazy-load usermeta into the user object (closed: fixed)"&gt;#15458&lt;/a&gt;). I am using the attached patch on WordPress.com to simplify a lazy process. The effect is similar to what  does with WP_User but the code is much simpler.
&lt;/p&gt;
&lt;p&gt;
The attached patch is fully backward-compatible unless you have defined classes named OBJECT, OBJECT_K, ARRAY_A, or ARRAY_N.
&lt;/p&gt;
&lt;p&gt;
It could be improved by supporting the third parameter to mysql_fetch_object, an array of parameters to pass to the constructor. (For instance, you might want to pass $blog_id when constructing a WP_User). Adding this parameter would be perfectly simple if get_row did not already have a third parameter, $y, which is not used in core and should be removed because it invites wasteful queries.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18331 (Make get_header(), get_sidebar() and get_footer() use get_template_part()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 02 Sep 2011 19:58:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18331#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18331#comment:17/1314993491962864</guid>
      <description>&lt;p&gt;
If this patch gets in, the subfolder discussion could be held entirely in &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/15086" title="#15086: enhancement: get_template_part() should let you specify a directory (accepted)"&gt;#15086&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17979 (Avoid losing widgets when switching themes) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Fri, 02 Sep 2011 19:55:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17979#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17979#comment:43/1314993316655050</guid>
      <description>&lt;p&gt;
Lance and I talked on Skype and decided on using .7 for this release.  &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/17979/17979.9.diff" title="Attachment '17979.9.diff' in Ticket #17979"&gt;17979.9.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/17979/17979.9.diff" title="Download"&gt;​&lt;/a&gt; is based on that with some copy changes, a refresh to work with current trunk, and an added "class" option for &lt;code&gt;register_sidebar()&lt;/code&gt; that we can use to style the orphaned sidebars differently.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>17979.9.diff attached to Ticket #17979</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Fri, 02 Sep 2011 19:52:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17979/17979.9.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17979/17979.9.diff/1314993161597137</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>add_category_incorrect_striping.png attached to Ticket #18553</title>
      
        <dc:creator>kurtpayne</dc:creator>

      <pubDate>Fri, 02 Sep 2011 19:51:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18553/add_category_incorrect_striping.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18553/add_category_incorrect_striping.png/1314993072153239</guid>
      <description>&lt;p&gt;
Adding multiple categories results in incorrect striping
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18331 (Make get_header(), get_sidebar() and get_footer() use get_template_part()) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Fri, 02 Sep 2011 19:35:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18331#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18331#comment:16/1314992106671346</guid>
      <description>&lt;p&gt;
Should I make a new, separate ticket for subfolder support then? (I know it'd be reliant on &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/15086" title="#15086: enhancement: get_template_part() should let you specify a directory (accepted)"&gt;#15086&lt;/a&gt; going in.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>11571.3.diff attached to Ticket #11571</title>
      
        <dc:creator>leewillis77</dc:creator>

      <pubDate>Fri, 02 Sep 2011 19:25:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11571/11571.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11571/11571.3.diff/1314991501129196</guid>
      <description>&lt;p&gt;
Revised patch updated against trunk, plus few minor changes
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11571 (Provide easy way to return url of thumbnail image) updated</title>
      
        <dc:creator>leewillis77</dc:creator>

      <pubDate>Fri, 02 Sep 2011 19:24:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11571#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11571#comment:10/1314991473764222</guid>
      <description>&lt;p&gt;
Hi - I just came to add this myself as a fresh bug, then found this. I've added a .3 patch which is mostly the same as .2, but with the following changes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Removed the filter as I agree with scribu that it doesn't make sense just being added here.
&lt;/li&gt;&lt;li&gt;This also removes the reference to $icon which was undefined
&lt;/li&gt;&lt;li&gt;Updated to call update_post_thumbnail_cache() as per get_the_post_thumbnail()
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18331 (Make get_header(), get_sidebar() and get_footer() use get_template_part()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 02 Sep 2011 18:26:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18331#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18331#comment:15/1314988007848848</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/18331/18331.2.diff" title="Attachment '18331.2.diff' in Ticket #18331"&gt;18331.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/18331/18331.2.diff" title="Download"&gt;​&lt;/a&gt;: remove unused $subfolder arg.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8368 (Scheduling post time behavior and language refinements) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2011 18:18:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8368#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8368#comment:13/1314987489242952</guid>
      <description>&lt;p&gt;
Related: &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/18565" title="#18565: defect (bug): Scheduled or Published. Still confuses us. (reopened)"&gt;#18565&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>18331.2.diff attached to Ticket #18331</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 02 Sep 2011 18:14:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18331/18331.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18331/18331.2.diff/1314987273814965</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18573 (Missing HTML tag in kses.php) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2011 18:07:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18573#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18573#comment:1/1314986868405432</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>18573.patch attached to Ticket #18573</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2011 18:07:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18573/18573.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18573/18573.patch/1314986856591840</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18331 (Make get_header(), get_sidebar() and get_footer() use get_template_part()) updated</title>
      
        <dc:creator>chipbennett</dc:creator>

      <pubDate>Fri, 02 Sep 2011 18:00:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18331#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18331#comment:14/1314986443793719</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18331 (Make get_header(), get_sidebar() and get_footer() use get_template_part()) updated</title>
      
        <dc:creator>chipbennett</dc:creator>

      <pubDate>Fri, 02 Sep 2011 18:00:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18331#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18331#comment:13/1314986435180801</guid>
      <description>&lt;p&gt;
+1 as well, and I'm all in favor of dropping theme_compat, the earlier the better. By now, Theme devs know that they are required to include &lt;code&gt;header.php&lt;/code&gt; when calling &lt;code&gt;get_header()&lt;/code&gt; (et al).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 02 Sep 2011 17:57:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:94</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:94/1314986268892682</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:93" title="Comment 93"&gt;chipbennett&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm not sold on the add_theme_support() implementation...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, but during the transition we need to let plugins know when a theme supports the new template tags. The &lt;code&gt;add_theme_support&lt;/code&gt; seems the best way to do it. The transition would probably be at least few months, maybe longer.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If I were to start up a conversation among the Theme Developers, should I direct them to this ticket, or just start a discussion thread on the make.wordpress.org/themes site?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm thinking it's better to start by posting on make.wordpress.org/themes. This ticket is getting far too long as is :). Also (I hope) we have decided to do that, the discussion should probably be about what template tags, where exactly, naming, cut-off date, etc.
&lt;/p&gt;
&lt;p&gt;
Going through the tons of comments here, seems we can do something like this as proposed by @mattwiebe:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_before_the_loop();
while ( have_posts() ) : the_post();
  ?&amp;gt;
  // opening div?
  &amp;lt;?php wp_before_post_content(); ?&amp;gt;
  // theme specific code...
  &amp;lt;?php wp_after_post_content(); ?&amp;gt;
  // closing div?
  &amp;lt;?php
endwhile;
wp_after_the_loop();
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>chipbennett</dc:creator>

      <pubDate>Fri, 02 Sep 2011 17:36:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:93</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:93/1314985002788738</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:92" title="Comment 92"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:89" title="Comment 89"&gt;chipbennett&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
This makes sense. So, to summarize:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;decide on new (compulsory?) template tags,
&lt;/li&gt;&lt;li&gt;use &lt;code&gt;add_theme_support&lt;/code&gt; for them so plugins "know" the currently used theme supports them (this could be only for the transition period, but once theme authors start to use it there's no point of taking it out),
&lt;/li&gt;&lt;li&gt;popularize/educate theme authors before these template tags become a requirement.
&lt;/li&gt;&lt;li&gt;decide on a cut-off date by which all themes in the repository should include the new template tags.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
I'm not sold on the &lt;code&gt;add_theme_support()&lt;/code&gt; implementation, because as you noted, once adoption is widespread, &lt;code&gt;add_theme_support()&lt;/code&gt; becomes superfluous. If that's the way it gets implemented, so be it. My major concern is the standardization of nomenclature and Theme locations/actions where such hooks get fired.
&lt;/p&gt;
&lt;p&gt;
As for the implementation process: yeah, that's pretty much how I see it.
&lt;/p&gt;
&lt;p&gt;
If I were to start up a conversation among the Theme Developers, should I direct them to this ticket, or just start a discussion thread on the make.wordpress.org/themes site?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 02 Sep 2011 17:27:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:92</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:92/1314984456455792</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:89" title="Comment 89"&gt;chipbennett&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
This makes sense. So, to summarize:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;decide on new (compulsory?) template tags,
&lt;/li&gt;&lt;li&gt;use &lt;code&gt;add_theme_support&lt;/code&gt; for them so plugins "know" the currently used theme supports them (this could be only for the transition period, but once theme authors start to use it there's no point of taking it out),
&lt;/li&gt;&lt;li&gt;popularize/educate theme authors before these template tags become a requirement.
&lt;/li&gt;&lt;li&gt;decide on a cut-off date by which all themes in the repository should include the new template tags.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>jb510</dc:creator>

      <pubDate>Fri, 02 Sep 2011 17:21:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:91</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:91/1314984065302094</guid>
      <description>&lt;p&gt;
&amp;lt;deleted&amp;gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>ev3rywh3re</dc:creator>

      <pubDate>Fri, 02 Sep 2011 17:18:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:90</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:90/1314983887034530</guid>
      <description>&lt;p&gt;
I think an additional template tag function is appropriate and usable as it won't break anything new. I like the name the_post_extras() and as a template function you could pretty much wrap as much complex junk as you wan into it.
&lt;/p&gt;
&lt;pre class="wiki"&gt;the_post_extras( 'extra_name', 'place_before_after_etc', 'type_templatePart_action' );
&lt;/pre&gt;&lt;p&gt;
Something like that maybe? Without arguments it does some expected defaults? You can make some wrappers like &lt;code&gt;the_post_extras_before()&lt;/code&gt; &lt;code&gt;the_post_extras_after()&lt;/code&gt; to give some simple help.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16687 (%postname% permalinks should not trigger verbose rewrite rules) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2011 17:13:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16687#comment:54</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16687#comment:54/1314983631367408</guid>
      <description>&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/18541" title="Eliminate verbose rewrite rules for ambiguous rewrite structures, ..."&gt;[18541]&lt;/a&gt; broke &lt;code&gt;get_page_by_path()&lt;/code&gt; for non-English slugs: &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/10249#comment:42" title="Comment 42 for #10249: defect (bug): Page slug in cyrillic = Error 404 - Not Found! (reopened)"&gt;ticket:10249:42&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10249 (Page slug in cyrillic = Error 404 - Not Found!) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2011 17:12:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10249#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10249#comment:42/1314983540869693</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/18541" title="Eliminate verbose rewrite rules for ambiguous rewrite structures, ..."&gt;[18541]&lt;/a&gt; indeed broke &lt;code&gt;get_page_by_path()&lt;/code&gt; for non-English slugs.
&lt;/p&gt;
&lt;p&gt;
This is what Debug Bar shows:
&lt;/p&gt;
&lt;pre class="wiki"&gt;WARNING: wp-includes/wp-db.php:890 - vsprintf() [function.vsprintf]: Too few arguments
&lt;/pre&gt;&lt;p&gt;
SQL query is:
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT ID, post_name, post_parent FROM trunk_posts WHERE post_name IN ('%d0%ba%d0%b8%d1%80%d0%be') AND (post_type = '%s' OR post_type = 'attachment') AND trunk_posts.post_type IN ('post', 'page', 'attachment')
&lt;/pre&gt;&lt;p&gt;
&lt;code&gt;vsprintf()&lt;/code&gt; in &lt;code&gt;$wpdb-&amp;gt;prepare()&lt;/code&gt; thinks those encoded chars are placeholders.
&lt;/p&gt;
&lt;p&gt;
Before &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/18541" title="Eliminate verbose rewrite rules for ambiguous rewrite structures, ..."&gt;[18541]&lt;/a&gt;, only a single page slug was queried here, and it was escaped properly.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/10249/10249.1.patch" title="Attachment '10249.1.patch' in Ticket #10249"&gt;10249.1.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/10249/10249.1.patch" title="Download"&gt;​&lt;/a&gt; fixes the issue by escaping &lt;code&gt;%&lt;/code&gt; chars before passing &lt;code&gt;$in_string&lt;/code&gt; to &lt;code&gt;$wpdb-&amp;gt;prepare()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/10249/10249.2.patch" title="Attachment '10249.2.patch' in Ticket #10249"&gt;10249.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/10249/10249.2.patch" title="Download"&gt;​&lt;/a&gt; escapes &lt;code&gt;$post_type&lt;/code&gt;, which makes &lt;code&gt;$wpdb-&amp;gt;prepare()&lt;/code&gt; unnecessary, since queried post slugs are also escaped earlier.
&lt;/p&gt;
&lt;p&gt;
Both patches also contain the refreshed &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/10249/page-slugs-urldecode-other-way-round.diff" title="Attachment 'page-slugs-urldecode-other-way-round.diff' in Ticket #10249"&gt;page-slugs-urldecode-other-way-round.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/10249/page-slugs-urldecode-other-way-round.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>chipbennett</dc:creator>

      <pubDate>Fri, 02 Sep 2011 17:10:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:89</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:89/1314983445850523</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:87" title="Comment 87"&gt;aaroncampbell&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:83" title="Comment 83"&gt;chipbennett&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
I think that what you're talking about is actually an extension of the_rest.  If you look at my patch ( &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/18561/18561.diff" title="Attachment '18561.diff' in Ticket #18561"&gt;18561.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/18561/18561.diff" title="Download"&gt;​&lt;/a&gt; and &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/18561/18561.twentyeleven.diff" title="Attachment '18561.twentyeleven.diff' in Ticket #18561"&gt;18561.twentyeleven.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/18561/18561.twentyeleven.diff" title="Download"&gt;​&lt;/a&gt; ) it's basically just what you're saying just only for ONE hook.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Looking at the patch, probably so (though I would recommend naming it something like &lt;code&gt;wp_after_post()&lt;/code&gt; or something equally semantic). The point is, though, that we should &lt;strong&gt;first standardize&lt;/strong&gt;, and &lt;em&gt;then patch&lt;/em&gt;. Adding pre/post-post hooks makes perfect sense - so much so, that the idea will prompt addition of other equally useful hooks. Let's plan ahead for that happening, so that we have an established location/naming convention.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Coming up with a list of standard hooks would be great.  If we start requiring them in the theme directory maybe we won't need the add_theme_support() calls.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Going this route makes it &lt;em&gt;easier&lt;/em&gt; to add to the Theme Review guidelines support for any such hooks. Rolling out support for these hooks would be pretty easy, since 1) we could establish easy-to-follow instructions for the Theme Review Guidelines, and 2) most commercial Themes implement similar hooks anyway, and would very easily be able to support WP-core variations of those hooks.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:85" title="Comment 85"&gt;brianlayman&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Adding the extra hooks &amp;amp; tags won't break anything in current themes.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
While it won't break current themes, it WILL be difficult for plugins that use them to transition, requiring them to have some way to fall back for themes that DON'T have the new hooks.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The same is true for &lt;code&gt;wp_head()&lt;/code&gt; and &lt;code&gt;wp_footer()&lt;/code&gt;. As with these template tags, the key is &lt;em&gt;developer education&lt;/em&gt; of importance and proper implementation.
&lt;/p&gt;
&lt;p&gt;
Another benefit of first creating a standard nomenclature is that we can begin developer education long before implementation happens.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Fri, 02 Sep 2011 17:01:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:88</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:88/1314982872266679</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:83" title="Comment 83"&gt;chipbennett&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
we need to come up with a much more semantic name for the function
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Stepping back from it, I think I agree. We could always go back to what I was first calling it, &lt;code&gt;post_extras&lt;/code&gt; (or, rather, &lt;code&gt;the_post_extras&lt;/code&gt;) :) Not that I'm biased or anything, you know.
&lt;/p&gt;
&lt;p&gt;
+1 to &lt;code&gt;add_theme_support()&lt;/code&gt;, at least for now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10249.2.patch attached to Ticket #10249</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2011 16:57:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10249/10249.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10249/10249.2.patch/1314982678215946</guid>
      <description>&lt;p&gt;
Escape $post_type, avoid $wpdb-&amp;gt;prepare()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18573 (Missing HTML tag in kses.php) created</title>
      
        <dc:creator>pbarney</dc:creator>

      <pubDate>Fri, 02 Sep 2011 16:57:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18573</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18573/1314982655356482</guid>
      <description>&lt;p&gt;
The HTML SMALL tag is noticeably missing from the core kses.php. I'd like to request that it be added.
&lt;/p&gt;
&lt;p&gt;
Due to the innocuous nature of this tag, the fact that it is missing seems to be more of an oversight than a deliberate decision. Because the current functionality (stripping the tag) runs contrary to typical user expectations, I would call this a bug.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>10249.1.patch attached to Ticket #10249</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2011 16:57:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10249/10249.1.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10249/10249.1.patch/1314982647498817</guid>
      <description>&lt;p&gt;
Escape $in_string
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Fri, 02 Sep 2011 16:54:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:87</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:87/1314982490020459</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:83" title="Comment 83"&gt;chipbennett&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
I think that what you're talking about is actually an extension of the_rest.  If you look at my patch ( &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/18561/18561.diff" title="Attachment '18561.diff' in Ticket #18561"&gt;18561.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/18561/18561.diff" title="Download"&gt;​&lt;/a&gt; and &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/18561/18561.twentyeleven.diff" title="Attachment '18561.twentyeleven.diff' in Ticket #18561"&gt;18561.twentyeleven.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/18561/18561.twentyeleven.diff" title="Download"&gt;​&lt;/a&gt; ) it's basically just what you're saying just only for ONE hook.  Coming up with a list of standard hooks would be great.  If we start requiring them in the theme directory maybe we won't need the add_theme_support() calls.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:85" title="Comment 85"&gt;brianlayman&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Adding the extra hooks &amp;amp; tags won't break anything in current themes.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
While it won't break current themes, it WILL be difficult for plugins that use them to transition, requiring them to have some way to fall back for themes that DON'T have the new hooks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Fri, 02 Sep 2011 16:52:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:86</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:86/1314982341086225</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:83" title="Comment 83"&gt;chipbennett&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
(although we need to come up with a &lt;em&gt;much&lt;/em&gt; more semantic name for the function).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1. I've given a few suggestions in my various posts above - not sure if people were using "the_rest" because they liked it (I don't), or just making it clear they were referring to that particular idea.
&lt;/p&gt;
&lt;p&gt;
It's kind of like content meta, content extras, or content aside, or perhaps content tools - something related to that particular content.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>brianlayman</dc:creator>

      <pubDate>Fri, 02 Sep 2011 16:47:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:85</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:85/1314982035732887</guid>
      <description>&lt;p&gt;
I second Chip on this.  Adding the extra hooks &amp;amp; tags won't break anything in current themes.  It goes well beyond the specific issue in this ticket, but it addresses the core problem and will reduce the number of times we have to hack existing themes to do what the customer wants. Getting the list will be the most controversial process as there will always be room for more. But as long as we don't go hog wild, we won't affect page generation speed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Fri, 02 Sep 2011 16:43:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:84</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:84/1314981809808950</guid>
      <description>&lt;p&gt;
Ok, I put up two patches:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/18561/18561.diff" title="Attachment '18561.diff' in Ticket #18561"&gt;18561.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/18561/18561.diff" title="Download"&gt;​&lt;/a&gt; adds the_rest which was JJJ's idea.  I simplified his original idea by removing the before_the_rest and after_the_rest actions because you can just add a low or high priority to your action to accomplish the same thing.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/18561/18561.twentyeleven.diff" title="Attachment '18561.twentyeleven.diff' in Ticket #18561"&gt;18561.twentyeleven.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/18561/18561.twentyeleven.diff" title="Download"&gt;​&lt;/a&gt; adds the_rest support to TwentyEleven by having it use &lt;code&gt;the_rest()&lt;/code&gt; as well as having it announce that it does with &lt;code&gt;add_theme_support&lt;/code&gt;.  Hopefully one of the theme guys can add any styling that is needed for properly positioning it, but it will put this content BELOW the "This entry was posted in..." line.
&lt;/p&gt;
&lt;p&gt;
I tested it with a plugin of mine that adds related posts by appending to the_content.  This is the basic code that a plugin would use:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function how_to_insert() {
	if ( current_theme_supports( 'the-rest' ) )
		add_action( 'the_rest', 'show_via_the_rest' );
	else
		add_filter( 'the_content', 'filter_post_content' );
}
add_action( 'after_setup_theme', 'how_to_insert', 99 );
function show_via_the_rest( $post ) {
	echo get_related_posts( $post );
}
function filter_post_content($content) {
	$content .= get_related_posts();
	return $content;
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>chipbennett</dc:creator>

      <pubDate>Fri, 02 Sep 2011 16:36:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:83</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:83/1314981414325919</guid>
      <description>&lt;p&gt;
After reading over all of the comments, my initial opinion is that hacking up &lt;code&gt;get_template_part()&lt;/code&gt; really isn't the best approach. I think the &lt;code&gt;the_rest()&lt;/code&gt; idea has merit (although we need to come up with a &lt;em&gt;much&lt;/em&gt; more semantic name for the function).
&lt;/p&gt;
&lt;p&gt;
However, if the intent is to implement standard hooks, then let's just do that: define and implement standard hooks. &lt;a class="ext-link" href="http://www.wptavern.com/forum/themes-templates/494-standard-theme-hook-names.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;The idea was brought up a long time ago&lt;/a&gt;, but as far as I could tell, no consensus was ever reached.
&lt;/p&gt;
&lt;p&gt;
So, I propose that we do this, and we do it right, the first time:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Standardize on a hook nomenclature
&lt;/li&gt;&lt;li&gt;Standardize a list of Theme "locations" for which action hooks are appropriate
&lt;/li&gt;&lt;li&gt;Wrap those hooks in template tags, as with &lt;code&gt;wp_head()&lt;/code&gt; and &lt;code&gt;wp_footer()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Require Themes to implement the template tags, as is currently required for &lt;code&gt;wp_head()&lt;/code&gt; and &lt;code&gt;wp_footer()&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
In the long run, this approach has all the benefits of both the &lt;code&gt;get_template_part_{hook}&lt;/code&gt; approach and the &lt;code&gt;the_rest()&lt;/code&gt; approach, and will be far more flexible for Themes, Plugins, AND core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>18561.twentyeleven.diff attached to Ticket #18561</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Fri, 02 Sep 2011 16:32:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18561/18561.twentyeleven.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18561/18561.twentyeleven.diff/1314981174691945</guid>
      <description>&lt;p&gt;
Adds support for the_rest() to Twenty eleven
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>18561.diff attached to Ticket #18561</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Fri, 02 Sep 2011 16:31:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18561/18561.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18561/18561.diff/1314981099941850</guid>
      <description>&lt;p&gt;
Adds the_rest()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>chipbennett</dc:creator>

      <pubDate>Fri, 02 Sep 2011 16:28:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:82</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:82/1314980904436906</guid>
      <description>&lt;p&gt;
@Otto42 see, I knew I was missing something!
&lt;/p&gt;
&lt;p&gt;
So, it would work for firing a hook &lt;em&gt;before&lt;/em&gt; the post output, but not &lt;em&gt;after&lt;/em&gt;.
&lt;/p&gt;
&lt;p&gt;
Back to the drawing board.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Fri, 02 Sep 2011 16:24:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:81</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:81/1314980662888678</guid>
      <description>&lt;p&gt;
Chip: the_post() doesn't create the output. It just sets up the post variables. Having a before and after in there wouldn't work for this.
&lt;/p&gt;
&lt;p&gt;
Consider the standard loop:
&lt;/p&gt;
&lt;p&gt;
while (have_posts()) : the_post();
&lt;/p&gt;
&lt;p&gt;
That "the_post" call is where you're putting your before and after. Not the right place.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>query.php.the_post_before.the_post_after.hooks.diff attached to Ticket #18561</title>
      
        <dc:creator>chipbennett</dc:creator>

      <pubDate>Fri, 02 Sep 2011 16:21:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18561/query.php.the_post_before.the_post_after.hooks.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18561/query.php.the_post_before.the_post_after.hooks.diff/1314980479909086</guid>
      <description>&lt;p&gt;
Add &lt;code&gt;the_post_before&lt;/code&gt; and &lt;code&gt;the_post_after&lt;/code&gt; hooks to fire inside of &lt;code&gt;the_post()&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18548 (Add a better option for &lt;title&gt; tags) updated</title>
      
        <dc:creator>ramoonus</dc:creator>

      <pubDate>Fri, 02 Sep 2011 16:20:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18548#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18548#comment:41/1314980407782341</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>chipbennett</dc:creator>

      <pubDate>Fri, 02 Sep 2011 16:16:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:80</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:80/1314980184704253</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Okay, so, this seems so obvious and simple to me - so clearly I'm missing something.
&lt;/p&gt;
&lt;p&gt;
Why not &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/tags/3.2.1/wp-includes/query.php#L773"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;just change this&lt;/a&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function the_post() {
	global $wp_query;
	$wp_query-&amp;gt;the_post();
}
&lt;/pre&gt;&lt;p&gt;
...to this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function the_post() {
	global $wp_query;
	do_action( 'the_post_before' );
	$wp_query-&amp;gt;the_post();
	do_action( 'the_post_after' );
}
&lt;/pre&gt;&lt;p&gt;
It supports the existing Loop markup of every Theme in existence. It requires no changes to the Theme template for either the Theme or Plugins to hook into the &lt;code&gt;the_post_before&lt;/code&gt; and &lt;code&gt;the_post_after&lt;/code&gt; hooks.
&lt;/p&gt;
&lt;p&gt;
What am I missing?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Fri, 02 Sep 2011 15:59:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:79</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:79/1314979158885797</guid>
      <description>&lt;p&gt;
Another alternative is to create a hook/filter like we do with contact methods in the user profile.  The function &lt;code&gt;_wp_get_user_contact_methods()&lt;/code&gt; returns a filterable list that's turned into the input fields for AIM, Yahoo, and Jabber in the profile.  A similar (filterable) function &lt;code&gt;_wp_get_social_media_icons()&lt;/code&gt; would be able to do the same thing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>greenshady</dc:creator>

      <pubDate>Fri, 02 Sep 2011 15:52:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:78</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:78/1314978754968398</guid>
      <description>&lt;p&gt;
I wrote a post that better explains my thoughts from above instead of cluttering up this ticket:
&lt;a class="ext-link" href="http://devpress.com/blog/a-better-way-for-plugins-to-hook-into-theme-templates/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://devpress.com/blog/a-better-way-for-plugins-to-hook-into-theme-templates/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I believe this idea would work hand-in-hand with the idea of using template tags.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17952 (Update to latest jQuery and UI) updated</title>
      
        <dc:creator>ramoonus</dc:creator>

      <pubDate>Fri, 02 Sep 2011 15:44:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17952#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17952#comment:16/1314978262331042</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
jQuery 1.6.3 ...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Fri, 02 Sep 2011 15:41:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:77</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:77/1314978091270875</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:76" title="Comment 76"&gt;johnjamesjacoby&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
I agree, I think the template tags are a the best option here (basically a helper function used to fire the actions).  The problem is that the functions aren't enough.  Plugins need to know whether a theme uses them, so we still need something like &lt;code&gt;add_theme_support( 'the_rest' )&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18563 (Disallowing editing of .php files in the plugin editor blocks access ...) updated</title>
      
        <dc:creator>trepmal</dc:creator>

      <pubDate>Fri, 02 Sep 2011 14:20:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18563#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18563#comment:8/1314973205711203</guid>
      <description>&lt;p&gt;
Okay, I see. If Hello Dolly is the first plugin in the list, you'd be unable to select an editable plugin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10249 (Page slug in cyrillic = Error 404 - Not Found!) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 02 Sep 2011 13:13:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10249#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10249#comment:41/1314969205403327</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the report, but please don't change the Version attribute. It should actually be called "First seen in:".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18562 (WP_Query class ignores all arguments in custom post type) updated</title>
      
        <dc:creator>arsalkeen</dc:creator>

      <pubDate>Fri, 02 Sep 2011 10:52:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18562#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18562#comment:9/1314960739386388</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Ok great... its working... and in my functions.php I use a conditional statement to apply this filter if the $request&lt;a class="missing wiki"&gt;post_type?&lt;/a&gt; = 'eb_service' and is_archive().
&lt;/p&gt;
&lt;p&gt;
This should avoid any performance issues I guess. Need to test this though :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18285 (New Settings API and workflow) updated</title>
      
        <dc:creator>F J Kaiser</dc:creator>

      <pubDate>Fri, 02 Sep 2011 09:37:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18285#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18285#comment:51/1314956250297668</guid>
      <description>&lt;p&gt;
@WraithKenny +1 for template tags and template-able option pages. One imo important thing would be that those template tags could have an additional callback parameter to override their behavior (like if the callback would hook into a filter). Another thing I want to mention are "shared" option pages. In detail: In some cases you don't have hundreds of options and therefore you don't need 10 option pages, but only a single one - with let's say 15 options. Now 5 of those options are better off when they are only viewable by the developer and the other 10 are meant to get set by the owner/client who wants - of course - have an administrator account. If we would have a capability per field, we could use custom capabilities to show all fields only to the developer and the rest to the "public" majority. Sure, we can still do this in for example an options template, but having the capability check built in right into the field the process would be much more seamless.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10249 (Page slug in cyrillic = Error 404 - Not Found!) updated</title>
      
        <dc:creator>dragunoff</dc:creator>

      <pubDate>Fri, 02 Sep 2011 09:28:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10249#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10249#comment:40/1314955710379016</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I thought that this bug was gone for good but it reappeared after a nightly build upgrade about a week ago. Pages with cyrillic slug throw a 404 error, while posts and taxonomies (tags, cats) work fine.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18571 (Not possible to edit a media item's slug) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Fri, 02 Sep 2011 08:36:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18571#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18571#comment:1/1314952611709808</guid>
      <description>&lt;p&gt;
There's a nice plugin that does what you want: &lt;a class="ext-link" href="http://wordpress.org/extend/plugins/slug4apig/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/slug4apig/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Media slugs still have to be unique (WP will add a suffix if it's not, just as it does with post names), even if the media are attached (and therefore get the URL prefix from) to different posts.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18563 (Disallowing editing of .php files in the plugin editor blocks access ...) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 02 Sep 2011 06:48:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18563#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18563#comment:7/1314946093453777</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Trepal, the problem is, that if you use wp_die() here, you can't select another plugin anymore.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18522 (Search using double quotes stopped working at v3.1) updated</title>
      
        <dc:creator>kizora</dc:creator>

      <pubDate>Fri, 02 Sep 2011 06:31:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18522#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18522#comment:15/1314945070497140</guid>
      <description>&lt;p&gt;
The only file I could find is in the debug bar plugin (you suggested I try) in wp-content/plugins/debug-bar/panels, but that's called class-debug-bar-object-cache.php and the plugin is disabled.
&lt;/p&gt;
&lt;p&gt;
As it's the same code and query running on the localhost and live site, what other environmental areas may be causing this?
&lt;/p&gt;
&lt;p&gt;
Thanks
Chris
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18522 (Search using double quotes stopped working at v3.1) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 02 Sep 2011 05:48:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18522#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18522#comment:14/1314942535595231</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
What's "caching backend" ?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If you don't know what it is, chances are, you're not using it, but the Caching backend I was referring to was an Object cache, which you can check for, by seeing if you have a 'object-cache.php' file in your wp-content folder.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18522 (Search using double quotes stopped working at v3.1) updated</title>
      
        <dc:creator>kizora</dc:creator>

      <pubDate>Fri, 02 Sep 2011 05:38:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18522#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18522#comment:13/1314941938917726</guid>
      <description>&lt;p&gt;
Hi dd32,
&lt;/p&gt;
&lt;p&gt;
Disabling all the plugins has no effect and I've cleared the browser cache.
&lt;/p&gt;
&lt;p&gt;
What's "caching backend" ?
&lt;/p&gt;
&lt;p&gt;
Cheers
Chris
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Fri, 02 Sep 2011 05:19:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:76</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:76/1314940799331121</guid>
      <description>&lt;p&gt;
I think there are a few different approaches here. To summarize, the ideas on the table are:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Create a template tag to output the rest of a posts non-metadata. [get_the_rest() + the_rest()]
&lt;/li&gt;&lt;li&gt;Create a template part hierarchy to compliment the existing &lt;a class="ext-link" href="http://codex.wordpress.org/Template_Hierarchy"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;template hierarchy&lt;/a&gt;.
&lt;/li&gt;&lt;li&gt;Hook theme specific actions into WordPress core functions, so code can be executed within any WordPress theme more predictably, regardless of the theme. (This includes the before/after suggestions)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
All of these are great ideas but only the template tag approach accurately solves this particular problem. Functions are easy for people to remember because they are native to PHP, unlike WordPress action names which are native to WordPress. Functions that start with "the_" are the first thing most people learn about WordPress, so they are an easy addition in moderation.
&lt;/p&gt;
&lt;p&gt;
The next best approach is having a dedicated set of theme actions fire at appropriate times in the page-load process. This is what most theme frameworks already attempt to do, so clearly it's popular and functional. BuddyPress and bbPress both already take this approach with their default themes, and having a standardized set of WordPress &lt;strong&gt;core theme actions&lt;/strong&gt; would be, in a word, awesome.
&lt;/p&gt;
&lt;p&gt;
The &lt;em&gt;get_template_part()&lt;/em&gt; and &lt;em&gt;locate_template()&lt;/em&gt; tweaks also should make their way into WordPress core. These enhancements along with a set of core theme actions are the plugin authors' holy grail to reliably piggy backing any WordPress theme without jumping through flaming hoops of fearful incompatibility with thousands of awesome themes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18572 (Adding new link category fails with no error message.) updated</title>
      
        <dc:creator>ghostseeker</dc:creator>

      <pubDate>Fri, 02 Sep 2011 04:08:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18572#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18572#comment:1/1314936483827727</guid>
      <description>&lt;p&gt;
Browser: IE9 (32 bit)
Operating system: Windows 7 (64 bit)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18572 (Adding new link category fails with no error message.) created</title>
      
        <dc:creator>ghostseeker</dc:creator>

      <pubDate>Fri, 02 Sep 2011 04:04:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18572</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18572/1314936262750241</guid>
      <description>&lt;ol&gt;&lt;li&gt;Go to link categories
&lt;/li&gt;&lt;li&gt;Enter a name
&lt;/li&gt;&lt;li&gt;Enter a slug
&lt;/li&gt;&lt;li&gt;Click Add New Category
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
OBSERVE: NOTHING HAPPENS.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18559 (Set_screen_options() ignores many page names. add_menu_page() and ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2011 03:48:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18559#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18559#comment:4/1314935318896651</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
So we need &lt;code&gt;sanitize_key()&lt;/code&gt; here?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18563 (Disallowing editing of .php files in the plugin editor blocks access ...) updated</title>
      
        <dc:creator>trepmal</dc:creator>

      <pubDate>Fri, 02 Sep 2011 02:39:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18563#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18563#comment:6/1314931182847025</guid>
      <description>&lt;p&gt;
Fixed nested &amp;lt;p&amp;gt;s and added some handling for plugins that are a single php file (such as Hello Dolly).
&lt;/p&gt;
&lt;p&gt;
If php is not an editable extension and Hello Dolly is selected, it previously gave:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Notice: Undefined offset: 0 in /path/to/wp-admin/plugin-editor.php on line 61
No such file exists! Double check the name and try again.
&lt;/pre&gt;&lt;p&gt;
I changed it so it instead gives an informative error message. Not sure if it would be better to remove plugins with no editable files from the 'select a plugin to edit' list. Would that be worth the additional work?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>18563.diff attached to Ticket #18563</title>
      
        <dc:creator>trepmal</dc:creator>

      <pubDate>Fri, 02 Sep 2011 02:28:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18563/18563.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18563/18563.diff/1314930533808675</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>doing-it-wrong.php attached to Ticket #14024</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 02 Sep 2011 02:01:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14024/doing-it-wrong.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14024/doing-it-wrong.php/1314928877134168</guid>
      <description>&lt;p&gt;
Sample plugin to test the issue
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10511 (Enclosure Custom Fields are automatically deleted) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 02 Sep 2011 00:54:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10511#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10511#comment:22/1314924842056079</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Resetting Version field; Please note: The Version field is used to track when a bug was first reported, not that it relates to a current version as well, It is expected that any version between "version" and "milestone" is affected by a ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18522 (Search using double quotes stopped working at v3.1) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 02 Sep 2011 00:50:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18522#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18522#comment:12/1314924620755371</guid>
      <description>&lt;p&gt;
Sounds like it might be an incompatible plugin or caching backend playing up to me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18180 (Missing i18n in setup-config.php) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 02 Sep 2011 00:45:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18180#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18180#comment:16/1314924309742486</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
The inputs in setup-config.php all ask for server information, so it will always be LTR
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I had just assumed that a RTL language would be written RTL regardless of the data type, take for example, the Permalinks structure or Post to Email (first fields that comes to mind) they're rtl'd too?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Not following - what should be changed?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not in regards to setup-config.php there, specifically referring to using wp_enqueue_script() in &lt;a class="ext-link" href="http://svn.automattic.com/wordpress-i18n/he_IL/tags/3.2.1/dist/wp-content/languages/he_IL.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;wph_admin()&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18563 (Disallowing editing of .php files in the plugin editor blocks access ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 02 Sep 2011 00:41:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18563#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18563#comment:5/1314924078629994</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;code&gt; wp_die( sprintf( '&amp;lt;p&amp;gt;%s&amp;lt;/p&amp;gt;', __( 'This file is not allowed to edit! Double check the name and try again.' ) ) );  &lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
many people don't realise this, but &lt;code&gt;wp_die()&lt;/code&gt; wraps it in a p anyway. Also, Think you Engrished that string :) - I like the approach though, it seems the filter was designed for Adding types, rather than removing them.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>18085.patch attached to Ticket #18085</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2011 23:59:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18085/18085.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18085/18085.patch/1314921586843011</guid>
      <description>&lt;p&gt;
More simple patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18530 (Browser update dismiss setting ignored with JavaScript disabled) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2011 23:40:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18530#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18530#comment:5/1314920404848531</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Thu, 01 Sep 2011 23:01:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:75</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:75/1314918106969047</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:73" title="Comment 73"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:70" title="Comment 70"&gt;aaroncampbell&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
I'd imagine it working like this:
&lt;/p&gt;
&lt;p&gt;
[...]
&lt;/p&gt;
&lt;p&gt;
Perhaps that's a bit complicated. We still can make two new actions that are fired like the above functions.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I suppose.  The problem is that this puts something at the end of the loop, but that's not guaranteed to be where a theme wants the "post extras" to go any more than the end of the_content is.  If we create common hooks that we encourage theme authors to use and then let plugins fall back to the_content (or exactly what you proposed above) then we can allow theme authors to decide where this kind of content goes, which I *think* is exactly who SHOULD decide...right?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18530 (Browser update dismiss setting ignored with JavaScript disabled) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 01 Sep 2011 22:35:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18530#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18530#comment:4/1314916536371746</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18530 (Browser update dismiss setting ignored with JavaScript disabled) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 01 Sep 2011 22:34:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18530#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18530#comment:3/1314916465489052</guid>
      <description>&lt;p&gt;
@johnbillion: That ticket is about the dismiss button which is missing when javascript is disabled. This ticket is about ignoring the dismiss action. Both is an UI issue related to the same feature and javascript (so pretty close), but the nature of the report differs. In this report it was disabled but is displayed. In the other ticket the option to even disable is missing.
&lt;/p&gt;
&lt;p&gt;
I've read that &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17766" title="#17766: enhancement: Browser update dismiss button lacks non-JavaScript fallback (closed: wontfix)"&gt;#17766&lt;/a&gt; is about that it can't be disabled. Am I too nit-picky here? What do you think? Maybe it gets more traction if both issues are merged. Feel free to add additional defect to the other ticket if you think it's more appropriate. With one fix both issues could be closed anyway I think (at least chances are good). I had cross-reference both already.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 01 Sep 2011 22:30:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:74</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:74/1314916231835245</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:52" title="Comment 52"&gt;Otto42&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, just wrapping the while ( have_posts() ) : the_post(); ... endwhile; with some hooks around it seems of limited benefit to me. Theme authors understand the loop already. Wrapping it isn't really needed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Wrapping eliminates the need to duplicate commonly-used code in every theme file, but more importantly it opens the door to be able to annotate &lt;code&gt;the_loop()&lt;/code&gt; with new &lt;em&gt;"standard"&lt;/em&gt; hooks that plugins can depend on, when the theme specifies that it is using &lt;code&gt;'the_loop()&lt;/code&gt; of course.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:58" title="Comment 58"&gt;johnjamesjacoby&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The concept here is to allow file names AND paths to be filtered. Plugins then can include their own fall-back templates in their own locations.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17979 (Avoid losing widgets when switching themes) updated</title>
      
        <dc:creator>trevogre</dc:creator>

      <pubDate>Thu, 01 Sep 2011 22:10:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17979#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17979#comment:42/1314915043579089</guid>
      <description>&lt;p&gt;
Think more about the comparison to menus. Menus seem broken to me as well, but from the other direction. You need both the ability to define something explicitly in the backend and define it explicitly in the theme and have both of those things intersect. So if my theme calls for "headermenu" it puts in a header menu in the menu editor for me to add to (or to modify from its default loop). Conversely I should be able to add a custom menu and point it to override and of the registered menus. This would help to unify people under given names. Header / Sidebar / Footer etc. And make theme switching easier both for menus and for widgets.
&lt;/p&gt;
&lt;p&gt;
So menus need to add the declaration features of widgets and widgets need the editing features of menus.
&lt;/p&gt;
&lt;p&gt;
I think :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17979 (Avoid losing widgets when switching themes) updated</title>
      
        <dc:creator>trevogre</dc:creator>

      <pubDate>Thu, 01 Sep 2011 22:05:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17979#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17979#comment:41/1314914711846349</guid>
      <description>&lt;p&gt;
On the discussion of widgets. My two cents. I think that widget registration is backwards. You need to be able to create widget areas and add widgets as data that is always independant of the theme.
&lt;/p&gt;
&lt;p&gt;
So without a theme you could create mygoofysidebar and add stuff to it. And then do the mapping to the sidebar requested by the theme.
&lt;/p&gt;
&lt;p&gt;
I don't find the idea of auto mapping on theme switching to be that compelling.
Unless it encourages common naming.
&lt;/p&gt;
&lt;p&gt;
So if I'm a theme dev I know that everyone is nameing their widgets sidebar, I can request that widget set.
&lt;/p&gt;
&lt;p&gt;
&amp;lt;AaronDCampbell&amp;gt; trevogre: Put that on the ticket :)  I think that mapping automatically is a good stop-gap so fix things up for now
&lt;/p&gt;
&lt;p&gt;
I agree that it would be nice to have it work more like menus (make sidebars and then assign them to locations) but that needs to be the main focus of a release because it'll be a lot of code.
&lt;/p&gt;
&lt;p&gt;
&amp;lt;trevogre&amp;gt;will do, I'll throw that on the ticket. I haven't dug into the widget code so I don't know how much code it would be. I think it could be fairly light wieght but it would have to pull the sidebar list from an option instead of from register sidebar calls. It could be something like the shortcode patch that I just put in.
Where it would add any sidebars that were registered and just retain all of them.
&lt;/p&gt;
&lt;p&gt;
And you could add a second array to register sidebar names from the backend with a loop.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 01 Sep 2011 22:01:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:73</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:73/1314914483766679</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:70" title="Comment 70"&gt;aaroncampbell&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
I'd imagine it working like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action( 'the_post', 'my_func', 10, 2 );
function my_func($next_post, $previous_post) {
  if ( $previous_post ) { // will be null for the 1st post in the loop
    // do something after the post content
  }
  if ( $next_post ) {
    // do something before the next post content
  }
}
&lt;/pre&gt;&lt;p&gt;
For the last post it would need to hook into 'loop_end':
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action( 'loop_end', 'my_end' );
function my_end() {
  global $post;
  my_func(null, $post);
}
&lt;/pre&gt;&lt;p&gt;
Perhaps that's a bit complicated. We still can make two new actions that are fired like the above functions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 01 Sep 2011 21:57:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:72</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:72/1314914260464896</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Instead of targeting specific files one could target a &amp;lt;div&amp;gt; with a certain ID or other HTML-elements with IDs or classes.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is kind of a novel solution. I'm mildly more on board with Otto's suggestion about get_template_part but I still strongly believe you'd be hard-pressed to standardize the process. The frameworks seem to be using get_template_part calls but a lot of the indie shops seem to be completely ignoring them. I'd say our best bet is to come up with the solution that the most theme authors can A) Easily adapt to and B) Easily implement. It's a delicate balance between satisfying all of the communities with a workable solution.
&lt;/p&gt;
&lt;p&gt;
Either way, I think KMBredt wants the &lt;a class="ext-link" href="http://wpdevel.wordpress.com/2011/09/01/a-challenge/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Brownies&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10511 (Enclosure Custom Fields are automatically deleted) updated</title>
      
        <dc:creator>kevine</dc:creator>

      <pubDate>Thu, 01 Sep 2011 21:49:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10511#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10511#comment:21/1314913775073407</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Any chance of this ever getting fixed *again*.  It was fixed at one time and broke again.
&lt;/p&gt;
&lt;p&gt;
This is still really a big deal.  I'm getting lots of people writing to me about it on my blog.  Deleting content = Bad.
&lt;/p&gt;
&lt;p&gt;
Worse, while I offer the solution on my blog for editing the functions.php file, the change gets wiped on each upgrade.  This results in people losing content without knowing until they realize they need to re-edit the functions.php file again.
&lt;/p&gt;
&lt;p&gt;
Even worse, people are putting up upgrading WordPress, because they think things break when you do this.
&lt;/p&gt;
&lt;p&gt;
Really, this was such a horrible decision to do this, and I can't believe the problem continues.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>KMBredt</dc:creator>

      <pubDate>Thu, 01 Sep 2011 21:44:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:71</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:71/1314913491384726</guid>
      <description>&lt;p&gt;
What about a more extreme-version of the get_template_part by introducing an selector-approach probably known from jQuery. I stumbled upon it, while dealing with the Infinite Scroll plugin, although they are using it on the client-side, a server-side version should be able to provide what's needed (if that is even possible). Instead of targeting specific files one could target a &amp;lt;div&amp;gt; with a certain ID or other HTML-elements with IDs or classes.
&lt;/p&gt;
&lt;p&gt;
You would have a function (e.g.: wp_selector()) which has at least three arguments. One for what to select (to help theme- and plugin-developers a CSS/jQuery-syntax is probably preferred), one to decide if the content or the actions, which should be inserted or happen, are inserted/do happen before or after the found selector, and the third argument gives the content or action.
&lt;/p&gt;
&lt;p&gt;
For example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_selector('.postmetadata','after','gplusbutton');
&lt;/pre&gt;&lt;p&gt;
Plugin-developers would need to add an option or two to let the designer/user insert the specified selector to satisfy all needs. This should make it very easy to set the right hooks at the right places. Perhaps a fourth option could add a z-index-like approach to deal with plugins rooting for the same place.
&lt;/p&gt;
&lt;p&gt;
If the selector is not present or couldn't be found a more common hook can be set as a fifth argument and act as a fallback.
&lt;/p&gt;
&lt;p&gt;
Please note, that I have absolutely no clue if this is even technically possible.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Thu, 01 Sep 2011 21:34:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:70</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:70/1314912898233921</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:66" title="Comment 66"&gt;jb510&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
BTW, was thicket a freudian slip?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Possibly...that or just a typo ;)
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:68" title="Comment 68"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
IMHO this is the right hook to use. It fires exactly between the posts.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What about single posts where there is no second post to set up?  Also this increases the complexity of the plugin logic require because it needs to ignore the first the_post call and then take action on the next ones (although if you pass current post and previous post it could just look for previous post)...but still how do you handle the last post in the set?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Thu, 01 Sep 2011 21:33:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:69</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:69/1314912813646799</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:46" title="Comment 46"&gt;Otto42&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Theme authors *hate* it when you take away any amount of their ability to output HTML. Theme authors *hate* it when you tell them to use actions and filters to modify HTML. They don't get it, and they never will.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
All the developers creating child themes of Thesis, Genesis and likely other theme frameworks would disagree with that - make one alteration, and hooking it in once makes far more sense (and far less work) than altering duplicate code in several files as was traditionally done; it solves the same problem that template parts does (as I understand them), and it's just a different way of working. One has a (typically parent) theme with lots of hooks scattered around, the other expects files to have certain names.
&lt;/p&gt;
&lt;p&gt;
If theme authors aren't switching over to using template parts, then the benefits of them need to be explained clearer, and get the theme framework guys on board. Maybe having an agreed list of parts that are intended to cover all the areas that hooks within the frameworks do would be a start. Even so, getting existing frameworks to switch would be a big ask.
&lt;/p&gt;
&lt;p&gt;
What we need is something that all theme authors know should be in their themes if they want them to play nicely with plugins - a la &lt;code&gt;wp_head()&lt;/code&gt;, &lt;code&gt;wp_footer()&lt;/code&gt; etc. and that includes making use of the common ways of grabbing the content: &lt;code&gt;the_title()&lt;/code&gt;, &lt;code&gt;the_content()&lt;/code&gt;, &lt;code&gt;the_excerpt()&lt;/code&gt; and so on - it's for this reason that a simple &lt;code&gt;the_post_extras()&lt;/code&gt; or &lt;code&gt;the_rest()&lt;/code&gt; will solve the issue for now, until the above problems of turning the tide and getting everyone on board with using template parts is solved.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18571 (Not possible to edit a media item's slug) created</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 01 Sep 2011 21:15:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18571</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18571/1314911731965504</guid>
      <description>&lt;p&gt;
It's not possible to edit the post_name field of a media item. This means there's no control over the slug used when viewing a media item attached to a post at &lt;code&gt;example.com/my-blog-post/my-media-item/&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
A media item's slug uses the filename (minus extension) by default. This isn't always desirable and it'd be nice to be able to change it.
&lt;/p&gt;
&lt;p&gt;
I know media management is undergoing an overhaul in the near future so is it worthwhile my doing a patch?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 01 Sep 2011 20:43:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:68</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:68/1314909833844024</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:41" title="Comment 41"&gt;Otto42&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There is the_post hook in setup_postdata, however this has the problem that it fires before every post's output, and that it has the next post already set up by the time it fires. So having it output something specific to the previous post is problematic.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
IMHO this is the right hook to use. It fires exactly between the posts.
&lt;/p&gt;
&lt;p&gt;
We can even split it into two new hooks if need be (don't see the point though). Can make 'the_post' to call 'after_the_content' and provide the previous $post (can be kept in a &lt;code&gt;static&lt;/code&gt; or a &lt;code&gt;global&lt;/code&gt;) followed by 'before_the_content' and provide the new $post.
&lt;/p&gt;
&lt;p&gt;
Perhaps it will be simpler to just provide both posts as args, so 'the_post' will have access to both the previous and next posts. That will make it useful in all cases.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18562 (WP_Query class ignores all arguments in custom post type) updated</title>
      
        <dc:creator>arsalkeen</dc:creator>

      <pubDate>Thu, 01 Sep 2011 20:27:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18562#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18562#comment:8/1314908831632235</guid>
      <description>&lt;p&gt;
hmmm... I guess the filter approach should work. I myself was trying this as it made sense the default query was building up before my custom one and hence a 404, however I was unable to find the proper filter/action hook for this. And one more thing, using this approach, I will have to place my add_filter() call in the functions.php right...??? I am not sure that I am comfortable with that.
&lt;/p&gt;
&lt;p&gt;
Anyways... will try this in the morning... its 1:25 AM here and I am dizzy... its eid holidays here :) I hope it does work :)
&lt;/p&gt;
&lt;p&gt;
Thanks in advance everyone...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18285 (New Settings API and workflow) updated</title>
      
        <dc:creator>WraithKenny</dc:creator>

      <pubDate>Thu, 01 Sep 2011 20:26:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18285#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18285#comment:50/1314908771076031</guid>
      <description>&lt;p&gt;
I'd like to make a case for some default, generic form element generation. A few optional "template tags" for option pages would be cool.  The templates could live in a file somewhere by itself to be included if wanted.
&lt;/p&gt;
&lt;p&gt;
As a theme/plugin developer, sometimes I just want to use what ever flavor of markup and style core is currently using for the admin. Hunting down class-names and such in Firebug aside, this markup and style may change in future versions, and as long as the default markup/style was optional/over-writable, I don't see it as a problem.
&lt;/p&gt;
&lt;p&gt;
Additionally, generic tags for simple text fields could have some safe easy optional default sanitation callbacks and output escaping. Remember, no one has to use them if they'd rather do it themselves. (If it's too hard, no one uses sanitation/escaping, and that's no good.)
&lt;/p&gt;
&lt;p&gt;
Potential list could include things like the new HTML5 types: email, url, number, range, date, color, time, etc., as well as other typical ones like Name, Phone Number, Address, Post-like Content (textareas which uses the appropriate kses automatically), and the generic ones, Select, Checkbox, Radio, etc. These functions could create the markup and style to match the standard admin uniformly, as well as apply a fallback sanitation callback and escaping appropriate for each one.
&lt;/p&gt;
&lt;p&gt;
These things would make it easier on everyone, but no one would be required to use them. If you have a special use-case, by all means, roll your own! But they'd be great to have and maintained somewhere central.
&lt;/p&gt;
&lt;p&gt;
We can't cover all cases. These functions could also provide a code example for developers attempting to write their own.
&lt;/p&gt;
&lt;p&gt;
To summarize:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;markup and style uniformity with core
&lt;/li&gt;&lt;li&gt;default data sanitation, validation and/or escaping handled
&lt;/li&gt;&lt;li&gt;template/example for rolling custom ones
&lt;/li&gt;&lt;li&gt;really convenient.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>coffee2code</dc:creator>

      <pubDate>Thu, 01 Sep 2011 20:25:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:67</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:67/1314908752890122</guid>
      <description>&lt;p&gt;
Tangential, in reply to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:56" title="Comment 56"&gt;Otto42&lt;/a&gt; and &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:58" title="Comment 58"&gt;johnjamesjacoby&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Check out &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/13239" title="#13239: enhancement: Filter locate_template template_names variable (reopened)"&gt;#13239&lt;/a&gt; for a discussion and patch in the vein of adding filters to &lt;code&gt;locate_template()&lt;/code&gt;.  My original patch from a year ago includes the filter that @Otto42 proposed above (amongst other related filters in the function) but I pared it out at @nacin's request to reduce the number of filters added and kept to a single, more versatile filter located at the beginning of the function (the spirit of @johnjamesjacoby's patch above, but without additional filters to separately pre-filter the template names and paths or pre-locate).
&lt;/p&gt;
&lt;p&gt;
Happy to see more feedback there.  &lt;a class="ext-link" href="http://core.trac.wordpress.org/attachment/ticket/13239/13239.c2c.4.diff"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;13239.c2c.4.diff&lt;/a&gt; is my latest patch, with an eye towards minimizing the change footprint.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18285 (New Settings API and workflow) updated</title>
      
        <dc:creator>WraithKenny</dc:creator>

      <pubDate>Thu, 01 Sep 2011 20:19:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18285#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18285#comment:49/1314908392894666</guid>
      <description>&lt;p&gt;
A major short coming of the old api was that you can pass a only single capability, say &lt;code&gt;unfiltered_html&lt;/code&gt;, to the add_*_page functions, but that wouldn't matter (or make sense) since it posted to options.php with a hard-coded &lt;code&gt;manage_options&lt;/code&gt; check (plus an is_super_admin for multisite). These API's should work together.
&lt;/p&gt;
&lt;p&gt;
It might be nice to do capabilities checks in save_settings_page() based on what's passed to add_*_page for plugins. (Separate issue: add_*_page functions could be enhanced to handle an array of capabilities rather then just a single capability.) The options-media example doesn't register pages in the same way as a plugin would, so perhaps call a function that handles this, and have save_settings_page call it too.
&lt;/p&gt;
&lt;p&gt;
As another test case, we could look at custom-background.php and custom-header.php as examples closer to how plugins and themes would use the API and what it's short comings (if any) are, as well as a good future in-core code example of how to use it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>jb510</dc:creator>

      <pubDate>Thu, 01 Sep 2011 20:14:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:66</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:66/1314908070831173</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:57" title="Comment 57"&gt;aaroncampbell&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This thicket was moving so fast this morning that I couldn't post to it!  Anyway, I'm with Otto that editing something that exists is a better idea.  However, to give the flexibility that Jane is looking for I don't think you can assume that the end of any given template file is the correct place to put the post extras.  Not to mention, themes can call files whatever they want when using get_template_part, so how would a plugin know WHICH file to hook to?
&lt;/p&gt;
&lt;p&gt;
I think using hooks like 'before_post_content' and 'after_post_content' makes the most sense, but a plugin needs to be able to fall back to using the the_content filter if those don't exist, so I think using &lt;code&gt;add_theme_support()&lt;/code&gt; make sense (basically just what &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:3" title="Comment 3"&gt;mikeschinkel&lt;/a&gt; and &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:48" title="Comment 48"&gt;greenshady&lt;/a&gt; said).  The disadvantage is that until now we've only asked theme authors to add something like &lt;code&gt;do_action( 'wp_head' )&lt;/code&gt; but it would be best to have them all this one like &lt;code&gt;do_action( 'after_post_content', $post )&lt;/code&gt;.  I'm always cleaning up after poorly coded plugins that are overwriting the global $post, but if it was passed to the action it wouldn't be an issue.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Aaron gets to the problem I see with template_part which is how any plugin author would know what part to rely on.  If plugin authors are just creating template parts on their own then they are not going to coincide and group properly which I think is what Jane is (wisely) after.  Hooks in core would provide a reliable place for plugin authors.  Relying on theme support again means that plugin authors can't rely on it and would need to write extra conditional code to handle when the theme doesn't offer support wouldn't it?
&lt;/p&gt;
&lt;p&gt;
BTW, was thicket a freudian slip?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18570 (Add whitespace to html attributes in custom-background.php) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2011 20:11:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18570#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18570#comment:1/1314907869660204</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2011 20:08:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:65</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:65/1314907697402667</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:57" title="Comment 57"&gt;aaroncampbell&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Not to mention, themes can call files whatever they want when using get_template_part, so how would a plugin know WHICH file to hook to?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That same idea of &lt;code&gt;add_theme_support()&lt;/code&gt; can be applied here too.
&lt;/p&gt;
&lt;p&gt;
Twenty Eleven could use something like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_theme_support( 'template-parts', array( 'content' =&amp;gt; 'content' ) );
&lt;/pre&gt;&lt;p&gt;
Twenty Ten:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_theme_support( 'template-parts', array( 'content' =&amp;gt; 'loop' ) );
&lt;/pre&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/18561/18561.get_template_part_slug.patch" title="Attachment '18561.get_template_part_slug.patch' in Ticket #18561"&gt;18561.get_template_part_slug.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/18561/18561.get_template_part_slug.patch" title="Download"&gt;​&lt;/a&gt; introduces the &lt;code&gt;get_template_part_slug()&lt;/code&gt; function to determine the actual template part slug used by current theme.
&lt;/p&gt;
&lt;p&gt;
A plugin could then use something like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( $content = get_template_part_slug( 'content' ) ) {
	add_action( "get_template_part_{$content}_after", 'some_function' );
} else {
	add_filter( 'the_content', 'legacy_function' );
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>18561.get_template_part_slug.patch attached to Ticket #18561</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2011 20:05:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18561/18561.get_template_part_slug.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18561/18561.get_template_part_slug.patch/1314907504293993</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>mattwiebe</dc:creator>

      <pubDate>Thu, 01 Sep 2011 20:01:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:64</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:64/1314907315050985</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:52" title="Comment 52"&gt;Otto42&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Okay, I see that now, but the function you posted is doing it wrong. You're using the "loop" part name for the contents of the loop, instead of for the loop itself. This conflicts with twentyten's use of the "loop" part name, and does essentially what twentyeleven's "content" part name does.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sure. Use content instead of loop. That makes sense.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, just wrapping the while ( have_posts() ) : the_post(); ... endwhile; with some hooks around it seems of limited benefit to me. Theme authors understand the loop already. Wrapping it isn't really needed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The "limited" benefit is that we now own the process. We can change it down the road if need be. This buys us way more future-proofing. Also, this is even easier for theme authors to understand, whereas trying to convince them to use &lt;code&gt;get_template_part()&lt;/code&gt; is harder. Not only that, but we need to get them to standardize around the $name part in order for plugin filtering to even be useful, which would again probably just require a wrapper function of some type.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17979 (Avoid losing widgets when switching themes) updated</title>
      
        <dc:creator>brianlayman</dc:creator>

      <pubDate>Thu, 01 Sep 2011 20:00:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17979#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17979#comment:40/1314907202819522</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Thu, 01 Sep 2011 19:44:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:63</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:63/1314906245108325</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:54" title="Comment 54"&gt;johnjamesjacoby&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think my "the_rest()" approach is the simplest and easiest to wrap your head around for 3.3.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I (obviously) agree, for whatever that's worth :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>brianlayman</dc:creator>

      <pubDate>Thu, 01 Sep 2011 19:43:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:62</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:62/1314906221645086</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18331 (Make get_header(), get_sidebar() and get_footer() use get_template_part()) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Thu, 01 Sep 2011 19:39:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18331#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18331#comment:12/1314905956633824</guid>
      <description>&lt;p&gt;
+1 to this, however your patch contains an unused $subfolder argument.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Thu, 01 Sep 2011 19:32:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:61</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:61/1314905539913606</guid>
      <description>&lt;p&gt;
Another approach would be to hook into 'loop_end', check is_single(), and call some action then. That guarantees code execution at the bottom of every content area, since 'loop_end' fires after the loop has already ran it's full course on a single page/post.
&lt;/p&gt;
&lt;p&gt;
The problem I see with this is having WordPress core hook directly into the query layer for something only the theme layer will use. If we're willing to make that compromise, it's the most reliable way to guarantee code execution at the very bottom of a post loop.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18558 (Handling of dormant shortcodes is inelegant) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 01 Sep 2011 19:29:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18558#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18558#comment:8/1314905341361838</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
is there a difference between .diff and .patch on some systems?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Nope.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Thu, 01 Sep 2011 19:25:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:60</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:60/1314905114465394</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:58" title="Comment 58"&gt;johnjamesjacoby&lt;/a&gt; and &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:56" title="Comment 56"&gt;Otto42&lt;/a&gt;:
Adding one or more of these filters would help with the HTML E-Mails too since it wraps get_template_part in order to load a template from somewhere other than TEMPLATEPATH or STYLESHEETPATH
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:59" title="Comment 59"&gt;johnjamesjacoby&lt;/a&gt;:
You're right.  Those are poorly named, but I think they're still what you want.  Maybe 'before_post' and 'after_post' or maybe call it something completely different like 'post_extras' as someone above mentioned.  I just think it needs to be paired with the &lt;code&gt;add_theme_support()&lt;/code&gt; bit so that plugins can fall back.  This way plugins still WORK on all themes but work BETTER on themes that support this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>18570.diff attached to Ticket #18570</title>
      
        <dc:creator>mfields</dc:creator>

      <pubDate>Thu, 01 Sep 2011 19:19:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18570/18570.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18570/18570.diff/1314904779419233</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Thu, 01 Sep 2011 19:19:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:59</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:59/1314904769463414</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:57" title="Comment 57"&gt;aaroncampbell&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This thicket was moving so fast this morning that I couldn't post to it!  Anyway, I'm with Otto that editing something that exists is a better idea.  However, to give the flexibility that Jane is looking for I don't think you can assume that the end of any given template file is the correct place to put the post extras.  Not to mention, themes can call files whatever they want when using get_template_part, so how would a plugin know WHICH file to hook to?
&lt;/p&gt;
&lt;p&gt;
I think using hooks like 'before_post_content' and 'after_post_content' makes the most sense, but a plugin needs to be able to fall back to using the the_content filter if those don't exist, so I think using &lt;code&gt;add_theme_support()&lt;/code&gt; make sense (basically just what &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:3" title="Comment 3"&gt;mikeschinkel&lt;/a&gt; and &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:48" title="Comment 48"&gt;greenshady&lt;/a&gt; said).  The disadvantage is that until now we've only asked theme authors to add something like &lt;code&gt;do_action( 'wp_head' )&lt;/code&gt; but it would be best to have them all this one like &lt;code&gt;do_action( 'after_post_content', $post )&lt;/code&gt;.  I'm always cleaning up after poorly coded plugins that are overwriting the global $post, but if it was passed to the action it wouldn't be an issue.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The flaw with the before/after logic is that this information may not truly exist in a physical place directly before or after the_content(). It might be after the content AND after a bio of the author, but before the prev/next navigation and comment river. Due to the unpredictability of theme layouts and needs, that approach doesn't apply to this scenario. It is however an approach that I am in agreement with, just not to solve this particular problem. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18570 (Add whitespace to html attributes in custom-background.php) created</title>
      
        <dc:creator>mfields</dc:creator>

      <pubDate>Thu, 01 Sep 2011 19:17:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18570</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18570/1314904658258595</guid>
      <description>&lt;p&gt;
Currently trunk as well as 3.2 output the following markup in /wp-admin/custom-background.php.
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;span  style="display:none"class="hide-if-no-js" id="clearcolor"&amp;gt;
&lt;/pre&gt;&lt;p&gt;
While I am not experiencing any visual errors, I thought it would be a good idea to report this in case certain browsers have issues with mashed-together attributes.
&lt;/p&gt;
&lt;p&gt;
Best-case scenario would be to output the following markup:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;span style="display:none" class="hide-if-no-js" id="clearcolor"&amp;gt;
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Thu, 01 Sep 2011 19:11:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:58</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:58/1314904317485568</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:56" title="Comment 56"&gt;Otto42&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:54" title="Comment 54"&gt;johnjamesjacoby&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That said, I'm all for get_template_part() getting more muscle. It's because of a lack of filters and actions that bbPress 2.0 has its own wrapper for it: &lt;a class="ext-link" href="http://bbpress.trac.wordpress.org/browser/branches/plugin/bbp-includes/bbp-core-compatibility.php#L82"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://bbpress.trac.wordpress.org/browser/branches/plugin/bbp-includes/bbp-core-compatibility.php#L82&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Otto's patch is a good start but get_template_part() could/should be much more powerful. Example: bbPress 2.0 uses template parts to power its shortcodes so that a theme *can* dictate the appearance if it elects to, but it doesn't have to. Template parts are loaded into on output buffer, and presented wherever you put them. Easy.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
BTW, I was looking at this the other day, and for your specific use case in bbPress, I think a filter down in locate_template makes the most sense. Putting this in there would work:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$located = apply_filters( 'locate_template', $located, $template_names );
&lt;/pre&gt;&lt;p&gt;
It allows a plugin to either override any existing template, or find/add a different template from a different directory, if needed. This would give the functionality you were talking about back in Chicago without the wrapper.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I will do you one better. You get the idea:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function locate_template($template_names, $load = false, $require_once = true ) {
	// Setup names and paths
	$template_paths = array( TEMPLATEPATH, STYLESHEETPATH );
	$template_names = apply_filters( 'locate_template_names', $template_names );
	$template_paths = apply_filters( 'locate_template_paths', $template_paths );
	// Remove empties
	$template_names = array_filter( $template_names );
	$template_paths = array_filter( $template_paths );
	// Reverse paths so no reordering is needed by themes or plugins
	$template_paths = array_reverse( $template_paths );
	// Allow overloading of locate_template
	$located        = apply_filters( 'pre_locate_template', '', $template_names, $template_paths );
	// Skip the check if 'pre_locate_template' overloaded everything
	if ( empty( $located ) ) {
		// Loop through template names
		foreach ( (array) $template_names as $template_name ) {
			// Loop through paths (in hierarchical order!)
			foreach ( (array) $template_paths as $template_path ) {
				// File exists
				if ( file_exists( $template_path . '/' . $template_name ) ) {
					$located = $template_path . '/' . $template_name;
					break;
				}
			}
		}
	}
	// Only load the template if one is found
	if ( $load &amp;amp;&amp;amp; '!empty( $located ) )
		load_template( $located, $require_once );
	return $located;
}
&lt;/pre&gt;&lt;p&gt;
The concept here is to allow file names AND paths to be filtered. Plugins then can include their own fall-back templates in their own locations. In this scenario, bbPress can add itself to the available arrays based on the context and provide an appropriate WordPress core fall-back in the event something is missing that shouldn't be.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Thu, 01 Sep 2011 19:08:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:57</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:57/1314904085905437</guid>
      <description>&lt;p&gt;
This thicket was moving so fast this morning that I couldn't post to it!  Anyway, I'm with Otto that editing something that exists is a better idea.  However, to give the flexibility that Jane is looking for I don't think you can assume that the end of any given template file is the correct place to put the post extras.  Not to mention, themes can call files whatever they want when using get_template_part, so how would a plugin know WHICH file to hook to?
&lt;/p&gt;
&lt;p&gt;
I think using hooks like 'before_post_content' and 'after_post_content' makes the most sense, but a plugin needs to be able to fall back to using the the_content filter if those don't exist, so I think using &lt;code&gt;add_theme_support()&lt;/code&gt; make sense (basically just what &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:3" title="Comment 3"&gt;mikeschinkel&lt;/a&gt; and &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:48" title="Comment 48"&gt;greenshady&lt;/a&gt; said).  The disadvantage is that until now we've only asked theme authors to add something like &lt;code&gt;do_action( 'wp_head' )&lt;/code&gt; but it would be best to have them call this one like &lt;code&gt;do_action( 'after_post_content', $post )&lt;/code&gt;.  I'm always cleaning up after poorly coded plugins that are overwriting the global $post, but if it was passed to the action it wouldn't be an issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18522 (Search using double quotes stopped working at v3.1) updated</title>
      
        <dc:creator>kizora</dc:creator>

      <pubDate>Thu, 01 Sep 2011 18:43:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18522#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18522#comment:11/1314902620515867</guid>
      <description>&lt;p&gt;
anybody help please ....
&lt;/p&gt;
&lt;p&gt;
Thanks
Chris
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Thu, 01 Sep 2011 18:41:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:56</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:56/1314902502341451</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:54" title="Comment 54"&gt;johnjamesjacoby&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That said, I'm all for get_template_part() getting more muscle. It's because of a lack of filters and actions that bbPress 2.0 has its own wrapper for it: &lt;a class="ext-link" href="http://bbpress.trac.wordpress.org/browser/branches/plugin/bbp-includes/bbp-core-compatibility.php#L82"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://bbpress.trac.wordpress.org/browser/branches/plugin/bbp-includes/bbp-core-compatibility.php#L82&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Otto's patch is a good start but get_template_part() could/should be much more powerful. Example: bbPress 2.0 uses template parts to power its shortcodes so that a theme *can* dictate the appearance if it elects to, but it doesn't have to. Template parts are loaded into on output buffer, and presented wherever you put them. Easy.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
BTW, I was looking at this the other day, and for your specific use case in bbPress, I think a filter down in locate_template makes the most sense. Putting this in there would work:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$located = apply_filters( 'locate_template', $located, $template_names );
&lt;/pre&gt;&lt;p&gt;
It allows a plugin to either override any existing template, or find/add a different template from a different directory, if needed. This would give the functionality you were talking about back in Chicago without the wrapper.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Thu, 01 Sep 2011 18:38:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:55</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:55/1314902307450368</guid>
      <description>&lt;p&gt;
More to my point above, if Jane's active theme doesn't have a template part for 'the_content_intro' or 'the_content_closer', WordPress can automatically insert them for her, if plugins tell WordPress those templates are needed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18569 (Custom header images should be deletable from the Custom Header page) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Thu, 01 Sep 2011 18:38:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18569#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18569#comment:1/1314902300352113</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Thu, 01 Sep 2011 18:35:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:54</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:54/1314902108721123</guid>
      <description>&lt;p&gt;
I think my "the_rest()" approach is the simplest and easiest to wrap your head around for 3.3.
&lt;/p&gt;
&lt;p&gt;
That said, I'm all for get_template_part() getting more muscle. It's because of a lack of filters and actions that bbPress 2.0 has its own wrapper for it: &lt;a class="ext-link" href="http://bbpress.trac.wordpress.org/browser/branches/plugin/bbp-includes/bbp-core-compatibility.php#L82"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://bbpress.trac.wordpress.org/browser/branches/plugin/bbp-includes/bbp-core-compatibility.php#L82&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Otto's patch is a good start but get_template_part() could/should be much more powerful. Example: bbPress 2.0 uses template parts to power its shortcodes so that a theme *can* dictate the appearance if it elects to, but it doesn't have to. Template parts are loaded into on output buffer, and presented wherever you put them. Easy.
&lt;/p&gt;
&lt;p&gt;
WordPress could work similarly with a more powerful get_template_part(). Imagine WordPress coming not just with a new default theme every year, but a default theme-construct of common template parts. Those parts are used when the existing theme does not include them, like how comments works now, but for the header, footer, sidebar, archive, you-name-it. Generic core template parts, always built on the latest and greatest web standard, maintained by the community, for the community.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18569 (Custom header images should be deletable from the Custom Header page) created</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Thu, 01 Sep 2011 18:30:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18569</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18569/1314901822846076</guid>
      <description>&lt;p&gt;
Currently, if a theme supports custom header images and a user uploads one of their own images, they need to go to the Media library in order to delete the image. This is not intuitive, there's no text in the admin explaining this step, and it's a problem if they want to rotate randomly through their custom header images.
&lt;/p&gt;
&lt;p&gt;
It would be nice of the user could delete images they've uploaded from the Custom Header page directly.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>ev3rywh3re</dc:creator>

      <pubDate>Thu, 01 Sep 2011 18:23:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:53</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:53/1314901433136610</guid>
      <description>&lt;p&gt;
get_template_part is just a fantastic way to extend plugins and themes and I'm said more themes don't use it. You add some logic around it and you've something really powerful (especially in building enterprise-esqe intertwined child themes, but what the heck do I know?)
&lt;/p&gt;
&lt;p&gt;
One suggestion I do hope for is that form follows function in the naming scheme. It's easer to grok the_content_before the_loop_start than before_the_content start_the_loop. I know in english it's just easier to say, but I see a bunch of that in core so sorting filters, css, and other stuff can be a real bear.
&lt;/p&gt;
&lt;p&gt;
Only a naming scheme suggestion if one arrives.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18558 (Handling of dormant shortcodes is inelegant) updated</title>
      
        <dc:creator>trevogre</dc:creator>

      <pubDate>Thu, 01 Sep 2011 18:13:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18558#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18558#comment:7/1314900811504460</guid>
      <description>&lt;p&gt;
It seems a bit drastic to just show no shortcode to someone previewing a page, I'll have to look and see if there is any functions to detect preview mode, maybe it makes sense to keep the [nonworkingshortcode] outputting in preview mode. Or to have some span print out that shows where the code should be if you view source. I just think it might really confuse people that are expecting to test thier content and see that output.
&lt;/p&gt;
&lt;p&gt;
It might be better to allow the theme dev to set the default shortcode handling, put in the new code, but have it still spit out the [] by default. Mabye a register_default_shortcode function that you can use in your functions.php or a plugin to set the handling of all unregistered shortcodes.
&lt;/p&gt;
&lt;p&gt;
I guess I'll change the extension to .patch, is there a difference between .diff and .patch on some systems?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Thu, 01 Sep 2011 18:13:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:52</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:52/1314900788684162</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:51" title="Comment 51"&gt;mattwiebe&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Did you read what I wrote there re: &lt;code&gt;the_loop&lt;/code&gt;? I'm not taking anything away. I'm just moving loop contents into loop.php (by default), where they can do whatever the hell they want HTML-wise. Plus hooks that'll run before and after each iteration of the loop.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Okay, I see that now, but the function you posted is doing it wrong. You're using the "loop" part name for the contents of the loop, instead of for the loop itself. This conflicts with twentyten's use of the "loop" part name, and does essentially what twentyeleven's "content" part name does.
&lt;/p&gt;
&lt;p&gt;
Also, just wrapping the while ( have_posts() ) : the_post(); ... endwhile; with some hooks around it seems of limited benefit to me. Theme authors understand the loop already. Wrapping it isn't really needed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>mattwiebe</dc:creator>

      <pubDate>Thu, 01 Sep 2011 18:07:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:51/1314900476959996</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:46" title="Comment 46"&gt;Otto42&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:42" title="Comment 42"&gt;mikeschinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
+1 to offer a few different new approaches that are designed to leverage the same plugin hooks; a template tag (i.e. &lt;code&gt;the_rest()&lt;/code&gt;), sidebars as template zones, and especially a &lt;strong&gt;huge&lt;/strong&gt; +1 to &lt;code&gt;the_loop().&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
A massive -1 million to "the_loop()". Theme authors *won't* use it. They'll flat out rebel against you for trying.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Did you read what I wrote there re: &lt;code&gt;the_loop&lt;/code&gt;? I'm not taking anything away. I'm just moving loop contents into loop.php (by default), where they can do whatever the hell they want HTML-wise. Plus hooks that'll run before and after each iteration of the loop.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>18561.get_template_part.patch attached to Ticket #18561</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Thu, 01 Sep 2011 18:04:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18561/18561.get_template_part.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18561/18561.get_template_part.patch/1314900299874336</guid>
      <description>&lt;p&gt;
get_template_part_{$slug}_after
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>mfields</dc:creator>

      <pubDate>Thu, 01 Sep 2011 18:01:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:50/1314900089545638</guid>
      <description>&lt;p&gt;
I really like the prospect of filtering get_template_part() and think that it would be a great addition to core to allow better communication between plugins and themes. For this specific issue, @greenshady's idea is one that I really like. Many themes add custom actions both before and after the loop to allow for customizations to be made. A standard in this area would be really great IMHO. Allowing a theme to identify that it supports post_hooks would make it really easy for plugins to decide where to hook.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Thu, 01 Sep 2011 17:51:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:49/1314899482738919</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:45" title="Comment 45"&gt;Otto42&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Thanks for taking the time to explain it to me, Otto. I appreciate it, and it makes more sense now.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What if it should be attached to a completely different template part depending on context?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
A plugin could provide an option to do that, if it was desired. That sorta depends on what the plugin does.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I guess I see this as something a theme author should usually be in control of instead of relying on a plugin to do the right thing, at least in the original context of sharing plugins and the like. To me it still makes more sense to keep these items a little more conceptually separate from the body of content itself, even just in terms of placement. It seems like we're talking about a funny middle ground between postmeta and comments and some are stuck on it being attached to the content (or &lt;code&gt;the_content&lt;/code&gt;).
&lt;/p&gt;
&lt;p&gt;
I personally would still prefer something separate, even if it's something like a standardized &lt;code&gt;get_template_part('the_rest')&lt;/code&gt;. And then having contextual hooks for &lt;code&gt;get_template_part()&lt;/code&gt; would make it even better!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>greenshady</dc:creator>

      <pubDate>Thu, 01 Sep 2011 17:48:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:48/1314899316224618</guid>
      <description>&lt;p&gt;
My idea would be to allow themes to register support for "post hooks".  Then, a plugin could check if a theme supports this before deciding to filter &lt;code&gt;the_content&lt;/code&gt;.  This solution would offer backwards compatibility with old hooks in themes that are already doing this and offer a lot of flexibility for theme authors in terms of where they'd want to place these hooks in their themes.
&lt;/p&gt;
&lt;p&gt;
A theme would register support for this like so:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_theme_support( 'post-hooks', array( 'before' =&amp;gt; 'before_post_hookname', 'after' =&amp;gt; 'after_post_hookname' ) );
&lt;/pre&gt;&lt;p&gt;
&lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; should have some defaults (e.g., &lt;code&gt;before_post&lt;/code&gt;, &lt;code&gt;after_post&lt;/code&gt;) so that we could start standardizing on this method.  Allowing them to be custom would offer some backwards compatibility for themes with existing hooks.
&lt;/p&gt;
&lt;p&gt;
A theme would use this like so in their theme templates:
&lt;/p&gt;
&lt;pre class="wiki"&gt;do_action( 'before_post' );
Post stuff
do_action( 'after_post' );
&lt;/pre&gt;&lt;p&gt;
A plugin's use:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( current_theme_supports( 'post-hooks' ) ) {
	$post_hooks = get_theme_support( 'post-hooks' );
	add_action( $post_hooks[0]['after'], 'some_function' );
} else {
	add_filter( 'the_content', 'some_function' );
}
&lt;/pre&gt;&lt;p&gt;
That's my idea anyway.  There's not going to be a solution that'll work for everyone without all themes adding the code in.
&lt;/p&gt;
&lt;p&gt;
I think a lot of other theme devs are in the same boat as me.  We absolutely hate that plugins hook everything to &lt;code&gt;the_content&lt;/code&gt; because it ruins our designs.  We'll settle on any standard.
&lt;/p&gt;
&lt;p&gt;
There can be some control over whatever solution is decided upon though. The theme review team will take strides in getting themes up to par.  That will at least offer some standardization with themes on the repository.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>nathanrice</dc:creator>

      <pubDate>Thu, 01 Sep 2011 17:45:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:47/1314899129737734</guid>
      <description>&lt;p&gt;
I think adding contextual hooks to &lt;code&gt;get_template_part()&lt;/code&gt; is a great idea. But a solution to the problem posed by the OT, it is not.
&lt;/p&gt;
&lt;p&gt;
A standard like &lt;code&gt;the_rest()&lt;/code&gt; is FAR more likely to be adopted by the majority of theme authors than the use (or perhaps some would say, overuse) of &lt;code&gt;get_template_part()&lt;/code&gt;. For instance, I could implement &lt;code&gt;the_rest()&lt;/code&gt; in Genesis TOMORROW, whereas trying to use &lt;code&gt;get_template_part()&lt;/code&gt; in Genesis would require much more work and forethought.
&lt;/p&gt;
&lt;p&gt;
A comprehensive solution (with before/after hooks firing in pre-existing template tags, introducing &lt;code&gt;the_rest()&lt;/code&gt; or something similar, etc.) is long overdue.
&lt;/p&gt;
&lt;p&gt;
As for &lt;code&gt;the_loop()&lt;/code&gt;, I agree with @Otto. It's not something that would be embraced very quickly, if at all.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Thu, 01 Sep 2011 17:32:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:46/1314898370201357</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:42" title="Comment 42"&gt;mikeschinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
+1 to offer a few different new approaches that are designed to leverage the same plugin hooks; a template tag (i.e. &lt;code&gt;the_rest()&lt;/code&gt;), sidebars as template zones, and especially a &lt;strong&gt;huge&lt;/strong&gt; +1 to &lt;code&gt;the_loop().&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
A massive -1 million to "the_loop()". Theme authors *won't* use it. They'll flat out rebel against you for trying.
&lt;/p&gt;
&lt;p&gt;
Look at my post on my blog about the comment_form(). Look real closely at the comments on that post. Theme authors *hate* it when you take away any amount of their ability to output HTML. Theme authors *hate* it when you tell them to use actions and filters to modify HTML. They don't get it, and they never will.
&lt;/p&gt;
&lt;p&gt;
get_template_part() is a great solution because it lets you divide up a theme into areas and retain control over those areas. Which is all plugin authors really want, the ability to insert things into proper places on the page. Standardizing away whole sections of themes into core doesn't really work, and people hate it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Thu, 01 Sep 2011 17:27:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:45/1314898063286635</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:43" title="Comment 43"&gt;helenyhou&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Does this mean that plugin authors have to anticipate or provide options for what the theme is calling their template part(s), though?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not at all. But if there was a standard naming scheme, then theme authors would likely use it to be compatible.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What if it should be attached to a completely different template part depending on context?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
A plugin could provide an option to do that, if it was desired. That sorta depends on what the plugin does.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't mean to just fire off questions and perhaps sound belligerent or defensive on teh internetz, because I don't mean it that way at all. I'm clearly having a hard time figuring out how that would work, but I'm genuinely interested/curious and want to understand better. I figure you know way better than I do and I guess you can never account for what everybody might do. I do still agree that it's better to use something that's already there...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What I'm thinking is that if there was a standard way to name things, much like the template hierarchy, then theme authors could choose to use it. Plugin authors could use that to hook into specific places in the theme. This doesn't have to be limited to the content and the loop and such. The idea can expand beyond that.
&lt;/p&gt;
&lt;p&gt;
For example, what if the concept of a "menu" became a part? Theme authors could call get_template_part('menu') and have a menu.php file that output their menu. Maybe this would be as simple as a call to wp_nav_menu or maybe it could be complex. Depends on the theme.
&lt;/p&gt;
&lt;p&gt;
But if they were calling this function, then a plugin could hook into get_template_part_menu or get_template_part_menu_after to put things before or after the menu area on the page.
&lt;/p&gt;
&lt;p&gt;
The idea of template parts, as a whole, allows the theme author to break the page down into specific "areas" and have the output for each of them separated. This allows child themes to easily override whole areas of the page without affecting the rest of it. It also allows themes to define these named areas with fallbacks, so I could say get_template_part('menu','page_slug') for example (replace 'page_slug' with whatever gets the current page slug), and then be able to define menu-slug.php for having individual menus for different pages. get_template_part already does this.
&lt;/p&gt;
&lt;p&gt;
So it makes sense, if you're giving theme authors a way to divide their theme into areas, to allow plugins to hook in before and after those areas to produce content. Simple as that, really. If we let theme authors divide the page into named chunks, then give them a standard for naming those chunks, then we can have known names.
&lt;/p&gt;
&lt;p&gt;
If themes don't use those area names, then you have the same situation as now. Themes have to be modified by the end user to include calls to functions in plugins, or whatever. This is unchanged. But the goal is to make it so plugins can try to hook into those standard named areas, and then if the theme supports them, it "just works".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>WraithKenny</dc:creator>

      <pubDate>Thu, 01 Sep 2011 17:18:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:44/1314897481451790</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18503 (Delete-Plugin Error Validation Clears Form Values) updated</title>
      
        <dc:creator>JohnONolan</dc:creator>

      <pubDate>Thu, 01 Sep 2011 17:17:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18503#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18503#comment:3/1314897442113754</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Thu, 01 Sep 2011 17:16:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:43/1314897392032778</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:39" title="Comment 39"&gt;Otto42&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Theme authors are already starting to use get_template_part, and will be using it more in the future.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Does this mean that plugin authors have to anticipate or provide options for what the theme is calling their template part(s), though? What if it should be attached to a completely different template part depending on context? Is that for the plugin to control then, or for the theme author? A list of common names would help, but what would happen if multiple common names were being used in a theme?
&lt;/p&gt;
&lt;p&gt;
I don't mean to just fire off questions and perhaps sound belligerent or defensive on teh internetz, because I don't mean it that way at all. I'm clearly having a hard time figuring out how that would work, but I'm genuinely interested/curious and want to understand better. I figure you know way better than I do and I guess you can never account for what everybody might do. I do still agree that it's better to use something that's already there...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 01 Sep 2011 17:13:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:42/1314897234519536</guid>
      <description>&lt;p&gt;
+1 to offer a few different new approaches that are designed to leverage the same plugin hooks; a template tag (i.e. &lt;code&gt;the_rest()&lt;/code&gt;), sidebars as template zones, and especially a &lt;strong&gt;huge&lt;/strong&gt; +1 to &lt;code&gt;the_loop().&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
JMTCW but -1 for extending &lt;code&gt;get_template_part()&lt;/code&gt;; I think one reason why more themes don't use it is that it can be counter-intuitive to people, or at least to me. Everytime I see it I have to rethink how it works, and I find I have to force myself to think about using it when I build a theme because it doesn't make sense to me. Otto makes a good point that once something is in WordPress it is here to stay; pity that &lt;code&gt;get_template_part()&lt;/code&gt; is one of those.
&lt;/p&gt;
&lt;p&gt;
OTOH, if &lt;code&gt;the_loop()&lt;/code&gt; was added it might hide the more common uses of &lt;code&gt;get_template_part()&lt;/code&gt; and those make it less onerous.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Thu, 01 Sep 2011 17:12:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:41/1314897167442455</guid>
      <description>&lt;p&gt;
loop_end won't work because it only fires after the last post in the loop. You can't use it on a page with more than one post, for example.
&lt;/p&gt;
&lt;p&gt;
There is the_post hook in setup_postdata, however this has the problem that it fires before every post's output, and that it has the next post already set up by the time it fires. So having it output something specific to the previous post is problematic.
&lt;/p&gt;
&lt;p&gt;
There is no currently existing hook that will work.
&lt;/p&gt;
&lt;p&gt;
As for standardizing on part names, we already have two examples of "standard" names:
&lt;/p&gt;
&lt;p&gt;
Twenty Eleven uses the "content" name for calling a template to output a single post. The get_template_part call for the "content" is always called inside an existing Loop.
&lt;/p&gt;
&lt;p&gt;
Twenty Ten uses the "loop" name for calling a template that runs an entire Loop from inside a normal template. So the get_template_part('loop',...); is used to run possibly more than one post.
&lt;/p&gt;
&lt;p&gt;
This would make a decent starting point for a naming scheme.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>seanconklin</dc:creator>

      <pubDate>Thu, 01 Sep 2011 17:05:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:40/1314896713185995</guid>
      <description>&lt;p&gt;
There is an existing plugin called "Plugin Organizer" that would seemingly fix this by allowing the admin to override the hook priority ordering, thus being able to choose the order the plugins are displayed. Perhaps this concept could be brought into the core, similar to how widgets allow custom ordering? &lt;a class="ext-link" href="http://wordpress.org/extend/plugins/plugin-organizer/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/plugin-organizer/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Ditto scribu on trying the loop_end action hook to get the output below the byline.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18558 (Handling of dormant shortcodes is inelegant) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 01 Sep 2011 17:03:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18558#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18558#comment:6/1314896597878617</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18558 (Handling of dormant shortcodes is inelegant) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 01 Sep 2011 17:03:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18558#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18558#comment:5/1314896587032623</guid>
      <description>&lt;p&gt;
Yes, shortcodes.2.php is indeed a patch, so you should name it appropriately: shortcodes.diff or shortcodes.patch.
&lt;/p&gt;
&lt;p&gt;
More info: &lt;a class="ext-link" href="http://codex.wordpress.org/Reporting_Bugs#Patching_Bugs"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Reporting_Bugs#Patching_Bugs&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Thu, 01 Sep 2011 16:50:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:39/1314895841497933</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:23" title="Comment 23"&gt;helenyhou&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I actually agree that modifying something that exists would be better, but I also don't think that having this attached to the loop/the content in terms of placement is very flexible. I can easily imagine a theme author wanting to put it in the loop on an archive page but then in a sidebar or widget area on a single. Then again, maybe it's completely possible to make &lt;code&gt;get_template_part&lt;/code&gt; have the ability to be just as flexible and I'm just not seeing it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, you're not seeing it. get_template_part, as used in twentyeleven, does exactly what you're talking about.
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action ( 'get_template_part_content_after', 'demo', 10, 2);
function demo($slug, $name) {
  if ($name == 'single') {
    // do output for below the post area
  }
}
&lt;/pre&gt;&lt;p&gt;
Calls to get_template_part('content',...); are used throughout twenty-eleven, but with differing second parameters. If there was an after hook (like there already is one for the "before" case), then hooking in and outputting stuff below the post proper would be easy, and you could be specific about what areas in the theme that it's in.
&lt;/p&gt;
&lt;p&gt;
Theme authors are already starting to use get_template_part, and will be using it more in the future. Now is a good time to start pushing for part naming standards and to support them well. Doesn't have to be a formal standard, enforced by code. Just a list of common part names would work.
&lt;/p&gt;
&lt;p&gt;
As pointed out above, there is no possible generic solution that will work with all themes from all time. Themes will have to support any solution you use. Better to introduce a standard using methods theme authors already know about than to create something new that they don't understand and will use wrong. For the specific example of "the_rest" that JJJ came up with, people in this very thread are already starting to use-it-wrong from the original idea, and not one line of code has been written.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18558 (Handling of dormant shortcodes is inelegant) updated</title>
      
        <dc:creator>trevogre</dc:creator>

      <pubDate>Thu, 01 Sep 2011 16:34:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18558#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18558#comment:4/1314894894235039</guid>
      <description>&lt;p&gt;
No, I think that is right, but the code was wrong forgot some braces on the if statement. The second upload should work as a patch.
&lt;/p&gt;
&lt;p&gt;
So I assume the process is what I just did, upload the patch to the ticket and then wait for a  person with commit access to review it, improve it, laugh at it and dump it or include it?
&lt;/p&gt;
&lt;p&gt;
The tutorials are just shy of complete. It takes you through creating the patch but not the part about submitting them for review.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>shortcodes.2.php attached to Ticket #18558</title>
      
        <dc:creator>trevogre</dc:creator>

      <pubDate>Thu, 01 Sep 2011 16:28:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18558/shortcodes.2.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18558/shortcodes.2.php/1314894484609193</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16688 (Inconsistent 'the_title' filter) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Thu, 01 Sep 2011 15:34:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16688#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16688#comment:4/1314891241154326</guid>
      <description>&lt;p&gt;
Well, &lt;code&gt;next_post()&lt;/code&gt; is trying to pass in &lt;code&gt;$nextpost&lt;/code&gt; as the second argument - and that doesn't appear to be defined anywhere in that function. I assume it's supposed to be &lt;code&gt;$post&lt;/code&gt; (and then as per your comment, &lt;code&gt;$post-&amp;gt;ID&lt;/code&gt;). Patch attached in case this is decided to be fixed as well, though there will be an obvious backwards compatibility concern.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18565 (Scheduled or Published. Still confuses us.) updated</title>
      
        <dc:creator>jorhett</dc:creator>

      <pubDate>Thu, 01 Sep 2011 15:33:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18565#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18565#comment:8/1314891185259059</guid>
      <description>&lt;p&gt;
When I say scheduled for a few minutes in the future, I mean waiting those few minutes.  It does not post on time.  I have not figured out what the exact criteria are, but up to 10 minutes in the future does NOT post whereas an hour or more in the future does post on time.
&lt;/p&gt;
&lt;p&gt;
I own the server and have root, so I can confirm that server time and website time are the same.
&lt;/p&gt;
&lt;p&gt;
Re:The only way to "unschedule" a post with current UI is to set post time in the past.
&lt;/p&gt;
&lt;p&gt;
Then the UI needs to indicate this.  As I can easily open Quick Edit and change the status to Published, I would expect that this would take effect. It does not.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16688.diff attached to Ticket #16688</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Thu, 01 Sep 2011 15:32:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16688/16688.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16688/16688.diff/1314891155290249</guid>
      <description>&lt;p&gt;
Adds missing ID filter args, amends args in deprecated functions using post object to post ID
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 01 Sep 2011 15:31:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:38/1314891064517539</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
+1 on the &lt;code&gt;the_rest()&lt;/code&gt; idea.
&lt;/p&gt;
&lt;p&gt;
I see where Otto is coming from on get_template_part but I think we'd have a hard time convincing theme developers to standardize across the board, especially as many of them still aren't even using template parts to begin with. It seems like a natural progression to continue to divide the page into separate sections e.g. &lt;code&gt;the_title, the_content, the_excerpt, the_rest&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
On another note, I think it should be said that template parts seem to be overwhelmingly used specifically for content-elements. &lt;code&gt;the_title, the_content, the_excerpt, etc.&lt;/code&gt; while inherently work toward &lt;em&gt;displaying&lt;/em&gt; content, they themselves are not indicative of &lt;em&gt;producing&lt;/em&gt; content as are template parts. My 2¢.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18563 (Disallowing editing of .php files in the plugin editor blocks access ...) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 01 Sep 2011 15:29:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18563#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18563#comment:4/1314890982092324</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;em&gt; 18563.patch&lt;/em&gt; is an idea to solve the issue. Just check the plugin files a bit earlier.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18296 (Add an action to Custom_Image_Header admin_page()) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Thu, 01 Sep 2011 15:25:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18296#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18296#comment:2/1314890724903428</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Thu, 01 Sep 2011 15:24:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:37/1314890689208368</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>18563.patch attached to Ticket #18563</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 01 Sep 2011 15:21:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18563/18563.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18563/18563.patch/1314890463626382</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>mattwiebe</dc:creator>

      <pubDate>Thu, 01 Sep 2011 15:13:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:36/1314889986841387</guid>
      <description>&lt;p&gt;
There's no way we can kludge this into the currently existing theme infrastructure. Here's a thought for a new loop syntax that would be less radical than the Loop Standard, but easy to implement for themers:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt; the_loop(); &lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Which wraps a standard WP loop in some extra goodness, including actions.
&lt;/p&gt;
&lt;pre class="wiki"&gt;function the_loop( $slug = 'loop', $name = null ) {
	global $post;
	do_action( 'wp_before_loop' );
	while ( have_posts() ) : the_post();
		do_action( 'wp_before_loop_contents', $post );
		get_template_part( $slug, $name );
		do_action( 'wp_after_loop_contents', $post );
	endwhile;
	do_action( 'wp_after_loop' );
}
&lt;/pre&gt;&lt;p&gt;
This accomplishes the goals of having multiple hook'ed places to park extra content in loop contexts, as well as taking the loop itself into a separate file, loop.php by default. As you can see, &lt;code&gt;the_loop();&lt;/code&gt; accepts the same args as &lt;code&gt;get_template_part();&lt;/code&gt;, so we can use whichever loop file makes most sense in our context if we're into specificity and overrides. It does not accomplish the goal of working without retrofitting, but I think that's not possible with our current API.
&lt;/p&gt;
&lt;p&gt;
What I like about this API is it's simultaneously easier for themers (no PHP looping syntax in theme files) and more powerful for plugin developers.
&lt;/p&gt;
&lt;p&gt;
We then would do something like &lt;code&gt;add_theme_support( 'loop' );&lt;/code&gt; to signal to plugin developers that they should use the new hooks rather than &lt;code&gt;the_content&lt;/code&gt; filter.
&lt;/p&gt;
&lt;p&gt;
Note: obviously this would be an aliased method in &lt;code&gt;WP_Query&lt;/code&gt;, just like &lt;code&gt;have_posts()&lt;/code&gt; and &lt;code&gt;the_post()&lt;/code&gt;, but this was easier to post here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16688 (Inconsistent 'the_title' filter) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2011 15:07:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16688#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16688#comment:3/1314889652378506</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
For some reason &lt;code&gt;previous_post()&lt;/code&gt; and &lt;code&gt;next_post()&lt;/code&gt; pass the whole &lt;code&gt;$post&lt;/code&gt; object instead of &lt;code&gt;$post-&amp;gt;ID&lt;/code&gt;:
&lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/tags/3.2.1/wp-includes/deprecated.php#L152"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/browser/tags/3.2.1/wp-includes/deprecated.php#L152&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Though they are both deprecated, I wonder if that should be fixed too.
&lt;/p&gt;
&lt;p&gt;
Related changeset: &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/2227" title="Correctly add args to strings that contain only a query string and not ..."&gt;[2227]&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18547 (Add rel="nofollow" to reply to comments link) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Thu, 01 Sep 2011 14:56:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18547#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18547#comment:13/1314888960907076</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18548 (Add a better option for &lt;title&gt; tags) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Thu, 01 Sep 2011 14:52:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18548#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18548#comment:40/1314888748629370</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16688 (Inconsistent 'the_title' filter) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Thu, 01 Sep 2011 14:50:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16688#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16688#comment:2/1314888621090300</guid>
      <description>&lt;p&gt;
+1 on this - my plugin is experiencing exactly the same warnings due to this inconsistency. Of the 14 instances of &lt;code&gt;the_title&lt;/code&gt; filter being applied currently in trunk, two of them don't pass the ID along, which the patch fixes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2011 14:46:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:35/1314888373754683</guid>
      <description>&lt;p&gt;
I like Otto's idea of using &lt;code&gt;get_template_part()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Plugins could then hook to &lt;code&gt;get_template_part_content_after&lt;/code&gt;, assuming that more themes would use &lt;code&gt;get_template_part( 'content', 'single' )&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
In this case, don't we need a way for plugins to determine when to use &lt;code&gt;get_template_part_content_after&lt;/code&gt; and when to fall back to &lt;code&gt;the_content&lt;/code&gt;?
&lt;/p&gt;
&lt;p&gt;
Edit: Some &lt;code&gt;add_theme_support()&lt;/code&gt; option, perhaps?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18180 (Missing i18n in setup-config.php) updated</title>
      
        <dc:creator>RanYanivHartstein</dc:creator>

      <pubDate>Thu, 01 Sep 2011 14:44:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18180#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18180#comment:15/1314888296773764</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Odd, RTL langage and admin, yet ltr inputs in the installer?  seems quite strange to me.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The inputs in setup-config.php all ask for server information, so it will always be LTR. Or anyway I can't think of a situation where it would need to be RTL. Everything else is RTL though.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
he_IL should definitely be using wp_enqueue_style() for all non-installer locations however (Including those functions in the setup-config section is going to be too reliant upon url-related functions which are unavailable)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not following - what should be changed?
&lt;/p&gt;
&lt;p&gt;
I haven't updated the setup-config.php file yet, so anything that's now in he-IL might not relevant to what this ticket is discussing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18559 (Set_screen_options() ignores many page names. add_menu_page() and ...) updated</title>
      
        <dc:creator>Mick P.</dc:creator>

      <pubDate>Thu, 01 Sep 2011 14:44:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18559#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18559#comment:3/1314888296241511</guid>
      <description>&lt;p&gt;
Good point. Numbers won't fly either.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18563 (Disallowing editing of .php files in the plugin editor blocks access ...) updated</title>
      
        <dc:creator>trepmal</dc:creator>

      <pubDate>Thu, 01 Sep 2011 14:35:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18563#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18563#comment:3/1314887742151267</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Thu, 01 Sep 2011 14:32:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:34/1314887547733298</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:25" title="Comment 25"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What exactly are we talking about here? The ticket's title is "better way to insert things &lt;em&gt;below individual posts&lt;/em&gt;".
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Speaking for myself, I tend to look for intentions, not just words. Side effect of the type of people I've worked with, I guess. If the usual course of action around here is to stick to a ticket title for a solution, then &lt;code&gt;get_template_part&lt;/code&gt; makes way more sense. Unfortunately, I don't know what usually happens, but I am trying to learn.
&lt;/p&gt;
&lt;p&gt;
I really only mean flexibility in terms of pure placement. Again, if the end goal is to stick to putting things after (or maybe before) the content or somewhere in the loop, then I've totally wandered down the wrong path. At least it doesn't seem like I'm alone on it...?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>nathanrice</dc:creator>

      <pubDate>Thu, 01 Sep 2011 14:29:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:33/1314887366157963</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:32" title="Comment 32"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That doesn't fix anything.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It doesn't specifically fix the issue brought up by Jane, but no single solution is going to do that. WordPress is due to have some strategically placed hooked that file before/after elements in the loop, without having to rely on theme developers putting in those &lt;code&gt;do_action&lt;/code&gt; references manually, IOW work with existing template tags.
&lt;/p&gt;
&lt;p&gt;
Some already exist (your example of the loop hooks), and some need to be created (before/after content, before/after comments template, before/after comment elements, etc.).
&lt;/p&gt;
&lt;p&gt;
New template tags like &lt;code&gt;the_rest()&lt;/code&gt; are probably a good idea too. It'll be a while before they catch on, but they will eventually. (especially if made part of the standards on WordPress.org Extend).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18563 (Disallowing editing of .php files in the plugin editor blocks access ...) updated</title>
      
        <dc:creator>trepmal</dc:creator>

      <pubDate>Thu, 01 Sep 2011 14:28:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18563#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18563#comment:2/1314887303261624</guid>
      <description>&lt;p&gt;
Yes - the plugin editor. Sorry, I should have been clearer.
&lt;/p&gt;
&lt;p&gt;
If 'php' is removed from the list of allowable extensions, you can't use the plugin editor to edit files with the allowed extensions unless you know the URL (e.g. /wp-admin/plugin-editor.php?file=akismet%2Freadme.txt&amp;amp;plugin=akismet%2Fakismet.php)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 01 Sep 2011 14:20:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:32/1314886815752975</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:31" title="Comment 31"&gt;nathanrice&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
That doesn't fix anything. The idea is to add stuff after the post meta, i.e. &lt;em&gt;not&lt;/em&gt; like this:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://core.trac.wordpress.org/attachment/ticket/18561/Screen%20shot%202011-08-31%20at%209.56.48%20PM.png"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/attachment/ticket/18561/Screen%20shot%202011-08-31%20at%209.56.48%20PM.png&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18562 (WP_Query class ignores all arguments in custom post type) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 01 Sep 2011 14:16:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18562#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18562#comment:7/1314886600188372</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>nathanrice</dc:creator>

      <pubDate>Thu, 01 Sep 2011 14:15:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:31/1314886527560478</guid>
      <description>&lt;p&gt;
I think using &lt;code&gt;get_template_part&lt;/code&gt; would make sense if more themes were using it. But they're not. And likely won't.
&lt;/p&gt;
&lt;p&gt;
What we do know is that themes DO use &lt;code&gt;the_content()&lt;/code&gt;. See my patch for a simple solution that will probably work in 99% of themes without asking theme developers to change anything.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>post-template.php.diff attached to Ticket #18561</title>
      
        <dc:creator>nathanrice</dc:creator>

      <pubDate>Thu, 01 Sep 2011 14:14:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18561/post-template.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18561/post-template.php.diff/1314886473752601</guid>
      <description>&lt;p&gt;
Hooks before and after content.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18562 (WP_Query class ignores all arguments in custom post type) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 01 Sep 2011 14:13:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18562#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18562#comment:6/1314886402288204</guid>
      <description>invalid: &lt;p&gt;
Yep, same problem as &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16168" title="#16168: defect (bug): 404 error with pagination on custom taxonomy page (closed: invalid)"&gt;#16168&lt;/a&gt;, with same solution: &lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/16168#comment:5"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/ticket/16168#comment:5&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Thu, 01 Sep 2011 14:09:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:30/1314886171627739</guid>
      <description>&lt;p&gt;
Potentially related: &lt;a class="ext-link" href="http://loopstandard.com/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://loopstandard.com/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>ev3rywh3re</dc:creator>

      <pubDate>Thu, 01 Sep 2011 14:02:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:29/1314885731039264</guid>
      <description>&lt;p&gt;
I know it might sound a little push-backish on theme developers, but developing a standard set of get_template_parts and do_actions that's already mentioned would definitely solve the problem.
&lt;/p&gt;
&lt;p&gt;
I know most decent themes (base themes, frameworks, ack, etc.)  already implement these types of filters, but there is no standard naming convention for the filters(actions). Once there is an action or filter that is documented to be used for a specific purpose, I'd target that first. if some theme isn't using it then I'll either use something that does or hack it so it works (not that any plugins or theme need any hacking :P)
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;?php do_action( 'the_content_after' ) ?&amp;gt;
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 01 Sep 2011 13:59:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:28/1314885573686301</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:22" title="Comment 22"&gt;cochran&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The loop_start and loop_end hooks will be at the end of the loop and the start of the loop. So for example on archive pages it will not be available for each post.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You can use 'the_post' instead.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
that loop_end will actually be after the comment section as well and The goal with this ticket will be to have it right after the_content.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, that's a valid point.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 01 Sep 2011 13:55:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:27/1314885347503493</guid>
      <description>&lt;p&gt;
And that's what conditional flags are for: is_single(), is_page() etc. so I don't see where the lack of flexibility is.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 01 Sep 2011 13:54:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:26/1314885276988860</guid>
      <description>&lt;p&gt;
Note that The Loop is called for single posts as well, not just on archive pages.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 01 Sep 2011 13:53:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:25/1314885211762465</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I can easily imagine a theme author wanting to put it in the loop on an archive page but then in a sidebar or widget area on a single.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What exactly are we talking about here? The ticket's title is "better way to insert things &lt;em&gt;below individual posts&lt;/em&gt;".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>jane</dc:creator>

      <pubDate>Thu, 01 Sep 2011 13:37:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:24/1314884249076558</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:23" title="Comment 23"&gt;helenyhou&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I can easily imagine a theme author wanting to put it in the loop on an archive page but then in a sidebar or widget area on a single.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
YES.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Thu, 01 Sep 2011 13:20:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:23/1314883220435024</guid>
      <description>&lt;p&gt;
I actually agree that modifying something that exists would be better, but I also don't think that having this attached to the loop/the content in terms of placement is very flexible. I can easily imagine a theme author wanting to put it in the loop on an archive page but then in a sidebar or widget area on a single. Then again, maybe it's completely possible to make &lt;code&gt;get_template_part&lt;/code&gt; have the ability to be just as flexible and I'm just not seeing it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>cochran</dc:creator>

      <pubDate>Thu, 01 Sep 2011 13:16:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:22/1314883001089597</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:21" title="Comment 21"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Can't this be done using the loop_start or loop_end hooks?
&lt;/p&gt;
&lt;p&gt;
Or even the_post: &lt;a class="ext-link" href="http://scribu.net/wordpress/inserting-a-banner-between-posts.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://scribu.net/wordpress/inserting-a-banner-between-posts.html&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The loop_start and loop_end hooks will be at the end of the loop and the start of the loop. So for example on archive pages it will not be available for each post. Also, since some one referenced it already you can see those two hooks on my genesis hook guide &lt;a class="ext-link" href="http://genesistutorials.com/visual-hook-guide"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://genesistutorials.com/visual-hook-guide&lt;/a&gt; and see that loop_end will actually be after the comment section as well and The goal with this ticket will be to have it right after the_content.
&lt;/p&gt;
&lt;p&gt;
Also, I do kinda like the get_template_part idea for this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 01 Sep 2011 13:00:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:21/1314882053262611</guid>
      <description>&lt;p&gt;
Can't this be done using the loop_start or loop_end hooks?
&lt;/p&gt;
&lt;p&gt;
Or even the_post: &lt;a class="ext-link" href="http://scribu.net/wordpress/inserting-a-banner-between-posts.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://scribu.net/wordpress/inserting-a-banner-between-posts.html&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18562 (WP_Query class ignores all arguments in custom post type) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2011 12:58:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18562#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18562#comment:5/1314881897477949</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18562#comment:3" title="Comment 3"&gt;arsalkeen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Now I get a 404 because there are only 7 posts in my database tagged with post_type = eb_service. Thus retrieving 10 posts on page 2 for this post_type returns a 404 as there is nothing found in the query.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That looks like a duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16168" title="#16168: defect (bug): 404 error with pagination on custom taxonomy page (closed: invalid)"&gt;#16168&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15086 (get_template_part() should let you specify a directory) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 01 Sep 2011 12:54:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15086#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15086#comment:37/1314881650950090</guid>
      <description>&lt;p&gt;
Marked &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18567" title="#18567: enhancement: Modify get_template_part() to include sub folder path (closed: duplicate)"&gt;#18567&lt;/a&gt; as dup.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18567 (Modify get_template_part() to include sub folder path) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 01 Sep 2011 12:53:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18567#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18567#comment:1/1314881627276082</guid>
      <description>duplicate: &lt;p&gt;
&lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/15086" title="#15086: enhancement: get_template_part() should let you specify a directory (accepted)"&gt;#15086&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #18568 (Post title field should be hidden in DFW if not listed in "supports" ...) updated</title>
      
        <dc:creator>jtsternberg</dc:creator>

      <pubDate>Thu, 01 Sep 2011 12:53:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18568#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18568#comment:1/1314881582070684</guid>
      <description>&lt;p&gt;
I stand corrected... if the editor areas is not listed in "supports" than the full screen button isn't even available, but the patch addresses the title issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>18568.diff attached to Ticket #18568</title>
      
        <dc:creator>jtsternberg</dc:creator>

      <pubDate>Thu, 01 Sep 2011 12:49:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18568/18568.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18568/18568.diff/1314881377157575</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18568 (Post title field should be hidden in DFW if not listed in "supports" ...) created</title>
      
        <dc:creator>jtsternberg</dc:creator>

      <pubDate>Thu, 01 Sep 2011 12:46:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18568</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18568/1314881196416818</guid>
      <description>&lt;p&gt;
As it is, if you create a custom post type, and don't list "title" in the "supports" list, then you won't have a title field in the normal editor (as it should be), but when you click the full screen editor, the title field is displayed.  This goes for the editor textarea as well.
&lt;/p&gt;
&lt;p&gt;
The diff file adds the post_type_supports check that the default editor.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>general-template.php.diff attached to Ticket #18567</title>
      
        <dc:creator>dgwyer</dc:creator>

      <pubDate>Thu, 01 Sep 2011 12:40:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18567/general-template.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18567/general-template.php.diff/1314880849677828</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18567 (Modify get_template_part() to include sub folder path) created</title>
      
        <dc:creator>dgwyer</dc:creator>

      <pubDate>Thu, 01 Sep 2011 12:40:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18567</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18567/1314880817994228</guid>
      <description>&lt;p&gt;
I have been using more and more template parts, that I include into my main theme template files, using get_template_part().
&lt;/p&gt;
&lt;p&gt;
It would be great if it was possible to tidy up the theme root folder by placing all template parts in a sub folder.
&lt;/p&gt;
&lt;p&gt;
I have attached a modified get_template_part() function with the proposed changes.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18558 (Handling of dormant shortcodes is inelegant) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 01 Sep 2011 12:37:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18558#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18558#comment:3/1314880643173455</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18558#comment:2" title="Comment 2"&gt;trevogre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think that I did that wrong. I'll have to lookup how to submit a patch and see if I did that right.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://core.trac.wordpress.org/wiki#HowtoSubmitPatches"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/wiki#HowtoSubmitPatches&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18565 (Scheduled or Published. Still confuses us.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2011 12:07:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18565#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18565#comment:7/1314878865691412</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Posts -&amp;gt; Edit - change Status to "Published" and Save -- nope
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not sure about this step. There's no "Published" status for scheduled posts on Edit screen, only "Scheduled", "Pending Review" and "Draft".
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Posts -&amp;gt; Quick Edit - change Status to "Published" and Save -- nope, still Scheduled&lt;br /&gt;
Posts -&amp;gt; Edit change Scheduled Time to less than one hour in the future -- doesn't publish
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Confirmed as expected, since the date is still in the future.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Posts -&amp;gt; Edit change Scheduled Time to more than an hour in the future -- posts on time.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Can't reproduce this. But there's an UI glitch in this case regarding "Schedule for"/"Published on" text mentioned by garyc40 and addressed by his patch: &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/8368#comment:8" title="Comment 8 for #8368: enhancement: Scheduling post time behavior and language refinements (assigned)"&gt;ticket:8368:8&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The only way to "unschedule" a post with current UI is to set post time in the past.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Setting the scheduled time to the past does not publish it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It should (and does so on my clean install).
&lt;/p&gt;
&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16068" title="#16068: enhancement: No UI for &amp;#34;unscheduling&amp;#34; a scheduled post? (closed: duplicate)"&gt;#16068&lt;/a&gt; contains another explanation of the UI issue, though it was closed as a duplicate of &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/8368" title="#8368: enhancement: Scheduling post time behavior and language refinements (assigned)"&gt;#8368&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>iandstewart</dc:creator>

      <pubDate>Thu, 01 Sep 2011 11:06:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:20/1314875193428729</guid>
      <description>&lt;p&gt;
I like Otto's idea of using get_template_part for this. It might be neat if there was an additional parameter that held some semantic information about the template part being included. So you could choose to hook your plugin bits into the theme after the 'post' template part. It would have to be a set universal number of semantIc names like post formats, maybe even just limited to 'post' for now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18566 (Expose discussion settings on XML-RPC) updated</title>
      
        <dc:creator>daniloercoli</dc:creator>

      <pubDate>Thu, 01 Sep 2011 10:42:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18566#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18566#comment:1/1314873726362412</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@see &lt;a class="ext-link" href="http://blackberry.trac.wordpress.org/ticket/163"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://blackberry.trac.wordpress.org/ticket/163&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>18566.diff attached to Ticket #18566</title>
      
        <dc:creator>daniloercoli</dc:creator>

      <pubDate>Thu, 01 Sep 2011 10:40:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18566/18566.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18566/18566.diff/1314873636156882</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>satollo</dc:creator>

      <pubDate>Thu, 01 Sep 2011 10:37:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:19/1314873471858146</guid>
      <description>&lt;p&gt;
Themes are too much different to standardize them. Even if there are some commons parts on each theme, breaking up them with too much part is not so good (IMHO). I prefer an approach like the sidebar.
&lt;/p&gt;
&lt;p&gt;
There are many themes that use the sidebars to define NOT sidebars but generic content area. Technically a theme can define sidebars even before and after the post or after the title and the user can add widgets there.
&lt;/p&gt;
&lt;p&gt;
If widgets will be created to add social button with that kind of sidebars in mindthe problem is solved... even if the average user (in my experience) is not very skilled with widgets.
&lt;/p&gt;
&lt;p&gt;
An alternative is to define "template zones". A theme can "declare" as many zone as it wants, may be some zones can be documented as de facto standard. On that zones the theme calls do_action('zone_{name}') while it declared register_zone({name/id}, 'Long descriptive name').
&lt;/p&gt;
&lt;p&gt;
The declaration is used by plugins for their configuration panel so they can ask: "where do you want to inject the social button" showing a list of checkboxes or a drop down selection. Plugins will call "get_zones()" to have all defined zones.
&lt;/p&gt;
&lt;p&gt;
This is far wawy more simple that writing a widget, the plugin must only attach to the action and print out the content...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18566 (Expose discussion settings on XML-RPC) created</title>
      
        <dc:creator>daniloercoli</dc:creator>

      <pubDate>Thu, 01 Sep 2011 10:32:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18566</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18566/1314873137243072</guid>
      <description>&lt;p&gt;
To set properly the mobile UI we should be able to access the discussion settings variables from XML-RPC.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;default_ping_status
&lt;/li&gt;&lt;li&gt;default_comment_status
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18563 (Disallowing editing of .php files in the plugin editor blocks access ...) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 01 Sep 2011 10:03:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18563#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18563#comment:1/1314871431705599</guid>
      <description>&lt;p&gt;
You mean the plugin editor? Yes, it always shows the main file first. The theme editor should show the &lt;code&gt;style.css&lt;/code&gt; first.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16316 (Enable pagination for the XML-RPC getRecentPosts function) updated</title>
      
        <dc:creator>feedfabrik</dc:creator>

      <pubDate>Thu, 01 Sep 2011 09:55:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16316#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16316#comment:9/1314870954577772</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18565 (Scheduled or Published. Still confuses us.) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 01 Sep 2011 09:36:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18565#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18565#comment:6/1314869775979583</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I replicated this on a vanilla install with no plugins.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
My apologies, I didn't re-read the first post when replying to your comment. Still. I can't reproduce other than the before mentioned weird UX (Which is covered by a patch in &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/8368" title="#8368: enhancement: Scheduling post time behavior and language refinements (assigned)"&gt;#8368&lt;/a&gt;).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18558 (Handling of dormant shortcodes is inelegant) updated</title>
      
        <dc:creator>trevogre</dc:creator>

      <pubDate>Thu, 01 Sep 2011 09:28:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18558#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18558#comment:2/1314869332307186</guid>
      <description>&lt;p&gt;
I think that I did that wrong. I'll have to lookup how to submit a patch and see if I did that right.
&lt;/p&gt;
&lt;p&gt;
The uploaded patch does the first two parts of this. Adds an option to store every shortcode that is added with modifications to add_shortcode. It stores the array with each shortcode pointing to a blank shortcode that returns only the content enclosed in the shortcode.
&lt;/p&gt;
&lt;p&gt;
This option is then loaded into $shortcode_tags when the file is loaded and each found run of add_shortcode replaces the blank function with it shortcode if the shortcode still exists.
&lt;/p&gt;
&lt;p&gt;
I hope this passes the elegance test. The only thing that concerns me is running update_option repeatedly. I'm not sure if that is doing a database call every time it runs but I would assume that it does.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>shortcodes.php attached to Ticket #18558</title>
      
        <dc:creator>trevogre</dc:creator>

      <pubDate>Thu, 01 Sep 2011 09:20:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18558/shortcodes.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18558/shortcodes.php/1314868856101920</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Thu, 01 Sep 2011 09:15:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:18/1314868500182763</guid>
      <description>&lt;p&gt;
The idea behind the_rest doesn't accomplish that goal, since using the_rest wouldn't be a drop in. You'd have to reformat your output for the other stuff not in the_content (ie, the header and footer surrounding the_content) into action hooks. It's not as easy to implement as it seems at first glance.
&lt;/p&gt;
&lt;p&gt;
get_template_part is equally not easy, but a fair number of themes are already using it, and there's a lot of advantages to it beyond just this particular case. So making it capable of handling this case as well, along with giving a reason to standardize on "parts", solves more problems and has greater benefits. Plus it's a lot simpler and doesn't needlessly add one-more-thing.
&lt;/p&gt;
&lt;p&gt;
The problem with adding new things is that once they're in, they're in forever and have to be supported until the end of time. Modifying existing things to be more capable is a better long run approach, when it makes sense to do so.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Thu, 01 Sep 2011 09:11:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:17/1314868265822833</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:16" title="Comment 16"&gt;Otto42&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If we can modify something already there (like get_template_part) to accomplish the goal, rather than add yet-another-thing for themes to put in them, I'd kinda prefer that. You're more likely to get adoption by making something that already exists more capable instead of making a totally new thing.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed, but what percentage of themes are using &lt;code&gt;the_content()&lt;/code&gt; (and could easily drop in &lt;code&gt;the_rest()&lt;/code&gt;) compared to the number of themes that make use of template parts?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Thu, 01 Sep 2011 09:04:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:16/1314867841497045</guid>
      <description>&lt;p&gt;
If we can modify something already there (like get_template_part) to accomplish the goal, rather than add yet-another-thing for themes to put in them, I'd kinda prefer that. You're more likely to get adoption by making something that already exists more capable instead of making a totally new thing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Thu, 01 Sep 2011 09:02:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:15/1314867742457999</guid>
      <description>&lt;p&gt;
+1 to Helen's / JJJ's idea about using post extras / the_rest.
&lt;/p&gt;
&lt;p&gt;
The issue isn't where on the page (before, during, after element X) the plugin output gets displayed, but which hook / filter they try and attach to. Get that right, and supporting themes can display it wherever in their theme they want. No need for any &lt;code&gt;add_theme_support()&lt;/code&gt;, since themes supporting it will be the ones calling &lt;code&gt;the_rest()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
We have the_title, the_content, and the_comments, so it only makes sense that there is the_rest / the_extras / the_tools / the_resources (or whatever else might be a suitable name) for each post too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18565 (Scheduled or Published. Still confuses us.) updated</title>
      
        <dc:creator>jorhett</dc:creator>

      <pubDate>Thu, 01 Sep 2011 08:57:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18565#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18565#comment:5/1314867444759920</guid>
      <description>&lt;p&gt;
dd32: go back and re-read. I replicated this on a vanilla install with no plugins.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18565 (Scheduled or Published. Still confuses us.) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 01 Sep 2011 08:52:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18565#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18565#comment:4/1314867163828392</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;blockquote&gt;
&lt;p&gt;
I cannot edit the time and hit cancel and get it to revert to published immediately. None of those steps work.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Perhaps try without any Plugins active then, As it works for me. (Schedule for +1 month, sets as scheduled, Edit it, Set it for -1month, update post, Post is published).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18565 (Scheduled or Published. Still confuses us.) reopened</title>
      
        <dc:creator>jorhett</dc:creator>

      <pubDate>Thu, 01 Sep 2011 08:47:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18565#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18565#comment:3/1314866830595042</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #18565 (Scheduled or Published. Still confuses us.) updated</title>
      
        <dc:creator>jorhett</dc:creator>

      <pubDate>Thu, 01 Sep 2011 08:47:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18565#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18565#comment:2/1314866825392780</guid>
      <description>&lt;p&gt;
I'm sorry, but I disagree with your diagnosis.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;It doesn't appear to be a duplicate of 8368. In fact, the behavior described in 8368 is not replicable with 3.2.1.  I cannot edit the time and hit cancel and get it to revert to published immediately.  None of those steps work.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;Setting the scheduled time to the past does not publish it.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="3"&gt;&lt;li&gt;Setting the scheduled time to a few minutes in the future does not publish it on time.  You must set it forward several hours, at which point it publishes at that time.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18565 (Scheduled or Published. Still confuses us.) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 01 Sep 2011 08:37:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18565#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18565#comment:1/1314866277957224</guid>
      <description>duplicate: &lt;blockquote class="citation"&gt;
&lt;p&gt;
The *ONLY* functional way to take a schedule post and make it Published right now is cut/paste to a new post.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Setting it to a date in the future will always schedule it, Setting it to a date which has passed (an hour ago for example) should cause it to be published *now*. It is a UX issue however, and there's an existing ticket: &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/8368" title="#8368: enhancement: Scheduling post time behavior and language refinements (assigned)"&gt;#8368&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #18564 (Suggestion for keeping browse happy up-to-date) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 01 Sep 2011 08:29:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18564#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18564#comment:1/1314865776336395</guid>
      <description>invalid: &lt;p&gt;
BrowseHappy requires more than a simple link to a site to download the latest releases from, but more to the point, BrowseHappy serves a greater purpose than to notify about updates, it exists to inform users of their options/etc.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #18565 (Scheduled or Published. Still confuses us.) created</title>
      
        <dc:creator>jorhett</dc:creator>

      <pubDate>Thu, 01 Sep 2011 08:26:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18565</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18565/1314865581287925</guid>
      <description>&lt;p&gt;
It is impossible to move a post from Scheduled to Published.
&lt;/p&gt;
&lt;p&gt;
Posts -&amp;gt; Edit - change Status to "Published" and Save -- nope, still Scheduled
Posts -&amp;gt; Quick Edit - change Status to "Published" and Save -- nope, still Scheduled
&lt;/p&gt;
&lt;p&gt;
Posts -&amp;gt; Edit change Scheduled Time to less than one hour in the future -- doesn't publish
Posts -&amp;gt; Edit change Scheduled Time to more than an hour in the future -- posts on time.
&lt;/p&gt;
&lt;p&gt;
This is repeatable on vanilla instances of WordPress 3.2.1 with no plugins.
&lt;/p&gt;
&lt;p&gt;
The *ONLY* functional way to take a schedule post and make it Published right now is cut/paste to a new post.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18560 (PHPDoc Typo Fixes) updated</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Thu, 01 Sep 2011 08:21:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18560#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18560#comment:1/1314865280198346</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Attached what I've fixed so far (i.e. more to come).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18564 (Suggestion for keeping browse happy up-to-date) created</title>
      
        <dc:creator>jonezjea</dc:creator>

      <pubDate>Thu, 01 Sep 2011 08:20:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18564</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18564/1314865255693423</guid>
      <description>&lt;p&gt;
Instead of each time checking if on browsehappy.com that the most recent version is the most recent one, why not link it a the filehippo.com website? The post always the most recent version, even when it is a beta version! The have also a program which checks if your software, so your browser too, isn't out of date and gives you a link to update AND whats new! If we do this we have more focus to what matters and that is the development of WordPress!
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>18560.diff attached to Ticket #18560</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Thu, 01 Sep 2011 08:19:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18560/18560.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18560/18560.diff/1314865184088844</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>M66B</dc:creator>

      <pubDate>Thu, 01 Sep 2011 06:39:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:14/1314859154919718</guid>
      <description>&lt;p&gt;
My first thought was before/after post widgets (as in side bar widgets). In this way users can order before/after post content of multiple plugins.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Thu, 01 Sep 2011 06:32:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:13/1314858725462226</guid>
      <description>&lt;p&gt;
I lightly tested using JJJ's &lt;code&gt;the_rest&lt;/code&gt; and it seems to work. Patch is really just what he wrote out :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>the_rest.diff attached to Ticket #18561</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Thu, 01 Sep 2011 06:28:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18561/the_rest.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18561/the_rest.diff/1314858539040183</guid>
      <description>&lt;p&gt;
What I was thinking, except with the cleverness of johnjamesjacoby
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>trepmal</dc:creator>

      <pubDate>Thu, 01 Sep 2011 06:06:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:12/1314857217736633</guid>
      <description>&lt;p&gt;
Just expanding on my previously mentioned idea
&lt;/p&gt;
&lt;p&gt;
With suggested hooks, easy to add content above - or below - the comments area (which is generally below the post content...)
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;$post&lt;/code&gt; is passed to make it possible to customize the added content as needed.
&lt;/p&gt;
&lt;p&gt;
Very easy to use (screenshot: &lt;a class="ext-link" href="http://cl.ly/9mUI"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://cl.ly/9mUI&lt;/a&gt;):
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action( 'pre_comments_template', 'before_comments_template' );
function before_comments_template( $post ) {
	?&amp;gt;
	&amp;lt;div style="text-align:center;"&amp;gt;&amp;lt;p style="border-top: 1px solid #333;border-bottom: 1px solid #333;"&amp;gt;before the comments!&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;
	&amp;lt;?php
}
add_action( 'post_comments_template', 'after_comments_template' );
function after_comments_template( $post ) {
	if ( 'closed' == $post-&amp;gt;comment_status ) return;
	?&amp;gt;
	&amp;lt;div style="text-align:center;clear:both;"&amp;gt;&amp;lt;p&amp;gt;after the comments, if comments are open!&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;
	&amp;lt;?php
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>comment-template.diff attached to Ticket #18561</title>
      
        <dc:creator>trepmal</dc:creator>

      <pubDate>Thu, 01 Sep 2011 06:02:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18561/comment-template.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18561/comment-template.diff/1314856962141731</guid>
      <description>&lt;p&gt;
pre/post_comments_template action hook idea
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>jb510</dc:creator>

      <pubDate>Thu, 01 Sep 2011 05:41:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:11/1314855695010984</guid>
      <description>&lt;p&gt;
Funny my thought was "isn't that already there", but then I realized I just spend way too much time with Genesis.  &lt;a class="ext-link" href="http://genesistutorials.com/visual-hook-guide"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://genesistutorials.com/visual-hook-guide&lt;/a&gt; for reference, hooks before and after the_content and it works quite well.  Having it in core though would make a lot more sense so plugin devs could rely on it being there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Thu, 01 Sep 2011 04:46:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:10/1314852415995907</guid>
      <description>&lt;p&gt;
Man, &lt;code&gt;the_rest&lt;/code&gt; is way more clever. And now I feel better that I wasn't really wandering down a wrong path.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18562 (WP_Query class ignores all arguments in custom post type) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 01 Sep 2011 04:43:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18562#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18562#comment:4/1314852208989211</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm not sure if this is fully related to your problem, but I had an issue &lt;em&gt;kind&lt;/em&gt; of similar to what you're describing last week. The way I went about fixing the pagination problem on my CPT archive was to set &lt;code&gt;'rewrite' =&amp;gt; true&lt;/code&gt; and leave &lt;code&gt;'has_archive' =&amp;gt; 'slug'&lt;/code&gt; alone. Then WordPress rendered my CPT archive file of archive-post_type.php as /slug/ and /slug/page/2 etc. just fine. I found that using a rewrite array in register_post_type was causing the problem with pagination when employing WP_Query.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Thu, 01 Sep 2011 04:41:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:9/1314852077062003</guid>
      <description>&lt;p&gt;
Otto's idea is good too. WordPress has it's basic template hierarchy, so it's only natural there be a template part hierarchy as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Thu, 01 Sep 2011 04:38:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:8/1314851903849310</guid>
      <description>&lt;p&gt;
The problem isn't hooking into 'the_content' it's executing code after everything else.
&lt;/p&gt;
&lt;p&gt;
What we need is something like :
&lt;/p&gt;
&lt;pre class="wiki"&gt;function the_rest() {
    global $post;
    // Always fires before the rest of a posts extra content
    do_action( 'before_the_rest' );
    // Execute the rest of a posts content
    do_action( 'the_rest', $post );
    // Always fires after the rest of a posts extra content
    do_action( 'after_the_rest' );
}
&lt;/pre&gt;&lt;p&gt;
With something like this, themes use the_rest(); like they use the_content(); but are able to hook whatever they want into it. This lets theme authors decide where the rest of a posts additional content should go. I'm passing the $post global here for convenience, so plugin and theme authors don't even need to declare it themselves; it gets passed as a parameter and can be used to make decisions about what to display there in what context.
&lt;/p&gt;
&lt;p&gt;
Even though actions do have priorities, I've added 'before' and 'after' actions here too. This is so plugins and themes can play politely with each other regardless of their action priority. They obviously aren't *needed* but I included them as a reminder that themes with more actions allow for more flexibility like this when it's needed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>trepmal</dc:creator>

      <pubDate>Thu, 01 Sep 2011 04:38:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:7/1314851888301541</guid>
      <description>&lt;p&gt;
Could add some hooks to the comments_template() function to make it easy to add content before/after the entire comments area. I don't currently see any easy way to hook in before or after that area that isn't theme dependent.
&lt;/p&gt;
&lt;p&gt;
Just my humble 2¢
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18562 (WP_Query class ignores all arguments in custom post type) updated</title>
      
        <dc:creator>arsalkeen</dc:creator>

      <pubDate>Thu, 01 Sep 2011 04:35:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18562#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18562#comment:3/1314851731260181</guid>
      <description>&lt;p&gt;
Here goes the code...
&lt;/p&gt;
&lt;p&gt;
I include a file with the following code in my functions.php to register the new post type.
&lt;/p&gt;
&lt;pre class="wiki"&gt;//Adding custom post type eb_slider
add_action( 'init', 'create_service_post_type' );
function create_service_post_type() {
	$labels = array(
	    'name' =&amp;gt; _x('Services', 'post type general name'),
	    'singular_name' =&amp;gt; _x('Service', 'post type singular name'),
	    'add_new' =&amp;gt; _x('Add New', 'slider'),
	    'add_new_item' =&amp;gt; __('Add New Service'),
	    'edit_item' =&amp;gt; __('Edit Service'),
	    'new_item' =&amp;gt; __('New Service'),
	    'all_items' =&amp;gt; __('All Services'),
	    'view_item' =&amp;gt; __('View Service'),
	    'search_items' =&amp;gt; __('Search Service'),
	    'not_found' =&amp;gt;  __('No services found'),
	    'not_found_in_trash' =&amp;gt; __('No services found in Trash'),
	    'parent_item_colon' =&amp;gt; '',
	    'menu_name' =&amp;gt; 'Services'
	);
	register_post_type( 'eb_service',
						array(
								'labels' 		=&amp;gt; $labels,
								'description' 	=&amp;gt; __( 'This is the post type to display services.' ),
								'public' 		=&amp;gt; true,
								'supports'		=&amp;gt; array('title', 'editor', 'thumbnail', 'author', 'custom-fields', 'excerpt'),
								'show_ui'		=&amp;gt; true,
								'menu_position'	=&amp;gt; 6,
								'capability_type'	=&amp;gt; 'post',
								'has_archive'	=&amp;gt; 'service',
								'rewrite'		=&amp;gt; array('slug' =&amp;gt; 'service', 'with_front' =&amp;gt; false, 'pages' =&amp;gt; true),
								'query_var'		=&amp;gt; true,
								'hierarchical'	=&amp;gt; true
						)
	);
}
&lt;/pre&gt;&lt;p&gt;
next is my archive-eb_service.php
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;?php
/* Template Name: Service Archive Template */
get_header();
global $show_title;
?&amp;gt;
&amp;lt;div id="content_header"&amp;gt;
	&amp;lt;div id="content_header_grid" class="container_12"&amp;gt;
		&amp;lt;div id="demo_reel" class="grid_12"&amp;gt;
			&amp;lt;?php if (function_exists('dimox_breadcrumbs')) dimox_breadcrumbs(); ?&amp;gt;
			&amp;lt;h1 class="pageTitle"&amp;gt;&amp;lt;?php wp_title('', true, 'right'); ?&amp;gt;&amp;lt;/h1&amp;gt;
			&amp;lt;?php $show_title = false; ?&amp;gt;
		&amp;lt;/div&amp;gt;&amp;lt;!-- #demo_reel --&amp;gt;
		&amp;lt;div class="clear"&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;!-- .clear --&amp;gt;
	&amp;lt;/div&amp;gt;&amp;lt;!-- #content_header_grid --&amp;gt;
&amp;lt;/div&amp;gt;&amp;lt;!-- #content_header --&amp;gt;
&amp;lt;div id="content"&amp;gt;
	&amp;lt;div id="content_grid" class="container_12"&amp;gt;
		&amp;lt;div id="content_main" class="grid_9"&amp;gt;
			&amp;lt;div id="sidebar_shadow_top" class="push_8"&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;!-- #sidebar_shadow_top --&amp;gt;
			&amp;lt;div id="content_middle" class="grid_9 alpha omega"&amp;gt;
				&amp;lt;?php get_template_part('loop', 'service_archive'); ?&amp;gt;
			&amp;lt;/div&amp;gt;&amp;lt;!-- #content_middle --&amp;gt;
			&amp;lt;div class="clear"&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;!-- .clear --&amp;gt;
			&amp;lt;div id="sidebar_shadow_bottom" class="push_8"&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;!-- #sidebar_shadow_bottom --&amp;gt;
		&amp;lt;/div&amp;gt;&amp;lt;!-- #content_main --&amp;gt;
		&amp;lt;?php get_sidebar(); ?&amp;gt;
		&amp;lt;div class="clear"&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;!-- .clear --&amp;gt;
	&amp;lt;/div&amp;gt;&amp;lt;!-- #content_grid --&amp;gt;
&amp;lt;/div&amp;gt;&amp;lt;!-- #content --&amp;gt;
&amp;lt;?php get_footer(); ?&amp;gt;
&lt;/pre&gt;&lt;p&gt;
This looks for loop-service_archive.php which is as follow:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;?php
	global $wp_query;
	if ( get_query_var('paged') ) {
		$paged = get_query_var('paged');
	} else if ( get_query_var('page') ) {
		$paged = get_query_var('page');
	} else {
		$paged = 1;
	}
	$args = array( 'post_type' =&amp;gt; 'eb_service', 'posts_per_page' =&amp;gt; 3, 'orderby' =&amp;gt; 'meta_value_num', 'meta_key' =&amp;gt; 'order', 'order' =&amp;gt; 'ASC', 'paged' =&amp;gt; $paged);
	$wp_query = new WP_Query( $args );
?&amp;gt;
&amp;lt;?php if($wp_query-&amp;gt;have_posts()): ?&amp;gt;
	&amp;lt;?php while( $wp_query-&amp;gt;have_posts() ): $wp_query-&amp;gt;the_post(); ?&amp;gt;
	&amp;lt;div id="service-&amp;lt;?php the_id(); ?&amp;gt;" class="grid_3"&amp;gt;
		&amp;lt;?php the_post_thumbnail('img_150x150'); ?&amp;gt;
		&amp;lt;div class="service_title"&amp;gt;&amp;lt;a href="&amp;lt;?php the_permalink(); ?&amp;gt;"&amp;gt;&amp;lt;?php the_title(); ?&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;!-- .service_title --&amp;gt;
	&amp;lt;/div&amp;gt;&amp;lt;!-- #service-&amp;lt;?php the_id(); ?&amp;gt; --&amp;gt;
	&amp;lt;?php endwhile; ?&amp;gt;
	&amp;lt;div class="clear"&amp;gt;&amp;lt;/div&amp;gt;
	&amp;lt;?php if($wp_query-&amp;gt;max_num_pages &amp;gt; 1): ?&amp;gt;
	&amp;lt;div id="nav_below"&amp;gt;
		&amp;lt;?php posts_nav_link(); ?&amp;gt;
	&amp;lt;/div&amp;gt;
	&amp;lt;?php endif; ?&amp;gt;
&amp;lt;?php endif; ?&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Now my problem in detail. Everything works fine when I visit the url  &lt;a class="ext-link" href="http://127.0.0.1/wordpress/service"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://127.0.0.1/wordpress/service&lt;/a&gt; where wordpress is my install directory and 'service' is the slug for my custom post type 'eb_service'. As per my arguments specified in $arg (loop-service_archive.php), 3 posts from this post type are displayed along with the next page link. However, when I click on the next page link, i get a 404. When I print_r($wp_query) in my 404.php i get the following information:
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
WP_Query Object ( [query_vars] =&amp;gt; Array ( [paged] =&amp;gt; 2 [post_type] =&amp;gt; eb_service [error] =&amp;gt; [m] =&amp;gt; 0 [p] =&amp;gt; 0 [post_parent] =&amp;gt; [subpost] =&amp;gt; [subpost_id] =&amp;gt; [attachment] =&amp;gt; [attachment_id] =&amp;gt; 0 [name] =&amp;gt; [static] =&amp;gt; [pagename] =&amp;gt; [page_id] =&amp;gt; 0 [second] =&amp;gt; [minute] =&amp;gt; [hour] =&amp;gt; [day] =&amp;gt; 0 [monthnum] =&amp;gt; 0 [year] =&amp;gt; 0 [w] =&amp;gt; 0 [category_name] =&amp;gt; [tag] =&amp;gt; [cat] =&amp;gt; [tag_id] =&amp;gt; [author_name] =&amp;gt; [feed] =&amp;gt; [tb] =&amp;gt; [posts_per_page] =&amp;gt; 10 [comments_popup] =&amp;gt; [meta_key] =&amp;gt; [meta_value] =&amp;gt; [preview] =&amp;gt; [s] =&amp;gt; [sentence] =&amp;gt; [fields] =&amp;gt; [category&lt;span class="underline"&gt;in] =&amp;gt; Array ( ) [category&lt;/span&gt;not_in] =&amp;gt; Array ( ) [category&lt;span class="underline"&gt;and] =&amp;gt; Array ( ) [post&lt;/span&gt;in] =&amp;gt; Array ( ) [post&lt;span class="underline"&gt;not_in] =&amp;gt; Array ( ) [tag&lt;/span&gt;in] =&amp;gt; Array ( ) [tag&lt;span class="underline"&gt;not_in] =&amp;gt; Array ( ) [tag&lt;/span&gt;and] =&amp;gt; Array ( ) [tag_slug&lt;span class="underline"&gt;in] =&amp;gt; Array ( ) [tag_slug&lt;/span&gt;and] =&amp;gt; Array ( ) [ignore_sticky_posts] =&amp;gt; [suppress_filters] =&amp;gt; [cache_results] =&amp;gt; 1 [update_post_term_cache] =&amp;gt; 1 [update_post_meta_cache] =&amp;gt; 1 [nopaging] =&amp;gt; [comments_per_page] =&amp;gt; 50 [no_found_rows] =&amp;gt; [order] =&amp;gt; DESC ) [tax_query] =&amp;gt; WP_Tax_Query Object ( [queries] =&amp;gt; Array ( ) [relation] =&amp;gt; AND ) [meta_query] =&amp;gt; WP_Meta_Query Object ( [queries] =&amp;gt; Array ( ) [relation] =&amp;gt; ) [post_count] =&amp;gt; 0 [current_post] =&amp;gt; -1 [in_the_loop] =&amp;gt; [comment_count] =&amp;gt; 0 [current_comment] =&amp;gt; -1 [found_posts] =&amp;gt; 7 [max_num_pages] =&amp;gt; 1 [max_num_comment_pages] =&amp;gt; 0 [is_single] =&amp;gt; [is_preview] =&amp;gt; [is_page] =&amp;gt; [is_archive] =&amp;gt; [is_date] =&amp;gt; [is_year] =&amp;gt; [is_month] =&amp;gt; [is_day] =&amp;gt; [is_time] =&amp;gt; [is_author] =&amp;gt; [is_category] =&amp;gt; [is_tag] =&amp;gt; [is_tax] =&amp;gt; [is_search] =&amp;gt; [is_feed] =&amp;gt; [is_comment_feed] =&amp;gt; [is_trackback] =&amp;gt; [is_home] =&amp;gt; [is_404] =&amp;gt; 1 [is_comments_popup] =&amp;gt; [is_paged] =&amp;gt; [is_admin] =&amp;gt; [is_attachment] =&amp;gt; [is_singular] =&amp;gt; [is_robots] =&amp;gt; [is_posts_page] =&amp;gt; [is_post_type_archive] =&amp;gt; [query_vars_hash] =&amp;gt; ba5989721f3f39b579a3afc5262e51af [query_vars_changed] =&amp;gt; [thumbnails_cached] =&amp;gt; [query] =&amp;gt; Array ( [paged] =&amp;gt; 2 [post_type] =&amp;gt; eb_service ) [request] =&amp;gt; SELECT SQL_CALC_FOUND_ROWS wp_posts.* FROM wp_posts WHERE 1=1 AND wp_posts.post_type = 'eb_service' AND (wp_posts.post_status = 'publish' OR wp_posts.post_status = 'private') ORDER BY wp_posts.post_date DESC LIMIT 10, 10 [posts] =&amp;gt; Array ( ) [queried_object] =&amp;gt; stdClass Object ( [labels] =&amp;gt; stdClass Object ( [name] =&amp;gt; Services [singular_name] =&amp;gt; Service [add_new] =&amp;gt; Add New [add_new_item] =&amp;gt; Add New Service [edit_item] =&amp;gt; Edit Service [new_item] =&amp;gt; New Service [view_item] =&amp;gt; View Service [search_items] =&amp;gt; Search Service [not_found] =&amp;gt; No services found [not_found_in_trash] =&amp;gt; No services found in Trash [parent_item_colon] =&amp;gt; [all_items] =&amp;gt; All Services [menu_name] =&amp;gt; Services [name_admin_bar] =&amp;gt; Service ) [description] =&amp;gt; This is the post type to display services. [publicly_queryable] =&amp;gt; 1 [exclude_from_search] =&amp;gt; [capability_type] =&amp;gt; post [map_meta_cap] =&amp;gt; 1 [_builtin] =&amp;gt; [_edit_link] =&amp;gt; post.php?post=%d [hierarchical] =&amp;gt; 1 [public] =&amp;gt; 1 [rewrite] =&amp;gt; Array ( [slug] =&amp;gt; service [with_front] =&amp;gt; [pages] =&amp;gt; 1 [feeds] =&amp;gt; 1 ) [has_archive] =&amp;gt; service [query_var] =&amp;gt; eb_service [register_meta_box_cb] =&amp;gt; [taxonomies] =&amp;gt; Array ( ) [show_ui] =&amp;gt; 1 [menu_position] =&amp;gt; 6 [menu_icon] =&amp;gt; [permalink_epmask] =&amp;gt; 1 [can_export] =&amp;gt; 1 [show_in_nav_menus] =&amp;gt; 1 [show_in_menu] =&amp;gt; 1 [show_in_admin_bar] =&amp;gt; 1 [name] =&amp;gt; eb_service [cap] =&amp;gt; stdClass Object ( [edit_post] =&amp;gt; edit_post [read_post] =&amp;gt; read_post [delete_post] =&amp;gt; delete_post [edit_posts] =&amp;gt; edit_posts [edit_others_posts] =&amp;gt; edit_others_posts [publish_posts] =&amp;gt; publish_posts [read_private_posts] =&amp;gt; read_private_posts [read] =&amp;gt; read [delete_posts] =&amp;gt; delete_posts [delete_private_posts] =&amp;gt; delete_private_posts [delete_published_posts] =&amp;gt; delete_published_posts [delete_others_posts] =&amp;gt; delete_others_posts [edit_private_posts] =&amp;gt; edit_private_posts [edit_published_posts] =&amp;gt; edit_published_posts ) [label] =&amp;gt; Services ) [queried_object_id] =&amp;gt; 0 )
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Notice that it shows 'posts_per_page = 10' and 'paged = 2'. Now I get a 404 because there are only 7 posts in my database tagged with post_type = eb_service. Thus retrieving 10 posts on page 2 for this post_type returns a 404 as there is nothing found in the query. However, I have explicitly mentioned posts_per_page = 3 in $arg while instantiating WP_Query class. Also, even if I change the post_type from eb_service to anything xyz in $arg while instantiating WP_Query class in my loop_service_archive.php the $wp_query dump from 404 error screen still shows post_type = eb_service. Thus my conclusion, that the arguments that I specify while instantiating WP_Query class in the archive page for a custom post are being ignored if the navigated page is 2 or more for that matter. Everything remains okay if the navigated page is 1.
&lt;/p&gt;
&lt;p&gt;
I hope this clarifies my problem. I have spent 4 days trying to debug the WP core and my code as well. Dont know where the problem lies :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Thu, 01 Sep 2011 04:35:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:6/1314851703905614</guid>
      <description>&lt;p&gt;
Maybe I am wandering down a really wrong path in my head (promises of brownies will do that), but what if a filter was named something not really having to do with the content? Maybe something like &lt;code&gt;post_extras&lt;/code&gt; or more clever. Then a theme could more readily anticipate and incorporate all this kind of social media, etc. people want to add. A theme could even have an option about where to put the extras, because who knows - maybe it would really be in the sidebar, or something not really related to &lt;code&gt;the_content&lt;/code&gt; at all.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Thu, 01 Sep 2011 04:28:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:5/1314851295503055</guid>
      <description>&lt;p&gt;
I would suggest adding this to the end of the get_template_part function instead.
&lt;/p&gt;
&lt;pre class="wiki"&gt;do_action( "get_template_part_{$slug}_after", $slug, $name );
&lt;/pre&gt;&lt;p&gt;
(what the name of the hook actually is is dealer's choice)
&lt;/p&gt;
&lt;p&gt;
This would allow a plugin to hook into a common place, if the theme is using get_template_part included files. For the specific case of twenty-eleven, it's using get_template_part('content', 'single') to include the content at that point, and an after action hook would allow you to put in something after the *whole* content part, which includes everything in the content.php file.
&lt;/p&gt;
&lt;p&gt;
There's already an action hook at the top of the function that can be used for the "before" part.
&lt;/p&gt;
&lt;p&gt;
This wouldn't work on all themes, but it would provide a mechanism for hooking before and after any use of get_template_part, and a naming scheme could quickly emerge among themes for part-naming, allowing for an ad-hoc standard.
&lt;/p&gt;
&lt;p&gt;
Furthermore, the plugin could only hook on specific "names" if it chose to, behaving differently for single post pages vs. post formats on the home page, etc.
&lt;/p&gt;
&lt;p&gt;
Advantage: Themes that use get_template_part wouldn't need any changes. Themes not using it could start, which I believe should be encouraged anyway.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>gd-imagejpeg-wrapper-ob.3.diff attached to Ticket #18543</title>
      
        <dc:creator>adambackstrom</dc:creator>

      <pubDate>Thu, 01 Sep 2011 04:24:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18543/gd-imagejpeg-wrapper-ob.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18543/gd-imagejpeg-wrapper-ob.3.diff/1314851098300793</guid>
      <description>&lt;p&gt;
Bugfix output buffered version; always turn off ob before function ends (thanks, dd32)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>gd-imagejpeg-wrapper-tempnam.diff attached to Ticket #18543</title>
      
        <dc:creator>adambackstrom</dc:creator>

      <pubDate>Thu, 01 Sep 2011 04:20:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18543/gd-imagejpeg-wrapper-tempnam.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18543/gd-imagejpeg-wrapper-tempnam.diff/1314850822165684</guid>
      <description>&lt;p&gt;
Alternate using temp file rather than output buffering (recommended by dd32)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Thu, 01 Sep 2011 04:13:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:4/1314850426335786</guid>
      <description>&lt;p&gt;
In the software I develop, I use an action here linked to an internal function. The internal function has an array of "services" which have registered to be output here. The internal function then takes care of adding before/after things depending on the theme's settings (perhaps via &lt;code&gt;add_theme_support()&lt;/code&gt; in this case?).
&lt;/p&gt;
&lt;p&gt;
It also allows grouping various items together (ala the rows here) based on the "type" that the service sets.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18563 (Disallowing editing of .php files in the plugin editor blocks access ...) created</title>
      
        <dc:creator>trepmal</dc:creator>

      <pubDate>Thu, 01 Sep 2011 04:12:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18563</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18563/1314850349884155</guid>
      <description>&lt;p&gt;
By using the editable_extensions filter, a user can disallow the editing of php files (more accurately: files with a php extension...)
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter( 'editable_extensions', 'disallow_php_file_editing' );
function disallow_php_file_editing( $editable_extensions ) {
	unset( $editable_extensions[0] );
	return $editable_extensions;
}
&lt;/pre&gt;&lt;p&gt;
However, the file selected when first clicking on the Editor link in the menu is always a php file, so the user is given the "Files of this type are not editable" wp_die() message without being presented with a chance to select a file with a different/allowable extension.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 01 Sep 2011 04:09:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:3/1314850171939049</guid>
      <description>&lt;p&gt;
At first blush I would save to have &lt;code&gt;add_theme_support()&lt;/code&gt; and hooks for both &lt;code&gt;before_post_content' and &lt;/code&gt;'after_post_content'` then plugins could choose to use the new hooks if the theme supports it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>technosailor</dc:creator>

      <pubDate>Thu, 01 Sep 2011 04:07:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:2/1314850062612798</guid>
      <description>&lt;p&gt;
It still would be theme dependent. It could be done for twentyeleven but it's up to theme people to integrate this methodology.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>bi0xid</dc:creator>

      <pubDate>Thu, 01 Sep 2011 04:07:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:1/1314850028762582</guid>
      <description>&lt;p&gt;
This seems a good idea.
&lt;/p&gt;
&lt;p&gt;
One new filter called before_the_content (and after the title) and another called after_the_content will be very useful for social plugins.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18562 (WP_Query class ignores all arguments in custom post type) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 01 Sep 2011 04:04:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18562#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18562#comment:2/1314849880917232</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18562 (WP_Query class ignores all arguments in custom post type) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 01 Sep 2011 04:00:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18562#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18562#comment:1/1314849654271844</guid>
      <description>&lt;p&gt;
Can you please post some &lt;strong&gt;minimal&lt;/strong&gt; code which can be used to demonstrate the problem you're having?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Screen shot 2011-08-31 at 9.56.48 PM.png attached to Ticket #18561</title>
      
        <dc:creator>jane</dc:creator>

      <pubDate>Thu, 01 Sep 2011 03:57:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18561/Screen%20shot%202011-08-31%20at%209.56.48%20PM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18561/Screen%20shot%202011-08-31%20at%209.56.48%20PM.png/1314849425355581</guid>
      <description>&lt;p&gt;
Twenty Eleven with 2 sharing plugins using the_content
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18562 (WP_Query class ignores all arguments in custom post type) created</title>
      
        <dc:creator>arsalkeen</dc:creator>

      <pubDate>Thu, 01 Sep 2011 03:56:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18562</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18562/1314849401418836</guid>
      <description>&lt;p&gt;
WP_Query is ignoring all the arguments that I send while instantiating it in a custom post type archive page. It works fine when pagination link is 1, but it completely ignores all the arguments when pagination link is /page/2
&lt;/p&gt;
&lt;p&gt;
However, when I use the same code as a template, it shows everything correctly. It only ignores the arguments on the custom post archive page.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) created</title>
      
        <dc:creator>jane</dc:creator>

      <pubDate>Thu, 01 Sep 2011 03:56:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561/1314849381741946</guid>
      <description>&lt;p&gt;
More and more plugins want to drop stuff in below each post (especially common among plugins focused on encouraging the sharing of content). There's not really a great way to do it, though, if your single-post-area doesn't end with the last line of body text. Many themes put the byline/date/metadata below -- rather than above, which used to be the norm -- the post content, including our own Twenty Eleven.  See the screenshot to see how ugly it is when a plugin (or two, or more) uses the the_content filter to insert something at the "end" of each post.
&lt;/p&gt;
&lt;p&gt;
Inserting the sharing and like rows (in this example) at the bottom of the post text before the byline/classification metadata seems wrong. It should go below that, so it is closely related to commenting, not part of the content itself. The plugin-generated widget is not "by" the post author, after all.
&lt;/p&gt;
&lt;p&gt;
I have been told that options for addressing this are basically either modifying the theme and/or getting a new filter in place. Whatever we need to do, let's do it, because misplacing plugin-provided tools inside the content rather than after it is a) really bad IA, and b) crazy ugly.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>plugin-install.diff attached to Ticket #18560</title>
      
        <dc:creator>trepmal</dc:creator>

      <pubDate>Thu, 01 Sep 2011 02:48:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18560/plugin-install.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18560/plugin-install.diff/1314845330682486</guid>
      <description>&lt;p&gt;
typo fixes
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18560 (PHPDoc Typo Fixes) created</title>
      
        <dc:creator>trepmal</dc:creator>

      <pubDate>Thu, 01 Sep 2011 02:48:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18560</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18560/1314845314747000</guid>
      <description>&lt;p&gt;
Came across a couple doc typos while looking through wp-admin/includes/plugin-install.php, figured I'd fix 'em
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16953 (Allow symlinked plugins) updated</title>
      
        <dc:creator>yincrash</dc:creator>

      <pubDate>Thu, 01 Sep 2011 02:27:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16953#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16953#comment:15/1314844070341240</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16953 (Allow symlinked plugins) updated</title>
      
        <dc:creator>yincrash</dc:creator>

      <pubDate>Thu, 01 Sep 2011 02:00:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16953#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16953#comment:14/1314842411389500</guid>
      <description>&lt;p&gt;
this patch is incorrect. it only works two levels deep. my issue is that that a lot of the jetpack modules are acting screwy when symlinked, and their JS and CSS files are 3/4 levels deep in the plugins folder.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18554 (Twenty Eleven body classes for singular does not  check condition ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 01 Sep 2011 01:10:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18554#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18554#comment:8/1314839438458153</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18554 (Twenty Eleven body classes for singular does not  check condition ...) closed</title>
      
        <dc:creator>Gabriel Reguly</dc:creator>

      <pubDate>Thu, 01 Sep 2011 01:09:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18554#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18554#comment:7/1314839397732924</guid>
      <description>wontfix: &lt;p&gt;
You guess is correct.
&lt;/p&gt;
&lt;p&gt;
So I will close the ticket.
&lt;/p&gt;
&lt;p&gt;
Thanks for your time.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #18464 (Relax network wildcard restrictions) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2011 01:02:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18464#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18464#comment:3/1314838934215315</guid>
      <description>&lt;pre class="wiki"&gt;if ( current_user_can( 'promote_users' ) )
	actions['addusers'] = __( 'Add existing user' );
&lt;/pre&gt;&lt;p&gt;
That looks like something from another patch, no?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18554 (Twenty Eleven body classes for singular does not  check condition ...) updated</title>
      
        <dc:creator>andrewryno</dc:creator>

      <pubDate>Thu, 01 Sep 2011 00:58:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18554#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18554#comment:6/1314838702862796</guid>
      <description>&lt;p&gt;
Showcase is there because while it's a page, it is used to display posts. I'm honestly not sure why sidebar-page.php isn't marked as singular though.
&lt;/p&gt;
&lt;p&gt;
I'd hazard a guess (without looking at the code right now) that twentyten uses the singular class to designate a page without a sidebar. Can't be sure without looking at the code though.
&lt;/p&gt;
&lt;p&gt;
If that's true, then it should be left as is and just overwritten in a child theme if needed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14024 (Insufficient permissions error after activating plugins) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2011 00:50:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14024#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14024#comment:13/1314838200137385</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looks like we can't check if &lt;code&gt;did_action( 'init' )&lt;/code&gt; here, since &lt;code&gt;$wp-&amp;gt;init()&lt;/code&gt; is called before &lt;code&gt;init&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;after_setup_theme&lt;/code&gt; is the closest appropriate action.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>14024.patch attached to Ticket #14024</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2011 00:49:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14024/14024.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14024/14024.patch/1314838190327897</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18554 (Twenty Eleven body classes for singular does not  check condition ...) updated</title>
      
        <dc:creator>Gabriel Reguly</dc:creator>

      <pubDate>Thu, 01 Sep 2011 00:40:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18554#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18554#comment:5/1314837603369182</guid>
      <description>&lt;p&gt;
Please notice that is_singular() also returns true for the is_page_template() conditions (because they are pages) yet are checked for at the function and not labeled as 'singular'.
&lt;/p&gt;
&lt;pre class="wiki"&gt;	if ( is_singular() &amp;amp;&amp;amp; ! is_home() ! is_page_template( 'showcase.php' ) &amp;amp;&amp;amp; ! is_page_template( 'sidebar-page.php' ) )
		$classes[] = 'singular';
&lt;/pre&gt;&lt;p&gt;
So thanks for the explanation, but, sorry, I am still wondering if is_home_page() should  be added or not.
&lt;/p&gt;
&lt;p&gt;
Maybe the theme developers could explain their intention.
&lt;/p&gt;
&lt;p&gt;
I am fine with the current situation, I just have added a filter and redirected it to my own version ;-)
&lt;/p&gt;
&lt;pre class="wiki"&gt;// fix body class
function my_theme_body_classes( $classes ) {
	remove_filter( 'body_class', 'twentyeleven_body_classes' );
// baseado em function twentyeleven_body_classes( $classes ) {
	if ( ! is_multi_author() ) {
		$classes[] = 'single-author';
	}
	if ( is_singular() &amp;amp;&amp;amp; ! is_home() &amp;amp;&amp;amp; ! is_front_page() &amp;amp;&amp;amp; ! is_page_template( 'showcase.php' ) &amp;amp;&amp;amp; ! is_page_template( 'sidebar-page.php' ) )
		$classes[] = 'singular';
	return $classes;
}
add_filter( 'body_class', 'my_theme_body_classes', 5 );
&lt;/pre&gt;&lt;p&gt;
Just suggested the enhancement as someone else could benefit from it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11651 (Welcome Screen concept) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2011 00:26:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11651#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11651#comment:30/1314836789207302</guid>
      <description>&lt;p&gt;
Related: &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/6479" title="#6479: enhancement: Encourage people to change default tagline (assigned)"&gt;#6479&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6479 (Encourage people to change default tagline) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2011 00:25:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6479#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6479#comment:5/1314836755047754</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11651" title="#11651: task (blessed): Welcome Screen concept (closed: fixed)"&gt;#11651&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18532 (resized image dimensions incorrectly floored instead of rounded) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2011 00:23:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18532#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18532#comment:2/1314836588466565</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>18532.patch attached to Ticket #18532</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2011 00:22:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18532/18532.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18532/18532.patch/1314836558450023</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18552 ("Just another WordPress site" might be seen as dismissive to users) updated</title>
      
        <dc:creator>andrewryno</dc:creator>

      <pubDate>Thu, 01 Sep 2011 00:22:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18552#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18552#comment:6/1314836555505558</guid>
      <description>&lt;p&gt;
I know this might be an unpopular opinion, but I know it's been brought up before. What about dropping the default tagline by default? Too many people never bother to change it because they simply don't know they have the option. 136,000,000 results for the exact phrase on Google:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.google.com/search?sourceid=chrome&amp;amp;ie=UTF-8&amp;amp;q=%22just+another+wordpress+site%22"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.google.com/search?sourceid=chrome&amp;amp;ie=UTF-8&amp;amp;q=%22just+another+wordpress+site%22&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Related to this opinion: &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/6479" title="#6479: enhancement: Encourage people to change default tagline (assigned)"&gt;#6479&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18554 (Twenty Eleven body classes for singular does not  check condition ...) updated</title>
      
        <dc:creator>andrewryno</dc:creator>

      <pubDate>Thu, 01 Sep 2011 00:19:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18554#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18554#comment:4/1314836343917556</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Pretty sure this is by design.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://codex.wordpress.org/Function_Reference/is_singular"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Function_Reference/is_singular&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It returns true for pages, single posts and attachments. A static front page is still a page, so it should be labeled as 'singular'.
&lt;/p&gt;
&lt;p&gt;
Suggest closing as wontfix.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18532 (resized image dimensions incorrectly floored instead of rounded) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 01 Sep 2011 00:14:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18532#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18532#comment:1/1314836052276750</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17626 (image_get_intermediate_size() may return wrong thumbnail size) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 01 Sep 2011 00:13:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17626#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17626#comment:7/1314836020932802</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18532" title="#18532: defect (bug): resized image dimensions incorrectly floored instead of rounded (closed: fixed)"&gt;#18532&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17626 (image_get_intermediate_size() may return wrong thumbnail size) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2011 00:09:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17626#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17626#comment:6/1314835775217747</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17626#comment:5" title="Comment 5"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Better to define it outside of image_get_intermediate_size(), as a private helper function - that is to say with a leading underscore: _compare_sizes(), or something even more obscure, to prevent collisions.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Done in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/17626/17626.patch" title="Attachment '17626.patch' in Ticket #17626"&gt;17626.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/17626/17626.patch" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>17626.patch attached to Ticket #17626</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 01 Sep 2011 00:09:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17626/17626.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17626/17626.patch/1314835761386716</guid>
      <description></description>
      <category>attachment</category>
    </item>
   </channel>
</rss>