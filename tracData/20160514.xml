<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #36239 (wp-embed image size is using the smallest image or it sometimes uses ...) updated</title>
      
        <dc:creator>carasmo</dc:creator>

      <pubDate>Sat, 14 May 2016 20:26:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36239#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36239#comment:3/1463257578287854</guid>
      <description>&lt;p&gt;
I fixed this with the filter 'embed_thumbnail_image_size'. If I recall, I was keeping the image sizes generated by media to very teeny and using them as the img src and and a larger version was used as a data-src. My dimensions for the small version were the same ratio as the large versions shown. However, even though my case is unique, many people have blurry images since their image size for the ratio is sometimes smaller. I don't think many will discover this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35911 (Simplify the credits page with an if/else statment) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sat, 14 May 2016 20:11:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35911#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35911#comment:4/1463256676782779</guid>
      <description>&lt;p&gt;
@ocean90 please review the patch again.
&lt;/p&gt;
&lt;p&gt;
Currently we call the &lt;code&gt;admin-footer.php&lt;/code&gt; twice, and use the &lt;code&gt;exit&lt;/code&gt; function. It's redundant.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
The current code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( ! $credits ) {
	...
	...
	include( ABSPATH . 'wp-admin/admin-footer.php' );
	exit;
}
...
...
include( ABSPATH . 'wp-admin/admin-footer.php' );
&lt;/pre&gt;&lt;p&gt;
The new code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( ! $credits ) {
	...
	...
} else {
	...
	...
}
include( ABSPATH . 'wp-admin/admin-footer.php' );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #36559,​36841 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 14 May 2016 19:57:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=36559%2C36841</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=36559%2C36841/1463255837217506</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36559" title="#36559: defect (bug): Using &amp;#34;widget&amp;#34; as part of setting title breaks the customizer since 4.5 (new)"&gt;#36559&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #36841 (Values in Customizer overridden if slug starts with 'widget_') created</title>
      
        <dc:creator>clintstegman</dc:creator>

      <pubDate>Sat, 14 May 2016 19:48:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36841</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36841/1463255290606385</guid>
      <description>&lt;p&gt;
Any / every Customizer control that starts with 'widget_' is given a value of 'Array'.
&lt;/p&gt;
&lt;p&gt;
If it is a text field, the text field is still valued 'Array', but shows [object Object]
&lt;/p&gt;
&lt;p&gt;
This was very unexpected behavior. If WordPress is actually supposed to be this way, is there a list of forbidden slugs somewhere?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>29748-2ndbatch.patch attached to Ticket #29748</title>
      
        <dc:creator>mercime</dc:creator>

      <pubDate>Sat, 14 May 2016 19:35:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29748/29748-2ndbatch.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29748/29748-2ndbatch.patch/1463254500119087</guid>
      <description>&lt;p&gt;
Second batch of translator comments for accessibility text
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36840 (Link widget sort of recognizes email addresses) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Sat, 14 May 2016 19:15:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36840#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36840#comment:1/1463253339035127</guid>
      <description>&lt;p&gt;
I wonder if this is since
&lt;a href="https://core.trac.wordpress.org/changeset/36747"&gt;https://core.trac.wordpress.org/changeset/36747&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
@azaozz
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35911 (Simplify the credits page with an if/else statment) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 14 May 2016 18:58:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35911#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35911#comment:3/1463252316345352</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35911 (Simplify the credits page with an if/else statment) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 14 May 2016 18:58:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35911#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35911#comment:2/1463252282057751</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37434" title="Credits: Add a missing closing tag.
Props ramiy for initial patch. ..."&gt;37434&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Credits: Add a missing closing tag.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props ramiy for initial patch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35911" title="#35911: defect (bug): Simplify the credits page with an if/else statment (closed: fixed)"&gt;#35911&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37434]: Credits: Add a missing closing tag.  Props ramiy for initial patch. ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 14 May 2016 18:58:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37434</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37434/1463252281103681</guid>
      <description>&lt;p&gt;
Credits: Add a missing closing tag.
&lt;/p&gt;
&lt;p&gt;
Props ramiy for initial patch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35911" title="#35911: defect (bug): Simplify the credits page with an if/else statment (closed: fixed)"&gt;#35911&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #35657 (Image height calculation not always available on body.load) updated</title>
      
        <dc:creator>jipmoors</dc:creator>

      <pubDate>Sat, 14 May 2016 18:49:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35657#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35657#comment:2/1463251781417425</guid>
      <description>&lt;p&gt;
Just confirmed that removing 'height: auto'  does screw up the aspect ratio.
Will test with 'inherit' but I'm afraid we might be looking at JavaScript for a more global solution.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31506 (Dashicons plus icon appears off-center) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 14 May 2016 18:38:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31506#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31506#comment:6/1463251095542186</guid>
      <description>duplicate: &lt;p&gt;
Moved to &lt;a class="ext-link" href="https://github.com/WordPress/dashicons/issues/118"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/dashicons/issues/118&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36838 (Invalid argument supplied for foreach() in ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 18:30:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36838#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36838#comment:4/1463250637907854</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>36838.diff attached to Ticket #36838</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 18:30:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36838/36838.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36838/36838.diff/1463250627222108</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36840 (Link widget sort of recognizes email addresses) created</title>
      
        <author>steve@…</author>

      <pubDate>Sat, 14 May 2016 18:26:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36840</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36840/1463250382085170</guid>
      <description>&lt;p&gt;
If I have the text
&lt;/p&gt;
&lt;p&gt;
test@…
&lt;/p&gt;
&lt;p&gt;
and select it,then click the link button, the field is filled in with
&lt;/p&gt;
&lt;p&gt;
mailto:test@…
&lt;/p&gt;
&lt;p&gt;
but if I highlight "mail me" and click the link, then enter test@…, it's converted to &lt;a class="ext-link" href="http://test@example.com"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://test@example.com&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It seems to me that the link already knows how to recognize an email address, but that's not applied when the email address is typed in.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23794 (load_plugin_textdomain fails if plugin is loaded from mu-plugins) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 18:24:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23794#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23794#comment:13/1463250249908718</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23794/23794.diff" title="Attachment '23794.diff' in Ticket #23794"&gt;23794.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23794/23794.diff" title="Download"&gt;​&lt;/a&gt; deprecates &lt;code&gt;load_muplugin_textdomain()&lt;/code&gt; as per Nacin's comment and makes &lt;code&gt;load_plugin_textdomain()&lt;/code&gt; try the mu-plugins directory as well.
&lt;/p&gt;
&lt;p&gt;
@ocean90 Since we worked on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34114" title="#34114: enhancement: Remove the requirement to call load_plugin_textdomain() or ... (closed: fixed)"&gt;#34114&lt;/a&gt;, what do you think about this change here?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23794.diff attached to Ticket #23794</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 18:21:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23794/23794.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23794/23794.diff/1463250103292952</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33717 (Send Notification Email When a Comment is Approved From Moderation) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 18:10:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33717#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33717#comment:50/1463249453756141</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Perhaps a delay of 5 minutes or so could be added to the action to give people more than enough time to correct a mistake without sending the email.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That sounds like we'd need to leverage the cron API for this, similar to how scheduling posts works. Now that I think about it, it could be a great use case for a potential notifications API.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36296 (Docs: add missing docs to WP_oEmbed class) closed</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 14 May 2016 17:14:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36296#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36296#comment:7/1463246060762523</guid>
      <description>fixed: &lt;p&gt;
@swissspidy Yeah, I think this was probably meant to be closed on 4.5. Closing now. New tickets for any other issues.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36767 (oEmbed performance optimisation) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 17:01:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36767#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36767#comment:2/1463245296779785</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31920 (oEmbed: Support YouTube timestamps as hashes) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 16:58:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31920#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31920#comment:3/1463245139261040</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36839 (Locale stylesheet loaded early for embeds) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 16:57:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36839#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36839#comment:1/1463245049591051</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hey Justin, thanks for opening this ticket.
&lt;/p&gt;
&lt;p&gt;
Definitely looks a bit off. Will have a closer look at this tomorrow as there's a contributor day going on here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34115 (oEmbed not working on author page without posts) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 16:55:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34115#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34115#comment:7/1463244917974969</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36296 (Docs: add missing docs to WP_oEmbed class) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 16:54:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36296#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36296#comment:6/1463244867976548</guid>
      <description>&lt;p&gt;
@DrewAPicture Anything else here that needs to be covered?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36297 (Docs: add missing docs to WP_oEmbed_Controller class) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 16:53:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36297#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36297#comment:3/1463244829213942</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36767 (oEmbed performance optimisation) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 16:51:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36767#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36767#comment:1/1463244703979529</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34848 (Add support for updating post meta in bulk) updated</title>
      
        <dc:creator>patrickgarman</dc:creator>

      <pubDate>Sat, 14 May 2016 16:51:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34848#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34848#comment:20/1463244696514502</guid>
      <description>&lt;p&gt;
I think I've mentioned before, and I'll preface again with "I'm not a DBA, this isn't my expertise, but based on the work I've been doing this is the experience I've had" line like usual.
&lt;/p&gt;
&lt;p&gt;
I've included some basic info around the experience I've had with reducing raw volume of inserts by combining them in point 3 on my comment here: &lt;a class="ext-link" href="https://github.com/woothemes/woocommerce/issues/9735#issuecomment-168032658"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/woothemes/woocommerce/issues/9735#issuecomment-168032658&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
tl;dr - went from 600 inserts per minute down to 200 inserts per minute (same volume of data, just combining inserts) and the query time itself went up on average of ~.1ms
&lt;/p&gt;
&lt;p&gt;
This data is from a high volume WooCommerce site, and New Relic is the tool used to pull this specific data. I'm assuming the tool here is accurate, I've not found or heard anything to believe it isn't accurate. To further expand on this... The reason I started at that time focusing on reducing the query volume is the volume of orders being inserted into the database (this was cyber monday) was causing the postmeta table to lock up and would bring the site to a halt. Database server loads were over 120 (32 cpu, 120GB ram). Since then and after I implemented these changes (and nothing else specifically related to reducing postmeta related things) we've experienced even higher loads where we no longer were bottlenecked by the postmeta table in this way.
&lt;/p&gt;
&lt;p&gt;
I'll add here about transactions (again not being an expert here either) that WooCommerce uses transactions already. When an order is being created (see links below), this has caused issues at times under load. When the database server locks up like it has on occasion due to volume what I'm finding is the postmeta of an order gets inserted yet the record in the posts table will not exist. Now, in theory a postmeta will NEVER get inserted if the post itself doesn't get inserted, there isn't a post_id to be had in this case. Yet something is happening in that transaction to not insert the posts record yet does complete the postmeta records.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/woothemes/woocommerce/blob/master/includes/class-wc-checkout.php#L181"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/woothemes/woocommerce/blob/master/includes/class-wc-checkout.php#L181&lt;/a&gt;
&lt;a class="ext-link" href="https://github.com/woothemes/woocommerce/blob/master/includes/wc-core-functions.php#L1097"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/woothemes/woocommerce/blob/master/includes/wc-core-functions.php#L1097&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I look forward to hearing more about the stats and maybe more about what someone who knows what they doing here thinks of the data, experiences, and issues I've run into.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36304 (Remove automatic embed support for Google Video, it's dead) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 16:50:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36304#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36304#comment:5/1463244642309876</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34737 (Add Facebook oEmbed support) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 16:49:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34737#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34737#comment:11/1463244593819591</guid>
      <description>&lt;p&gt;
Still the same problem with the &lt;code&gt;height&lt;/code&gt; property for posts.
&lt;/p&gt;
&lt;p&gt;
@pento Do you know if there are still some Automattic folks working with Facebook on embeds? Do Facebook embeds work on WordPress.com?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32151 (Add TuneIn to oEmbed whitelist) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 16:46:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32151#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32151#comment:15/1463244419414635</guid>
      <description>&lt;p&gt;
@ccoffman: Any news here?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #4328,​34489 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 16:44:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=4328%2C34489</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=4328%2C34489/1463244290081605</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/4328" title="#4328: enhancement: Redirect Old Slugs feature needs to redirect slugs for pages, not just ... (new)"&gt;#4328&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #32553 (Corrupted embeds) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 16:44:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32553#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32553#comment:8/1463244244435494</guid>
      <description>&lt;p&gt;
@kranzoky Thanks for your feedback!
&lt;/p&gt;
&lt;p&gt;
It's hard to tell why exactly the embeds didn't work. Previously on this ticket there were some plugin recommendations that would help you (and us) to debug the issue.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Why would some oEmbeds in my post be getting corrupted?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It could have simply been because of twitter not responding for a brief moment
&lt;/p&gt;
&lt;p&gt;
It makes sense that it only worked after a couple of tries, because errors are cached too. There's a ticket about improving caching: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/30720" title="#30720: enhancement: In editor, add a button to refresh/invalidate (oEmbed) embeds cache (new)"&gt;#30720&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I think it makes sense to pursue that ticket and close this one here. Any objections?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36839 (Locale stylesheet loaded early for embeds) created</title>
      
        <dc:creator>greenshady</dc:creator>

      <pubDate>Sat, 14 May 2016 16:38:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36839</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36839/1463243933220909</guid>
      <description>&lt;p&gt;
Typically, locale stylesheets get loaded after other styles have been output when hooked to &lt;code&gt;wp_head&lt;/code&gt;.  However, with embeds on the &lt;code&gt;embed_head&lt;/code&gt; hook, the locale stylesheet is output earlier.  This can cause locale stylesheets to get overwritten with CSS applied later.
&lt;/p&gt;
&lt;p&gt;
Here's a comparison of the priorities between the &lt;code&gt;wp_head&lt;/code&gt; and &lt;code&gt;embed_head&lt;/code&gt; hooks:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action( 'wp_head', 'wp_print_styles', 8 );
add_action( 'wp_head', 'locale_stylesheet' );
add_action( 'embed_head', 'wp_print_styles', 20 );
add_action( 'embed_head', 'locale_stylesheet' );
&lt;/pre&gt;&lt;p&gt;
The &lt;code&gt;locale_stylesheet&lt;/code&gt; action should get a later priority on &lt;code&gt;embed_head&lt;/code&gt; for consistency.
&lt;/p&gt;
&lt;p&gt;
This has been in core since 4.4, but it's probably been overlooked because most theme authors were not dealing with it.  Now that themes can have custom embed templates, this could be a problem.  I know it is for some of my themes that have locale-specific stylesheets.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36819 (Load plugin.php earlier in wp-settings.php) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Sat, 14 May 2016 16:23:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36819#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36819#comment:6/1463242994732372</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34928 (Making wordpress embeds responsive is a better idea) closed</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 16:00:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34928#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34928#comment:3/1463241626522935</guid>
      <description>wontfix</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #35067 (Embed support for Recent Posts / Static Pages / Archive Pages) closed</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 15:59:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35067#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35067#comment:4/1463241550114762</guid>
      <description>maybelater: &lt;blockquote class="citation"&gt;
&lt;p&gt;
You can get enough data to embedding from almost every single site, opengraph for instance.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
You could check if this page have a meta description and then use it as a fallback, for instance.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
oEmbed for archives isn't currently feasible possible mainly because of the lack of content that could be shown in this embed (as mentioned before). The &lt;em&gt;embedded&lt;/em&gt; site doesn't have any idea about Open Graph tags or meta tags on the current page.
&lt;/p&gt;
&lt;p&gt;
Link previews using Open Graph have previously been suggested in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32955" title="#32955: feature request: Add Functionality for Facebook/Google Style Link Previews (closed: duplicate)"&gt;#32955&lt;/a&gt;, but that doesn't have much to do with oEmbed anyway.
&lt;/p&gt;
&lt;p&gt;
I would currently consider both things to be plugin territory.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36239 (wp-embed image size is using the smallest image or it sometimes uses ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 15:50:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36239#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36239#comment:2/1463241059771513</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hey @carasmo,
&lt;/p&gt;
&lt;p&gt;
Welcome to WordPress Trac and thanks for creating this ticket. Sorry for not having received a reply in quite a while.
&lt;/p&gt;
&lt;p&gt;
Could you tell us which image dimensions are configured under Settings -&amp;gt; Media? Also, could you perhaps upload an example image this bug happens with?
&lt;/p&gt;
&lt;p&gt;
It would help a lot reproducing this issue.
&lt;/p&gt;
&lt;p&gt;
Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35657 (Image height calculation not always available on body.load) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 15:48:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35657#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35657#comment:1/1463240897836980</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Seems like removing the &lt;code&gt;height: auto&lt;/code&gt; part would resolve the issue, though I'm not sure if it'll introduce other bugs, e.g. with rounding errors when resizing the image.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #28507,​36274 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 15:43:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=28507%2C36274</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=28507%2C36274/1463240626752473</guid>
      <description>duplicate: &lt;p&gt;
Thanks for your patch, @thomaswm!
&lt;/p&gt;
&lt;p&gt;
Since &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/28507" title="#28507: task (blessed): Secure oEmbeds (accepted)"&gt;#28507&lt;/a&gt; is an ongoing ticket for secure embeds, I am closing this ticket here as a duplicate. Of course the patch is perfectly fine and we can continue working on that in the other ticket.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #28507 (Secure oEmbeds) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 15:42:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28507#comment:67</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28507#comment:67/1463240524761534</guid>
      <description>&lt;p&gt;
There's a patch on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36274" title="#36274: enhancement: Youtube oEmbed handlers should be HTTPS (closed: duplicate)"&gt;#36274&lt;/a&gt; addressing YouTube and Vimeo, whose API endpoints are currently configured with &lt;code&gt;http://&lt;/code&gt;, but redirect to &lt;code&gt;https://&lt;/code&gt; versions anyway. We should add this for 4.6.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36784.2.diff attached to Ticket #36784</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Sat, 14 May 2016 14:44:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36784/36784.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36784/36784.2.diff/1463237045324402</guid>
      <description>&lt;p&gt;
Didn't look closely.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>36784.diff attached to Ticket #36784</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Sat, 14 May 2016 14:40:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36784/36784.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36784/36784.diff/1463236827240777</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22889 (Reconsider no-JS ?replytocom= links) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Sat, 14 May 2016 14:34:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22889#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22889#comment:23/1463236452408736</guid>
      <description>&lt;p&gt;
Can't we resolve this with &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/34106" title="#34106: defect (bug): Comments should have real permalinks (new)"&gt;#34106&lt;/a&gt; ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36687 (Feature to override WP_Query to provide results from other source) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 14 May 2016 14:08:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36687#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36687#comment:11/1463234906104816</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
The only thing that would make this more useful is not requiring WP_Query to return WP_Posts. Right now all objects returned from posts_pre_query are wrapped in WP_Post.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This isn't quite right. The way &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36687/36687.diff" title="Attachment '36687.diff' in Ticket #36687"&gt;36687.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36687/36687.diff" title="Download"&gt;​&lt;/a&gt; is written, the &lt;code&gt;fields&lt;/code&gt; parameter is still respected, and your &lt;code&gt;posts_pre_query&lt;/code&gt; callback should be cognizant of &lt;code&gt;fields&lt;/code&gt;. In other words, if &lt;code&gt;fields=ids&lt;/code&gt;, your &lt;code&gt;posts_pre_query&lt;/code&gt; callback can return an array of IDs, and it'll work as you'd expect; if you want it to return full post objects, you can either build pseudo-post objects in your callback, or return IDs and let WP fetch the full posts from the database (&lt;code&gt;array_map( 'get_post', $this-&amp;gt;posts )&lt;/code&gt;).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As for the query parameter. It is not about disabling WP_Query's database query but to avoid making the external call. For example when indexing posts for the solr server we need to explicitly use the database. Otherwise we cannot read the posts. That's why I think that we should have the option there. The default should be that we want make the external call since the cases that we require explicit database use are less.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
When I said that it's about "disabling the database query", I don't mean disabling the database altogether. Obviously, your external appliance has to get the data from somewhere. I just mean that what the flag really does is prevents this specific instance of &lt;code&gt;WP_Query&lt;/code&gt; from connecting to the database to get post IDs. I'm still not convinced that an option will add anything of value - even if there is something like an &lt;code&gt;external&lt;/code&gt; or &lt;code&gt;dont_query_database&lt;/code&gt; flag, you'll still have to provide the &lt;code&gt;posts&lt;/code&gt; data somehow; and since that "somehow" will likely be with a filter callback, it makes sense to use *only* a filter callback instead of having a two-part solution.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Besides from settings the $query-&amp;gt;found_posts I cannot figure out any other way.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It'd be possible to add either a &lt;code&gt;query_var&lt;/code&gt; that lets you set an explicit &lt;code&gt;found_posts&lt;/code&gt; value,
or a specific filter that bypasses the &lt;code&gt;found_posts&lt;/code&gt; query (much like &lt;code&gt;posts_pre_query&lt;/code&gt; - &lt;code&gt;posts_pre_set_found_posts&lt;/code&gt; or something like that). But they would fundamentally do the same thing as &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36687/36687.diff" title="Attachment '36687.diff' in Ticket #36687"&gt;36687.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36687/36687.diff" title="Download"&gt;​&lt;/a&gt;, so all things being equal, I'd go with the more minimal solution.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36687 (Feature to override WP_Query to provide results from other source) updated</title>
      
        <dc:creator>jpdavoutian</dc:creator>

      <pubDate>Sat, 14 May 2016 12:35:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36687#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36687#comment:10/1463229310217244</guid>
      <description>&lt;p&gt;
@boonebgorges I have to confess that the variable names I used are not very descriptive and sorry for not having any comments in the changes. I forgot completely about them.
&lt;/p&gt;
&lt;p&gt;
As for the query parameter. It is not about disabling WP_Query's database query but to avoid making the external call. For example when indexing posts for the solr server we need to explicitly use the database. Otherwise we cannot read the posts. That's why I think that we should have the option there. The default should be that we want make the external call since the cases that we require explicit database use are less. Maybe a better name and comments in code will help.
&lt;/p&gt;
&lt;p&gt;
As for the set_found_posts(). You are right that the number of posts comes with the results, even with paging. So there is no reason to make an extra call if we have this number on hand. Besides from settings the $query-&amp;gt;found_posts I cannot figure out any other way.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36753 (Use system fonts for a faster, more native-feeling admin) updated</title>
      
        <dc:creator>mattmiklic</dc:creator>

      <pubDate>Sat, 14 May 2016 12:26:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36753#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36753#comment:27/1463228795465035</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Awesome, currently we then have two workarounds, switch to the non-shorthand &lt;code&gt;font-family&lt;/code&gt; or continue using the shorthand &lt;code&gt;font&lt;/code&gt; and quoting &lt;code&gt;"-apple-system"&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Quoting &lt;code&gt;-apple-system&lt;/code&gt; will make that property fail to work in Safari; it has to be unquoted to work properly. That's why my plugin uses the &lt;code&gt;font-family&lt;/code&gt; property instead of the &lt;code&gt;font&lt;/code&gt; shorthand. That method works in all browsers I've tested.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36824.1.patch attached to Ticket #36824</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Sat, 14 May 2016 11:25:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36824/36824.1.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36824/36824.1.patch/1463225108587321</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36687 (Feature to override WP_Query to provide results from other source) updated</title>
      
        <dc:creator>tlovett1</dc:creator>

      <pubDate>Sat, 14 May 2016 10:09:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36687#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36687#comment:9/1463220585194393</guid>
      <description>&lt;p&gt;
Patch looks good Boone. The only thing that would make this more useful is not requiring WP_Query to return WP_Posts. Right now all objects returned from posts_pre_query are wrapped in WP_Post.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29748 (Mark strings for screen readers) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Sat, 14 May 2016 09:52:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29748#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29748#comment:11/1463219573787789</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30462 (Test multiple MySQL versions on Travis) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Sat, 14 May 2016 08:44:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30462#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30462#comment:15/1463215467639207</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Travis CI now supports cron jobs for scheduling jobs, this could be a &lt;em&gt;once a day&lt;/em&gt; build rather than per commit for testing a large matrix of database versions without being overly time consuming for the existing build matrix. This build matrix could then include alternate locale collations and character sets.
&lt;/p&gt;
&lt;p&gt;
To perform a said &lt;em&gt;once daily&lt;/em&gt; Travis CI build matrix we'd use a separate GitHub repo specifically for this purpose with a custom &lt;code&gt;.travis.yml&lt;/code&gt; defining this build matrix.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="ext-link" href="https://docs.travis-ci.com/user/cron-jobs/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://docs.travis-ci.com/user/cron-jobs/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34633 (X-pingback header should be generated the same as rel="pingback" link) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Sat, 14 May 2016 08:22:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34633#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34633#comment:1/1463214141885766</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I can see good reasons to allow this to be filtered uniformly. One being the possibility of delegating pingback processing to a service function outside of WordPress itself.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>34633.diff attached to Ticket #34633</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Sat, 14 May 2016 08:19:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34633/34633.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34633/34633.diff/1463213995197116</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29748 (Mark strings for screen readers) updated</title>
      
        <dc:creator>mercime</dc:creator>

      <pubDate>Sat, 14 May 2016 08:11:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29748#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29748#comment:10/1463213501856261</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>29748.patch attached to Ticket #29748</title>
      
        <dc:creator>mercime</dc:creator>

      <pubDate>Sat, 14 May 2016 08:11:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29748/29748.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29748/29748.patch/1463213477899868</guid>
      <description>&lt;p&gt;
First batch of translator comments for accessibility text
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #31384 (Pingback does not work for schemeless URLs) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Sat, 14 May 2016 08:06:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31384#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31384#comment:5/1463213199811398</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>31384.diff attached to Ticket #31384</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Sat, 14 May 2016 08:05:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31384/31384.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31384/31384.diff/1463213149056039</guid>
      <description>&lt;p&gt;
Switch to wp_parse_url which has backward compatibility
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36753 (Use system fonts for a faster, more native-feeling admin) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Sat, 14 May 2016 08:05:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36753#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36753#comment:26/1463213137120518</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36753#comment:24" title="Comment 24"&gt;helen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36753#comment:21" title="Comment 21"&gt;walbo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36753#comment:17" title="Comment 17"&gt;netweb&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Been digging around trying to find if this behavior is a known issue or not, @walbo you didn't happen to see this documented anywhere did you?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Didn't find anything on it. Looks like the problem is the hyphen at the start of the font name. Tried to quote &lt;code&gt;-apple-system&lt;/code&gt; and that seem to solve the problem as well.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I've pinged the PM for Edge about this (Patrick Kettner, he reached out to me a while back to talk any WP issues or feature requests for Edge) to see if he has any insight. Yay collaboration :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Awesome, currently we then have two workarounds, switch to the non-shorthand &lt;code&gt;font-family&lt;/code&gt; or continue using the shorthand &lt;code&gt;font&lt;/code&gt; and quoting &lt;code&gt;"-apple-system"&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I'm leaning towards later and quoting &lt;code&gt;"-apple-system"&lt;/code&gt;, maybe get that into /trunk so further iterations and bug/regression testing can occur?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36818 (Export filter for post meta) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Sat, 14 May 2016 07:57:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36818#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36818#comment:3/1463212646664617</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related, possible duplicate: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/33461" title="#33461: enhancement: Allow filtering of meta_value in exporter (new)"&gt;#33461&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3052 (pingback_ping() function displays wrong content in pingback-display in ...) closed</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Sat, 14 May 2016 07:55:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3052#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3052#comment:25/1463212525985252</guid>
      <description>invalid: &lt;p&gt;
Suggesting that the code for generating the excerpt itself should be refreshed, and I'm suggesting this be closed in favor of a refresh on that.
&lt;/p&gt;
&lt;p&gt;
The code on this would also need to be refreshed due changes in the function.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36838 (Invalid argument supplied for foreach() in ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 07:34:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36838#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36838#comment:3/1463211261328538</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hey @MarkRH,
&lt;/p&gt;
&lt;p&gt;
Thanks for creating this ticket!
&lt;/p&gt;
&lt;p&gt;
It indeed looks like &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36693" title="Embeds: Introduce embed templates into the template hierarchy via ..."&gt;[36693]&lt;/a&gt; broke this again. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34561" title="#34561: task (blessed): Abstract some embed template code into functions (closed: fixed)"&gt;#34561&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Looks like the problem was that the patches on that ticket were mostly made before &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35237" title="#35237: defect (bug): Invalid argument supplied for foreach() in ... (closed: fixed)"&gt;#35237&lt;/a&gt; and the bugfix wasn't incorporated in a new patch afterwards.
&lt;/p&gt;
&lt;p&gt;
The good thing is, we don't need to backport this to 4.4, but only to 4.5.3.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35344 (Strange pagination issue on front page after 4.4.1 update) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 14 May 2016 07:26:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35344#comment:77</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35344#comment:77/1463210789953270</guid>
      <description>&lt;p&gt;
@nimrodlflores Hey there, since this ticket was closed on a completed milestone, please open a new ticket(mentioning this one) or share your issues on &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/35847" title="#35847: defect (bug): Issue with blog roll pagination on static frontpage (new)"&gt;#35847&lt;/a&gt; if it sounds like the same bug.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35344 (Strange pagination issue on front page after 4.4.1 update) updated</title>
      
        <dc:creator>nimrodlflores</dc:creator>

      <pubDate>Sat, 14 May 2016 07:19:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35344#comment:76</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35344#comment:76/1463210349975719</guid>
      <description>&lt;p&gt;
It has been more than 4 months since my last post, we're on 4.5.2 already but I still experience the same thing. I had to go back to 4.3.4 again. :(
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36831 (wp_normalize_path in plugin_dir_path) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 14 May 2016 06:40:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36831#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36831#comment:3/1463208006439419</guid>
      <description>&lt;p&gt;
What's the expectation for having it using &lt;code&gt;/&lt;/code&gt;?
&lt;/p&gt;
&lt;p&gt;
I actually support adding it, although actually feel the existing result is the &lt;em&gt;intended&lt;/em&gt; result, it's what's contained within &lt;code&gt;ABSPATH&lt;/code&gt; and works perfectly fine on a windows system.
&lt;/p&gt;
&lt;p&gt;
We don't really change/add things for the sake of adding it though, having a reason for why you expect it one way or another makes things much more valid.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5130 (Linking to multiple posts on your site breaks pingback due to comment ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 14 May 2016 06:20:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5130#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5130#comment:18/1463206825891018</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-comments by dshanske. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-comments/p1463206823000409"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5130 (Linking to multiple posts on your site breaks pingback due to comment ...) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Sat, 14 May 2016 06:16:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5130#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5130#comment:17/1463206610304192</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The proposed patch passes the full comment data to the comment_flood hook so the flood handling function can handle checking against multiple pings to the same URL as a flood and passes the comment type to the throttle filter to allow for different limits to be set based on comment type.
&lt;/p&gt;
&lt;p&gt;
As commented on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25141" title="#25141: defect (bug): Comment flood filter prevents to receive more than one pingback at once (closed: duplicate)"&gt;#25141&lt;/a&gt;, there are a number of possible solutions to the problem of multiple pings being received at the same time, either from the same site or a third-party and how it best be handled may be user preference.
&lt;/p&gt;
&lt;p&gt;
At this time, being as we haven't reached a conclusion in nearly a decade since this was first reported, I'm suggesting we add support for plugins to address this externally and for possible future handling within Core itself.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>5130.diff attached to Ticket #5130</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Sat, 14 May 2016 06:04:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5130/5130.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5130/5130.diff/1463205848005119</guid>
      <description>&lt;p&gt;
Add Support to Existing Functions to Rate Limit Differently Based on Pingback
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #34848 (Add support for updating post meta in bulk) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 14 May 2016 04:26:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34848#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34848#comment:19/1463199979501705</guid>
      <description>&lt;p&gt;
Thanks for the additional thoughts, @patrickgarman.
&lt;/p&gt;
&lt;p&gt;
I've spent some time thinking more about this. My first thought is that it probably does make more sense to go with different function names, rather than trying to wedge this functionality into the existing functions. The function signatures and return values would be too different to make any sense.
&lt;/p&gt;
&lt;p&gt;
That being said, I've run a bunch of tests, and have found mixed performance results. In many cases, looping over &lt;code&gt;add_metadata()&lt;/code&gt; is actually much *faster* than running a single &lt;code&gt;INSERT INTO&lt;/code&gt; with lots of values. &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34848/meta-bulk.php" title="Attachment 'meta-bulk.php' in Ticket #34848"&gt;meta-bulk.php&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34848/meta-bulk.php" title="Download"&gt;​&lt;/a&gt; shows what I've been testing - meant to be run &lt;code&gt;$ wp eval-file /path/to/meta-bulk.php&lt;/code&gt;. Comment stuff out to test &lt;code&gt;add_metadatas()&lt;/code&gt; vs an &lt;code&gt;add_metadata()&lt;/code&gt; loop. Obviously, these tests are not scientific, but a bit of testing shows that bulk &lt;code&gt;INSERT&lt;/code&gt; statements are on the magnitude of 2x *slower*, though depending on the size of the &lt;code&gt;meta_value&lt;/code&gt; and &lt;code&gt;meta_key&lt;/code&gt; strings the memory footprint can be somewhat less.
&lt;/p&gt;
&lt;p&gt;
I also found that behavior of &lt;code&gt;add_metadatas()&lt;/code&gt; tended to get pretty weird at very large sizes. PHP had a hard time dealing with string concatenation after a certain length.
&lt;/p&gt;
&lt;p&gt;
Am I doing something wrong? Maybe there's a kind of metadata payload that I haven't thought of, where a bulk &lt;code&gt;INSERT&lt;/code&gt; performs much better.
&lt;/p&gt;
&lt;p&gt;
You'll also see that I experimented with wrapping the &lt;code&gt;add_metadata()&lt;/code&gt; loop in a transaction. This *did* have a noticeable performance benefit - depending on the nature of the metadata, anywhere from a 20-40% decrease in time elapsed. I would be somewhat wary of introducing a function for this into core, though - transactions are vulnerable to data loss if they're interrupted, and for certain kinds of payload, there can be performance problems during the commit. There might be benefits to using transactions like this in some places (I'm thinking of the importer - @rmccue have you thought about this kind of thing?), but it would have to be in situations where the routine is idempotent or has other failsafes built in. There might also be considerations related to database replication and the like that make this improvement the kind of thing that ought to be handled on an implementation-specific basis.
&lt;/p&gt;
&lt;p&gt;
@pento Do you have any wisdom to impart about the potential benefits of (a) large &lt;code&gt;INSERT INTO ... VALUES&lt;/code&gt; queries, and/or (b) running large numbers of small &lt;code&gt;INSERT&lt;/code&gt; or &lt;code&gt;UPDATE&lt;/code&gt; queries inside of a transaction for the performance benefit?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>meta-bulk.php attached to Ticket #34848</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 14 May 2016 04:14:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34848/meta-bulk.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34848/meta-bulk.php/1463199283858250</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>36487.diff attached to Ticket #36487</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 14 May 2016 03:17:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36487/36487.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36487/36487.diff/1463195863948162</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36487 (Hierarchical comments do not display on second call of comments_template) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 14 May 2016 03:17:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36487#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36487#comment:1/1463195846500264</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@cookiesowns Thanks very much for the report and the preliminary diagnosis. You are quite correct.
&lt;/p&gt;
&lt;p&gt;
To spell out the problem a bit more: The &lt;code&gt;fill_descendants()&lt;/code&gt; method builds its SQL strings out of the SQL strings built in &lt;code&gt;get_comment_ids()&lt;/code&gt;. But if the main comment query is cached, then &lt;code&gt;get_comment_ids()&lt;/code&gt; is never called, and those strings are never built. Thus, when you run the exact same comment query twice, the first time primes the &lt;code&gt;get_comment_ids&lt;/code&gt; cache, and the second one hits that cache, resulting in a broken &lt;code&gt;fill_descendants()&lt;/code&gt; query.
&lt;/p&gt;
&lt;p&gt;
Coming up with a "correct" fix for this is pretty difficult. In theory, I suppose it would be cleanest if the &lt;code&gt;fill_descendants()&lt;/code&gt; queries were built totally independently of the &lt;code&gt;get_comment_ids()&lt;/code&gt; queries. But this would require a fairly extensive rewrite of &lt;code&gt;WP_Comment_Query&lt;/code&gt;, which is more than I can stomach at the moment.
&lt;/p&gt;
&lt;p&gt;
I propose &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36487/36487.diff" title="Attachment '36487.diff' in Ticket #36487"&gt;36487.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36487/36487.diff" title="Download"&gt;​&lt;/a&gt; as an alternative solution. It's a bit tricky, but it is also much more localized - and it has the potential for auxiliary benefit. Here's the breakdown:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;fill_descendants()&lt;/code&gt; crawls down each step of the hierarchy and runs a single SQL query to grab the child comments of a given level.
&lt;/li&gt;&lt;li&gt;I've added a parent-child relationship cache. So, the first time &lt;code&gt;fill_descendants()&lt;/code&gt; is run for a given set of query_vars, each located comment gets an array of its child-comment IDs stored in the cache.
&lt;/li&gt;&lt;li&gt;Then, on subsequent calls to &lt;code&gt;fill_descendants()&lt;/code&gt;, the query at each level of the hierarchy only queries for parents whose children are not found in the cache. For queries that are exact duplicates, *all* parents in the hierarchy should already be cached. So no additional SQL queries are run.
&lt;/li&gt;&lt;li&gt;Note that the cache key has to be built out of the &lt;code&gt;query_vars&lt;/code&gt;, since the hierarchy being cached depends on the params passed to &lt;code&gt;WP_Comment_Query&lt;/code&gt;. (For example, running a query that includes &lt;code&gt;comment__not_in&lt;/code&gt; might result in a cached hierarchy that is incomplete for subsequent queries that don't contain &lt;code&gt;comment__not_in&lt;/code&gt;.) In order to make this reliable, I had to make a change to the logic of &lt;code&gt;get_comment_ids()&lt;/code&gt; so that that method never changes the &lt;code&gt;query_vars&lt;/code&gt; array (see the bit about &lt;code&gt;'parent'&lt;/code&gt;).
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Strictly speaking, this doesn't directly address the technique used for building the SQL strings in &lt;code&gt;fill_descendants()&lt;/code&gt;. The fix is indirect: the &lt;code&gt;fill_descendants()&lt;/code&gt; queries should only be run when the &lt;code&gt;get_comment_child_ids&lt;/code&gt; caches are empty, but anytime these caches are empty, it should be the case that &lt;code&gt;get_comment_ids()&lt;/code&gt; has also been run, and thus the SQL strings available. As an added benefit, if the day ever comes when the 'comment' cache becomes persistent, &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36487/36487.diff" title="Attachment '36487.diff' in Ticket #36487"&gt;36487.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36487/36487.diff" title="Download"&gt;​&lt;/a&gt; will result in meaningful performance enhancements across the board.
&lt;/p&gt;
&lt;p&gt;
Phew - it's a bit complicated. @cookiesowns, could you think about this logic, and test the patch to ensure it's behaving as you'd expect? (I could also use a review from someone else familiar with this rat's nest - maybe @rachelbaker?)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33055 (Support Parallel HTTP Requests in WP_Http, et al) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Sat, 14 May 2016 02:18:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33055#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33055#comment:33/1463192307128943</guid>
      <description>&lt;p&gt;
We now have Requests in core, but we still need the additional layer in WP_HTTP to support parallel requests without requiring use of Requests directly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30180 (wp_get_attachment_image_src does not return alt or meta) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Sat, 14 May 2016 02:13:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30180#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30180#comment:9/1463191980151407</guid>
      <description>&lt;p&gt;
I think this is a great plan. A few questions come to mind:
&lt;/p&gt;
&lt;p&gt;
Which attributes should we return?
&lt;/p&gt;
&lt;p&gt;
Is the purpose of the &lt;code&gt;wp_get_attachment_image_data()&lt;/code&gt; function to return all data about the attachment image, or only what's required to generate the &lt;code&gt;img&lt;/code&gt; element? E.g., should we return the caption? Should we return the internal image title (as opposed to the title attribute)? Should we return any custom meta fields available for the attachment?
&lt;/p&gt;
&lt;p&gt;
I'm inclined to think that it should only be the fields needed for the &lt;code&gt;img&lt;/code&gt; element, but we should probably decide that before building a patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36262 (Page Restore Autosave Not Working) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sat, 14 May 2016 01:06:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36262#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36262#comment:8/1463187982728387</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36262 (Page Restore Autosave Not Working) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sat, 14 May 2016 01:06:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36262#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36262#comment:7/1463187974825281</guid>
      <description>&lt;p&gt;
@jawad96 Sorry I have been occupied with other things, getting back to revisions/autosave next week and will update here with what I find.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36838 (Invalid argument supplied for foreach() in ...) updated</title>
      
        <dc:creator>MarkRH</dc:creator>

      <pubDate>Fri, 13 May 2016 22:46:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36838#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36838#comment:2/1463179601795552</guid>
      <description>&lt;p&gt;
I re-added that image as the featured image for that post again for debugging purposes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36838 (Invalid argument supplied for foreach() in ...) updated</title>
      
        <dc:creator>MarkRH</dc:creator>

      <pubDate>Fri, 13 May 2016 22:13:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36838#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36838#comment:1/1463177591292676</guid>
      <description>&lt;p&gt;
Thought I should add that I modified the code to keep it from happening and to log what URLs are being accessed:
&lt;/p&gt;
&lt;pre class="wiki"&gt;      if ( is_array( $meta ) ) {
         my_log('embed-content.php: - '.$_SERVER['REQUEST_URI'].' - ','/embed.log');
         if (isset($meta['sizes'])) {
   			foreach ( $meta['sizes'] as $size =&amp;gt; $data ) {
   				if ( $data['width'] / $data['height'] &amp;gt; $aspect_ratio ) {
   					$aspect_ratio = $data['width'] / $data['height'];
   					$measurements = array( $data['width'], $data['height'] );
   					$image_size   = $size;
   				}
   			}
         } else {
            $data = $meta;
				if ( $data['width'] / $data['height'] &amp;gt; $aspect_ratio ) {
					$aspect_ratio = $data['width'] / $data['height'];
					$measurements = array( $data['width'], $data['height'] );
				}
         }
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36838 (Invalid argument supplied for foreach() in ...) created</title>
      
        <dc:creator>MarkRH</dc:creator>

      <pubDate>Fri, 13 May 2016 21:56:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36838</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36838/1463176612359341</guid>
      <description>&lt;p&gt;
This is a follow-up to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35237" title="#35237: defect (bug): Invalid argument supplied for foreach() in ... (closed: fixed)"&gt;#35237&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Looks like this bug is happening again. If it was fixed, it's not now. This embed URL causes it on my blog: &lt;a class="ext-link" href="http://blog.markheadrick.com/2011/12/13/blog-updated-to-wordpress-3-3-and-other-website-changes/embed/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://blog.markheadrick.com/2011/12/13/blog-updated-to-wordpress-3-3-and-other-website-changes/embed/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It's this line of code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;foreach ( $meta['sizes'] as $size =&amp;gt; $data ) {
&lt;/pre&gt;&lt;p&gt;
The $meta array is:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Array
(
    [width] =&amp;gt; 140
    [height] =&amp;gt; 105
    [hwstring_small] =&amp;gt; height='96' width='128'
    [file] =&amp;gt; 2010/12/markrh_s2.jpg
    [image_meta] =&amp;gt; Array
        (
            [aperture] =&amp;gt; 0
            [credit] =&amp;gt;
            [camera] =&amp;gt;
            [caption] =&amp;gt;
            [created_timestamp] =&amp;gt; 0
            [copyright] =&amp;gt;
            [focal_length] =&amp;gt; 0
            [iso] =&amp;gt; 0
            [shutter_speed] =&amp;gt; 0
            [title] =&amp;gt;
        )
)
&lt;/pre&gt;&lt;p&gt;
As you can see there is no [sizes] section. Looks like the check mentioned in my previous bug is no longer in the code, if it was added. This is an older post with a single image associated with it at the single size.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #30180 (wp_get_attachment_image_src does not return alt or meta) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 13 May 2016 21:23:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30180#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30180#comment:8/1463174638722359</guid>
      <description>&lt;p&gt;
As discussed with @joedolson earlier this week, while I am 100% behind the intent of this change, I don't think that adding additional attributes to &lt;code&gt;wp_get_attachment_image_src()&lt;/code&gt; is the right approach.
&lt;/p&gt;
&lt;p&gt;
Instead, I think we should look into creating a new function that reuses the internals of &lt;code&gt;wp_get_attachement_image()&lt;/code&gt; but returns the attributes as an array of values. Possibly something like &lt;code&gt;wp_get_attachment_image_data()&lt;/code&gt; or &lt;code&gt;wp_get_attachment_image_atts()&lt;/code&gt;. We can then make &lt;code&gt;wp_get_attachment_image()&lt;/code&gt; a wrapper function that converts the output to HTML.
&lt;/p&gt;
&lt;p&gt;
Additionally, it might be helpful to have a helper function like &lt;code&gt;wp_get_attachment_image_alt()&lt;/code&gt; that can be used as a standard way of generating an &lt;code&gt;alt&lt;/code&gt; attribute when someone is rolling their own image markup.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36836 (Two different preview saving processes cause confusion with editorial teams) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Fri, 13 May 2016 21:18:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36836#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36836#comment:2/1463174324954525</guid>
      <description>&lt;p&gt;
Use-case example:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Editor goes into a draft post, makes a couple of changes to formatting
&lt;/li&gt;&lt;li&gt;Clicks Preview
&lt;/li&gt;&lt;li&gt;Decides they don't want to make those changes after all
&lt;/li&gt;&lt;li&gt;Closes preview post tab in browser, leaves post editor without explicitly saving the draft
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
The assumption by the editor (and rightfully so) is that when making a change but not explicitly saving the draft -- those changes will not be saved onto the current version of that draft until they are ready to.
&lt;/p&gt;
&lt;p&gt;
This currently happens as expected for posts that do not have the 'draft' or 'auto-draft' posts.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36837 (&lt;script&gt; tags in Admin Options page input field triggering mod_security) created</title>
      
        <dc:creator>maddogprod</dc:creator>

      <pubDate>Fri, 13 May 2016 21:15:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36837</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36837/1463174109488956</guid>
      <description>&lt;p&gt;
I have a site with a custom admin Options page. There are three fields and it's a simple form that submits to options.php. One of the inputs is to include Google AdWords Conversion code. For at least a year it's worked fine on 100+ mini-sites. With the latest updates to 4.5x we ran into a problem. When we submitted this options page we went to a 404 Error saying "options.php can not be found."
&lt;/p&gt;
&lt;p&gt;
The site host found that it triggered mod_security beause it includes &amp;lt;script&amp;gt; tags. They disabled that mod_security rule and it works fine.
&lt;/p&gt;
&lt;p&gt;
The problem is there are over 100 sites using this theme or variations that include this. Testing them, if I get rid of the &amp;lt;script&amp;gt; tags in that field it updates and works fine. Add the Conversion Code (or even one &amp;lt;script&amp;gt; tag) and it triggers mod_security with the same problem.
&lt;/p&gt;
&lt;p&gt;
The site host swears the mod_security rules haven't changed in years. So it appears that one of the WP 4.5x updates probably affected it. I can't pinpoint which one since they were updated to 4.5.2 before the problem was discovered.
&lt;/p&gt;
&lt;p&gt;
In searching I can't find any mention of this problem from other people but again, it worked for a year and suddenly doesn't on any of the sites.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36533 (Doesn't work browse media libary on Frontend) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 13 May 2016 21:14:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36533#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36533#comment:37/1463174073059654</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37433" title="External Libraries: Update jQuery to 1.12.4-pre.
This version ..."&gt;37433&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
External Libraries: Update jQuery to 1.12.4-pre.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This version includes a fix for the media library which didn't open under certain conditions. The issue was tracked upstream as "Specific table CSS style breaks &lt;code&gt;.is(':visible')&lt;/code&gt;", see &lt;a class="ext-link" href="https://github.com/jquery/jquery/issues/3065"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/jquery/jquery/issues/3065&lt;/a&gt;.&lt;br /&gt;
Also fixed: "Element which is not in page is still :visible in IE8", see &lt;a class="ext-link" href="https://github.com/jquery/jquery/issues/3043"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/jquery/jquery/issues/3043&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Changelog: &lt;a class="ext-link" href="https://github.com/jquery/jquery/compare/1.12.3...376caf4d"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/jquery/jquery/compare/1.12.3...376caf4d&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36533" title="#36533: defect (bug): Doesn't work browse media libary on Frontend (closed: fixed)"&gt;#36533&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37433]: External Libraries: Update jQuery to 1.12.4-pre.  This version ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 13 May 2016 21:14:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37433</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37433/1463174072532547</guid>
      <description>&lt;p&gt;
External Libraries: Update jQuery to 1.12.4-pre.
&lt;/p&gt;
&lt;p&gt;
This version includes a fix for the media library which didn't open under certain conditions. The issue was tracked upstream as "Specific table CSS style breaks &lt;code&gt;.is(':visible')&lt;/code&gt;", see &lt;a class="ext-link" href="https://github.com/jquery/jquery/issues/3065"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/jquery/jquery/issues/3065&lt;/a&gt;.
Also fixed: "Element which is not in page is still :visible in IE8", see &lt;a class="ext-link" href="https://github.com/jquery/jquery/issues/3043"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/jquery/jquery/issues/3043&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Changelog: &lt;a class="ext-link" href="https://github.com/jquery/jquery/compare/1.12.3...376caf4d"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/jquery/jquery/compare/1.12.3...376caf4d&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36533" title="#36533: defect (bug): Doesn't work browse media libary on Frontend (closed: fixed)"&gt;#36533&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #35981 (Convert WP_Widget into an abstract class) updated</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Fri, 13 May 2016 21:08:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35981#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35981#comment:8/1463173686652754</guid>
      <description>&lt;p&gt;
For plugin authors: If your widget does not include a widget() function, you'll need to add an noop function to prevent fatals.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4575 (Add functions to return the last-modified timestamp of a category/tag) updated</title>
      
        <dc:creator>stevenkword</dc:creator>

      <pubDate>Fri, 13 May 2016 21:07:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4575#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4575#comment:47/1463173657508762</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/4575#comment:42" title="Comment 42"&gt;obenland&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
No movement since we entered beta, let's try again in a future release.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Can we take another look at this?  Relates to (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36126" title="#36126: defect (bug): lastBuildDate in comment feed may not be empty (closed: duplicate)"&gt;#36126&lt;/a&gt;)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36836 (Two different preview saving processes cause confusion with editorial teams) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 13 May 2016 21:06:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36836#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36836#comment:1/1463173597150110</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36836 (Two different preview saving processes cause confusion with editorial teams) created</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Fri, 13 May 2016 21:05:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36836</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36836/1463173552496697</guid>
      <description>&lt;p&gt;
When &lt;code&gt;post_preview()&lt;/code&gt; runs from the post editor when editing a draft, it will save over the draft if:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The post is not locked by someone else AND
&lt;/li&gt;&lt;li&gt;You are the author of the post AND
&lt;/li&gt;&lt;li&gt;The post status is currently 'draft' or 'auto-draft'
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
However, when dealing with a published post, none of those are hit so an auto-save is created with &lt;code&gt;wp_create_post_autosave()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This establishes two separate workflows for an editorial team to be aware of:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;In some cases, when previewing a post, your changes will &lt;strong&gt;overwrite&lt;/strong&gt; the current post
&lt;/li&gt;&lt;li&gt;In other cases, when previewing a post, your changes will safely be saved to a new autoave for preview purposes
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I propose we &lt;strong&gt;always run&lt;/strong&gt; &lt;code&gt;wp_create_post_autosave()&lt;/code&gt;, even if the post is a draft, removing the &lt;code&gt;edit_post()&lt;/code&gt; call in &lt;code&gt;post_preview()&lt;/code&gt; if the post status is a draft / auto-draft. This establishes clear and consistent saving handling when previewing a post.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>36533.2.patch attached to Ticket #36533</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 13 May 2016 21:00:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36533/36533.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36533/36533.2.patch/1463173235694099</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36454 (Post Status Transition hook error if title contains quotes or special chars) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 13 May 2016 21:00:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36454#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36454#comment:1/1463173208962141</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @mikylucky - Thanks for the report, and welcome to WordPress Trac! (And sorry for the delay in responding to the ticket.)
&lt;/p&gt;
&lt;p&gt;
Can you provide the relevant code from your plugin, along with sample data that can be used to reproduce the problem? It's not clear to me why the post status transition would have anything to do with it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36618 (Move WP_Upgrader and WP_Upgrader_Skin subclasses into separate files) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 13 May 2016 20:58:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36618#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36618#comment:24/1463173128487751</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37432" title="Upgrader: Add changelog entries for when the classes were moved to its ..."&gt;37432&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Upgrader: Add changelog entries for when the classes were moved to its own file.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36618" title="#36618: enhancement: Move WP_Upgrader and WP_Upgrader_Skin subclasses into separate files (closed: fixed)"&gt;#36618&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37432]: Upgrader: Add changelog entries for when the classes were moved to its ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 13 May 2016 20:58:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37432</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37432/1463173127656875</guid>
      <description>&lt;p&gt;
Upgrader: Add changelog entries for when the classes were moved to its own file.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36618" title="#36618: enhancement: Move WP_Upgrader and WP_Upgrader_Skin subclasses into separate files (closed: fixed)"&gt;#36618&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36752 (Terms Description : Tinymce not impacted by hook tiny_mce_before_init) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 13 May 2016 20:56:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36752#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36752#comment:2/1463172990460391</guid>
      <description>invalid: &lt;p&gt;
Hi @danygold - Thanks for the report, and welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
The description field on term.php does not contain a wysiwyg editor, at least not by default. It's possible that you're using a plugin that creates a TinyMCE instance here. If so, it would be the responsibility of that plugin to use implement core hooks like &lt;code&gt;tiny_mce_before_init&lt;/code&gt;. I suggest you contact the plugin author for support with this issue.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #28322 (wpview: focus problem in Chrome making impossible to edit a visual ...) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Fri, 13 May 2016 20:31:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28322#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28322#comment:13/1463171480319989</guid>
      <description>&lt;p&gt;
Can also reproduce with the current implementation. Tested as part of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36434" title="#36434: task (blessed): Consider TinyMCE's implementation of `contenteditable=&amp;#34;false&amp;#34;` for views (closed: fixed)"&gt;#36434&lt;/a&gt;, and it also solves the issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36316 (Image editor: improve form validation errors handling) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 13 May 2016 20:15:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36316#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36316#comment:9/1463170514586562</guid>
      <description>&lt;p&gt;
Note: about the inline event handlers, the patch just uses the existing pattern. Changing them would be good but maybe a bit out of the scope of this ticket. As mentioned in the ticket description:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Not pretending to completely refactor the code behind the Image Editor, which is a bit old but still works
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36434 (Consider TinyMCE's implementation of `contenteditable="false"` for views) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 13 May 2016 20:05:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36434#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36434#comment:7/1463169935060719</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-editor by iseulde. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1463169933000442"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36531 (Default image size medium_large is not generated) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 13 May 2016 19:59:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36531#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36531#comment:9/1463169560182696</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks @ocean90. I'd like to get the patch in 4.5.3, if possible, so we at least stop this issue from spreading further. We can circle back and decide whether we do an upgrade routine in a future release. If so, we should only target installs that have &lt;code&gt;medium_large_size_h&lt;/code&gt; and &lt;code&gt;medium_large_size_w&lt;/code&gt; set to &lt;code&gt;0&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36531 (Default image size medium_large is not generated) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 13 May 2016 19:55:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36531#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36531#comment:8/1463169325487101</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1463169323000446"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36316 (Image editor: improve form validation errors handling) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 13 May 2016 19:50:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36316#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36316#comment:8/1463169020613935</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1463169018000437"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36687 (Feature to override WP_Query to provide results from other source) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 13 May 2016 19:43:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36687#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36687#comment:8/1463168598329370</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the patch, @jpdavoutian ! It looks like a step in the right direction.
&lt;/p&gt;
&lt;p&gt;
To my mind, a query parameter like 'external' doesn't seem like the best way to do this. First of all, 'external' is not really descriptive of what's happening here: it's really about disabling &lt;code&gt;WP_Query&lt;/code&gt;'s database query. In your case, this is useful because you're getting your posts from an *external* source, but that seems to me to be a step removed. In any case, regardless of the name, a boolean flag like 'external' feels weird because presumably you will want to provide the posts themselves in the &lt;code&gt;$this-&amp;gt;posts&lt;/code&gt; array. Which means that you'd have to hook to &lt;code&gt;pre_get_posts&lt;/code&gt; or something like that. So my feeling is that this feature should be implemented as a filter, since you'll have to use a filter callback no matter what.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36687/36687.diff" title="Attachment '36687.diff' in Ticket #36687"&gt;36687.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36687/36687.diff" title="Download"&gt;​&lt;/a&gt; for my iteration on &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36687/query.php.patch" title="Attachment 'query.php.patch' in Ticket #36687"&gt;query.php.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36687/query.php.patch" title="Download"&gt;​&lt;/a&gt;. I've changed the name to &lt;code&gt;posts_pre_query&lt;/code&gt;. Filter it and return anything other than &lt;code&gt;null&lt;/code&gt; to bypass the database queries. I've left most of the logic in the &lt;code&gt;fields=ids&lt;/code&gt; etc blocks, with the expectation that if you filtering &lt;code&gt;posts_pre_query&lt;/code&gt;, you'll check &lt;code&gt;fields&lt;/code&gt; first and be sure to return the correct kind of data.
&lt;/p&gt;
&lt;p&gt;
In order to make the improvement fully useful, I think it's necessary to have a more direct way to override WP's &lt;code&gt;set_found_posts()&lt;/code&gt; logic - presumably, this info is going to come from the same place as your &lt;code&gt;posts&lt;/code&gt; array. I've implemented this by adding a bail condition to &lt;code&gt;set_found_posts()&lt;/code&gt;. We could consider something more sophisticated than this, but it does the trick.
&lt;/p&gt;
&lt;p&gt;
Here's a sample implementation:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function wp36687_do_external_posts_query( $posts, WP_Query $query ) {
    $response = wp_remote_get( 'https://my-remote-data-store/foo/bar' );
    if ( 200 === wp_remote_response_code( $response ) ) {
        $response_body = wp_remote_retrieve_body( $response );
        // Assuming the API response is a JSON object containing `post_ids` and an int `found_posts`
        $response_body = json_decode( $response_body );
        $posts = $response_body-&amp;gt;post_ids;
        $query-&amp;gt;found_posts = $response_body-&amp;gt;found_posts;
    }
    return $posts;
}
add_filter( 'posts_pre_query', 'wp36687_do_external_posts_query', 10, 2 );
&lt;/pre&gt;&lt;p&gt;
Questions:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Does this seem like a sufficiently general technique for using external data in &lt;code&gt;WP_Query&lt;/code&gt;? Are there pieces that need to be flexible that are not, using this technique? Use cases that aren't covered?
&lt;/li&gt;&lt;li&gt;Is &lt;code&gt;posts_pre_query&lt;/code&gt; a reasonable filter name?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34384 (No way of preventing image_get_intermediate_size from returning ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 13 May 2016 19:33:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34384#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34384#comment:7/1463168006048837</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1463168003000406"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30180 (wp_get_attachment_image_src does not return alt or meta) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 13 May 2016 19:24:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30180#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30180#comment:7/1463167483761681</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1463167481000395"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17262 (wp_get_attachment_thumb_file should check new 'thumbnail' image size) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 13 May 2016 19:18:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17262#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17262#comment:25/1463167133076896</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1463167131000388"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14244 (Upload file types should be checked BEFORE uploading.) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 13 May 2016 19:18:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14244#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14244#comment:10/1463167093929497</guid>
      <description>&lt;p&gt;
@azaozz Can you take a look at &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/14244/14244.diff" title="Attachment '14244.diff' in Ticket #14244"&gt;14244.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/14244/14244.diff" title="Download"&gt;​&lt;/a&gt; please?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14244 (Upload file types should be checked BEFORE uploading.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 13 May 2016 19:15:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14244#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14244#comment:9/1463166953809584</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1463166952000382"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36587 (PHPUnit Tests fail with PHP7 and Imagick 3.4.x) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 13 May 2016 19:13:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36587#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36587#comment:18/1463166820399551</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1463166818000376"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36687.diff attached to Ticket #36687</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 13 May 2016 19:13:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36687/36687.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36687/36687.diff/1463166813019278</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36534 (Media Upload Issue Since 4.5 Upgrade) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 13 May 2016 19:07:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36534#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36534#comment:51/1463166451686488</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1463166449000364"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36533 (Doesn't work browse media libary on Frontend) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 13 May 2016 19:04:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36533#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36533#comment:36/1463166253149751</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1463166250000357"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23422 (Add query filter argument to register_taxonomy) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 13 May 2016 18:48:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23422#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23422#comment:13/1463165281940914</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Let's bikeshed the name of the parameter after we have a patch :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23422 (Add query filter argument to register_taxonomy) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Fri, 13 May 2016 18:45:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23422#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23422#comment:12/1463165120187685</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23422#comment:11" title="Comment 11"&gt;tifosi&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The idea is to have it as an argument to register_taxonomy() alongside &lt;code&gt;show_admin_column&lt;/code&gt;. As such i'd prefer &lt;code&gt;show_admin_filter&lt;/code&gt; with the documentation caveat that it requires &lt;code&gt;show_admin_column&lt;/code&gt; to be true/1 to work.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Why should showing the column be a prerequisite to showing a completely different part of the UI? As it is, &lt;code&gt;show_admin_filter&lt;/code&gt; is pretty vague. Filtering &lt;em&gt;what&lt;/em&gt; exactly? :-)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That would be a per-taxonomy argument. Multiple taxonomies per post type would be handled on a 1:1 basis, i.e. as arguments in respective register_taxononmy() calls.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I was talking about cases where a single taxonomy is associated with multiple post types.
&lt;/p&gt;
&lt;p&gt;
--
&lt;/p&gt;
&lt;p&gt;
Either way, a first-run patch would be good so we aren't talking in the theoretical.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36835 ("backwards compatibility" vs. "backward compatibility") closed</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Fri, 13 May 2016 18:40:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36835#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36835#comment:2/1463164821118653</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37431" title="Docs: Standardize on 'backward compatibility/compatible' nomenclature ..."&gt;37431&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Standardize on 'backward compatibility/compatible' nomenclature in core inline docs.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also use 'back-compat' in some inline comments where backward compatibility is the subject and shorthand feels more natural.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Note: 'backwards compatibility/compatibile' can also be considered correct, though it's primary seen in regular use in British English.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props ocean90.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36835" title="#36835: defect (bug): &amp;#34;backwards compatibility&amp;#34; vs. &amp;#34;backward compatibility&amp;#34; (closed: fixed)"&gt;#36835&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37431]: Docs: Standardize on 'backward compatibility/compatible' nomenclature ...</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Fri, 13 May 2016 18:40:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37431</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37431/1463164819750958</guid>
      <description>&lt;p&gt;
Docs: Standardize on 'backward compatibility/compatible' nomenclature in core inline docs.
&lt;/p&gt;
&lt;p&gt;
Also use 'back-compat' in some inline comments where backward compatibility is the subject and shorthand feels more natural.
&lt;/p&gt;
&lt;p&gt;
Note: 'backwards compatibility/compatibile' can also be considered correct, though it's primary seen in regular use in British English.
&lt;/p&gt;
&lt;p&gt;
Props ocean90.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36835" title="#36835: defect (bug): &amp;#34;backwards compatibility&amp;#34; vs. &amp;#34;backward compatibility&amp;#34; (closed: fixed)"&gt;#36835&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>36835.2.patch attached to Ticket #36835</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Fri, 13 May 2016 18:34:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36835/36835.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36835/36835.2.patch/1463164469413781</guid>
      <description>&lt;p&gt;
Moar
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36835 ("backwards compatibility" vs. "backward compatibility") updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Fri, 13 May 2016 18:09:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36835#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36835#comment:1/1463162975870723</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Jolly good. I concur.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36835.patch attached to Ticket #36835</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 13 May 2016 18:08:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36835/36835.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36835/36835.patch/1463162890425909</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36835 ("backwards compatibility" vs. "backward compatibility") created</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 13 May 2016 18:07:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36835</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36835/1463162875307985</guid>
      <description>&lt;p&gt;
I'm proposing to standardize on "backward compatibility" which seems to be the proper American spelling.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36819 (Load plugin.php earlier in wp-settings.php) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 13 May 2016 17:53:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36819#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36819#comment:5/1463162023321547</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36819#comment:2" title="Comment 2"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This could potentially affect &lt;code&gt;advance-cache.php&lt;/code&gt;, if it is preloading and changing the filter globals
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
For one such example of that, see Batcache:
&lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/batcache/trunk/advanced-cache.php#L538"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/batcache/trunk/advanced-cache.php#L538&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Batcache appears to be "safe" as it doesn't first do &lt;code&gt;$wp_filter = array()&lt;/code&gt;, however there's bound to be others that do.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The above patch is an early version of something that will help prevent this potential issue. It backups up and merges the plugin globals around advance-cache.php.  If it looks good to others, we can flesh it out with tests, documentation, etc
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10984 (If content uses the nextpage tag then only the first page is shown in feeds) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 13 May 2016 17:53:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10984#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10984#comment:46/1463162008656835</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Alright, let's do this!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10984 (If content uses the nextpage tag then only the first page is shown in feeds) updated</title>
      
        <dc:creator>stevenkword</dc:creator>

      <pubDate>Fri, 13 May 2016 17:50:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10984#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10984#comment:45/1463161857926824</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10984#comment:43" title="Comment 43"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If we were to consider this for 4.6, it would need to go in early. Any objections?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Do you think it's still early enough?  I'd like to see this go in now before it goes stale, so I'm good with milestoning it if you are.
&lt;/p&gt;
&lt;p&gt;
I can confirm that the patch still applies cleanly and that tests pass.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36819.diff attached to Ticket #36819</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 13 May 2016 17:50:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36819/36819.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36819/36819.diff/1463161823489177</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23422 (Add query filter argument to register_taxonomy) updated</title>
      
        <dc:creator>tifosi</dc:creator>

      <pubDate>Fri, 13 May 2016 17:43:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23422#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23422#comment:11/1463161420411520</guid>
      <description>&lt;p&gt;
The idea is to have it as an argument to register_taxonomy() alongside &lt;code&gt;show_admin_column&lt;/code&gt;. As such i'd prefer &lt;code&gt;show_admin_filter&lt;/code&gt; with the documentation caveat that it requires &lt;code&gt;show_admin_column&lt;/code&gt; to be true/1 to work.
&lt;/p&gt;
&lt;p&gt;
That would be a per-taxonomy argument. Multiple taxonomies per post type would be handled on a 1:1 basis, i.e. as arguments in respective register_taxononmy() calls.
&lt;/p&gt;
&lt;p&gt;
Ideally multiple active taxonomy filters could provide a 'quick' drill-down functionality within the post-type admin interface, particularly useful for custom post-types.
&lt;/p&gt;
&lt;p&gt;
Thanks
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34376 (Review the FTP credentials form) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 13 May 2016 17:39:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34376#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34376#comment:10/1463161150032551</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1463161147000993"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36833 (The username input in registration form (multisite) should have ...) updated</title>
      
        <dc:creator>iamfriendly</dc:creator>

      <pubDate>Fri, 13 May 2016 17:16:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36833#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36833#comment:1/1463159764509997</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm going to preface this with: I'd support this inclusion.
&lt;/p&gt;
&lt;p&gt;
I need to bring up the browser/platform support. &lt;code&gt;autocapitalize&lt;/code&gt; was created by apple - for iOS5. It is not part of the official HTML spec. This means it will fail any validation. It's supported in Safari (since ios5) and on google Chrome (since v 43) on both Android and iOS.
&lt;/p&gt;
&lt;p&gt;
The 'official' way to do this would be with &lt;code&gt;inputmode&lt;/code&gt; but sadly, that received very little interest from browser vendors. It's only on Firefox OS (prefixed)
&lt;/p&gt;
&lt;p&gt;
Here's the official proposal for &lt;code&gt;autocapitalize&lt;/code&gt; : &lt;a class="ext-link" href="https://github.com/mounirlamouri/html-autocapitalize/blob/master/proposal.md"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/mounirlamouri/html-autocapitalize/blob/master/proposal.md&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28322 (wpview: focus problem in Chrome making impossible to edit a visual ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 13 May 2016 17:13:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28322#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28322#comment:12/1463159637530518</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Seems the scrolling in recent Chrome versions is triggered by "overzealous" scroll-into-view.
28322.patch fixes that and some of the other problems. It also converts that bit from using &lt;code&gt;editor.dom&lt;/code&gt; to &lt;code&gt;editor.$&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
However there are more problems in recent Chrome, especially when the "Enable full-height editor and distraction-free functionality." is turned off in Screen Options. Seems we will need another ticket for these.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23422 (Add query filter argument to register_taxonomy) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Fri, 13 May 2016 17:08:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23422#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23422#comment:10/1463159308257319</guid>
      <description>&lt;p&gt;
If it's the post filter drop-downs we're talking about, e.g. &lt;a style="padding:0; border:none" href="http://cl.ly/261q2U2h2m3V/Screen%20Shot%202016-05-13%20at%2011.03.04%20AM.png"&gt;&lt;img src="http://cl.ly/261q2U2h2m3V/Screen%20Shot%202016-05-13%20at%2011.03.04%20AM.png" alt="http://cl.ly/261q2U2h2m3V/Screen%20Shot%202016-05-13%20at%2011.03.04%20AM.png" crossorigin="anonymous" title="http://cl.ly/261q2U2h2m3V/Screen%20Shot%202016-05-13%20at%2011.03.04%20AM.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Does &lt;code&gt;show_admin_column&lt;/code&gt; work for multiple taxonomy &amp;gt; post type associations? If so, I'd guess this would work similarly.
&lt;/p&gt;
&lt;p&gt;
Either way, I think something like &lt;code&gt;show_post_filter&lt;/code&gt; or even &lt;code&gt;show_admin_post_filter&lt;/code&gt; is a little closer. If you wanted to go abstract, you could use &lt;code&gt;show_content_filter&lt;/code&gt; instead.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>28322.patch attached to Ticket #28322</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 13 May 2016 17:07:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28322/28322.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28322/28322.patch/1463159222780891</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36687 (Feature to override WP_Query to provide results from other source) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Fri, 13 May 2016 16:51:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36687#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36687#comment:7/1463158268467011</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22254 ("Do you really want to log out" message after already logged out) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 13 May 2016 16:29:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22254#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22254#comment:19/1463156982435314</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by andrewgtibbetts. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1463156980004889"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Fri, 13 May 2016 15:45:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:28/1463154328515168</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't get it. Why they would have to be rewritten? Most of them are PSR-4 compatible, so you would just have to register their directories/namespaces to the autoloader.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No, unfortunately not. The nice thing about a package manager (which pretty much all of these libraries now use), is that it does not only take care of the direct dependencies, but also of the dependencies' dependencies, recursively. This is was encourages developers to reuse existing code by just pulling it in, instead of copying it somewhere.
&lt;/p&gt;
&lt;p&gt;
So, if you don't use a system like Composer, you will not only have to register that library's namespace, but also the namespace of all of its dependencies at each level and sublevel. Composer's main work is done recursively, which is a HUGE benefit.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Disagree. In my eyes, that would be a violation of the open/closed principle. Psr-4 is sure used by everyone out there but in fact it's not an optimal solution as it is case-sensitive (I mentioned this earlier). I wouldn't like to restrict developers in this way.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I was not talking about restricting the code (implementations are details to be discussed once the general direction has been set), but rather enforcing a limited set of standard approaches, instead of allowing whatever creatives (ab)uses developers can think of, only to find out months and years down the road that they created a huge mess. Think of this as the namespace version of "decisions, not options".
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Because the implementation of that autoloader is not SOLID.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not sure what you mean. Composer is certainly not 100% SOLID (I'd love to see any bigger project that is, to be honest), but I am pretty sure they come closer to that goal than the WordPress codebase. Is a specific "design pattern usage" of Composer the issue?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In my opinion, an ideal solution would be to provide a flexible core autoloader and afterwards integrating composer for dependency management by pluggin in the core autoloader to composer via a composer plugin.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not saying that we should reduce ourselves to a build-time only Composer autoloader. Having something that can be managed at runtime would be great! But I would recommend not building a custom autoloader until some preconditions have been met (PHP 5.3 with namespaces, WP autoloadable). We'll be in a better position to build the autoloader correctly from the start, and put in sane requirements (namespaces!) that avoid creating a huge conflict-ridden pool of buggy plugins. Composer would allow us to quickly have a working playground to already use and improve autoloading in Core until the preconditions have been met, while probably improving memory usage in the process.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35214 (Custom Comment Types) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Fri, 13 May 2016 15:24:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35214#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35214#comment:12/1463153054679490</guid>
      <description>&lt;p&gt;
Update: @aaroncampbell and I discussed how we can move forward with this ticket in the &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-comments/p1462986451000296"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;#core-comments&lt;/a&gt; Slack channel.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Summary:&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
The biggest issue with tackling this ticket remains the UI presentation.
&lt;/p&gt;
&lt;p&gt;
Specifically answers to questions such as:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Should each custom comment type get it's own section within the WordPress dashboard menu, like registering a custom post type?
&lt;/li&gt;&lt;li&gt;If we don't allow comment type menu sections, should all registered comment types be included in the current Comments list table?  Or should there be different list tables for each custom comment type?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
We are going to start with a proof of concept for an API that allows custom comment types to be registered, &lt;code&gt;register_comment_type()&lt;/code&gt;, which borrows heavily from the prior art in &lt;code&gt;register_post_type()&lt;/code&gt;.  The proof of concept will begin as a plugin, already setup by @aaroncampbell on Github: &lt;a class="ext-link" href="https://github.com/aaroncampbell/custom-comment-types/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/aaroncampbell/custom-comment-types/&lt;/a&gt; and the .org repo: &lt;a class="ext-link" href="https://wordpress.org/plugins/custom-comment-types/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/custom-comment-types/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36832 (Refactor for class-walker-nav-menu-edit.php) updated</title>
      
        <dc:creator>tw2113</dc:creator>

      <pubDate>Fri, 13 May 2016 15:20:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36832#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36832#comment:5/1463152808798455</guid>
      <description>&lt;p&gt;
Good to hear you're not dismayed and will instead refactor approach for consideration.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>class-walker-nav-menu-edit.3.diff attached to Ticket #36832</title>
      
        <dc:creator>iamntz</dc:creator>

      <pubDate>Fri, 13 May 2016 15:13:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36832/class-walker-nav-menu-edit.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36832/class-walker-nav-menu-edit.3.diff/1463152411443130</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36832 (Refactor for class-walker-nav-menu-edit.php) reopened</title>
      
        <dc:creator>iamntz</dc:creator>

      <pubDate>Fri, 13 May 2016 15:12:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36832#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36832#comment:4/1463152372177432</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #36832 (Refactor for class-walker-nav-menu-edit.php) closed</title>
      
        <dc:creator>iamntz</dc:creator>

      <pubDate>Fri, 13 May 2016 15:12:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36832#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36832#comment:3/1463152351640066</guid>
      <description>invalid: &lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36832#comment:2" title="Comment 2"&gt;tw2113&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I could see potential issue here, though not guaranteed, for anyone who's extended those classes. Especially if breaking things up into smaller methods for multiple parts instead of all being part of one/small handful of methods.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hmmm, you're right. I didn't take in account that case. I'll adjust the patch to not add the default hooks on &lt;span class="underline"&gt;construct, but a bit later, inside of start_el method.
&lt;/span&gt;&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36590 (POST['nav-menu-data'] breaks other POST values) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 13 May 2016 15:10:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36590#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36590#comment:41/1463152243181196</guid>
      <description>&lt;p&gt;
D'oh!
&lt;/p&gt;
&lt;p&gt;
Yeah, the second &lt;code&gt;if ( function_exists( 'array_replace_recursive' ) ) { &lt;/code&gt; check makes no sense.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #25365,​36829 batch updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 13 May 2016 14:53:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=25365%2C36829</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=25365%2C36829/1463151184613029</guid>
      <description>duplicate: &lt;p&gt;
@Jassop Thanks for the bug report. This issue is already covered in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25365" title="#25365: defect (bug): timeAgo attribute for revisions produces the wrong result due to ... (closed: fixed)"&gt;#25365&lt;/a&gt;; please see the discussion and potential solution there; I will bring this issue up to the lead devs again soon to see if its something they want to change.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #36590 (POST['nav-menu-data'] breaks other POST values) updated</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Fri, 13 May 2016 14:51:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36590#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36590#comment:40/1463151117070251</guid>
      <description>&lt;p&gt;
Tested &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36590/36590-trunk.diff" title="Attachment '36590-trunk.diff' in Ticket #36590"&gt;attachment:36590-trunk.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36590/36590-trunk.diff" title="Download"&gt;​&lt;/a&gt;, works well.
&lt;/p&gt;
&lt;p&gt;
I renamed the function &lt;code&gt;array_merge_recursive()&lt;/code&gt; to &lt;code&gt;_array_merge_recursive()&lt;/code&gt; to test &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36590/36590-4.5.2.diff" title="Attachment '36590-4.5.2.diff' in Ticket #36590"&gt;attachment:36590-4.5.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36590/36590-4.5.2.diff" title="Download"&gt;​&lt;/a&gt; as I don't have an easy way to test with a real 5.2 environment. I get a 502, which I believe is due to the logic at the beginning of &lt;code&gt;array_merge_recursive()&lt;/code&gt; causing an infinite loop:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;if ( function_exists( 'array_replace_recursive' ) ) {
    return array_replace_recursive( $base, $replacements );
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11622 (switch to PDO::prepare when we require PHP 5.1) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 13 May 2016 14:47:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11622#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11622#comment:27/1463150853602469</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by boone. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1463150851004859"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36834 (Add Reply-To header on comment notification) created</title>
      
        <dc:creator>ivanrf</dc:creator>

      <pubDate>Fri, 13 May 2016 14:32:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36834</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36834/1463149965554894</guid>
      <description>&lt;p&gt;
The comment author is currently included in the mail content of comment notifications, but would be better to have it in the email Headers too.
&lt;/p&gt;
&lt;p&gt;
Would it be possible to add to email Headers a simple "Reply-To" with the Author email when a comment notification is sent?
&lt;/p&gt;
&lt;p&gt;
I use comment moderation and sometimes a clarification from the author is needed. Adding "Reply-To" header will make easier to send a reply to the user which posted a comment.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36832 (Refactor for class-walker-nav-menu-edit.php) updated</title>
      
        <dc:creator>tw2113</dc:creator>

      <pubDate>Fri, 13 May 2016 14:24:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36832#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36832#comment:2/1463149445031688</guid>
      <description>&lt;p&gt;
I could see potential issue here, though not guaranteed, for anyone who's extended those classes. Especially if breaking things up into smaller methods for multiple parts instead of all being part of one/small handful of methods.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36833 (The username input in registration form (multisite) should have ...) created</title>
      
        <dc:creator>christinecooper</dc:creator>

      <pubDate>Fri, 13 May 2016 14:12:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36833</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36833/1463148733855615</guid>
      <description>&lt;p&gt;
When a user creates an account on a multisite network environment using iOS, it will automatically transform the first letter into capital.
&lt;/p&gt;
&lt;p&gt;
And once the user clicks the register button, they are greeted with the lovely message of "your username cannot contain capital letters".
&lt;/p&gt;
&lt;p&gt;
This can be addressed easily by adding
&lt;/p&gt;
&lt;pre class="wiki"&gt;autocapitalize="none"
&lt;/pre&gt;&lt;p&gt;
to the input field.
&lt;/p&gt;
&lt;p&gt;
I would also suggest adding autocorrect="off"... Read more here: &lt;a class="ext-link" href="http://stackoverflow.com/questions/6356074/iphone-browser-defaulting-to-uppercase-for-first-letter-of-password-fields"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://stackoverflow.com/questions/6356074/iphone-browser-defaulting-to-uppercase-for-first-letter-of-password-fields&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
You should add this attribute to all input fields essentially.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>class-walker-nav-menu-edit.2.diff attached to Ticket #36832</title>
      
        <dc:creator>iamntz</dc:creator>

      <pubDate>Fri, 13 May 2016 13:47:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36832/class-walker-nav-menu-edit.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36832/class-walker-nav-menu-edit.2.diff/1463147251567349</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36832 (Refactor for class-walker-nav-menu-edit.php) updated</title>
      
        <dc:creator>iamntz</dc:creator>

      <pubDate>Fri, 13 May 2016 13:28:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36832#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36832#comment:1/1463146107664240</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>class-walker-nav-menu-edit.diff attached to Ticket #36832</title>
      
        <dc:creator>iamntz</dc:creator>

      <pubDate>Fri, 13 May 2016 13:24:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36832/class-walker-nav-menu-edit.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36832/class-walker-nav-menu-edit.diff/1463145882858680</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36832 (Refactor for class-walker-nav-menu-edit.php) created</title>
      
        <dc:creator>iamntz</dc:creator>

      <pubDate>Fri, 13 May 2016 13:23:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36832</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36832/1463145823165076</guid>
      <description>&lt;p&gt;
Hi guys.
&lt;/p&gt;
&lt;p&gt;
I present you a &lt;em&gt;small&lt;/em&gt; refactor of the class-walker-nav-menu-edit.php class. Reasoning:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The start_el method is huge;
&lt;/li&gt;&lt;li&gt;The start_el method have a lot of responsibilities;
&lt;/li&gt;&lt;li&gt;The walker is impossible to extend without duplicating a lot of code (basically the whole start_el method)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;strong&gt;The idea behind this refactor:&lt;/strong&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;reduce responsibilities for the main method;
&lt;/li&gt;&lt;li&gt;adding a hook that allows extending fields (so will close &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/18584" title="#18584: enhancement: Nav menus need more hooks for extensibility (on admin page &amp;amp; in customizer) (new)"&gt;#18584&lt;/a&gt;);
&lt;/li&gt;&lt;li&gt;adding a hook that allows extending title &amp;amp; controls;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;strong&gt;So, what did i do?&lt;/strong&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I added a hook for: title, controls and settings fields;
&lt;/li&gt;&lt;li&gt;I extracted everything into its own method: title, submenu status, controls, settings;
&lt;/li&gt;&lt;li&gt;I extracted most conditionals into its own methods;
&lt;/li&gt;&lt;li&gt;All methods are now easier to follow (under 20 lines each)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;strong&gt;Additional work&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Depending on how this patch will be received, I'm planning to do a similar refactor for Walker_nav_menu, because it kind of have the same issues with the start_el method.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36637 (Inline linking inserts `_wp_link_placeholder`) updated</title>
      
        <dc:creator>KPeregrine</dc:creator>

      <pubDate>Fri, 13 May 2016 11:37:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36637#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36637#comment:14/1463139422241054</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36637#comment:13" title="Comment 13"&gt;adamsilverstein&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Thanks, adamsilverstein.  That works for me!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33055 (Support Parallel HTTP Requests in WP_Http, et al) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Fri, 13 May 2016 11:14:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33055#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33055#comment:32/1463138047836852</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37430" title="HTTP API: Fix compatibility with cURL &amp;lt;7.22
Ensure connections are ..."&gt;37430&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
HTTP API: Fix compatibility with cURL &amp;lt;7.22&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Ensure connections are closed after usage to fix an issue with WP.com URLs used in the tests.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Resynched from GitHub at 95518ce.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33055" title="#33055: task (blessed): Support Parallel HTTP Requests in WP_Http, et al (closed: fixed)"&gt;#33055&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37430]: HTTP API: Fix compatibility with cURL &lt;7.22  Ensure connections are ...</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Fri, 13 May 2016 11:14:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37430</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37430/1463138046630055</guid>
      <description>&lt;p&gt;
HTTP API: Fix compatibility with cURL &amp;lt;7.22
&lt;/p&gt;
&lt;p&gt;
Ensure connections are closed after usage to fix an issue with WP.com URLs used in the tests.
&lt;/p&gt;
&lt;p&gt;
Resynched from GitHub at 95518ce.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33055" title="#33055: task (blessed): Support Parallel HTTP Requests in WP_Http, et al (closed: fixed)"&gt;#33055&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #18584 (Nav menus need more hooks for extensibility (on admin page &amp; in customizer)) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 13 May 2016 11:13:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18584#comment:79</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18584#comment:79/1463138031630890</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by iamntz. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1463138028004807"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36822 (srcset is added to &lt;img /&gt; even if media file is not present in media ...) updated</title>
      
        <dc:creator>temmokan</dc:creator>

      <pubDate>Fri, 13 May 2016 10:20:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36822#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36822#comment:2/1463134855118110</guid>
      <description>&lt;p&gt;
Sample URL to illustrate the bug:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://app-sandbox.com/wordpress/2016/05/13/image-to-post.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://app-sandbox.com/wordpress/2016/05/13/image-to-post.html&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I can give any one from developers access to the above test site, so they could check the contents of the document source. Wordpress 4.5.2, vanilla, fresh install
&lt;/p&gt;
&lt;p&gt;
Thanks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36831 (wp_normalize_path in plugin_dir_path) updated</title>
      
        <dc:creator>sebastian.pisula</dc:creator>

      <pubDate>Fri, 13 May 2016 10:06:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36831#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36831#comment:2/1463133976088509</guid>
      <description>&lt;p&gt;
I use Windows and XAMPP. For code
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nb"&gt;var_dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;plugin_dir_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;__FILE__&lt;/span&gt; &lt;span class="p"&gt;));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
I have
&lt;code&gt;string(55) "D:\xampp\htdocs\wordpress\wp-content\plugins\my-plugin/"&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
but should be
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;string(55) "D:/xampp/htdocs/wordpress/wp-content/plugins/my-plugin/"&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36831 (wp_normalize_path in plugin_dir_path) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 13 May 2016 09:58:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36831#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36831#comment:1/1463133526935226</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@sebastian.pisula Can you explain why this would be needed?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36831.patch attached to Ticket #36831</title>
      
        <dc:creator>sebastian.pisula</dc:creator>

      <pubDate>Fri, 13 May 2016 09:43:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36831/36831.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36831/36831.patch/1463132600385490</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36831 (wp_normalize_path in plugin_dir_path) created</title>
      
        <dc:creator>sebastian.pisula</dc:creator>

      <pubDate>Fri, 13 May 2016 09:42:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36831</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36831/1463132538720705</guid>
      <description>&lt;p&gt;
I suggest use &lt;code&gt;wp_normalize_path&lt;/code&gt; in &lt;code&gt;plugin_dir_path&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36830 (Change wp-emoji-release.min.js query string parameter) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 13 May 2016 09:29:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36830#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36830#comment:2/1463131757162201</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33007 (Add a dashboard widget that encourages users to translate WordPress) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 13 May 2016 08:50:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33007#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33007#comment:12/1463129453994480</guid>
      <description>&lt;p&gt;
Related: &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/23348" title="#23348: enhancement: Add a &amp;#34;Contribute&amp;#34; tab to the about page (reopened)"&gt;#23348&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I think we should combine these two tickets as both are about contributing to WordPress.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33007 (Add a dashboard widget that encourages users to translate WordPress) updated</title>
      
        <dc:creator>TacoVerdo</dc:creator>

      <pubDate>Fri, 13 May 2016 08:40:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33007#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33007#comment:11/1463128843181854</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33007#comment:10" title="Comment 10"&gt;hugobaeta&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The mockups say something about a "preferred language". How is that established?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That could, for example, be based on the &lt;code&gt;HTTP_ACCEPT_LANGUAGE&lt;/code&gt; header.
&lt;a class="ext-link" href="http://www.albertcasadessus.com/2012/06/27/get-web-browser-preferrer-language-with-php-_server-variables-http_accept_language/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;This demo&lt;/a&gt; shows that pretty well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12456 (Canonical URL redirect issue with post_id/postname permalink structure) updated</title>
      
        <dc:creator>Niresh12495</dc:creator>

      <pubDate>Fri, 13 May 2016 08:38:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12456#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12456#comment:22/1463128733536386</guid>
      <description>&lt;p&gt;
When will this issue be fixed?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #29201,​36830 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 13 May 2016 07:38:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=29201%2C36830</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=29201%2C36830/1463125104657747</guid>
      <description>duplicate: &lt;p&gt;
Hey there,
&lt;/p&gt;
&lt;p&gt;
Thanks for your valid report and welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp-emoji-release.min.js&lt;/code&gt; is not the only script this happens. It's being done for &lt;code&gt;wp_enqueue_style()&lt;/code&gt; / &lt;code&gt;wp_enqueue_script()&lt;/code&gt;. You're not the first one to report this, that's why I'll close this ticket in favour of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29201" title="#29201: enhancement: File versioning should not use query strings, but rename the filename ... (closed: wontfix)"&gt;#29201&lt;/a&gt; where we're already tracking this.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #36830 (Change wp-emoji-release.min.js query string parameter) created</title>
      
        <dc:creator>superpoincare</dc:creator>

      <pubDate>Fri, 13 May 2016 07:31:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36830</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36830/1463124677358892</guid>
      <description>&lt;p&gt;
The file wp-emoji-release.min.js gets a new query string every time Wordpress is updated and this unneeded as it unnecessarily busts cache even when not required.
&lt;/p&gt;
&lt;p&gt;
What is ideal is a query string (such as last modified date) which is updated every time the file changes and not every time the Wordpress version changes.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36819 (Load plugin.php earlier in wp-settings.php) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 13 May 2016 07:17:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36819#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36819#comment:4/1463123866179351</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
If a drop-in resets $wp_filter, then it would already be breaking use of $wp_filter in wp-config.php
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't think that's a use-case which we even care about - if anyone is doing that, stop it, you control the environment just use a &lt;code&gt;mu-plugin&lt;/code&gt;. Dropins are different in that they're stand alone.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36435 (Explicitly cast numeric values) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 13 May 2016 06:56:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36435#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36435#comment:2/1463122598104909</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Milestoning this as it's something we should really start looking into before the PHP 7.1 release, at least to know where/what will be affected.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36829 (Revisions "time ago" not correct when not in GMT) created</title>
      
        <dc:creator>Jassop</dc:creator>

      <pubDate>Fri, 13 May 2016 05:48:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36829</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36829/1463118517207999</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
The revisions section of the page edit section says I last edited a page:
&lt;/p&gt;
&lt;p&gt;
8 hours ago (May 13, 2016 @ 13:28:09)
&lt;/p&gt;
&lt;p&gt;
However that is only a couple of minutes ago. The date displayed is the correct date and time according to the server settings (Perth, Australia)  but the "time ago" is the offset to GMT rather than a couple of minutes.
&lt;/p&gt;
&lt;p&gt;
I had a quick look at the function  wp_prepare_revisions_for_js in
wp-admin/includes/revision.php, and it contains the line:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$now_gmt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
According to &lt;a class="ext-link" href="http://php.net/manual/en/function.time.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://php.net/manual/en/function.time.php&lt;/a&gt; this is timezone independent. I &lt;em&gt;think&lt;/em&gt; that might be the problem, but I've only been doing PHP for a few months so thought I would let someone else say what the correct fix should be!
&lt;/p&gt;
&lt;p&gt;
Thanks.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36435 (Explicitly cast numeric values) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 13 May 2016 05:38:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36435#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36435#comment:1/1463117911802476</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by pento. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1463117909004762"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33055 (Support Parallel HTTP Requests in WP_Http, et al) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Fri, 13 May 2016 05:10:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33055#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33055#comment:31/1463116252649523</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37429" title="HTTP API: Add browser compatibility hook for 3xx redirects.
WordPress ..."&gt;37429&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
HTTP API: Add browser compatibility hook for 3xx redirects.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
WordPress erroneously follows browser-style behaviour with 3xx redirects, where a POST to 302 becomes a GET. Requests instead follows the specification and keeps the same method. Requests also exposes a hook to allow changing the behaviour.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37428" title="HTTP API: Replace internals with Requests library.
Requests is a ..."&gt;[37428]&lt;/a&gt; used the wrong method of adding this hook, now corrected.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33055" title="#33055: task (blessed): Support Parallel HTTP Requests in WP_Http, et al (closed: fixed)"&gt;#33055&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37429]: HTTP API: Add browser compatibility hook for 3xx redirects.  WordPress ...</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Fri, 13 May 2016 05:10:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37429</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37429/1463116252063632</guid>
      <description>&lt;p&gt;
HTTP API: Add browser compatibility hook for 3xx redirects.
&lt;/p&gt;
&lt;p&gt;
WordPress erroneously follows browser-style behaviour with 3xx redirects, where a POST to 302 becomes a GET. Requests instead follows the specification and keeps the same method. Requests also exposes a hook to allow changing the behaviour.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37428" title="HTTP API: Replace internals with Requests library.
Requests is a ..."&gt;[37428]&lt;/a&gt; used the wrong method of adding this hook, now corrected.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33055" title="#33055: task (blessed): Support Parallel HTTP Requests in WP_Http, et al (closed: fixed)"&gt;#33055&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #32683 (Custom Menu widget should include a shortcut to load selected menu ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 13 May 2016 04:58:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32683#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32683#comment:10/1463115503343414</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@celloexpressions I did another pass in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/32683/32683.3.diff" title="Attachment '32683.3.diff' in Ticket #32683"&gt;32683.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/32683/32683.3.diff" title="Download"&gt;​&lt;/a&gt;. I removed the additional &lt;code&gt;control&lt;/code&gt; arg being passed to the &lt;code&gt;widget-added&lt;/code&gt; here because this is the same event that is being used on the widgets admin page, and there the arg wouldn't be available. I think adding it does make sense, but I think we should do that in another ticket to consider any implications to JS written specifically for the widgets admin page.
&lt;/p&gt;
&lt;p&gt;
Also, I moved &lt;code&gt;focusConstructAndReturnToControlWhenCollapsed&lt;/code&gt; into private scope and renamed to &lt;code&gt;focusConstructWithBreadcrumb&lt;/code&gt;. Since this is the only instance of us needing this functionality so far, and because the name is unwieldily, I decided to make it private for now. We can make it public in another ticket once we have a second use case and can agree on a better API for it (I just came up with that verbose name for illustration purposes).
&lt;/p&gt;
&lt;p&gt;
I'll commit this unless you have any further feedback.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>32683.3.diff attached to Ticket #32683</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 13 May 2016 04:53:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32683/32683.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32683/32683.3.diff/1463115237976916</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33055 (Support Parallel HTTP Requests in WP_Http, et al) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Fri, 13 May 2016 04:41:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33055#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33055#comment:30/1463114506534732</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37428" title="HTTP API: Replace internals with Requests library.
Requests is a ..."&gt;37428&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
HTTP API: Replace internals with Requests library.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Requests is a library very similar to WP_HTTP, with a high level of unit test coverage, and has a common lineage and development team. It also supports parallel requests.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33055" title="#33055: task (blessed): Support Parallel HTTP Requests in WP_Http, et al (closed: fixed)"&gt;#33055&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37428]: HTTP API: Replace internals with Requests library.  Requests is a ...</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Fri, 13 May 2016 04:41:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37428</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37428/1463114505246206</guid>
      <description>&lt;p&gt;
HTTP API: Replace internals with Requests library.
&lt;/p&gt;
&lt;p&gt;
Requests is a library very similar to WP_HTTP, with a high level of unit test coverage, and has a common lineage and development team. It also supports parallel requests.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33055" title="#33055: task (blessed): Support Parallel HTTP Requests in WP_Http, et al (closed: fixed)"&gt;#33055&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #33055 (Support Parallel HTTP Requests in WP_Http, et al) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Fri, 13 May 2016 04:36:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33055#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33055#comment:29/1463114181037653</guid>
      <description>&lt;p&gt;
Updated patch; this includes the changes to Requests, and removes the hook adapter. Hooks in Requests are scoped to a single request/session, and the internal plugins (Basic auth, proxying, etc) rely on this fact. Attaching the hooks to WP actions/filters breaks this.
&lt;/p&gt;
&lt;p&gt;
I'll follow this up in a new ticket in the future.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>33055.5.diff attached to Ticket #33055</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Fri, 13 May 2016 04:35:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33055/33055.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33055/33055.5.diff/1463114100544395</guid>
      <description>&lt;p&gt;
Remove hook adapter
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35658 (Provide additional data for registered meta through register_meta()) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 13 May 2016 03:49:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35658#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35658#comment:43/1463111367695132</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-fields by sc0ttkclark. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-fields/p1463111365000433"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35658 (Provide additional data for registered meta through register_meta()) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Fri, 13 May 2016 03:48:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35658#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35658#comment:42/1463111315342644</guid>
      <description>&lt;p&gt;
Based on further feedback, we know we need further discussion around usage of &lt;code&gt;schema&lt;/code&gt; and exactly what we intend with it. However, in the interest of moving this patch forward -- I have removed the &lt;code&gt;schema&lt;/code&gt; option from the code, but this does not at all mean it cannot be passed in and used as we further define the definition of it for both the Fields API and REST API.
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/attachment/ticket/35658/35658-objects.2.diff"&gt;https://core.trac.wordpress.org/attachment/ticket/35658/35658-objects.2.diff&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35658-objects.2.diff attached to Ticket #35658</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Fri, 13 May 2016 03:47:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35658/35658-objects.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35658/35658-objects.2.diff/1463111232692659</guid>
      <description>&lt;p&gt;
Updated to remove 'schema'
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36534 (Media Upload Issue Since 4.5 Upgrade) updated</title>
      
        <dc:creator>mouriana</dc:creator>

      <pubDate>Fri, 13 May 2016 03:01:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36534#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36534#comment:50/1463108476430260</guid>
      <description>&lt;p&gt;
Well then, here's what I got (no, I don't get to go home.  I work FROM home. :P)
Host: 1and1.com
Example image: (the one I was trying was a little over 300k and it was much taller than wide. I don't want to upload it here, though).
memory_limit: 120M
max_execution_time:50000
max_input_time: -1
upload_max_filesize: 40M
post_max_size: 8M
&lt;/p&gt;
&lt;p&gt;
I ran all kinds of code to find the Imagick/ImageMagick version, and it kept telling me it didn't know what I was talking about. :-/
&lt;/p&gt;
&lt;p&gt;
At any rate, the support guy at 1and1 was not helpful, but my husband, who is a web developer and finally got home, seemed to know more about what's up, because he was giving me a hard time for trying to upload too big of files (I told you I was a n00b to this stuff!) so I'm going to try some other things.
&lt;/p&gt;
&lt;p&gt;
At least this is better than cleaning the house. :P
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36534#comment:49" title="Comment 49"&gt;mikeschroder&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@joemcgill and I worked with a couple larger hosts that had this issue, who worked quickly to resolve it (thank you!).
&lt;/p&gt;
&lt;p&gt;
For those who reported, if you could test again it'd be helpful.
&lt;/p&gt;
&lt;p&gt;
If you're still having problems, please include the following information so that we can investigate further:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Host
&lt;/li&gt;&lt;li&gt;Example image
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
And from &lt;code&gt;phpinfo()&lt;/code&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Imagick Version
&lt;/li&gt;&lt;li&gt;ImageMagick Version
&lt;/li&gt;&lt;li&gt;&lt;code&gt;memory_limit&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;max_execution_time&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;max_input_time&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;upload_max_filesize&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;post_max_size&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36492 (Add `WP_Post_Status` class) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 13 May 2016 02:49:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36492#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36492#comment:15/1463107750603570</guid>
      <description>&lt;p&gt;
I think we should hold off on discussion of a base class (or, better, some technique for extensibility that doesn't rely on inheritance) until we have clear concept of what a "status" is, in general: what are the properties that make something a status (rather than a post, or a term, etc), and what abilities a status should have. As things stand, *post* statuses are not even very well conceptualized, much less a general "status" type that could inform other implementations.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36492/36492.5.diff" title="Attachment '36492.5.diff' in Ticket #36492"&gt;36492.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36492/36492.5.diff" title="Download"&gt;​&lt;/a&gt; seems OK to me. A couple thoughts and questions:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I don't think we need to describe default values for object properties in the documentation for those properties. We already do that in &lt;code&gt;set_props()&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;What is the benefit of the &lt;code&gt;get_instance()&lt;/code&gt; method? Methods like this are generally used when the constructor is private - ie for a singleton. It seems like a mixing of concerns to have the object make reference to the global &lt;code&gt;$wp_post_statuses&lt;/code&gt;. I'd remove the method and move that logic back to &lt;code&gt;get_post_status_object()&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Code formatting: &lt;code&gt;! $args['internal']&lt;/code&gt;, not &lt;code&gt;$args['internal']&lt;/code&gt;, etc
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>33055.4.diff attached to Ticket #33055</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Fri, 13 May 2016 02:34:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33055/33055.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33055/33055.4.diff/1463106863978083</guid>
      <description>&lt;p&gt;
Updated Requests, deduplicated certificates
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #17904 (Multisite has more restrictions on user login character set) updated</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Fri, 13 May 2016 02:33:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17904#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17904#comment:50/1463106795981123</guid>
      <description>&lt;p&gt;
Forgot tests previously, in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/17904/17904.tests.diff" title="Attachment '17904.tests.diff' in Ticket #17904"&gt;attachment:17904.tests.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/17904/17904.tests.diff" title="Download"&gt;​&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>17904.tests.diff attached to Ticket #17904</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Fri, 13 May 2016 02:32:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17904/17904.tests.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17904/17904.tests.diff/1463106745991152</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36824 (do_all_pings function queries all posts) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Fri, 13 May 2016 02:05:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36824#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36824#comment:6/1463105135323444</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The fields =&amp;gt; ids should return only an array of post IDs, therefore it should be $ping, not $ping-&amp;gt;ID.
&lt;/p&gt;
&lt;p&gt;
Other than that, while it is not my area of expertise, it needs unit testing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>