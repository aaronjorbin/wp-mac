<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #459 (WordPress referrs to GMT instead of UTC) created</title>
      
        <dc:creator>psheerin</dc:creator>

      <pubDate>Mon, 15 Nov 2004 23:42:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/459</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/459/1100562128000000</guid>
      <description>&lt;p&gt;
WordPress uses GMT in both its documentation and on the configuration pages, even though this hasn't been the official world time reference since 1972. The current international time reference is UTC, and this is what should be used by WP, especially in the "General Options" configuration page.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #399 (Cookie problem with wikka) updated</title>
      
        <dc:creator>drewbeck</dc:creator>

      <pubDate>Mon, 15 Nov 2004 22:26:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/399</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/399/1100557567000000</guid>
      <description>&lt;p&gt;
I've encountered the same issue. The problem is with the cookie called "name" set by the wiki (or any other program on the server, I imagine). WordPress reads this cookie into the "$name" variable, parses it, and looks for a post with the name of the result (of the parsing). I posted about it on the support forums, here: &lt;a class="ext-link" href="http://wordpress.org/support/3/16771"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/3/16771&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I fixed it by scoping the cookies used by my wiki to be limited to just the wiki directory. It seems that WordPress cookies should be similarly scoped.
&lt;/p&gt;
&lt;p&gt;
But WordPress shouldn't be looking at any cookie that aren't it's own, right? So scoping would fix the symptom, but not, perhaps, be the ideal solution.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [1856]: Final XFN 1.1 fixes </title>
      
        <dc:creator>saxmatt</dc:creator>

      <pubDate>Mon, 15 Nov 2004 20:52:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/1856</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/1856/1100551954000000</guid>
      <description>&lt;p&gt;
Final XFN 1.1 fixes
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #458 (Category name conflicts (dups cannot exist regardless of parent?)) created</title>
      
        <dc:creator>anonymousbugger</dc:creator>

      <pubDate>Mon, 15 Nov 2004 20:30:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/458</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/458/1100550632000000</guid>
      <description>&lt;p&gt;
1.2.1
Add new category with a pre-existing name reports success yet yields nothing in wp_catagories.
This user expected dups allows when parents are not the same.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Changeset [1855]: Added comment form hook </title>
      
        <dc:creator>saxmatt</dc:creator>

      <pubDate>Mon, 15 Nov 2004 17:09:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/1855</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/1855/1100538570000000</guid>
      <description>&lt;p&gt;
Added comment form hook
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #456 (Add Faked Folders as standard feature to WordPress.) created</title>
      
        <dc:creator>TigerDE2</dc:creator>

      <pubDate>Mon, 15 Nov 2004 10:20:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/456</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/456/1100514023000000</guid>
      <description>&lt;p&gt;
There is a marvelous plugin turning WordPress into a blog with CMS. And it would be really great if it would come as a built-in feature.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Changeset [1854]: Refuse comments for post IDs that do not exist. </title>
      
        <dc:creator>rboren</dc:creator>

      <pubDate>Mon, 15 Nov 2004 06:20:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/1854</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/1854/1100499628000000</guid>
      <description>&lt;p&gt;
Refuse comments for post IDs that do not exist.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [1853]: Check for null category list just in case of borkage. </title>
      
        <dc:creator>rboren</dc:creator>

      <pubDate>Mon, 15 Nov 2004 06:00:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/1853</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/1853/1100498421000000</guid>
      <description>&lt;p&gt;
Check for null category list just in case of borkage.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [1852]: The first category is 1 not 0. </title>
      
        <dc:creator>rboren</dc:creator>

      <pubDate>Mon, 15 Nov 2004 05:59:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/1852</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/1852/1100498374000000</guid>
      <description>&lt;p&gt;
The first category is 1 not 0.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #455 (Comment lost when using the "back" button after a posting error) created</title>
      
        <dc:creator>anonymousbugger</dc:creator>

      <pubDate>Mon, 15 Nov 2004 05:32:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/455</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/455/1100496732000000</guid>
      <description>&lt;p&gt;
Im having troubles with the back button. If the commenter forgets a required field, sees the error, and then presses back", his comment is gone and he has to retype it.  Im using Mozilla and this behavior seems to be browser dependant. IE dose not refresh the page, so it works fine. Looking at the code in wp-blog-header.php, WordPress marks the page as always modified in the headers, so Mozilla is actually doing the right thing.
&lt;/p&gt;
&lt;p&gt;
Maybe we need to factor the post code out and make the form available on the error page for a resubmitting.  Another solution would be to fix the headers so they dont always force a reload. Another side-effect of the page reload is that the browser doesnt return to the same place on the previous page when you hit back" anywhere on the site, which is a drag.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #454 (Comment author can ad a comment even for the first time) created</title>
      
        <dc:creator>researcher</dc:creator>

      <pubDate>Sun, 14 Nov 2004 09:00:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/454</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/454/1100422830000000</guid>
      <description>&lt;p&gt;
Nightly of 11-11 there might be a change in behavor of the way Comment Authors are treated if the "Comment Authors must have a previously approved comment" switch is ON.
A "new" commenter now can comment without the approval.
&lt;/p&gt;
&lt;p&gt;
Is this ment to be so or is this a bug?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item>
   </channel>
</rss>