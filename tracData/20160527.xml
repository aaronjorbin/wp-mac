<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>36482.3.patch attached to Ticket #36482</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Fri, 27 May 2016 22:53:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36482/36482.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36482/36482.3.patch/1464389615429029</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #34936 (Reconcile wp-settings-cli.php with wp-settings.php) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 27 May 2016 20:47:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34936#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34936#comment:14/1464382048376287</guid>
      <description>&lt;p&gt;
Above patch adds three filters to solve:
&lt;/p&gt;
&lt;p&gt;
As these filters all run before plugins are loaded, I've marked them @ignore so they don't go on the docs site.
&lt;/p&gt;
&lt;p&gt;
[ ] Core: Provide a way of forcefully bypassing wp_maintenance() so that WP-CLI can continue to operate when .maintenance exists.
[ ] Core: Provide a way of overloading wp_debug_mode(), which isn't called at all in wp-settings-cli.php.
[ ] Core: Provide a way of forcefully skipping loading wp-content/advance-cache.php, which historically has caused problems with WP-CLI.
&lt;/p&gt;
&lt;p&gt;
Would love a docs review from @DrewAPicture and others such @danielbachhuber.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23016 (Allow plugins to manipulate WP_Roles ($wp_roles global) on construct) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 27 May 2016 20:44:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23016#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23016#comment:12/1464381874723626</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jjj. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1464381873001802"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>34936.diff attached to Ticket #34936</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 27 May 2016 20:43:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34936/34936.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34936/34936.diff/1464381784147700</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #34936 (Reconcile wp-settings-cli.php with wp-settings.php) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 27 May 2016 20:15:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34936#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34936#comment:13/1464380136515502</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #cli by jorbin. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/cli/p1464380133000692"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18282 (Issue with admin page hierarchy in Menu admin) updated</title>
      
        <dc:creator>sjlevy</dc:creator>

      <pubDate>Fri, 27 May 2016 20:03:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18282#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18282#comment:36/1464379383463171</guid>
      <description>&lt;p&gt;
I can confirm that this is still an issue with 4.5.2
&lt;/p&gt;
&lt;p&gt;
@SergeyBiryukov 's plugin works by eliminating pagination under 'View All'
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36482.2.patch attached to Ticket #36482</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Fri, 27 May 2016 19:48:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36482/36482.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36482/36482.2.patch/1464378528455534</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36587 (PHPUnit Tests fail with PHP7 and Imagick 3.4.x) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Fri, 27 May 2016 19:35:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36587#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36587#comment:22/1464377749411404</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36587#comment:21" title="Comment 21"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I’m concerned that, presuming I understand the bug properly, and after testing (DH is affected by this), for most users, prior to applying the patch, Imagick will usually work fine for resizing images.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree, however, the extent of breakage of that particular version has with PHP7 is significant if triggered.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What are the ways in which users are most likely to experience this problem in the real world? (want to be sure I'm not missing cases here)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Any host which is running PHP7 &amp;amp; Imagick is one which is keeping on top of updates (I would hope) given the rapid release rate of core and extensions - I'm kind of hoping that affected hosts would've upgraded the extension before we actually have to blacklist it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'd hope this also, *if* we give hosts enough runway/notice to do it. In reality, some, but not all hosts will be upgraded, so I'd like to look at this from the user perspective.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36861 (The Insert into post button in the Edit Image window doesn't work.) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 27 May 2016 19:24:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36861#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36861#comment:18/1464377070204771</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36861/36861.3.diff" title="Attachment '36861.3.diff' in Ticket #36861"&gt;36861.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36861/36861.3.diff" title="Download"&gt;​&lt;/a&gt; patch the source file instead of the built file
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36861.3.diff attached to Ticket #36861</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 27 May 2016 19:24:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36861/36861.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36861/36861.3.diff/1464377040866794</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Tickets #34936,​36819 batch updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 27 May 2016 19:19:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=34936%2C36819</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=34936%2C36819/1464376752672730</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37588" title="Bootstrap/Load: Load plugin.php earlier in wp-settings.php
In order ..."&gt;37588&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Bootstrap/Load: Load plugin.php earlier in wp-settings.php&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In order to allow non-web initializations of WordPress (such as through wp-cli) to modify things like the check for maintenance mode, plugins.php and the associated functions must be available much earlier. The use of these functions earlier than the loading of plugins is not recommended in most use cases.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36819" title="#36819: task (blessed): Load plugin.php earlier in wp-settings.php (closed: fixed)"&gt;#36819&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34936" title="#34936: enhancement: Reconcile wp-settings-cli.php with wp-settings.php (closed: fixed)"&gt;#34936&lt;/a&gt;.&lt;br /&gt;
Props jorbin, danielbachhuber for documentation.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [37588]: Bootstrap/Load: Load plugin.php earlier in wp-settings.php  In order ...</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 27 May 2016 19:19:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37588</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37588/1464376752051733</guid>
      <description>&lt;p&gt;
Bootstrap/Load: Load plugin.php earlier in wp-settings.php
&lt;/p&gt;
&lt;p&gt;
In order to allow non-web initializations of WordPress (such as through wp-cli) to modify things like the check for maintenance mode, plugins.php and the associated functions must be available much earlier. The use of these functions earlier than the loading of plugins is not recommended in most use cases.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36819" title="#36819: task (blessed): Load plugin.php earlier in wp-settings.php (closed: fixed)"&gt;#36819&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34936" title="#34936: enhancement: Reconcile wp-settings-cli.php with wp-settings.php (closed: fixed)"&gt;#34936&lt;/a&gt;.
Props jorbin, danielbachhuber for documentation.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36900 (Media grid AttachmentsBrowser arrows navigation and restoreFocus() no ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 27 May 2016 19:17:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36900#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36900#comment:8/1464376625142374</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1464376623000612"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36861 (The Insert into post button in the Edit Image window doesn't work.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 27 May 2016 19:09:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36861#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36861#comment:17/1464376180742927</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by adamsilverstein. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1464376178000602"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36861 (The Insert into post button in the Edit Image window doesn't work.) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 27 May 2016 19:07:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36861#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36861#comment:16/1464376058652398</guid>
      <description>&lt;p&gt;
@lukecavanagh are you still seeing the 'Insert into Post' button in the edit details view? You should see a 'Back' button.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36534 (Media Upload Issue Since 4.5 Upgrade) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 27 May 2016 19:07:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36534#comment:57</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36534#comment:57/1464376039156209</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1464376037000593"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36961 (wp_roles displays incorrect roles in multisite) updated</title>
      
        <dc:creator>ryanduff</dc:creator>

      <pubDate>Fri, 27 May 2016 18:33:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36961#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36961#comment:2/1464374011223173</guid>
      <description>&lt;p&gt;
I'll also add that while I later discovered this resulted a bug in network admin, I first noticed it when trying to get and display a user's role on another site in a multisite install via the following method:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$user = new WP_User( $user_id, '', $site_id );
$role = reset( $user-&amp;gt;roles );
&lt;/pre&gt;&lt;p&gt;
If that runs on the $site_id I'm checking the correct role is displayed. However, if I'm on site 2, and pass in 3 as $site_id, I get an empty array back.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36961 (wp_roles displays incorrect roles in multisite) updated</title>
      
        <dc:creator>ryanduff</dc:creator>

      <pubDate>Fri, 27 May 2016 18:26:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36961#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36961#comment:1/1464373586495336</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36953 (Meta lazyloading can cause excessive calls to object cache) updated</title>
      
        <dc:creator>DBrumbaugh10Up</dc:creator>

      <pubDate>Fri, 27 May 2016 18:25:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36953#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36953#comment:4/1464373548377651</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@boonebgorges The patch implements option &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/1" title="#1: defect (bug): Handle https:// when manipulating 'home' (closed: fixed)"&gt;#1&lt;/a&gt; that you've listed as far as I can understand.  What I'm missing I guess is why a site can't just  set update_term_meta_cache to "false" in the pre_get_posts call back?
&lt;/p&gt;
&lt;p&gt;
Or did I miss your intent?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Screen Shot 2016-05-27 at 11.37.59 AM.png attached to Ticket #36961</title>
      
        <dc:creator>ryanduff</dc:creator>

      <pubDate>Fri, 27 May 2016 18:25:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36961/Screen%20Shot%202016-05-27%20at%2011.37.59%20AM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36961/Screen%20Shot%202016-05-27%20at%2011.37.59%20AM.png/1464373531671511</guid>
      <description>&lt;p&gt;
Adding user from site 2 dashboard, displays correct roles available
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Screen Shot 2016-05-27 at 11.36.04 AM.png attached to Ticket #36961</title>
      
        <dc:creator>ryanduff</dc:creator>

      <pubDate>Fri, 27 May 2016 18:25:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36961/Screen%20Shot%202016-05-27%20at%2011.36.04%20AM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36961/Screen%20Shot%202016-05-27%20at%2011.36.04%20AM.png/1464373506380239</guid>
      <description>&lt;p&gt;
Adding user in network admin, displaying site 1 roles, not site 2
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Screen Shot 2016-05-27 at 10.56.57 AM.png attached to Ticket #36961</title>
      
        <dc:creator>ryanduff</dc:creator>

      <pubDate>Fri, 27 May 2016 18:24:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36961/Screen%20Shot%202016-05-27%20at%2010.56.57%20AM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36961/Screen%20Shot%202016-05-27%20at%2010.56.57%20AM.png/1464373477083844</guid>
      <description>&lt;p&gt;
List of roles confirmed via wp-cli
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36961 (wp_roles displays incorrect roles in multisite) created</title>
      
        <dc:creator>ryanduff</dc:creator>

      <pubDate>Fri, 27 May 2016 18:24:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36961</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36961/1464373446529023</guid>
      <description>&lt;p&gt;
The WP_User class accepts a 3rd parameter for a site ID, but this never translates over to roles.
&lt;/p&gt;
&lt;p&gt;
In class-wp-user.php WP_User-&amp;gt;_init_caps() the correct capabilities are retrieved from the database, but when WP_User-&amp;gt;get_role_caps() gets called, the first thing it does is fire wp_roles() in capabilities.php This will global $wp_roles or if not set, it will initialize a new WP_Roles class.
&lt;/p&gt;
&lt;p&gt;
Where this becomes a problem is if you're not on the site you're checking the roles on, wp_roles() returns the roles of the current site instead. Back in WP_User-&amp;gt;get_role_caps(), the arrays get filtered and since there's a mismatch of roles defined on current site vs roles actually assigned to user, you will get an empty array as a result when looking at WP_User-&amp;gt;roles
&lt;/p&gt;
&lt;p&gt;
To see this in action, I set up a test multisite install to confirm. I deleted all roles but admin on the main site, then created 2 new arbitrary roles. I then created a second site in the install, deleted all roles but admin, and created another arbitrary role. I added a new user to the install. If I go to network admin and attempt to assign the user to site 2, the roles drop down displays the roles defined on site 1 rather than site 2. If I go to the dashboard of site 2 and go to add the user, I see the correct roles available.
&lt;/p&gt;
&lt;p&gt;
I'm not sure if this is intended behavior, though I can't imagine it is as it leads to a bug in network admin allowing a user to be set to a role that potentially doesn't even exist on the site you assign them to.
&lt;/p&gt;
&lt;p&gt;
I've tested this from WP 4.2-4.5 and get the same results in wp-admin
&lt;/p&gt;
&lt;p&gt;
Logging as roles/capabilities component, because even though it affects multisite, I think the core issue exists in roles and capabilities.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>36593.diff attached to Ticket #36953</title>
      
        <dc:creator>DBrumbaugh10Up</dc:creator>

      <pubDate>Fri, 27 May 2016 18:17:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36953/36593.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36953/36593.diff/1464373020821920</guid>
      <description>&lt;p&gt;
Patch file for 36953
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32246 (Fix a variety of phpDoc issues) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Fri, 27 May 2016 17:59:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32246#comment:345</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32246#comment:345/1464371952711884</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37587" title="Docs: Improve documentation for `wp_generate_tag_cloud()` default ..."&gt;37587&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Improve documentation for &lt;code&gt;wp_generate_tag_cloud()&lt;/code&gt; default arguments by formatting them into in a hash-notation.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32246" title="#32246: task (blessed): Fix a variety of phpDoc issues (closed: fixed)"&gt;#32246&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37587]: Docs: Improve documentation for `wp_generate_tag_cloud()` default ...</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Fri, 27 May 2016 17:59:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37587</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37587/1464371952100884</guid>
      <description>&lt;p&gt;
Docs: Improve documentation for &lt;code&gt;wp_generate_tag_cloud()&lt;/code&gt; default arguments by formatting them into in a hash-notation.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32246" title="#32246: task (blessed): Fix a variety of phpDoc issues (closed: fixed)"&gt;#32246&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #32366 (wp_count_comments() is hardcoded into /wp-admin/menu.php and queries ...) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Fri, 27 May 2016 17:45:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32366#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32366#comment:12/1464371144320070</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
With the introduction of the &lt;code&gt;wp_count_comments&lt;/code&gt; in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35060" title="#35060: feature request: Allow filtering of comment count (closed: fixed)"&gt;#35060&lt;/a&gt; you can skip the comment count query from running.  I don't think we need another filter.
&lt;/p&gt;
&lt;p&gt;
To skip the comment counts for all posts (including the admin_bar and menu), a function like this should do the trick:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'wp_count_comments'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'skip_comment_count_query'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;skip_comment_count_query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$post_id&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nv"&gt;$post_id&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$stats&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                        &lt;span class="s1"&gt;'approved'&lt;/span&gt;       &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="s1"&gt;'moderated'&lt;/span&gt;      &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="s1"&gt;'spam'&lt;/span&gt;           &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="s1"&gt;'trash'&lt;/span&gt;          &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="s1"&gt;'post-trashed'&lt;/span&gt;   &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="s1"&gt;'total_comments'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="s1"&gt;'all'&lt;/span&gt;            &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;object&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;$stats&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32246 (Fix a variety of phpDoc issues) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Fri, 27 May 2016 17:15:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32246#comment:344</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32246#comment:344/1464369359296539</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37586" title="Docs: Improve formatting in the DocBlock for ..."&gt;37586&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Improve formatting in the DocBlock for &lt;code&gt;sanitize_bookmark_field()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32246" title="#32246: task (blessed): Fix a variety of phpDoc issues (closed: fixed)"&gt;#32246&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37586]: Docs: Improve formatting in the DocBlock for ...</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Fri, 27 May 2016 17:15:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37586</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37586/1464369358805778</guid>
      <description>&lt;p&gt;
Docs: Improve formatting in the DocBlock for &lt;code&gt;sanitize_bookmark_field()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32246" title="#32246: task (blessed): Fix a variety of phpDoc issues (closed: fixed)"&gt;#32246&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #32246 (Fix a variety of phpDoc issues) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Fri, 27 May 2016 17:11:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32246#comment:343</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32246#comment:343/1464369108201317</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37585" title="Docs: Standardizes and improves DocBlock summaries for the `__get()`, ..."&gt;37585&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Standardizes and improves DocBlock summaries for the &lt;code&gt;__get()&lt;/code&gt;, &lt;code&gt;__set()&lt;/code&gt;, &lt;code&gt;__isset()&lt;/code&gt;, and &lt;code&gt;__unset()&lt;/code&gt; magic methods in &lt;code&gt;wpdb&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32246" title="#32246: task (blessed): Fix a variety of phpDoc issues (closed: fixed)"&gt;#32246&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37585]: Docs: Standardizes and improves DocBlock summaries for the `__get()`, ...</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Fri, 27 May 2016 17:11:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37585</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37585/1464369107527383</guid>
      <description>&lt;p&gt;
Docs: Standardizes and improves DocBlock summaries for the &lt;code&gt;__get()&lt;/code&gt;, &lt;code&gt;__set()&lt;/code&gt;, &lt;code&gt;__isset()&lt;/code&gt;, and &lt;code&gt;__unset()&lt;/code&gt; magic methods in &lt;code&gt;wpdb&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32246" title="#32246: task (blessed): Fix a variety of phpDoc issues (closed: fixed)"&gt;#32246&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36959 (Clicking Add site fast enough adds same site twice) updated</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Fri, 27 May 2016 16:55:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36959#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36959#comment:1/1464368110392814</guid>
      <description>&lt;p&gt;
So would you want a delay before another site would be added or to check if that site already exists?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36861 (The Insert into post button in the Edit Image window doesn't work.) updated</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Fri, 27 May 2016 16:49:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36861#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36861#comment:15/1464367777628669</guid>
      <description>&lt;p&gt;
The patch does not seem to work correctly on wordpress-trunk using
&lt;/p&gt;
&lt;p&gt;
Browser: Chrome 50.0.2661.102 (64-bit) , 46.0 Mozilla Firefox for Ubuntu
WP: 4.5.2
OS: Ubuntu
Server Environment : VVV
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36603 (wp_publish_post() does not fire post_updated action) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 27 May 2016 16:24:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36603#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36603#comment:6/1464366281264138</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36603#comment:3" title="Comment 3"&gt;peterwilsoncc&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
My educated guess is it's by design and publishing a scheduled post is not considered an update per se.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's the point I guess :) Users can actually modify a scheduled post before publishing it and as far as I understand there's no way to detect this. By the way seems the history here is a bit complicated see &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/21942" title="Have wp_publish_post() wrap wp_insert_post() directly. see #11399.
"&gt;[21942]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23206" title="Revert [21942] and have wp_publish_post() deal with the database ..."&gt;[23206]&lt;/a&gt; and the related tickets and see also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21963" title="#21963: defect (bug): Consolidate post insertion APIs (closed: fixed)"&gt;21963&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36603 (wp_publish_post() does not fire post_updated action) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Fri, 27 May 2016 16:16:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36603#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36603#comment:5/1464365815385325</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36603#comment:4" title="Comment 4"&gt;Rarst&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
My educated guess is it's by design and publishing a scheduled post is not considered an update per se.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It changes one of the most important post fields in a major way. If it's by design I would like to hear a reason why it shouldn't be handled consistently with every other post change.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I can get on board with the idea that publishing a scheduled post constitutes a post update.
&lt;/p&gt;
&lt;p&gt;
On whether we should add the hook, I actually wonder if maybe we shouldn't look at deprecating &lt;code&gt;wp_publish_post()&lt;/code&gt; and switch to using &lt;code&gt;wp_insert_post()&lt;/code&gt; in &lt;code&gt;check_and_publish_future_post()&lt;/code&gt; instead. You can attempt to maintain a parallel use-case for only so long before it becomes pointless.
&lt;/p&gt;
&lt;p&gt;
Of course we pick up a hook or two in the process, but it also would streamline the API a bit. It would need a good bit of tests to make sure we aren't breaking something.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36568 (The Content of a Link is too Long in Comments Page) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Fri, 27 May 2016 16:03:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36568#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36568#comment:7/1464365003370835</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36568 (The Content of a Link is too Long in Comments Page) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Fri, 27 May 2016 16:02:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36568#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36568#comment:6/1464364978558325</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Aha!
&lt;/p&gt;
&lt;p&gt;
Without patch:
&lt;a style="padding:0; border:none" href="https://cldup.com/QLtGpXtQju-3000x3000.png"&gt;&lt;img src="https://cldup.com/QLtGpXtQju-3000x3000.png" alt="https://cldup.com/QLtGpXtQju-3000x3000.png" crossorigin="anonymous" title="https://cldup.com/QLtGpXtQju-3000x3000.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
With patch:
&lt;a style="padding:0; border:none" href="https://cldup.com/YymewBXL0g-2000x2000.png"&gt;&lt;img src="https://cldup.com/YymewBXL0g-2000x2000.png" alt="https://cldup.com/YymewBXL0g-2000x2000.png" crossorigin="anonymous" title="https://cldup.com/YymewBXL0g-2000x2000.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36953 (Meta lazyloading can cause excessive calls to object cache) updated</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Fri, 27 May 2016 15:48:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36953#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36953#comment:3/1464364138183808</guid>
      <description>&lt;p&gt;
So was term_meta_lazyload depreciated in WP 4.5?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36568 (The Content of a Link is too Long in Comments Page) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 27 May 2016 15:25:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36568#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36568#comment:5/1464362711840521</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@rachelbaker Right, line breaks in text can occur for certain characters, like spaces or hyphens. The example in the screenshots doesn't contain such characters.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36861 (The Insert into post button in the Edit Image window doesn't work.) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 27 May 2016 15:24:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36861#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36861#comment:14/1464362647896263</guid>
      <description>&lt;p&gt;
@monikarao and @almendron thanks for testing and leaving feedback.
&lt;/p&gt;
&lt;p&gt;
@monikarao – since you're using VVV, are you testing on &lt;a class="ext-link" href="http://src.wordpress-develop.dev"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://src.wordpress-develop.dev&lt;/a&gt; or &lt;a class="ext-link" href="http://build.wordpress-develop.dev"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://build.wordpress-develop.dev&lt;/a&gt;? If the latter, you may need to run &lt;code&gt;grunt build&lt;/code&gt; first before the changes take affect.
&lt;/p&gt;
&lt;p&gt;
@almendron – I'm not entirely clear on what error you're experiencing. If you're saying that once you applied the patch that the button in step 4 has been replaced with a "Back" button, then that's the expected behavior of this fix. If something else is happening, could you explain in more detail, or leave screenshots? Listing the OS/Browser version you are testing on is helpful as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36568 (The Content of a Link is too Long in Comments Page) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Fri, 27 May 2016 15:19:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36568#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36568#comment:4/1464362397204913</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36568 (The Content of a Link is too Long in Comments Page) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Fri, 27 May 2016 15:19:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36568#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36568#comment:3/1464362379374365</guid>
      <description>&lt;p&gt;
It doesn't look like the &lt;code&gt;word-break: break-all&lt;/code&gt; is actually needed at all.  In Chrome 51.0.2704.63 beta (64-bit), I see no difference with or without the patch.
Screenshot without patch:  &lt;a class="ext-link" href="https://cloudup.com/cPwL4iSJScZ"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/cPwL4iSJScZ&lt;/a&gt;
@ocean90 Are you seeing something different?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36957 (Dialog to add Featured Images doesn't work when resizing images first) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 27 May 2016 15:17:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36957#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36957#comment:4/1464362270978172</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36957#comment:3" title="Comment 3"&gt;pauljacobson&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Thanks Joe
&lt;/p&gt;
&lt;p&gt;
So does that mean the bug will be fixed in a bug fix update?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36861" title="#36861: defect (bug): The Insert into post button in the Edit Image window doesn't work. (closed: fixed)"&gt;#36861&lt;/a&gt; is currently slotted for 4.5.3, so as long as that fix is completed before that bugfix release goes out, it should be included. Testing out the latest patch on that ticket and leaving feedback would be appreciated.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36568.patch attached to Ticket #36568</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Fri, 27 May 2016 15:08:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36568/36568.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36568/36568.patch/1464361713892410</guid>
      <description>&lt;p&gt;
Add &lt;code&gt;word-break: break-all&lt;/code&gt; to urls on Moderate Comment screen
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33413 (most PHP classes should be in their own file) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 27 May 2016 15:04:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33413#comment:139</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33413#comment:139/1464361442609621</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by ryanduff. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1464361439001786"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36957 (Dialog to add Featured Images doesn't work when resizing images first) updated</title>
      
        <dc:creator>pauljacobson</dc:creator>

      <pubDate>Fri, 27 May 2016 14:45:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36957#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36957#comment:3/1464360356472177</guid>
      <description>&lt;p&gt;
Thanks Joe
&lt;/p&gt;
&lt;p&gt;
So does that mean the bug will be fixed in a bug fix update?
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36957#comment:2" title="Comment 2"&gt;joemcgill&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Actually, this looks like it's a duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36861" title="#36861: defect (bug): The Insert into post button in the Edit Image window doesn't work. (closed: fixed)"&gt;#36861&lt;/a&gt;, and is fixed by the &lt;a href="https://core.trac.wordpress.org/attachment/ticket/36861/36861.2.diff"&gt;36861.2.diff&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #36861,​36957 batch updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 27 May 2016 14:13:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=36861%2C36957</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=36861%2C36957/1464358411116673</guid>
      <description>duplicate: &lt;p&gt;
Actually, this looks like it's a duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36861" title="#36861: defect (bug): The Insert into post button in the Edit Image window doesn't work. (closed: fixed)"&gt;#36861&lt;/a&gt;, and is fixed by the &lt;a href="https://core.trac.wordpress.org/attachment/ticket/36861/36861.2.diff"&gt;36861.2.diff&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #34936 (Reconcile wp-settings-cli.php with wp-settings.php) updated</title>
      
        <dc:creator>amandato</dc:creator>

      <pubDate>Fri, 27 May 2016 14:10:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34936#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34936#comment:11/1464358215737815</guid>
      <description>&lt;p&gt;
Re: Core: Provide a way of forcefully bypassing wp_maintenance() so that WP-CLI can continue to operate when .maintenance exists.
&lt;/p&gt;
&lt;p&gt;
The proposed filter I requested in this ticket &lt;a href="https://core.trac.wordpress.org/ticket/36960"&gt;#36960&lt;/a&gt; with the following if in the .maintenance file would solve this problem.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;defined&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'WP_CLI'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;WP_CLI&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nv"&gt;$upgrading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24648 (Don't exclude uneditable comments in wp_ajax_get_comments) closed</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Fri, 27 May 2016 14:09:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24648#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24648#comment:9/1464358170217689</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37584" title="Comments: Display approved comments on the Edit Post screen to users ..."&gt;37584&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Comments: Display approved comments on the Edit Post screen to users without the &lt;code&gt;edit_comment&lt;/code&gt; capability.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Matches logic in &lt;code&gt;wp_dashboard_recent_comments()&lt;/code&gt; where we display approved comments regardless of the edit permission.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props jfarthing84 for initial patch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24648" title="#24648: defect (bug): Don't exclude uneditable comments in wp_ajax_get_comments (closed: fixed)"&gt;#24648&lt;/a&gt;. &lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37584]: Comments: Display approved comments on the Edit Post screen to users ...</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Fri, 27 May 2016 14:09:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37584</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37584/1464358169521568</guid>
      <description>&lt;p&gt;
Comments: Display approved comments on the Edit Post screen to users without the &lt;code&gt;edit_comment&lt;/code&gt; capability.
&lt;/p&gt;
&lt;p&gt;
Matches logic in &lt;code&gt;wp_dashboard_recent_comments()&lt;/code&gt; where we display approved comments regardless of the edit permission.
&lt;/p&gt;
&lt;p&gt;
Props jfarthing84 for initial patch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24648" title="#24648: defect (bug): Don't exclude uneditable comments in wp_ajax_get_comments (closed: fixed)"&gt;#24648&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #24648 (Don't exclude uneditable comments in wp_ajax_get_comments) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Fri, 27 May 2016 13:59:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24648#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24648#comment:8/1464357565986689</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@jfarthing84 I understand, thank you for taking a look.  I have tested the patch, and it fits with other logic we have for displaying comments in the dashboard.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>class-wp-upgrader.diff attached to Ticket #36960</title>
      
        <dc:creator>amandato</dc:creator>

      <pubDate>Fri, 27 May 2016 13:58:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36960/class-wp-upgrader.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36960/class-wp-upgrader.diff/1464357532742664</guid>
      <description>&lt;p&gt;
Diff file of change made to WP 4.5.2
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36960 (Add filter to maintenance_mode() function for $maintenance_string) created</title>
      
        <dc:creator>amandato</dc:creator>

      <pubDate>Fri, 27 May 2016 13:57:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36960</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36960/1464357425648149</guid>
      <description>&lt;p&gt;
Please add a filter for the maintenance_mode() function found in includes/class-wp-upgrader.php.
&lt;/p&gt;
&lt;p&gt;
New line:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="nv"&gt;$maintenance_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;apply_filters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'maintenance_string'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$maintenance_string&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Adding this would allow a custom plugin to modify the $maintenance_string. Here is an example where a custom plugin would modify the maintenance string value to allow wp-cli to work while maintaining maintenance mode in all other cases:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defined&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'WP_CLI'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;WP_CLI&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nv"&gt;$upgrading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36486 (is_apache in vars.php does not always work) updated</title>
      
        <dc:creator>amandato</dc:creator>

      <pubDate>Fri, 27 May 2016 13:47:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36486#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36486#comment:1/1464356836904892</guid>
      <description>&lt;p&gt;
Did I place this ticket in the right component?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>jtsternberg</dc:creator>

      <pubDate>Fri, 27 May 2016 13:33:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:41/1464356014925893</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:39" title="Comment 39"&gt;schlessera&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Yes, totally agree. But adding Composer autoloading is adding 1 tiny file (&lt;code&gt;composer.json&lt;/code&gt;) and adding 1 line of PHP to one of the bootstrapping files (like &lt;code&gt;wp-load.php&lt;/code&gt;): &lt;code&gt;require_once( ABSPATH . '/vendor/autoload_52.php' );&lt;/code&gt;. This results in a working autoloader that keeps everything up-to-date as Core classes are changed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This makes total sense to me. Running composer update as part of the grunt build process would ensure the class map was always up-to-date, even when we begin trying to fix the class/file-naming conventions. The composer class-map generator would have us covered. Sounds like the alternative is a class-map that has to be maintained by hand? Not sure I understand what the benefit there is? Unless it's about cognitive overhead?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36957 (Dialog to add Featured Images doesn't work when resizing images first) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 27 May 2016 13:19:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36957#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36957#comment:1/1464355172142776</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @pauljacobson, thanks for the report. I can confirm that this is the case. It looks like the model isn't being maintained after the edit process, causing &lt;code&gt;wp.media.view.Toolbar.refresh()&lt;/code&gt; to throw and undefined error.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20263 (Backticks in dbDelta cause warning and actually causes a query to ...) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 27 May 2016 12:33:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20263#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20263#comment:28/1464352421739804</guid>
      <description>&lt;p&gt;
@davidmosterd You got props in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37538" title="Database: Support backticks around field names when parsing a query ..."&gt;[37538]&lt;/a&gt; for the initial patch. :) The patch was good, thanks for that, but as mentioned in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/20263#comment:16" title="Comment 16"&gt;comment:16&lt;/a&gt; adding the backtick to the regex directly is a way less magical.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36861 (The Insert into post button in the Edit Image window doesn't work.) updated</title>
      
        <dc:creator>almendron</dc:creator>

      <pubDate>Fri, 27 May 2016 12:26:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36861#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36861#comment:12/1464352009396982</guid>
      <description>&lt;p&gt;
Step 4: Error. Replaced "back" to "Insert into post".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20263 (Backticks in dbDelta cause warning and actually causes a query to ...) updated</title>
      
        <dc:creator>davidmosterd</dc:creator>

      <pubDate>Fri, 27 May 2016 12:23:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20263#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20263#comment:27/1464351831712729</guid>
      <description>&lt;p&gt;
@ocean90  Cool :)
&lt;/p&gt;
&lt;p&gt;
So, in the end my solution was not used at all? I was not able to do more on this; wish I could. I did not get props I see, which I get if my code was not good enough, just want to make sure it's no mistake ;)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #20263,​34869,​34871,​34873,​34959 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 27 May 2016 11:56:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=20263%2C34869%2C34871%2C34873%2C34959</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=20263%2C34869%2C34871%2C34873%2C34959/1464350182123197</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37583" title="Database: Normalize index definitions in `dbDelta()`.
`dbDelta()` ..."&gt;37583&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Database: Normalize index definitions in &lt;code&gt;dbDelta()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;dbDelta()&lt;/code&gt; compares the index definitions against the result of &lt;code&gt;SHOW INDEX FROM $table_name&lt;/code&gt;. This requires a specific format so indices are not unnecessarily re-created. This format wasn't ensured, until now.&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Parse the raw index definition to extract the type, name and columns so a normalized definition can be built (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20263" title="#20263: defect (bug): Backticks in dbDelta cause warning and actually causes a query to ... (closed: fixed)"&gt;#20263&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34873" title="#34873: enhancement: dbDelta PRIMARY KEY Single Space Recreates Index (closed: fixed)"&gt;#34873&lt;/a&gt;).
&lt;/li&gt;&lt;li&gt;Standardize on uppercase types (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34871" title="#34871: defect (bug): dbDelta Lowercase KEY Keyword Duplicates Indexes (closed: fixed)"&gt;#34871&lt;/a&gt;) and on 'KEY'. 'INDEX' is only a synonym for 'KEY'.
&lt;/li&gt;&lt;li&gt;Escape index names with backticks (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20263" title="#20263: defect (bug): Backticks in dbDelta cause warning and actually causes a query to ... (closed: fixed)"&gt;#20263&lt;/a&gt;).
&lt;/li&gt;&lt;li&gt;Normalize columns: Ignore ASC and DESC definitions (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34959" title="#34959: defect (bug): dbDelta index ASC or DESC creates duplicate (closed: fixed)"&gt;#34959&lt;/a&gt;), remove whitespaces (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34869" title="#34869: defect (bug): dbDelta Index Definition Spaces Duplicate Indexes (closed: fixed)"&gt;#34869&lt;/a&gt;) and escape column names with backticks (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20263" title="#20263: defect (bug): Backticks in dbDelta cause warning and actually causes a query to ... (closed: fixed)"&gt;#20263&lt;/a&gt;).
&lt;/li&gt;&lt;li&gt;Add backticks to all index change queries (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20263" title="#20263: defect (bug): Backticks in dbDelta cause warning and actually causes a query to ... (closed: fixed)"&gt;#20263&lt;/a&gt;).
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Props ocean90, pento, kurtpayne.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20263" title="#20263: defect (bug): Backticks in dbDelta cause warning and actually causes a query to ... (closed: fixed)"&gt;#20263&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34869" title="#34869: defect (bug): dbDelta Index Definition Spaces Duplicate Indexes (closed: fixed)"&gt;#34869&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34871" title="#34871: defect (bug): dbDelta Lowercase KEY Keyword Duplicates Indexes (closed: fixed)"&gt;#34871&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34873" title="#34873: enhancement: dbDelta PRIMARY KEY Single Space Recreates Index (closed: fixed)"&gt;#34873&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34959" title="#34959: defect (bug): dbDelta index ASC or DESC creates duplicate (closed: fixed)"&gt;#34959&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [37583]: Database: Normalize index definitions in `dbDelta()`.  `dbDelta()` ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 27 May 2016 11:56:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37583</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37583/1464350180543882</guid>
      <description>&lt;p&gt;
Database: Normalize index definitions in &lt;code&gt;dbDelta()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;dbDelta()&lt;/code&gt; compares the index definitions against the result of &lt;code&gt;SHOW INDEX FROM $table_name&lt;/code&gt;. This requires a specific format so indices are not unnecessarily re-created. This format wasn't ensured, until now.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Parse the raw index definition to extract the type, name and columns so a normalized definition can be built (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20263" title="#20263: defect (bug): Backticks in dbDelta cause warning and actually causes a query to ... (closed: fixed)"&gt;#20263&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34873" title="#34873: enhancement: dbDelta PRIMARY KEY Single Space Recreates Index (closed: fixed)"&gt;#34873&lt;/a&gt;).
&lt;/li&gt;&lt;li&gt;Standardize on uppercase types (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34871" title="#34871: defect (bug): dbDelta Lowercase KEY Keyword Duplicates Indexes (closed: fixed)"&gt;#34871&lt;/a&gt;) and on 'KEY'. 'INDEX' is only a synonym for 'KEY'.
&lt;/li&gt;&lt;li&gt;Escape index names with backticks (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20263" title="#20263: defect (bug): Backticks in dbDelta cause warning and actually causes a query to ... (closed: fixed)"&gt;#20263&lt;/a&gt;).
&lt;/li&gt;&lt;li&gt;Normalize columns: Ignore ASC and DESC definitions (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34959" title="#34959: defect (bug): dbDelta index ASC or DESC creates duplicate (closed: fixed)"&gt;#34959&lt;/a&gt;), remove whitespaces (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34869" title="#34869: defect (bug): dbDelta Index Definition Spaces Duplicate Indexes (closed: fixed)"&gt;#34869&lt;/a&gt;) and escape column names with backticks (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20263" title="#20263: defect (bug): Backticks in dbDelta cause warning and actually causes a query to ... (closed: fixed)"&gt;#20263&lt;/a&gt;).
&lt;/li&gt;&lt;li&gt;Add backticks to all index change queries (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20263" title="#20263: defect (bug): Backticks in dbDelta cause warning and actually causes a query to ... (closed: fixed)"&gt;#20263&lt;/a&gt;).
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Props ocean90, pento, kurtpayne.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20263" title="#20263: defect (bug): Backticks in dbDelta cause warning and actually causes a query to ... (closed: fixed)"&gt;#20263&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34869" title="#34869: defect (bug): dbDelta Index Definition Spaces Duplicate Indexes (closed: fixed)"&gt;#34869&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34871" title="#34871: defect (bug): dbDelta Lowercase KEY Keyword Duplicates Indexes (closed: fixed)"&gt;#34871&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34873" title="#34873: enhancement: dbDelta PRIMARY KEY Single Space Recreates Index (closed: fixed)"&gt;#34873&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34959" title="#34959: defect (bug): dbDelta index ASC or DESC creates duplicate (closed: fixed)"&gt;#34959&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #34869 (dbDelta Index Definition Spaces Duplicate Indexes) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 27 May 2016 11:00:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34869#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34869#comment:2/1464346810548665</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34873 (dbDelta PRIMARY KEY Single Space Recreates Index) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 27 May 2016 10:59:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34873#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34873#comment:1/1464346784653895</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34871 (dbDelta Lowercase KEY Keyword Duplicates Indexes) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 27 May 2016 10:59:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34871#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34871#comment:1/1464346772918663</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34959 (dbDelta index ASC or DESC creates duplicate) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 27 May 2016 10:59:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34959#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34959#comment:1/1464346746047236</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36843 (Wrong Taxonomy Term orderby 'name' in Cyrillic) closed</title>
      
        <dc:creator>esemlabel</dc:creator>

      <pubDate>Fri, 27 May 2016 10:29:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36843#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36843#comment:11/1464344948857594</guid>
      <description>worksforme: &lt;p&gt;
&lt;strong&gt;Resolved&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
I've finally, got it worked.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;In wp-config.php: define('DB_COLLATE', 'utf8_unicode_ci');
&lt;/li&gt;&lt;li&gt;Changed Collation of database: in db root in phpMyAdmin &amp;gt; Operation &amp;gt; Collation.
&lt;/li&gt;&lt;li&gt;Changed Collation of 'wp_terms' table (could be done to each table): in table root &amp;gt; Operation &amp;gt; Table Options &amp;gt; Collation.
&lt;/li&gt;&lt;li&gt;Changed server variables: in phpMyAdmin root &amp;gt; Variables &amp;gt; changed 'collation connection', 'collation database' and 'collation server' parameters to 'utf8_unicode_ci'.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Now all works fine, in back-end and front-end.
&lt;/p&gt;
&lt;p&gt;
Can wordpress do such routine automatically?
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #18525 (zlib.output_compression "on" in server conflicts with autoupdate) updated</title>
      
        <dc:creator>simonbcn</dc:creator>

      <pubDate>Fri, 27 May 2016 10:21:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18525#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18525#comment:25/1464344514306287</guid>
      <description>&lt;p&gt;
I have the same problem with PHP 7.0
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36861 (The Insert into post button in the Edit Image window doesn't work.) updated</title>
      
        <dc:creator>monikarao</dc:creator>

      <pubDate>Fri, 27 May 2016 10:13:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36861#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36861#comment:11/1464344002297975</guid>
      <description>&lt;p&gt;
Just tested the patch on 4.5.2 and it doesn't work for me
OS: Windows 10
Browser: Chrome 50.0.2661.102 , Safari 5.1.7 , IE-11 , Firefox 46.0.1
WP 4.5.2
Server Environment : VVV
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36843 (Wrong Taxonomy Term orderby 'name' in Cyrillic) updated</title>
      
        <dc:creator>esemlabel</dc:creator>

      <pubDate>Fri, 27 May 2016 09:47:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36843#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36843#comment:10/1464342462278091</guid>
      <description>&lt;p&gt;
I've found, that querying &lt;strong&gt;SQL direct in phpMyadmin console&lt;/strong&gt; with code, for example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT * FROM wp_terms ORDER BY name COLLATE utf8_unicode_ci
&lt;/pre&gt;&lt;p&gt;
gives success result! &lt;strong&gt;Term names in Ukrainian Cyrillic successfully ordered by name&lt;/strong&gt; in right alphabetic order.
&lt;/p&gt;
&lt;p&gt;
I am asking wp-gurus to write function that can alter general get terms function to include 'COLLATE utf8_unicode_ci' parameter, until WordPress Core will have such fix.
&lt;/p&gt;
&lt;p&gt;
Maybe there is a hook, action or filter for changing get terms process globally (in back-end on term pages and in front-end) ?
&lt;/p&gt;
&lt;p&gt;
Please, help!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36959 (Clicking Add site fast enough adds same site twice) created</title>
      
        <dc:creator>pauldewouters</dc:creator>

      <pubDate>Fri, 27 May 2016 09:41:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36959</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36959/1464342106960101</guid>
      <description>&lt;p&gt;
On the &lt;code&gt;wp-admin/network/site-new.php&lt;/code&gt; admin page, if you click Add site fast enough, like a double click, it will add the same site twice.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36958 (extending has_shortcode to allow searching in custom fields) created</title>
      
        <dc:creator>radugroza</dc:creator>

      <pubDate>Fri, 27 May 2016 08:05:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36958</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36958/1464336359918200</guid>
      <description>&lt;p&gt;
Seeing as has_shortcode is mainly used by plugin developers to search a shortcode in post_content, I'd like to open a discussion about what would be the best way to extend the has_shortcode functionality to also allow searching in custom post fields.
&lt;/p&gt;
&lt;p&gt;
Problem:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;if one uses a post_meta field to store additional content for a post ( content that may contain shortcodes and is processed when displaying the post ) - there is no way for another plugin to check if a shortcode exists in that post_meta field (without knowing the meta field, of course)
&lt;/li&gt;&lt;li&gt;example: a plugin needs to enqueue a script only if the current post contains a shortcode. The way it's being handled right now is:
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;if ( has_shortcode( $post-&amp;gt;post_content, $tag ) ) {
        //enqueue script
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This of course will only work for the main post_content. If another plugin uses a post_meta field to add content to the frontend, there is no way to check if that meta field contains the shortcode.
&lt;/p&gt;
&lt;p&gt;
I think one possible solution for this would be to introduce a new function, something like:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;function post_has_shortcode( $tag, $post_id = null ) {
        $post = get_post( $post_id );
        if ( empty( $post ) ) {
                return false;
        }
        if ( has_shortcode( $post-&amp;gt;post_content, $tag ) ) {
                return true;
        }
        return apply_filters( 'post_has_shortcode', false, $tag, $post_id );
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
A filter implementation for this would look like:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;function custom_plugin_has_shortcode( $has_shortcode, $tag, $post_id ) {
        if ( $has_shortcode ) {
                return true;
        }
        $custom_content = get_post_meta( $post_id, 'custom_plugin_custom_content', true );
        return has_shortcode( $custom_content, $tag );
}
add_filter( 'post_has_shortcode', 'custom_plugin_has_shortcode', 10, 3 );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Another option (which is better in terms of performance) is to gather all the content before checking for shortcodes - but it's not that "clean":
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;function post_has_shortcode( $tag, $post_id = null ) {
        $post = get_post( $post_id );
        if ( empty( $post ) ) {
                return false;
        }
        $content_to_check = apply_filters( 'get_content_for_shortcode_check', $post-&amp;gt;post_content, $post_id );
        return has_shortcode( $content_to_check, $tag );
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Would there be any other approaches for this? Is this something that can go into the core?
Thanks
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36603 (wp_publish_post() does not fire post_updated action) updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Fri, 27 May 2016 07:43:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36603#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36603#comment:4/1464335005185037</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
My educated guess is it's by design and publishing a scheduled post is not considered an update per se.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It changes one of the most important post fields in a major way. If it's by design I would like to hear a reason why it shouldn't be handled consistently with every other post change.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
A number of suitable actions are fired in wp_transition_post_status()
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
None of the hooks in status transition give access to full before/after state of the post.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11302 (Bulk editing posts should pre-fill fields with the same value / allow ...) updated</title>
      
        <dc:creator>Marcoevich</dc:creator>

      <pubDate>Fri, 27 May 2016 07:39:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11302#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11302#comment:28/1464334786616364</guid>
      <description>&lt;p&gt;
Hi guys I was wondering if there's any progress on this one?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34923 (Allow users to more seamlessly create page-based nav menus during ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 27 May 2016 07:05:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34923#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34923#comment:45/1464332754673773</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/34923#comment:43" title="Comment 43"&gt;celloexpressions&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
pretty much the only way to sanely navigate the available menu items panel is to tab back up to collapse the section before moving to the next one
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yep, this is an outstanding issue for those long lists where maybe using Escape to collapse the section would make sense, but that's for a separate ticket :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36917 (Re-architect wpdb::init_charset() for unit testing) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 27 May 2016 06:38:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36917#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36917#comment:1/1464331114431642</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
First pass.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36917.diff attached to Ticket #36917</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 27 May 2016 06:38:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36917/36917.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36917/36917.diff/1464331087110165</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36436 (wp_options table size  - cached RSS feeds) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 27 May 2016 06:03:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36436#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36436#comment:1/1464329028383913</guid>
      <description>invalid: &lt;p&gt;
Thanks for the ticket, @mklusak!
&lt;/p&gt;
&lt;p&gt;
There's no performance concern with having this data in the column - the TEXT column is designed to store large blobs of text. It doesn't affect the speed of queries, as InnoDB is smart enough to skip over those blobs of text when scanning the table.
&lt;/p&gt;
&lt;p&gt;
It doesn't affect WordPress performance, either - the feed transients are not automatically loaded when WordPress loads, so they don't cause unnecessary data transfer between WordPress and MySQL.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #35657 (Image height calculation not always available on body.load) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Fri, 27 May 2016 05:53:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35657#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35657#comment:3/1464328389530224</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Attached a proof of concept using intrinsic ratios.
&lt;/p&gt;
&lt;p&gt;
I don't think it's commit ready, if it's a suitable path to take then it could do with a little drying out for starters. Be great if I could get your thoughts @swissspidy.
&lt;/p&gt;
&lt;p&gt;
For testing, throttling to GPRS in dev tools will reproduce the problem most of the time.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35657-poc.diff attached to Ticket #35657</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Fri, 27 May 2016 05:47:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35657/35657-poc.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35657/35657-poc.diff/1464328031766516</guid>
      <description>&lt;p&gt;
Proof of concept
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36957 (Dialog to add Featured Images doesn't work when resizing images first) created</title>
      
        <dc:creator>pauljacobson</dc:creator>

      <pubDate>Fri, 27 May 2016 05:39:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36957</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36957/1464327584067517</guid>
      <description>&lt;p&gt;
I noticed that when I upload an image to use as a featured image and resize it before clicking on the "Set Featured Image" button, clicking on that button doesn't actually load the preview of the Featured Image. Instead, I have to –
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;resize the image,
&lt;/li&gt;&lt;li&gt;cancel the edit to return to the Media Library and
&lt;/li&gt;&lt;li&gt;then re-select the (resized) image and click on the "Set Featured Image" for the preview to load.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #34893 (Improve Customizer setting validation model) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Fri, 27 May 2016 05:14:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34893#comment:63</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34893#comment:63/1464326066755550</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37582" title="Customize: Run autoprefixer following [37476]
Adds prefixes to ..."&gt;37582&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Customize: Run autoprefixer following &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37476" title="Customize: Add setting validation model and control notifications to ..."&gt;[37476]&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Adds prefixes to box-shadow and transition properties.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34893" title="#34893: enhancement: Improve Customizer setting validation model (closed: fixed)"&gt;#34893&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37582]: Customize: Run autoprefixer following [37476]  Adds prefixes to ...</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Fri, 27 May 2016 05:14:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37582</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37582/1464326065602814</guid>
      <description>&lt;p&gt;
Customize: Run autoprefixer following &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37476" title="Customize: Add setting validation model and control notifications to ..."&gt;[37476]&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Adds prefixes to box-shadow and transition properties.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34893" title="#34893: enhancement: Improve Customizer setting validation model (closed: fixed)"&gt;#34893&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36946 (Provide `id` properties on core objects) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Fri, 27 May 2016 03:43:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36946#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36946#comment:7/1464320606436580</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36946#comment:2" title="Comment 2"&gt;jeremyfelt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also worth noting that the WP REST API team is using &lt;code&gt;id&lt;/code&gt; in responses for core objects.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We switched away from uppercase &lt;code&gt;ID&lt;/code&gt; because it's inconsistent with every other field. We have properties like &lt;code&gt;display_name&lt;/code&gt;, &lt;code&gt;post_title&lt;/code&gt;, etc, but &lt;code&gt;ID&lt;/code&gt; doesn't match this. It looks especially weird when you have things like &lt;code&gt;site_ID&lt;/code&gt;. Plus: every other abbreviation is lowercase, except for &lt;code&gt;ID&lt;/code&gt;. Under the current system, you could end up with &lt;code&gt;http_url_ID&lt;/code&gt;, which makes 0 sense.
&lt;/p&gt;
&lt;p&gt;
While @DrewAPicture is correct that "ID" is the correct casing for the English abbreviation, we're not using regular English sentences, we're using snake_case, which is all lowercase.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36946#comment:6" title="Comment 6"&gt;jb510&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is it worth discussing function and hook names at the same time? get_the_ID(), the_ID(), get_author_user_ids, get_current_blog_id().
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
PHP function names are case-insensitive, so I think it makes sense to re-case all these at the same time, since it won't break anything. Docs are the main thing that will need updating.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34923 (Allow users to more seamlessly create page-based nav menus during ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Fri, 27 May 2016 03:26:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34923#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34923#comment:44/1464319601320155</guid>
      <description>&lt;p&gt;
@boonebgorges following up on the discussion in devchat, we need some guidance here with respect to terms.
&lt;/p&gt;
&lt;p&gt;
Are there any future plans to introduce a &lt;code&gt;term_status&lt;/code&gt; field, similar to &lt;code&gt;post_status&lt;/code&gt;? In the customizer, there is currently no mechanism to create draft terms that become published when the customizer is saved and published. As a result, terms would need to be published immediately, which goes against the customizer's principles of previewing everything and publishing nothing before the user is ready, but aligns with the way terms work everywhere else (for example, when added to post drafts).
&lt;/p&gt;
&lt;p&gt;
Another possible option might be an internal taxonomy for drafted terms in the customizer. Would you foresee that creating issues with the direction core is taking taxonomies and terms currently?
&lt;/p&gt;
&lt;p&gt;
For this ticket, the current question is whether we should wait for future core support for draft terms, investigate the viability of an internal taxonomy for draft customizer terms, or publish terms immediately when they're added in the context of menus, similarly to what happens in the post editor and elsewhere. There is currently some disagreement regarding the acceptability of immediately publishing terms, but that may be necessary based on your perspective on these issues.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34923 (Allow users to more seamlessly create page-based nav menus during ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Fri, 27 May 2016 02:44:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34923#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34923#comment:43/1464317081387699</guid>
      <description>&lt;p&gt;
Note following up on the discussion in #design, &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34923/34923.ui.1.diff" title="Attachment '34923.ui.1.diff' in Ticket #34923"&gt;34923.ui.1.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34923/34923.ui.1.diff" title="Download"&gt;​&lt;/a&gt; can and should be tested for the UI (without needing the plugin), but don't hit save &amp;amp; publish as the menu items aren't real. Delete them before saving.
&lt;/p&gt;
&lt;p&gt;
@westonruter I don't think a post type parameter would be appropriate here because it's basically an extention of &lt;code&gt;show_in_nav_menus&lt;/code&gt;, with a specific part of that UI. Generically showing it in the customizer in the context of customize-posts would mean something different and shouldn't necessarily be tied to the menus interface as well (in addition to not being appropriate for core yet; this would presumably be more related to being able to edit content in the customizer I think, and should be saved for that future use). So I think the best behavior would be for it to be on by default, but able to be disabled with a filter so that core types could also be disabled if desired.
&lt;/p&gt;
&lt;p&gt;
@mapk (and everyone who participated in the design chat): the placement when adding to the list of menu items will be tricky. However, if it's added to the bottom of the list it will &lt;em&gt;always&lt;/em&gt; trigger an infinite scroll, for each item added, and as a result the new items wouldn't be next to each other. The best option is probably to insert them at the top so that they're all together. Since this would cause the list to jump down anyway, it should probably auto-scroll to the top when this happens (but that would only happen once if multiple consecutive items are added). Since this is designed to be most useful during the site setup context, this decision won't ultimately matter too much since these would be the first items in the list.
&lt;/p&gt;
&lt;p&gt;
Regarding a separate step to add to menu, I think that would be excessive, similar to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/34923#comment:13" title="Comment 13"&gt;13&lt;/a&gt;. Since the primary flow here is to create items so that they can be added to the menu, auto-adding to both places is probably the most appropriate action. If it were a two-step process this flow would become fairly cumbersome, especially for keyboard-only users, but also with touch, especially when adding multiple items at a time. Since we're targeting the site-setup flow primarily, auto-add to the menu is probably the best approach, and there is an existing workflow to remove (and bulk-remove) items from there if a user changes their mind. I would also guess that new users would have trouble understanding the additional step of adding to a menu, based on previous user testing with the old and new menus interfaces (we should user-test that).
&lt;/p&gt;
&lt;p&gt;
@afercia My thought in terms of accessibility would be to move it to the top of the list in tab order but keep it at the bottom visually. Infinite scroll is definitely an accessibility challenge here; pretty much the only way to sanely navigate the available menu items panel is to tab back up to collapse the section before moving to the next one, and putting the input at the top in terms of the html structure would make that easier from there. Perhaps a bit disorienting to jump like that, but probably better than the alternative.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31018 (Persistent database connections with mysqli) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 27 May 2016 02:03:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31018#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31018#comment:17/1464314629083300</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/31018/31018-3.diff" title="Attachment '31018-3.diff' in Ticket #31018"&gt;31018-3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/31018/31018-3.diff" title="Download"&gt;​&lt;/a&gt; is a direction I like.
&lt;/p&gt;
&lt;p&gt;
I'd like to see support for &lt;code&gt;ext/mysql&lt;/code&gt; added to the patch before we commit to anything, though.
&lt;/p&gt;
&lt;p&gt;
If someone feels like picking it up, dusting it off, and adding some unit tests, I think we might be onto something.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36422 (Specific table prefixes causes sql errors) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 27 May 2016 01:53:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36422#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36422#comment:5/1464313990856231</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37581" title="Setup: Sanity check for invalid table prefixes.
There are some table ..."&gt;37581&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Setup: Sanity check for invalid table prefixes.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
There are some table prefixes (for example, &lt;code&gt;7e1_&lt;/code&gt;), which MySQL will try and parse as values when they're note quoted in backticks. Because not everything remembers to quote their table names, it's best if we just discourage their use during setup.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36422" title="#36422: defect (bug): Specific table prefixes causes sql errors (closed: fixed)"&gt;#36422&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37581]: Setup: Sanity check for invalid table prefixes.  There are some table ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 27 May 2016 01:53:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37581</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37581/1464313989693507</guid>
      <description>&lt;p&gt;
Setup: Sanity check for invalid table prefixes.
&lt;/p&gt;
&lt;p&gt;
There are some table prefixes (for example, &lt;code&gt;7e1_&lt;/code&gt;), which MySQL will try and parse as values when they're note quoted in backticks. Because not everything remembers to quote their table names, it's best if we just discourage their use during setup.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36422" title="#36422: defect (bug): Specific table prefixes causes sql errors (closed: fixed)"&gt;#36422&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #20263 (Backticks in dbDelta cause warning and actually causes a query to ...) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 27 May 2016 01:30:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20263#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20263#comment:25/1464312640032495</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/20263#comment:24" title="Comment 24"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Should we support all characters?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Let's split that out into a new ticket, because it may turn into a rabbit hole, and we'll need to change WPDB to add the same support.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36603 (wp_publish_post() does not fire post_updated action) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Fri, 27 May 2016 01:01:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36603#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36603#comment:3/1464310876871110</guid>
      <description>&lt;p&gt;
Within core &lt;code&gt;wp_publish_post()&lt;/code&gt; is only called from &lt;code&gt;check_and_publish_future_post()&lt;/code&gt;, it lacks two features of &lt;code&gt;wp_update_post()&lt;/code&gt; and &lt;code&gt;wp_insert_post()&lt;/code&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;post_updated&lt;/code&gt; does not fire
&lt;/li&gt;&lt;li&gt;&lt;code&gt;wp_post-&amp;gt;date_modified&lt;/code&gt; does not change
&lt;/li&gt;&lt;li&gt;&lt;code&gt;wp_post-&amp;gt;date_modified_gmt&lt;/code&gt; does not change
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
My educated guess is it's by design and publishing a scheduled post is not considered an update per se.
&lt;/p&gt;
&lt;p&gt;
A number of suitable actions are fired in &lt;code&gt;wp_transition_post_status()&lt;/code&gt;, my inclination is to leave &lt;code&gt;wp_publish_post()&lt;/code&gt; unchanged.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36946 (Provide `id` properties on core objects) updated</title>
      
        <dc:creator>jb510</dc:creator>

      <pubDate>Fri, 27 May 2016 00:24:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36946#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36946#comment:6/1464308681143669</guid>
      <description>&lt;p&gt;
I was going to +1 ID, but the slack log convinced me otherwise...
&lt;/p&gt;
&lt;p&gt;
Is it worth discussing function and hook names at the same time? get_the_ID(), the_ID(), get_author_user_ids, get_current_blog_id().
&lt;/p&gt;
&lt;p&gt;
Seems like it's only the oldest of functions using ID.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36424 (graphically visualize if comments are closed (in wp-admin/edit.php)) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Fri, 27 May 2016 00:24:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36424#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36424#comment:37/1464308657671584</guid>
      <description>&lt;p&gt;
To the question what icon could be used if not a lock, please see above:
&lt;a href="https://core.trac.wordpress.org/ticket/36424#comment:8"&gt;https://core.trac.wordpress.org/ticket/36424#comment:8&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36462 (Updating or publishing a (custom) post that hasn't loaded completely ...) updated</title>
      
        <dc:creator>archon810</dc:creator>

      <pubDate>Thu, 26 May 2016 23:46:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36462#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36462#comment:13/1464306399236578</guid>
      <description>&lt;p&gt;
Wow, a 6 year old bug.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13473 (comment_status should be set to default_comment_status when ...) updated</title>
      
        <dc:creator>archon810</dc:creator>

      <pubDate>Thu, 26 May 2016 23:45:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13473#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13473#comment:19/1464306358940511</guid>
      <description>&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36462" title="#36462: defect (bug): Updating or publishing a (custom) post that hasn't loaded completely ... (new)"&gt;#36462&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6492 (Guids No Longer Have Permalink Format) updated</title>
      
        <dc:creator>keithcancel</dc:creator>

      <pubDate>Thu, 26 May 2016 23:37:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6492#comment:87</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6492#comment:87/1464305833440495</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/6492#comment:83" title="Comment 83"&gt;rmccue&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I &lt;a class="ext-link" href="https://github.com/rmccue/realguids"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;wrote a plugin&lt;/a&gt; to generate actual UUIDs for the GUID. It also uses the &lt;code&gt;urn:uuid:&lt;/code&gt; syntax so it's compatible with people expecting URLs. It adds &lt;code&gt;urn:&lt;/code&gt; as an allowed protocol, although we can probably get away with just not running &lt;code&gt;esc_url_raw&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I looked at your plugin would you recommend registering a protocol like you did in your plugin for this issue &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36928" title="#36928: defect (bug): GUID prepended with http:// (closed: wontfix)"&gt;#36928&lt;/a&gt;. Honestly, not have having to have the guid prepended with http or protocol at all would be nice. So getting rid of esc_url_raw would nice.
&lt;/p&gt;
&lt;p&gt;
--Edit wouldn't also adding a unique contraint to guid column be good idea?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36462 (Updating or publishing a (custom) post that hasn't loaded completely ...) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Thu, 26 May 2016 23:15:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36462#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36462#comment:12/1464304517014414</guid>
      <description>&lt;p&gt;
Related &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/13473" title="#13473: defect (bug): comment_status should be set to default_comment_status when ... (reopened)"&gt;#13473&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36706 (Add fallback for TextDomain field in get_plugin_data()) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 26 May 2016 23:14:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36706#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36706#comment:2/1464304494218182</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37580" title="Plugins: Fix order of arguments for the `strpos()` function added in ..."&gt;37580&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Plugins: Fix order of arguments for the &lt;code&gt;strpos()&lt;/code&gt; function added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37562" title="Plugins: In `get_plugin_data()` use the plugin slug for the text ..."&gt;[37562]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36706" title="#36706: enhancement: Add fallback for TextDomain field in get_plugin_data() (closed: fixed)"&gt;#36706&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37580]: Plugins: Fix order of arguments for the `strpos()` function added in ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 26 May 2016 23:14:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37580</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37580/1464304492825589</guid>
      <description>&lt;p&gt;
Plugins: Fix order of arguments for the &lt;code&gt;strpos()&lt;/code&gt; function added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37562" title="Plugins: In `get_plugin_data()` use the plugin slug for the text ..."&gt;[37562]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36706" title="#36706: enhancement: Add fallback for TextDomain field in get_plugin_data() (closed: fixed)"&gt;#36706&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36372 (Show Plugins Active at the Site Level) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 26 May 2016 22:42:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36372#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36372#comment:3/1464302533803045</guid>
      <description>&lt;p&gt;
Hi @mrjarbenne, thanks for the ticket!
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I recognize there is a filter to regress to the the previous behaviour, but I'm looking for the best of both worlds.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Aren't we all. :)
&lt;/p&gt;
&lt;p&gt;
I agree that not being able to filter out network active plugins by default is annoying. It would be nice for this to be able to extend this a bit, though possibly as a plugin instead.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;views_plugin&lt;/code&gt; filter can be used to add "Site Active" or "Network Active" as a status, but neither are actually a recognized &lt;code&gt;plugin_status&lt;/code&gt; yet.
&lt;/p&gt;
&lt;p&gt;
It looks like a filter could fit &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-admin/includes/class-wp-plugins-list-table.php?marks=232-234#L232"&gt;right before totals are calculated&lt;/a&gt; that would allow the injection/manipulation of more arbitrary status selections.
&lt;/p&gt;
&lt;p&gt;
I know that I would specifically use this filter to provide a list of "Global Active" plugins in the network admin for multi-network.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36956 (Trigger event when taxonomy term is added with ajax) created</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Thu, 26 May 2016 22:33:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36956</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36956/1464302008738245</guid>
      <description>&lt;p&gt;
When adding a taxonomy term via ajax, it would be nice if some JavaScript event was triggered, maybe on &lt;code&gt;.wp-list-table.tags&lt;/code&gt; or the newly added row itself.
&lt;/p&gt;
&lt;p&gt;
This would give taxonomy term plugins some event to listen for and take action on.
&lt;/p&gt;
&lt;p&gt;
Something akin to:
&lt;/p&gt;
&lt;pre class="wiki"&gt;this.trigger( 'term-added' );
&lt;/pre&gt;&lt;p&gt;
Maybe &lt;code&gt;tag-added&lt;/code&gt; is more appropriate, since all of those form elements seem to use &lt;code&gt;tag&lt;/code&gt; for everything, regardless of the taxonomy.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36675 (WP_MS_Sites_List_Table should use WP_Site_Query) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 26 May 2016 22:32:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36675#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36675#comment:10/1464301954325439</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36935 (Implement lazy-loading blog details in `WP_Site`) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 26 May 2016 21:59:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36935#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36935#comment:3/1464299981005850</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
+1
&lt;/p&gt;
&lt;p&gt;
We'll need to test this extensively &lt;strong&gt;and&lt;/strong&gt; make sure our unit tests are comprehensive.
&lt;/p&gt;
&lt;p&gt;
One note, because I've run into this before - &lt;code&gt;untrailingslashit()&lt;/code&gt; is in &lt;code&gt;wp-includes/formatting.php&lt;/code&gt;, which is not available until after multisite's bootstrap is complete. If &lt;code&gt;get_option()&lt;/code&gt; is called to populate the &lt;code&gt;siteurl&lt;/code&gt; or &lt;code&gt;home&lt;/code&gt; properties before then, it will break.
&lt;/p&gt;
&lt;p&gt;
We need to either move &lt;code&gt;formatting.php&lt;/code&gt; or &lt;code&gt;untrailingslashit()&lt;/code&gt; up in the chain.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36424 (graphically visualize if comments are closed (in wp-admin/edit.php)) updated</title>
      
        <dc:creator>pixelverbieger</dc:creator>

      <pubDate>Thu, 26 May 2016 21:57:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36424#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36424#comment:36/1464299852283816</guid>
      <description>&lt;p&gt;
addition:
@karmatosed for me a lock does not represent "passwort protected" -&amp;gt; this would be a key, no?
&lt;/p&gt;
&lt;p&gt;
helen said "We already use it for post edit locking" – but that's in a different column, isn't it? So there should be no problem; lock near edit link: editing is locked; lock in comments column: comments locked.
&lt;/p&gt;
&lt;p&gt;
:)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36424 (graphically visualize if comments are closed (in wp-admin/edit.php)) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Thu, 26 May 2016 21:54:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36424#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36424#comment:35/1464299657343441</guid>
      <description>&lt;p&gt;
Hmm,
&lt;/p&gt;
&lt;p&gt;
then instead of a lock we could show an exclamation mark (!) (or asterisk or similar) when a posts comment setting &lt;em&gt;differs&lt;/em&gt; from the global setting - because we expect the user to know if he wants comments in general or not (and did that setting), and all he would need to benefit from is a 'Hey, look, something is different here'
&lt;/p&gt;
&lt;p&gt;
:)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36735.1.patch attached to Ticket #36735</title>
      
        <dc:creator>dabnpits</dc:creator>

      <pubDate>Thu, 26 May 2016 21:40:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36735/36735.1.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36735/36735.1.patch/1464298833587889</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36735 (Add media, insert from URL and alt attribute) updated</title>
      
        <dc:creator>dabnpits</dc:creator>

      <pubDate>Thu, 26 May 2016 21:39:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36735#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36735#comment:7/1464298779605054</guid>
      <description>&lt;p&gt;
I've attempted to take this a little further in terms of accessibility by preventing the alt tag using the title as a fallback if the title is the URL.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36424 (graphically visualize if comments are closed (in wp-admin/edit.php)) updated</title>
      
        <dc:creator>pixelverbieger</dc:creator>

      <pubDate>Thu, 26 May 2016 21:22:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36424#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36424#comment:34/1464297772185639</guid>
      <description>&lt;p&gt;
Having read all your posts and the discussion on slack, I can say: @LittleBigThing got it and the better title for the ticket probably would be
&lt;/p&gt;
&lt;p&gt;
"graphically visualize if comments are different from the general setting in the blog"
&lt;/p&gt;
&lt;p&gt;
@karmatosed
&lt;/p&gt;
&lt;p&gt;
In my opinion, the benefit for the user is:
&lt;/p&gt;
&lt;p&gt;
If someone &lt;em&gt;is&lt;/em&gt; wanting comments on his site and unintentionally closed them on a particular post/page, it would be good for him to see the mistake and thus be able to correct it.
&lt;/p&gt;
&lt;p&gt;
On the other hand, if someone does &lt;em&gt;not&lt;/em&gt; want pages/posts to be commented (and makes this as a general seeting) but for some reason one page or post is published with comments open, it also would be good to see this mistake to be able to correct it.
&lt;/p&gt;
&lt;p&gt;
Not always is the one big default switch suitable for &lt;em&gt;all&lt;/em&gt; posts and pages in a website and then it is useful to see at a glance how the setting are in detail.
&lt;/p&gt;
&lt;p&gt;
And if someone is not at all interested in comments and related stuff like status and number of comments, he can switch off the column.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34923 (Allow users to more seamlessly create page-based nav menus during ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 26 May 2016 21:17:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34923#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34923#comment:42/1464297449738315</guid>
      <description>&lt;p&gt;
Worth considering there is a big issue for keyboard users with the current implementation. Being the input field to create new items at the bottom of the items list, keyboard users would have to tab through the entire list.
Especially about posts, these can potentially be hundreds and... the items list uses infinite scroll. Thus, users would be forced to tab dozens (or hundreds) of times before they can reach the input field.
Not arguing, but maybe this is because the current implementation tries to use a UI that has been designed for a different task and just doesn't fit this new use-case.
&lt;/p&gt;
&lt;p&gt;
Right now, the only solution I can think off the top of my head would be moving the "Create new" field at the to of the list, maybe initially collapsed and with a button to expand it, as for example Press This does for Categories. You can see Press This on your local WP install: &lt;code&gt;/wp-admin/press-this.php&lt;/code&gt;. UI people with more experience than me could certainly think at better solutions. I'd just like to invite everyone to consider the functionality, visual, interaction, and the accessibility issues at the same time :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36955 (Remove emoji from core. PLEASE) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 26 May 2016 21:05:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36955#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36955#comment:2/1464296750556653</guid>
      <description>&lt;p&gt;
Previously: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32102" title="#32102: enhancement: Emoji - only load when required (closed: wontfix)"&gt;#32102&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36940 (Break `manage_sites` capability up into more targeted caps) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Thu, 26 May 2016 20:54:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36940#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36940#comment:3/1464296067825583</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36940#comment:2" title="Comment 2"&gt;jeremyfelt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Are there any downsides to using meta caps instead? It seems like the right scenario for it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We still need to update the individual files to check for the newly mapped caps.
&lt;/p&gt;
&lt;p&gt;
The reason to use &lt;code&gt;map_meta_cap&lt;/code&gt; is to make assumptions that one capability conditionally maps to another capability. In this case, can &lt;code&gt;manage_site_settings&lt;/code&gt; map to &lt;code&gt;manage_sites&lt;/code&gt;? Yes. But if we need to rely on &lt;code&gt;map_meta_cap&lt;/code&gt; internally for this, overriding that behavior is more difficult than a user not having the cap, because no users ever have these caps directly, which means allowing or denying from the global &lt;code&gt;$wp_roles&lt;/code&gt; array will no longer work. Instead, one would need to also hook into &lt;code&gt;map_meta_cap&lt;/code&gt; to override the previous &lt;code&gt;map_meta_cap&lt;/code&gt; conclusion, and that is not terribly straight forward.
&lt;/p&gt;
&lt;p&gt;
What would we win? Is it worth the cost of complexity since there is no use-case inside of WordPress proper where a user would have &lt;code&gt;manage_sites&lt;/code&gt; and not any of the others?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If we introduce these, are there other places in core where they may apply?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;code&gt;site-new.php&lt;/code&gt; is the only other direct change that I found. It uses &lt;code&gt;create_sites&lt;/code&gt; in one place, and &lt;code&gt;manage_sites&lt;/code&gt; in another, so you can't actually create a new site unless you can also &lt;code&gt;manage_sites&lt;/code&gt; which, I guess maybe makes sense, but one cap shouldn't be a prerequisite for another (that's what roles are for.)
&lt;/p&gt;
&lt;p&gt;
Any other places where &lt;code&gt;manage_sites&lt;/code&gt; is used, is as a general assumption that the current user can manage "all" sites, though not necessarily a specific one.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is &lt;code&gt;manage_site_&lt;/code&gt; the right name when thinking about future compatibility for other caps at the site level?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Probably... The &lt;code&gt;manage_&lt;/code&gt; prefix is used in many places, and I think &lt;code&gt;_site_&lt;/code&gt; is a good next-level namespace to identify that it's a network-area site-specific capability check. &lt;code&gt;edit_&lt;/code&gt; vs. &lt;code&gt;manage_&lt;/code&gt; might work too, but is the ability to manage something is different than the ability to edit something?
&lt;/p&gt;
&lt;p&gt;
If we wanted parity with Posts, for example, then we'd opt for &lt;code&gt;edit_site&lt;/code&gt; and then toss that into &lt;code&gt;map_meta_cap()&lt;/code&gt; or some other new multisite specific equivalent. Right now, we don't map any network area caps that I can think of, so we're starting to rabbit hole ourselves. :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
A plugin can already alter the caps required for individual tabs.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
A plugin can only alter the caps that are checked to make the tabs appear. The URL for the files each tab links to can still be accessed by any user that has the &lt;code&gt;manage_sites&lt;/code&gt; capability and hits the URL directly.
&lt;/p&gt;
&lt;p&gt;
---
&lt;/p&gt;
&lt;p&gt;
In summary:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Each file needs its own unique capability check at the top.
&lt;/li&gt;&lt;li&gt;If we decide to use &lt;code&gt;map_meta_cap&lt;/code&gt; to check the &lt;code&gt;$pagenow&lt;/code&gt; instead, that will work, but be less efficient and require more hacks to work-around. And we'd likely want to use the Post object and it's single-caps as a guide.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;map_meta_cap&lt;/code&gt; filtering seems unnecessary in core, since no Super Admin would ever not have any of the caps being mapped to &lt;code&gt;manage_sites&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36372 (Show Plugins Active at the Site Level) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 26 May 2016 20:39:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36372#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36372#comment:2/1464295147889147</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1464295145001771"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36935 (Implement lazy-loading blog details in `WP_Site`) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 26 May 2016 20:34:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36935#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36935#comment:2/1464294875122810</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1464294873001761"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31664 (Multisite network setup for .htaccess) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 26 May 2016 20:32:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31664#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31664#comment:4/1464294767099776</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1464294765001752"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31644 (mysqli_get_client_version in wp-db) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 26 May 2016 20:32:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31644#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31644#comment:20/1464294750676308</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1464294748001749"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33307 (Lack of any hooks for user registration in case of multisite ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 26 May 2016 20:31:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33307#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33307#comment:2/1464294670068202</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1464294666001747"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31685 (Better responsive styling for my-sites.php) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 26 May 2016 20:27:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31685#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31685#comment:26/1464294460577421</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1464294458001731"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33573 (Use the site icon introduced in 4.3 for the My Sites page) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 26 May 2016 20:23:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33573#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33573#comment:5/1464294230920482</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1464294229001722"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3573 (2.0.x  &lt;td&gt; Default &lt;/tr&gt;  in link-categories.php) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 26 May 2016 20:23:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3573#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3573#comment:3/1464294217539206</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1464294215001720"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36940 (Break `manage_sites` capability up into more targeted caps) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 26 May 2016 20:19:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36940#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36940#comment:2/1464293952375730</guid>
      <description>&lt;p&gt;
In general, +1, though a few thoughts after discussion during bug scrub today:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Are there any downsides to using meta caps instead? It seems like the right scenario for it.
&lt;/li&gt;&lt;li&gt;If we introduce these, are there other places in core where they may apply?
&lt;/li&gt;&lt;li&gt;Is &lt;code&gt;manage_site_&lt;/code&gt; the right name when thinking about future compatibility for other caps at the site level?
&lt;/li&gt;&lt;li&gt;A plugin can already alter the caps required for individual tabs.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36432 (Show Site ID and Theme in My Sites) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 26 May 2016 20:18:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36432#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36432#comment:1/1464293890921318</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by richardtape. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1464293889001710"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36955 (Remove emoji from core. PLEASE) closed</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 26 May 2016 20:13:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36955#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36955#comment:1/1464293593500339</guid>
      <description>maybelater: &lt;p&gt;
Hi Online-marketing, welcome to trac.
&lt;/p&gt;
&lt;p&gt;
The emoji script fixes browser display issues for emoji.  Without it, emoji would just be displayed as an empty box and that is a horrid experience for readers. &lt;a class="ext-link" href="https://peterwilson.cc/intuition-is-crap/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Testing has shown no change in page load/render time&lt;/a&gt; for browsers that don't need the polyfill.
&lt;/p&gt;
&lt;p&gt;
If you aren't using emoji anywhere (including user comments) or prefer to provide a bad experience to some users, &lt;a class="ext-link" href="https://wordpress.org/plugins/disable-emojis/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/disable-emojis/&lt;/a&gt; is a plugin that will remove the script for you.
&lt;/p&gt;
&lt;p&gt;
Closing as maybelater as the script will be removed one day, but we are likely years away from that happening. We need all browsers to completely support emoji and the usage share for browsers that don't support it to drop much closer to zero.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36940 (Break `manage_sites` capability up into more targeted caps) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 26 May 2016 20:07:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36940#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36940#comment:1/1464293224839846</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by richardtape. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1464293222001674"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20263 (Backticks in dbDelta cause warning and actually causes a query to ...) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 26 May 2016 20:06:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20263#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20263#comment:24/1464293185059568</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/20263/20263.9.diff" title="Attachment '20263.9.diff' in Ticket #20263"&gt;20263.9.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/20263/20263.9.diff" title="Download"&gt;​&lt;/a&gt; I changed the regex to match a column/index name from &lt;code&gt;\w&lt;/code&gt; to &lt;code&gt;(?:[0-9a-zA-Z$_-]|[\xC2-\xDF][\x80-\xBF])+&lt;/code&gt; which is also used by &lt;code&gt;wpdb::get_table_from_query()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Technically, MySQL supports more characters. From the &lt;a class="ext-link" href="http://dev.mysql.com/doc/refman/5.7/en/identifiers.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;docs&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Permitted characters in unquoted identifiers:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;ASCII: [0-9,a-z,A-Z$_] (basic Latin letters, digits 0-9, dollar, underscore)
&lt;/li&gt;&lt;li&gt;Extended: U+0080 .. U+FFFF
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Permitted characters in quoted identifiers include the full Unicode Basic Multilingual Plane (BMP), except U+0000:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;ASCII: U+0001 .. U+007F
&lt;/li&gt;&lt;li&gt;Extended: U+0080 .. U+FFFF
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Should we support all characters?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>20263.9.diff attached to Ticket #20263</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 26 May 2016 19:57:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/20263/20263.9.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/20263/20263.9.diff/1464292650671797</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36955 (Remove emoji from core. PLEASE) created</title>
      
        <dc:creator>Online-marketing</dc:creator>

      <pubDate>Thu, 26 May 2016 19:57:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36955</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36955/1464292636583537</guid>
      <description>&lt;p&gt;
Hello,
&lt;/p&gt;
&lt;p&gt;
I am afraid that unneccessary scripts like the emoji script just bloat the wordpress core.
For the sake of streamlining the core, please remove the emoji feature and - if you want it, offer a plugin in exchange. I think it would be a progress.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36424 (graphically visualize if comments are closed (in wp-admin/edit.php)) updated</title>
      
        <dc:creator>LittleBigThing</dc:creator>

      <pubDate>Thu, 26 May 2016 19:56:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36424#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36424#comment:33/1464292617716761</guid>
      <description>&lt;p&gt;
Just read the conversation on Slack #design. I agree that it becomes clutter and I am also not sure whether it is useful information on the post list screen.
&lt;/p&gt;
&lt;p&gt;
What I would find useful is to be able to see &lt;em&gt;at a glance&lt;/em&gt; that comments are closed on (certain) posts/pages if I have closed commenting by the general option. I can find out using 'Quick edit', but that's post by post... 'Bulk edit' is not useful for this.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
&lt;em&gt;Maybe an interesting point: comments allowed/closed is the only thing that is not visible at a glance in the list table by default (besides the slug). All things editable using 'Quick edit' are there, except for this (and the slug). :-)&lt;/em&gt;
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Further, the defaults are &lt;em&gt;not&lt;/em&gt; shown explicitly in the list table.
For example, since posts are not sticky by default, if a post is sticky it is shown in the table. If a post is password protected, it is shown in the list table. So on...
So if we follow this thinking (which is logical), this would mean that indicating whether comments are allowed on a post/page is useful if it is based on the general option (Settings/Discussion). For example, if comments are allowed in general, then it may be interesting to see if comments are closed on certain posts/pages (using a lock like above). But if comments are closed in general, then it could be indicated if comments are allowed for certain posts/pages, using an open lock for example.
This of course a bit trickier to implement, but might be more useful and would make more sense. This would also avoid the possible clutter for most sites for posts, since the general option equals mostly to the option for an individual post.
Well, I hope this reasoning makes sense anyway. :-)
&lt;/p&gt;
&lt;p&gt;
It is also interesting to think about how such a change would affect the user after updating to a new version of WordPress supporting this feature... it could be confusing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18877 (DRY up rewrite rule matching) updated</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Thu, 26 May 2016 19:54:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18877#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18877#comment:22/1464292493737755</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/18877/18877.6.diff" title="Attachment '18877.6.diff' in Ticket #18877"&gt;attachment:18877.6.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/18877/18877.6.diff" title="Download"&gt;​&lt;/a&gt;,
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Rename the method &lt;code&gt;find_match()&lt;/code&gt; to &lt;code&gt;get_rewrite_rule_for_request()&lt;/code&gt; to document itself articulately.
&lt;/li&gt;&lt;li&gt;The method operates on the rewrite rules of the WP_Rewrite instance, rather than passing in an array of rewrite rules.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Feedback and review welcome. Moving this to the 4.6 milestone, and will commit soon if there no objections come up.
&lt;/p&gt;
&lt;p&gt;
cc @rmccue
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>18877.6.diff attached to Ticket #18877</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Thu, 26 May 2016 19:51:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18877/18877.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18877/18877.6.diff/1464292270763324</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #26504 (Semantic elements for non-link links) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 26 May 2016 19:22:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26504#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26504#comment:42/1464290535750059</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1464290533002434"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18877 (DRY up rewrite rule matching) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 26 May 2016 18:48:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18877#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18877#comment:21/1464288530118640</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by eric. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1464288527007179"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36424 (graphically visualize if comments are closed (in wp-admin/edit.php)) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Thu, 26 May 2016 18:01:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36424#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36424#comment:32/1464285676743166</guid>
      <description>&lt;p&gt;
If we expect it as the usual behaviour of having comments enabled (do we?), this would be a reminder for pages which have comments closed, so they can be reopened or whatever. And it also would show the state of other posts indirectly (no lock = comments allowed, everything is fine here). Or if one would like all comments closed sitewide, he could see they definitely are.
We would need to know for what reasons people are closing/(re)opening their comments to get a feeling if this was a helpful enhancement or just children's playing. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34923 (Allow users to more seamlessly create page-based nav menus during ...) updated</title>
      
        <dc:creator>mapk</dc:creator>

      <pubDate>Thu, 26 May 2016 17:47:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34923#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34923#comment:41/1464284826984459</guid>
      <description>&lt;p&gt;
After some discussion about the recent gif on Slack there were two points made that could be explored further.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Should new items that are being added also get added to the menu automatically? Or should this be a two step process where I would add the item to the list first, then move it over to the menu?
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;How and where do new items show in the list above the input field? Right now there doesn't seem to be any immediate feedback to the user that the item was successfully added to the list.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34923 (Allow users to more seamlessly create page-based nav menus during ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 26 May 2016 17:19:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34923#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34923#comment:40/1464283164265706</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by westonruter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1464283162001573"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36424 (graphically visualize if comments are closed (in wp-admin/edit.php)) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Thu, 26 May 2016 17:18:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36424#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36424#comment:31/1464283082893709</guid>
      <description>&lt;p&gt;
This question came up in the design chat and is really important to ask. Why are we adding this indication here? What importance does it have to the user at this point? What does it add to their use knowing this state here through the icon indication?
&lt;/p&gt;
&lt;p&gt;
Personally, I'm not convinced at this stage it does add anything or is important. I'm not sure what behaviour or process is improved or helped knowing it's locked.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36424 (graphically visualize if comments are closed (in wp-admin/edit.php)) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 26 May 2016 17:06:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36424#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36424#comment:30/1464282374528844</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by karmatosed. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1464282372001515"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36922 (Customizer message when not showing widget area needs refinement) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 26 May 2016 17:04:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36922#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36922#comment:5/1464282284447937</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by karmatosed. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1464282282001509"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36953 (Meta lazyloading can cause excessive calls to object cache) updated</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Thu, 26 May 2016 16:56:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36953#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36953#comment:2/1464281777527827</guid>
      <description>&lt;p&gt;
Less cache gets would be a good thing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20875 (Introduce wp_cache_get_multi()) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Thu, 26 May 2016 16:49:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20875#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20875#comment:15/1464281372687799</guid>
      <description>&lt;p&gt;
Related: &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/31245" title="#31245: enhancement: Replace alloptions with a key cache (assigned)"&gt;#31245&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20875 (Introduce wp_cache_get_multi()) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 26 May 2016 16:44:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20875#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20875#comment:14/1464281079081468</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36953" title="#36953: defect (bug): Meta lazyloading can cause excessive calls to object cache (closed: fixed)"&gt;#36953&lt;/a&gt; is a concrete use case for &lt;code&gt;wp_cache_get_multi()&lt;/code&gt; in core.
&lt;/p&gt;
&lt;p&gt;
How can we move this ticket forward? Since it looks like plugins and cache drop-ins are already implementing &lt;code&gt;wp_cache_get_multi()&lt;/code&gt;, maybe a good place to start is to do an inventory to understand what the interface has got to look like. I'm not sure how &lt;code&gt;wp_cache_get_multi( $keys, $groups )&lt;/code&gt; would work, since individual keys are group-specific. &lt;a class="ext-link" href="https://github.com/ericmann/Redis-Object-Cache/blob/master/object-cache.php#L120"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/ericmann/Redis-Object-Cache/blob/master/object-cache.php#L120&lt;/a&gt; seems like it has to be the correct function signature.
&lt;/p&gt;
&lt;p&gt;
It would be helpful to get developers of some popular cache plugins looped into the conversation, so that we can all be on the same page with function signatures, etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36953 (Meta lazyloading can cause excessive calls to object cache) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 26 May 2016 16:38:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36953#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36953#comment:1/1464280726587513</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36954 (Cancelling an admin email address change on Multisite lacks a nonce) created</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 26 May 2016 16:36:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36954</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36954/1464280615262082</guid>
      <description>&lt;p&gt;
The change of admin email address on a site in Multisite requires the link in a confirmation email to be clicked before it's activated. The "Cancel" link shown next to the "Email Address" field on the General Settings screen during that process lacks a nonce.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36953 (Meta lazyloading can cause excessive calls to object cache) created</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 26 May 2016 16:36:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36953</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36953/1464280594373783</guid>
      <description>&lt;p&gt;
&lt;code&gt;WP_Query&lt;/code&gt; calls &lt;code&gt;wp_queue_posts_for_term_meta_lazyload()&lt;/code&gt;, which in turn grabs the &lt;code&gt;{$taxonomy}_relationships&lt;/code&gt; cache for each found post, for each taxonomy that they belong to. So if you're fetching 20 items, and each item is in 10 taxonomies, the process will require 200 cache gets. This is in addition to the dozens of other other cache priming gets that happens in &lt;code&gt;WP_Query&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
On very high traffic sites running an object cache backend, the high volume calls to the cache can cause performance issues.
&lt;/p&gt;
&lt;p&gt;
A truly general fix would be &lt;code&gt;wp_cache_get_multi()&lt;/code&gt;, which would allow functions like this to reduce cache roundtrips by one or two orders of magnitude. See &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/20875" title="#20875: enhancement: Introduce wp_cache_get_multi() (assigned)"&gt;#20875&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
In the meantime, two things to explore:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;code&gt;WP_Query&lt;/code&gt; decides whether to queue posts for termmeta lazyloading based on the value of 'update_term_meta_cache'. This should be more fine-grained. A new &lt;code&gt;WP_Query&lt;/code&gt; parameter &lt;code&gt;lazyload_term_meta&lt;/code&gt;, which would default to the value of &lt;code&gt;update_term_meta&lt;/code&gt;, seems appropriate. This way, very high-traffic sites that don't use termmeta and thus don't need to lazyload it can disable the feature in a targeted way, via a &lt;code&gt;pre_get_posts&lt;/code&gt; callback.
&lt;/li&gt;&lt;li&gt;Look for ways to cut back on cache queries in the lazyload process. Not sure if that's feasible, since different posts keep their taxonomy relationships in different cache buckets, but it's worth looking into.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
1 should be doable for 4.6.
&lt;/p&gt;
&lt;p&gt;
cc @patrickgarman, who brought this to my attention.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23634 (New hook for adding content after each comment) updated</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Thu, 26 May 2016 16:30:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23634#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23634#comment:18/1464280205232207</guid>
      <description>&lt;p&gt;
Okay if you apply the patch from @MikeHansenMe and add a echo "Hello Name";. It will just echo out on the parent itself rather then displaying on the child. So it seems like adding in a after_element action into class-wp-walker.php would make more sense. So that it could be used for menus and comments etc. Thoughts?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29785 (User count not correct) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 26 May 2016 16:19:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29785#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29785#comment:4/1464279582163404</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Performance is one concern here, though I guess accuracy is more important if the performance difference is not huge.
&lt;/p&gt;
&lt;p&gt;
A simple join against the user table is probably not enough. Deleted and spam users should not show up in the count. Neither should non-activated users. We may need a different query for &lt;code&gt;is_multisite()&lt;/code&gt; to handle these cases. Unit tests would be helpful.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36128 (get_post_meta() without key and single as true) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 26 May 2016 16:12:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36128#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36128#comment:2/1464279171269027</guid>
      <description>wontfix: &lt;blockquote class="citation"&gt;
&lt;p&gt;
This has serious backwards compatibility issues
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed. Unfortunately, this is not something we can change.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #35995 (Registering taxonomies for attachment mime types) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 26 May 2016 16:11:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35995#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35995#comment:2/1464279102229025</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looks like support for &lt;code&gt;attachment:image&lt;/code&gt; and friends was introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/21948" title="Use the regular post type UI for editing single media items ..."&gt;[21948]&lt;/a&gt;. That's a good place to start to determine the extent to which we want to support the full gamut of the taxonomy API for these types of taxonomies.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19627 (Themes should be able to opt-in to a static front page) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 26 May 2016 16:06:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19627#comment:73</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19627#comment:73/1464278784373307</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #themereview by greenshady. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/themereview/p1464278782005242"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17026 (parent_dropdown() is not filterable) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 26 May 2016 16:02:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17026#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17026#comment:14/1464278538655910</guid>
      <description>maybelater: &lt;p&gt;
I don't have an appetite for this change. It's likely to cause problems for installs that that have posts with large &lt;code&gt;post_content&lt;/code&gt;. "Best" solution would be to have a way to fetch post data that includes &lt;code&gt;post_title&lt;/code&gt; but not &lt;code&gt;post_content&lt;/code&gt;, but this is a pretty significant change to support an unused function.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #35431 (Hierarchical comment queries do not work for interrupted hierarchies) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 26 May 2016 15:56:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35431#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35431#comment:4/1464278211245129</guid>
      <description>maybelater: &lt;p&gt;
Implementation here is going to be tricky. We don't want to force lots of additional cache-missing queries. We'll need a patch, or at least a description of an approach, before proceeding. If anyone wants to champion the change, please reopen.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #35858 ("wpmu_welcome_notification" has a filter post-processing routines in ...) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 26 May 2016 15:53:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35858#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35858#comment:4/1464278011256958</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35858/35858.diff" title="Attachment '35858.diff' in Ticket #35858"&gt;35858.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35858/35858.diff" title="Download"&gt;​&lt;/a&gt; seems like a good approach. Personally, I'd call it &lt;code&gt;update_welcome_email_tokenized&lt;/code&gt; to make the parallel with &lt;code&gt;update_welcome_email&lt;/code&gt; clearer, but I don't feel strongly about it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36415 (Unit tests for functions.php's get_weekstartend method) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 26 May 2016 15:47:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36415#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36415#comment:6/1464277673024484</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37579" title="Add tests for `get_weekstartend()`.
Props pbearne, tloureiro.
Fixes ..."&gt;37579&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Add tests for &lt;code&gt;get_weekstartend()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props pbearne, tloureiro.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36415" title="#36415: enhancement: Unit tests for functions.php's get_weekstartend method (closed: fixed)"&gt;#36415&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37579]: Add tests for `get_weekstartend()`.  Props pbearne, tloureiro. Fixes ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 26 May 2016 15:47:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37579</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37579/1464277672400442</guid>
      <description>&lt;p&gt;
Add tests for &lt;code&gt;get_weekstartend()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props pbearne, tloureiro.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36415" title="#36415: enhancement: Unit tests for functions.php's get_weekstartend method (closed: fixed)"&gt;#36415&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36415 (Unit tests for functions.php's get_weekstartend method) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 26 May 2016 15:46:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36415#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36415#comment:5/1464277584226506</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@pbearne Thanks for the patch!
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;strtotime()&lt;/code&gt; tests don't really test &lt;code&gt;get_weekstartend()&lt;/code&gt;, they test &lt;code&gt;strtotime()&lt;/code&gt; and &lt;code&gt;date()&lt;/code&gt;. I don't think we need to do that.
&lt;/p&gt;
&lt;p&gt;
I'm going to add one or two additional tests, and change some wording. Otherwise looks good. Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36796 (Link "widget areas" to widgets panel in menu locations section description) updated</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Thu, 26 May 2016 15:39:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36796#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36796#comment:5/1464277153322731</guid>
      <description>&lt;p&gt;
@celloexpressions patch applied fine, without any errors and customizer loads fine. This was using TwentySixteen as the active theme on the local dev site.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36796 (Link "widget areas" to widgets panel in menu locations section description) updated</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Thu, 26 May 2016 15:25:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36796#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36796#comment:4/1464276339918322</guid>
      <description>&lt;p&gt;
@celloexpressions I will clean up my local WP and apply the patch again, just to check.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18857 (get_plugin_page_hookname uses menu_title to construct subpage load-hooks) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 26 May 2016 15:21:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18857#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18857#comment:24/1464276117776710</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #polyglots by yui. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/polyglots/p1464276116003266"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36814 (get_the_terms() caches term count property) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 26 May 2016 15:21:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36814#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36814#comment:6/1464276105787076</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37578" title="Docs: Remove unnecessary backtick-escaping around two function ..."&gt;37578&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Remove unnecessary backtick-escaping around two function references in the DocBlock for &lt;code&gt;get_object_term_cache()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Known classes, methods, and functions are now auto-linked and formatted in the Code Reference. :-)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37573" title="Store only term IDs in object term relationships caches.
Previously, ..."&gt;[37573]&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36814" title="#36814: defect (bug): get_the_terms() caches term count property (closed: fixed)"&gt;#36814&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37578]: Docs: Remove unnecessary backtick-escaping around two function ...</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 26 May 2016 15:21:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37578</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37578/1464276105218842</guid>
      <description>&lt;p&gt;
Docs: Remove unnecessary backtick-escaping around two function references in the DocBlock for &lt;code&gt;get_object_term_cache()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Known classes, methods, and functions are now auto-linked and formatted in the Code Reference. :-)
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37573" title="Store only term IDs in object term relationships caches.
Previously, ..."&gt;[37573]&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36814" title="#36814: defect (bug): get_the_terms() caches term count property (closed: fixed)"&gt;#36814&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Tickets #35381,​36921 batch updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 26 May 2016 15:16:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=35381%2C36921</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=35381%2C36921/1464275786689305</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37577" title="Docs: Link up a reference to the `get_terms_args` filter in the hook ..."&gt;37577&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Link up a reference to the &lt;code&gt;get_terms_args&lt;/code&gt; filter in the hook doc for &lt;code&gt;get_terms_defaults&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35381" title="#35381: defect (bug): Introduce `WP_Term_Query` (closed: fixed)"&gt;#35381&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36921" title="#36921: task (blessed): Allow hooks referenced inline in Docblocks to be linked (closed: fixed)"&gt;#36921&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [37577]: Docs: Link up a reference to the `get_terms_args` filter in the hook ...</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 26 May 2016 15:16:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37577</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37577/1464275786135130</guid>
      <description>&lt;p&gt;
Docs: Link up a reference to the &lt;code&gt;get_terms_args&lt;/code&gt; filter in the hook doc for &lt;code&gt;get_terms_defaults&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35381" title="#35381: defect (bug): Introduce `WP_Term_Query` (closed: fixed)"&gt;#35381&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36921" title="#36921: task (blessed): Allow hooks referenced inline in Docblocks to be linked (closed: fixed)"&gt;#36921&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36901 (Removing wp_die() from wp_allow_comment()) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 26 May 2016 15:04:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36901#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36901#comment:6/1464275078734373</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I won't have time to go in-depth on this for a while, but at a glance, a big +1. This is exactly the strategy I had in mind.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #35381,​36951 batch updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 26 May 2016 14:55:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=35381%2C36951</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=35381%2C36951/1464274540169183</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37576" title="Pass the proper values to `get_terms` action.
* `$term_query` should ..."&gt;37576&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Pass the proper values to &lt;code&gt;get_terms&lt;/code&gt; action.&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;$term_query&lt;/code&gt; should be passed.
&lt;/li&gt;&lt;li&gt;Second and third params should come from the &lt;code&gt;$term_query-&amp;gt;query_vars&lt;/code&gt; array, so that they're fully parsed.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
These changes were missed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37572" title="Introduce `WP_Term_Query` and use in `get_terms()`.
`WP_Term_Query` ..."&gt;[37572]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props flixos90, sebastian.pisula.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35381" title="#35381: defect (bug): Introduce `WP_Term_Query` (closed: fixed)"&gt;#35381&lt;/a&gt;.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36951" title="#36951: defect (bug): Lost param $term_query in get_terms filter (closed: fixed)"&gt;#36951&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [37576]: Pass the proper values to `get_terms` action.  * `$term_query` should ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 26 May 2016 14:55:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37576</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37576/1464274538998094</guid>
      <description>&lt;p&gt;
Pass the proper values to &lt;code&gt;get_terms&lt;/code&gt; action.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;$term_query&lt;/code&gt; should be passed.
&lt;/li&gt;&lt;li&gt;Second and third params should come from the &lt;code&gt;$term_query-&amp;gt;query_vars&lt;/code&gt; array, so that they're fully parsed.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
These changes were missed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37572" title="Introduce `WP_Term_Query` and use in `get_terms()`.
`WP_Term_Query` ..."&gt;[37572]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Props flixos90, sebastian.pisula.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35381" title="#35381: defect (bug): Introduce `WP_Term_Query` (closed: fixed)"&gt;#35381&lt;/a&gt;.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36951" title="#36951: defect (bug): Lost param $term_query in get_terms filter (closed: fixed)"&gt;#36951&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36951 (Lost param $term_query in get_terms filter) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 26 May 2016 14:50:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36951#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36951#comment:2/1464274214669057</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36675 (WP_MS_Sites_List_Table should use WP_Site_Query) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Thu, 26 May 2016 13:52:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36675#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36675#comment:9/1464270720070951</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch looks great! This could easily go in as is, but the &lt;code&gt;esc_like()&lt;/code&gt; needs a few things:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;More eyes
&lt;/li&gt;&lt;li&gt;Pairity with wildcard user search
&lt;/li&gt;&lt;li&gt;Tests to ensure its secure
&lt;/li&gt;&lt;li&gt;Tests to ensure it is the same and/or better than it was before
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Tests could come later, and we could revert the wildcard stuff if we are anxious to get this in early, which I am.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20263 (Backticks in dbDelta cause warning and actually causes a query to ...) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 26 May 2016 13:46:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20263#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20263#comment:23/1464270373257450</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/20263/20263.8.diff" title="Attachment '20263.8.diff' in Ticket #20263"&gt;20263.8.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/20263/20263.8.diff" title="Download"&gt;​&lt;/a&gt; is &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/20263/20263.7.diff" title="Attachment '20263.7.diff' in Ticket #20263"&gt;20263.7.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/20263/20263.7.diff" title="Download"&gt;​&lt;/a&gt; plus whitespace and a few more comments. It also includes the missing &lt;code&gt;unset()&lt;/code&gt; part.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>20263.8.diff attached to Ticket #20263</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 26 May 2016 13:37:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/20263/20263.8.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/20263/20263.8.diff/1464269847494267</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36675 (WP_MS_Sites_List_Table should use WP_Site_Query) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 26 May 2016 13:04:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36675#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36675#comment:8/1464267878782226</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36675/36675.diff" title="Attachment '36675.diff' in Ticket #36675"&gt;36675.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36675/36675.diff" title="Download"&gt;​&lt;/a&gt; makes use of &lt;code&gt;WP_Site_Query&lt;/code&gt; in &lt;code&gt;WP_MS_Sites_List_Table&lt;/code&gt;. Replacing the SQL with the arguments for the site query was pretty straightforward. In the implementation I use &lt;code&gt;WP_Site_Query&lt;/code&gt; directly to be able to access the &lt;code&gt;$found_sites&lt;/code&gt; property as well (and &lt;code&gt;get_sites()&lt;/code&gt; isn't merged yet anyway). Since the list table expects the sites to be arrays, I only query the IDs and run them through &lt;code&gt;get_site( $id, ARRAY_A )&lt;/code&gt; afterwards.
&lt;/p&gt;
&lt;p&gt;
A small exception was how the search in the list table currently works. &lt;code&gt;WP_Site_Query&lt;/code&gt; didn't natively support the way wildcards are used in the search there yet. That's why I also made a minor modification in &lt;code&gt;WP_Site_Query&lt;/code&gt; itself, allowing to pass asterisks into the search string. When doing so, these asterisks will be replaced by &lt;code&gt;%&lt;/code&gt; and not be escaped so that they act as wildcards. With that change it is possible to continue using the list table search like before.
&lt;/p&gt;
&lt;p&gt;
Regarding the total count of sites, I set the argument &lt;code&gt;no_found_rows&lt;/code&gt; to false as long as we're not in a "large network" (similar like the count wasn't calculated before in that case).
&lt;/p&gt;
&lt;p&gt;
Another thing we might wanna think about is whether we should move the search by IP address bit into &lt;code&gt;WP_Site_Query&lt;/code&gt; or not. While it would enhance the search, I think that's a very rare use-case and it needs to make an additional database query (or JOIN), so I personally would leave it in the &lt;code&gt;WP_MS_Sites_List_Table&lt;/code&gt; class - still that's something to consider.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36675.diff attached to Ticket #36675</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 26 May 2016 13:03:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36675/36675.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36675/36675.diff/1464267781969795</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35381 (Introduce `WP_Term_Query`) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 26 May 2016 12:49:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35381#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35381#comment:18/1464266982145614</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
35381.3.patch adds improved caching.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
See &lt;a href="https://core.trac.wordpress.org/ticket/35381#comment:13"&gt;https://core.trac.wordpress.org/ticket/35381#comment:13&lt;/a&gt;. There are historical reasons why this cache has an expiration. A new ticket would be an appropriate place to discuss whether and how this can be changed. As for the caching of term IDs only, this patch is going to break the current caching strategy because we expect term objects when &lt;code&gt;wp_cache_get()&lt;/code&gt; earlier in the method. In any case, that discussion would be better suited for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34239" title="#34239: task (blessed): Split queries in `get_terms()` and `wp_get_object_terms()` (closed: duplicate)"&gt;#34239&lt;/a&gt;, which is about splitting the SQL query, but would bear directly on the question of what gets cached.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote&gt;
&lt;p&gt;
think you forgot to add the $term_query variable to the filter in 37572. :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
One other thing I'm curious about is why you changed the filter arguments to use $args and $taxonomies instead of relying on the query vars from WP_Term_Query like you did in 35381.2.diff​. Or is that only because you missed that line? I thought the way in the patch was better because that way $args was filled with its defaults.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I had to massage the patch to get it to reapply after some recent documentation changes in trunk. I must have missed this. I will fix it later.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36904 (Add caching to comment feed in WP_Query) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 26 May 2016 12:39:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36904#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36904#comment:8/1464266385572792</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;blockquote&gt;
&lt;p&gt;
The biggest changed the wp_comment_query isn't called twice now. Is now only called after post_results have been setup.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks. This is a step in the right direction. However, it won't work for values of &lt;code&gt;fields&lt;/code&gt; like &lt;code&gt;ids&lt;/code&gt; or &lt;code&gt;id=&amp;gt;parent&lt;/code&gt;. I'm not sure if there are other ramifications for moving the comment query, so this needs some examination. As noted above, unit tests will be critical to prevent against regressions.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The value of the 'comment_feed_where' will be different from before, but I am not sure of how much of an issue this is.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
A good first step here is to search the plugin repo to see who is using this filter, and for what.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #21760,​36950 batch updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 26 May 2016 12:34:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=21760%2C36950</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=21760%2C36950/1464266072097186</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21760" title="#21760: enhancement: get_term_by() calls are not cached (closed: fixed)"&gt;#21760&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Previously: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13170" title="#13170: enhancement: get_term_by() should check object cache (closed: worksforme)"&gt;#13170&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I raised this proposal in &lt;a href="https://core.trac.wordpress.org/ticket/21760#comment:87"&gt;https://core.trac.wordpress.org/ticket/21760#comment:87&lt;/a&gt;. Let's move the discussion there.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #36949 (Term exists should use get_terms internally) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 26 May 2016 12:31:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36949#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36949#comment:2/1464265918264259</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks. This is a good idea in theory, though I'm not sure how it will pan out in practice. First, there are errors in the patch that are causing invalid SQL in some cases. Second, relying on the cache in &lt;code&gt;term_exists()&lt;/code&gt; is likely to surface invalidation bugs in places where WordPress uses &lt;code&gt;term_exists()&lt;/code&gt; internally to avoid duplicates. There needs to be a review of these places. A good place to start is the dozens of failing tests when running &lt;code&gt;phpunit&lt;/code&gt; with the patch applied :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33318 (tax_query breaks certain other wp_query args) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 26 May 2016 12:29:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33318#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33318#comment:9/1464265753438719</guid>
      <description>invalid: &lt;blockquote class="citation"&gt;
&lt;p&gt;
Sorry for a trouble (very big sorry), problem solved.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No problem. Glad it wasn't a WordPress bug :)
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #35381 (Introduce `WP_Term_Query`) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Thu, 26 May 2016 12:04:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35381#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35381#comment:17/1464264247607381</guid>
      <description>&lt;p&gt;
35381.3.patch adds improved caching.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35381.3.patch attached to Ticket #35381</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Thu, 26 May 2016 12:03:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35381/35381.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35381/35381.3.patch/1464264203805457</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>comments-closed-2.png attached to Ticket #36424</title>
      
        <dc:creator>LittleBigThing</dc:creator>

      <pubDate>Thu, 26 May 2016 11:59:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36424/comments-closed-2.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36424/comments-closed-2.png/1464263977745370</guid>
      <description>&lt;p&gt;
Results of the above for different situations
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36424 (graphically visualize if comments are closed (in wp-admin/edit.php)) updated</title>
      
        <dc:creator>LittleBigThing</dc:creator>

      <pubDate>Thu, 26 May 2016 11:58:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36424#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36424#comment:29/1464263918140393</guid>
      <description>&lt;p&gt;
Some additional stuff if we would go down this way.
&lt;/p&gt;
&lt;p&gt;
Assuming that the &lt;a href="https://core.trac.wordpress.org/attachment/ticket/36424/36424.patch"&gt;latest patch&lt;/a&gt; is slightly modified:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;adding an additional class &lt;code&gt;post-com-closed&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;adding the code before row 658. This means that 'Comments are closed' comes first in HTML markup (if this isn't ideal for accessibility, it would be easier to put the lock in the bottom right corner CSS-wise)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
the following CSS would work quiet well:
&lt;/p&gt;
&lt;pre class="wiki"&gt;.post-com-closed {
    position: relative;
    left: 3px;
    width: 17px;
    height: 17px;
    border: 2px solid #fff;
    border-radius: 11px;
    background: #ccc;
    color: #fff;
  }
.post-com-closed:before {
    font-size: 12px;
    position: relative;
    top: -6px;
}
&lt;/pre&gt;&lt;p&gt;
The color of the lock could/might be darker (like 72777c) if necessary with regard to accessibility.
&lt;/p&gt;
&lt;p&gt;
Another point, the text 'Comments are closed' should probably be displayed on mobile instead of the lock (as for the number of (unapproved) comments). This is not yet the case in this proposal, but some additional CSS would do it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36819 (Load plugin.php earlier in wp-settings.php) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 26 May 2016 11:48:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36819#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36819#comment:12/1464263321314310</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36819 (Load plugin.php earlier in wp-settings.php) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Thu, 26 May 2016 11:09:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36819#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36819#comment:11/1464260968116122</guid>
      <description>&lt;p&gt;
@jorbin What's remaining before this can land?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35381 (Introduce `WP_Term_Query`) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Thu, 26 May 2016 11:06:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35381#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35381#comment:16/1464260815985379</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36950" title="#36950: enhancement: Get term by should use get_terms internally (closed: duplicate)"&gt;#36950&lt;/a&gt; &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36949" title="#36949: enhancement: Term exists should use get_terms internally (new)"&gt;#36949&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36904 (Add caching to comment feed in WP_Query) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Thu, 26 May 2016 10:53:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36904#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36904#comment:7/1464259995233623</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36424 (graphically visualize if comments are closed (in wp-admin/edit.php)) updated</title>
      
        <dc:creator>pixelverbieger</dc:creator>

      <pubDate>Thu, 26 May 2016 10:39:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36424#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36424#comment:28/1464259147977468</guid>
      <description>&lt;p&gt;
nice, too!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36424 (graphically visualize if comments are closed (in wp-admin/edit.php)) updated</title>
      
        <dc:creator>LittleBigThing</dc:creator>

      <pubDate>Thu, 26 May 2016 10:30:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36424#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36424#comment:27/1464258612724450</guid>
      <description>&lt;p&gt;
Nice idea (this ticket).
&lt;/p&gt;
&lt;p&gt;
What about something like above? (Sorry, image was added before I knew it, first time :-)).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>comments-closed-1.png attached to Ticket #36424</title>
      
        <dc:creator>LittleBigThing</dc:creator>

      <pubDate>Thu, 26 May 2016 10:27:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36424/comments-closed-1.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36424/comments-closed-1.png/1464258445541179</guid>
      <description>&lt;p&gt;
Different visual proposed for Comments closed
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>36482.patch attached to Ticket #36482</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Thu, 26 May 2016 10:27:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36482/36482.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36482/36482.patch/1464258427024044</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36901 (Removing wp_die() from wp_allow_comment()) updated</title>
      
        <dc:creator>websupporter</dc:creator>

      <pubDate>Thu, 26 May 2016 10:16:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36901#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36901#comment:5/1464257786513055</guid>
      <description>&lt;p&gt;
I have updated my patch. So, what it does now:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;If &lt;code&gt;wp_handle_comment_submission()&lt;/code&gt; detects no problem, it runs as usual &lt;code&gt;wp_new_comment()&lt;/code&gt;. &lt;code&gt;wp_new_comment()&lt;/code&gt; accepts a second parameter &lt;code&gt;$return_error&lt;/code&gt;, which is set to &lt;code&gt;false&lt;/code&gt; by default. &lt;code&gt;wp_handle_comment_submission()&lt;/code&gt; runs the function with &lt;code&gt;$return_error&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Basically &lt;code&gt;wp_new_comment()&lt;/code&gt; passes &lt;code&gt;$return_error&lt;/code&gt; simply to &lt;code&gt;wp_allow_comment()&lt;/code&gt; and checks the result, if it is a &lt;code&gt;WP_Error&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;So &lt;code&gt;wp_allow_comment()&lt;/code&gt; also accepts a second parameter &lt;code&gt;$return_error&lt;/code&gt;. Standard is &lt;code&gt;false&lt;/code&gt;. This function checks, if the comment is a duplicate and returns a &lt;code&gt;WP_Error&lt;/code&gt; if this is the case or executes &lt;code&gt;wp_die()&lt;/code&gt; in case &lt;code&gt;$return_error&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;After this check, the usual action &lt;code&gt;check_comment_flood&lt;/code&gt; is triggered. But &lt;code&gt;check_comment_flood_db()&lt;/code&gt; is no longer hooked into this action. But still, I thought it might be useful to add the &lt;code&gt;$return_error&lt;/code&gt; here to let functions, which might be hooked in, know if &lt;code&gt;wp_die()&lt;/code&gt; is the expected behavior in case of a flood.
&lt;/li&gt;&lt;li&gt;Now the new filter &lt;code&gt;is_comment_flood&lt;/code&gt; runs. Here we expect a boolean in return indicating the flood. In addition to this boolean &lt;code&gt;comment_author_IP&lt;/code&gt;, &lt;code&gt;comment_author_email&lt;/code&gt; and &lt;code&gt;comment_date_gmt&lt;/code&gt; as well as &lt;code&gt;$return_error&lt;/code&gt; are available as parameter.
&lt;/li&gt;&lt;li&gt;I've wrote a wrapper function for this filter: &lt;code&gt;check_comment_flood_db_filter()&lt;/code&gt;. Basically it just calls the old &lt;code&gt;check_comment_flood_db()&lt;/code&gt; which also accepts now &lt;code&gt;$return_error&lt;/code&gt;. In case &lt;code&gt;$return_error&lt;/code&gt; is set &lt;code&gt;true&lt;/code&gt; &lt;code&gt;check_comment_flood_db()&lt;/code&gt; will return a boolean. Otherwise it will execute &lt;code&gt;wp_die()&lt;/code&gt; or return nothing (the old behavior).
&lt;/li&gt;&lt;li&gt;In case &lt;code&gt;$return_error&lt;/code&gt; is true and it is a flood, &lt;code&gt;wp_allow_comment()&lt;/code&gt; will return an &lt;code&gt;WP_Error&lt;/code&gt;. If &lt;code&gt;$return_error&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; nothing will happen since we should already be dead.
&lt;/li&gt;&lt;li&gt;Now &lt;code&gt;wp_allow_comment()&lt;/code&gt; runs as usual checks the comment with &lt;code&gt;check_comment()&lt;/code&gt; and so on, but here no further action seems necessary.
&lt;/li&gt;&lt;li&gt;In case of &lt;code&gt;$return_error&lt;/code&gt; and duplicate comment or flood, the function has returned the corresponding &lt;code&gt;WP_Error&lt;/code&gt;, which will be simply returned by &lt;code&gt;wp_new_comment()&lt;/code&gt;. The usual behavior of &lt;code&gt;wp_new_comment()&lt;/code&gt; is to die, to return &lt;code&gt;false&lt;/code&gt; or the comment ID. Since &lt;code&gt;wp_handle_comment_submission()&lt;/code&gt; called &lt;code&gt;wp_new_comment()&lt;/code&gt; with &lt;code&gt;$return_error&lt;/code&gt; &lt;code&gt;true&lt;/code&gt; now we can also get an error object. So &lt;code&gt;wp_handle_comment_submission()&lt;/code&gt; checks for the error and in this case &lt;code&gt;wp_handle_comment_submission()&lt;/code&gt; simply returns the error.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Thanks a lot for the feedback I've received for my patch. It helped me a lot!
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
First, the current behavior of &lt;code&gt;check_comment()&lt;/code&gt; - and thus of calling functions like &lt;code&gt;wp_allow_comment()&lt;/code&gt; and &lt;code&gt;wp_new_comment()&lt;/code&gt; - is to &lt;code&gt;die&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Just quickly: &lt;code&gt;check_comment()&lt;/code&gt; does not die, it simply checks if a comment needs moderation and so on depending on &lt;code&gt;get_option('comment_moderation')&lt;/code&gt;, &lt;code&gt;get_option( 'comment_max_links' )&lt;/code&gt; et.al. Two filters are running in the function: &lt;code&gt;comment_text&lt;/code&gt; and &lt;code&gt;comment_max_links_url&lt;/code&gt;, but none of them seem to run into a &lt;code&gt;wp_die()&lt;/code&gt;. So as far as I see it the way to die is &lt;code&gt;wp_new_comment()&lt;/code&gt; &amp;gt; &lt;code&gt;wp_allow_comment()&lt;/code&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
we cannot change the function signature of &lt;code&gt;check_comment_flood_ids()&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think &lt;code&gt;check_comment_flood_db()&lt;/code&gt; is meant. My first approach was to turn this function itself to a filter, we discussed it a bit in Slack and the suggestion here was to write a wrapper function, which would be &lt;code&gt;check_comment_flood_db_filter()&lt;/code&gt; (well, the naming indicates already, it is getting a bit weired here). I think the flood is the weirdest part with all its filters, actions and stuff.
But basically, if lets say a plugin calls &lt;code&gt;check_comment_flood_db()&lt;/code&gt; the old way, &lt;code&gt;$return_error&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt; and the function would either die or return nothing. But still, for us, it would return a boolean indicating if the comment is part of the flood.
&lt;/p&gt;
&lt;p&gt;
Basically, as far as I can see it, if we would start &lt;code&gt;wp_new_comment( $commentdata )&lt;/code&gt; the behavior of all functions are like they are today. I checked it also with my phpunit tests. In case I run in  &lt;code&gt;wp_handle_comment_submission()&lt;/code&gt; the &lt;code&gt;wp_new_comment()&lt;/code&gt; with &lt;code&gt;false&lt;/code&gt; we &lt;code&gt;die()&lt;/code&gt;. Otherwise we get our &lt;code&gt;WP Error&lt;/code&gt; objects.
&lt;/p&gt;
&lt;p&gt;
Another question in slack was by @dshanske:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Why return 409 and 429 though?
I understand the status code, but you are passing it as data.
Shouldn't it pass data about the duplicate?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-comments/p1463890408000435"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/core-comments/p1463890408000435&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I just oriented myself on how &lt;code&gt;wp_handle_comment_submission()&lt;/code&gt; creates its error objects. Here it is done the same way, which later on in &lt;code&gt;wp-comments-posts.php&lt;/code&gt; leads to this check:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$comment = wp_handle_comment_submission( wp_unslash( $_POST ) );
if ( is_wp_error( $comment ) ) {
        $data = intval( $comment-&amp;gt;get_error_data() );
        if ( ! empty( $data ) ) {
                wp_die( '&amp;lt;p&amp;gt;' . $comment-&amp;gt;get_error_message() . '&amp;lt;/p&amp;gt;', __( 'Comment Submission Failure' ), array( 'response' =&amp;gt; $data, 'back_link' =&amp;gt; true ) );
        } else {
                exit;
        }
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
(Well, if you just hop into this ticket: Yes it dies :D )
&lt;/p&gt;
&lt;p&gt;
If we want to change it, we would need to alter also &lt;code&gt;wp_handle_comment_submission()&lt;/code&gt; and &lt;code&gt;wp-comments-posts.php&lt;/code&gt;. I wouldn't mind, but can't evaluate the advantage.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
And the status code set upstream?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I am not quite sure, if this means to set the Response Header before &lt;code&gt;wp-comments-posts.php&lt;/code&gt; I think, this would be too early.
&lt;/p&gt;
&lt;p&gt;
Last point: I understood @dshanske in the way a function which is hooked into an action needs to remain there for backwards compatibility, but I guess, I just misunderstood him. If this would be the case, the patch would become really awkward (I mean, even more!). I tried here to follow @boones suggestions:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The overall default behavior of &lt;code&gt;wp_new_comment()&lt;/code&gt; should not change. That is, if the flood check fails, it should result in a &lt;code&gt;wp_die()&lt;/code&gt; (at least for the purposes of this ticket). How that's implemented internally is less important, I think
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I hope, this patch comes closer to this goal. Good news: In the end we all die but we are getting older now. I am happy about every feedback :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36904 (Add caching to comment feed in WP_Query) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Thu, 26 May 2016 10:14:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36904#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36904#comment:6/1464257675278182</guid>
      <description>&lt;p&gt;
The latest patch adds back in the documentation. The biggest changed the wp_comment_query isn't called twice now. Is now only called after post_results have been setup. This makes the code a lot easier to read and stops repeated code. As it uses &lt;code&gt;post__in&lt;/code&gt;, post status isn't an issue, as post status isn't part comment query unless you define it.
&lt;/p&gt;
&lt;p&gt;
The value of the 'comment_feed_where' will be different from before, but I am not sure of how much of an issue this is.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36901.2.patch attached to Ticket #36901</title>
      
        <dc:creator>websupporter</dc:creator>

      <pubDate>Thu, 26 May 2016 10:13:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36901/36901.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36901/36901.2.patch/1464257619287791</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36945 (Substrings that should not be translated should not be translatable) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 26 May 2016 10:06:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36945#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36945#comment:4/1464257188007783</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36945#comment:3" title="Comment 3"&gt;julesaus&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Looks like AR is the only locale from the original list that doesn't have a localised &lt;code&gt;wp-config-sample.php&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It does in the branch: &lt;a class="ext-link" href="https://i18n.trac.wordpress.org/browser/ar/branches/4.5/dist/wp-config-sample.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://i18n.trac.wordpress.org/browser/ar/branches/4.5/dist/wp-config-sample.php&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36952 (get_theme_mod called when getting the root value of a custom type) updated</title>
      
        <dc:creator>jontis</dc:creator>

      <pubDate>Thu, 26 May 2016 10:05:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36952#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36952#comment:2/1464257126643942</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36952#comment:1" title="Comment 1"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hello @jontis, welcome to this Trac!
&lt;/p&gt;
&lt;p&gt;
Thanks for your valid report. We're already tracking this issue in &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/34290" title="#34290: defect (bug): Not possible to have a percent symbol contained in the default value ... (reopened)"&gt;#34290&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Issue &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/34290" title="#34290: defect (bug): Not possible to have a percent symbol contained in the default value ... (reopened)"&gt;#34290&lt;/a&gt; does not mention the odd else if statement in get_root_value
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'theme_mod'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37575]: Version bump.</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 26 May 2016 10:05:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37575</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37575/1464257121518647</guid>
      <description>&lt;p&gt;
Version bump.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>36904.3.patch attached to Ticket #36904</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Thu, 26 May 2016 10:00:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36904/36904.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36904/36904.3.patch/1464256838164467</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Tickets #34290,​36952 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 26 May 2016 09:52:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=34290%2C36952</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=34290%2C36952/1464256352397823</guid>
      <description>duplicate: &lt;p&gt;
Hello @jontis, welcome to this Trac!
&lt;/p&gt;
&lt;p&gt;
Thanks for your valid report. We're already tracking this issue in &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/34290" title="#34290: defect (bug): Not possible to have a percent symbol contained in the default value ... (reopened)"&gt;#34290&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #36952 (get_theme_mod called when getting the root value of a custom type) created</title>
      
        <dc:creator>jontis</dc:creator>

      <pubDate>Thu, 26 May 2016 09:48:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36952</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36952/1464256091649486</guid>
      <description>&lt;p&gt;
Notice the else if statement
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;/* wp-includes/class-wp-customize-setting.php:533 */
protected function get_root_value( $default = null ) {
                $id_base = $this-&amp;gt;id_data['base'];
                if ( 'option' === $this-&amp;gt;type ) {
                        return get_option( $id_base, $default );
                } else if ( 'theme_mod' ) {
                        return get_theme_mod( $id_base, $default );
                } else {
                        /*
                         * Any WP_Customize_Setting subclass implementing aggregate multidimensional
                         * will need to override this method to obtain the data from the appropriate
                         * location.
                         */
                        return $default;
                }
        }
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Same bug applies to set_root_value
&lt;/p&gt;
&lt;p&gt;
This can cause the Customizer to fail loading with the error
"sprintf(): Too few arguments"
On the sprintf function in get_theme_mod if $default is a string containing more than two % (percentage symbols)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36424 (graphically visualize if comments are closed (in wp-admin/edit.php)) updated</title>
      
        <dc:creator>pixelverbieger</dc:creator>

      <pubDate>Thu, 26 May 2016 09:39:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36424#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36424#comment:26/1464255553042942</guid>
      <description>&lt;p&gt;
Both your latest PNGs look good to me.
Very nice!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28235 (No Warning for Bulk Media Deletions) updated</title>
      
        <dc:creator>southp</dc:creator>

      <pubDate>Thu, 26 May 2016 09:39:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28235#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28235#comment:10/1464255545310885</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
For what it's worth, I just attached a patch based on today's trunk version, so that we can simply apply it locally for a feeling. Sorry that I don't know how to bump up the version property of the ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36951 (Lost param $term_query in get_terms filter) updated</title>
      
        <dc:creator>sebastian.pisula</dc:creator>

      <pubDate>Thu, 26 May 2016 09:38:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36951#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36951#comment:1/1464255480989370</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>prompt-on-bulk-delete-in-list-mode.diff attached to Ticket #28235</title>
      
        <dc:creator>southp</dc:creator>

      <pubDate>Thu, 26 May 2016 09:35:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28235/prompt-on-bulk-delete-in-list-mode.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28235/prompt-on-bulk-delete-in-list-mode.diff/1464255302076534</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36923 (Create filter for $details_url in wp_theme_update_row()) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 26 May 2016 09:30:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36923#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36923#comment:9/1464255031060115</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>32197.5.patch attached to Ticket #32197</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Thu, 26 May 2016 09:17:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32197/32197.5.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32197/32197.5.patch/1464254225684255</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>36951.patch attached to Ticket #36951</title>
      
        <dc:creator>sebastian.pisula</dc:creator>

      <pubDate>Thu, 26 May 2016 08:44:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36951/36951.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36951/36951.patch/1464252249202568</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36951 (Lost param $term_query in get_terms filter) created</title>
      
        <dc:creator>sebastian.pisula</dc:creator>

      <pubDate>Thu, 26 May 2016 08:43:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36951</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36951/1464252204095816</guid>
      <description>&lt;p&gt;
Lost param $term_query in get_terms filter
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>36950.patch attached to Ticket #36950</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Thu, 26 May 2016 08:42:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36950/36950.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36950/36950.patch/1464252138840585</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36950 (Get term by should use get_terms internally) created</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Thu, 26 May 2016 08:41:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36950</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36950/1464252091793570</guid>
      <description>&lt;p&gt;
Now that WP_Term_Query has been merged, it makes sense to converge to use it in all internal functions to query the terms table. Using WP_Term_Query / get_terms will also add caching to a functions that do not currently have it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36949 (Term exists should use get_terms internally) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Thu, 26 May 2016 08:36:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36949#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36949#comment:1/1464251765633777</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>36949.patch attached to Ticket #36949</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Thu, 26 May 2016 08:33:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36949/36949.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36949/36949.patch/1464251635095095</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36949 (Term exists should use get_terms internally) created</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Thu, 26 May 2016 08:33:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36949</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36949/1464251596520215</guid>
      <description>&lt;p&gt;
More than WP_Term_Query has been merged, it makes sense to converge to use it in all internal functions to query the terms table. Using WP_Term_Query / get_terms will also add caching to a functions that do not currently have it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35381 (Introduce `WP_Term_Query`) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 26 May 2016 08:02:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35381#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35381#comment:15/1464249720271524</guid>
      <description>&lt;p&gt;
@boonebgorges I think you forgot to add the &lt;code&gt;$term_query&lt;/code&gt; variable to the filter in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37572" title="Introduce `WP_Term_Query` and use in `get_terms()`.
`WP_Term_Query` ..."&gt;37572&lt;/a&gt;. :)
&lt;/p&gt;
&lt;p&gt;
One other thing I'm curious about is why you changed the filter arguments to use &lt;code&gt;$args&lt;/code&gt; and &lt;code&gt;$taxonomies&lt;/code&gt; instead of relying on the query vars from &lt;code&gt;WP_Term_Query&lt;/code&gt; like you did in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35381/35381.2.diff" title="Attachment '35381.2.diff' in Ticket #35381"&gt;35381.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35381/35381.2.diff" title="Download"&gt;​&lt;/a&gt;. Or is that only because you missed that line? I thought the way in the patch was better because that way &lt;code&gt;$args&lt;/code&gt; was filled with its defaults.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33318 (tax_query breaks certain other wp_query args) updated</title>
      
        <dc:creator>m_i_n</dc:creator>

      <pubDate>Thu, 26 May 2016 06:26:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33318#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33318#comment:8/1464243971653129</guid>
      <description>&lt;p&gt;
Ok, after some more deep digging into code, i have that action:
&lt;/p&gt;
&lt;pre class="wiki"&gt;public function actionPreGetPosts($query)
{
	if ($query-&amp;gt;is_tax('portfolio-category') || $query-&amp;gt;is_tax('portfolio-tag')) {
		$query-&amp;gt;query_vars['posts_per_page'] = self::to('portfolio/archive/count');
	}
}
&lt;/pre&gt;&lt;p&gt;
...which refers to archive page, but it also destroy custom WP_Query call.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Sorry for a trouble&lt;/strong&gt; (very big sorry), problem solved.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33318 (tax_query breaks certain other wp_query args) updated</title>
      
        <dc:creator>m_i_n</dc:creator>

      <pubDate>Thu, 26 May 2016 06:06:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33318#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33318#comment:7/1464242810830323</guid>
      <description>&lt;p&gt;
My previous code was example, but now i delete as much as i can unnecessary code from my real source and at the end i have this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;register_post_type('portfolio', array(
	'public'       =&amp;gt; true,
	'hierarchical' =&amp;gt; true
));
register_taxonomy('portfolio-category', 'portfolio', array(
	'hierarchical' =&amp;gt; true
));
&lt;/pre&gt;&lt;pre class="wiki"&gt;$query = new \WP_Query(array(
	'posts_per_page'  =&amp;gt; 2,
	'post_type'       =&amp;gt; 'portfolio',
	'tax_query'       =&amp;gt; array(
		array(
			'taxonomy' =&amp;gt; 'portfolio-category',
			'field'    =&amp;gt; 'term_id',
			'terms'    =&amp;gt; array(222)
		)
	)
));
var_dump(count($query-&amp;gt;posts));
&lt;/pre&gt;&lt;p&gt;
Result: &lt;code&gt;5&lt;/code&gt; (should be 2).
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;public&lt;/code&gt; and &lt;code&gt;hierarchical&lt;/code&gt; doesn't change anything.
&lt;/p&gt;
&lt;p&gt;
When i delete &lt;code&gt;tax_query&lt;/code&gt;: &lt;code&gt;2&lt;/code&gt;.
When i change terms in &lt;code&gt;tax_query&lt;/code&gt; for non-existing term: &lt;code&gt;0&lt;/code&gt;.
When i change &lt;code&gt;post_type&lt;/code&gt; to &lt;code&gt;post&lt;/code&gt; (and properly adapt &lt;code&gt;tax_query&lt;/code&gt;): &lt;code&gt;2&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I'm trying to run query in shortcode, in content, before header, after footer, and it also doesn't have matter.
&lt;/p&gt;
&lt;p&gt;
Sorry for my english ;)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36875 (upgrader_process_complete action is not documented well) updated</title>
      
        <dc:creator>nextendweb</dc:creator>

      <pubDate>Thu, 26 May 2016 05:53:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36875#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36875#comment:4/1464242036669831</guid>
      <description>&lt;p&gt;
Thanks @DrewAPicture It seems fine now :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36923 (Create filter for $details_url in wp_theme_update_row()) closed</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Thu, 26 May 2016 05:53:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36923#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36923#comment:8/1464241988663389</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36923 (Create filter for $details_url in wp_theme_update_row()) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Thu, 26 May 2016 05:45:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36923#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36923#comment:7/1464241553527183</guid>
      <description>&lt;p&gt;
I think I understand now. Thanks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20263 (Backticks in dbDelta cause warning and actually causes a query to ...) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 26 May 2016 05:43:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20263#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20263#comment:22/1464241432649693</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/20263/20263.7.diff" title="Attachment '20263.7.diff' in Ticket #20263"&gt;20263.7.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/20263/20263.7.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Updated the patch to apply cleanly after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37574" title="Database: Add support for `SPATIAL` keys to `dbDelta()`.
`dbDelta()` ..."&gt;[37574]&lt;/a&gt;.
&lt;/li&gt;&lt;li&gt;Added &lt;code&gt;SPATIAL&lt;/code&gt; to the index &lt;code&gt;preg_match()&lt;/code&gt; and tidied it up a little.
&lt;/li&gt;&lt;li&gt;Merged two &lt;code&gt;trim()&lt;/code&gt; calls at the start of &lt;code&gt;foreach ( $flds...&lt;/code&gt;. (The sequential trims didn't operate quite the same as previous usage.)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I like the direction of this patch. My primary concern is that the new index matching chunk of code is fairly dense, it could do with some whitespace, and maybe even some comments (forbid the thought!). I don't relish the idea of trying to remember how this all works when our next &lt;code&gt;dbDelta()&lt;/code&gt; maintenance spree comes around.
&lt;/p&gt;
&lt;p&gt;
Oh, and I forgot to fix it it my patch - after &lt;code&gt;foreach ( $index_columns...&lt;/code&gt; we need to &lt;code&gt;unset( $index_column )&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36923 (Create filter for $details_url in wp_theme_update_row()) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 26 May 2016 05:35:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36923#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36923#comment:6/1464240927179721</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36923#comment:5" title="Comment 5"&gt;afragen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm not sure this filter is needed (unless I'm missing something obvious), as if you're filtering the update response to add non-w.org-hosted plugins, then you'll be able to set the url field (which this filter is filtering) to whatever you want.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's it exactly.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think you're missing the fact that &lt;code&gt;$current-&amp;gt;response[ $theme_key ]['url']&lt;/code&gt; can be set by your updater code.
The only thing this filter achieves is filtering the width/height of the thickbox.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>20263.7.diff attached to Ticket #20263</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 26 May 2016 05:33:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/20263/20263.7.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/20263/20263.7.diff/1464240836770149</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36923 (Create filter for $details_url in wp_theme_update_row()) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Thu, 26 May 2016 05:25:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36923#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36923#comment:5/1464240348847223</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm not sure this filter is needed (unless I'm missing something obvious), as if you're filtering the update response to add non-w.org-hosted plugins, then you'll be able to set the url field (which this filter is filtering) to whatever you want.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's it exactly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32642 (Add supports argument to register_taxonomy) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 26 May 2016 05:08:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32642#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32642#comment:9/1464239307046247</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35688" title="#35688: enhancement: Introduce Taxonomy Supports Infrastructure (closed: duplicate)"&gt;#35688&lt;/a&gt; has some code that might be used if we want &lt;code&gt;_supports()&lt;/code&gt; functions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36948 (dbDelta doesn't support SPATIAL KEY syntax) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 26 May 2016 05:08:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36948#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36948#comment:5/1464239294276324</guid>
      <description>&lt;p&gt;
No problem!
&lt;/p&gt;
&lt;p&gt;
It's also worth noting, in your test script, &lt;code&gt;dbDelta()&lt;/code&gt; expects column types to be lowercase, so &lt;code&gt;GEOMETRYCOLLECTION&lt;/code&gt; should be &lt;code&gt;geometrycollection&lt;/code&gt;, just in case you run into that problem with your code. :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #32642,​35688 batch updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 26 May 2016 05:07:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=32642%2C35688</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=32642%2C35688/1464239259290070</guid>
      <description>duplicate: &lt;p&gt;
Hi @isoftware - Thanks for the ticket. I'm going to mark as a duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/32642" title="#32642: enhancement: Add supports argument to register_taxonomy (new)"&gt;#32642&lt;/a&gt;. Please join the discussion there.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #36948 (dbDelta doesn't support SPATIAL KEY syntax) updated</title>
      
        <dc:creator>stuporglue</dc:creator>

      <pubDate>Thu, 26 May 2016 05:05:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36948#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36948#comment:4/1464239145212532</guid>
      <description>&lt;p&gt;
Wow that was fast @pento!
&lt;/p&gt;
&lt;p&gt;
Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>spatial_index_patch.patch attached to Ticket #36948</title>
      
        <dc:creator>stuporglue</dc:creator>

      <pubDate>Thu, 26 May 2016 05:02:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36948/spatial_index_patch.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36948/spatial_index_patch.patch/1464238959282422</guid>
      <description>&lt;p&gt;
This patch allows spatial indexes to be added with dbDelta
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36904 (Add caching to comment feed in WP_Query) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 26 May 2016 05:02:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36904#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36904#comment:5/1464238938847137</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for your work on this, @spacedmonkey. I agree that this is a good strategy.
&lt;/p&gt;
&lt;p&gt;
Instead of doing &lt;code&gt;is_comment_feed()&lt;/code&gt; checks inside of &lt;code&gt;WP_Comment_Query&lt;/code&gt;, I'd prefer to control this using a parameter. Something like &lt;code&gt;do_comment_feed_filters&lt;/code&gt; is ugly sounding, but since it's really a back compat argument anyway, I think it's OK. This could take the place of &lt;code&gt;suppress_filters&lt;/code&gt;, which I don't see the need for more generally in &lt;code&gt;WP_Comment_Query&lt;/code&gt;. So, in &lt;code&gt;WP_Query&lt;/code&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$comment_args = array(
    // ...
    'do_comment_feed_filters' =&amp;gt; ! $q['suppress_filters'],
    // ...
);
&lt;/pre&gt;&lt;p&gt;
and then in &lt;code&gt;get_comment_ids()&lt;/code&gt; we just need to check &lt;code&gt;if ( $this-&amp;gt;query_vars['do_comment_feed_filters'] )&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Could you please move the filter docs over to &lt;code&gt;get_comment_ids()&lt;/code&gt;?
&lt;/p&gt;
&lt;p&gt;
I'm not convinced, at a glance, that setting &lt;code&gt;post__in&lt;/code&gt; to the IDs of &lt;code&gt;$this-&amp;gt;posts&lt;/code&gt; is going to do the work of the existing SQL. For one thing, I'm pretty sure &lt;code&gt;$this-&amp;gt;posts&lt;/code&gt; hasn't yet been set at this point. It's possible that &lt;code&gt;WP_Comment_Query&lt;/code&gt; doesn't have enough internal logic to handle things like &lt;code&gt;WHERE ( post_status = 'publish' OR ( post_status = 'inherit' &amp;amp;&amp;amp; post_type = 'attachment' ) )&lt;/code&gt;. If not, it may be possible to add it, either as general purpose parameters, or in the form of new parameters that are very specific to the use case of comment feeds. It'd be helpful to have tests for this, since it'll demonstrate more clearly what the cases are that need to be covered; looking at the code, I have a rough sense of what they are (though the generic &lt;code&gt;$where&lt;/code&gt; is a wildcard), but having them explicit will make it easier to see what changes are required in &lt;code&gt;WP_Comment_Query&lt;/code&gt; to make this change possible.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>dbdelta_spatial_index_test_corrected.php attached to Ticket #36948</title>
      
        <dc:creator>stuporglue</dc:creator>

      <pubDate>Thu, 26 May 2016 05:01:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36948/dbdelta_spatial_index_test_corrected.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36948/dbdelta_spatial_index_test_corrected.php/1464238888741879</guid>
      <description>&lt;p&gt;
The previous test file did not give the spatial index a name which caused it to get re-added each time dbDelta ran.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36948 (dbDelta doesn't support SPATIAL KEY syntax) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 26 May 2016 04:58:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36948#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36948#comment:3/1464238693635894</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37574" title="Database: Add support for `SPATIAL` keys to `dbDelta()`.
`dbDelta()` ..."&gt;37574&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Database: Add support for &lt;code&gt;SPATIAL&lt;/code&gt; keys to &lt;code&gt;dbDelta()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;dbDelta()&lt;/code&gt; already supported spatial fields (by virtue of not checking field types), so it's nice to round that out with spatial key support, too.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36948" title="#36948: enhancement: dbDelta doesn't support SPATIAL KEY syntax (closed: fixed)"&gt;#36948&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37574]: Database: Add support for `SPATIAL` keys to `dbDelta()`.  `dbDelta()` ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 26 May 2016 04:58:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37574</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37574/1464238693114871</guid>
      <description>&lt;p&gt;
Database: Add support for &lt;code&gt;SPATIAL&lt;/code&gt; keys to &lt;code&gt;dbDelta()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;dbDelta()&lt;/code&gt; already supported spatial fields (by virtue of not checking field types), so it's nice to round that out with spatial key support, too.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36948" title="#36948: enhancement: dbDelta doesn't support SPATIAL KEY syntax (closed: fixed)"&gt;#36948&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36948 (dbDelta doesn't support SPATIAL KEY syntax) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 26 May 2016 04:54:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36948#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36948#comment:2/1464238444222995</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the feature request, @stuporglue!
&lt;/p&gt;
&lt;p&gt;
It's cool to see that you're writing stuff for WordPress involving spatial data, that's always been something I've enjoyed. :-)
&lt;/p&gt;
&lt;p&gt;
This is a very small change to &lt;code&gt;dbDelta()&lt;/code&gt;, so I think we can go ahead with it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36948 (dbDelta doesn't support SPATIAL KEY syntax) updated</title>
      
        <dc:creator>stuporglue</dc:creator>

      <pubDate>Thu, 26 May 2016 04:53:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36948#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36948#comment:1/1464238393632552</guid>
      <description>&lt;p&gt;
My comment about it being a one line fix was wrong. Adding the one line gets rid of the error, but it adds an additional index every time dbDelta is run.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>network.php.translate_happy_blogging.patch attached to Ticket #36945</title>
      
        <dc:creator>julesaus</dc:creator>

      <pubDate>Thu, 26 May 2016 04:52:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36945/network.php.translate_happy_blogging.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36945/network.php.translate_happy_blogging.patch/1464238349584263</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36945 (Substrings that should not be translated should not be translatable) updated</title>
      
        <dc:creator>julesaus</dc:creator>

      <pubDate>Thu, 26 May 2016 04:51:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36945#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36945#comment:3/1464238311117749</guid>
      <description>&lt;p&gt;
That does make it more complicated.  Looks like AR is the only locale from the original list that doesn't have a localised &lt;code&gt;wp-config-sample.php&lt;/code&gt;, but that list wasn't exhaustive, it's just the locales I happened to be looking at, not a comprehensive scan.
&lt;/p&gt;
&lt;p&gt;
@dd32's suggestion seems very practical, so I'll attach that patch.
&lt;/p&gt;
&lt;p&gt;
(I'd love to pull the line out of the {{{wp-config-sample.php}} and stick it in glotpress automatically, but it seems like it would be more complicated and unreliable than is justified).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36814 (get_the_terms() caches term count property) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 26 May 2016 04:49:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36814#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36814#comment:5/1464238150826708</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37573" title="Store only term IDs in object term relationships caches.
Previously, ..."&gt;37573&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Store only term IDs in object term relationships caches.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Previously, objects containing all data about a term were stored in each&lt;br /&gt;
object's term cache. Besides being wasteful, this approach caused invalidation&lt;br /&gt;
issues, as when a modified term count required a flush for all objects&lt;br /&gt;
belonging to the term.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Backward compatibility is maintained for plugins that continue to put object&lt;br /&gt;
data directly into the &lt;code&gt;{$taxonomy}_relationships&lt;/code&gt; cache bucket.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36814" title="#36814: defect (bug): get_the_terms() caches term count property (closed: fixed)"&gt;#36814&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37573]: Store only term IDs in object term relationships caches.  Previously, ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 26 May 2016 04:49:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37573</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37573/1464238150278261</guid>
      <description>&lt;p&gt;
Store only term IDs in object term relationships caches.
&lt;/p&gt;
&lt;p&gt;
Previously, objects containing all data about a term were stored in each
object's term cache. Besides being wasteful, this approach caused invalidation
issues, as when a modified term count required a flush for all objects
belonging to the term.
&lt;/p&gt;
&lt;p&gt;
Backward compatibility is maintained for plugins that continue to put object
data directly into the &lt;code&gt;{$taxonomy}_relationships&lt;/code&gt; cache bucket.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36814" title="#36814: defect (bug): get_the_terms() caches term count property (closed: fixed)"&gt;#36814&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #31105 (Abstract get_terms() arguments for use in wp_get_object_terms()) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 26 May 2016 04:33:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31105#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31105#comment:1/1464237216926943</guid>
      <description>&lt;p&gt;
&lt;code&gt;WP_Term_Query&lt;/code&gt; should make this easier. &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37572" title="Introduce `WP_Term_Query` and use in `get_terms()`.
`WP_Term_Query` ..."&gt;[37572]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35381 (Introduce `WP_Term_Query`) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 26 May 2016 04:32:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35381#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35381#comment:14/1464237151608575</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37572" title="Introduce `WP_Term_Query` and use in `get_terms()`.
`WP_Term_Query` ..."&gt;37572&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Introduce &lt;code&gt;WP_Term_Query&lt;/code&gt; and use in &lt;code&gt;get_terms()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;WP_Term_Query&lt;/code&gt; is modeled on existing query classes, such as those used&lt;br /&gt;
for comments and users. It provides a more consistent structure for generating&lt;br /&gt;
term queries, and should make it easier to add new functionality in the future.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props flixos90, boonebgorges.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35381" title="#35381: defect (bug): Introduce `WP_Term_Query` (closed: fixed)"&gt;#35381&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37572]: Introduce `WP_Term_Query` and use in `get_terms()`.  `WP_Term_Query` ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 26 May 2016 04:32:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37572</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37572/1464237150507802</guid>
      <description>&lt;p&gt;
Introduce &lt;code&gt;WP_Term_Query&lt;/code&gt; and use in &lt;code&gt;get_terms()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;WP_Term_Query&lt;/code&gt; is modeled on existing query classes, such as those used
for comments and users. It provides a more consistent structure for generating
term queries, and should make it easier to add new functionality in the future.
&lt;/p&gt;
&lt;p&gt;
Props flixos90, boonebgorges.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35381" title="#35381: defect (bug): Introduce `WP_Term_Query` (closed: fixed)"&gt;#35381&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36947 (Image Library will not display in grid view and uploads are not ...) updated</title>
      
        <dc:creator>tcarter208</dc:creator>

      <pubDate>Thu, 26 May 2016 04:25:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36947#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36947#comment:2/1464236736177544</guid>
      <description>&lt;p&gt;
Thanks for the help Joe, Turns out it is the theme. when I switch to Twenty Sixteen it works perfectly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>dbdelta_spatial_index_test.php attached to Ticket #36948</title>
      
        <dc:creator>stuporglue</dc:creator>

      <pubDate>Thu, 26 May 2016 04:22:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36948/dbdelta_spatial_index_test.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36948/dbdelta_spatial_index_test.php/1464236526179254</guid>
      <description>&lt;p&gt;
Test file
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36948 (dbDelta doesn't support SPATIAL KEY syntax) created</title>
      
        <dc:creator>stuporglue</dc:creator>

      <pubDate>Thu, 26 May 2016 04:21:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36948</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36948/1464236481931858</guid>
      <description>&lt;p&gt;
dbDelta can create spatial indexes on the initial CREATE TABLE call, but subsequent calls to dbDelta don't recognize the existing spatial index, resulting in a MySQL error indicating that it's trying add a new column.
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'SPATIAL KEY (meta_value)' at line 1
&lt;code&gt;ALTER TABLE wp_index_test ADD COLUMN SPATIAL KEY (meta_value)&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
MySQL has supported spatial columns and indexes since version 5.4. The syntax has remained the same since 5.4.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://docs.oracle.com/cd/E19957-01/mysql-refman-5.4/sql-syntax.html#create-table"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Create Table in v5.4&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://dev.mysql.com/doc/refman/5.7/en/create-table.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Create Table in v5.7&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Adding spatial index support to dbDelta would allow developers to create and use tables with spatial columns while continuing to use dbDelta.
&lt;/p&gt;
&lt;p&gt;
SPATIAL index syntax is the same as FULLTEXT support which dbDelta already supports. As such, adding support is a simple one line change.
&lt;/p&gt;
&lt;p&gt;
Note: dbDelta works correctly for creating spatial columns. It's just indexes that it chokes on.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36462 (Updating or publishing a (custom) post that hasn't loaded completely ...) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 26 May 2016 04:05:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36462#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36462#comment:11/1464235552160010</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Well, what about my earlier suggestion to make sure the Publish box loads last? Or that it's disabled until the page has loaded?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sure, these are worth exploring. I think we'd need a decent amount of UX thought around the idea of a Publish box whose appearance on the page may be delayed by slow-loading plugins. And if the Publish button is going to be disabled, there should probably be good feedback as to *why* it's disabled. If you have ideas about how the UX would work, please feel free to share ideas or patches.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36462 (Updating or publishing a (custom) post that hasn't loaded completely ...) updated</title>
      
        <dc:creator>archon810</dc:creator>

      <pubDate>Thu, 26 May 2016 04:02:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36462#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36462#comment:10/1464235364435522</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36462#comment:9" title="Comment 9"&gt;boonebgorges&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Yeah, I would definitely want to see a more generic solution than one that applies only to those 2 checkboxes and not any that could be added by some plugin.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not sure there's much we can do for plugins, at least if the plugins are building their own markup. But yeah, if we are going to adopt a technique for core checkboxes, we should probably do it consistently throughout.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well, what about my earlier suggestion to make sure the Publish box loads last? Or that it's disabled until the page has loaded?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35381 (Introduce `WP_Term_Query`) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 26 May 2016 03:57:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35381#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35381#comment:13/1464235057966044</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
It's only the check for hierarchical taxonomies that you moved right? I can't quite remember why I left it in there, but looking at it now, I agree moving it into the class.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah. The check for invalid taxonomies stays in &lt;code&gt;get_terms()&lt;/code&gt;, because it's the only place where &lt;code&gt;get_terms()&lt;/code&gt; currently returns a &lt;code&gt;WP_Error&lt;/code&gt;. This way, we can simplify the return value of &lt;code&gt;WP_Term_Query::get_terms()&lt;/code&gt; - it'll always be an array.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is there a good reason why the results are only cached for a day?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15583" title="Do not cache terms indefinitely... use TTL of one day. fixes #11431. ..."&gt;[15583]&lt;/a&gt; &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11431" title="#11431: enhancement: object cache's terms bucket potentially contains junk (closed: fixed)"&gt;#11431&lt;/a&gt; Since that conversation, I feel like there's been a move in core to take less of an opinionated position on the internals of cache backends. The attitude is that it's really up to the cache, not WP, to set decent eviction policies. I'd be in favor of readdressing this and coming up with some sort of general policy about it, but this ticket is not the place, and we need more justification than the whim of the people in this conversation :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I also think that the value stored in cache should be just an array of ids. I don't think we should be storing the whole object in there, as it not required and will just use up memory.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34239" title="#34239: task (blessed): Split queries in `get_terms()` and `wp_get_object_terms()` (closed: duplicate)"&gt;#34239&lt;/a&gt;, &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35381#comment:10" title="Comment 10"&gt;comment 10&lt;/a&gt;, &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35381#comment:11" title="Comment 11"&gt;comment 11&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Can we start thinking about get_the_terms() yet?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36814" title="#36814: defect (bug): get_the_terms() caches term count property (closed: fixed)"&gt;#36814&lt;/a&gt;. Since &lt;code&gt;get_the_terms()&lt;/code&gt; uses &lt;code&gt;wp_get_object_terms()&lt;/code&gt;, I don't think it's directly related. I do think we should try to adapt &lt;code&gt;WP_Term_Query&lt;/code&gt; for use in &lt;code&gt;wp_get_object_terms()&lt;/code&gt;, but I think it will be much harder than what we've done here. We should set up a separate ticket for it so that it doesn't hold up the current improvement for 4.6. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31105" title="#31105: enhancement: Abstract get_terms() arguments for use in wp_get_object_terms() (closed: duplicate)"&gt;#31105&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29942" title="#29942: defect (bug): wp_get_object_terms - no caching mechanism in place - results in ... (closed: duplicate)"&gt;#29942&lt;/a&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What should be the next steps here?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Let's do it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36717 (Allow to access network and site properties using the current naming ...) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 26 May 2016 03:54:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36717#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36717#comment:11/1464234847249350</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36717#comment:10" title="Comment 10"&gt;flixos90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Couldn't we, only for the new properties, ensure that when they're read they return an integer? And then, when setting the property, ensure it's a string? That would give the new properties a matching type while preserving backwards-compatibility with the old properties. Or am I missing something here?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
My first thought was that the juggling seems a little out of place for how much strict typing we &lt;strong&gt;don't&lt;/strong&gt; do in core. However, future endpoints will likely treat &lt;code&gt;id&lt;/code&gt; as &lt;code&gt;int&lt;/code&gt; and the DB schema already does, so it probably won't hurt.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36947 (Image Library will not display in grid view and uploads are not ...) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 26 May 2016 03:49:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36947#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36947#comment:1/1464234562564816</guid>
      <description>&lt;p&gt;
Hi @tcarter208,
&lt;/p&gt;
&lt;p&gt;
Thanks for the report and welcome to Trac. Another person reported a similar issue with 4.5.1 (ticket number &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36777" title="#36777: defect (bug): Grid view not working after upgrading to Wordpress v4.5.1 (closed: duplicate)"&gt;#36777&lt;/a&gt;), which ended up being an error based on their hosting provider's &lt;code&gt;ini_set()&lt;/code&gt; settings. It's possible that you're running into the same issue.
&lt;/p&gt;
&lt;p&gt;
Just to be sure, can you see if this is still a problem after disabling all your plugins and activating a default theme (e.g. Twenty Sixteen)? Also, check to see if this happens in several browsers or just one and see if there are any error messages in your browser's javascript console.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36462 (Updating or publishing a (custom) post that hasn't loaded completely ...) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 26 May 2016 03:45:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36462#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36462#comment:9/1464234350153761</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
Yeah, I would definitely want to see a more generic solution than one that applies only to those 2 checkboxes and not any that could be added by some plugin.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not sure there's much we can do for plugins, at least if the plugins are building their own markup. But yeah, if we are going to adopt a technique for core checkboxes, we should probably do it consistently throughout.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I've added two hidden fields in meta-boxes.php, one for comment_status and the other for ping_status. Then I removed the code in post.php where it closes the comments and ping_status if the POST data is missing.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is pretty clever. I'd been imagining something less clever but more straightforward:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;input name="comment_status_loaded" type="hidden" value="1"&amp;gt;
&amp;lt;input name="comment_status" type="checkbox" id="comment_status" value="open" &amp;lt;?php checked($post-&amp;gt;comment_status, 'open'); ?&amp;gt; /&amp;gt;
&lt;/pre&gt;&lt;p&gt;
and then the submission handler would check &lt;code&gt;isset( $_POST['comment_status_loaded'] )&lt;/code&gt; before saving a value. Your solution is a lot more elegant.
&lt;/p&gt;
&lt;p&gt;
It feels sorta like cheating to have more than one input element on a page with the same 'name', and then to take advantage of the fact that PHP's behavior with respect to POST (ie, an array) will cause the second one to overwrite the first. But I can't find anything in the HTML spec that suggests that it's invalid markup, and I can't find anything that suggests that we shouldn't trust PHP's behavior here.
&lt;/p&gt;
&lt;p&gt;
What do others think? Would be curious to hear a take from someone like @helen.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36946 (Provide `id` properties on core objects) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 26 May 2016 03:45:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36946#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36946#comment:5/1464234310143894</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36946#comment:4" title="Comment 4"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36946#comment:3" title="Comment 3"&gt;DrewAPicture&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
All that aside, per the linked discussion, I &lt;em&gt;really&lt;/em&gt; don't think a deprecated notice or a &lt;code&gt;_doing_it_wrong()&lt;/code&gt; is a good idea, considering our history and the fact that &lt;code&gt;$user-&amp;gt;ID&lt;/code&gt; and &lt;code&gt;$post-&amp;gt;ID&lt;/code&gt; are used &lt;em&gt;all over&lt;/em&gt; the WordPress ecosystem.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I &lt;strong&gt;really&lt;/strong&gt; agree with this, I don't think we should be firing deprecated notices for &lt;em&gt;everything&lt;/em&gt; but rather just have the different-case'd variants "just work". There's zero harm in using &lt;code&gt;-&amp;gt;ID&lt;/code&gt; over &lt;code&gt;-&amp;gt;id&lt;/code&gt;, it's not like we're ever going to remove the &lt;code&gt;ID&lt;/code&gt; versions.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed. I don't think we need to deprecate anything. Just un-deprecate &lt;code&gt;WP_User::id&lt;/code&gt;. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36947 (Image Library will not display in grid view and uploads are not ...) created</title>
      
        <dc:creator>tcarter208</dc:creator>

      <pubDate>Thu, 26 May 2016 03:30:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36947</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36947/1464233434937691</guid>
      <description>&lt;p&gt;
Hello,
&lt;/p&gt;
&lt;p&gt;
I am having an issue with the new version 4.5.2. After upgrading the grid view is not working in the Media Library. If I switch to list view I can see my media files.
&lt;/p&gt;
&lt;p&gt;
I also am getting a error when I try to upload images to the folder. I just get "An error occurred in the upload. Please try again later."
&lt;/p&gt;
&lt;p&gt;
I checked the permission on the folder and those are correct.  I have also looked around to see if anyone else is having this issue but didn't find it for version 4.5.2. I found that version 4.3 had this issue but was fixed.
&lt;/p&gt;
&lt;p&gt;
Any thoughts?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #34923 (Allow users to more seamlessly create page-based nav menus during ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 26 May 2016 02:29:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34923#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34923#comment:39/1464229750933098</guid>
      <description>&lt;p&gt;
@celloexpressions instead of a filter, I think it would be better as a property on the post type object itself. For example, in Customize Posts we've added support for a &lt;code&gt;show_in_customizer&lt;/code&gt; option to go alongside &lt;code&gt;show_in_nav_menus&lt;/code&gt;, &lt;code&gt;show_in_rest&lt;/code&gt;, and so on.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36946 (Provide `id` properties on core objects) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 26 May 2016 02:20:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36946#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36946#comment:4/1464229254682268</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36946#comment:3" title="Comment 3"&gt;DrewAPicture&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
All that aside, per the linked discussion, I &lt;em&gt;really&lt;/em&gt; don't think a deprecated notice or a &lt;code&gt;_doing_it_wrong()&lt;/code&gt; is a good idea, considering our history and the fact that &lt;code&gt;$user-&amp;gt;ID&lt;/code&gt; and &lt;code&gt;$post-&amp;gt;ID&lt;/code&gt; are used &lt;em&gt;all over&lt;/em&gt; the WordPress ecosystem.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I &lt;strong&gt;really&lt;/strong&gt; agree with this, I don't think we should be firing deprecated notices for &lt;em&gt;everything&lt;/em&gt; but rather just have the different-case'd variants "just work". There's zero harm in using &lt;code&gt;-&amp;gt;ID&lt;/code&gt; over &lt;code&gt;-&amp;gt;id&lt;/code&gt;, it's not like we're ever going to remove the &lt;code&gt;ID&lt;/code&gt; versions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34923 (Allow users to more seamlessly create page-based nav menus during ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Thu, 26 May 2016 02:13:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34923#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34923#comment:38/1464228834936976</guid>
      <description>&lt;p&gt;
@westonruter we should keep the filter that's in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34923/34923.ui.1.diff" title="Attachment '34923.ui.1.diff' in Ticket #34923"&gt;34923.ui.1.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34923/34923.ui.1.diff" title="Download"&gt;​&lt;/a&gt; (probably with better naming), including the post_type|taxonomy part for future compatibility, so that this feature can be disabled for certain or even all post types if desired.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36796 (Link "widget areas" to widgets panel in menu locations section description) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Thu, 26 May 2016 02:08:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36796#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36796#comment:3/1464228534846745</guid>
      <description>&lt;p&gt;
@lukecavanagh are you sure the patch applied correctly? &lt;code&gt;public&lt;/code&gt; doesn't appear in the patch, although maybe there's a missing semicolon or something?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36945 (Substrings that should not be translated should not be translatable) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 26 May 2016 01:54:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36945#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36945#comment:2/1464227681444184</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36945#comment:1" title="Comment 1"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It's worth noting that some languages will be translating that string, for example, &lt;code&gt;ja&lt;/code&gt; ships with a custom &lt;code&gt;wp-config-sample.php&lt;/code&gt; file with translated contents: &lt;a class="ext-link" href="http://i18n.svn.wordpress.org/ja/trunk/dist/wp-config-sample.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://i18n.svn.wordpress.org/ja/trunk/dist/wp-config-sample.php&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Same for ru_RU and all the other locales listed. They all ship with a translated &lt;code&gt;wp-config-sample.php&lt;/code&gt; file, there's nothing incorrect here :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36946 (Provide `id` properties on core objects) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 26 May 2016 01:35:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36946#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36946#comment:3/1464226514782357</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36946#comment:2" title="Comment 2"&gt;jeremyfelt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36946#comment:1" title="Comment 1"&gt;DrewAPicture&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
My vote would be on standardizing on &lt;strong&gt;ID&lt;/strong&gt; as it's actually the abbreviation for &lt;em&gt;identifier&lt;/em&gt; and is what we (correctly) use all over the place in inline docs.
&lt;/p&gt;
&lt;p&gt;
'id' makes me think of Freud. :-)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Here's the &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1464211408007002"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;related discussion from today's core meeting&lt;/a&gt;. Hopefully to sway you a bit. :)
&lt;/p&gt;
&lt;p&gt;
Also worth noting that the WP REST API team is using &lt;code&gt;id&lt;/code&gt; in responses for core objects.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Interesting. Of course it also doesn't help that we're sorely inconsistent at the db level either:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;commentmeta: &lt;code&gt;meta_id&lt;/code&gt;, &lt;code&gt;comment_id&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;comments: &lt;code&gt;comment_ID&lt;/code&gt;, &lt;code&gt;comment_post_ID&lt;/code&gt;, &lt;code&gt;user_id&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;options: &lt;code&gt;option_id&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;postmeta: &lt;code&gt;meta_id&lt;/code&gt;, &lt;code&gt;post_id&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;posts: &lt;code&gt;ID&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;termmeta: &lt;code&gt;meta_id&lt;/code&gt;, &lt;code&gt;term_id&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;terms: &lt;code&gt;term_id&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;term_relationships: &lt;code&gt;object_id&lt;/code&gt;, &lt;code&gt;term_taxonomy_id&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;term_taxonomy: &lt;code&gt;term_taxonomy_id&lt;/code&gt;, &lt;code&gt;term_id&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;usermeta: &lt;code&gt;umeta_id&lt;/code&gt;, &lt;code&gt;user_id&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;users: &lt;code&gt;ID&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Pretty much the only thing that's &lt;em&gt;consistent&lt;/em&gt; there is that when it's 'ID' alone, it's 'ID'. Yuck.
&lt;/p&gt;
&lt;p&gt;
All that aside, per the linked discussion, I &lt;em&gt;really&lt;/em&gt; don't think a deprecated notice or a &lt;code&gt;_doing_it_wrong()&lt;/code&gt; is a good idea, considering our history and the fact that &lt;code&gt;$user-&amp;gt;ID&lt;/code&gt; and &lt;code&gt;$post-&amp;gt;ID&lt;/code&gt; are used &lt;em&gt;all over&lt;/em&gt; the WordPress ecosystem.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36320 (PayPal 2016 merchant security upgrades - Core defaults need to be changed) updated</title>
      
        <dc:creator>reidbusi</dc:creator>

      <pubDate>Thu, 26 May 2016 01:32:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36320#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36320#comment:29/1464226332777884</guid>
      <description>&lt;p&gt;
It appears PayPal realised they were going to break large numbers of websites and they have backed off on the changes till June 30th 2017 (previously June 17, 2016):
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
PayPal is upgrading the protocols used to secure all external connections made to our systems. Transport Layer Security version 1.2 (TLS 1.2) and Hypertext Transfer Protocol version 1.1 (HTTP/1.1) will become mandatory for communication with PayPal in 2017. You will need to verify that your environment supports TLS 1.2 and HTTP/1.1, and if necessary make appropriate updates. &lt;strong&gt;DATE CHANGE - Act by June 30, 2017&lt;/strong&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://www.paypal-knowledge.com/infocenter/index?page=content&amp;amp;id=FAQ1914"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.paypal-knowledge.com/infocenter/index?page=content&amp;amp;id=FAQ1914&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Though CentOS 6.8 was released today, so it is ready now:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
"PHP cURL module now supports TLS 1.1 and TLS 1.2" and "NSS now enables the TLS version 1.2 protocol by default"
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/6.8_Release_Notes/new_features_security.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/6.8_Release_Notes/new_features_security.html&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
So hosts now have a whole year to roll it out.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>too-far-to-the-right.png attached to Ticket #36424</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Thu, 26 May 2016 01:17:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36424/too-far-to-the-right.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36424/too-far-to-the-right.png/1464225473087842</guid>
      <description>&lt;p&gt;
too far to the right
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>looks-ok.png attached to Ticket #36424</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Thu, 26 May 2016 01:17:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36424/looks-ok.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36424/looks-ok.png/1464225446493381</guid>
      <description>&lt;p&gt;
looks ok
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36946 (Provide `id` properties on core objects) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 26 May 2016 00:59:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36946#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36946#comment:2/1464224386455930</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36946#comment:1" title="Comment 1"&gt;DrewAPicture&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
My vote would be on standardizing on &lt;strong&gt;ID&lt;/strong&gt; as it's actually the abbreviation for &lt;em&gt;identifier&lt;/em&gt; and is what we (correctly) use all over the place in inline docs.
&lt;/p&gt;
&lt;p&gt;
'id' makes me think of Freud. :-)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Here's the &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1464211408007002"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;related discussion from today's core meeting&lt;/a&gt;. Hopefully to sway you a bit. :)
&lt;/p&gt;
&lt;p&gt;
Also worth noting that the WP REST API team is using &lt;code&gt;id&lt;/code&gt; in responses for core objects.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36946 (Provide `id` properties on core objects) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 26 May 2016 00:39:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36946#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36946#comment:1/1464223142168222</guid>
      <description>&lt;p&gt;
My vote would be on standardizing on &lt;strong&gt;ID&lt;/strong&gt; as it's actually the abbreviation for &lt;em&gt;identifier&lt;/em&gt; and is what we (correctly) use all over the place in inline docs.
&lt;/p&gt;
&lt;p&gt;
'id' makes me think of Freud. :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36717 (Allow to access network and site properties using the current naming ...) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 26 May 2016 00:37:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36717#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36717#comment:10/1464223046566274</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36717#comment:9" title="Comment 9"&gt;jeremyfelt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I started trying to convert the new properties to &lt;code&gt;int&lt;/code&gt;, but I think that gets too messy.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I just thought about the same while looking at the patch before even reading your comment. Couldn't we, only for the new properties, ensure that when they're read they return an integer? And then, when setting the property, ensure it's a string? That would give the new properties a matching type while preserving backwards-compatibility with the old properties. Or am I missing something here?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36946 (Provide `id` properties on core objects) created</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 26 May 2016 00:22:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36946</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36946/1464222159878939</guid>
      <description>&lt;p&gt;
In &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36717" title="#36717: enhancement: Allow to access network and site properties using the current naming ... (closed: fixed)"&gt;#36717&lt;/a&gt;, &lt;code&gt;WP_Site&lt;/code&gt; and &lt;code&gt;WP_Network&lt;/code&gt; will get magic getters/setters so that &lt;code&gt;id&lt;/code&gt; and other more properly named properties can be used.
&lt;/p&gt;
&lt;p&gt;
We should standardize on &lt;code&gt;id&lt;/code&gt; rather than &lt;code&gt;ID&lt;/code&gt; for core objects where it makes sense.
&lt;/p&gt;
&lt;p&gt;
Current primary IDs for objects are:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;WP_Comment&lt;/code&gt; -&amp;gt; &lt;code&gt;comment_ID&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;WP_Post&lt;/code&gt; -&amp;gt; &lt;code&gt;ID&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;WP_Term&lt;/code&gt; -&amp;gt; &lt;code&gt;term_id&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;WP_User&lt;/code&gt; -&amp;gt; &lt;code&gt;ID&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;WP_Widget&lt;/code&gt; -&amp;gt; &lt;code&gt;id&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;WP_Screen&lt;/code&gt; -&amp;gt; &lt;code&gt;id&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;code&gt;WP_User&lt;/code&gt; is somewhat unique because the property was &lt;code&gt;id&lt;/code&gt; and then deprecated in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/18504" title="Add magic get/set/isset methods to WP_User to avoid data duplication. ..."&gt;[18504]&lt;/a&gt; in favor of &lt;code&gt;ID&lt;/code&gt;. We should be able to un-deprecate this.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36945 (Substrings that should not be translated should not be translatable) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 26 May 2016 00:19:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36945#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36945#comment:1/1464221971377224</guid>
      <description>&lt;p&gt;
It's worth noting that some languages will be translating that string, for example, &lt;code&gt;ja&lt;/code&gt; ships with a custom &lt;code&gt;wp-config-sample.php&lt;/code&gt; file with translated contents: &lt;a class="ext-link" href="http://i18n.svn.wordpress.org/ja/trunk/dist/wp-config-sample.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://i18n.svn.wordpress.org/ja/trunk/dist/wp-config-sample.php&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
It might make sense to split this out to a 2nd string, with translator comments explaining that it should only be translated if it's translated within &lt;code&gt;wp-config-sample.php&lt;/code&gt;? There was also a ticket somewhere to put the &lt;code&gt;wp-config-sample.php&lt;/code&gt; and &lt;code&gt;readme.html&lt;/code&gt; strings into GlotPress, if that was done it'd be able to pull it in automatically, etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34292 (Support for DNS Prefetching &amp; Prerender) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 26 May 2016 00:15:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34292#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34292#comment:22/1464221731088373</guid>
      <description>&lt;p&gt;
Couple of thoughts around adding support for the pre* specs:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Pre-fetching or -rendering posts on the front-end increases the potential for a site to be brought down if it gets linked by a high-profile site or twitter user. If this path is followed, I’m slightly keener on prefetching than rendering but this is gut rather than science.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;For resources enqueued prior to output, adding the pre* instructions as HTTP headers would start to get WordPress ready for HTTP/2 with server push. Actual push support can be a separate ticket.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;It would be handy to include the preload spec, while the spec itself is in draft support is starting to appear in browser nightlies. Preload is a direction to the browser, prefetch is a suggestion.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>network.php.happy_blogging.patch attached to Ticket #36945</title>
      
        <dc:creator>julesaus</dc:creator>

      <pubDate>Thu, 26 May 2016 00:14:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36945/network.php.happy_blogging.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36945/network.php.happy_blogging.patch/1464221677511138</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36945 (Substrings that should not be translated should not be translatable) created</title>
      
        <dc:creator>julesaus</dc:creator>

      <pubDate>Thu, 26 May 2016 00:14:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36945</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36945/1464221653724812</guid>
      <description>&lt;p&gt;
wp-admin/includes/network.php includes the string:
&lt;/p&gt;
&lt;pre class="wiki"&gt;__( 'Add the following to your %1$s file in %2$s &amp;lt;strong&amp;gt;above&amp;lt;/strong&amp;gt; the line reading &amp;lt;code&amp;gt;/* That&amp;amp;#8217;s all, stop editing! Happy blogging. */&amp;lt;/code&amp;gt;:' )
&lt;/pre&gt;&lt;p&gt;
The code block is a quote from a file and translating it doesn't make any sense, but including it in the translatable string signals to translators that they should translate it.
&lt;/p&gt;
&lt;p&gt;
This is confusing, and creates unnecessary work.
&lt;/p&gt;
&lt;p&gt;
We should pull this substring out of the translatable string to make translating easier and less error prone.
&lt;/p&gt;
&lt;p&gt;
Patch attached.
&lt;/p&gt;
&lt;p&gt;
p.s.  Some examples of this string being being incorrectly translated at time of writing:
&lt;a class="ext-link" href="https://translate.wordpress.org/projects/wp/dev/admin/network/tr/default?filters%5Bterm%5D=happy+blogging"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://translate.wordpress.org/projects/wp/dev/admin/network/tr/default?filters%5Bterm%5D=happy+blogging&lt;/a&gt;
&lt;a class="ext-link" href="https://translate.wordpress.org/projects/wp/dev/admin/network/it/default?filters%5Bterm%5D=happy+blogging"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://translate.wordpress.org/projects/wp/dev/admin/network/it/default?filters%5Bterm%5D=happy+blogging&lt;/a&gt;
&lt;a class="ext-link" href="https://translate.wordpress.org/projects/wp/dev/admin/network/ja/default?filters%5Bterm%5D=happy+blogging"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://translate.wordpress.org/projects/wp/dev/admin/network/ja/default?filters%5Bterm%5D=happy+blogging&lt;/a&gt;
&lt;a class="ext-link" href="https://translate.wordpress.org/projects/wp/dev/admin/network/pt-br/default?filters%5Bterm%5D=happy+blogging"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://translate.wordpress.org/projects/wp/dev/admin/network/pt-br/default?filters%5Bterm%5D=happy+blogging&lt;/a&gt;
&lt;a class="ext-link" href="https://translate.wordpress.org/projects/wp/dev/admin/network/es/default?filters%5Bterm%5D=happy+blogging"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://translate.wordpress.org/projects/wp/dev/admin/network/es/default?filters%5Bterm%5D=happy+blogging&lt;/a&gt;
&lt;a class="ext-link" href="https://translate.wordpress.org/projects/wp/dev/admin/network/ru/default?filters%5Bterm%5D=happy+blogging"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://translate.wordpress.org/projects/wp/dev/admin/network/ru/default?filters%5Bterm%5D=happy+blogging&lt;/a&gt;
&lt;a class="ext-link" href="https://translate.wordpress.org/projects/wp/dev/admin/network/zh-cn/default?filters%5Bterm%5D=happy+blogging"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://translate.wordpress.org/projects/wp/dev/admin/network/zh-cn/default?filters%5Bterm%5D=happy+blogging&lt;/a&gt;
&lt;a class="ext-link" href="https://translate.wordpress.org/projects/wp/dev/admin/network/ar/default?filters%5Bterm%5D=happy+blogging"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://translate.wordpress.org/projects/wp/dev/admin/network/ar/default?filters%5Bterm%5D=happy+blogging&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35381 (Introduce `WP_Term_Query`) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Thu, 26 May 2016 00:02:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35381#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35381#comment:12/1464220925672919</guid>
      <description>&lt;p&gt;
Is there a good reason why the results are only cached for a day? See the following line
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;wp_cache_add( $cache_key, $terms, 'terms', DAY_IN_SECONDS )
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
If is confusing, a day seems like a random amount of time. The cache key changes on term cache clean anyway, so it should stay in cache forever right?
&lt;/p&gt;
&lt;p&gt;
I also think that the value stored in cache should be just an array of ids. I don't think we should be storing the whole object in there, as it not required and will just use up memory.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>