<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #36484 (Bump Recommended PHP version to PHP 7) updated</title>
      
        <dc:creator>mensmaximus</dc:creator>

      <pubDate>Tue, 12 Apr 2016 23:26:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36484#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36484#comment:9/1460503568887991</guid>
      <description>&lt;p&gt;
+1. No issues with 7.0 any more
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36394 (git-or-svn module assumes only one can be true) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Tue, 12 Apr 2016 22:34:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36394#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36394#comment:12/1460500468407372</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #35557,â€‹36394 batch updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Tue, 12 Apr 2016 22:33:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=35557%2C36394</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=35557%2C36394/1460500399703197</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37185" title="Build/Test Tools: Better git/svn detection
Prevent tasks from running ..."&gt;37185&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Build/Test Tools: Better git/svn detection&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Prevent tasks from running twice in parallel &lt;br /&gt;
if both .svn and .git directories are present.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Add &lt;code&gt;--ignore-externals&lt;/code&gt; to &lt;code&gt;svn status&lt;/code&gt;&lt;br /&gt;
and replace &lt;code&gt;git diff --name-only&lt;/code&gt; with &lt;code&gt;git status --short&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merge some duplicate code.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36394" title="#36394: defect (bug): git-or-svn module assumes only one can be true (closed: fixed)"&gt;#36394&lt;/a&gt;.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35557" title="#35557: task (blessed): grunt precommit should run phpunit tests (closed: fixed)"&gt;#35557&lt;/a&gt;.&lt;br /&gt;
See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36906" title="Improve grunt precommit task
Instead of running all tasks, all the ..."&gt;[36906]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [37185]: Build/Test Tools: Better git/svn detection  Prevent tasks from running ...</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Tue, 12 Apr 2016 22:33:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37185</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37185/1460500398893049</guid>
      <description>&lt;p&gt;
Build/Test Tools: Better git/svn detection
&lt;/p&gt;
&lt;p&gt;
Prevent tasks from running twice in parallel
if both .svn and .git directories are present.
&lt;/p&gt;
&lt;p&gt;
Add &lt;code&gt;--ignore-externals&lt;/code&gt; to &lt;code&gt;svn status&lt;/code&gt;
and replace &lt;code&gt;git diff --name-only&lt;/code&gt; with &lt;code&gt;git status --short&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Merge some duplicate code.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36394" title="#36394: defect (bug): git-or-svn module assumes only one can be true (closed: fixed)"&gt;#36394&lt;/a&gt;.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35557" title="#35557: task (blessed): grunt precommit should run phpunit tests (closed: fixed)"&gt;#35557&lt;/a&gt;.
See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36906" title="Improve grunt precommit task
Instead of running all tasks, all the ..."&gt;[36906]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #34744 (Don't use regex replacement to set force_default to true for images ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 12 Apr 2016 21:12:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34744#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34744#comment:8/1460495554060347</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36343 (Taxonomy query matching specified term or NOT EXISTS does not return ...) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 12 Apr 2016 20:36:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36343#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36343#comment:12/1460493391692173</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37184" title="Use `LEFT JOIN` when building `WP_Tax_Query` SQL.
`LEFT JOIN` ensures ..."&gt;37184&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Use &lt;code&gt;LEFT JOIN&lt;/code&gt; when building &lt;code&gt;WP_Tax_Query&lt;/code&gt; SQL.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;LEFT JOIN&lt;/code&gt; ensures that &lt;code&gt;NOT EXISTS&lt;/code&gt; queries will not miss posts that have&lt;br /&gt;
no taxonomy data whatsoever.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props swissspidy, crstauf.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36343" title="#36343: defect (bug): Taxonomy query matching specified term or NOT EXISTS does not return ... (closed: fixed)"&gt;#36343&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37184]: Use `LEFT JOIN` when building `WP_Tax_Query` SQL.  `LEFT JOIN` ensures ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 12 Apr 2016 20:36:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37184</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37184/1460493391096224</guid>
      <description>&lt;p&gt;
Use &lt;code&gt;LEFT JOIN&lt;/code&gt; when building &lt;code&gt;WP_Tax_Query&lt;/code&gt; SQL.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;LEFT JOIN&lt;/code&gt; ensures that &lt;code&gt;NOT EXISTS&lt;/code&gt; queries will not miss posts that have
no taxonomy data whatsoever.
&lt;/p&gt;
&lt;p&gt;
Props swissspidy, crstauf.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36343" title="#36343: defect (bug): Taxonomy query matching specified term or NOT EXISTS does not return ... (closed: fixed)"&gt;#36343&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36343 (Taxonomy query matching specified term or NOT EXISTS does not return ...) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 12 Apr 2016 20:36:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36343#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36343#comment:11/1460493381961681</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37183]: Trunk is now 4.6-alpha.</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 12 Apr 2016 20:03:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37183</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37183/1460491438257112</guid>
      <description>&lt;p&gt;
Trunk is now 4.6-alpha.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [37182]: The 4.5 branch is now 4.5.1-alpha. </title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Tue, 12 Apr 2016 19:55:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37182</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37182/1460490922558368</guid>
      <description>&lt;p&gt;
The 4.5 branch is now 4.5.1-alpha.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [37181]: Tag 4.5</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Tue, 12 Apr 2016 19:51:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37181</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37181/1460490717940979</guid>
      <description>&lt;p&gt;
Tag 4.5
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36354 (Bundled themes: Bump version numbers, changelogs and POT files for 4.5 ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 12 Apr 2016 19:50:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36354#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36354#comment:15/1460490650403503</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by davidakennedy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1460490648005414"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Milestone 4.5 completed</title>
      

      <pubDate>Tue, 12 Apr 2016 19:49:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/milestone/4.5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/milestone/4.5/1460490596000000</guid>
      <description></description>
      <category>milestone</category>
    </item><item>
      <title>Ticket #22589 (Network Admin + Ajax requests) updated</title>
      
        <dc:creator>danieliser</dc:creator>

      <pubDate>Tue, 12 Apr 2016 18:54:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22589#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22589#comment:9/1460487256155984</guid>
      <description>&lt;p&gt;
Any news on this? Currently my hack includes passing a salted token with request and verifying it in the normal admin ajax hook to ensure its network admin. Definitely seems there should be a better / native alternative.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36497 (Merge Twenty Sixteen with the rest of WordPress Core) created</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Tue, 12 Apr 2016 18:45:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36497</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36497/1460486709438040</guid>
      <description>&lt;p&gt;
While github has served Twentysixteen well when it was under active development, now that it is in maintenance, it's proving to be more of a hassle to keep it
&lt;/p&gt;
&lt;p&gt;
1) It is a unique snowflake when it comes to releases that is hard to keep track of
2) Fractured development means things get missed. Out of sight, out of mind
3) It's harder to ensure the theme is updated as new features are added.
4) Spending hours during each release making sure that the correct version of twentysix is bundled slows us down.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35270 (Bump twentysixteen for 4.4.1) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 12 Apr 2016 17:53:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35270#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35270#comment:11/1460483620260225</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by ocean90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1460483618005116"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37180]: Branch 4.5.</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Tue, 12 Apr 2016 17:33:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37180</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37180/1460482417061324</guid>
      <description>&lt;p&gt;
Branch 4.5.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [37179]: WordPress 4.5</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Tue, 12 Apr 2016 17:28:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37179</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37179/1460482135812240</guid>
      <description>&lt;p&gt;
WordPress 4.5
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [37178]: About Page: Add Final Video  Props siobhan, melchoyce, hugobaeta, rosso99.</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Tue, 12 Apr 2016 17:24:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37178</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37178/1460481877332609</guid>
      <description>&lt;p&gt;
About Page: Add Final Video
&lt;/p&gt;
&lt;p&gt;
Props siobhan, melchoyce, hugobaeta, rosso99.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36491 (Prevent attempting to load en_US translation files) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Tue, 12 Apr 2016 16:47:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36491#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36491#comment:10/1460479625844941</guid>
      <description>&lt;p&gt;
All very good points. Thank you all for your feedback.
In the light of this, please close this issue.
&lt;/p&gt;
&lt;p&gt;
If I can think of another way to lower the performance hit this causes at some point in the future, I'll ask for a re-open.
&lt;/p&gt;
&lt;p&gt;
On the matter of non-en_US default languages for themes/plugins: anyone know of a way to detect this so I could make this more visible in DBL ?
Low prio, but could be useful for someone when debugging a site where - for instance - a widget shows up in Chinese because of this and the site-admin is not aware of the fact that plugins/themes can have non-standard default locales.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36424 (graphically visualize if comments are closed (in wp-admin/edit.php)) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Tue, 12 Apr 2016 16:27:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36424#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36424#comment:15/1460478472673728</guid>
      <description>&lt;p&gt;
Still learning, please have some patience with me, thank you. Trying to attach a patch here.
&lt;/p&gt;
&lt;p&gt;
Don't know what's happening at line 28/29 - it wasn't me
&lt;/p&gt;
&lt;p&gt;
I will wait for any further discussion (CSS, translation, events) happening here or not.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>class-wp-list-table.php.patch attached to Ticket #36424</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Tue, 12 Apr 2016 16:26:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36424/class-wp-list-table.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36424/class-wp-list-table.php.patch/1460478381790497</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27403 (Improve UI for linking areas of Customizer preview to corresponding ...) updated</title>
      
        <dc:creator>sirbrillig</dc:creator>

      <pubDate>Tue, 12 Apr 2016 16:12:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27403#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27403#comment:13/1460477576486418</guid>
      <description>&lt;p&gt;
@westonruter FYI if it's helpful we've open-sourced the click-to-edit customizer plugin that we're using on WP.com here: &lt;a class="ext-link" href="https://github.com/Automattic/customize-direct-manipulation"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/Automattic/customize-direct-manipulation&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36495 (Standardize on 3-digit x.x style for _doing_it_wrong() and ...) updated</title>
      
        <dc:creator>metodiew</dc:creator>

      <pubDate>Tue, 12 Apr 2016 15:55:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36495#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36495#comment:1/1460476505209359</guid>
      <description>&lt;p&gt;
Do we need to remove the 3rd digit for older version, e.g:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;src/wp-includes/post.php
3389: _doing_it_wrong( __FUNCTION__, sprintf( __( 'Invalid taxonomy: %s.' ), $taxonomy ), '4.4.0' );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
or 4.5.x is enough?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20263 (Backticks in dbDelta cause warning and actually causes a query to ...) updated</title>
      
        <dc:creator>jrfoell</dc:creator>

      <pubDate>Tue, 12 Apr 2016 15:45:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20263#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20263#comment:13/1460475936110735</guid>
      <description>&lt;p&gt;
Just joining the conversation here, hoping this gets resolved since it seems like an easy fix. Still an issue in WP 4.4 :(
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36496.diff attached to Ticket #36496</title>
      
        <dc:creator>andg</dc:creator>

      <pubDate>Tue, 12 Apr 2016 15:45:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36496/36496.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36496/36496.diff/1460475905180577</guid>
      <description>&lt;p&gt;
"Script" and "style" should probably be wrapped in a &lt;code&gt;code&lt;/code&gt; tag themselves, and a comment in the string should remind translators not to translate them.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>filter-https.diff attached to Ticket #14808</title>
      
        <dc:creator>exthilion</dc:creator>

      <pubDate>Tue, 12 Apr 2016 15:31:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14808/filter-https.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14808/filter-https.diff/1460475061919421</guid>
      <description>&lt;p&gt;
https links by default, per @chriscct7
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36494 (in wordpress update screen missing the version number for download version) updated</title>
      
        <dc:creator>Kniebremser</dc:creator>

      <pubDate>Tue, 12 Apr 2016 15:14:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36494#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36494#comment:2/1460474076322820</guid>
      <description>&lt;p&gt;
Hi!
I use Worpress 4.5-RC3-37177 in german on localhost.
When I click on the button "- Download" click, nothing happens. It looks as if the function is missing behind the button. it is indeed not display version.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36496 (Replace function name in translatable strings with a placeholder) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Tue, 12 Apr 2016 14:36:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36496#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36496#comment:1/1460471780530732</guid>
      <description>&lt;p&gt;
Do "script" and "style" need to be translated either? If not, perhaps these strings could be combined.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36494 (in wordpress update screen missing the version number for download version) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 12 Apr 2016 14:15:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36494#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36494#comment:1/1460470518786253</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Sadly the image doesn't say everything. Can you please add some details about your install? Which version are you running?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36496 (Replace function name in translatable strings with a placeholder) created</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 12 Apr 2016 14:06:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36496</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36496/1460469966299285</guid>
      <description>&lt;p&gt;
In these two strings, the function name does not need to be translated and should be replaced with a placeholder and a translator comment:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;Do not pass script tags to wp_add_inline_script().&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;Do not pass style tags to wp_add_inline_style().&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36495 (Standardize on 3-digit x.x style for _doing_it_wrong() and ...) created</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 12 Apr 2016 14:03:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36495</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36495/1460469800387425</guid>
      <description>&lt;p&gt;
&lt;del&gt;We generally use 2-digit x.x style for &lt;code&gt;_doing_it_wrong()&lt;/code&gt; calls, e.g. &lt;code&gt;'4.5'&lt;/code&gt; instead if `'4.5.0'.&lt;/del&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;del&gt;I've counted 5 instances of &lt;code&gt;'4.5.0'&lt;/code&gt; being passed to &lt;code&gt;_doing_it_wrong()&lt;/code&gt; and &lt;code&gt;_deprecated_function()&lt;/code&gt;.&lt;/del&gt;
&lt;/p&gt;
&lt;p&gt;
We use 3-digit x.x.x style for &lt;code&gt;@since&lt;/code&gt;, per the &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/inline-documentation-standards/php/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;documentation standards&lt;/a&gt;, however for &lt;code&gt;_doing_it_wrong()&lt;/code&gt; and &lt;code&gt;_deprecated_*()&lt;/code&gt;, 2-digit x.x style seems to prevail.
&lt;/p&gt;
&lt;p&gt;
We should standardize on 3-digit x.x.x style throughout core.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>update screen bug.png attached to Ticket #36494</title>
      
        <dc:creator>Kniebremser</dc:creator>

      <pubDate>Tue, 12 Apr 2016 13:59:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36494/update%20screen%20bug.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36494/update%20screen%20bug.png/1460469595134040</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36494 (in wordpress update screen missing the version number for download version) created</title>
      
        <dc:creator>Kniebremser</dc:creator>

      <pubDate>Tue, 12 Apr 2016 13:59:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36494</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36494/1460469574192407</guid>
      <description>&lt;p&gt;
The title and the screen picture already say everything from.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36491 (Prevent attempting to load en_US translation files) updated</title>
      
        <dc:creator>dimadin</dc:creator>

      <pubDate>Tue, 12 Apr 2016 13:52:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36491#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36491#comment:9/1460469124486479</guid>
      <description>&lt;p&gt;
You have &lt;code&gt;override_load_textdomain&lt;/code&gt; filter that will prevent loading:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;add_filter( 'override_load_textdomain', '__return_true' );&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Or change this line if you want to check if locale is &lt;code&gt;en_US&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
There is no reason to have special case for &lt;code&gt;en_US&lt;/code&gt; since filters are for that.
&lt;/p&gt;
&lt;p&gt;
Another thing is that you can have &lt;code&gt;en_US&lt;/code&gt; translation files to override default strings and this change would break this too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35658 (Provide additional data for registered meta through register_meta()) updated</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Tue, 12 Apr 2016 13:26:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35658#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35658#comment:30/1460467577646105</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Would y'all be into working on this in a git branch off of &lt;a class="ext-link" href="https://github.com/aaronjorbin/develop.wordpress/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Aaron's repo&lt;/a&gt;?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I've moved the current patch into a &lt;a class="ext-link" href="https://github.com/aaronjorbin/develop.wordpress/pull/1/commits/49e3ec5e06dede2b40d49e1cf8922a7348636be9"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;pull request&lt;/a&gt; (also a branch and commit) for review and iteration. If you have changes to make feel free to comment on the PR, or make commits and send PRs to my branch and we can review and merge.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36493 (Move translator comment to the correct line) created</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 12 Apr 2016 13:09:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36493</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36493/1460466573538046</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36806" title="TinyMCE, inline link:
- Add `uiAutocompleteL10n` with translatable ..."&gt;[36806]&lt;/a&gt;, a translator comment was added for the string with a number instead of a string with a placeholder.
&lt;/p&gt;
&lt;p&gt;
It should be moved one line below to be associated with the correct string.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36484 (Bump Recommended PHP version to PHP 7) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Tue, 12 Apr 2016 13:08:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36484#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36484#comment:8/1460466502748787</guid>
      <description>&lt;p&gt;
+1. I've migrated a couple of sites to PHP 7 without issues from core or plugins, although some plugins do give off some notices (W3TC).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36424 (graphically visualize if comments are closed (in wp-admin/edit.php)) updated</title>
      
        <dc:creator>kebbet</dc:creator>

      <pubDate>Tue, 12 Apr 2016 12:44:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36424#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36424#comment:14/1460465049347297</guid>
      <description>&lt;p&gt;
Just a thought: What about adding the ability to close and open comments pÃ¥ clicking the lock icon? Is it needed, or wanted?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36477 (Responsive images (srcset) can include images larger than the full size) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Tue, 12 Apr 2016 12:38:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36477#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36477#comment:4/1460464693133053</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36477#comment:3" title="Comment 3"&gt;peterdavehello&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi @joemcgill,
&lt;/p&gt;
&lt;p&gt;
Thanks for your prompt reply in detail, yes, I'm talking about the file size, not the dimensional size, and my basic idea is try to get the size before and after the resize, once the resized images is larger, than we drop that size of image, what do you think?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I would be careful about dropping images altogether, but it may be possible to save the file size as attachment metadata and factor that into our &lt;code&gt;srcset&lt;/code&gt; considerations in &lt;code&gt;wp_calculate_image_srcset()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36491 (Prevent attempting to load en_US translation files) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Tue, 12 Apr 2016 12:34:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36491#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36491#comment:8/1460464489005236</guid>
      <description>&lt;p&gt;
I'd say it happens fairly often in many locales where English is a 2nd or 3rd language (or not at all).
&lt;/p&gt;
&lt;p&gt;
I've seen my fair share of Chinese ones for example, and I've even done this my self in Norwegian when a client only wants it in their language, then changes their mind a year or so later and I just append en_US translation files.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36424 (graphically visualize if comments are closed (in wp-admin/edit.php)) updated</title>
      
        <dc:creator>pixelverbieger</dc:creator>

      <pubDate>Tue, 12 Apr 2016 11:58:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36424#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36424#comment:13/1460462305138126</guid>
      <description>&lt;p&gt;
Your code does what I initially meant when writing down my idea. Great!
&lt;/p&gt;
&lt;p&gt;
The next step is to adjust the alignment of bubble and lock :)
Which is not trivial, because the dash and the bubble have very different heights, so it is not done with a simple
.dashicons-lock { margin-top:5px; }
&lt;/p&gt;
&lt;p&gt;
(The bubble gets an margin-top of 5px applied, coming from line 40-46 in
wp-admin/css/list-tables.css
I think.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36492 (Add `WP_Post_Status` class) updated</title>
      
        <dc:creator>sebastian.pisula</dc:creator>

      <pubDate>Tue, 12 Apr 2016 11:47:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36492#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36492#comment:3/1460461648777846</guid>
      <description>&lt;p&gt;
I like this !
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36491 (Prevent attempting to load en_US translation files) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Tue, 12 Apr 2016 11:12:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36491#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36491#comment:7/1460459540268698</guid>
      <description>&lt;p&gt;
Ok, thanks. I'll have a play with it. The performance difference with the short-circuit is very noticeable, so I'll see if I can come up something anyway.
&lt;/p&gt;
&lt;p&gt;
Any idea if this (plugins/themes defaulting to non-en_US) is a regular thing ? I'd never come across it before.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36473 (JavaScript error in theme customizer a specific value of before_widget) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 12 Apr 2016 11:09:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36473#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36473#comment:3/1460459385115985</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks. OK, that confirms it. It registers a sidebar with:
&lt;/p&gt;
&lt;pre class="wiki"&gt;'before_widget' =&amp;gt; '&amp;lt;section id="%1$s" class="widget %2$s widget-%2$s"&amp;gt;',
&lt;/pre&gt;&lt;p&gt;
Only the first instance of &lt;code&gt;%2$s&lt;/code&gt; is getting replaced, so implementing the regex global replacement will do the trick.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36491 (Prevent attempting to load en_US translation files) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 12 Apr 2016 11:03:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36491#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36491#comment:6/1460458989522024</guid>
      <description>&lt;p&gt;
@jrf See &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36491/test-plugin.zip" title="Attachment 'test-plugin.zip' in Ticket #36491"&gt;test-plugin.zip&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36491/test-plugin.zip" title="Download"&gt;â€‹&lt;/a&gt;. You don't have to define the default language explicit, it can be any language.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23394 (Remove version from readme.html / Upgrade core doesn't restore the file) updated</title>
      
        <dc:creator>RedSand</dc:creator>

      <pubDate>Tue, 12 Apr 2016 11:02:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23394#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23394#comment:19/1460458940832346</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23394#comment:18" title="Comment 18"&gt;rmccue&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I took &lt;em&gt;several hours&lt;/em&gt; of my life to write it...people can take a &lt;em&gt;few minutes&lt;/em&gt; out of their life to read what I wrote.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If you spent months writing a book about this topic, that would be impressive...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I would hope that it would not require writing a book on the topic to get the core team to follow security best practices. :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
...but it would still be inappropriate for a comment on Trac.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If that's true then technical limitations should be set in place to prevent long comments.
&lt;/p&gt;
&lt;p&gt;
Also, if that's true, then it should be considered inappropriate for core team responders to instantly shut users down without really considering their points or admitting that they need to research the topic, or consult someone more specialized. It forces us to write long comments to prove the point.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Consider that your comment is not the only one left on Trac today, nor is reading Trac the only thing we need to do.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, I understand. While I do appreciate your hard work, we're all in the exact same situation.
&lt;/p&gt;
&lt;p&gt;
With each new release of WordPress, we have to check our plugins for compatibility, potential new security issues, and make sure nothing gets broken or compromised by the new release. With each new major release in the last couple years (and all but the most recent minor releases), vulnerabilities have been discovered within weeks, so please understand why I'm pushing for some change here.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Having gigantic comments makes it harder to keep on top of what's happening, and I don't think any of us have the mental space to keep track of all of it even when comments are succinct.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I understand. But keep in mind that we have to protect our clients' websites from security issues, and when WordPress devs don't follow all best-practices, it requires a lot of extra work for those of us tasked with protecting people's websites, businesses, and livelihoods. We have to do a lot of extra research, coding, and testing to create additional layers of security to compensate. You talk about mental space...I understand...we get extremely exhausted too. :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think you've also mischaracterised my involvement in WordPress; I am a guest committer, and am not on the security team, nor a lead developer. My time spent here is also voluntary. If you have security concerns, you should email security@â€¦ with them. I merely dropped in to mention that your comment is probably too long to be digestable.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I understand. This particular issue is something that people have been bringing up for years. I think it's better discussed publicly because WordPress is open source, and the published process is to use the bug tracker ticket system. However, I will email security as well.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I also find the tone you've replied with here to be inappropriate. I'm trying to help you get your concerns across, and instead you've attacked me. Let's keep calm and discuss this. :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think you misinterpret my tone. I apologize if anything I said was perceived as an attack. I think you may be confusing "disagree" and "challenge" with "attack". I certainly didn't intend to attack you. :) Notice there was no name calling, derogatory anything...I was just pointing out that the overall process tends to run people in circles, and exasperate those who report issues. At no point did I have any negative feelings toward you, disrespect, or intend insult. :)
&lt;/p&gt;
&lt;p&gt;
Disagreement, or pointing out problems with how things are being handled should not be discouraged, though.
&lt;/p&gt;
&lt;p&gt;
As noted in my "research paper" comment, I have nothing but love and respect for you all guys. I'm a blunt person. Sometimes I use sarcasm, especially when needing to break up a dry topic like this. No offense is meant. I can have conversations where I disagree with people, but at the same time have nothing but the utmost of respect for them.
&lt;/p&gt;
&lt;p&gt;
If it isn't clear, I'll say again:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;WordPress is the best CMS out there.
&lt;/li&gt;&lt;li&gt;I have nothing but love and respect for the WordPress devs, and all involved.
&lt;/li&gt;&lt;li&gt;I can disagree with you and point out a flaw without disliking you or being angry at you.
&lt;/li&gt;&lt;li&gt;I only invest my time in things that I care about.
&lt;/li&gt;&lt;li&gt;I'm trying to help improve WordPress.
&lt;/li&gt;&lt;li&gt;You all are brilliant, talented, and changing the world...keep doing great things.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
That means you, @rmccue :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>test-plugin.zip attached to Ticket #36491</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 12 Apr 2016 11:00:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36491/test-plugin.zip</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36491/test-plugin.zip/1460458820731964</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36424 (graphically visualize if comments are closed (in wp-admin/edit.php)) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Tue, 12 Apr 2016 10:47:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36424#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36424#comment:12/1460458034268332</guid>
      <description>&lt;p&gt;
I like the idea to show the lock to the right of the bubble, I don't like brackets.
&lt;/p&gt;
&lt;p&gt;
That would just be adding this at
&lt;/p&gt;
&lt;p&gt;
Line 689:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;                // If comments are closed, show a lock then
                if ( ! comments_open( $post_id ) ) {
                        printf( '&amp;lt;span aria-hidden="true"&amp;gt;&amp;lt;span class="dashicons dashicons-lock"&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span class="screen-reader-text"&amp;gt;%s&amp;lt;/span&amp;gt;',
                                __( 'Comments are closed' )
                        );
                }
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
I tried to join git to provide a correct patch, but until now I'm not fully understanding the process :(
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36491 (Prevent attempting to load en_US translation files) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Tue, 12 Apr 2016 10:42:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36491#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36491#comment:5/1460457753675252</guid>
      <description>&lt;p&gt;
Eh.. but how do you set a different default language for a plugin ? And how does WP recognize that ?
Got a link to a plugin or theme which does that ? I'd like to run some tests with it for the Debug Bar Localization plugin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36491 (Prevent attempting to load en_US translation files) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 12 Apr 2016 10:37:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36491#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36491#comment:4/1460457420532621</guid>
      <description>&lt;p&gt;
Example: The default language of a plugin is de_DE, to provide support for English the plugin ships a language file for en_US.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36492 (Add `WP_Post_Status` class) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 12 Apr 2016 10:35:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36492#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36492#comment:2/1460457304590411</guid>
      <description>&lt;p&gt;
I forgot to do &lt;code&gt;svn add&lt;/code&gt; in the first patch, so please ignore it :)
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36492/36492.2.diff" title="Attachment '36492.2.diff' in Ticket #36492"&gt;36492.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36492/36492.2.diff" title="Download"&gt;â€‹&lt;/a&gt; is an actually valid patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36491 (Prevent attempting to load en_US translation files) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Tue, 12 Apr 2016 10:34:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36491#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36491#comment:3/1460457242965617</guid>
      <description>&lt;p&gt;
@ocean90 Can you elaborate on that ? I've never come across that situation and wouldn't even know how to simulate it to do some testing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36492.2.diff attached to Ticket #36492</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 12 Apr 2016 10:33:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36492/36492.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36492/36492.2.diff/1460457205133692</guid>
      <description>&lt;p&gt;
fix for last patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36492 (Add `WP_Post_Status` class) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 12 Apr 2016 10:31:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36492#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36492#comment:1/1460457111714315</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36492/36492.diff" title="Attachment '36492.diff' in Ticket #36492"&gt;36492.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36492/36492.diff" title="Download"&gt;â€‹&lt;/a&gt; is an initial patch implementing the class and using it in &lt;code&gt;register_post_status()&lt;/code&gt; and &lt;code&gt;get_post_status_object()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Update: This patch is broken, please use &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36492/36492.2.diff" title="Attachment '36492.2.diff' in Ticket #36492"&gt;36492.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36492/36492.2.diff" title="Download"&gt;â€‹&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36492.diff attached to Ticket #36492</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 12 Apr 2016 10:30:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36492/36492.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36492/36492.diff/1460457056297020</guid>
      <description>&lt;p&gt;
initial patch implementing &lt;code&gt;WP_Post_Status&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36492 (Add `WP_Post_Status` class) created</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 12 Apr 2016 10:30:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36492</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36492/1460457014095883</guid>
      <description>&lt;p&gt;
Similar to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36217" title="#36217: enhancement: WP_Post_Type class (closed: fixed)"&gt;#36217&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36224" title="#36224: enhancement: WP_Taxonomy class (closed: fixed)"&gt;#36224&lt;/a&gt;, a dedicated class for post statuses would make it easier to work with those as they are currently represented through raw objects.
&lt;/p&gt;
&lt;p&gt;
The global variable &lt;code&gt;$wp_post_statuses&lt;/code&gt; would then hold objects of &lt;code&gt;WP_Post_Status&lt;/code&gt; which would provide the benefits of autocompletion in IDEs, and we could possibly add methods to the class in the future to make post status management easier.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36491 (Prevent attempting to load en_US translation files) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 12 Apr 2016 10:15:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36491#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36491#comment:2/1460456130591834</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This would break any theme/plugin which isn't per default in en_US.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23394 (Remove version from readme.html / Upgrade core doesn't restore the file) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 12 Apr 2016 10:15:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23394#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23394#comment:18/1460456104226135</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23394#comment:17" title="Comment 17"&gt;RedSand&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I took &lt;em&gt;several hours&lt;/em&gt; of my life to write it...people can take a &lt;em&gt;few minutes&lt;/em&gt; out of their life to read what I wrote.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If you spent months writing a book about this topic, that would be impressive, but it would still be inappropriate for a comment on Trac. Consider that your comment is not the only one left on Trac today, nor is reading Trac the only thing we need to do. Having gigantic comments makes it harder to keep on top of what's happening, and I don't think any of us have the mental space to keep track of all of it even when comments are succinct.
&lt;/p&gt;
&lt;p&gt;
I think you've also mischaracterised my involvement in WordPress; I am a guest committer, and am not on the security team, nor a lead developer. My time spent here is also voluntary. If you have security concerns, you should email security@â€¦ with them. I merely dropped in to mention that your comment is probably too long to be digestable.
&lt;/p&gt;
&lt;p&gt;
I also find the tone you've replied with here to be inappropriate. I'm trying to help you get your concerns across, and instead you've attacked me. Let's keep calm and discuss this. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36491 (Prevent attempting to load en_US translation files) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Tue, 12 Apr 2016 10:13:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36491#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36491#comment:1/1460455997775101</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>36491-leaner-loading-en_US.patch attached to Ticket #36491</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Tue, 12 Apr 2016 10:11:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36491/36491-leaner-loading-en_US.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36491/36491-leaner-loading-en_US.patch/1460455899672704</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36491 (Prevent attempting to load en_US translation files) created</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Tue, 12 Apr 2016 10:04:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36491</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36491/1460455480998080</guid>
      <description>&lt;p&gt;
As &lt;code&gt;en_US&lt;/code&gt; is the default language, there is no need to attempt to load translation files for it.
&lt;/p&gt;
&lt;p&gt;
However, WP still does.
&lt;/p&gt;
&lt;p&gt;
This can - on an average WP install - easily result in some 40+ file system calls to check for the existence of &lt;code&gt;en_US&lt;/code&gt; translation files. These call are unnecessary and slow down the page load.
&lt;/p&gt;
&lt;p&gt;
The included patch would solve this by bowing out early if the &lt;code&gt;locale&lt;/code&gt; is &lt;code&gt;en_US&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36424 (graphically visualize if comments are closed (in wp-admin/edit.php)) updated</title>
      
        <dc:creator>pixelverbieger</dc:creator>

      <pubDate>Tue, 12 Apr 2016 10:03:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36424#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36424#comment:11/1460455418979814</guid>
      <description>&lt;p&gt;
I think permanently showing a lock icon is not that good. That's too much.
Showing a locked lock only if it applies, makes it far more outstanding than showing a lock (being closed or open) in &lt;em&gt;every&lt;/em&gt; line.
&lt;/p&gt;
&lt;p&gt;
And the icon &lt;em&gt;dashicons-no-alt&lt;/em&gt; looks like a button indicating you can close something ;)
&lt;/p&gt;
&lt;p&gt;
What about this:
&lt;/p&gt;
&lt;p&gt;
if comments == 0 and comments open -&amp;gt; show mdash and nothing else (no lock)
&lt;/p&gt;
&lt;p&gt;
if comments != 0 and comments open -&amp;gt; show number of comments and nothing else (no lock)
&lt;/p&gt;
&lt;p&gt;
if comments == 0 and comments closed -&amp;gt; show mdash and locked lock, maybe in brackets
&lt;/p&gt;
&lt;p&gt;
if comments != 0 and comments closed -&amp;gt; show number of comments and locked lock, maybe in brackets
&lt;/p&gt;
&lt;p&gt;
The number of comments should come first, the lock symbol second.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23394 (Remove version from readme.html / Upgrade core doesn't restore the file) updated</title>
      
        <dc:creator>RedSand</dc:creator>

      <pubDate>Tue, 12 Apr 2016 09:50:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23394#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23394#comment:17/1460454659555864</guid>
      <description>&lt;p&gt;
@rmcue
&lt;/p&gt;
&lt;p&gt;
It would probably be more accurate to call it a "research paper" than a "comment". :)
&lt;/p&gt;
&lt;p&gt;
All kidding aside, I'm a pretty smart guy...I realize that long comments aren't likely to be read.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;TL;DR&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;I just pointed out that more than 20% of WordPress installations (over 50 million websites) have major security issues, and you're more concerned that my comment was too long.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
I really am concerned when expedience is of a higher importance to the WordPress core team than website security.
&lt;/p&gt;
&lt;p&gt;
For the last decade, when users have brought up similar security issues, the common response from the WordPress core team has been some variation of "that's not a real security issue" and patently shut them down without further consideration. I've searched through the tickets going years back and read ticket after ticket like this. Yet, when someone has valid points as to why they are wrong, and these are legit security issues, no one on the core team seems to want to hear that.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;The Long Version&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;I know you mean well when you tell me that my previous response is likely to go unread, but do you realize exactly how exasperating that is when you put in context?&lt;/strong&gt; Let me break it down:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Previous users report the security issue.
&lt;/li&gt;&lt;li&gt;WordPress core team responds, saying "That's not a real security issue," and closes the thread.
&lt;/li&gt;&lt;li&gt;3 years go by.
&lt;/li&gt;&lt;li&gt;During that time, WordPress sites get hacked many, many times, and security flaws are starting to be discovered in WordPress at a rapid pace, getting to the point where every version has some vulnerability discovered within a month or two of release.
&lt;/li&gt;&lt;li&gt;I reopen the thread, saying, "Hey guys, &lt;span class="underline"&gt;it's a real, honest-to-goodness security issue&lt;/span&gt;, WordPress has been hacked a bunch of times...take it serious now, yeah?"
&lt;/li&gt;&lt;li&gt;WordPress core team member ( @chriscct7 ) gives the familiar response, "That's not a real security issue," and again closes the thread.
&lt;/li&gt;&lt;li&gt;I respond, showing why it &lt;span class="underline"&gt;actually is a real security issue.&lt;/span&gt; Since the previous responder from the core team does not understand the security implications of the particular issue, it required education and a long response.
&lt;/li&gt;&lt;li&gt;A different WordPress core team member ( @rmccue ) responds saying, "TL;DR, bro. Yeah, we're not gonna read that. We're too busy and stuff."
&lt;/li&gt;&lt;li&gt;Not reading it allows WordPress core team members to stay in the dark and keep telling people that "it's not a real security issue."
&lt;/li&gt;&lt;li&gt;Sites will continue to get hacked.
&lt;/li&gt;&lt;li&gt;The core team will be surprised. "Whoa! How'd that happen? WordPress doesn't have any security issues!"
&lt;/li&gt;&lt;li&gt;Vulnerabilities will only get fixed when reaching critical status and proof of concepts are passed around the web.
&lt;/li&gt;&lt;li&gt;More users will raise the red flag and point out that security best practices are being (willfully?) ignored, and they will keep getting told, "That's not a real security issue."
&lt;/li&gt;&lt;li&gt;And the cycle will continue. "All of this has happened before, and all of this will happen gain."
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
&lt;strong&gt;Does anyone see the problem with that?&lt;/strong&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;It's ok for the core team to tell users they are wrong. (Even when they are not.)
&lt;/li&gt;&lt;li&gt;However, if we take the time and effort to show that in fact you guys do have a thing or two to learn, we get the response that we should write shorter responses, and that you all are too busy for that.
&lt;/li&gt;&lt;li&gt;&lt;strong&gt;So...my time is less valuable than yours? SMH.&lt;/strong&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Don't you think proper website security is worth a few minutes of time when the code you write impacts over 25% of the internet, and when the potential impact of hacked websites can destroy people's lives and businesses.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;The previous response from WordPress core team members demonstrated a severe lack of understanding of security issues and required a fairly long response.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
You guys have not been good at anticipating potential hacks because you all have been failing to see where seemingly small or peripheral issues fit into the big picture of security as a whole. &lt;strong&gt;Security isn't binary, it's not on or off, it's not black or white. Security exists in shades of gray, it's in percentages, it's about leveraging small cracks in the armor, and hackers understand this.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Many of us who are pointing out these issues can anticipate potential hacks because WordPress is blatantly ignoring certain security best-practices. Yet yet you guys still have the hubris to keep shutting us down and telling us "that's not a real security issue". (I really don't enjoy having to say that because I truly do love WordPress, the WordPress community, and I consider every fellow WordPress developer a friend.)
&lt;/p&gt;
&lt;p&gt;
My comments are worth taking the time to read as they will open some eyes a bit. I was careful to make sure that everything I wrote is backed up by data, and quotes respected resources. Every single point I made can be verified independently. Top security researchers, experts, the NSA, etc will echo what I said.
&lt;/p&gt;
&lt;p&gt;
I took &lt;em&gt;several hours&lt;/em&gt; of my life to write it...people can take a &lt;em&gt;few minutes&lt;/em&gt; out of their life to read what I wrote.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;I didn't spend all time to write it for fun, or for my health...I took the time to write it because it's a serious issue, and it needed to be said. Trust me...that was the succinct version.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
I've been doing this a long time, and have extensive experience when it comes to security. You would do well to consider my points.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36217 (WP_Post_Type class) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 12 Apr 2016 09:28:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36217#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36217#comment:12/1460453291762194</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36217/36217.3.diff" title="Attachment '36217.3.diff' in Ticket #36217"&gt;36217.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36217/36217.3.diff" title="Download"&gt;â€‹&lt;/a&gt; separates the post type object logic from the additional steps that are performed when registering the post type. There are two new methods &lt;code&gt;_register()&lt;/code&gt; and &lt;code&gt;_unregister()&lt;/code&gt; for that which are called from &lt;code&gt;register_post_type()&lt;/code&gt; and &lt;code&gt;unregister_post_type()&lt;/code&gt; (contrary to my above post I thought it was better to put these steps into the class as well, just separated). Maybe these should set some kind of flag so that they are not executed more than once.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36217.3.diff attached to Ticket #36217</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 12 Apr 2016 09:24:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36217/36217.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36217/36217.3.diff/1460453098340905</guid>
      <description>&lt;p&gt;
Separated object logic from additional logic (methods to register and unregister)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36358 (Return of _wp_json_prepare_data() in wp_json_encode() should be used.) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Tue, 12 Apr 2016 08:03:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36358#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36358#comment:7/1460448189843536</guid>
      <description>&lt;p&gt;
@rmccue @rachelbaker Thank you both for your response. Glad to see this will make it in soon.
&lt;/p&gt;
&lt;p&gt;
Just putting it out there: should this also be ported to 4.5.1 (and maybe 4.4.3) ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28449 (Prevent widows) updated</title>
      
        <dc:creator>dcondrey</dc:creator>

      <pubDate>Tue, 12 Apr 2016 07:38:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28449#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28449#comment:7/1460446713343284</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33055 (Support Parallel HTTP Requests in WP_Http, et al) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 12 Apr 2016 07:29:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33055#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33055#comment:20/1460446198404239</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33055#comment:19" title="Comment 19"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Some random thoughts about &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/33055/33055.2.diff" title="Attachment '33055.2.diff' in Ticket #33055"&gt;33055.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/33055/33055.2.diff" title="Download"&gt;â€‹&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Requests uses &lt;code&gt;spl_autoload_register()&lt;/code&gt; so we have to provide a fallback in case SPL is disabled.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36335" title="#36335: feature request: Next generation: core autoloader proposal (new)"&gt;#36335&lt;/a&gt;; I want to add a shim as part of that ticket, which would handle it nicely. If that doesn't ship, should be easy enough to do.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;WP_Requests_Hooks&lt;/code&gt; needs some whitespace love. Is it part of Request or WP? Asking because of the &lt;code&gt;@package&lt;/code&gt; tag and because it's in the root of &lt;code&gt;/wp-includes/&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
WP; I'll correct the whitespacing.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;/wp-includes/requests/Requests/&lt;/code&gt; looks weird. Can we move it up one dir?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
We can, but then &lt;code&gt;Requests.php&lt;/code&gt; needs to live somewhere, and may be a bit harder to update from upstream. I guess if we have to, a &lt;code&gt;class-requests.php&lt;/code&gt;?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;What's the status of &lt;a class="ext-link" href="https://github.com/rmccue/Requests-WPHTTP/issues/1"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/rmccue/Requests-WPHTTP/issues/1&lt;/a&gt;?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
In-progress; &lt;a class="ext-link" href="https://github.com/rmccue/Requests/issues/178"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Requests issue 178&lt;/a&gt; handles the 302, although &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33055#comment:9" title="Comment 9"&gt;9&lt;/a&gt; discusses why we might not want to fix that. I'll round these up this week.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Are they any other tickets which could be marked as fixed as soon as Requests lands? (&lt;a href="https://core.trac.wordpress.org/query?status=!closed&amp;amp;component=HTTP+API"&gt;https://core.trac.wordpress.org/query?status=!closed&amp;amp;component=HTTP+API&lt;/a&gt;)
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Yes. At a glance, the following should be fixed:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13841" title="#13841: defect (bug): Some HTTP Transports do not respect transfer timeouts (closed: invalid)"&gt;#13841&lt;/a&gt; and &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/32932" title="#32932: defect (bug): WP_Http::request hangs on badly behaving servers (new)"&gt;#32932&lt;/a&gt; - Requests checks &lt;a class="ext-link" href="https://github.com/rmccue/Requests/blob/8ce2aff7787ddd63ea4979410b2d88bb50141cba/library/Requests/Transport/fsockopen.php#L238-L241"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;specifically for timeouts&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/17010" title="#17010: defect (bug): Inconsistent handling of HTTP response codes (reviewing)"&gt;#17010&lt;/a&gt; - Requests hides the 100 Continue from the end-user, as it's for internal handling only.
&lt;/li&gt;&lt;li&gt;&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33271" title="#33271: defect (bug): WP_Http streaming should use 'w' mode, not 'w+' (closed: invalid)"&gt;#33271&lt;/a&gt; - Requests uses &lt;code&gt;wb&lt;/code&gt; mode rather than &lt;code&gt;w+&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/34053" title="#34053: defect (bug): HTTP API (Curl backend) inappropriately sends Content-Length header on ... (new)"&gt;#34053&lt;/a&gt; - Pretty sure Requests isn't susceptible to this.
&lt;/li&gt;&lt;li&gt;&lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/34538" title="#34538: enhancement: Improvement of the IPv4 address format check (reviewing)"&gt;#34538&lt;/a&gt; - Requests uses &lt;a class="ext-link" href="https://github.com/rmccue/Requests/blob/8ce2aff7787ddd63ea4979410b2d88bb50141cba/library/Requests/SSL.php#L141-L148"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;ip2long&lt;/a&gt; instead of a regex.
&lt;/li&gt;&lt;li&gt;&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36253" title="#36253: defect (bug): Host header should not include port in WP_Http_Streams (closed: duplicate)"&gt;#36253&lt;/a&gt; - Requests &lt;a class="ext-link" href="https://github.com/rmccue/Requests/blob/8ce2aff7787ddd63ea4979410b2d88bb50141cba/library/Requests/Transport/fsockopen.php#L171-L178"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;handles this differently&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Can we get a refresh of the patch so it could potentially land on day one of 4.6?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Will-do.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;"We can also remove the HTTP tests from the core tests if you'd like, since they're all covered by Requests' tests already. " I wouldn't remove them directly. Let's make sure that our tests are passing too and remove them only when the implementation is finished.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Makes sense.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23394 (Remove version from readme.html / Upgrade core doesn't restore the file) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 12 Apr 2016 06:53:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23394#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23394#comment:16/1460444013686454</guid>
      <description>&lt;p&gt;
@RedSand I don't have a substantial comment to add here, but just to keep in mind: long Trac comments (~5.5k words) are highly likely to go unread, as they're a lot to read through and many of us simply don't have the time unfortunately. Please try and be as succinct as possible in your comments so they're easily digestable. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36484 (Bump Recommended PHP version to PHP 7) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Tue, 12 Apr 2016 06:49:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36484#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36484#comment:7/1460443756649349</guid>
      <description>&lt;p&gt;
+1 and, FWIW, VVV's develop branch is now PHP 7.0. This should be part of the next stable release at the end of May.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36358 (Return of _wp_json_prepare_data() in wp_json_encode() should be used.) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 12 Apr 2016 06:47:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36358#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36358#comment:6/1460443667618960</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Sorry, I had meant to comment here! &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36358/36358-patch1-_wp_json_prepare_data.patch" title="Attachment '36358-patch1-_wp_json_prepare_data.patch' in Ticket #36358"&gt;36358-patch1-_wp_json_prepare_data.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36358/36358-patch1-_wp_json_prepare_data.patch" title="Download"&gt;â€‹&lt;/a&gt; is good-to-go, but needs to wait until we've branched to 4.6.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30594 (New function to network enable a theme) updated</title>
      
        <dc:creator>igmoweb</dc:creator>

      <pubDate>Tue, 12 Apr 2016 06:47:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30594#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30594#comment:15/1460443651978099</guid>
      <description>&lt;p&gt;
Awesome. Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15800 (Adding tabs to the "Edit Site"-pages in Network Admin) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Tue, 12 Apr 2016 06:45:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15800#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15800#comment:27/1460443547210422</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've only had time to give this a read-through, but a general +1 on where things are going. :)
&lt;/p&gt;
&lt;p&gt;
A couple thoughts:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Adding more specific capability checks makes sense. I'd probably prefer to introduce that granularity in another ticket as it will involve accounting for the current &lt;code&gt;manage_sites&lt;/code&gt; capability in a back-compat way.
&lt;/li&gt;&lt;li&gt;I do wonder if &lt;code&gt;network_edit_site_tabs&lt;/code&gt; is the right place to loop through the capabilities. Some of that could instead be handled by plugins as they choose whether or not to add a tab to the filter.
&lt;/li&gt;&lt;li&gt;What would it look like to exclude the core provided tabs from the &lt;code&gt;network_edit_site_tabs&lt;/code&gt; filter? Once more granular capabilities are available, tabs could be hidden on a cap check. This would align more with the result of visiting each of these pages directly.
&lt;/li&gt;&lt;li&gt;I'm not sure about the before/after HTML args for the tab output.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36484 (Bump Recommended PHP version to PHP 7) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 12 Apr 2016 06:45:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36484#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36484#comment:6/1460443535567805</guid>
      <description>&lt;p&gt;
+1, especially given that the PHP team tests PHP against WordPress itself during development. Our experience with migrating to PHP 7 has had ~0 breakage in plugins, apart from warnings on PHP 4-style constructors.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17376 (Multisite Subfolders and bunk /wp-admin areas) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Tue, 12 Apr 2016 06:15:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17376#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17376#comment:30/1460441720633987</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17376#comment:28" title="Comment 28"&gt;jeremyfelt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Agreed. We really need unit tests for this to be sane.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I want to get a testable bootstrap going in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34941" title="#34941: enhancement: Make the main bootstrap process in ms-settings.php testable (closed: fixed)"&gt;#34941&lt;/a&gt;. I think we have a better chance of testing for this bug after that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34941 (Make the main bootstrap process in ms-settings.php testable) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Tue, 12 Apr 2016 06:13:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34941#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34941#comment:8/1460441599798626</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34941/34941.2.diff" title="Attachment '34941.2.diff' in Ticket #34941"&gt;34941.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34941/34941.2.diff" title="Download"&gt;â€‹&lt;/a&gt; is a refresh against trunk and uses &lt;code&gt;wp_setup_current_site_and_blog()&lt;/code&gt; rather than &lt;code&gt;ms_bootstrap()&lt;/code&gt;. I agree that's closer to what the function should be called, not sure if we're there yet.
&lt;/p&gt;
&lt;p&gt;
Tests are still passing. I'll be trying to break this more over the next couple weeks. Would like some testing of this patch for sure. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>34941.2.diff attached to Ticket #34941</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Tue, 12 Apr 2016 06:11:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34941/34941.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34941/34941.2.diff/1460441495704880</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36473 (JavaScript error in theme customizer a specific value of before_widget) updated</title>
      
        <dc:creator>martin.krcho</dc:creator>

      <pubDate>Tue, 12 Apr 2016 06:10:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36473#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36473#comment:2/1460441448426761</guid>
      <description>&lt;p&gt;
@westonruter, the code is available on GitHub here:
&lt;a class="ext-link" href="https://github.com/bonfirelab/bearded/blob/master/library/functions/sidebars.php"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/bonfirelab/bearded/blob/master/library/functions/sidebars.php&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34182 ('allowedthemes' network option never gets primed when themes are deleted) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Tue, 12 Apr 2016 06:05:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34182#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34182#comment:4/1460441125672884</guid>
      <description>&lt;p&gt;
Once &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30594" title="#30594: enhancement: New function to network enable a theme (closed: fixed)"&gt;#30594&lt;/a&gt; is in, we'll have &lt;code&gt;WP_Network::network_disable_theme()&lt;/code&gt; available to us. &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34182/34182.diff" title="Attachment '34182.diff' in Ticket #34182"&gt;34182.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34182/34182.diff" title="Download"&gt;â€‹&lt;/a&gt; implements this in &lt;code&gt;delete_theme()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Unit tests on this might be tough. We don't have anything covering &lt;code&gt;delete_themes()&lt;/code&gt; at the moment.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36477 (Responsive images (srcset) can include images larger than the full size) updated</title>
      
        <dc:creator>peterdavehello</dc:creator>

      <pubDate>Tue, 12 Apr 2016 06:04:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36477#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36477#comment:3/1460441048203498</guid>
      <description>&lt;p&gt;
Hi @joemcgill,
&lt;/p&gt;
&lt;p&gt;
Thanks for your prompt reply in detail, yes, I'm talking about the file size, not the dimensional size, and my basic idea is try to get the size before and after the resize, once the resized images is larger, than we drop that size of image, what do you think?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>34182.diff attached to Ticket #34182</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Tue, 12 Apr 2016 06:03:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34182/34182.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34182/34182.diff/1460441023271614</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #30594 (New function to network enable a theme) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Tue, 12 Apr 2016 05:56:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30594#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30594#comment:14/1460440609716499</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Excellent stuff @igmoweb, thank you.
&lt;/p&gt;
&lt;p&gt;
I've refreshed and adjusted the tests a bit in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/30594/30594.3.diff" title="Attachment '30594.3.diff' in Ticket #30594"&gt;30594.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/30594/30594.3.diff" title="Download"&gt;â€‹&lt;/a&gt; and added an &lt;code&gt;is_multisite()&lt;/code&gt; check to each of the new methods. I think we'll be able to get this in early for 4.6.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>30594.3.diff attached to Ticket #30594</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Tue, 12 Apr 2016 05:53:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/30594/30594.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/30594/30594.3.diff/1460440388082744</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35658 (Provide additional data for registered meta through register_meta()) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Tue, 12 Apr 2016 04:19:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35658#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35658#comment:29/1460434786789786</guid>
      <description>&lt;p&gt;
@ericlewis great progress! &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35658/35658.3.diff" title="Attachment '35658.3.diff' in Ticket #35658"&gt;35658.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35658/35658.3.diff" title="Download"&gt;â€‹&lt;/a&gt; is looking :thumbsup:
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35658#comment:26" title="Comment 26"&gt;ericlewis&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Would y'all be into working on this in a git branch off of &lt;a class="ext-link" href="https://github.com/aaronjorbin/develop.wordpress/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Aaron's repo&lt;/a&gt;?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1, that would be a nice place to iterate.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21788 (Relocate revoke_super_admin() and grant_super_admin() to capabilities.php) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Tue, 12 Apr 2016 04:16:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21788#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21788#comment:13/1460434570161178</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21788#comment:12" title="Comment 12"&gt;johnjamesjacoby&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
These functions conveniently use the &lt;code&gt;_site_option()&lt;/code&gt; functions, which technically do work on single-site, so I don't know that adding &lt;code&gt;is_multisite()&lt;/code&gt; is necessary necessary, but I suppose probably wise.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, it seems like a good idea to move the functions first before thinking about whether support for grant/revoke should be added to single site.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36484 (Bump Recommended PHP version to PHP 7) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Tue, 12 Apr 2016 03:53:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36484#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36484#comment:5/1460433191475354</guid>
      <description>&lt;p&gt;
On the &lt;code&gt;Tests_External_HTTP_Basis&lt;/code&gt; test, that's only for when we &lt;em&gt;must&lt;/em&gt; updated the recommended version, there's no problem with updating it earlier.
&lt;/p&gt;
&lt;p&gt;
While Core hasn't had any PHP 7 problems, are there any plugins with issues? The recommended PHP version should probably take the entire ecosystem into account.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35658 (Provide additional data for registered meta through register_meta()) updated</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Tue, 12 Apr 2016 03:24:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35658#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35658#comment:28/1460431473585215</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35658/35658.3.diff" title="Attachment '35658.3.diff' in Ticket #35658"&gt;attachment:35658.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35658/35658.3.diff" title="Download"&gt;â€‹&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Create &lt;code&gt;schema&lt;/code&gt; element in the &lt;code&gt;register_meta()&lt;/code&gt; options array, which is a full schema definition of the meta field. Drop &lt;code&gt;description&lt;/code&gt; and &lt;code&gt;type&lt;/code&gt; as both of these should be expressed in the schema.
&lt;/li&gt;&lt;li&gt;Make &lt;code&gt;register_meta()&lt;/code&gt; return true or WP_Error, bubbling up errors from &lt;code&gt;WP_Meta_Manager-&amp;gt;register()&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Make the registry work for taxonomies, comments and users.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>35658.3.diff attached to Ticket #35658</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Tue, 12 Apr 2016 03:24:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35658/35658.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35658/35658.3.diff/1460431452141937</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35557 (grunt precommit should run phpunit tests) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Tue, 12 Apr 2016 01:45:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35557#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35557#comment:31/1460425526381875</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35557#comment:30" title="Comment 30"&gt;jorbin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@netweb Can you create a new ticket?  As this one was closed for 4.5, we will want a new one to follow up and improve things in 4.6
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Done, added in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36488" title="#36488: defect (bug): Fix Grunt `precommit` task (closed: fixed)"&gt;#36488&lt;/a&gt; &amp;amp; &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36489" title="#36489: enhancement: Optimize Grunt `prerelease` task (closed: fixed)"&gt;#36489&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36490.diff attached to Ticket #36490</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Tue, 12 Apr 2016 01:44:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36490/36490.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36490/36490.diff/1460425464216352</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36490 (Travis CI cached NPM module maintenance) created</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Tue, 12 Apr 2016 01:44:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36490</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36490/1460425455137849</guid>
      <description>&lt;p&gt;
Previously in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36291" title="#36291: enhancement: Travis CI: Improve job performance by caching `node_modules` folder (closed: fixed)"&gt;#36291&lt;/a&gt; via &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37058" title="Travis CI: Allow to cache the node_modules directory.
This should ..."&gt;r37058&lt;/a&gt; caching NPM modules in Travis CI was added.
&lt;/p&gt;
&lt;p&gt;
Caching modules in Travis CI the cache needs to be maintained so it doesn't grow exponentially with each new, updated, or removed NPM module.
&lt;/p&gt;
&lt;p&gt;
Including &lt;code&gt;npm prune&lt;/code&gt; facilitates this by only caching the current modules installed by &lt;code&gt;npm install&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>36489.diff attached to Ticket #36489</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Tue, 12 Apr 2016 01:43:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36489/36489.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36489/36489.diff/1460425435216381</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36489 (Optimize Grunt `prerelease` task) created</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Tue, 12 Apr 2016 01:43:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36489</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36489/1460425425042865</guid>
      <description>&lt;p&gt;
Previously in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35557" title="#35557: task (blessed): grunt precommit should run phpunit tests (closed: fixed)"&gt;#35557&lt;/a&gt; via &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36930" title="Add grunt prerelease task
An unintended consequence of improving the ..."&gt;r36930&lt;/a&gt; the task &lt;code&gt;grunt prerelease&lt;/code&gt; was added.
&lt;/p&gt;
&lt;p&gt;
Currently this task runs &lt;code&gt;grunt build&lt;/code&gt; twice once when called in the task list as &lt;code&gt;build&lt;/code&gt; and the other via the &lt;code&gt;precommit:js&lt;/code&gt; task, which calls the &lt;code&gt;qunit:compiled&lt;/code&gt; task in which &lt;code&gt;build&lt;/code&gt; is a task of that task.
&lt;/p&gt;
&lt;p&gt;
Removing the extra &lt;code&gt;build&lt;/code&gt; task from the &lt;code&gt;prerelease&lt;/code&gt; saves time by not running &lt;code&gt;grunt build&lt;/code&gt; twice.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>36488.diff attached to Ticket #36488</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Tue, 12 Apr 2016 01:43:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36488/36488.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36488/36488.diff/1460425410847709</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36488 (Fix Grunt `precommit` task) created</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Tue, 12 Apr 2016 01:43:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36488</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36488/1460425383547932</guid>
      <description>&lt;p&gt;
Previously in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35557" title="#35557: task (blessed): grunt precommit should run phpunit tests (closed: fixed)"&gt;#35557&lt;/a&gt; via &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36906" title="Improve grunt precommit task
Instead of running all tasks, all the ..."&gt;r36906&lt;/a&gt; the task &lt;code&gt;grunt precommit&lt;/code&gt; was added.
&lt;/p&gt;
&lt;p&gt;
A minor issue in the original patch mistakenly called &lt;code&gt;postcss:core&lt;/code&gt; for the &lt;code&gt;precommit&lt;/code&gt; task.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;precommit&lt;/code&gt; task CSS sub task should call the &lt;code&gt;precommit:css&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
FYI: The &lt;code&gt;postcss:core&lt;/code&gt; task only calls &lt;code&gt;precommit:css&lt;/code&gt; anyway, so it's not broken per se, but it's not inline with the purpose of the original patch and should be fixed to operate in the same fashion as the other &lt;code&gt;precommit&lt;/code&gt; sub tasks.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36487 (Hierarchical comments do not display on second call of comments_template) created</title>
      
        <dc:creator>cookiesowns</dc:creator>

      <pubDate>Tue, 12 Apr 2016 00:56:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36487</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36487/1460422589500205</guid>
      <description>&lt;p&gt;
If you attempt to use comments_template more than once on a page, it will break rendering of Hierarchical comments on the second or more calls.
&lt;/p&gt;
&lt;p&gt;
It appears to be a bug related to class-wp-comment-query-&amp;gt;get_comment_ids()'s caching.
&lt;/p&gt;
&lt;p&gt;
As get_comment_ids() also populates the clauses such as the where clauses... for the comment query which fill_descendants() require.
&lt;/p&gt;
&lt;p&gt;
It also spits out SQL errors:
&lt;/p&gt;
&lt;pre class="wiki"&gt;WordPress database error You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE  AND comment_parent IN (1,4,5)  ORDER BY comment_date_gmt ASC, comment_ID ' at line 1 for query   WHERE  AND comment_parent IN (1,4,5)  ORDER BY comment_date_gmt ASC, comment_ID ASC made by require('C:\wamp\www\wordpress-test\wp-blog-header.php'), require_once('C:\wamp\www\wordpress-test\wp-includes\template-loader.php'), include('C:\wamp\www\wordpress-test\wp-content\themes\twentysixteen\single.php'), comments_template, WP_Comment_Query-&amp;gt;__construct, WP_Comment_Query-&amp;gt;query, WP_Comment_Query-&amp;gt;get_comments, WP_Comment_Query-&amp;gt;fill_descendants
&lt;/pre&gt;&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$comment_ids&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wp_cache_get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$cache_key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'comment'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nv"&gt;$comment_ids&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$comment_ids&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get_comment_ids&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nx"&gt;wp_cache_add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$cache_key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$comment_ids&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'comment'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;fill_descendants&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$comments&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="o"&gt;.....&lt;/span&gt;
&lt;span class="nv"&gt;$_where&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;filtered_where_clause&lt;/span&gt;
&lt;span class="o"&gt;....&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
This is easily reproducible on a clean WP 4.4.2 install. Simply output comments_template() more than once on a page that has comments in place, and add some Hierarchical comments.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21788 (Relocate revoke_super_admin() and grant_super_admin() to capabilities.php) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Tue, 12 Apr 2016 00:51:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21788#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21788#comment:12/1460422315399640</guid>
      <description>&lt;p&gt;
Nice! Interesting catch with the &lt;code&gt;is_multisite()&lt;/code&gt; additions.
&lt;/p&gt;
&lt;p&gt;
These functions conveniently use the &lt;code&gt;_site_option()&lt;/code&gt; functions, which technically do work on single-site, so I don't know that adding &lt;code&gt;is_multisite()&lt;/code&gt; is necessary necessary, but I suppose probably wise.
&lt;/p&gt;
&lt;p&gt;
Patch applies cleanly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21788 (Relocate revoke_super_admin() and grant_super_admin() to capabilities.php) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Tue, 12 Apr 2016 00:39:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21788#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21788#comment:11/1460421575301619</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/21788/21788.diff" title="Attachment '21788.diff' in Ticket #21788"&gt;21788.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/21788/21788.diff" title="Download"&gt;â€‹&lt;/a&gt; is a refresh against current trunk. It also adds an &lt;code&gt;is_multisite()&lt;/code&gt; check to immediately bail if used for single site.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>21788.diff attached to Ticket #21788</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Tue, 12 Apr 2016 00:37:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21788/21788.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21788/21788.diff/1460421449669739</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36477 (Responsive images (srcset) can include images larger than the full size) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Tue, 12 Apr 2016 00:08:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36477#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36477#comment:2/1460419710721614</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @peterdavehello,
&lt;/p&gt;
&lt;p&gt;
Welcome to the Trac, and thank you for the report.
&lt;/p&gt;
&lt;p&gt;
I assume that your are referring to the file size (KB) of the images and not the dimensional size of the images (width x height). In which case, you are correct. Resizing an indexed color image like a PNG or GIF to a smaller size can oftentimes increase the overall file size because of the way the resampling process works (see: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/30402" title="#30402: defect (bug): WordPress does not respect the bit-depth of the original image when ... (new)"&gt;#30402&lt;/a&gt;). This is not an uncommon result among other image editors as well, but is most noticeable in use cases where the source image has gone through an optimization process before being uploaded.
&lt;/p&gt;
&lt;p&gt;
The default image compression improvements that will be included in WordPress 4.5 (see: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33642" title="#33642: task (blessed): Improve default Imagick compression settings (closed: fixed)"&gt;#33642&lt;/a&gt;) help with this problem, but the smaller images can still be larger than the full size images at times. However, for users who aren't optimizing their images before uploading (a majority of users, I suspect), using &lt;code&gt;srcset&lt;/code&gt; and &lt;code&gt;sizes&lt;/code&gt; often results in a significant reduction in file size, so we
&lt;/p&gt;
&lt;p&gt;
Since WordPress has no awareness of the file size of each image when it is writing the image markup, I'm not sure what we can do to avoid this situation entirely, except to continue to make improvements on the default compression strategy for indexed color images.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36358 (Return of _wp_json_prepare_data() in wp_json_encode() should be used.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 11 Apr 2016 23:48:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36358#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36358#comment:5/1460418518297935</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by rachelbaker. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1460418514002058"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14808 (Add Editor Documentation Functions URL for theme-defined functions) updated</title>
      
        <dc:creator>exthilion</dc:creator>

      <pubDate>Mon, 11 Apr 2016 23:40:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14808#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14808#comment:8/1460418054605741</guid>
      <description>&lt;p&gt;
I'm new to submitting patches here, so please forgive me if this isn't the right way to approach this.
Per the patch above by @GaryJ
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'file_editor_documentation_url'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'child_documentation_url'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="sd"&gt;/**
 * Filter the function documentation URL in theme editor.
 *
 * @param string $url a default url if $provider doesn't provide a custom url
 * @param string $provider Name of the theme or plugin
 * @param string $file full path of the file being edited
 * @return string
 */&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;child_documentation_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$provider&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$file&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Check if $provider is handled by this filter. If not, use default.
&lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'My Awesome Theme or Plugin'&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nv"&gt;$provider&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$url&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="c1"&gt;// Provide some kind of logic here to generate correct documentation url for $file.
&lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;'http://my.example.com/?theme= '&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$provider&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'&amp;amp;function='&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Seems like a trivial change, but I am also unsure of what @swissspidy means by proper docs.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>filter.diff attached to Ticket #14808</title>
      
        <dc:creator>exthilion</dc:creator>

      <pubDate>Mon, 11 Apr 2016 23:38:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14808/filter.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14808/filter.diff/1460417928447463</guid>
      <description>&lt;p&gt;
Apply @GaryJ's original patch to theme and plugin editor
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36477 (Responsive images (srcset) can include images larger than the full size) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Mon, 11 Apr 2016 23:27:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36477#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36477#comment:1/1460417228997752</guid>
      <description>&lt;p&gt;
The owner of this website (cdn2.peterdavehello.org) does not allow hotlinking to that resource (/wp-content/uploads/2016/04/status.png).
&lt;/p&gt;
&lt;p&gt;
with http instead of https it works
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36468 (Error in docs of get_home_url() and home_url()) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Mon, 11 Apr 2016 23:17:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36468#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36468#comment:3/1460416633621314</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35658 (Provide additional data for registered meta through register_meta()) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 11 Apr 2016 23:13:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35658#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35658#comment:27/1460416418841860</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by eric. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1460416416001975"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34999 (Calling wp_die() in a REST API request should return valid JSON) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 11 Apr 2016 23:10:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34999#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34999#comment:7/1460416226111596</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by rmccue. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1460416224001970"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35658 (Provide additional data for registered meta through register_meta()) updated</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Mon, 11 Apr 2016 22:54:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35658#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35658#comment:26/1460415255171912</guid>
      <description>&lt;p&gt;
Would y'all be into working on this in a git branch off of &lt;a class="ext-link" href="https://github.com/aaronjorbin/develop.wordpress/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Aaron's repo&lt;/a&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35658 (Provide additional data for registered meta through register_meta()) updated</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Mon, 11 Apr 2016 22:45:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35658#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35658#comment:25/1460414736302835</guid>
      <description>&lt;p&gt;
@jeremyfelt thank you for starting the fire here.
&lt;/p&gt;
&lt;p&gt;
I have some ideas in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35658/35658.2.diff" title="Attachment '35658.2.diff' in Ticket #35658"&gt;attachment:35658.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35658/35658.2.diff" title="Download"&gt;â€‹&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Let's introduce something like &lt;code&gt;class WP_Meta_Manager&lt;/code&gt; to store state of what is registered and what isn't. This guards us from developers accessing (and modifying) public global arrays.
&lt;/li&gt;&lt;li&gt;I've moved the business logic of some registry-related functions into it, and left the global functions as wrappers for them (&lt;code&gt;registered_meta_key_exists()&lt;/code&gt; and &lt;code&gt;unregister_meta_key()&lt;/code&gt;)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Follow-up thoughts:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Should the JSON data type value represent the entire JSON schema type attributes (items, properties, etc.) a la
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;register_meta_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s1"&gt;'review'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'post'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="s1"&gt;'json_data_type'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                        &lt;span class="s1"&gt;'type'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'array'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="s1"&gt;'items'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                                &lt;span class="s1"&gt;'type'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'array'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="s1"&gt;'items'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                                        &lt;span class="s1"&gt;'type'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'object'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                        &lt;span class="s1"&gt;'properties'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                                                &lt;span class="s1"&gt;'reviewer_name'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                                                        &lt;span class="s1"&gt;'type'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'string'&lt;/span&gt;
                                                &lt;span class="p"&gt;),&lt;/span&gt;
                                                &lt;span class="s1"&gt;'review'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                                                        &lt;span class="s1"&gt;'type'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'string'&lt;/span&gt;
                                                &lt;span class="p"&gt;)&lt;/span&gt;
                                        &lt;span class="p"&gt;)&lt;/span&gt;
                                &lt;span class="p"&gt;)&lt;/span&gt;
                        &lt;span class="p"&gt;),&lt;/span&gt;
                        &lt;span class="c1"&gt;// No minimum or maximum.
&lt;/span&gt;                        &lt;span class="c1"&gt;// 'minItems' =&amp;gt; 0,
&lt;/span&gt;                        &lt;span class="c1"&gt;// 'maxItems' =&amp;gt; 0
&lt;/span&gt;                &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>vars.php.patch attached to Ticket #36486</title>
      
        <dc:creator>amandato</dc:creator>

      <pubDate>Mon, 11 Apr 2016 22:43:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36486/vars.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36486/vars.php.patch/1460414607294425</guid>
      <description>&lt;p&gt;
Patch for this ticket from WinMerge (let me know if you need a different patch format)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36486 (is_apache in vars.php does not always work) created</title>
      
        <dc:creator>amandato</dc:creator>

      <pubDate>Mon, 11 Apr 2016 22:42:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36486</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36486/1460414530841170</guid>
      <description>&lt;p&gt;
The $is_apache variable does not always work when using an Apache module like security2_module with the SecServerSignature option. By removing the word "Apache" from the name of the server vars.php will no longer detect that the server is Apache.
&lt;/p&gt;
&lt;table class="wiki"&gt;
&lt;tr&gt;A simple solution is to add an addition check: &lt;td&gt; function_exists('apache_get_version')!== false
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;
Any Apache only function will work.
&lt;/p&gt;
&lt;p&gt;
See attached patch from WP 4.4.2
&lt;/p&gt;
&lt;p&gt;
I discovered this caused issues with the RewriteRules, randomly WordPress would add index.php/ within the permalinks when editing the permalink options in the wp-admin.
&lt;/p&gt;
&lt;p&gt;
Not sure if this should be called a bug or an enhancement, leave it up to core team to decide that.
&lt;/p&gt;
&lt;p&gt;
I would not remove the first 2 checks though, it is possible that the apache_get_version is disabled in the php.ini. I would recommend adding the option to the current checks just to be 100% sure.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>35658.2.diff attached to Ticket #35658</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Mon, 11 Apr 2016 22:37:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35658/35658.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35658/35658.2.diff/1460414223013919</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36483 (Inline image replacement in Post Editor does not replace image) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 11 Apr 2016 22:22:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36483#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36483#comment:5/1460413343928058</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36483#comment:4" title="Comment 4"&gt;Ipstenu&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Thanks, yeah, can see it now.
&lt;/p&gt;
&lt;p&gt;
A new bug is that the right sidebar (image info and settings) doesn't get refreshed/cleared out after deleting an image. Seems caused by the Backbone update as far as I see.
&lt;/p&gt;
&lt;p&gt;
The image not refreshing after replacing it is tougher. Was able to reproduce in 4.4 too, but less frequently. Seems the browsers "hold onto" the image in the editor despite that it is no longer on the server. Can happen more reliably after deleting an image, no need to replace. Steps:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Open the media modal, upload an image and insert it in a post.
&lt;/li&gt;&lt;li&gt;Edit the image, and delete it permanently.
&lt;/li&gt;&lt;li&gt;Close the modal by clicking outside or on the top/right close button.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
At this point the image is displayed in the editor. After switching to the Text editor and back (i.e. forcing TinyMCE to reload the post content) the image is still displayed, although it is not on the server any more. Only after saving a draft/reloading the page the image will be displayed as missing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36473 (JavaScript error in theme customizer a specific value of before_widget) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 11 Apr 2016 22:18:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36473#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36473#comment:1/1460413103240970</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The code for &lt;code&gt;buildWidgetSelectors&lt;/code&gt; has been in place since 3.9.
&lt;/p&gt;
&lt;p&gt;
@martin.krcho could you please share the &lt;code&gt;register_sidebar()&lt;/code&gt; calls that the theme has?
&lt;/p&gt;
&lt;p&gt;
You're right that a problem here is that &lt;code&gt;String.replace()&lt;/code&gt; will only replace the first instance if the replacement arg is a string instead of a regular expression. So changing the pattern it to be a regular expression instead of string should do it, but I want to see how the sidebars are registered to see what is going on.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36485 (Lost pending customizer settings after theme change) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 11 Apr 2016 22:14:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36485#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36485#comment:5/1460412879988654</guid>
      <description>&lt;p&gt;
The theme switcher uses the &lt;code&gt;customize-loader&lt;/code&gt; script, which gives the illusion that there is no page load. However, what really happens is we fade in a full-screen loading indicator while waiting for a response from the serve to navigate to the new URL. However, when there are dirty settings, it has to &lt;code&gt;confirm()&lt;/code&gt; (?) first. There isn't (or wasn't, at least) to know when a true/false value is returned from the confirm call, so we have to hide the loading indicator as soon as the confirm window is closed so that the user isn't stuck with a loading indicator preventing them from getting "back" to the customizer so that they can save there changes. When you do chose to lose changes, it still hides the loader, giving the impression of it hanging when really it's just doing the same thing it does when there are no dirty settings, but without the loading indicator.
&lt;/p&gt;
&lt;p&gt;
Not a great UX, so hopefully we'll be able to improve on it at some point.
&lt;/p&gt;
&lt;p&gt;
(to clarify, "stay on this page" is the previous theme, where settings are dirty; "leave" is go to the new theme, since you don't actually trigger the link until it's the last )
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36485 (Lost pending customizer settings after theme change) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Mon, 11 Apr 2016 22:12:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36485#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36485#comment:4/1460412721265661</guid>
      <description>&lt;p&gt;
The biggest trouble here is clicking on "Stay on this page" doesn't go back to where the user was previously, and just hangs.
&lt;/p&gt;
&lt;p&gt;
If it's by design, then thinking we should warn the user and allow canceling the choice (or at least fix this issue where clicking "stay" does not "go/hang".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36485 (Lost pending customizer settings after theme change) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 11 Apr 2016 22:07:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36485#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36485#comment:3/1460412473438098</guid>
      <description>&lt;p&gt;
@celloexpressions yes the loss of dirty settings is expected. However, what about the hanging behavior? I haven't experienced that before.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36485 (Lost pending customizer settings after theme change) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 11 Apr 2016 21:34:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36485#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36485#comment:2/1460410462563974</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is unfortunately expected behavior. Users need to save their changes before switching themes, and because a theme switch does in fact do a page load, if they "leave" by switching themes they'll lose their changes. I believe that customizer transactions and the ability to have draft changes could eventually lead to a better solution here, although the page load when switching themes would be very difficult to eliminate.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36485 (Lost pending customizer settings after theme change) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Mon, 11 Apr 2016 21:05:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36485#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36485#comment:1/1460408704465831</guid>
      <description>&lt;p&gt;
This is a problem in WordPress 4.4.2 (so not a regression in 4.5).
I haven't dug back to find out if it's been a problem since theme switching.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Customizer Loses Settings.mp4 attached to Ticket #36485</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Mon, 11 Apr 2016 21:03:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36485/Customizer%20Loses%20Settings.mp4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36485/Customizer%20Loses%20Settings.mp4/1460408607056009</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36485 (Lost pending customizer settings after theme change) created</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Mon, 11 Apr 2016 21:03:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36485</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36485/1460408593608692</guid>
      <description>&lt;p&gt;
If you make a change in the customizer, don't publish the change, then choose a different theme, your browser prompts you as to whether you want to leave the current page or not.
&lt;/p&gt;
&lt;p&gt;
If you say no, the customizer hangs.
If you say yes, you lose your settings.
&lt;/p&gt;
&lt;p&gt;
Video example to be attached shortly.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35658 (Provide additional data for registered meta through register_meta()) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 11 Apr 2016 20:04:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35658#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35658#comment:24/1460405092228822</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core-fields by eric. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-fields/p1460405089000448"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36474 (Revamp meta boxes) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 11 Apr 2016 19:51:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36474#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36474#comment:6/1460404274180962</guid>
      <description>&lt;p&gt;
Would love to see some improvement here.
&lt;/p&gt;
&lt;p&gt;
Two concerns I have with the initial accordion-style mockup:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Requires more clicks to open each section rather than being able to select a category, format, enter tags, etc. quickly. Does it make sense to condense it by default on larger screens where having these all available is less of an issue? On mobile, something like this would be fantastic. Regadless of the direction taken, it wouldn't work to allow some to be open by default and others closed. Consistency is key here so we'd need to live with the consequences of that decision. Items under the editor (main column) presumably wouldn't collapse by default.
&lt;/li&gt;&lt;li&gt;There are several issues with accordion UIs, and the Customizer ended up moving away from them as a result (and also Press This I believe). Might it make sense to reuse an existing UI in core, such as the sliding panels in the Customizer, rather than moving in an entirely new direction (although &lt;code&gt;accordion.js&lt;/code&gt; is a thing)?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36481 (Emoji script is loaded even if emoji not available?) updated</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Mon, 11 Apr 2016 19:16:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36481#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36481#comment:3/1460402214929095</guid>
      <description>&lt;p&gt;
I tried to insert many different emojis inside post content and they were never saved in database and displayed on website. Is there any specific example which I could test?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37177]: Post 4.5-RC3 version bump.</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Mon, 11 Apr 2016 19:12:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37177</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37177/1460401959200853</guid>
      <description>&lt;p&gt;
Post 4.5-RC3 version bump.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36217 (WP_Post_Type class) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 11 Apr 2016 18:48:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36217#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36217#comment:11/1460400492266657</guid>
      <description>&lt;p&gt;
Maybe we should consider to handle everything that doesn't modify the post type object itself outside of the class and leave it in &lt;code&gt;register_post_type()&lt;/code&gt;. Right now, some steps (like adding rewrite rules) happen in the &lt;code&gt;WP_Post_Type&lt;/code&gt; constructor while others (&lt;code&gt;_future_post_hook&lt;/code&gt;, registering taxonomies) remain in &lt;code&gt;register_post_type&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This would mean that the &lt;code&gt;WP_Post_Type&lt;/code&gt; constructor only handles all its properties, while additional steps (like adding rewrite rules, query var etc would remain in &lt;code&gt;register_post_type()&lt;/code&gt; (the &lt;code&gt;WP_Post_Type&lt;/code&gt; class then wouldn't need to access &lt;code&gt;$wp&lt;/code&gt; and &lt;code&gt;$wp_rewrite&lt;/code&gt; for example). I actually like this approach a little more as &lt;code&gt;WP_Post_Type&lt;/code&gt; would then only take care of itself and represent a post type, so if someone manually created an instance of the class, it wouldn't add any rewrite rules or cause other inconsistencies. And we also could possibly allow to insert this object directly into &lt;code&gt;register_post_type()&lt;/code&gt; as a parameter at a later stage.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19629 (return option for media_sideload_image) updated</title>
      
        <dc:creator>whyisjake</dc:creator>

      <pubDate>Mon, 11 Apr 2016 18:38:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19629#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19629#comment:25/1460399920524798</guid>
      <description>&lt;p&gt;
Any updates on this? Would be handy to return the ID...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>media-sideload.diff attached to Ticket #19629</title>
      
        <dc:creator>whyisjake</dc:creator>

      <pubDate>Mon, 11 Apr 2016 18:38:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19629/media-sideload.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19629/media-sideload.diff/1460399890634010</guid>
      <description>&lt;p&gt;
Media sideload, return the post ID
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Changeset [37176]: 4.5-RC3</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Mon, 11 Apr 2016 18:30:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37176</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37176/1460399445671123</guid>
      <description>&lt;p&gt;
4.5-RC3
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36484 (Bump Recommended PHP version to PHP 7) updated</title>
      
        <dc:creator>blobaugh</dc:creator>

      <pubDate>Mon, 11 Apr 2016 18:27:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36484#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36484#comment:4/1460399237615162</guid>
      <description>&lt;p&gt;
I like it! I have not run into any issues with PHP 7 in a few months. Was running a beta before that had issues that seem to be ironed out.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36483 (Inline image replacement in Post Editor does not replace image) updated</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Mon, 11 Apr 2016 18:24:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36483#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36483#comment:4/1460399084848680</guid>
      <description>&lt;p&gt;
I gave the unclear directions
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol start="3"&gt;&lt;li&gt;Click to REPLACE image
&lt;/li&gt;&lt;li&gt;Click 'Edit Original'
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
So on the post editor, click the pencil and then press the box to replace the image, not edit.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://cloudup.com/cLAG65T_A3h"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://cloudup.com/cLAG65T_A3h&lt;/a&gt;
&lt;/p&gt;
&lt;ol start="3"&gt;&lt;li&gt;Click to edit the image
&lt;/li&gt;&lt;li&gt;Press REPLACE button
&lt;/li&gt;&lt;/ol&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
Another question: if the image is deleted in step 5, and another image with the same name is uploaded, and the old one is shown in the editor, where the old one comes from?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The replacement window. Drag/drop the new image with the old image name.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35698 (Distinguish between regular (site) options and network options in ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 11 Apr 2016 18:13:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35698#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35698#comment:11/1460398410686979</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by flixos90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1460398407000084"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35379 (update_network_option changes stored option value if sanitize_option ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 11 Apr 2016 18:13:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35379#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35379#comment:8/1460398410128426</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by flixos90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1460398407000084"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35698 (Distinguish between regular (site) options and network options in ...) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 11 Apr 2016 17:57:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35698#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35698#comment:10/1460397437465349</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35698/35698.2.diff" title="Attachment '35698.2.diff' in Ticket #35698"&gt;35698.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35698/35698.2.diff" title="Download"&gt;â€‹&lt;/a&gt; is an updated patch with the &lt;code&gt;sanitize_site_option_{$option}&lt;/code&gt; filter added, renamed &lt;code&gt;$scope&lt;/code&gt; to &lt;code&gt;$context&lt;/code&gt; and updated docs.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35698.2.diff attached to Ticket #35698</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 11 Apr 2016 17:55:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35698/35698.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35698/35698.2.diff/1460397320128611</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36173 (4.5 About Page) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 11 Apr 2016 17:51:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36173#comment:61</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36173#comment:61/1460397062557916</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by jorbin. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1460397060004851"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36173 (4.5 About Page) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 11 Apr 2016 17:45:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36173#comment:60</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36173#comment:60/1460396717907162</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37175" title="About Page: Use `srcset` and the w.org CDN for images.
Also, flip the ..."&gt;37175&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
About Page: Use &lt;code&gt;srcset&lt;/code&gt; and the w.org CDN for images.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also, flip the "Selective Refresh" and "Smart Image Resizing" section and remove script enqueues which are no longer used.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props joemcgill, melchoyce, ocean90.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36173" title="#36173: task (blessed): 4.5 About Page (closed: fixed)"&gt;#36173&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37175]: About Page: Use `srcset` and the w.org CDN for images.  Also, flip the ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 11 Apr 2016 17:45:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37175</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37175/1460396717206795</guid>
      <description>&lt;p&gt;
About Page: Use &lt;code&gt;srcset&lt;/code&gt; and the w.org CDN for images.
&lt;/p&gt;
&lt;p&gt;
Also, flip the "Selective Refresh" and "Smart Image Resizing" section and remove script enqueues which are no longer used.
&lt;/p&gt;
&lt;p&gt;
Props joemcgill, melchoyce, ocean90.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36173" title="#36173: task (blessed): 4.5 About Page (closed: fixed)"&gt;#36173&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36458 (Fix support for Safari + VoiceOver when editing inline links) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 11 Apr 2016 17:43:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36458#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36458#comment:1/1460396599003113</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by rianrietveld. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1460396596000482"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36484 (Bump Recommended PHP version to PHP 7) updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Mon, 11 Apr 2016 17:43:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36484#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36484#comment:3/1460396583585609</guid>
      <description>&lt;p&gt;
I/we run PHP 7 on most of my (client) sites (60) and see no reason this should not be the &lt;em&gt;recommended&lt;/em&gt; version from now on.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36468 (Error in docs of get_home_url() and home_url()) updated</title>
      
        <dc:creator>thomaswm</dc:creator>

      <pubDate>Mon, 11 Apr 2016 17:36:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36468#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36468#comment:2/1460396197786437</guid>
      <description>&lt;p&gt;
Originally, the docs matched the actual behaviour of the functions. In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/21937" title="Honor https in home option.
fixes #20759
"&gt;[21937]&lt;/a&gt;, however, the code for choosing the scheme has changed, but the docs haven't been updated.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36483 (Inline image replacement in Post Editor does not replace image) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 11 Apr 2016 17:01:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36483#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36483#comment:3/1460394105039259</guid>
      <description>&lt;p&gt;
Think I'm missing or misunderstanding a step when trying to reproduce.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol start="5"&gt;&lt;li&gt;DELETE from this window.
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
I'm in the modal in the image file editor and cannot delete from there. Tried editing the image then deleting it and replacing it, all works as expected.
&lt;/p&gt;
&lt;p&gt;
Another question: if the image is deleted in step 5, and another image with the same name is uploaded, and the old one is shown in the editor, where the old one comes from? At this point it is not on the server any more? It is possible some sort of "network cache" is interfering, as old and new images have the same name. Not sure why it only happens sometimes though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>edit-image.png attached to Ticket #36483</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 11 Apr 2016 16:57:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36483/edit-image.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36483/edit-image.png/1460393822934405</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36484 (Bump Recommended PHP version to PHP 7) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 11 Apr 2016 16:55:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36484#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36484#comment:2/1460393743618751</guid>
      <description>&lt;p&gt;
Noting that &lt;code&gt;Tests_External_HTTP_Basis&lt;/code&gt; is using &lt;a class="ext-link" href="https://secure.php.net/supported-versions.php"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://secure.php.net/supported-versions.php&lt;/a&gt; which would fail in 8 months I think.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36484 (Bump Recommended PHP version to PHP 7) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Mon, 11 Apr 2016 16:55:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36484#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36484#comment:1/1460393713735319</guid>
      <description>&lt;p&gt;
FWIW, this has my +1.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36484 (Bump Recommended PHP version to PHP 7) created</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Mon, 11 Apr 2016 16:51:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36484</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36484/1460393482903712</guid>
      <description>&lt;p&gt;
Follow up to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33758" title="#33758: task (blessed): Bump Recommended PHP version (closed: fixed)"&gt;#33758&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
PHP 7 has been released for 4 months now and there have been no major issues with running WordPress on. Let's bump the recommended version of PHP to continue encouraging people to run the latest and greatest PHP.
&lt;/p&gt;
&lt;p&gt;
Once we decide to do it, a meta ticket will need to be opened to update things on WordPress.org
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23394 (Remove version from readme.html / Upgrade core doesn't restore the file) updated</title>
      
        <dc:creator>RedSand</dc:creator>

      <pubDate>Mon, 11 Apr 2016 16:28:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23394#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23394#comment:15/1460392094989207</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35557 (grunt precommit should run phpunit tests) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Mon, 11 Apr 2016 16:22:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35557#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35557#comment:30/1460391748701021</guid>
      <description>&lt;p&gt;
@netweb Can you create a new ticket?  As this one was closed for 4.5, we will want a new one to follow up and improve things in 4.6
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36474 (Revamp meta boxes) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 11 Apr 2016 16:14:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36474#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36474#comment:5/1460391292947553</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core-editor by hugobaeta. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1460391291001076"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36483 (Inline image replacement in Post Editor does not replace image) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 11 Apr 2016 16:04:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36483#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36483#comment:2/1460390656770906</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1460390654004678"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36358 (Return of _wp_json_prepare_data() in wp_json_encode() should be used.) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Mon, 11 Apr 2016 15:59:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36358#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36358#comment:4/1460390399510473</guid>
      <description>&lt;p&gt;
@rmccue @swissspidy or @pento Can you take a look?  I cannot tell from &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34926" title="REST API: Add JsonSerializable compatibility to wp_json_encode
 ..."&gt;[34926]&lt;/a&gt; if the intent was for the result of &lt;code&gt;_wp_json_prepare_data&lt;/code&gt; to be passed to &lt;code&gt;json_encode&lt;/code&gt; always OR only if &lt;code&gt;json_encode()&lt;/code&gt; fails.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36483 (Inline image replacement in Post Editor does not replace image) updated</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Mon, 11 Apr 2016 15:58:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36483#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36483#comment:1/1460390309597837</guid>
      <description>&lt;p&gt;
Note: Original report here - &lt;a class="ext-link" href="https://wordpress.org/support/topic/media-file-not-being-replaced-unless-with-another-name"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://wordpress.org/support/topic/media-file-not-being-replaced-unless-with-another-name&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27159 (Removing TinyMCE buttons to improve user experience) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 11 Apr 2016 15:58:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27159#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27159#comment:34/1460390294190859</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core-editor by hugobaeta. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1460390291001055"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36483 (Inline image replacement in Post Editor does not replace image) created</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Mon, 11 Apr 2016 15:55:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36483</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36483/1460390149067463</guid>
      <description>&lt;p&gt;
Tested on 4.5-RC2-37173 with the following steps:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Make a new post
&lt;/li&gt;&lt;li&gt;Add m08aGa1nAM.png to post as medium image
&lt;/li&gt;&lt;li&gt;Click to REPLACE image
&lt;/li&gt;&lt;li&gt;Click 'Edit Original'
&lt;/li&gt;&lt;li&gt;DELETE from this window
&lt;/li&gt;&lt;li&gt;Upload new m08aGa1nAM.png
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
At this point, I see the OLD image in the edit page. As soon as I hit 'save draft' however, it shows the correct image.
&lt;/p&gt;
&lt;p&gt;
Tested on WP 4.4.2 and the image replaces as expected, no need to save.
&lt;/p&gt;
&lt;p&gt;
It looks like whatever ajax magic is supposed to refresh that image isn't happening until save.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36459 (Inconsistent triggering of backtick shortcut for code tags) updated</title>
      
        <dc:creator>gitlost</dc:creator>

      <pubDate>Mon, 11 Apr 2016 15:51:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36459#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36459#comment:12/1460389865997779</guid>
      <description>&lt;p&gt;
The backtick problem on keyboards that require a modifier might be solved by loosening the checks on &lt;code&gt;keyCode&lt;/code&gt; values in the &lt;code&gt;keyup&lt;/code&gt; event handler. I've tried testing it by setting up a Norwegian layout but I'm not sure I have the right set up. If it does solve the problem, it's quite a small change really as the checks are only done for optimization reasons.
&lt;/p&gt;
&lt;p&gt;
The quick typing issue is trickier as it's caused by typeahead getting into the selection on &lt;code&gt;keyup&lt;/code&gt; which means that the current character needn't be a backtick. The change in the patch allows for one extra typeahead but if you're very quick you can put two in at least.
&lt;/p&gt;
&lt;p&gt;
The broken backtick issue causing others in the same paragraph not to work can be fixed by looking for the &lt;code&gt;endOffset&lt;/code&gt; first and then looking backwards for the start.
&lt;/p&gt;
&lt;p&gt;
There's a couple of other changes, to ignore backticks that are empty or contain a single white space, and to ignore backticks when they're in the code nodes themselves.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36453 (Disable 'replace' button in replace media frame while attachment is ...) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Mon, 11 Apr 2016 15:41:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36453#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36453#comment:2/1460389296014069</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Confirmed as well. For posterity, the error:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;Uncaught TypeError: Cannot read property 'medium' of undefined&lt;/code&gt; in &lt;code&gt;media-models.js?ver=4.5-RC2-37173-src:1072&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
This likely goes back to the introduction of replacing an image in the editor via &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27050" title="Introduce Edit Image (single mode) in the media modal and use it to ..."&gt;[27050]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36482 (Improve editor scrolling) created</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Mon, 11 Apr 2016 15:36:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36482</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36482/1460388994900823</guid>
      <description>&lt;p&gt;
Maybe we can look into keeping the main toolbar hidden when scrolling down, while showing it when scrolling up. This way we can also use CSS to make showing and hiding of it smoother, instead of JavaScript. This kind of experience is widely used now, so a lot of users would already be used to it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>36459.patch attached to Ticket #36459</title>
      
        <dc:creator>gitlost</dc:creator>

      <pubDate>Mon, 11 Apr 2016 15:33:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36459/36459.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36459/36459.patch/1460388821662478</guid>
      <description>&lt;p&gt;
Less strict keyCode checking plus other changes.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36481 (Emoji script is loaded even if emoji not available?) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 11 Apr 2016 15:30:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36481#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36481#comment:2/1460388647038620</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Emoji are possible without utf8mb4, they get encoded by &lt;code&gt;wp_encode_emoji()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36468 (Error in docs of get_home_url() and home_url()) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Mon, 11 Apr 2016 15:29:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36468#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36468#comment:1/1460388575054581</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Docs added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12598" title="Introduce home_url(). Props Denis-de-Bernardy, hakre. see #9008"&gt;[12598]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12978" title="Introduce get_home_url(), get_site_url(), and get_admin_url() for ..."&gt;[12978]&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34074 (wp_debug false still showing errors) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Mon, 11 Apr 2016 15:28:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34074#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34074#comment:4/1460388496887452</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36481 (Emoji script is loaded even if emoji not available?) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Mon, 11 Apr 2016 15:24:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36481#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36481#comment:1/1460388281090392</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23394 (Remove version from readme.html / Upgrade core doesn't restore the file) updated</title>
      
        <dc:creator>RedSand</dc:creator>

      <pubDate>Mon, 11 Apr 2016 15:16:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23394#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23394#comment:14/1460387769897014</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23394#comment:13" title="Comment 13"&gt;chriscct7&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Hey Chris,
&lt;/p&gt;
&lt;p&gt;
Good discussion. Thanks for sharing your thoughts. :)
&lt;/p&gt;
&lt;p&gt;
I'm glad that you all are open to discussion even if this is closed for now. Let's keep the discussion going.
&lt;/p&gt;
&lt;p&gt;
However, I do have to say that I am a bit disappointed by your response though, as it seems to immediately dismiss what I'm saying. It really seems that the WordPress core dev team is (and has been) resistant (in general) to user suggestions about certain security issues. &lt;strong&gt;I would understand this if people were making suggestions that are not good security practices, but this is an established security best-practice, and no security best-practice should be ignored, however seemingly small.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
I would think that with the discovery of security flaws in nearly every WordPress release for the past two years, the global rise in hacking, malware, etc, that you all would start to make hardening WordPress a bigger priority. I hope this becomes true. If you need recent examples in the news...just look at the Panama Papers scandal for example. Granted...they were using outdated plugins, so it is squarely on them, but please hear my overall point here. WordPress is becoming a bigger and bigger part of the whole global cybersecurity scene. Some of the security issues that arose in the last couple years with WordPress were predictable because WordPress did not follow good security practices 100%. Seemingly small things that seemed like an unlikely attack vector got ignored. And unless something was an immediate critical threat, users were often shut down, which discouraged them from reporting security issues altogether.
&lt;/p&gt;
&lt;p&gt;
Even if a user quotes a credible source to back up the point, it is ignored and shut down. However, when one of the WordPress core dev team members responds, instead of quoting a credible source to back up their point, it is with usually with one of these types of arguments:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;"That's the way it's always been done..."
&lt;/li&gt;&lt;li&gt;"That will break stuff..."
&lt;/li&gt;&lt;li&gt;"That's not a real security issue..."
&lt;/li&gt;&lt;li&gt;"Well, you can always find that info another way..."
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
These are circular arguments, and end up sounding like "the company line" because almost everyone gets some version of the same few responses. I know for a fact that you all are good people, and do not intend things to come off this way.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Don't get me wrong, I have a &lt;em&gt;ton of respect and love for you all&lt;/em&gt;, and the WordPress community in general. WordPress is by far the best CMS out there, and I am glad to see it's influence on the web increase as it has.&lt;/strong&gt; (I hope that I can be a positive contributor in this community.)
&lt;/p&gt;
&lt;p&gt;
For years, users have been requesting that version numbers be removed from the front-facing side of WordPress, and the core team has shut down each of these requests...&lt;em&gt;for years&lt;/em&gt;. There is definitely a disconnect between the core team and users in this area. Being a plugin developer I'm caught in between. I understand both points of view. I've been developing plugins for 10 years, but have not gotten into contributing to the core until now, but I'm definitely changing that moving forward.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;WordPress core definitely needs some hardening.&lt;/strong&gt; I've spent years dealing with security issues in both the military (here in the US and deployed in combat zones) and civilian sectors, and not just web/IT, but physical security, and COMSEC (communications security) as well, which give you some interesting insight into security issues and hacking that you don't get if you only work with web/IT security.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;So, to continue the discussion, I'll respond to some points you made.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
If you would allow me to make an observation based on your responses: &lt;strong&gt;You're thinking like a &lt;em&gt;developer&lt;/em&gt;, not a &lt;em&gt;hacker&lt;/em&gt;.&lt;/strong&gt; When dealing with security issues, you need to think like a hacker. (And it's not just you, so I'm not trying to make that any kind of insult.)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
IETF's recommendation 14.39 in RFC 2038 refers to a header that was previously used for intra-network communication for use in identifying the processing software or for general use server surveys.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Actually, I think you may have misread that...14.39 actually references the "Server" header which is still a standard header in use. The rest of what you mentioned wanders a bit off the topic as the full reference actually was: "Example: &lt;strong&gt;&lt;em&gt;Server:&lt;/em&gt;&lt;/strong&gt;&lt;em&gt; CERN/3.0 libwww/2.17&lt;/em&gt;", which was merely an example of &lt;em&gt;server header revealing version numbers&lt;/em&gt;.
&lt;/p&gt;
&lt;p&gt;
Additionally, I was not specifically referencing section 14.39, as this quote is mentioned again in section 15.4:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;strong&gt;Revealing the specific software version of the server may allow the server machine to become more vulnerable to attacks against software that is known to contain security holes.&lt;/strong&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;strong&gt;Substitute the word "server" for "software", "application", "web application", "web application framework", "Content Management System", etc, and the more generalized principle becomes clear.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Take a step back for a second and look at the overall picture of what I'm saying here...I think you had focused a bit too much on one detail, and were missing my overall point. :)
&lt;/p&gt;
&lt;p&gt;
The point wasn't about the specifics or the RFC itself...&lt;strong&gt;it was about the general security principle&lt;/strong&gt;. &lt;strong&gt;The Internet Engineering Task Force (IETF) are making a clear point that web server/software version numbers should not be revealed.&lt;/strong&gt; This is a &lt;strong&gt;general security principle,&lt;/strong&gt; and &lt;strong&gt;whether an RFC is updated or replaced, doesn't affect that.&lt;/strong&gt; The IETF are merely one example, and I quoted them because of their role in the development of the web and standards. (ie... the man, Tim Berners-Lee...)
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Again, it's about a security principle, not the RFC.&lt;/strong&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Regarding removing version numbers from CSS and JS files: As I mentioned above, replace the version number with a salted hash (or other unique random key) that changes each time the version is updated.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This would break backwards compatibility that plugins can rely on, and it doesn't solve the problem that it's just as easy to compare the contents of the file as it is to parse the version out of the url.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;strong&gt;Exactly what backward compatibility would be broken?&lt;/strong&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The only purpose for the query string is cache-busting.
&lt;/li&gt;&lt;li&gt;The particular string that's used is not relevant. The way it is currently implemented, it just needs to be unique and stay the same until the site updates to the next WordPress version.
&lt;/li&gt;&lt;li&gt;CSS (.css) files don't access the WordPress database, so they don't know what the string is that's attached to the URL. Nothing would break here unless it's poorly coded.
&lt;/li&gt;&lt;li&gt;JS (.js) files don't directly access the WordPress database either, so even if they detect the query string on their URL, they have nothing to compare it against, meaning they don't care what the particular string is either.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I'm intimately familiar with WordPress, have worked intensely with WordPress site development, security, speed optimization, theme development, and plugin development for 10 years (plus an additional 10 years before that in web development as well), and have not seen where this would be true, and that it would break anything.
&lt;/p&gt;
&lt;p&gt;
WordPress is adding the query string to the .js and .css be a cache buster, so that when a site is updated to the next version of WordPress, it can update the CSS and JS scripts, and break any existing caches in a user's browser. It's not necessary for the query string to reference the WordPress version number in that query string: &lt;strong&gt;It could be any unique string that changes when the site is updated.&lt;/strong&gt; Easy fix! There a million ways to create a unique random string that would stay the same until the site is updated.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;However, that's ignoring the website speed performance issues created by adding query strings to .css and .js URLs,&lt;/strong&gt; because it specifically &lt;strong&gt;makes the files uncacheable by browsers&lt;/strong&gt;. I realize that's the intention, but these query strings are added to every script and style that is run through the enqueuing process.
&lt;/p&gt;
&lt;p&gt;
So, &lt;strong&gt;instead of using these cache busting query strings, use alternate methods, which are better practices anyhow.&lt;/strong&gt; Caching can be completely managed by headers: Cache-Control, Surrogate-Control, Expires, Last-Modified, Vary, and Etag Headers, and should be done that way instead of adding query strings.
&lt;/p&gt;
&lt;p&gt;
A major principle in WordPress speed optimization is to concatenate and minify CSS and JS scripts, along with &lt;a class="ext-link" href="https://gtmetrix.com/remove-query-strings-from-static-resources.html"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;removing query strings from static resources&lt;/a&gt;, which renders that whole argument invalid. If you have a specific example of a plugin that it would break, please share it.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Your argument:&lt;/strong&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This would break backwards compatibility that plugins can rely on...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;strong&gt;Argument busted.&lt;/strong&gt; I've provided you with more than one alternative and shown that this is not a web development best practice, and not only that, it has a negative impact on website's performance by preventing CSS and JS files from being cached.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Moreover, there appears to be a suggestion that even if you remove these files, hide the meta generator tag, and randomize the version appended to strings, somehow that will plug all of your version concerns.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The WordPress version info needs to be entirely scrubbed from the front facing side of WordPress. The areas I've mentioned include (but are not limited to):
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The Meta Generator
&lt;/li&gt;&lt;li&gt;Query Strings (or remove these altogether)
&lt;/li&gt;&lt;li&gt;Readme/License File
&lt;/li&gt;&lt;li&gt;Etag headers being added in v4.5 to the load-scripts.php and load-styles.php files:
&lt;pre class="wiki"&gt;header("Etag: $wp_version");
&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;Code comments in .js (I found 5 doing a quick grep of the .js files)
&lt;/li&gt;&lt;li&gt;REST API
&lt;/li&gt;&lt;li&gt;If there is anything I'm not aware of or have left out, then let's add it to the list, set up a project and get it done!
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;strong&gt;Your argument:&lt;/strong&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Moreover, there appears to be a suggestion that even if you remove these files, hide the meta generator tag, and randomize the version appended to strings, somehow that will plug all of your version concerns...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;strong&gt;Argument busted.&lt;/strong&gt; This is not a reason not to fix things. As I've shown, if my list isn't complete, then let's make a complete list of things and fix the entire issue. It's not that huge a project. Sign me up.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
However, if one really wants the version number you can simply run a string comparison on the outputted css or js files.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;That's not how hacking with bots works. They don't want to hit a lot of files on your site when they are scanning. They don't want to use a lot of bandwidth or set off red flags. If there isn't a generator tag with a number, or something easy like .css/.js. URLs (or Etags) that they can glean, they move on to the next. If they are doing a deep scan of your site it can make it easy to get caught, even by newbies. (This is the same reason they don't scan for an entire library of exploits...there are far too many now, so it would take too much bandwith, and could trigger red flags.)
&lt;/li&gt;&lt;li&gt;We're not talking about the combination of James Bond/NSA/Navy Seals trying to break into your site. If someone wants to compare files against a repository to see if the file signatures match, that's a whole different different ballgame and not what you're dealing in 99.9999% of cases. (Again, that would take a lot of bandwith, and be noticeable.)
&lt;/li&gt;&lt;li&gt;&lt;strong&gt;That's an easy fix: Remove the version number from the comments in the .js files. Or better yet, remove the comments altogether. Good minification/concatenation plugins do this anyway.&lt;/strong&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;strong&gt;Your argument:&lt;/strong&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
However, if one really wants the version number you can simply run a string comparison on the outputted css or js files...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;strong&gt;Argument busted.&lt;/strong&gt; We're not talking about pro-level hackers trying to break into your site. I'm talking about the obvious stuff: Don't make it easy.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Moreover, the WordPress REST API framework requires versioning, which inherently must be public in order for the feature to use, and that versioning can be directly mapped to versions of WordPress. That itself cannot be prevented.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;That's not really a valid argument. There is nothing about REST principles that requires the software version be exposed.
&lt;/li&gt;&lt;li&gt;Even if it did, then why accept that flaw? Why not create an improved API and fix the issue?
&lt;/li&gt;&lt;li&gt;REST principles are not set in stone yet, and there is room for change, modification, etc. WordPress should lead the way.
&lt;/li&gt;&lt;li&gt;In web development, we don't just accept that a poor security practice is necessary because something uses it...that's faulty logic. We fix the system so it doesn't require poor security practices.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;strong&gt;Your argument:&lt;/strong&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Moreover, the WordPress REST API framework requires versioning, which inherently must be public in order for the feature to use, and that versioning can be directly mapped to versions of WordPress. That itself cannot be prevented....
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;strong&gt;Argument busted.&lt;/strong&gt; Simply not accurate.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Most of the arguments you've used so far are circular arguments. You haven't quoted any security experts that promote revealing version numbers as a good idea, or any web development best practices as to why it should be done.&lt;/strong&gt; If the WordPress core dev team is going to be so staunchly &lt;em&gt;for&lt;/em&gt; revealing and using version numbers, then there should be some really solid reasons why. I'm happy to hear them.
&lt;/p&gt;
&lt;p&gt;
Again, I'm &lt;em&gt;not&lt;/em&gt; attacking you guys...I truly do love you all, and think you all are incredibly talented, brilliant people who are making an incredible contribution to the world. I just am hoping that some of these points help spark a different way of looking at things.
&lt;/p&gt;
&lt;p&gt;
If you're worried about the amount of effort to fix it, I will be happy to help! I will be happy to contribute my time, and I'm sure many others would as well.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Using a version detection library attached to a standard exploit library set such as metasploit, one can simply just run through all vulnerabilities ever found for WordPress just as quickly as detecting the version on a site that's done what you've prescribed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;strong&gt;Um, no. Just no.&lt;/strong&gt; Effective hacking is not done like that. That takes too much bandwidth to make it scalable. It isn't stealthy and it isn't practical. &lt;strong&gt;To say something to the effect of "one can simply just run through all vulnerabilities ever found for WordPress", shows me you are clearly unaware of &lt;span class="underline"&gt;exactly how many vulnerabilities&lt;/span&gt; there are out there for WordPress.&lt;/strong&gt; Hackers and thieves value discretion. You do &lt;span class="underline"&gt;recon&lt;/span&gt; first...data gathering, then &lt;span class="underline"&gt;select targets,&lt;/span&gt; and strike. Have you actually ever tracked how hacks happen? I have. Tracking bot activity and hacking patterns is something we do, and has been for a long time. We've studied hack attempts happening in real time. What you're saying is commonly repeated info, but not how it actually works.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The fact of the matter is that security by obscurity (version hiding being an example), does not make the site any more or less secure (as pointed out in the OWASP). In actuality in certain penetration software it makes it faster. Many frameworks, upon being unable to deduce a version number of an application, simply iterate over all vulnerabilities anyways.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
SMH. &lt;strong&gt;That's not what "Security by Obscurity" means.&lt;/strong&gt; That phrase gets thrown around a lot in online forums, in the WordPress community, and by word of mouth, without people understanding the actual principle.
&lt;/p&gt;
&lt;p&gt;
The security principle you are incorrectly referencing is: "Avoid Security by Obscurity".
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;What it actually means: &lt;strong&gt;Do not make obscurity &lt;em&gt;your only security method&lt;/em&gt;.&lt;/strong&gt; - I cannot say this enough: &lt;strong&gt;YOUR ONLY METHOD.&lt;/strong&gt; Example: Using a unique file URL &lt;em&gt;instead of&lt;/em&gt; a login to protect something sensitive. That's overly basic but you get the idea.
&lt;/li&gt;&lt;li&gt;What it &lt;em&gt;does not&lt;/em&gt; mean:&lt;strong&gt; Don't bother &lt;em&gt;using obscurity as part of&lt;/em&gt; your security strategy.&lt;/strong&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The security principle: "Defense in Depth" supersedes this and means:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Use a robust layered security strategy.
&lt;/li&gt;&lt;li&gt;By all means, use obscurity in your layers! Why make it easier for the hacker? Restrict info from those who do not need it.
&lt;/li&gt;&lt;li&gt;Use redundant measures so that if one fails during an attack, another can backstop it.
&lt;/li&gt;&lt;li&gt;And a lot more...
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
You mention this:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
...[version hiding being an example], does not make the site any more or less secure (as pointed out in the OWASP).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If using version hiding was your only "security" measure, then that would be ridiculous, and would fit the true definition of trying to use "security by obscurity". But, no one is suggesting that. I don't think anyone reading my comments who is being honest would interpret what I've written to say that that's what I'm suggesting.
&lt;/p&gt;
&lt;p&gt;
Again, you have to think like a hacker my friend, not like a developer.
&lt;/p&gt;
&lt;p&gt;
And where exactly is this quoted in OWASP? That's not what it says &lt;em&gt;anywhere in OWASP&lt;/em&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Very true...but WordPress.org's own usage stats show that approximately 48% of WordPress users aren't even updated to the 4.4 (current) branch so that leaves about half of WordPress' users out of luck if a more proactive approach to security isn't taken.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is a soon to be obsolete argument.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's assuming a lot. What defines soon? It's not going to obsolete for at least a few years, and there are plenty of hacks to be had in that time.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
WordPress is moving towards Chromium style updates, where major versions are done automatically. Existing tail end WordPress installs are automatically being updated major versions now, even if they were not previously by a combination of WordPress outreach to major web hosting companies and other relevant parties.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's fantastic...and very exciting. But, that's assuming that users don't disable the auto-updating. Not everyone wants to update right away. Should they? Yes, I think so. Will they? Not in my experience.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As this continues to occur, the number of sites on the current major version in perpetuity will continue to grow. It wouldn't surprise me if after 2 years, that's up to 85-90% of all installs always on the current major version.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I hope you're right, but that would seem to be overly optimistic.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Furthermore, on sites where WordPress has autoupdate minor releases (all sites since 3.7, so about 80%+ of all WP installs), any newly discovered vulnerabilities can be pushed and patched in real time.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Again, that's assuming that auto-update is not manually disabled. Unfortunately, we've run across many who don't want to update.
&lt;/p&gt;
&lt;p&gt;
In my experience, it's really only the users on the most recent branch that are even &lt;em&gt;close&lt;/em&gt; to up-to-date on the minor versions. Stats back this up. We'll take a look at some stats in a minute.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hiding versions does not in any way, shape or form help make any site newer than 3.7 more secure than they already were.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;strong&gt;I'm sorry, but you are flat out incorrect when you say this.&lt;/strong&gt; Statements like that demonstrate a complete lack of understanding of security principles. &lt;strong&gt;Just because &lt;em&gt;&lt;span class="underline"&gt;you&lt;/span&gt; don't understand the full security implications,&lt;/em&gt; &lt;span class="underline"&gt;does not mean it is not a security issue.&lt;/span&gt;&lt;/strong&gt; When you hear me say that &lt;em&gt;something is a security risk&lt;/em&gt;, I think you think I'm saying that that revealing the version number is like giving someone a password to your site or key to your house. That's not what I mean at all. &lt;strong&gt;Revealing version number does not directly enable the act of penetrating a site.&lt;/strong&gt; That's where you guys seem to be assuming that if something doesn't directly enable access to a site, that means everything is secure. Nothing could be farther from the truth. That's like saying, "Hey, if a thief doesn't have the key to my house, then it's secure." Sure, &lt;strong&gt;if the only way in is the door, or if they're "polite" enough to &lt;em&gt;NOT kick your door in&lt;/em&gt;.&lt;/strong&gt; But there are a million ways into a house (just like a website), and thieves/hackers and the ilk are &lt;em&gt;anything but polite&lt;/em&gt;. &lt;strong&gt;Security is a complex scale of skill/motivation/resources vs difficulty.&lt;/strong&gt; That's where you have to understand that some seemingly peripheral things like this are security risks. &lt;strong&gt;Security encompasses a lot more than just the single act of penetrating a site.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Before a hacker breaks into a site, they gather data and pick their targets. Revealing site software versions makes it really easy for hackers to target sites with specific version/vulnerability combinations.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Hacking doesn't start and end with someone breaking into your site. A direct quote from the one of OWASP's guides on fingerprinting during the information gathering process - &lt;a class="ext-link" href="https://www.owasp.org/index.php/Fingerprint_Web_Application_(OTG-INFO-009)"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Fingerprint Web Application (OTG-INFO-009)&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;strong&gt;Test Objectives:
&lt;span class="underline"&gt;Identify the web application and version&lt;/span&gt; to determine &lt;span class="underline"&gt;known vulnerabilities&lt;/span&gt; and the &lt;span class="underline"&gt;appropriate exploits&lt;/span&gt; to use during testing.&lt;/strong&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'll use key points from an OWASP guide to give you the basics, so you all can see why you need to stop saying, "That's not a real security issue when people point out why WordPress should not be revealing version numbers".
&lt;/p&gt;
&lt;p&gt;
The basic process:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;It starts with research, aka &lt;a class="ext-link" href="https://www.owasp.org/index.php/Testing_Information_Gathering"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Information Gathering&lt;/a&gt;. I'm going just give a little info about each point. Read the guides for more info.
&lt;ul&gt;&lt;li&gt;Use search engines to gather data - &lt;a class="ext-link" href="https://www.owasp.org/index.php/Conduct_search_engine_discovery/reconnaissance_for_information_leakage_(OTG-INFO-001)"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;4.2.1 Conduct Search Engine Discovery and Reconnaissance for Information Leakage (OTG-INFO-001)&lt;/a&gt; - I'll show you a quick trick in a second here.
&lt;/li&gt;&lt;li&gt;Fingerprint (build a profile on) your target
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://www.owasp.org/index.php/Fingerprint_Web_Server_(OTG-INFO-002)"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Fingerprint Web Server (OTG-INFO-002)&lt;/a&gt; - Get the details of the server. Headers give out a wealth of info.
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://www.owasp.org/index.php/Fingerprint_Web_Application_Framework_(OTG-INFO-008)"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Fingerprint Web Application Framework (OTG-INFO-008)&lt;/a&gt; - In this case, Web Application Framework is synonymous with CMS. Basically, get the details of the CMS or framework. Specifically mentions mitigating some of this by removing install files like the WordPress readme and license, as well as removing code comments (ie the comments in WordPress' JS files that contain the version number, and META generator tags.
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://www.owasp.org/index.php/Fingerprint_Web_Application_(OTG-INFO-009)"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Fingerprint Web Application (OTG-INFO-009)&lt;/a&gt; - This involves getting the application's details, including version number, and &lt;strong&gt;WordPress is specifically used as one of the examples&lt;/strong&gt;, and they specifically reference the META GENERATOR tag used in WordPress:
&lt;pre class="wiki"&gt;&amp;lt;meta name="generator" content="WordPress 3.9.2" /&amp;gt;
&lt;/pre&gt;*&lt;a class="ext-link" href="https://www.owasp.org/index.php/Enumerate_Applications_on_Webserver_(OTG-INFO-004)"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Enumerate Applications on Webserver (OTG-INFO-004)&lt;/a&gt; - Basically, figure out what apps are running, versions, and determine vulnerabilities. Regarding WordPress, this would relate specifically to plugins. "A paramount step in testing for web application vulnerabilities is to find out which particular applications are hosted on a web server. Many applications have known vulnerabilities and known attack strategies that can be exploited in order to gain remote control or to exploit data. In addition, many applications are often misconfigured or not updated..."
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;After the information gathering stage is finished, move on the hacking/penetration.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Let me show you a brutally simple, and low-skill way to gather a list of sites that have vulnerable versions.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Use search engines to find targets.
&lt;/li&gt;&lt;li&gt;Pick one of 63+ vulnerable versions to build a list for. I'll pick 4.3.1.
&lt;/li&gt;&lt;li&gt;Enter a query like this into Google:
&lt;pre class="wiki"&gt;inurl:.js?ver=4.3.1
&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;You'll get a quick list of sites that are using vulnerable version 4.3.1.
&lt;/li&gt;&lt;li&gt;From there, just import the data into your target list, and run your bot.
&lt;/li&gt;&lt;li&gt;The better way is to employ a bot that will cruise through sites and build a list for you of sites with the specific version you're looking for, but like I said, using Google requires no skill, and anyone can do it.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;strong&gt;Now, each one of those sites is a potential target for hackers, even low-skill ones, &lt;em&gt;so tell me again how that is not a security risk?&lt;/em&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Ok, now let's take a look at some stats.&lt;/strong&gt; The following are the percentage of WordPress users on each major branch (4.2, 4.3, 4.4, etc) that are using versions with security vulnerabilities:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;WordPress 4.4 branch using vulnerable versions: Approx 3.1% | Approx 1.5% of total WP user base
&lt;ul&gt;&lt;li&gt;Reference: &lt;a class="ext-link" href="http://w3techs.com/technologies/details/cm-wordpress/4.4/all"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://w3techs.com/technologies/details/cm-wordpress/4.4/all&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Vulnerable versions: &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/44"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;4.4 (3)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/441"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;4.4.1 (2)&lt;/a&gt; &amp;lt;-- Version (# exploits)
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;WordPress 4.3 branch using vulnerable versions: Approx 26.6% | Approx 4.2% of total WP user base
&lt;ul&gt;&lt;li&gt;Reference: &lt;a class="ext-link" href="http://w3techs.com/technologies/details/cm-wordpress/4.3/all"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://w3techs.com/technologies/details/cm-wordpress/4.3/all&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Vulnerable versions: &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/43"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;4.3 (6)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/431"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;4.3.1 (4)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/432"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;4.3.2 (2)&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;WordPress 4.2 branch using vulnerable versions: Approx 30.9% | Approx 3.3% of total WP user base
&lt;ul&gt;&lt;li&gt;Reference: &lt;a class="ext-link" href="http://w3techs.com/technologies/details/cm-wordpress/4.2/all"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://w3techs.com/technologies/details/cm-wordpress/4.2/all&lt;/a&gt;
&lt;/li&gt;&lt;li&gt; Vulnerable versions: &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/42"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;4.2 (14)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/421"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;4.2.1 (13)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/422"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;4.2.2 (12)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/423"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;4.2.3 (11)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/424"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;4.2.4 (6)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/425"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;4.2.5 (4)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/426"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;4.2.6 (2)&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;WordPress 4.1 branch using vulnerable versions: Approx 26% | Approx 1.6% of total WP user base
&lt;ul&gt;&lt;li&gt;Reference: &lt;a class="ext-link" href="http://w3techs.com/technologies/details/cm-wordpress/4.1/all"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://w3techs.com/technologies/details/cm-wordpress/4.1/all&lt;/a&gt;
&lt;/li&gt;&lt;li&gt; Vulnerable versions: &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/41"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;4.1 (16)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/411"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;4.1.1 (17)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/412"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;4.1.2 (14)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/413"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;4.1.3 (13)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/414"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;4.1.4 (13)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/415"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;4.1.5 (12)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/416"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;4.1.6 (11)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/417"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;4.1.7 (6)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/418"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;4.1.8 (4)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/419"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;4.1.9 (2)&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;WordPress 4.0 branch using vulnerable versions: Approx 23.6% | Approx 0.9% of total WP user base
&lt;ul&gt;&lt;li&gt;Reference: &lt;a class="ext-link" href="http://w3techs.com/technologies/details/cm-wordpress/4.0/all"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://w3techs.com/technologies/details/cm-wordpress/4.0/all&lt;/a&gt;
&lt;/li&gt;&lt;li&gt; Vulnerable versions: &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/40"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;4.0 (18)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/401"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;4.0.1 (14)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/402"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;4.0.2 (12)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/403"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;4.0.3 (12)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/404"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;4.0.4 (12)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/405"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;4.0.5 (12)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/406"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;4.0.6 (11)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/407"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;4.0.7 (6)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/408"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;4.0.8 (4)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/409"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;4.0.9 (2)&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;WordPress 3.9 branch using vulnerable versions: Approx 35.1% | Approx 1.3% of total WP user base
&lt;ul&gt;&lt;li&gt;Reference: &lt;a class="ext-link" href="http://w3techs.com/technologies/details/cm-wordpress/3.9/all"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://w3techs.com/technologies/details/cm-wordpress/3.9/all&lt;/a&gt;
&lt;/li&gt;&lt;li&gt; Vulnerable versions: &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/39"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;3.9 (23)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/391"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;3.9.1 (22)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/392"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;3.9.2 (19)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/393"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;3.9.3 (13)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/394"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;3.9.4 (12)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/395"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;3.9.5 (12)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/396"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;3.9.6 (12)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/397"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;3.9.7 (11)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/398"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;3.9.8 (6)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/399"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;3.9.9 (4)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/3910"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;3.9.10 (2)&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;WordPress 3.8 branch using vulnerable versions: Approx 35.6% | Approx 0.8% of total WP user base
&lt;ul&gt;&lt;li&gt;Reference: &lt;a class="ext-link" href="http://w3techs.com/technologies/details/cm-wordpress/3.8/all"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://w3techs.com/technologies/details/cm-wordpress/3.8/all&lt;/a&gt;
&lt;/li&gt;&lt;li&gt; Vulnerable versions: &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/38"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;3.8 (22)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/381"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;3.8.1 (25)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/382"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;3.8.2 (20)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/383"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;3.8.3 (20)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/384"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;3.8.4 (13)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/385"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;3.8.5 (12)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/386"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;3.8.6 (12)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/387"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;3.8.7 (12)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/388"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;3.8.8 (12)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/389"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;3.8.9 (11)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/3810"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;3.8.10 (6)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/3811"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;3.8.11 (4)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/3812"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;3.8.12 (2)&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;WordPress 3.7 branch using vulnerable versions: Approx 40.3% | Approx 0.3% of total WP user base
&lt;ul&gt;&lt;li&gt;Reference: &lt;a class="ext-link" href="http://w3techs.com/technologies/details/cm-wordpress/3.7/all"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://w3techs.com/technologies/details/cm-wordpress/3.7/all&lt;/a&gt;
&lt;/li&gt;&lt;li&gt; Vulnerable versions: &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/37"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;3.7 (20)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/371"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;3.7.1 (25)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/372"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;3.7.2 (11)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/373"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;3.7.3 (11)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/374"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;3.7.4 (13)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/375"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;3.7.5 (12)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/376"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;3.7.6 (12)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/377"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;3.7.7 (12)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/378"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;3.7.8 (12)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/379"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;3.7.9 (11)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/3710"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;3.7.10 (8)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/3711"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;3.7.11 (3)&lt;/a&gt; | &lt;a class="ext-link" href="https://wpvulndb.com/wordpresses/3712"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;3.7.12 (2)&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;strong&gt;So based on this, if we're only counting users on branches 3.7-4.4+, approximately 14% of your total user base is using one of &lt;em&gt;63 WordPress versions with known vulnerabilities&lt;/em&gt;.&lt;/strong&gt; But, we need to add in the rest...so adding in users on the branches below that as well, then&lt;strong&gt; approximately 20%+ of the WordPress' user base is using a version that has known vulnerabilities.&lt;/strong&gt; That's 1 in 5. &lt;strong&gt;1 in 5.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;If WordPress powers 26% of the web, then that means that roughly 5% of the world's websites are a WordPress site using a version with a known vulnerability.&lt;/strong&gt; (Well, from 1-25+ vulnerabilities to be specific.) That's of course, not counting potential plugin security issues, which would increase that percentage dramatically.
&lt;/p&gt;
&lt;p&gt;
At the time I wrote this, there are &lt;a class="ext-link" href="http://www.internetlivestats.com/total-number-of-websites/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;1,013,194,710 websites and counting&lt;/a&gt;. So, if that's true, then 26% of that is &lt;strong&gt;263,430,625 sites powered by WordPress.&lt;/strong&gt; Yes, 263 million.
&lt;/p&gt;
&lt;p&gt;
20% of those: &lt;strong&gt;52,686,125 websites using versions of WordPress with a known vulnerability.&lt;/strong&gt; (Again, not counting plugins.) &lt;strong&gt;50...million...websites. With major security flaws.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;No offense, but while &lt;em&gt;you guys are excellent developers&lt;/em&gt;, you are &lt;em&gt;not security experts,&lt;/em&gt; and you need to be realistic about that.&lt;/strong&gt; The WordPress core dev team should really not be shutting people down so quickly about these security issues that users are pointing out. &lt;strong&gt;The overall security of WordPress needs to be taken a bit more seriously.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Let's look at things another way...real life examples.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Real life Physical Security principles that apply to web security:&lt;/strong&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;According to law enforcement and FBI statistics, what is the # 1 way to prevent auto break-ins?&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;&lt;em&gt;Don't put your valuables in plain sight.&lt;/em&gt;
&lt;/li&gt;&lt;li&gt;If you have a load of awesome, valuable stuff, like cameras, stereo, TV, high-end jewelry or anything else desirable, you can lock your doors all you want, but you are giving the thief huge motivation, and if they really want your stuff, they will go to almost any length to get it. Locks aren't going to stop them.
&lt;/li&gt;&lt;li&gt;Notice, the # 1 way is NOT to simply lock your door, or get an alarm system. Should you lock your door? Of course! That's a no-brainer. Should you get an alarm? Probably a good idea. But if you create enough motivation in a potential thief, they will find a way...even a fairly unskilled thief. They'll get a backhoe and smash it up if they have to.
&lt;/li&gt;&lt;li&gt;The same holds true of websites.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;If you're securing a physical building containing a safe holding millions of dollars, would you lock the doors, and turn on the alarm system, but then post a notice on the front door with a map showing how to get to the safe, what model the safe was, and what the model of the security system was?
&lt;ul&gt;&lt;li&gt;No, you would not, because that would be ridiculous.
&lt;ul&gt;&lt;li&gt;With that info, an average skill-level thief could research how to disable that specific alarm system, crack that specific safe model, and they would have a map to the goods.
&lt;/li&gt;&lt;li&gt;Without that info, a thief is not going to randomly go up to your building, and attempt to try hacks for every type of alarm system out there. That would take forever, and trigger alarms. They will move on to an easier target that they know more about.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;That is essentially the exact same thing is being done by not hiding version numbers. It's essentially the WordPress model number.
&lt;ul&gt;&lt;li&gt;What on earth would make it seem that this is a safe thing to do with WordPress websites?
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;When someone points out to you guys that the version numbers are revealed by readme files, or meta generator, or anything else you all keep saying, "Well, it's not like they couldn't get that info another way."
&lt;ul&gt;&lt;li&gt;That's like saying, "Well, the other 2 doors to my house are unlocked, so why bother locking any of them." That's a ridiculous way of thinking. Just go lock all the doors.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Obviously, these points are oversimplified...but they get the point across.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Security is about reducing risk, and lowering the statistical probability of a successful attack.&lt;/strong&gt; You can never eliminate risk fully, and there is no such thing as 100% impenetrable security, even with the best measures in place.
&lt;/p&gt;
&lt;p&gt;
By increasing the level of security for your site or application, you are shrinking the pool of hackers that have the [skill|experience|time|resources|desire] to hack your site. In most criminal acts, it's about following the path of least resistance â€” if you increase the difficulty of success then often the hacker will go somewhere else. That's why every percentage of security improvement really does make a difference. (There still needs to be a robust layered security strategy...not saying to skip any of that.)
&lt;/p&gt;
&lt;p&gt;
You can often cut things off right at the beginning by removing any potential data leakage. &lt;strong&gt;That prevents a hacker from making your site a target during the initial information gathering stage.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;This is why version number leakage needs to be removed from WordPress.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
I really hope that no one takes any of what I've said as an insult or offense to the WordPress core dev team, because that is not my intent. My intent is to spark more of a wake-up call regarding WordPress security and hardening.
&lt;/p&gt;
&lt;p&gt;
You all are awesome, and I have much respect for your skills and contributions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36461 (wpLink autocomplete results styles are not available when wp_editor() ...) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 11 Apr 2016 15:11:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36461#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36461#comment:14/1460387493552958</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37174" title="TinyMCE, inline link: Make styles for the autocomplete results ..."&gt;37174&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
TinyMCE, inline link: Make styles for the autocomplete results available on front end.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also, replace the generic &lt;code&gt;.alignright&lt;/code&gt; class with a more specific class to avoid styling issues with themes which have padding/margin attached to &lt;code&gt;.alignright&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props azaozz, imath.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36461" title="#36461: defect (bug): wpLink autocomplete results styles are not available when wp_editor() ... (closed: fixed)"&gt;#36461&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37174]: TinyMCE, inline link: Make styles for the autocomplete results ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 11 Apr 2016 15:11:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37174</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37174/1460387492942483</guid>
      <description>&lt;p&gt;
TinyMCE, inline link: Make styles for the autocomplete results available on front end.
&lt;/p&gt;
&lt;p&gt;
Also, replace the generic &lt;code&gt;.alignright&lt;/code&gt; class with a more specific class to avoid styling issues with themes which have padding/margin attached to &lt;code&gt;.alignright&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props azaozz, imath.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36461" title="#36461: defect (bug): wpLink autocomplete results styles are not available when wp_editor() ... (closed: fixed)"&gt;#36461&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36481 (Emoji script is loaded even if emoji not available?) created</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Mon, 11 Apr 2016 15:03:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36481</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36481/1460386995619096</guid>
      <description>&lt;p&gt;
Some of my websites have older MySQL version and WordPress database was not upgraded to &lt;code&gt;ut8mb4&lt;/code&gt;, so it is not possible to use emojis. But related scripts (for example &lt;code&gt;wp-emoji-release.min.js&lt;/code&gt;) and styles are still loaded?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36480 (TinyMCE: use the API for inline toolbars) created</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 11 Apr 2016 15:02:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36480</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36480/1460386968954536</guid>
      <description>&lt;p&gt;
Switch our inline toolbars to use the new TinyMCE API. It was improved several times and now has a callback we can use to precisely position the toolbar and take into account our UI changes like "editor scrolling" and DWF.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36461 (wpLink autocomplete results styles are not available when wp_editor() ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 11 Apr 2016 14:58:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36461#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36461#comment:13/1460386698457072</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1460386696004666"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36479 (Improve autosave in the browser) created</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 11 Apr 2016 14:55:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36479</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36479/1460386510448551</guid>
      <description>&lt;p&gt;
Several improvements that can make this quite better:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Try to better detect when a restore may be needed.
&lt;/li&gt;&lt;li&gt;Make in-browser autosaves a "higher priority" than remote/server autosaves. The in-browser content is fresher. If both are available, prefer/emphasis the in-browser data.
&lt;/li&gt;&lt;li&gt;Add some subtle, always present UI for restoring a post from in-browser autosave. This should (probably) be only available before the users start typing.
&lt;/li&gt;&lt;li&gt;Consider adding the in-browser data to the revisions or display a preview/diff with the current data in some other way.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 11 Apr 2016 14:51:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:180</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:180/1460386263557716</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by casiepa. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1460386261004663"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #36217,â€‹36478 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 11 Apr 2016 14:35:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=36217%2C36478</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=36217%2C36478/1460385345770147</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36217" title="#36217: enhancement: WP_Post_Type class (closed: fixed)"&gt;#36217&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #36478 (Add a `WP_Post_Type` class to represent post types) created</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 11 Apr 2016 14:34:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36478</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36478/1460385298041889</guid>
      <description>&lt;p&gt;
We now have classes for users, posts, terms, comments, networks, sites and I think it would be a good next step to get rid of the basic post type objects and use instances of a specific class for these as well. Therefore I'm proposing to add a new class &lt;code&gt;WP_Post_Type&lt;/code&gt; which is instantiated from the &lt;code&gt;register_post_type()&lt;/code&gt; function. The global variable &lt;code&gt;$wp_post_types&lt;/code&gt; would then contain these instances.
&lt;/p&gt;
&lt;p&gt;
What I'm thinking of is that we could move huge parts of the logic in &lt;code&gt;register_post_type()&lt;/code&gt; into the constructor of the new class, more specifically, I think we should move everything that changes the actual post type object (for example filling &lt;code&gt;publicly_queryable&lt;/code&gt; with the value from &lt;code&gt;public&lt;/code&gt;, getting the labels) while keeping everything that acts outside of the post type object (for example adding query var, adding meta box callback) directly in the &lt;code&gt;register_post_type()&lt;/code&gt; function.
&lt;/p&gt;
&lt;p&gt;
About the behavior of the class itself, I see two approaches: we could either use class properties for all the arguments of &lt;code&gt;register_post_type()&lt;/code&gt; or we could put them into an &lt;code&gt;$args&lt;/code&gt; array which would then be the only class property (for now). Then we could still access everything in a backwards-compatible way with PHP magic methods. What I like about the second approach is that it would allow to add any additional arguments, for example if a plugin does something custom with post types.
&lt;/p&gt;
&lt;p&gt;
If we create this class, we will have a base to work with in the future to centralize functionality that revolves around post types, for example I think it would be great if the post type objects would hold and manage its post type features - this way we could get rid of the private global variable that is currently used for that.
&lt;/p&gt;
&lt;p&gt;
I have already started writing a patch for this, just to test, which works fine so far, but before I refine the code to post it here, I would like to get some feedback about the idea in general.
&lt;/p&gt;
&lt;p&gt;
Also, if we tackle this, we can do the same thing for taxonomies (&lt;code&gt;WP_Taxonomy&lt;/code&gt;), but that should be dealt with in a separate ticket I think.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27888 (Feature request: `get_current_admin_url()` and `get_current_admin_hook()`) updated</title>
      
        <dc:creator>brgweb</dc:creator>

      <pubDate>Mon, 11 Apr 2016 14:26:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27888#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27888#comment:9/1460384781317362</guid>
      <description>&lt;p&gt;
@mrahmadawais are you working on it?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36173 (4.5 About Page) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Mon, 11 Apr 2016 13:42:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36173#comment:59</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36173#comment:59/1460382179579484</guid>
      <description>&lt;p&gt;
Super thorough. From what I can tell it looks good, but I get &lt;code&gt;Fatal error: Cannot read property 'statusCode' of undefined&lt;/code&gt; if I try to apply the patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36477 (Responsive images (srcset) can include images larger than the full size) created</title>
      
        <dc:creator>peterdavehello</dc:creator>

      <pubDate>Mon, 11 Apr 2016 13:27:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36477</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36477/1460381278752802</guid>
      <description>&lt;p&gt;
In many cases, I saw the resized and smaller images are much larger than the origin image, especially for the optimized images, it will make no sense to do that resize in this case, the worst case I've seen is about 13x larger than the origin and bigger image.
&lt;/p&gt;
&lt;p&gt;
If an example can help to explain the problem, please take this picture:
&lt;a class="ext-link" href="https://cdn2.peterdavehello.org/wp-content/uploads/2016/04/status.png"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://cdn2.peterdavehello.org/wp-content/uploads/2016/04/status.png&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Many thanks!
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36476 (The login form is not covered by a test) created</title>
      
        <dc:creator>slimndap</dc:creator>

      <pubDate>Mon, 11 Apr 2016 13:03:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36476</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36476/1460379798428165</guid>
      <description>&lt;p&gt;
I don't think that the login procedure and the underlying &lt;code&gt;wp_signon()&lt;/code&gt; are covered by (php)unit tests.
Since this is something quite trivial, I believe this should be added.
&lt;/p&gt;
&lt;p&gt;
I tried to add it myself, but failed. Keep running into &lt;code&gt;Cannot modify header information - headers already sent&lt;/code&gt; errors.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36475 (Responsive images in TinyMCE) created</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Mon, 11 Apr 2016 12:49:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36475</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36475/1460378947851466</guid>
      <description>&lt;p&gt;
Decide if we should be adding the &lt;code&gt;srcset&lt;/code&gt; and &lt;code&gt;sizes&lt;/code&gt; attributes to the images in the editor, and if they should be saved to the database or added with the display filter.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #32563 (Introduce filter for disabling new user notifcation) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Mon, 11 Apr 2016 12:43:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32563#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32563#comment:7/1460378582722070</guid>
      <description>&lt;p&gt;
@darrenlambert: When testing patches from core trac, the recommended method is to leverage the &lt;code&gt;patch&lt;/code&gt; module for grunt shipped with our build tools in the develop.svn.wordpress.org repo. It can handle the different directories problem. For more on that, see the &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/testing/patch/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Testing a Patch&lt;/a&gt; page in the Core Contributor Handbook.
&lt;/p&gt;
&lt;p&gt;
If you'd still like to apply the patch directly, I'd suggest moving the the patch file into your src/ directory and applying from there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20152 (Multisite simplify option name to user_roles) updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Mon, 11 Apr 2016 12:41:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20152#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20152#comment:31/1460378508402896</guid>
      <description>&lt;p&gt;
This convention (prefixing an option in a table that's already prefixed and thereby site specific) just creates extra work and possible confusion when moving sites.
&lt;/p&gt;
&lt;p&gt;
If two sites in some strange way are able to be sharing their options then they share &lt;code&gt;user roles&lt;/code&gt;, too. If this is happening in som rare cases, using config contants for &lt;code&gt;site_url&lt;/code&gt; and &lt;code&gt;home_url&lt;/code&gt;, add a constant for &lt;code&gt;user_roles&lt;/code&gt;  to override the option, like &lt;code&gt;WP_USER_ROLES&lt;/code&gt; (simple array of strings).
&lt;/p&gt;
&lt;p&gt;
Please fix.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36474 (Revamp meta boxes) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Mon, 11 Apr 2016 12:31:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36474#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36474#comment:4/1460377911704857</guid>
      <description>&lt;p&gt;
That sounds good, thanks for the feedback!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36474 (Revamp meta boxes) updated</title>
      
        <dc:creator>GregRoss</dc:creator>

      <pubDate>Mon, 11 Apr 2016 12:28:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36474#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36474#comment:3/1460377733252545</guid>
      <description>&lt;p&gt;
Your ticket wasn't clear it was for the post screen only, but even so, allowing the developer to set the default makes the most sense I think.
&lt;/p&gt;
&lt;p&gt;
I have a plug that adds a widget to the posts screen and it wouldn't make much sense to have it closed by default if the user had added it to the display.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36421 (User profile not shown  when clicked on the photo and name displayed) closed</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Mon, 11 Apr 2016 12:26:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36421#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36421#comment:1/1460377614357555</guid>
      <description>invalid: &lt;p&gt;
Hi @harshita1,
&lt;/p&gt;
&lt;p&gt;
Trac is used for building the WordPress core software itself.
&lt;/p&gt;
&lt;p&gt;
If you're having trouble with gravatar features on WordPress.com you'll want to contact their support here: &lt;a class="ext-link" href="http://en.support.wordpress.com/contact/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://en.support.wordpress.com/contact/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36474 (Revamp meta boxes) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Mon, 11 Apr 2016 12:25:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36474#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36474#comment:2/1460377524156228</guid>
      <description>&lt;p&gt;
This does not apply to dashboard or other meta boxes that or not on the editor screen. And sure, the meta box could perhaps set the default.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36474 (Revamp meta boxes) updated</title>
      
        <dc:creator>GregRoss</dc:creator>

      <pubDate>Mon, 11 Apr 2016 12:22:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36474#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36474#comment:1/1460377340336374</guid>
      <description>&lt;p&gt;
That might not be a very good in general.  While on the post screen it would be fine, other screens like the dashboard, would make little sense with the default set to closed.  A first time install of WordPress would provide a dashboard with little information visible.
&lt;/p&gt;
&lt;p&gt;
Likewise many plugins assume "open" is the default and this change would break those as well.
&lt;/p&gt;
&lt;p&gt;
Perhaps instead of changing the default, allow the default to be set on a per widget basis?
&lt;/p&gt;
&lt;p&gt;
That way a developer could determine which is best for a given widget.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20152 (Multisite simplify option name to user_roles) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 11 Apr 2016 12:19:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20152#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20152#comment:30/1460377164717999</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by ocean90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1460377162004648"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36474 (Revamp meta boxes) created</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Mon, 11 Apr 2016 11:55:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36474</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36474/1460375721089640</guid>
      <description>&lt;p&gt;
This would be a pretty big user facing enhancement.
&lt;/p&gt;
&lt;p&gt;
The idea is to collapse meta boxes by default, allowing them to have an icon and some kind of summary. Just like we do now, we would keep opened meta boxes open, closed ones closed, only the default would now be closed.
&lt;/p&gt;
&lt;p&gt;
This is similar to &lt;a class="ext-link" href="https://wordpress.com/post"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;wordpress.com/post&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;em&gt;&lt;a class="ext-link" href="https://make.wordpress.org/design/2016/01/11/improving-post-new/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Improving Post New&lt;/a&gt;&lt;/em&gt; by @michael-arestad, Metabox physics.
&lt;/p&gt;
&lt;p&gt;
Related to &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/17028" title="#17028: enhancement: Move the &amp;#34;last edited at&amp;#34; text and saved/updated/published notices in ... (new)"&gt;#17028&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Proof of concept:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://make.wordpress.org/core/files/2016/01/Screen-Shot-2015-08-07-at-16.02.49.png"&gt;&lt;img src="https://make.wordpress.org/core/files/2016/01/Screen-Shot-2015-08-07-at-16.02.49.png" alt="https://make.wordpress.org/core/files/2016/01/Screen-Shot-2015-08-07-at-16.02.49.png" crossorigin="anonymous" title="https://make.wordpress.org/core/files/2016/01/Screen-Shot-2015-08-07-at-16.02.49.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36473 (JavaScript error in theme customizer a specific value of before_widget) created</title>
      
        <dc:creator>martin.krcho</dc:creator>

      <pubDate>Mon, 11 Apr 2016 11:25:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36473</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36473/1460373943825952</guid>
      <description>&lt;p&gt;
I just came across an issue with the theme customizer. It is failing with the following JavaScript error
&lt;/p&gt;
&lt;pre class="wiki"&gt;Uncaught Error: Syntax error, unrecognized expression: SECTION.widget.widget-%2$s,SECTION.widget.widget-%2$s,SECTION.widget.widget-%2$s,SECTION.widget.widget-%2$s,SECTION.widget.widget-%2$s,SECTION.widget.widget-%2$s
&lt;/pre&gt;&lt;p&gt;
I tracked this issue down to the function buildWidgetSelectors in customize-preview-widgets.min.js, specififcally to this bit of code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;d.before_widget.replace("%1$s", "").replace("%2$s", "")
&lt;/pre&gt;&lt;p&gt;
I am using theme called Bearded that defines the "before_widget" as follows:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;section id="%1$s" class="widget %2$s widget-%2$s"&amp;gt;
&lt;/pre&gt;&lt;p&gt;
A possible fix would be to make both of the replace actions mentioned above replace ALL occurencies of the pattern:
&lt;/p&gt;
&lt;pre class="wiki"&gt;d.before_widget.replace(/%1\$s/g, "").replace(/%2\$s/g, "")
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Tickets #26262,â€‹36472 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 11 Apr 2016 11:25:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=26262%2C36472</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=26262%2C36472/1460373929206187</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26262" title="#26262: defect (bug): Ajax requests shouldn't display errors (closed: fixed)"&gt;#26262&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Thanks for testing!
&lt;/p&gt;
&lt;p&gt;
For your 4.4 install I suggest to inspect the response of the XHR request in your browser. Should be visible in the network tab of the developer tools.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #36472 (Media Library seems to break) updated</title>
      
        <dc:creator>coderste</dc:creator>

      <pubDate>Mon, 11 Apr 2016 11:22:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36472#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36472#comment:5/1460373746762480</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36472 (Media Library seems to break) updated</title>
      
        <dc:creator>coderste</dc:creator>

      <pubDate>Mon, 11 Apr 2016 11:18:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36472#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36472#comment:4/1460373498247200</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36472#comment:2" title="Comment 2"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hello @coderste, that's probably because of a PHP warning caused by one of your plugins or a theme which corrupts the XHR response. &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36571" title="Don't display errors during Ajax requests.
See #34915 for REST and ..."&gt;[36571]&lt;/a&gt; will fix this by suppressing the errors.
Can you test if it still happens in &lt;a class="ext-link" href="https://wordpress.org/news/2016/04/wordpress-4-5-rc2/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;RC2 of WordPress 4.5&lt;/a&gt;?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I've tested this in 4.5 and while in debug mode the media library does work - I can it was just a 4.4 bug
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33305 (Plugin details modal: initial focus and constraining tabbing) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 11 Apr 2016 11:11:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33305#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33305#comment:17/1460373080907213</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by mehulkaklotar. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1460373078004638"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33305 (Plugin details modal: initial focus and constraining tabbing) updated</title>
      
        <dc:creator>mehulkaklotar</dc:creator>

      <pubDate>Mon, 11 Apr 2016 11:09:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33305#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33305#comment:16/1460372960328733</guid>
      <description>&lt;p&gt;
Any Props? :) @afercia @mikeschroder
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36472 (Media Library seems to break) updated</title>
      
        <dc:creator>coderste</dc:creator>

      <pubDate>Mon, 11 Apr 2016 11:07:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36472#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36472#comment:3/1460372858737917</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36472#comment:2" title="Comment 2"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hello @coderste, that's probably because of a PHP warning caused by one of your plugins or a theme which corrupts the XHR response. &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36571" title="Don't display errors during Ajax requests.
See #34915 for REST and ..."&gt;[36571]&lt;/a&gt; will fix this by suppressing the errors.
Can you test if it still happens in &lt;a class="ext-link" href="https://wordpress.org/news/2016/04/wordpress-4-5-rc2/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;RC2 of WordPress 4.5&lt;/a&gt;?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I have restored back to the default theme and disabled all Plugins and I seem to get the same result while in debug mode I can not access the media library
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36472 (Media Library seems to break) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 11 Apr 2016 11:04:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36472#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36472#comment:2/1460372651655567</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hello @coderste, that's probably because of a PHP warning caused by one of your plugins or a theme which corrupts the XHR response. &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36571" title="Don't display errors during Ajax requests.
See #34915 for REST and ..."&gt;[36571]&lt;/a&gt; will fix this by suppressing the errors.
Can you test if it still happens in &lt;a class="ext-link" href="https://wordpress.org/news/2016/04/wordpress-4-5-rc2/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;RC2 of WordPress 4.5&lt;/a&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36472 (Media Library seems to break) updated</title>
      
        <dc:creator>coderste</dc:creator>

      <pubDate>Mon, 11 Apr 2016 11:03:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36472#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36472#comment:1/1460372583553866</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36472 (Media Library seems to break) created</title>
      
        <dc:creator>coderste</dc:creator>

      <pubDate>Mon, 11 Apr 2016 10:58:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36472</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36472/1460372320921033</guid>
      <description>&lt;p&gt;
In WordPress 4.4.2 the media library seems to break completely if I set &lt;code&gt;WP_DEBUG&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; - is this the normal behaviour for this?
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://i.stack.imgur.com/wmPCJ.png"&gt;&lt;img src="http://i.stack.imgur.com/wmPCJ.png" alt="http://i.stack.imgur.com/wmPCJ.png" crossorigin="anonymous" title="http://i.stack.imgur.com/wmPCJ.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Once I disable &lt;code&gt;WP_DEBUG&lt;/code&gt; it seems to work just fine and all the images I have uploaded are displayed - this is quite annoying having to turn it off while debugging a feature on my theme.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Tickets #34213,â€‹35653 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 11 Apr 2016 10:24:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=34213%2C35653</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=34213%2C35653/1460370254406616</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34213" title="#34213: enhancement: Change priority for loading theme/plugin translations (closed: fixed)"&gt;#34213&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #32879 (Live switching Language) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 11 Apr 2016 10:20:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32879#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32879#comment:1/1460370050619210</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29783" title="#29783: feature request: User Admin Language (closed: fixed)"&gt;#29783&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26511" title="#26511: feature request: Introduce a locale-switching function (closed: fixed)"&gt;#26511&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26511 (Introduce a locale-switching function) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 11 Apr 2016 10:20:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26511#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26511#comment:9/1460370040957352</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32879" title="#32879: feature request: Live switching Language (closed: duplicate)"&gt;#32879&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36471 (Accessing the path /data/feed/atom on a Wordpress URL causes an error ...) created</title>
      
        <dc:creator>dannyjjk</dc:creator>

      <pubDate>Mon, 11 Apr 2016 09:54:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36471</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36471/1460368451563917</guid>
      <description>&lt;p&gt;
I have WP_DEBUG set up on my Wordpress domains to ensure that I find any PHP notices or warnings as they often help me to find issues that may be present or may not be present but could be in the future. I noticed when I accessed the path /data/feed/atom on a Wordpress URL, it causes this error:
&lt;/p&gt;
&lt;p&gt;
PHP Notice:  Trying to get property of non-object in /var/www/vhosts/soul.academy/httpdocs/wp-includes/link-template.php on line 636
&lt;/p&gt;
&lt;p&gt;
I did a stack trace which showed all the files were core wordpress files (all located in /wp-includes). I imagine this notice should be being handled in some way such that it does come up in the logs, and because of that it seems like a bug to me.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36470 (Multisite - network sites list not very memory efficient) created</title>
      
        <dc:creator>Bombdogs</dc:creator>

      <pubDate>Mon, 11 Apr 2016 09:16:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36470</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36470/1460366200631540</guid>
      <description>&lt;p&gt;
This recent change in 4.3 to add user counts to multisite network admin sites list can cause out of memory errors on installs with many thousands of users...
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/attachment/ticket/32434/32434.2.patch"&gt;https://core.trac.wordpress.org/attachment/ticket/32434/32434.2.patch&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
On a vanilla WPMU install with 200,000 users (bulk generated by wp-cli) the wp-admin memory footprint for the network admin sites list page can be as low as 32Mb when running WP4.2 - simply upgrading to WP4.3 requires you to increase this to 128Mb (~4x) for this size user base. The memory requirement keeps increasing as the user base increases (unsustainable).
&lt;/p&gt;
&lt;p&gt;
The problem in the code referenced in the patch above is that all users for a blog are selected out of the DB and then a count is done in PHP - this requires more memory than is ideal - selecting just the count will be quicker and more memory efficient.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #8217 (Check all checkbox never becomes checked) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 11 Apr 2016 09:02:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8217#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8217#comment:13/1460365341447032</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by garyj. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1460365338000477"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37 (1.3 updater is calling 'autoload' column without db alterations...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 11 Apr 2016 09:02:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37#comment:7/1460365341172549</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by garyj. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1460365338000477"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36467 (disable zip extension in themes directroy) updated</title>
      
        <dc:creator>ahmedash95</dc:creator>

      <pubDate>Mon, 11 Apr 2016 08:48:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36467#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36467#comment:2/1460364536357376</guid>
      <description>&lt;p&gt;
i'm agree with you .. but a lot of users make this mistake by wrong and they completely forgot to protected their important files, i think wordpress must have some protected ways to secure user's files.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36469 (Chrome bug when placing cursor before or after Gallery shortcode (WPView)) created</title>
      
        <dc:creator>bduclos</dc:creator>

      <pubDate>Mon, 11 Apr 2016 08:22:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36469</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36469/1460362970138125</guid>
      <description>&lt;p&gt;
To reproduce this issue: in the Visual editor mode, type a long text followed by a Gallery shortcode (you have to scroll to see the gallery).
&lt;/p&gt;
&lt;p&gt;
In Chrome, if you click to the left or right of the Gallery WPView to place the cursor, the editor jumps to the top.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36466 (Remove "appearance" reference in customizer permissions error) updated</title>
      
        <dc:creator>Frozzare</dc:creator>

      <pubDate>Mon, 11 Apr 2016 06:43:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36466#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36466#comment:1/1460356987768611</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>36466.patch attached to Ticket #36466</title>
      
        <dc:creator>Frozzare</dc:creator>

      <pubDate>Mon, 11 Apr 2016 05:47:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36466/36466.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36466/36466.patch/1460353639712092</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36461 (wpLink autocomplete results styles are not available when wp_editor() ...) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Mon, 11 Apr 2016 05:00:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36461#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36461#comment:12/1460350847818359</guid>
      <description>&lt;p&gt;
If anyone else thinks &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36461/36461.3.patch" title="Attachment '36461.3.patch' in Ticket #36461"&gt;36461.3.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36461/36461.3.patch" title="Download"&gt;â€‹&lt;/a&gt; is the right way to go, would be great to get this committed before tomorrow morning's dry run.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36173 (4.5 About Page) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Mon, 11 Apr 2016 03:46:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36173#comment:58</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36173#comment:58/1460346387058128</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36173/36173.23.diff" title="Attachment '36173.23.diff' in Ticket #36173"&gt;36173.23.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36173/36173.23.diff" title="Download"&gt;â€‹&lt;/a&gt; sets up the feature images with &lt;code&gt;srcset&lt;/code&gt; and &lt;code&gt;sizes&lt;/code&gt; attributes. I created smaller sizes from the original 1000px versions and compressed them using ImageOptim. The whole set of file sizes can be found in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36173/about-images.zip" title="Attachment 'about-images.zip' in Ticket #36173"&gt;about-images.zip&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36173/about-images.zip" title="Download"&gt;â€‹&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The image sizes included are: 280px, 400px, 560px, 680px, 800px, and 1000px.
&lt;/p&gt;
&lt;p&gt;
These will need to be uploaded to the wp.com CDN and then all of the placeholder URLs in the &lt;code&gt;src&lt;/code&gt; and &lt;code&gt;srcset&lt;/code&gt; will need to be replaced with the actual URLs.
&lt;/p&gt;
&lt;p&gt;
Some considerations I included in the implementation:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I've included the 560px version in the &lt;code&gt;src&lt;/code&gt;, which is slightly larger than the largest 1x width needed. I'm assuming that most retina devices are capable of displaying images from the &lt;code&gt;srcset&lt;/code&gt;. Otherwise, we will display a smaller image, and since we're not using a polyfill, we don't need to worry about any double download issues by including both a &lt;code&gt;src&lt;/code&gt; and a &lt;code&gt;srcset&lt;/code&gt; attribute.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;I've listed the 1000px resource first in the &lt;code&gt;srcset&lt;/code&gt; to ensure that older versions of iOS Safari get crisp images due to a bug that cause them to always load the first source in a &lt;code&gt;srcset&lt;/code&gt; attribute when using an unrecognized descriptor (see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35030" title="#35030: defect (bug): Responsive Images: wrong source selected in iOS8 (closed: fixed)"&gt;#35030&lt;/a&gt;).
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>36173.23.diff attached to Ticket #36173</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Mon, 11 Apr 2016 03:41:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36173/36173.23.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36173/36173.23.diff/1460346069129362</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36173 (4.5 About Page) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 11 Apr 2016 03:39:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36173#comment:57</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36173#comment:57/1460345955062620</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by mark. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1460345953004613"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>about-images.zip attached to Ticket #36173</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Mon, 11 Apr 2016 03:26:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36173/about-images.zip</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36173/about-images.zip/1460345197221086</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36447 (Responsive preview icons in Customizer need tooltips) updated</title>
      
        <dc:creator>ahortin</dc:creator>

      <pubDate>Mon, 11 Apr 2016 01:59:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36447#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36447#comment:3/1460339943002472</guid>
      <description>&lt;p&gt;
@celloexpressions the fact that they're non-destructive is irrelevant. People shouldn't have to click a button to find out what it does. That's the most annoying thing ever. Why is there a tooltip on the Distraction Free Writing icon in the Visual Editor? It's non-desctructive as well. By your way of thinking, this tooltip should be removed also.
&lt;/p&gt;
&lt;p&gt;
You should know what an icon/button does BEFORE you click it. If I'm using an interface and I don't know what a particular button does, I'm less likely to click it at all, just in case it messes up my work. If I don't know what the icon/button does, how do I know if it's non-destructive?
&lt;/p&gt;
&lt;p&gt;
Even though the sizes may be arbitrary, they'd still benefit from having labels like "Mobile view/Tablet view/Desktop view", or something along those lines. They're not device specific and will at least give people an idea of what the icon does.
&lt;/p&gt;
&lt;p&gt;
Also, tooltips don't become distracting once you know what an icon/button does. I refer to the Visual Editor again. I don't find the tooltips on any of those buttons annoying and I've been using them for 10+ years. Once you know what an icon does, you simply click it and move on. Your mouse doesn't tend to hover over it. The tooltip will only display for a microsecond.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36455 (Call opcache_reset() after plug-in, theme or core update) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 11 Apr 2016 01:57:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36455#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36455#comment:1/1460339826534083</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
When running in an environment where PHP files are modified, using an opcode cache without some kind of filesystem monitoring is always going to be a bad idea - the opcode cache simply is not designed to be used within that environment.
&lt;/p&gt;
&lt;p&gt;
I'm not against adding this, especially as it's more likely to be enabled in PHP 7, but this won't help at all for scenario's where a manual update is run, or WP-CLI (or other similar tools) are used to manage the updates.
&lt;/p&gt;
&lt;p&gt;
It'd have to be run post plugin/theme/core update, on the plugin/theme editors, probably needs some way of being triggered by plugins too, etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36467 (disable zip extension in themes directroy) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 11 Apr 2016 01:26:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36467#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36467#comment:1/1460338008323658</guid>
      <description>wontfix: &lt;p&gt;
At this time, we don't add rewrite rules to block access to files - if a user doesn't want files downloadable, they shouldn't be placed within a publicly readable location, or should have a unqiue non-guessable filename.
&lt;/p&gt;
&lt;p&gt;
Some security plugins are known to add extra rewrite rules to potentially block invalid requests, I don't think I've seen any of those add a similar rule to this either.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #35557 (grunt precommit should run phpunit tests) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 11 Apr 2016 00:37:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35557#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35557#comment:29/1460335065892919</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by netweb. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1460335063004611"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36452 (customize_value should be passed $this) reopened</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Mon, 11 Apr 2016 00:31:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36452#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36452#comment:4/1460334696608645</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #34584 (Editor/TinyMCE - Enhance Blockquote Functionality to Allow Citations) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Mon, 11 Apr 2016 00:29:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34584#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34584#comment:3/1460334587820774</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>