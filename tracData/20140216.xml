<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #26952 (Style TinyMCE modals to match WordPress admin styling) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Sun, 16 Feb 2014 23:18:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26952#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26952#comment:25/1392592686452950</guid>
      <description>&lt;p&gt;
@melchoyce I'm not sure if it's possible to style the Charmap sidebar like in your mock up since TinyMCE doesn't provide any ids and styling it might affect other elements in other modals.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26952 (Style TinyMCE modals to match WordPress admin styling) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Sun, 16 Feb 2014 22:57:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26952#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26952#comment:24/1392591431466225</guid>
      <description>&lt;p&gt;
First attempt:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Removes text-shadow from dashicons.
&lt;/li&gt;&lt;li&gt;Removes weird border radius from Quicklinks toolbar.
&lt;/li&gt;&lt;li&gt;Fixes arrow border and replaces arrow with dashicon.
&lt;/li&gt;&lt;li&gt;Inherit colours and font (i.e. Open Sans).
&lt;/li&gt;&lt;li&gt;Makes tooltip shadows lighter and font a bit bigger (11px -&amp;gt;12px).
&lt;/li&gt;&lt;li&gt;Also adds some margin between the tooltip and buttons.
&lt;/li&gt;&lt;li&gt;Restyles Charmap and Help modals.
&lt;/li&gt;&lt;li&gt;Added &lt;code&gt;cursor: pointer;&lt;/code&gt; to Charmap table cells.
&lt;/li&gt;&lt;li&gt;Removed the close button from the Help modal, because the button will be too big when enqueuing button styles (iframe is small and triggers responsive styles) and I think it's cleaner like this anyway.
&lt;/li&gt;&lt;li&gt;Restyles the format button (but I'm not sure if it's good enough). I think it'd be good if buttons with an arrow all have the same style though.
&lt;/li&gt;&lt;li&gt;Flips the arrow when the menu is open.
&lt;/li&gt;&lt;li&gt;Restyles the format and colour menus.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
TODO
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I'd be easier if the Help modal wasn't an iframe. Maybe remove it? Not sure if it's possible.
&lt;/li&gt;&lt;li&gt;Style TinyMCE buttons (e.g. in the plain text modal). It's probably easiest to add &lt;code&gt;button[type="button"]&lt;/code&gt;to buttons.css, though TinyMCE wraps it in a div and styles that. Not sure which solution is best and doesn't add too much CSS.
&lt;/li&gt;&lt;li&gt;Test other TinyMCE plugins.
&lt;/li&gt;&lt;li&gt;Test on the front-end (wp_editor).
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>26952.patch attached to Ticket #26952</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Sun, 16 Feb 2014 22:56:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26952/26952.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26952/26952.patch/1392591383607387</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27003 (Introduce wp_get_network() and begin cleanup of multisite load) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 16 Feb 2014 22:53:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27003#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27003#comment:15/1392591206905810</guid>
      <description>&lt;p&gt;
I like where &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/27003/27003.13.diff" title="Attachment '27003.13.diff' in Ticket #27003"&gt;27003.13.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/27003/27003.13.diff" title="Download"&gt;â€‹&lt;/a&gt; is going. To sum up:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;If the network and site is defined, use it.
&lt;/li&gt;&lt;li&gt;If additional sites are paths of a primary network domain, lookup the network before finding the site.
&lt;/li&gt;&lt;li&gt;If additional sites are different domains (or subdomains), lookup the site before finding the network. (The site tells us what its parent network is)
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
So much cleaner.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;get_site_by_path()&lt;/code&gt; and the changes to &lt;code&gt;get_network_by_path()&lt;/code&gt; look great so far. I'm still parsing in detail. Seems it would be fairly straightforward to add caching to each of these based on the requested args. The filters are going to go a ways toward reducing the use of sunrise entirely for domain lookups.
&lt;/p&gt;
&lt;p&gt;
I wonder if there's a place for a "every thing you're looking for" cache key after step 1 and before steps 2/3 that is able to retrieve site and network information based on the requested domain/path or if the processing required to extract the requested domain/path makes it not worth the effort.
&lt;/p&gt;
&lt;p&gt;
The patch also addresses the no networks issue raised by @TobiasBg with a &lt;code&gt;ms_not_installed()&lt;/code&gt; if 0 rows are found.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25623 (The design of update_option etc makes race conditions likely to happen) updated</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Sun, 16 Feb 2014 22:37:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25623#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25623#comment:5/1392590228711486</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/25623#comment:2" title="Comment 2"&gt;wonderboymusic&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Would it be possible for you to create a unit test demonstrating this issue, potentially with a fix?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
IMO this is too early to start writing any code - it was more about the discussion to see if this is something that _should_ be tackled. The problem is not necessarily a "bug" in the usual sense that there is something that can be fixed. Running code in parallel is always going to be a problem with WordPress, however it's more that &lt;code&gt;all_options&lt;/code&gt; makes overwrites a lot more likely. I was hoping to get some dev feedback as to whether this issue is "serious" enough to warrant at upheaval of how the &lt;code&gt;options&lt;/code&gt; object caching is handled.
&lt;/p&gt;
&lt;p&gt;
Unit tests would at least be good to demonstrate the issue to side-effects when calling &lt;code&gt;update_option&lt;/code&gt; with a race condition. However, I am not sure exactly how we do that from PHPUnit with the current setup. One idea: use a remote request back to the install to update an option, then call &lt;code&gt;update_option&lt;/code&gt; after the script has returning, and observe that the remote request's &lt;code&gt;update_option&lt;/code&gt; is lost form the object cache. This requires a web server in the unit test (which I don't *think* we currently have) and also running the tests with Persistent Object Caching (which I am not sure we currently have).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27139 (Image caption disappears if images are rearranged immediately after ...) updated</title>
      
        <dc:creator>cfinke</dc:creator>

      <pubDate>Sun, 16 Feb 2014 22:03:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27139#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27139#comment:3/1392588216662064</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27139#comment:2" title="Comment 2"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'd be curious to know if this is reproducible in 3.5, or if it regressed at some point since then.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, confirmed just now that it is reproducible in 3.5 as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22694 (Can't upload a file with an apostrophe in name) updated</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Sun, 16 Feb 2014 21:26:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22694#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22694#comment:9/1392586014722642</guid>
      <description>&lt;p&gt;
I can duplicate this one, ran into it on a clean 3.8.1 with very little else :(
&lt;/p&gt;
&lt;p&gt;
magic_quotes_gpc is off (verified it). PHP 5.4.24
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27086 (Make auth-check logins work with 1Password) updated</title>
      
        <dc:creator>mannieschumpert</dc:creator>

      <pubDate>Sun, 16 Feb 2014 18:53:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27086#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27086#comment:5/1392576818299439</guid>
      <description>&lt;p&gt;
The problem with filling in every text input does seem to have been solved, but yes, auto-submitting seems to be disabled.
&lt;/p&gt;
&lt;p&gt;
Definitely an improvement though!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27003.13.diff attached to Ticket #27003</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 16 Feb 2014 17:31:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27003/27003.13.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27003/27003.13.diff/1392571887968125</guid>
      <description>&lt;p&gt;
Adds hypothetical filters for short-circuiting, for governing how many path segments to consider, etc.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27116 (Some nav tab and media upload CSS broken in colors.css/wp-admin.css merge) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Sun, 16 Feb 2014 14:11:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27116#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27116#comment:10/1392559868995802</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27116#comment:9" title="Comment 9"&gt;TobiasBg&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The updated &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/27116/27116.4.patch" title="Attachment '27116.4.patch' in Ticket #27116"&gt;27116.4.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/27116/27116.4.patch" title="Download"&gt;â€‹&lt;/a&gt; takes care of the background spill seen in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/27116/nav-tab-active-background-shine-through.png" title="Attachment 'nav-tab-active-background-shine-through.png' in Ticket #27116"&gt;nav-tab-active-background-shine-through.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/27116/nav-tab-active-background-shine-through.png" title="Download"&gt;â€‹&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'll manually apply the patch after &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26669" title="#26669: enhancement: wp-admin.css should be broken up into modules (closed: fixed)"&gt;#26669&lt;/a&gt; is done - I'm most of the way through it so can't apply patches to wp-admin.css right now :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26675 (Rewrite of get_media_embedded_in_content() function to produce ...) updated</title>
      
        <dc:creator>Kopepasah</dc:creator>

      <pubDate>Sun, 16 Feb 2014 13:00:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26675#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26675#comment:4/1392555633733861</guid>
      <description>&lt;p&gt;
Nacin, great suggestions. I will submit another patch based on those.
&lt;/p&gt;
&lt;p&gt;
For the images, should I add an additional parameter or a filter. I personally vote filter, as this will allow users to not only add additional media types to search for (e.g. img), but also search for a specific media type (e.g. iframe) or multiple types (e.g. audio &amp;amp; video). With that being said, it will also allow for searching for any HTML element if a users sets the filter that way, but that could be edge case.
&lt;/p&gt;
&lt;p&gt;
What do you think?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26674 (The get_tag_regex() function is a too greedy when searching for a ...) updated</title>
      
        <dc:creator>Kopepasah</dc:creator>

      <pubDate>Sun, 16 Feb 2014 12:52:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26674#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26674#comment:9/1392555165450626</guid>
      <description>&lt;p&gt;
Hey Nacin, sorry for the delayed reply. Just moved to Korea and finally getting settled in.
&lt;/p&gt;
&lt;p&gt;
The initial patch for this ticket is still my suggestion. I am going to make some changes on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26675" title="#26675: enhancement: Rewrite of get_media_embedded_in_content() function to produce ... (closed: fixed)"&gt;#26675&lt;/a&gt; based on your suggestions, but that does not affect how get_tag_regex() should work.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27116 (Some nav tab and media upload CSS broken in colors.css/wp-admin.css merge) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Sun, 16 Feb 2014 12:34:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27116#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27116#comment:9/1392554088080627</guid>
      <description>&lt;p&gt;
nacin fixed the media uploader thickbox issue in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27181" title="Rename the old media.css file, used for the pre-3.5 media library. ..."&gt;[27181]&lt;/a&gt; for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26669" title="#26669: enhancement: wp-admin.css should be broken up into modules (closed: fixed)"&gt;#26669&lt;/a&gt; in the meantime.
&lt;/p&gt;
&lt;p&gt;
The updated &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/27116/27116.4.patch" title="Attachment '27116.4.patch' in Ticket #27116"&gt;27116.4.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/27116/27116.4.patch" title="Download"&gt;â€‹&lt;/a&gt; takes care of the background spill seen in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/27116/nav-tab-active-background-shine-through.png" title="Attachment 'nav-tab-active-background-shine-through.png' in Ticket #27116"&gt;nav-tab-active-background-shine-through.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/27116/nav-tab-active-background-shine-through.png" title="Download"&gt;â€‹&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27116.4.patch attached to Ticket #27116</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Sun, 16 Feb 2014 12:34:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27116/27116.4.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27116/27116.4.patch/1392554070554919</guid>
      <description>&lt;p&gt;
Fix remaining background color spill
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>patch.diff attached to Ticket #26827</title>
      
        <dc:creator>bansod_deven</dc:creator>

      <pubDate>Sun, 16 Feb 2014 09:23:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26827/patch.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26827/patch.diff/1392542610762239</guid>
      <description>&lt;p&gt;
Patch for the Bug ! Hope it Works ! Just Changed the Delimiter from ' ! ' to ' ` '
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>27003.12.diff attached to Ticket #27003</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 16 Feb 2014 08:44:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27003/27003.12.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27003/27003.12.diff/1392540266927913</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27086 (Make auth-check logins work with 1Password) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 16 Feb 2014 08:00:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27086#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27086#comment:4/1392537607126714</guid>
      <description>&lt;p&gt;
Some news! 1Password extension 4.2 Beta is out, and it appears to fix this. Please test and leave feedback here!
&lt;/p&gt;
&lt;p&gt;
You can get the beta at &lt;a class="ext-link" href="https://agilebits.com/browsers/index.html"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://agilebits.com/browsers/index.html&lt;/a&gt;, clicking "Enable betas" below the big install button. In Chrome you end up with two extensions installed, so it's easy to switch back to stable.
&lt;/p&gt;
&lt;p&gt;
Note that I can't get the extension to auto-submit logins, but that may be like that for debugging the beta. I've asked that question upstream.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27139 (Image caption disappears if images are rearranged immediately after ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 16 Feb 2014 07:55:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27139#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27139#comment:2/1392537303425370</guid>
      <description>&lt;p&gt;
I'd be curious to know if this is reproducible in 3.5, or if it regressed at some point since then.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26050 (Continual Admin Page POST (HeartBeats?) Can Cause SQL Connection Issues) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 16 Feb 2014 07:46:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26050#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26050#comment:13/1392536784657212</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26050#comment:11" title="Comment 11"&gt;lisota&lt;/a&gt;:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We'll will recreate the load in a semi-controlled manner by starting with no post editing and then suddenly editing lots of post simultaneously so that we can demonstrate the effect that the post locking heartbeat is having on our CPU.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Please don't waste too much time simulating this. I believe you that you're having problems, but a CPU graph alone won't help us. We need to know what specifically is causing the problem.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26050#comment:10" title="Comment 10"&gt;heydonovan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26050#comment:8" title="Comment 8"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
That's exactly what we were thinking. Instead of writing to the database, check for persistent caching, and write the &lt;code&gt;_edit_lock&lt;/code&gt; modifications straight to memcached.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26050#comment:9" title="Comment 9"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
We do know that when a ton of authors are editing a bunch of different posts, the load average on the server almost quadruples. I've enabled POST logging, and about 95% of the requests within that time period are from "wp-refresh-post-lock". Looking at some of our logs, I can see it was requested more than 5000+ times, so that would account for a lot of posts being edited at once. I'll see if I can dig up some more data.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Each call has up to three SELECT queries and one UPDATE query for the request, as a result of get_post() and update_postmeta(). The SELECT queries (and the WHERE clause of the UPDATE) all hit indexes that are both well-established and small. The UPDATE query does not write to an indexed field and thus won't force an update of the index. These counts do not include the loading of WordPress, which depending on the environment, setup, plugins, etc., could range anywhere from dirt cheap to absurdly expensive.
&lt;/p&gt;
&lt;p&gt;
At the moment, I am more inclined to think this problem is peculiar to the site or environment, and not to the load. I have no qualms with being proven wrong, but I haven't heard a complaint from other hosting companies and this is the first inkling I've heard from WPEngine. 5000 times a day is still only one request every 17 seconds and just 5000 UPDATE queries, which even a crappy shared hosting box would absorb without blinking. I ran these queries on a site with a few tens of thousands of postmeta records and the indexes laughed at me. How fast are these queries running for you? How many rows are in the wp_postmeta table? I don't have access to my massive test database until I'm home later this week, but I don't expect it to be a problem; these are some of the most basic queries WordPress runs. Does the table CHECK out okay? Is the table optimized?
&lt;/p&gt;
&lt;p&gt;
The issue I see here with going to memcached (which, from an API perspective, is totally doable) is that would imply the DB write queries are the problem. The limited evidence thus far only points to generic load issues. We need to know what's actually causing that load. Is it the FPM (?) process that's taking a long time, or is MySQL the bottleneck? Is it network lag in hitting the DB server? (Assuming the DB is on a separate server.) Is it somehow fetching and invalidating data from memcached that's actually somehow slow?
&lt;/p&gt;
&lt;p&gt;
If you remove the post locking action, are other heartbeat requests affected? Are other admin-ajax requests affected? Are other POST requests affected? I've heard stories of people having post saves take forever, and then a developer goes in and realizes that about fifteen seconds worth of queries and calculations are being performed on every save by a plugin, entirely accidentally. Is it even *these* requests that are the slow ones, or is the issue cache invalidation and then some kind of race condition for frontend requests (which is one way traffic could play a role in this)?
&lt;/p&gt;
&lt;p&gt;
A periodic POST request that results in a few select queries and a single, simple write query should not in and of itself cause problems. Many different avenues to pursue here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27139 (Image caption disappears if images are rearranged immediately after ...) updated</title>
      
        <dc:creator>cfinke</dc:creator>

      <pubDate>Sun, 16 Feb 2014 05:21:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27139#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27139#comment:1/1392528093106508</guid>
      <description>&lt;p&gt;
Oh, browser details: The screencast and described behavior are in Firefox 27 on Mac OS X 10.9.1.
&lt;/p&gt;
&lt;p&gt;
In Chrome 32 on Mac OS X 10.9.1, the behavior is a little different: If you drag and drop the image that you just added the caption to, the caption is not lost. However, if you drag and drop another image, even if it doesn't change the location of the captioned image, the caption is lost.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27139 (Image caption disappears if images are rearranged immediately after ...) created</title>
      
        <dc:creator>cfinke</dc:creator>

      <pubDate>Sun, 16 Feb 2014 05:13:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27139</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27139/1392527584708986</guid>
      <description>&lt;p&gt;
&lt;strong&gt;Steps to reproduce (screencast here: &lt;a class="ext-link" href="http://youtu.be/MF2SEn_lMeQ"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://youtu.be/MF2SEn_lMeQ&lt;/a&gt;):&lt;/strong&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;While editing a post, open the Add Media dialog.
&lt;/li&gt;&lt;li&gt;Upload (or select) two images and choose "Create Gallery."
&lt;/li&gt;&lt;li&gt;Click "Create New Gallery".
&lt;/li&gt;&lt;li&gt;Add a caption to the first image in the text field underneath the image preview in the main "Edit Gallery" area.
&lt;/li&gt;&lt;li&gt;Drag the second image so that it is reordered in front of the first image.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
&lt;strong&gt;What I expected:&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
The images would be reordered and the image captions would not be changed.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;What actually happened:&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
The images were reordered, but the image caption I had just entered reverted to its previous state.
&lt;/p&gt;
&lt;p&gt;
Clicking in any other text field before reordering images seems to "cement" the caption, but you can click on multiple images before dragging an image, and the caption will still revert.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Tickets #9775,â€‹27138 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 16 Feb 2014 05:09:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=9775%2C27138</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=9775%2C27138/1392527353957575</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9775" title="#9775: enhancement: Duplicate comment check is too strict (closed: fixed)"&gt;#9775&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #22694 (Can't upload a file with an apostrophe in name) reopened</title>
      
        <dc:creator>sfoxe</dc:creator>

      <pubDate>Sun, 16 Feb 2014 04:21:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22694#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22694#comment:8/1392524514440188</guid>
      <description>&lt;p&gt;
I just encountered this bug using Wordpress 3.8.1, and uploading a file with an apostrophe in the filename. Removing the apostrophe allowed the file to be uploaded.
&lt;/p&gt;
&lt;p&gt;
Has this bug crept back into the codebase somehow??
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/22694" title="#22694: defect (bug): Can't upload a file with an apostrophe in name (reopened)"&gt;ianatkins&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
When uploading a file with an apostrophe in the filename wordpress returns a 'HTTP Error' message.
&lt;/p&gt;
&lt;p&gt;
I have replicated this on two separate installs of wordpress, on different LAMP hosting environments.
&lt;/p&gt;
&lt;p&gt;
The filename used for testing was Trend_Forecaster's_Handbook_1.jpg
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #12009 (Add support for HTML 5 "async" and "defer" attributes) updated</title>
      
        <dc:creator>webaware</dc:creator>

      <pubDate>Sun, 16 Feb 2014 03:19:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12009#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12009#comment:24/1392520794331475</guid>
      <description>&lt;p&gt;
A further complication: CloudFlare Rocketscript. This is a service that compresses and bundles scripts from your website into a single download. It does this by replacing your script elements with ones that look like this:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;&amp;lt;script type='text/rocketscript' data-rocketsrc='http://example.com/path/to/src.js?ver=1.0'&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
After the page has loaded, Rocketscript collects those elements all together and loads / executes the scripts. Which means scripts that don't like being loaded asynchronously break of course.
&lt;/p&gt;
&lt;p&gt;
To disable Rocketscript for specific scripts, you can add an attribute &lt;code&gt;data-cfasync="false"&lt;/code&gt; as per this support note:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://support.cloudflare.com/hc/en-us/articles/200169436"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://support.cloudflare.com/hc/en-us/articles/200169436&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;However&lt;/strong&gt;: it only works if the attribute comes &lt;strong&gt;before&lt;/strong&gt; the src attribute.
&lt;/p&gt;
&lt;p&gt;
So I like Toscho's solution, but with &lt;code&gt;$extra&lt;/code&gt; added into the script element before the src attribute, not after it.
&lt;/p&gt;
&lt;p&gt;
FYI: this is how I solved the problem for a plugin user, without such extra attribute support; nasty but effective. I'd love to offer a better solution :)
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://gist.github.com/webaware/8949605"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://gist.github.com/webaware/8949605&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27138 (Disable duplicate trigger) created</title>
      
        <dc:creator>RSalnikov</dc:creator>

      <pubDate>Sun, 16 Feb 2014 02:34:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27138</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27138/1392518077052951</guid>
      <description>&lt;p&gt;
Add opportunity to disabled check a duplicate commentaries. When trying to check action "comment_duplicate_trigger", show that function is not exist. Check of function is placed in functions.php
Thx for help and sorry for my english;)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23805 (wp_ajax_add_menu_item() closed to user-created menu item types) updated</title>
      
        <dc:creator>GregLone</dc:creator>

      <pubDate>Sun, 16 Feb 2014 02:32:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23805#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23805#comment:2/1392517942315359</guid>
      <description>&lt;p&gt;
I second that.
&lt;/p&gt;
&lt;p&gt;
I have a plugin (&lt;a class="ext-link" href="http://wordpress.org/plugins/sf-archiver/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.org/plugins/sf-archiver/&lt;/a&gt;) that builds a custom type, like @GaryJ. So far I couldn't find a way to avoid 2 php notices because of that problem (the variable &lt;code&gt;$_object&lt;/code&gt; is not set).
Another way would be to add a filter in the switch, in a &lt;code&gt;default:&lt;/code&gt; statement. Perhaps something like that:
&lt;/p&gt;
&lt;pre class="wiki"&gt;    default :
        $_object = apply_filters( 'ajax_' . $menu_item_data['menu-item-type'] . '_menu_item_object', false, $menu_item_data );
    break;
}
if ( $_object ) {
    $_menu_item = wp_setup_nav_menu_item( $_object );
    // Restore the missing menu item properties
    $menu_item_data['menu-item-description'] = $_menu_item-&amp;gt;description;
}
&lt;/pre&gt;&lt;p&gt;
I guess something else would be needed for non-ajax.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26050 (Continual Admin Page POST (HeartBeats?) Can Cause SQL Connection Issues) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 16 Feb 2014 01:32:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26050#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26050#comment:12/1392514375743564</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
We will recreate the load in a semi-controlled manner by starting with no post editing and then suddenly editing lots of post simultaneously...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It would be good if you could repeat this test with and without post locking enabled so there is a straight comparison.
&lt;/p&gt;
&lt;p&gt;
It is still strange that increasing these AJAX requests by about 60% has such effect. Is there anything else running only when &lt;code&gt;DOING_AJAX&lt;/code&gt; is defined?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26050 (Continual Admin Page POST (HeartBeats?) Can Cause SQL Connection Issues) updated</title>
      
        <dc:creator>lisota</dc:creator>

      <pubDate>Sun, 16 Feb 2014 00:47:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26050#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26050#comment:11/1392511650496595</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26050#comment:9" title="Comment 9"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
The reply from heydonovan is from our ISP (WPEngine). We'll will recreate the load in a semi-controlled manner by starting with no post editing and then suddenly editing lots of post simultaneously so that we can demonstrate the effect that the post locking heartbeat is having on our CPU. Will post results here when we've completed that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27073 (Can not see Themes in Live Preview) updated</title>
      
        <dc:creator>sbr1115</dc:creator>

      <pubDate>Sun, 16 Feb 2014 00:44:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27073#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27073#comment:6/1392511499571261</guid>
      <description>&lt;p&gt;
the problem is NOT a specific theme or plugin in MY case. It doesn't work with any. All plugins were off. I do not understand why I can not see any theme active or not with live preview. When I first started with all of this it was working fine. Nothing changed from the time it worked to the next time I went to use it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27136 (Installed plugin and theme search searched html) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Sun, 16 Feb 2014 00:41:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27136#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27136#comment:1/1392511265078550</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Heh, nice find! Tested and confirmed the fix.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26669 (wp-admin.css should be broken up into modules) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 16 Feb 2014 00:35:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26669#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26669#comment:15/1392510913495853</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27181" title="Rename the old media.css file, used for the pre-3.5 media library. ..."&gt;27181&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Rename the old media.css file, used for the pre-3.5 media library. Clean up script-loader CSS registrations.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26669" title="#26669: enhancement: wp-admin.css should be broken up into modules (closed: fixed)"&gt;#26669&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [27181]: Rename the old media.css file, used for the pre-3.5 media library. ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 16 Feb 2014 00:35:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27181</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27181/1392510912470617</guid>
      <description>&lt;p&gt;
Rename the old media.css file, used for the pre-3.5 media library. Clean up script-loader CSS registrations.
&lt;/p&gt;
&lt;p&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26669" title="#26669: enhancement: wp-admin.css should be broken up into modules (closed: fixed)"&gt;#26669&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #26050 (Continual Admin Page POST (HeartBeats?) Can Cause SQL Connection Issues) updated</title>
      
        <dc:creator>heydonovan</dc:creator>

      <pubDate>Sun, 16 Feb 2014 00:31:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26050#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26050#comment:10/1392510687227082</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26050#comment:8" title="Comment 8"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
That's exactly what we were thinking. Instead of writing to the database, check for persistent caching, and write the
&lt;code&gt;_edit_lock&lt;/code&gt; modifications straight to memcached.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26050#comment:9" title="Comment 9"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
We do know that when a ton of authors are editing a bunch of different posts, the load average on the server almost quadruples. I've enabled POST logging, and about 95% of the requests within that time period are from "wp-refresh-post-lock". Looking at some of our logs, I can see it was requested more than 5000+ times, so that would account for a lot of posts being edited at once. I'll see if I can dig up some more data.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26580 (Add filters to WP_MS_Sites_List_Table::prepare_items()) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Sun, 16 Feb 2014 00:29:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26580#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26580#comment:3/1392510563795234</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/25338" title="#25338: enhancement: Comments of password-protected posts should not be shown to logged-in ... (new)"&gt;#25338&lt;/a&gt; is related in the sense that there's this general trend of wanting to be able to easily filter &lt;code&gt;prepare_items()&lt;/code&gt;. I think it would be interesting to see a patch (that would also solve pagination, total items, etc.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18400 (Suggested label change for "Stick this post to the front page") updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Sun, 16 Feb 2014 00:22:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18400#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18400#comment:6/1392510152521522</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>18400.2.diff attached to Ticket #18400</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Sun, 16 Feb 2014 00:21:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18400/18400.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18400/18400.2.diff/1392510117384743</guid>
      <description>&lt;p&gt;
Refresh patch against trunk
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15397 (redirect_guess_404_permalink() doesn't guess posts with updated dates) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Sun, 16 Feb 2014 00:12:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15397#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15397#comment:12/1392509569330249</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I like the idea of storing some small number of date changes in post meta, and only performing the redirect if the post has an old matching date. It seems like the least magic option.
&lt;/p&gt;
&lt;p&gt;
We can offer some level of customization by allowing the number of dates store to be configurable (&lt;code&gt;__return_zero&lt;/code&gt; would disable completely)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25338 (Comments of password-protected posts should not be shown to logged-in ...) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Sun, 16 Feb 2014 00:03:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25338#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25338#comment:1/1392509033928653</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the report. At this time, it wouldn't be easy to filter out comments from password-protected posts because &lt;code&gt;get_comments()&lt;/code&gt; is relatively decoupled from the state of whether or not a post requires a password.
&lt;/p&gt;
&lt;p&gt;
Technically-speaking, the most straightforward way to do this would be to join on the posts table and filter based on the value of the &lt;code&gt;post_password&lt;/code&gt; column. The performance of this approach would need to be assessed. Additionally, I'd recommend this change be made within &lt;code&gt;WP_Comments_List_Table-&amp;gt;prepare_items()&lt;/code&gt;, instead of being added as a new feature of &lt;code&gt;WP_Comment_Query&lt;/code&gt;. It's a better pattern to perform the capability check outside of the API.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27133 (Redundant type casting in wp_get_object_terms) updated</title>
      
        <dc:creator>OriginalEXE</dc:creator>

      <pubDate>Sun, 16 Feb 2014 00:03:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27133#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27133#comment:4/1392509021768497</guid>
      <description>&lt;p&gt;
Yeah you're right about that, good point, thanks for clearing it up.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14215 (MultiSite: Add new &gt; different username from blog title) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Sat, 15 Feb 2014 23:11:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14215#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14215#comment:5/1392505914382020</guid>
      <description>&lt;p&gt;
What about we decouple the behaviors of creating new sites and users? Instead, the behavior would be to add your "First Administrator", and you'd choose between an existing user or explicitly creating a new user. Something like this mockup:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://core.trac.wordpress.org/raw-attachment/ticket/14215/2014-02-15%20at%203.03%20PM.png"&gt;&lt;img src="https://core.trac.wordpress.org/raw-attachment/ticket/14215/2014-02-15%20at%203.03%20PM.png" alt="https://core.trac.wordpress.org/raw-attachment/ticket/14215/2014-02-15%20at%203.03%20PM.png" crossorigin="anonymous" title="https://core.trac.wordpress.org/raw-attachment/ticket/14215/2014-02-15%20at%203.03%20PM.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Personally, I'm always afraid of entering the wrong email address. The auto-complete helps, but I think the two behaviors (create a site vs. create a user) should be completely decoupled.
&lt;/p&gt;
&lt;p&gt;
And, having just said that, maybe the "Add New Site" form should only permit selecting an existing user.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20438 (Custom Post Types with Post Format support aren't registered against ...) closed</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Sat, 15 Feb 2014 23:09:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20438#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20438#comment:7/1392505778534415</guid>
      <description>wontfix</description>
      <category>closedticket</category>
    </item><item>
      <title>2014-02-15 at 3.03 PM.png attached to Ticket #14215</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Sat, 15 Feb 2014 23:04:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14215/2014-02-15%20at%203.03%20PM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14215/2014-02-15%20at%203.03%20PM.png/1392505458883699</guid>
      <description>&lt;p&gt;
Mockup of add existing vs. create new
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>27039.1.patch attached to Ticket #27039</title>
      
        <dc:creator>Frank Klein</dc:creator>

      <pubDate>Sat, 15 Feb 2014 22:53:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27039/27039.1.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27039/27039.1.patch/1392504806192345</guid>
      <description>&lt;p&gt;
Updated patch that fixes issues with the responsive small menu styles.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>27137.1.diff attached to Ticket #27137</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Sat, 15 Feb 2014 22:51:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27137/27137.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27137/27137.1.diff/1392504684862322</guid>
      <description>&lt;p&gt;
Remove the capability check in &lt;code&gt;get_edit_post_link()&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27137 (Remove required user context from `get_edit_post_link()`) created</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Sat, 15 Feb 2014 22:49:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27137</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27137/1392504581044366</guid>
      <description>&lt;p&gt;
In a manner similar to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27113" title="#27113: defect (bug): Explicitly assign menu term relationship in wp_update_nav_menu_item() ... (closed: fixed)"&gt;#27113&lt;/a&gt;, &lt;code&gt;get_edit_post_link()&lt;/code&gt; yields inconsistent behavior when used without a user context.
&lt;/p&gt;
&lt;p&gt;
For example, when using WP-CLI or a cron system to trigger email generation, use of &lt;code&gt;get_edit_post_link()&lt;/code&gt; will return an empty string.
&lt;/p&gt;
&lt;p&gt;
The pattern established in core is to check whether the current user can edit a given post before calling &lt;code&gt;get_edit_post_link()&lt;/code&gt; because the corresponding HTML will be broken otherwise.
&lt;/p&gt;
&lt;p&gt;
Removing the capability check won't introduce a security hole because WordPress institutes a capability check when loading the link.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27113 (Explicitly assign menu term relationship in wp_update_nav_menu_item() ...) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Sat, 15 Feb 2014 22:42:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27113#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27113#comment:5/1392504177745436</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>dashboard.php2.diff attached to Ticket #27132</title>
      
        <dc:creator>jackreichert</dc:creator>

      <pubDate>Sat, 15 Feb 2014 22:14:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27132/dashboard.php2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27132/dashboard.php2.diff/1392502465653077</guid>
      <description>&lt;p&gt;
This hides future posts form inside wp_dashboard_recent_posts()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27014 (Incorporate the TinyMCE tests into our JS tests) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 15 Feb 2014 22:02:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27014#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27014#comment:6/1392501720177043</guid>
      <description>&lt;p&gt;
Running the TinyMCE tests from Grunt automatically together with the core tests won't work.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;PhantomJS (used for core) cannot run TinyMCE properly. The reason is that a large part of TinyMCE deals with browser specific quirks and normalization. PhantomJS is WebKit based but is neither Chrome nor Safari. It works very well for "pure" JS but doesn't (and shouldn't) emulate browser specific quirks/problems with contenteditable, the DOM, etc.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Even if there is a JavaScript "runner" that emulates different browsers, don't think it will work well. We would be testing the quality of emulation together with the functionality in TinyMCE, and we need it for IE 7,8,9,10,11, latest Firefox, Chrome, Safari, iOS, Android, etc.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
In that terms the best option is to run the TinyMCE tests by hand in all browsers. In Grunt we could &lt;a class="ext-link" href="https://github.com/jjrdn/node-open"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;launch the browser&lt;/a&gt; from Node.js and run the tests. Not sure if we want to go there though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27132 (Activity module shown by default for 'subscribers' includes scheduled posts) updated</title>
      
        <dc:creator>jackreichert</dc:creator>

      <pubDate>Sat, 15 Feb 2014 21:59:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27132#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27132#comment:6/1392501589281528</guid>
      <description>&lt;p&gt;
So, the widget wp_dashboard_site_activity() uses two functions:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;wp_dashboard_recent_posts()
&lt;/li&gt;&lt;li&gt;wp_dashboard_recent_comments()
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The latter actually &lt;em&gt;does&lt;/em&gt; have roles in place. It will only preview the comment if the person has permission to read the post, and will only show "approve" option if they can edit it.
&lt;/p&gt;
&lt;p&gt;
So I'm not sure that my second patch is actually relevant. Thoughts?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27132 (Activity module shown by default for 'subscribers' includes scheduled posts) updated</title>
      
        <dc:creator>jackreichert</dc:creator>

      <pubDate>Sat, 15 Feb 2014 21:47:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27132#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27132#comment:5/1392500850387893</guid>
      <description>&lt;p&gt;
Thanks for the feedback helen. Instead of moving the function call up I put a condition around it to keep the order of the contents intact.
&lt;/p&gt;
&lt;p&gt;
I'll look into more roles for the functions now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>dashboard.php1.diff attached to Ticket #27132</title>
      
        <dc:creator>jackreichert</dc:creator>

      <pubDate>Sat, 15 Feb 2014 21:46:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27132/dashboard.php1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27132/dashboard.php1.diff/1392500773834419</guid>
      <description>&lt;p&gt;
Condition added around wp_dashboard_recent_comments
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>class-wp-plugins-list-table.diff attached to Ticket #27136</title>
      
        <dc:creator>enej</dc:creator>

      <pubDate>Sat, 15 Feb 2014 21:31:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27136/class-wp-plugins-list-table.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27136/class-wp-plugins-list-table.diff/1392499900350723</guid>
      <description>&lt;p&gt;
patch for the bug...
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27136 (Installed plugin and theme search searched html) created</title>
      
        <dc:creator>enej</dc:creator>

      <pubDate>Sat, 15 Feb 2014 21:27:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27136</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27136/1392499636730760</guid>
      <description>&lt;p&gt;
Currently if you search your installed plugins and type 'strong' it will return plugins that have anything bolded in the description of the plugin.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27014 (Incorporate the TinyMCE tests into our JS tests) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 15 Feb 2014 21:25:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27014#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27014#comment:5/1392499516821686</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27180" title="TinyMCE tests: remove 'coverage' for now, has unsatisfied ..."&gt;27180&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
TinyMCE tests: remove 'coverage' for now, has unsatisfied dependencies. Tweak the test runner so it auto-starts. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27014" title="#27014: enhancement: Incorporate the TinyMCE tests into our JS tests (closed: fixed)"&gt;#27014&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [27180]: TinyMCE tests: remove 'coverage' for now, has unsatisfied ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 15 Feb 2014 21:25:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27180</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27180/1392499515820887</guid>
      <description>&lt;p&gt;
TinyMCE tests: remove 'coverage' for now, has unsatisfied dependencies. Tweak the test runner so it auto-starts. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27014" title="#27014: enhancement: Incorporate the TinyMCE tests into our JS tests (closed: fixed)"&gt;#27014&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #27132 (Activity module shown by default for 'subscribers' includes scheduled posts) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Sat, 15 Feb 2014 21:20:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27132#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27132#comment:4/1392499202750951</guid>
      <description>&lt;p&gt;
kirrus: You should be able to use &lt;code&gt;remove_meta_box()&lt;/code&gt; to get rid of it in the interim - can dig up some code if you'd like.
&lt;/p&gt;
&lt;p&gt;
jackreichert: I'd probably just move the &lt;code&gt;wp_add_dashboard_widget()&lt;/code&gt; call up a few lines to be within the same conditional as Right Now, as I don't see anything particularly valuable for somebody who can't edit posts. That said, though, there should also be various cap checks within the widget itself, since people can be doing any number of things with caps and roles.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27127 (Improve plugin search on installed plugins page) updated</title>
      
        <dc:creator>enej</dc:creator>

      <pubDate>Sat, 15 Feb 2014 21:19:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27127#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27127#comment:2/1392499165840348</guid>
      <description>&lt;p&gt;
Hi John
&lt;/p&gt;
&lt;p&gt;
Do you think this feature is something that might end up in core?
&lt;/p&gt;
&lt;p&gt;
The latest patch I submitted contains:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Search for the plugin name and the description only. Since in the previous patch and your plugin the search looks at everything. So if you search for edit it would return all plugins instead of finding something like EditFlow. It would be better if it could search for plugin authors as well. The regular plugin search does search for plugin authors. But it also searches html. So if you search 'strong' it will return all the plugins that have something bolded in the description as well. I will submit a separate ticket and patch for that.
&lt;/li&gt;&lt;li&gt;The patch also tries to take into account for plugins that have been selected by the user. It keeps them shown even though they might not match the users selection. Since when someone selects a plugin they most likely want to preforms a bulk action. The search fails if you select everything. Also it doesn't hide the plugin if it is not part of search results and is unselected.
&lt;/li&gt;&lt;li&gt;If no plugins are found it displays the same no plugins found message as regular search.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
What this patch doesn't have.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Right now the patch does check if the page has pagination elements but it doesn't do an ajax call to the backend implemented. Also do we want to have search results paginated as well?
&lt;/li&gt;&lt;li&gt;This features could should also be implemented for the WordPress network.
&lt;/li&gt;&lt;li&gt;Also the JavaScript is currently inline. Should it be its own file or added to one of the existing WordPress JavaScript admin files?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
What I am not sure about is would it be best to develop this as a plugin and the try to do a patch to merge in to core? Or is it best to try to do a patch that gets merged into core right away? Right now I am trying to keep things simple by having the patch only modify one file.
&lt;/p&gt;
&lt;p&gt;
Also will this change require a JavaScript unit test and a PHP Unit test?
&lt;/p&gt;
&lt;p&gt;
Cheers
Enej
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27003.11.diff attached to Ticket #27003</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 15 Feb 2014 21:03:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27003/27003.11.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27003/27003.11.diff/1392498235000036</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Schermata 2014-02-15 alle 20.07.59.png attached to Ticket #27135</title>
      
        <dc:creator>stratboy</dc:creator>

      <pubDate>Sat, 15 Feb 2014 19:18:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27135/Schermata%202014-02-15%20alle%2020.07.59.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27135/Schermata%202014-02-15%20alle%2020.07.59.png/1392491929401910</guid>
      <description>&lt;p&gt;
broken connection
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27135 (get_post_galleries breaks server connection) created</title>
      
        <dc:creator>stratboy</dc:creator>

      <pubDate>Sat, 15 Feb 2014 19:18:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27135</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27135/1392491890267722</guid>
      <description>&lt;p&gt;
Hi. I'm testing locally with this:
&lt;/p&gt;
&lt;p&gt;
v3.8.1 with a custom theme (mine) almost empty.
firefox 27.0.1 (osx)
MAMP PRO
&lt;/p&gt;
&lt;p&gt;
I'm trying to use the media.php &amp;gt; get_post_galleries() function but it breaks the page: it hangs infinitely OR it immediately stops the connection.
&lt;/p&gt;
&lt;p&gt;
It happens in any case, I've tried:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;functions.php
&lt;/li&gt;&lt;li&gt;functions.php inside a 'post_gallery' filter
&lt;/li&gt;&lt;li&gt;single.php, just in the page
&lt;/li&gt;&lt;li&gt;both passing ID or $post object
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I taken a look to the function and progressively commented out code until I've found that what it breaks all is row 2030:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$gallery = do_shortcode_tag($shortcode);
&lt;/pre&gt;&lt;p&gt;
Hope it helps, regards.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #8592 (Private Pages not listed in the Parent dropdown) updated</title>
      
        <dc:creator>OSD</dc:creator>

      <pubDate>Sat, 15 Feb 2014 19:02:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8592#comment:168</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8592#comment:168/1392490954421538</guid>
      <description>&lt;p&gt;
Need help...
&lt;/p&gt;
&lt;p&gt;
When I create a new child page for a private parent page it's not possible to publish this new child page, it will go back to private.
&lt;/p&gt;
&lt;h2 id="solved"&gt;solved&lt;/h2&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27132 (Activity module shown by default for 'subscribers' includes scheduled posts) updated</title>
      
        <dc:creator>jackreichert</dc:creator>

      <pubDate>Sat, 15 Feb 2014 18:52:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27132#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27132#comment:3/1392490347821791</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In the attached patch I've encapsulated the query for future posts in a current_user_can condition.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>dashboard.php.diff attached to Ticket #27132</title>
      
        <dc:creator>jackreichert</dc:creator>

      <pubDate>Sat, 15 Feb 2014 18:51:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27132/dashboard.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27132/dashboard.php.diff/1392490277289423</guid>
      <description>&lt;p&gt;
Encapsulates the future activity in capabilities condition
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #3670 (Removing CDATA close tag ( ]]&gt; ) unbalances the CDATA block) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 15 Feb 2014 18:34:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3670#comment:64</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3670#comment:64/1392489279808436</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #3670,â€‹27134 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 15 Feb 2014 18:34:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=3670%2C27134</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=3670%2C27134/1392489258032086</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/3670" title="#3670: defect (bug): Removing CDATA close tag ( ]]&amp;gt; ) unbalances the CDATA block (new)"&gt;#3670&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #27134 (the_content() contains unexpected hard coded string replacement) created</title>
      
        <dc:creator>awelzel</dc:creator>

      <pubDate>Sat, 15 Feb 2014 18:02:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27134</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27134/1392487339899162</guid>
      <description>&lt;p&gt;
In wp-includes/post-template.php the function the_content() has an unexpected string replacemenet:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function the_content( $more_link_text = null, $strip_teaser = false) {
	$content = get_the_content( $more_link_text, $strip_teaser );
	$content = apply_filters( 'the_content', $content );
	$content = str_replace( ']]&amp;gt;', ']]&amp;amp;gt;', $content );
	echo $content;
}
&lt;/pre&gt;&lt;p&gt;
This makes no sense at all and breaks CDATA blocks. Why?
&lt;/p&gt;
&lt;p&gt;
Suggested solution: Remove the line
&lt;/p&gt;
&lt;pre class="wiki"&gt;	$content = str_replace( ']]&amp;gt;', ']]&amp;amp;gt;', $content );
&lt;/pre&gt;&lt;p&gt;
and implement a filter to do this replacement where neccessary.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #3670 (Removing CDATA close tag ( ]]&gt; ) unbalances the CDATA block) updated</title>
      
        <dc:creator>awelzel</dc:creator>

      <pubDate>Sat, 15 Feb 2014 17:54:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3670#comment:62</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3670#comment:62/1392486896056577</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/3670" title="#3670: defect (bug): Removing CDATA close tag ( ]]&amp;gt; ) unbalances the CDATA block (new)"&gt;scenic&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
I also suggest to make this a FILTER for RSS!
&lt;/p&gt;
&lt;p&gt;
It is just stupid to do this replacement without a filter. Why?
&lt;/p&gt;
&lt;p&gt;
I will open a new ticket for 3.8.1 - hopefully someone will notice it then.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>plugins.2.diff attached to Ticket #27127</title>
      
        <dc:creator>enej</dc:creator>

      <pubDate>Sat, 15 Feb 2014 17:47:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27127/plugins.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27127/plugins.2.diff/1392486460427545</guid>
      <description>&lt;p&gt;
Incomplete plugins quicksearch..
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27133 (Redundant type casting in wp_get_object_terms) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 15 Feb 2014 17:35:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27133#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27133#comment:3/1392485709835226</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27133 (Redundant type casting in wp_get_object_terms) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 15 Feb 2014 17:34:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27133#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27133#comment:2/1392485699224310</guid>
      <description>&lt;p&gt;
Blind type-casting can cause its own hidden issues. &lt;code&gt;(array) null&lt;/code&gt; produces &lt;code&gt;array()&lt;/code&gt; but &lt;code&gt;(array) false&lt;/code&gt; (length of 0) produces &lt;code&gt;array( 0 =&amp;gt; false )&lt;/code&gt; (length of 1). It's best to be explicit; is_array() is not exactly slow.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26050 (Continual Admin Page POST (HeartBeats?) Can Cause SQL Connection Issues) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 15 Feb 2014 17:28:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26050#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26050#comment:9/1392485291824010</guid>
      <description>&lt;p&gt;
This has received a decent amount of testing in both simulated situations and real environments. I would like to see some more data on what the reported problem is. "CPU hog" isn't really enough to go on. Is it MySQL connections? Queries? PHP processes? Memcache writes? What's causing this CPU load? Is it just load averages spiking, or is anything else unusual? This isn't an expensive process, and a request a second or whatever the average might be with a bunch of concurrent editors shouldn't by itself be a big issue. Front-end traffic also shouldn't be a major factor.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25782 (Admin bar does not display when going from the dashboard to the site ...) closed</title>
      
        <dc:creator>bansod_deven</dc:creator>

      <pubDate>Sat, 15 Feb 2014 17:14:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25782#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25782#comment:2/1392484440057354</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #27132 (Activity module shown by default for 'subscribers' includes scheduled posts) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sat, 15 Feb 2014 17:12:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27132#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27132#comment:2/1392484376535426</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Confirmed.
&lt;/p&gt;
&lt;p&gt;
In addition, the links for each post (which is an 'edit' link) do not have capability checks in place, resulting in dead links for users who cannot edit the posts.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27133 (Redundant type casting in wp_get_object_terms) updated</title>
      
        <dc:creator>OriginalEXE</dc:creator>

      <pubDate>Sat, 15 Feb 2014 16:50:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27133#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27133#comment:1/1392483028165710</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I have attached a patch removing the unnecessary type casting. It is, however, worth considering replacing all is_array() checks with direct type casting, which appears to be faster in php.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27133.patch attached to Ticket #27133</title>
      
        <dc:creator>OriginalEXE</dc:creator>

      <pubDate>Sat, 15 Feb 2014 16:47:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27133/27133.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27133/27133.patch/1392482867929301</guid>
      <description>&lt;p&gt;
Proposed improvement
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27133 (Redundant type casting in wp_get_object_terms) created</title>
      
        <dc:creator>OriginalEXE</dc:creator>

      <pubDate>Sat, 15 Feb 2014 16:46:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27133</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27133/1392482794403778</guid>
      <description>&lt;p&gt;
In wp_get_object_terms function (taxonomy.php), there is a redundant type casting to array after is_array() check has already been performed on that variable.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21113 (Previous/Next page links maintain all GET variables) updated</title>
      
        <dc:creator>kirrus</dc:creator>

      <pubDate>Sat, 15 Feb 2014 16:31:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21113#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21113#comment:13/1392481875464324</guid>
      <description>&lt;p&gt;
Oh, I also forgot, the main problem we were having was that this was leaking into the links, and scaring users, as their address bar suddenly contained useless (but scary looking) attack-type urls.
&lt;/p&gt;
&lt;p&gt;
Saying that, is there much point leaving this bug here, should it be closed as wontfix or invalid?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27132 (Activity module shown by default for 'subscribers' includes scheduled posts) updated</title>
      
        <dc:creator>kirrus</dc:creator>

      <pubDate>Sat, 15 Feb 2014 16:29:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27132#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27132#comment:1/1392481749009578</guid>
      <description>&lt;p&gt;
It's worth noting, that in order to disable, I've had to use a plugin that locks subscribers to profile.php, which means they no-longer see the warning about using the default generated password.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27132 (Activity module shown by default for 'subscribers' includes scheduled posts) created</title>
      
        <dc:creator>kirrus</dc:creator>

      <pubDate>Sat, 15 Feb 2014 16:27:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27132</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27132/1392481621410232</guid>
      <description>&lt;p&gt;
A subscriber can see upcoming posts in their wp-admin page;
&lt;a class="ext-link" href="https://twitter.com/ActionBcool/status/434710377419378689"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://twitter.com/ActionBcool/status/434710377419378689&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This is a problem for this specific site, because it can expose embargoed information, and get them into a lot of trouble. There doesn't appear to be a way to disable this function without a plugin currently.
&lt;/p&gt;
&lt;p&gt;
I'm not sure if this is a bug (information disclosure), or a feature request (please can you make it optional?).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27090 (WordPress XML-RPC method returns error but still posts) updated</title>
      
        <dc:creator>IndigoJo</dc:creator>

      <pubDate>Sat, 15 Feb 2014 11:07:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27090#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27090#comment:6/1392462476710833</guid>
      <description>&lt;p&gt;
The error string read "Error downloading &lt;a class="ext-link" href="http://www.blogistan.co.uk/blog/xmlrpc.php"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://www.blogistan.co.uk/blog/xmlrpc.php&lt;/a&gt; - server replied: Internal Server Error".
&lt;/p&gt;
&lt;p&gt;
It's happened every time I submit a post with Publish status using XML-RPC. Do the Wordpress apps for Android, iOS etc use the wp methods to submit posts? Last time I looked at the source code, they were still using the metaWeblog methods.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27131 (email address in the title breaks in quickedit) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Sat, 15 Feb 2014 09:21:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27131#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27131#comment:3/1392456093318874</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27131 (email address in the title breaks in quickedit) closed</title>
      
        <dc:creator>ryno267</dc:creator>

      <pubDate>Sat, 15 Feb 2014 08:44:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27131#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27131#comment:2/1392453874566431</guid>
      <description>invalid: &lt;p&gt;
Well sheeeet. cloudflare was enabled for our wiki subdomain (didn't know it was honestly) so turned it to bypass and flushed. Issue gone.
&lt;/p&gt;
&lt;p&gt;
My bad. thanks for the find Sergey! Cheers. closing
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #27131 (email address in the title breaks in quickedit) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 15 Feb 2014 08:31:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27131#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27131#comment:1/1392453071730052</guid>
      <description>&lt;p&gt;
That code is not a part of WordPress core.
&lt;/p&gt;
&lt;p&gt;
Looks like it might have to do with CloudFlare "E-mail address obfuscation" feature:
&lt;a class="ext-link" href="http://techblog.gregmarchal.com/strange-javascript-in-wordpress-quick-edit-comment/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://techblog.gregmarchal.com/strange-javascript-in-wordpress-quick-edit-comment/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27111 (Turning off global comments should include existing content) updated</title>
      
        <dc:creator>jackreichert</dc:creator>

      <pubDate>Sat, 15 Feb 2014 04:56:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27111#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27111#comment:3/1392440165416860</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
While the IRC discussion seems to imply that fulfilling this ticket should implement function that goes and turns off comments for each post, I thought that perhaps, instead, a new options flag may be cleaner. I tend to prefer to provide options that are not irrevocable. Switching all comments off, one post at a time, is hard to undo.
&lt;/p&gt;
&lt;p&gt;
The attached patch sets up a new option in the options table similar to 'default_comment_status' but would be global.
&lt;/p&gt;
&lt;p&gt;
The only thing missing from the patch is the line:
&lt;/p&gt;
&lt;pre class="wiki"&gt;INSERT INTO  `wordpress`.`wp_options` (`option_name` , `option_value`)
VALUES ('global_comment_status',  'open');
&lt;/pre&gt;&lt;p&gt;
I wasn't sure where/how to add that to the patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>global-comments-off.diff attached to Ticket #27111</title>
      
        <dc:creator>jackreichert</dc:creator>

      <pubDate>Sat, 15 Feb 2014 04:55:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27111/global-comments-off.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27111/global-comments-off.diff/1392440122239936</guid>
      <description>&lt;p&gt;
Provides functionality for global comments flag.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27131 (email address in the title breaks in quickedit) created</title>
      
        <dc:creator>ryno267</dc:creator>

      <pubDate>Sat, 15 Feb 2014 02:43:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27131</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27131/1392432216863945</guid>
      <description>&lt;p&gt;
I had some page titles with email addresses in them (dont ask) and when hit "quick edit" from the pages list I get this after the email in the title field in quickedit:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Using test@domain.com/* &amp;lt;![CDATA[ */(function(){try{var s,a,i,j,r,c,l,b=document.getElementsByTagName("script");l=b[b.length-1].previousSibling;a=l.getAttribute('data-cfemail');if(a){s='';r=parseInt(a.substr(0,2),16);for(j=2;a.length-j;j+=2){c=parseInt(a.substr(j,2),16)^r;s+=String.fromCharCode(c);}s=document.createTextNode(s);l.parentNode.replaceChild(s,l);}}catch(e){}})();/* ]]&amp;gt; */ Email
&lt;/pre&gt;&lt;p&gt;
Original title was "Using test@â€¦ Email"
&lt;/p&gt;
&lt;p&gt;
Very repeatable.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Make page with email address in title.
&lt;/li&gt;&lt;li&gt;view all pages: /wp-admin/edit.php
&lt;/li&gt;&lt;li&gt;click "Quick Edit"
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
If you update without cleaning it up.. all that code is now part of the title.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #25169 (Optimize all images / pngs in core) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Sat, 15 Feb 2014 01:28:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25169#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25169#comment:17/1392427683195141</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/25169#comment:8" title="Comment 8"&gt;jorbin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm using grunt-contrib-imagmin 0.4.1 rather than the newer 0.5 since 0.5 is using a new library that seems to throw errors on subsequent runs.   I'm looking into that upstream.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
From a quick bit of research it looks like the optional dependencies will fail a little more gracefully in v0.5.0 and going further upstream:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;grunt-contrib-imagemin&lt;/code&gt; currently has a dependency of &lt;code&gt;image-min&lt;/code&gt; v0.1.1
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;v~0.1.1&lt;/code&gt; has a dependency on &lt;code&gt;optipng-bin&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;v~0.1.2&lt;/code&gt; has &lt;code&gt;optipng-bin&lt;/code&gt; as an optional dependency
&lt;/li&gt;&lt;li&gt;&lt;code&gt;v~0.1.3&lt;/code&gt; removes the &lt;code&gt;optipng-bin&lt;/code&gt; dependency in favour of &lt;code&gt;pngquant-bin&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I submitted a pull request &lt;a class="ext-link" href="https://github.com/gruntjs/grunt-contrib-imagemin/pull/152"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/gruntjs/grunt-contrib-imagemin/pull/152&lt;/a&gt; to bump the &lt;code&gt;grunt-contrib-imagemin&lt;/code&gt; dependency of &lt;code&gt;image-min&lt;/code&gt; to &lt;code&gt;v0.1.3&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Maybe reclose this ticket and create a new one for updating core build to &lt;code&gt;grunt-contrib-imagmin&lt;/code&gt; to &lt;code&gt;v0.5.x&lt;/code&gt; once all the upstream issues are fixed? &lt;em&gt;(I can survive with the errors in Windows for a while)&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>