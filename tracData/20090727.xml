<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #10463 (Allow _wp_get_comment_list to handle custom comment types) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 27 Jul 2009 23:32:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10463#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10463#comment:7/1248737559000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This slightly interferes with the Trash functionality.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10463 (Allow _wp_get_comment_list to handle custom comment types) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 27 Jul 2009 23:28:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10463#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10463#comment:6/1248737295000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11748" title="Allow _wp_get_comment_list to handle custom comment types, props ..."&gt;[11748]&lt;/a&gt;) Allow _wp_get_comment_list to handle custom comment types, props aaroncampbell, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10463" title="#10463: defect (bug): Allow _wp_get_comment_list to handle custom comment types (closed: fixed)"&gt;#10463&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [11748]: Allow _wp_get_comment_list to handle custom comment types, props ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 27 Jul 2009 23:28:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11748</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11748/1248737293104362</guid>
      <description>&lt;p&gt;
Allow _wp_get_comment_list to handle custom comment types, props aaroncampbell, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10463" title="#10463: defect (bug): Allow _wp_get_comment_list to handle custom comment types (closed: fixed)"&gt;#10463&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10494 (wp_generate_attachment_metadata filter needs attachment ID) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 27 Jul 2009 23:08:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10494#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10494#comment:2/1248736133000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10494 (wp_generate_attachment_metadata filter needs attachment ID) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 27 Jul 2009 23:08:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10494#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10494#comment:1/1248736104000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11747" title="Add attachment ID to the wp_generate_attachment_metadata filter, props ..."&gt;[11747]&lt;/a&gt;) Add attachment ID to the wp_generate_attachment_metadata filter, props taco1991, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10494" title="#10494: enhancement: wp_generate_attachment_metadata filter needs attachment ID (closed: fixed)"&gt;#10494&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [11747]: Add attachment ID to the wp_generate_attachment_metadata filter, props ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 27 Jul 2009 23:08:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11747</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11747/1248736101575911</guid>
      <description>&lt;p&gt;
Add attachment ID to the wp_generate_attachment_metadata filter, props taco1991, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10494" title="#10494: enhancement: wp_generate_attachment_metadata filter needs attachment ID (closed: fixed)"&gt;#10494&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #7042 (Use exif rotation data when uploading pictures) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 27 Jul 2009 18:43:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7042#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7042#comment:9/1248720215000000</guid>
      <description>&lt;p&gt;
The replacement imagerotate() function is very slow with large images, it copies the image pixel by pixel. Perhaps we should do image rotate and flip only when it's available.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10497 (PHP safe-mode prevents WordPress from creating new directories) updated</title>
      
        <dc:creator>remi</dc:creator>

      <pubDate>Mon, 27 Jul 2009 18:43:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10497#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10497#comment:3/1248720212000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10497#comment:2" title="Comment 2"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
dup of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8830" title="#8830: defect (bug): wp_mkdir_p doesn't work with safe mode enabled (closed: fixed)"&gt;#8830&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I filed it as a new bug since it doesn't affect the same file. But yes, it's the same problem.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7042 (Use exif rotation data when uploading pictures) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 27 Jul 2009 18:32:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7042#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7042#comment:8/1248719553000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11746" title="Use exif rotation data when creating sub-sizes of uploaded jpeg ..."&gt;[11746]&lt;/a&gt;) Use exif rotation data when creating sub-sizes of uploaded jpeg images, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7042" title="#7042: feature request: Use exif rotation data when uploading pictures (closed: wontfix)"&gt;#7042&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [11746]: Use exif rotation data when creating sub-sizes of uploaded jpeg ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 27 Jul 2009 18:32:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11746</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11746/1248719550026911</guid>
      <description>&lt;p&gt;
Use exif rotation data when creating sub-sizes of uploaded jpeg images, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7042" title="#7042: feature request: Use exif rotation data when uploading pictures (closed: wontfix)"&gt;#7042&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #9610 (line breaks in functions.php result in invalid XML in RSS feed) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Mon, 27 Jul 2009 17:40:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9610#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9610#comment:14/1248716409000000</guid>
      <description>&lt;p&gt;
that too, but his sample code tells another story. :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10498 (RSS widget filters some characters) created</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Mon, 27 Jul 2009 17:29:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10498</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10498/1248715775000000</guid>
      <description>&lt;p&gt;
Hello, when inserting this RSS (&lt;a class="ext-link" href="http://servis.idnes.cz/rss.asp?c=mfd_k"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://servis.idnes.cz/rss.asp?c=mfd_k&lt;/a&gt;) into RSS widget then some characters are removed, for example č, í, ý, etc.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #9610 (line breaks in functions.php result in invalid XML in RSS feed) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Mon, 27 Jul 2009 17:01:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9610#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9610#comment:13/1248714076000000</guid>
      <description>&lt;p&gt;
A "fix" might be to leave off closing PHP tags in sample plugins and themes and encourage people to leave them off as best practice.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8830 (wp_mkdir_p doesn't work with safe mode enabled) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Mon, 27 Jul 2009 16:55:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8830#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8830#comment:8/1248713753000000</guid>
      <description>&lt;p&gt;
see also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10497" title="#10497: defect (bug): PHP safe-mode prevents WordPress from creating new directories (closed: fixed)"&gt;#10497&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10497 (PHP safe-mode prevents WordPress from creating new directories) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Mon, 27 Jul 2009 16:55:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10497#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10497#comment:2/1248713741000000</guid>
      <description>&lt;p&gt;
dup of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8830" title="#8830: defect (bug): wp_mkdir_p doesn't work with safe mode enabled (closed: fixed)"&gt;#8830&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10497 (PHP safe-mode prevents WordPress from creating new directories) updated</title>
      
        <dc:creator>remi</dc:creator>

      <pubDate>Mon, 27 Jul 2009 16:47:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10497#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10497#comment:1/1248713234000000</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9610 (line breaks in functions.php result in invalid XML in RSS feed) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Mon, 27 Jul 2009 16:46:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9610#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9610#comment:12/1248713207000000</guid>
      <description>&lt;p&gt;
Yes, but there's nothing one can do about it. A blank line is a blank line. Some XML parsers and validators, however, don't play well with blank lines inserted before the XML declaration. I'd suggest you complain with Feedburner and the W3C on this one. :-)
&lt;/p&gt;
&lt;p&gt;
Anyway, you can dodge the problem by issuing ob_start()/ob_end_clean() statements before and after including wp-settings.php, from within your wp-config.php file, at the risk of losing some plugin functionality if anything tries to override WP on the init hook.
&lt;/p&gt;
&lt;p&gt;
Apart from this, though, there truly is nothing that WP can do about it... The XML that gets output is perfectly valid, and WP in itself inserts no blank lines. If one gets added in a theme's functions.php file, well... there really isn't much that can be done, is there? We wouldn't even be able to tell the user without adding an output buffer in core... :-|
&lt;/p&gt;
&lt;p&gt;
I'd have left it open pending dev feedback had filosofo not closed it already. But I sincerely doubt it would have gotten fixed anyway... Picture a function.php file or a plugin that bails on a request, and tries to output something outside of WP depending on a $_GET parameter, and then die. PHP 5.2 platforms would then return fatal errors if instantiated objects are used on the shutdown hook, since the shutdown hook wouldn't be declared yet with its ob_flush procedure.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9610 (line breaks in functions.php result in invalid XML in RSS feed) closed</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Mon, 27 Jul 2009 16:43:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9610#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9610#comment:11/1248713024000000</guid>
      <description>invalid: &lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9610#comment:10" title="Comment 10"&gt;achmafooma&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
To me, this is definitely a bug either in how WP parses functions.php files or in how WP generates the XML for RSS / XML-RPC. A blank line in functions.php (even if this is incorrect/improper) should not inexplicably put a blank line on top of WP-generated XML and break RSS / XML-RPC!
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No, it's how PHP works.  Lines outside of closing PHP tags are printed.  As the active theme's functions.php file is always included, the extra line is always printed, causing the error.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #9610 (line breaks in functions.php result in invalid XML in RSS feed) reopened</title>
      
        <dc:creator>achmafooma</dc:creator>

      <pubDate>Mon, 27 Jul 2009 16:33:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9610#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9610#comment:10/1248712431000000</guid>
      <description>&lt;p&gt;
Denis-- I understand that the problem is set in motion by the issue in the theme's function.php..... BUT why on earth would an erroneous blank line in functions.php screw up both the RSS feeds and XML-RPC functionality? One should not effect the other like this.
&lt;/p&gt;
&lt;p&gt;
This gave me a huge amount of headache in tracking down the problem since nothing in my functions.php should have been effecting RSS/XML-RPC, and nothing in the way the problem presented itself (blank space at the start of the XML files) would have pointed me back to functions.php. I only figured it out when I stumbled upon this bug report.
&lt;/p&gt;
&lt;p&gt;
To me, this is definitely a bug either in how WP parses functions.php files or in how WP generates the XML for RSS / XML-RPC. A blank line in functions.php (even if this is incorrect/improper) should not inexplicably put a blank line on top of WP-generated XML and break RSS / XML-RPC!
&lt;/p&gt;
&lt;p&gt;
Don't want to get into a war here; another 'closed/worksforme' and I'll quietly drop it :-).
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #10463 (Allow _wp_get_comment_list to handle custom comment types) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Mon, 27 Jul 2009 16:03:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10463#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10463#comment:5/1248710584000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10082 (Shortcodes need a character separating them to work) updated</title>
      
        <dc:creator>godfreykfc</dc:creator>

      <pubDate>Mon, 27 Jul 2009 15:59:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10082#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10082#comment:37/1248710355000000</guid>
      <description>&lt;p&gt;
Ah. Got it. the patch command is the missing piece. Thanks :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>safemode-mkdir.diff attached to Ticket #10497</title>
      
        <dc:creator>remi</dc:creator>

      <pubDate>Mon, 27 Jul 2009 15:58:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10497/safemode-mkdir.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10497/safemode-mkdir.diff/1248710332000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10497 (PHP safe-mode prevents WordPress from creating new directories) created</title>
      
        <dc:creator>remi</dc:creator>

      <pubDate>Mon, 27 Jul 2009 15:58:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10497</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10497/1248710318000000</guid>
      <description>&lt;p&gt;
Running WordPress in safe-mode prevents the installation of plugins via the admin interface, because it is trying to create a new directory that ends with a "/", which is forbidden in safe-mode.
&lt;/p&gt;
&lt;p&gt;
I created a patch that apply &lt;code&gt;untrailingslashit&lt;/code&gt; to the path before creating it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10495 (swfupload file_exceeds_size_limit fails to take into consideration ...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Mon, 27 Jul 2009 15:48:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10495#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10495#comment:3/1248709723000000</guid>
      <description>&lt;p&gt;
that's even better, yeah. another one we may want to suggest for trouble shooting would be the memory_limit. frequently, it should be three times the size of the max upload size if any processing needs to occur.
&lt;/p&gt;
&lt;p&gt;
a few years back I've seem 3.2M images that needed to be resized spit out memory limit errors (@8M in this case, it was on a php4.2 server).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10496 (multiple shortcodes side by side do not display properly) closed</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Mon, 27 Jul 2009 15:37:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10496#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10496#comment:1/1248709059000000</guid>
      <description>duplicate: &lt;p&gt;
duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10082" title="#10082: defect (bug): Shortcodes need a character separating them to work (closed: fixed)"&gt;#10082&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10496 (multiple shortcodes side by side do not display properly) created</title>
      
        <dc:creator>cinemaduro</dc:creator>

      <pubDate>Mon, 27 Jul 2009 15:04:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10496</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10496/1248707098000000</guid>
      <description>&lt;p&gt;
if you have multiple shortcodes together (like three on a page) and they are NOT separated by a space, then some of the short codes will not display properly (they will display the text of the shortcode). This bug didn't exist in WP 2.7, and I believe was introduced with 2.8. You can see this forum post for a little more detail: &lt;a class="ext-link" href="http://wordpress.org/support/topic/293424?replies=3"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/293424?replies=3&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The fix for this is not as obvious as it may seem and can create hours of frustration.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10476 (Option to export .zip backup before auto upgrade of wp/plugins) updated</title>
      
        <dc:creator>williamsba1</dc:creator>

      <pubDate>Mon, 27 Jul 2009 13:40:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10476#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10476#comment:17/1248702008000000</guid>
      <description>&lt;p&gt;
So the question is, should the next export use the same WXR formatting, only expanded for server settings, etc?
&lt;/p&gt;
&lt;p&gt;
I'd be glad to start working on this feature request
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10495 (swfupload file_exceeds_size_limit fails to take into consideration ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 27 Jul 2009 12:37:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10495#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10495#comment:2/1248698234000000</guid>
      <description>&lt;p&gt;
I'm obviously not with it enough to actually read the current message...
&lt;/p&gt;
&lt;p&gt;
I'd prefer to change it to "This file is too big. Your PHP installation is limited to file uploads %s in size." possibly with ", see the 'post_size..' and 'upload_limit..' definitions in your php.ini" if technical details are wanted
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10495 (swfupload file_exceeds_size_limit fails to take into consideration ...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Mon, 27 Jul 2009 12:32:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10495#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10495#comment:1/1248697931000000</guid>
      <description>&lt;p&gt;
I'd personally suggest:
&lt;/p&gt;
&lt;p&gt;
upload_max_filesize is %1$s and post_max_size is %2$s
&lt;/p&gt;
&lt;p&gt;
Else we're bound to have users show up saying WP is reporting erroneous figures.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10495 (swfupload file_exceeds_size_limit fails to take into consideration ...) created</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 27 Jul 2009 12:21:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10495</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10495/1248697303000000</guid>
      <description>&lt;p&gt;
swfupload file_exceeds_size_limit's localisation string fails to take into consideration PHP's post_max_size ini setting, which may be smaller than upload_max_filesize on badly configured servers.
&lt;/p&gt;
&lt;p&gt;
The result for example, for this config:
&lt;/p&gt;
&lt;pre class="wiki"&gt;upload_max_filesize = 8M
post_max_size = 2M
&lt;/pre&gt;&lt;p&gt;
with a filesize of 4M - Result: "This file is too big. Your php.ini upload_max_filesize is 8M."
&lt;/p&gt;
&lt;p&gt;
changing &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-includes/script-loader.php#L193"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/browser/trunk/wp-includes/script-loader.php#L193&lt;/a&gt;
from
&lt;/p&gt;
&lt;pre class="wiki"&gt;sprintf(__('This file is too big. Your php.ini upload_max_filesize is %s.'), @ini_get('upload_max_filesize')),
&lt;/pre&gt;&lt;p&gt;
to
&lt;/p&gt;
&lt;pre class="wiki"&gt;sprintf(__('This file is too big. Your php.ini upload_max_filesize is %s.'), min(@ini_get('upload_max_filesize'), @ini_get('post_max_size')) ),
&lt;/pre&gt;&lt;p&gt;
might be a workable solution..
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10376 (White space should be collapsed after tags are stripped in wp_trim_excerpt) updated</title>
      
        <dc:creator>sojweb</dc:creator>

      <pubDate>Mon, 27 Jul 2009 12:09:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10376#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10376#comment:14/1248696556000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10376#comment:13" title="Comment 13"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Yayaya, and "If it was hard for me to write it, it should be hard for them to understand it!" Still... :-)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ha, exactly!
&lt;/p&gt;
&lt;p&gt;
No, I'm totally with you... readability is worth the extra line.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10483 (Change post_name's length from 200 to 400) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Mon, 27 Jul 2009 11:18:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10483#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10483#comment:3/1248693501000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10483#comment:2" title="Comment 2"&gt;elnur&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
But I might be wrong in trying to change &lt;code&gt;post_name&lt;/code&gt;'s length to &lt;strong&gt;400&lt;/strong&gt;. I remembered that &lt;code&gt;varchar&lt;/code&gt; can't hold more than 255 chars. Isn't that true?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
yeah, until Mysql 5
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10483 (Change post_name's length from 200 to 400) updated</title>
      
        <dc:creator>elnur</dc:creator>

      <pubDate>Mon, 27 Jul 2009 11:02:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10483#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10483#comment:2/1248692545000000</guid>
      <description>&lt;p&gt;
This link &lt;a class="ext-link" href="http://www.ielnur.com/blog/2009/05/%d1%81%d0%bd%d0%be%d0%b2%d0%b0-%d0%b1%d1%80%d0%be%d1%81%d0%b8%d1%82%d1%8c-%d0%ba%d1%83%d1%80%d0%b8%d1%82%d1%8c-30-%d1%82%d0%b8%d0%b4%d0%bd%d0%b5%d0%b2%d0%bd%d0%be%d0%b5-%d0%b8%d1%81%d0%bf%d1%8b%d1%82%d0%b0%d0%bd%d0%b8%d0%b5/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.ielnur.com/blog/2009/05/%d1%81%d0%bd%d0%be%d0%b2%d0%b0-%d0%b1%d1%80%d0%be%d1%81%d0%b8%d1%82%d1%8c-%d0%ba%d1%83%d1%80%d0%b8%d1%82%d1%8c-30-%d1%82%d0%b8%d0%b4%d0%bd%d0%b5%d0%b2%d0%bd%d0%be%d0%b5-%d0%b8%d1%81%d0%bf%d1%8b%d1%82%d0%b0%d0%bd%d0%b8%d0%b5/&lt;/a&gt; is &lt;strong&gt;258&lt;/strong&gt; chars long, &lt;code&gt;post_name&lt;/code&gt; part is &lt;strong&gt;223&lt;/strong&gt;. It works fine with our local search engine &lt;a class="ext-link" href="http://www.yandex.ru"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.yandex.ru&lt;/a&gt; and with &lt;a class="ext-link" href="http://www.google.ru"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.google.ru&lt;/a&gt; as well.
&lt;/p&gt;
&lt;p&gt;
But I might be wrong in trying to change &lt;code&gt;post_name&lt;/code&gt;'s length to &lt;strong&gt;400&lt;/strong&gt;. I remembered that &lt;code&gt;varchar&lt;/code&gt; can't hold more than 255 chars. Isn't that true?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10082 (Shortcodes need a character separating them to work) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 27 Jul 2009 08:21:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10082#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10082#comment:36/1248682890000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I know this is a noob question, but how do I apply the patch? :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Oh.. :)
&lt;/p&gt;
&lt;p&gt;
Have a look at &lt;a class="ext-link" href="http://codex.wordpress.org/Using_Subversion"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Using_Subversion&lt;/a&gt; &lt;a class="ext-link" href="http://wordpress.org/download/svn/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/download/svn/&lt;/a&gt; and TortoiseSVN (If using Windows)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10082 (Shortcodes need a character separating them to work) updated</title>
      
        <dc:creator>godfreykfc</dc:creator>

      <pubDate>Mon, 27 Jul 2009 08:17:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10082#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10082#comment:35/1248682655000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10082#comment:34" title="Comment 34"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
I know this is a noob question, but how do I apply the patch? :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10396 (Pick an username during the install) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 27 Jul 2009 08:11:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10396#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10396#comment:13/1248682275000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
but resulted in 2 administrators.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That is the exact situation i wanted to avoid, Look around the forums and a few track tickets, and you'll find things related to the options table crashing (more likely than any other table). Once that happens.. administrators are created which the user may not be aware of - I dont think end users should be open to that risk, Technical users may realise and check, but not everyone is going to..
&lt;/p&gt;
&lt;p&gt;
Which is why my suggestion was to only allow it if no other users existed, or no admins existed for the current blog.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10082 (Shortcodes need a character separating them to work) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 27 Jul 2009 08:07:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10082#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10082#comment:34/1248682027000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
dd32 can you post some short instructions for testing your patch? I've got a handful of test cases from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10473" title="#10473: defect (bug): Shortcode parser in is flawed (closed: duplicate)"&gt;#10473&lt;/a&gt; for you.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Run all the test cases you can think of. I dont have any specifically handy for it..
&lt;/p&gt;
&lt;p&gt;
Heres some I can think of though which work in mine, but (may) not in denis's:
&lt;/p&gt;
&lt;pre class="wiki"&gt;[s1][/s1]
[s1]Content[/s1]
[s1][s2][/s1]
[s1][s2][/s2]
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10494 (wp_generate_attachment_metadata filter needs attachment ID) created</title>
      
        <dc:creator>taco1991</dc:creator>

      <pubDate>Mon, 27 Jul 2009 05:40:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10494</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10494/1248673225000000</guid>
      <description>&lt;p&gt;
The wp_generate_attachment_metadata filter (/wp-admin/includes/image.php line 124) passes only the metadata array to any functions using that hook:
&lt;/p&gt;
&lt;pre class="wiki"&gt;   return apply_filters( 'wp_generate_attachment_metadata', $metadata );
&lt;/pre&gt;&lt;p&gt;
The filter is useless without the attachment ID of the new item.  And for anything that's not an image, $metadata is empty so you have no idea what the new attachment is.
&lt;/p&gt;
&lt;p&gt;
Instead it should be just like the wp_update_attachment_metadata filter and include the attachment ID as a second argument (/wp-includes/post.php line 2668):
&lt;/p&gt;
&lt;pre class="wiki"&gt;   $data = apply_filters( 'wp_update_attachment_metadata', $data, $post-&amp;gt;ID );
&lt;/pre&gt;&lt;p&gt;
I stumbled on this as I was writing a plugin to handle new attachments.  The easiest and best way to add extra metadata at create time is to use the wp_generate_attachment_metadata hook. But without the ID, I don't know which file to update.
&lt;/p&gt;
&lt;p&gt;
Simply adding the post ID to the function would make this filter awesome.  I'm having trouble making a patch, but here's the new code for /wp-admin/includes/image.php line 124:
&lt;/p&gt;
&lt;pre class="wiki"&gt;   return apply_filters( 'wp_generate_attachment_metadata', $metadata, $attachment_id );
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10082 (Shortcodes need a character separating them to work) updated</title>
      
        <dc:creator>godfreykfc</dc:creator>

      <pubDate>Mon, 27 Jul 2009 02:17:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10082#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10082#comment:33/1248661041000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10082#comment:31" title="Comment 31"&gt;godfreykfc&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Apparently that has already been discussed above, but what's the conclusion?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10082 (Shortcodes need a character separating them to work) updated</title>
      
        <dc:creator>godfreykfc</dc:creator>

      <pubDate>Mon, 27 Jul 2009 02:15:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10082#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10082#comment:32/1248660926000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10082#comment:26" title="Comment 26"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
dd32 can you post some short instructions for testing your patch? I've got a handful of test cases from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10473" title="#10473: defect (bug): Shortcode parser in is flawed (closed: duplicate)"&gt;#10473&lt;/a&gt; for you.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10082 (Shortcodes need a character separating them to work) updated</title>
      
        <dc:creator>godfreykfc</dc:creator>

      <pubDate>Mon, 27 Jul 2009 02:12:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10082#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10082#comment:31/1248660773000000</guid>
      <description>&lt;p&gt;
If we are supporting nested shortcode, then we'll have to deal with situations like these:
&lt;/p&gt;
&lt;pre class="wiki"&gt;[shortcode]
[shortcode]...[/shortcode]
&lt;/pre&gt;&lt;p&gt;
If nesting is not supported, then this should clearly be interpreted as an (implied) self-closing &lt;code&gt;[shortcode /]&lt;/code&gt; followed by a &lt;code&gt;[shortcode]...[/shortcode]&lt;/code&gt;. However, if nesting is permitted, then it can also be interpreted as &lt;code&gt;[shortcode] [/shortcode]&lt;/code&gt; pair wrapping around the content &lt;code&gt;[shortcode /]...&lt;/code&gt;. IMO, either interpretation is fine, but it should be clearly defined (and test cases should be written) and we should make sure that interpretation won't change from implementation to implementation. We should also deprecate the implied self-closing syntax and encourage people to start using the explict &lt;code&gt;[shortcode /]&lt;/code&gt; syntax to avoid ambiguity.
&lt;/p&gt;
&lt;p&gt;
By the way, as pointed out in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10473" title="#10473: defect (bug): Shortcode parser in is flawed (closed: duplicate)"&gt;#10473&lt;/a&gt;, this is not working in the current release at all, so please make sure it is fixed by the submitted patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10376 (White space should be collapsed after tags are stripped in wp_trim_excerpt) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Mon, 27 Jul 2009 00:49:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10376#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10376#comment:13/1248655744000000</guid>
      <description>&lt;p&gt;
Yayaya, and "If it was hard for me to write it, it should be hard for them to understand it!" Still... :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10493 (Allow closures as callbacks) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Mon, 27 Jul 2009 00:47:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10493#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10493#comment:2/1248655627000000</guid>
      <description>&lt;p&gt;
Not that removing a lambda function is any easier, but still...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10493 (Allow closures as callbacks) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Mon, 27 Jul 2009 00:46:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10493#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10493#comment:1/1248655602000000</guid>
      <description>&lt;p&gt;
As much as I *love* that syntax, I'm having a hard time imagining how to remove_filter() the mess if we need to.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10376 (White space should be collapsed after tags are stripped in wp_trim_excerpt) updated</title>
      
        <dc:creator>sojweb</dc:creator>

      <pubDate>Mon, 27 Jul 2009 00:43:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10376#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10376#comment:12/1248655419000000</guid>
      <description>&lt;p&gt;
Readable? l33t h4x0r5 do not need readable code ;-).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10360 ($_REQUEST's slashes may differ from $_GET/$_POST) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 27 Jul 2009 00:41:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10360#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10360#comment:34/1248655277000000</guid>
      <description>&lt;p&gt;
+1 that really is a good idea. I would love to see a maintainers statement in/after that discussion. I know that this is not easy to decide but I think it should be given a clear statement that leads into the right direction for the future.
&lt;/p&gt;
&lt;p&gt;
Next to what I (personally) would prefer it was for me in WP devrlopment to stick with the current status quo (wether or not it's a personal preference). I'm personally very open minded to have a more well defined data flow (that means to not slash the data as this is consent in the PHP community _mostly_ but not overall (WordPress is one exception, another one might be phplist [not that shure] but then my knowledge ends).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>closures.diff attached to Ticket #10493</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 27 Jul 2009 00:01:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10493/closures.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10493/closures.diff/1248652879000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>closure_testing.php attached to Ticket #10493</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 26 Jul 2009 23:57:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10493/closure_testing.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10493/closure_testing.php/1248652655000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10493 (Allow closures as callbacks) created</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 26 Jul 2009 23:56:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10493</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10493/1248652600000000</guid>
      <description>&lt;p&gt;
PHP 5.3 allows closures, which means we can replace this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action('init', create_function('', '//do something'));
&lt;/pre&gt;&lt;p&gt;
with this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action('init', function() { // do something });
&lt;/pre&gt;&lt;p&gt;
and it only requires two lines of extra code.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10396 (Pick an username during the install) updated</title>
      
        <dc:creator>dcole07</dc:creator>

      <pubDate>Sun, 26 Jul 2009 23:28:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10396#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10396#comment:12/1248650932000000</guid>
      <description>&lt;p&gt;
&lt;strong&gt;Deleted wp_options Table, same username&lt;/strong&gt;&lt;br /&gt;
I repeated the steps in &lt;strong&gt;Deleted wp_options Table&lt;/strong&gt; but instead of creating a new username, I used the one from the original install. I got the same dup errors. As for the username and password, it said the username already existed and that the password was inherited. Overall the install was a success. When I logged in, I used the original information and it worked.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10396 (Pick an username during the install) updated</title>
      
        <dc:creator>dcole07</dc:creator>

      <pubDate>Sun, 26 Jul 2009 23:22:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10396#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10396#comment:11/1248650540000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10396#comment:10" title="Comment 10"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Try marking the options table as dirty/crashed (if its possible to do that..) or just empty the options table. See if it still acts the same.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;strong&gt;Deleted wp_options Table&lt;/strong&gt; I deleted the config file and empted the wp_options database table. While installing I created a new user, the install was a success, but resulted in 2 administrators. One from the fresh install and one from the re-install. This was again done on WordPress 2.8.1 with patch 10396.diff. There were also dup errors on the Success page:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Duplicate entry 'uncategorized' for key 'slug'
&lt;/li&gt;&lt;li&gt;Duplicate entry '1-category' for key 'term_id_taxonomy'
&lt;/li&gt;&lt;li&gt;Duplicate entry 'blogroll' for key 'slug'
&lt;/li&gt;&lt;li&gt;Duplicate entry '2-link_category' for key 'term_id_taxonomy'
&lt;/li&gt;&lt;li&gt;Duplicate entry '1-1' for key 'PRIMARY'
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>export.2.diff attached to Ticket #10317</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Sun, 26 Jul 2009 23:20:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10317/export.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10317/export.2.diff/1248650431000000</guid>
      <description>&lt;p&gt;
checks for nested query support
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>10488.diff attached to Ticket #10488</title>
      
        <dc:creator>dcole07</dc:creator>

      <pubDate>Sun, 26 Jul 2009 23:10:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10488/10488.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10488/10488.diff/1248649845000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10488 (Navigation For Already Installed Page) updated</title>
      
        <dc:creator>dcole07</dc:creator>

      <pubDate>Sun, 26 Jul 2009 23:08:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10488#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10488#comment:3/1248649731000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch 10488.diff only adds the login button after the message. It would be too much work to add the header in, because I'd have to include another file and change up the header being called, which would mess with other things as well.
&lt;/p&gt;
&lt;p&gt;
This is ready for a trusted person to add the keyword commit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10317 (Add features to export) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Sun, 26 Jul 2009 23:03:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10317#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10317#comment:5/1248649388000000</guid>
      <description>&lt;p&gt;
I could modify the patch to check mysql version and remove the category select on 4.0.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10201 (Remove user-specific caps) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sun, 26 Jul 2009 22:19:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10201#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10201#comment:28/1248646754000000</guid>
      <description>&lt;p&gt;
oh we'd need to do that no matter what with the current plan. I was just answering sam -- he's highlighting (rightly so, too) that since the column's contents isn't indexed, it's only a slight gain, rather than a huge one, when compared to an actual roles table.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10201 (Remove user-specific caps) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 26 Jul 2009 22:12:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10201#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10201#comment:27/1248646324000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
the issue, however, is that we can't really add this in the users table either -- we'd need an extra column *per* site, unless the roles are shared across all sites. that would be a much more major change, but not necessarily a bad one.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Why not just prefix the metafield like is currently done for each install? Remember that shared usertables do not have the DB prefix on them, but the capability keys are prefixed by each blogs prefix, ie wp_, wp_1_, wp_2_ etc
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10360 ($_REQUEST's slashes may differ from $_GET/$_POST) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 26 Jul 2009 22:10:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10360#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10360#comment:33/1248646206000000</guid>
      <description>&lt;p&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10452" title="#10452: defect (bug): Wordpress pollutes POST data (closed: wontfix)"&gt;#10452&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If you decide to change the current slashing of the superglobals containing request data, then I suggest to stop slashing them to improve the dataflow instead of repeating wrong decisions of the past.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I would agree, Except that since it was decided in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10452" title="#10452: defect (bug): Wordpress pollutes POST data (closed: wontfix)"&gt;#10452&lt;/a&gt; to not removing slashing (Whch is where the 'remove slashing' discussion belongs) then the request-related vars should follow a similar curve to each other.
&lt;/p&gt;
&lt;p&gt;
I'm going to bring this up in this weeks Developer discussion on IRC.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10470 (more pages for posts - displayed by category) updated</title>
      
        <dc:creator>mch</dc:creator>

      <pubDate>Sun, 26 Jul 2009 20:28:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10470#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10470#comment:4/1248640132000000</guid>
      <description>&lt;p&gt;
added the patch for trunk at rev 11742
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>page_for_posts.patch attached to Ticket #10470</title>
      
        <dc:creator>mch</dc:creator>

      <pubDate>Sun, 26 Jul 2009 20:28:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10470/page_for_posts.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10470/page_for_posts.patch/1248640080000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10477 (jquery ain't working on 2.9-Nightly Build) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sun, 26 Jul 2009 19:04:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10477#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10477#comment:3/1248635082000000</guid>
      <description>&lt;p&gt;
Itching to close pending feedback. I'm 99% a plugin is around that is relying on functionality that is broken by the jQuery update.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10376 (White space should be collapsed after tags are stripped in wp_trim_excerpt) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sun, 26 Jul 2009 19:00:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10376#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10376#comment:11/1248634804000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10376#comment:10" title="Comment 10"&gt;sojweb&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@Denis-de-Bernardy: You mean why remove it from its own line? It makes for one less variable assignment... I suppose I did it more out of habit than anything else. It doesn't make any real difference.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It makes things less readable? :-)
&lt;/p&gt;
&lt;p&gt;
D.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10201 (Remove user-specific caps) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sun, 26 Jul 2009 18:54:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10201#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10201#comment:26/1248634495000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10201#comment:25" title="Comment 25"&gt;sambauers&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
"The other option is a whole new set of tables.. which.. those who are sane (And there are some insane people in WP Dev..) realise that its not really needed."
&lt;/p&gt;
&lt;p&gt;
Storing the role as a "varchar" in the usermeta table will require an additional column in the wp_usermeta table as current meta_value column is "longtext". If that change doesn't happen then the roles will still be non-indexed and there will be little or no speed improvement over doing a "LIKE" query on the existing serialised arrays.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
actually, there will. like is slower than =, and the meta key is indexed. but agreed on the note.
&lt;/p&gt;
&lt;p&gt;
the issue, however, is that we can't really add this in the users table either -- we'd need an extra column *per* site, unless the roles are shared across all sites. that would be a much more major change, but not necessarily a bad one.
&lt;/p&gt;
&lt;p&gt;
bottom line is, from a performance standpoint, a new table with an actual join would be *much* better, but probably not desired as things stand. we could bring this up during the next WP meet-up, though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10082 (Shortcodes need a character separating them to work) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sun, 26 Jul 2009 18:48:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10082#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10082#comment:30/1248634093000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10082#comment:26" title="Comment 26"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I've not attempted running the test set yet, other than the test-data posts i've just setup.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
don't worry about it. the test set is built assuming that nested shortcodes shouldn't work at all. so they'd be invalid. :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>meta-testing.2.php attached to Ticket #10487</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 26 Jul 2009 18:35:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10487/meta-testing.2.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10487/meta-testing.2.php/1248633353000000</guid>
      <description>&lt;p&gt;
plugin for basic testing
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10481 (No way of determining current WP version when an upgrade is available) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 26 Jul 2009 18:25:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10481#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10481#comment:2/1248632752000000</guid>
      <description>invalid: &lt;p&gt;
Thanks ninjaWR, somehow missed that
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10487 (Improved meta API) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 26 Jul 2009 18:24:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10487#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10487#comment:2/1248632655000000</guid>
      <description>&lt;p&gt;
What's still needed is code to migrate data from postmeta to meta.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10360 ($_REQUEST's slashes may differ from $_GET/$_POST) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 26 Jul 2009 18:18:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10360#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10360#comment:32/1248632280000000</guid>
      <description>&lt;p&gt;
("'Quote' on Quote") Simple fact is, WordPress uses/expects the $_REQUEST data not to be slashed. If you say A for _POST and _GET, then you must say B for_REQUEST. If you argue to keep up with the status quo, then this is an argument against changing current $_REQUEST data.
&lt;/p&gt;
&lt;p&gt;
If you decide to change the current slashing of the superglobals containing request data, then I suggest to stop slashing them to improve the dataflow instead of repeating wrong decisions of the past.
&lt;/p&gt;
&lt;p&gt;
Additionally I have only asked that you link to the other ticket you used as argument. I know that there are a lot of tickets that are about slashing or not slashing data so I can not exactly follow your point until you link that certain ticket you meant. That's all. I know how to deal with the trac search, so please do not feel offended by me asking. I thought you have it in your browsers history or similar.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>meta_api.diff attached to Ticket #10487</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 26 Jul 2009 18:16:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10487/meta_api.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10487/meta_api.diff/1248632203000000</guid>
      <description>&lt;p&gt;
first draft
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10492 (Various functions using 'thumb' index to try for image metadata, ...) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 26 Jul 2009 18:14:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10492#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10492#comment:1/1248632061000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10488 (Navigation For Already Installed Page) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 26 Jul 2009 18:12:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10488#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10488#comment:2/1248631940000000</guid>
      <description>&lt;p&gt;
No objection, on the contrary.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10376 (White space should be collapsed after tags are stripped in wp_trim_excerpt) updated</title>
      
        <dc:creator>sojweb</dc:creator>

      <pubDate>Sun, 26 Jul 2009 17:56:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10376#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10376#comment:10/1248630970000000</guid>
      <description>&lt;p&gt;
@Denis-de-Bernardy: You mean why remove it from its own line? It makes for one less variable assignment... I suppose I did it more out of habit than anything else. It doesn't make any real difference.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10145 (Tango/GNOME smilies in core) updated</title>
      
        <dc:creator>llamaXxX</dc:creator>

      <pubDate>Sun, 26 Jul 2009 17:19:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10145#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10145#comment:31/1248628744000000</guid>
      <description>&lt;p&gt;
Probably not the best place for this, but might I offer an idea?  Support for multiple smiley sets in the core.  Like themes and plugins, they could live under /wp-content/icons/, let's say, one set per folder.  An image file -&amp;gt; smiley mapping could be set via a text file:
&lt;/p&gt;
&lt;pre class="wiki"&gt;happy.png :) :happy:
sad.png :( :sad:
&lt;/pre&gt;&lt;p&gt;
By having the image and followed by the smiles it represents, it should be fairly easy to parse.  If the user selects to use the smiley set, the mapping could be set in the database somewhere, perhaps.
&lt;/p&gt;
&lt;p&gt;
Just a passing thought while reading this bug.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6516 (canonical redirect doesn't redirect ?name=slug) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Sun, 26 Jul 2009 17:16:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6516#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6516#comment:15/1248628618000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11745" title="Canonical redirects for post name queries.  Props DD32. see #6516"&gt;[11745]&lt;/a&gt;) Canonical redirects for post name queries.  Props DD32. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/6516" title="#6516: enhancement: canonical redirect doesn't redirect ?name=slug (closed: fixed)"&gt;#6516&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [11745]: Canonical redirects for post name queries.  Props DD32. see #6516</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Sun, 26 Jul 2009 17:16:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11745</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11745/1248628613624387</guid>
      <description>&lt;p&gt;
Canonical redirects for post name queries.  Props DD32. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/6516" title="#6516: enhancement: canonical redirect doesn't redirect ?name=slug (closed: fixed)"&gt;#6516&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10491 (Proof reader or reviewer role) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sun, 26 Jul 2009 17:09:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10491#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10491#comment:1/1248628159000000</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
new caps would be needed for this. probably plugin territory, too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>wp_delete_attachment.diff attached to Ticket #10492</title>
      
        <dc:creator>simonwheatley</dc:creator>

      <pubDate>Sun, 26 Jul 2009 16:44:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10492/wp_delete_attachment.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10492/wp_delete_attachment.diff/1248626646000000</guid>
      <description>&lt;p&gt;
Corrects indexes to access thumbnail metadata in wp_delete_attachment
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>wp_get_attachment_thumb_file.diff attached to Ticket #10492</title>
      
        <dc:creator>simonwheatley</dc:creator>

      <pubDate>Sun, 26 Jul 2009 16:43:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10492/wp_get_attachment_thumb_file.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10492/wp_get_attachment_thumb_file.diff/1248626607000000</guid>
      <description>&lt;p&gt;
Corrects indexes to access thumbnail metadata in wp_get_thumbnail_file
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10492 (Various functions using 'thumb' index to try for image metadata, ...) created</title>
      
        <dc:creator>simonwheatley</dc:creator>

      <pubDate>Sun, 26 Jul 2009 16:42:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10492</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10492/1248626558000000</guid>
      <description>&lt;p&gt;
Both get_attachment_thumb_file, wp_delete_attachment seem to access the filename for the thumbnail attachment incorrectly; the functions try to get &lt;code&gt;&lt;/code&gt;&lt;code&gt;$imagemeta[ 'thumb ]&lt;/code&gt;&lt;code&gt;&lt;/code&gt;, but WP stores the filename under &lt;code&gt;&lt;/code&gt;&lt;code&gt;$imagedata[ 'sizes' ][ 'thumbnail' ][ 'file' ]&lt;/code&gt;&lt;code&gt;&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Two patches: wp_get_thumbnail_file has been tested in the course of my development, wp_delete_attachment follows the same principles of correcting the indexes and _should_ work, but hasn't been tested as I'm not using this function in my app currently and am on deadline... sorry!
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10491 (Proof reader or reviewer role) created</title>
      
        <dc:creator>pupeno</dc:creator>

      <pubDate>Sun, 26 Jul 2009 16:37:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10491</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10491/1248626273000000</guid>
      <description>&lt;p&gt;
It would be nice if WordPress offered a proof reader or reviewer role. This role would allow the user to modify only drafts and/or only drafts sent for reviewing to the user. The user should not have the power to change anything that is public of the site.
&lt;/p&gt;
&lt;p&gt;
If it is possible, it should be able to modify published posts but those changes are hidden until the author approves them. But this is only a nice-to-have and the real feature is the previous one.
&lt;/p&gt;
&lt;p&gt;
The idea is, in my case, to give reviewer roles to my friends and use WordPress to evolve the posts. I don't want any other person than me to be able to modify the public site of my blog, either by accident or malice.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10490 (paragraphs inserted round shortcodes by wpautop not working properly ...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sun, 26 Jul 2009 16:22:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10490#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10490#comment:1/1248625372000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10082" title="#10082: defect (bug): Shortcodes need a character separating them to work (closed: fixed)"&gt;#10082&lt;/a&gt; (dup of this one, in that it's related to the opening/closing shortcode escape), and related bugs.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>shortcodes_wpautop_patch_2009_07_26.diff attached to Ticket #10490</title>
      
        <dc:creator>alanjohndix</dc:creator>

      <pubDate>Sun, 26 Jul 2009 15:58:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10490/shortcodes_wpautop_patch_2009_07_26.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10490/shortcodes_wpautop_patch_2009_07_26.diff/1248623902000000</guid>
      <description>&lt;p&gt;
suggested patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10490 (paragraphs inserted round shortcodes by wpautop not working properly ...) created</title>
      
        <dc:creator>alanjohndix</dc:creator>

      <pubDate>Sun, 26 Jul 2009 15:57:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10490</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10490/1248623868000000</guid>
      <description>&lt;p&gt;
The regex returned by get_shortcode_regex() had a back-reference '\[\/\2\]' to match balanced tag-end-tag pairs such as "[x]text&lt;a href="http://core.trac.wordpress.org/x"&gt;x&lt;/a&gt;".  The regex assumes it will be used 'bare' as a regular expression.  However, wpautop adds extra enclosing brackets to be able to refer to the entire matched tags and content.  This means that the back-reference instead matches the (optional) preceding letter which is usually blank and thus the closing tag does not match properly.
&lt;/p&gt;
&lt;p&gt;
In the case of single tag-end-tag pair, this means that
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
[divtag]
abc
&lt;a href="http://core.trac.wordpress.org/divtag"&gt;divtag&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
ends up as
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;div class="mydiv"&amp;gt;
&amp;lt;p&amp;gt;abc&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/p&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This gets more complicated when there are internal tags such as:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
[mytag] some [specialsymbol] text &lt;a href="http://core.trac.wordpress.org/mytag"&gt;mytag&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As in some cases the existing .*? for attribute matching chomps everything while it tries to find a '/'.
&lt;/p&gt;
&lt;p&gt;
A simple fix would be to add an optional parameter to get_shortcode_regex($nested=0) and use this to modify the regular expression.  This would give the intended match for the shortcode regex, but in fact makes things worse. Looking at the same source:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
[divtag]
abc
&lt;a href="http://core.trac.wordpress.org/divtag"&gt;divtag&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
it would generate (assuming [divtag] generates a div):
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;div class="mydiv"&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;abc&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;&amp;lt;/div&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The attached patch addresses this by adding two new functions to shortcodes.php returning regular expressions for matching begin and end tags separately.  wpautop then has two separate preg_replace lines doing the &amp;lt;p&amp;gt; fixes.
&lt;/p&gt;
&lt;p&gt;
At the same time I swopped the .*? for attribute matching to [&lt;sup&gt;\]]*?
I guess slightly slower, but doesn't risk chomping the entire post as an attribute.
&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;
Note: Sorry, the end tags above all come out odd, but don't know the TRAC editor so don't know how to tell it to treat them as literals.  I've done a nicely formatted version of the report at:
&lt;a class="ext-link" href="http://www.alandix.com/blog/2009/07/26/fix-for-wordpress-shortcode-bug/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.alandix.com/blog/2009/07/26/fix-for-wordpress-shortcode-bug/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10201 (Remove user-specific caps) updated</title>
      
        <dc:creator>sambauers</dc:creator>

      <pubDate>Sun, 26 Jul 2009 12:10:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10201#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10201#comment:25/1248610210000000</guid>
      <description>&lt;p&gt;
We experience poor performance on large usermeta tables in bbPress due to the way roles are stored. However, I overcame most of the issues with a plugin (and a single table). Might be a good reference.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://bbpress.org/plugins/topic/user-roles-table-for-bbpress/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://bbpress.org/plugins/topic/user-roles-table-for-bbpress/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
"The other option is a whole new set of tables.. which.. those who are sane (And there are some insane people in WP Dev..) realise that its not really needed."
&lt;/p&gt;
&lt;p&gt;
Storing the role as a "varchar" in the usermeta table will require an additional column in the wp_usermeta table as current meta_value column is "longtext". If that change doesn't happen then the roles will still be non-indexed and there will be little or no speed improvement over doing a "LIKE" query on the existing serialised arrays. We might prefer a single additional table in the end instead (speed, storage and sanity wise it's a better option).
&lt;/p&gt;
&lt;p&gt;
Also, the capabilities in bbPress are hardcoded (not stored in the DB at all), but pluggable. Which hasn't hindered usage of them in the slightest.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10360 ($_REQUEST's slashes may differ from $_GET/$_POST) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 26 Jul 2009 12:08:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10360#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10360#comment:31/1248610119000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
+1 for removing slashes from _POST and _GET sothat - as dd32 makes bold
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
My comment was never intended to be taken that way.
&lt;/p&gt;
&lt;p&gt;
I intended that the use of $_POST inside wordpress should be able to be replaced with $_REQUEST at any stage and operate the same. This infers that the slashes in REQUEST should be the same as POST. I am not referring to some non-WP application. &lt;strong&gt;Simple fact is, WordPress uses/expects POST/GET data to be slashed, Even though internally data is used unslashed in recent versions. $_REQUEST is NOT slashed, and therefor, cannot be used interchangably&lt;/strong&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Please reference that ticket. Thanks.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Search for it. I'm not your personal search engine.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10456 (Media UI Improvements for the gallery tab) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 26 Jul 2009 12:05:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10456#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10456#comment:7/1248609923000000</guid>
      <description>&lt;p&gt;
Theres a ticket, I cant find it. I was hoping someone else could find it instead, but its definately there and closed as invalid/wontfix
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10360 ($_REQUEST's slashes may differ from $_GET/$_POST) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 26 Jul 2009 12:01:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10360#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10360#comment:30/1248609719000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10360#comment:28" title="Comment 28"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The slashing of data is NOT for this ticket, and another ticket has recently been closed around it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Please reference that ticket. Thanks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10360 ($_REQUEST's slashes may differ from $_GET/$_POST) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 26 Jul 2009 12:00:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10360#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10360#comment:29/1248609627000000</guid>
      <description>&lt;p&gt;
+1 for removing slashes from _POST and _GET sothat - as dd32 makes bold - _POST and _GET can be replaced anytime with _REQUEST. Plus the point that "we all agree that relying upon slashed data in superglobals is bad." (is the wordpress maintainer part of that "we" or not?)
&lt;/p&gt;
&lt;p&gt;
The currrent patch does not reflect that, it just merges (slashes) _POST &amp;amp; _GET into _REQUEST and not the other way round (dd32 wrote about replacing _POST resp. _GET with _REQUEST and not the other way round).
&lt;/p&gt;
&lt;p&gt;
So I see no has-patch nor commit readyness.
&lt;/p&gt;
&lt;p&gt;
How can we get a valid statement from the maintainer on this issue?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10489 (UI Improvements for the gallery tab (edit post)) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 26 Jul 2009 11:53:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10489#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10489#comment:1/1248609182000000</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10456 (Media UI Improvements for the gallery tab) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 26 Jul 2009 11:52:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10456#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10456#comment:6/1248609174000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
For &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9471" title="#9471: defect (bug): Attachments uploaded before post is saved or autosaved get 0 (zero) ... (closed: fixed)"&gt;#9471&lt;/a&gt;, referenced it because it is related but it is not the same bug.
&lt;/p&gt;
&lt;p&gt;
The second part - as already written - needs to go into it's own ticket then. If there really is a duplicate (not only memorized but link-able in tract), this can be handeled there then. Anyway the comment of dd32 IMHO AFAIK is not what I meant, so I even assume there is no actual duplicate at least not that one that dd32 is pointing to (Reference is &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10489" title="#10489: enhancement: UI Improvements for the gallery tab (edit post) (closed: invalid)"&gt;#10489&lt;/a&gt;).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10489 (UI Improvements for the gallery tab (edit post)) created</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 26 Jul 2009 11:52:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10489</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10489/1248609130000000</guid>
      <description>&lt;p&gt;
It would be nice to ever display the "Gallery Settings" Section on the gallery tab, even if only one image exists. That would help if you talk via phone and explain someone something. Often from-sections are helpfull to validate wether or not the other is on the same page as you are while explaining something.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10480 (Need method to display custom errors for quickedit) updated</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Sun, 26 Jul 2009 09:41:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10480#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10480#comment:1/1248601317000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>edit_result.diff attached to Ticket #10480</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Sun, 26 Jul 2009 09:41:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10480/edit_result.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10480/edit_result.diff/1248601280000000</guid>
      <description>&lt;p&gt;
1st attempt
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10317 (Add features to export) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 26 Jul 2009 09:40:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10317#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10317#comment:4/1248601250000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
The  nested queries are supported by MySQL versions 3.23 and newer.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That link (And my memory) say its 4.1+, WordPress still requires MySQL 4.0+ - &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-includes/wp-db.php#L1021"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/browser/trunk/wp-includes/wp-db.php#L1021&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I do believe there is already something else using subselects (Taxonomy under very very certain case which would only ever be triggered by a certain use by a plugin), And that has raised the idea of requiring MySQL 4.1+ for WordPress 2.9.. So it might not be a point to care about right now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10317 (Add features to export) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Sun, 26 Jul 2009 02:52:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10317#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10317#comment:3/1248576744000000</guid>
      <description>&lt;p&gt;
The &lt;a class="ext-link" href="http://dev.mysql.com/doc/refman/4.1/en/subqueries.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;nested queries&lt;/a&gt; are supported by MySQL versions 3.23 and newer.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10393 (wp_tag_cloud('order=RAND') broken with PHP &gt;= 5.2.10) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 26 Jul 2009 01:23:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10393#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10393#comment:2/1248571430000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11744" title="Fix wp_tag_cloud('order=RAND'), don't pre-sort if filter ..."&gt;[11744]&lt;/a&gt;) Fix wp_tag_cloud('order=RAND'), don't pre-sort if filter 'tag_cloud_sort' is used to sort the tags, props Joern_W, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10393" title="#10393: defect (bug): wp_tag_cloud('order=RAND') broken with PHP &amp;gt;= 5.2.10 (closed: fixed)"&gt;#10393&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [11744]: Fix wp_tag_cloud('order=RAND'), don't pre-sort if filter ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 26 Jul 2009 01:23:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11744</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11744/1248571426479890</guid>
      <description>&lt;p&gt;
Fix wp_tag_cloud('order=RAND'), don't pre-sort if filter 'tag_cloud_sort' is used to sort the tags, props Joern_W, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10393" title="#10393: defect (bug): wp_tag_cloud('order=RAND') broken with PHP &amp;gt;= 5.2.10 (closed: fixed)"&gt;#10393&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10396 (Pick an username during the install) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 26 Jul 2009 01:17:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10396#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10396#comment:10/1248571034000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Existing Database Install Testing
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Try marking the options table as dirty/crashed (if its possible to do that..) or just empty the options table. See if it still acts the same.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10396 (Pick an username during the install) updated</title>
      
        <dc:creator>dcole07</dc:creator>

      <pubDate>Sun, 26 Jul 2009 00:58:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10396#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10396#comment:9/1248569884000000</guid>
      <description>&lt;p&gt;
&lt;strong&gt;Fresh Install Testing:&lt;/strong&gt; I tested a fresh install with patch 10396.diff on WordPress 2.8.1. It worked like you would expect it to and there were no problems or errors.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Existing Database Install Testing:&lt;/strong&gt; I deleted the config file and ran the install process again on WordPress 2.8.1 with patch 10396.diff. It didn't allow me to create a new user and said there was already database tables. This is expected. There were no problems or errors.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10488 (Navigation For Already Installed Page) updated</title>
      
        <dc:creator>dcole07</dc:creator>

      <pubDate>Sun, 26 Jul 2009 00:51:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10488#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10488#comment:1/1248569508000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'll create a patch for this. I'm going to add a login button below the message, which is just like the success screen during a fresh install of WordPress.
&lt;/p&gt;
&lt;p&gt;
I'm also going to add the "back to blog" header like the login page. Unless there is some objection to adding this!?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10488 (Navigation For Already Installed Page) created</title>
      
        <dc:creator>dcole07</dc:creator>

      <pubDate>Sun, 26 Jul 2009 00:43:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10488</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10488/1248569025000000</guid>
      <description>&lt;p&gt;
When you come to the page "Already Installed", which is during the initial install process (/wp-admin/install.php), you come to a dead end. The page says, "You appear to have already installed WordPress. To reinstall please clear your old database tables first."
&lt;/p&gt;
&lt;p&gt;
There should be a link to login to the backend and/or one to the homepage. It's disruptive to have to find another way to get to rest of the site.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10476 (Option to export .zip backup before auto upgrade of wp/plugins) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 26 Jul 2009 00:35:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10476#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10476#comment:16/1248568526000000</guid>
      <description>&lt;p&gt;
I wouldnt use the PHP Zip function specifically. Whilst its available on up-to-date installs... well.. we all know what users are like.
&lt;/p&gt;
&lt;p&gt;
Using the Zip Extension if available, Else PclZip (PHP-based Zip compressor/uncompressor currently used by the various upgraders) would do the job.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10476 (Option to export .zip backup before auto upgrade of wp/plugins) updated</title>
      
        <dc:creator>dcole07</dc:creator>

      <pubDate>Sun, 26 Jul 2009 00:32:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10476#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10476#comment:15/1248568324000000</guid>
      <description>&lt;p&gt;
Is support for PHP Zip going to be a problem? I guess it's not bundled with PHP, so it's going to be dependent on the server the person is using. I'm not sure how popular the Zip extension is, but I would think it would be fairly significant. If it is a problem, we could write in an exception, removing the functionality that people can't use and give a warning message.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10476 (Option to export .zip backup before auto upgrade of wp/plugins) updated</title>
      
        <dc:creator>dcole07</dc:creator>

      <pubDate>Sun, 26 Jul 2009 00:25:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10476#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10476#comment:14/1248567910000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10476#comment:13" title="Comment 13"&gt;williamsba1&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I also think it should be linked to the update process
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's as simple as putting a link on the page right before the update process begins, which would be helpful reminder if nothing else.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>meta-testing.php attached to Ticket #10487</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 26 Jul 2009 00:14:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10487/meta-testing.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10487/meta-testing.php/1248567254000000</guid>
      <description>&lt;p&gt;
plugin for basic testing
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10487 (Improved meta API) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 26 Jul 2009 00:04:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10487#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10487#comment:1/1248566652000000</guid>
      <description>&lt;p&gt;
This patch:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;replaces postmeta with a generic meta table
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;the meta table has enum as meta_type for better performance
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;implements these functions:
&lt;/li&gt;&lt;/ul&gt;&lt;pre class="wiki"&gt;register_meta_type($meta_type);
add_metadata($meta_type, $object_id, $meta_key, $meta_value, $unique = false);
update_metadata($meta_type, $object_id, $meta_key, $meta_value, $prev_value = '');
delete_metadata($meta_type, $object_id, $meta_key = '', $meta_value = '');
get_metadata($meta_type, $object_id, $key = '', $single = false);
&lt;/pre&gt;&lt;p&gt;
Notice that $meta_key is optional for delete_metadata() and get_metadata().
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;maps these functions:
&lt;/li&gt;&lt;/ul&gt;&lt;pre class="wiki"&gt;add_post_meta();
update_post_meta();
delete_post_meta();
get_post_meta();
get_post_custom();
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>