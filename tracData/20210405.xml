<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #51534 (Add post type Blocks (reusable blocks) into menu) updated</title>
      
        <dc:creator>lukecarbis</dc:creator>

      <pubDate>Mon, 05 Apr 2021 23:49:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51534#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51534#comment:11/1617666579871638</guid>
      <description>&lt;p&gt;
@oglekler You bring up some great points about the limitations of presenting reusable blocks in a modal.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm still hesitant about adding something new to the Appearance menu, especially with the incoming additions that are coming with Full Site Editing.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
While I agree that reusable blocks are somewhat hidden at the moment, I don't think the feature is important enough to warrant a menu item.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Obviously, this is a completely subjective opinion! My preference would be to invite additional thoughts and voices from the community before moving forward with adding a new menu item.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44314 (`user_confirmed_action_email_content` filter run on two different strings) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Mon, 05 Apr 2021 23:41:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44314#comment:64</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44314#comment:64/1617666113034857</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@lukecarbis it is and marking as such. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This is currently on my list of things to ignore until 5.7.1 is released but if anyone else wants to put it in, feel free. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>select-block.png attached to Ticket #52974</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Mon, 05 Apr 2021 22:55:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/52974/select-block.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/52974/select-block.png/1617663326940140</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #52974 (Right Panel "Select a Block" Settings Issue) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Mon, 05 Apr 2021 22:54:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52974#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52974#comment:1/1617663278263345</guid>
      <description>&lt;p&gt;
@mwarbinek Thank you for the ticket!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I agree that it can be difficult to select specific blocks and wish there were better ways.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
But there are at least 2 different ways that I use that might be of help to you (this is not to say that this ticket should not be addressed as you have stated it).&lt;br /&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;In the toolbar if you click the icon to the right of the "info" icon, you get a &lt;strong&gt;very&lt;/strong&gt; similar your Fix 3.  I'll attached a screenshot after finishing this comment, so you can what I'm talking about.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;if you select &lt;em&gt;any&lt;/em&gt; block that is a child of another block (e.g., a paragraph block within a column block within a columns block) and then use the "up arrow" key on your keyboard, the parent block becomes selected.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>jjj-on-2021-04-05-at-17-28-51@2x.png attached to Ticket #52975</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Mon, 05 Apr 2021 22:29:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/52975/jjj-on-2021-04-05-at-17-28-51%402x.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/52975/jjj-on-2021-04-05-at-17-28-51%402x.png/1617661772083620</guid>
      <description>&lt;p&gt;
Mocked up "– Default" term state
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #52975 (Add "states" to terms list table (for WP_Taxonomy::$default_term)) created</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Mon, 05 Apr 2021 22:26:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52975</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52975/1617661616054170</guid>
      <description>&lt;p&gt;
The Terms list table (&lt;code&gt;WP_Terms_List_Table&lt;/code&gt;) should include support for the "states" concept that currently also exists for Posts, Media, and Sites.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Specifically, I'd like to see "– Default" added to the default term.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I want this because WordPress Admin does not offer any explanation why the "Uncategorized" Category has no "Delete" link in the list-table UI and also has no checkbox for bulk-actions.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See: &lt;code&gt;_post_states()&lt;/code&gt;, &lt;code&gt;_media_states()&lt;/code&gt;, and &lt;code&gt;WP_MS_Sites_List_Table::site_states()&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Mock-up screenshot imminent.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Screenshot_2021-04-05 Edit Page-Cannot Find Column Block to Click for Settings — WordPress.png attached to Ticket #52974</title>
      
        <dc:creator>mwarbinek</dc:creator>

      <pubDate>Mon, 05 Apr 2021 22:07:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/52974/Screenshot_2021-04-05%20Edit%20Page-Cannot%20Find%20Column%20Block%20to%20Click%20for%20Settings%20%E2%80%94%20WordPress.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/52974/Screenshot_2021-04-05%20Edit%20Page-Cannot%20Find%20Column%20Block%20to%20Click%20for%20Settings%20%E2%80%94%20WordPress.png/1617660461234189</guid>
      <description>&lt;p&gt;
Screenshot of Block Editor - Column Block in Use - No visible boundaries of the block and no listing under Block settings
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #52974 (Right Panel "Select a Block" Settings Issue) created</title>
      
        <dc:creator>mwarbinek</dc:creator>

      <pubDate>Mon, 05 Apr 2021 22:06:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52974</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52974/1617660368218308</guid>
      <description>&lt;p&gt;
In the block editor, there is the right settings panel that provides global settings for that poage and specific settings for elements used on the page. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
There are two sections to the settings panel, these are "Page" or "Block". &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Clicking "Page" automatically shows settings for the page and some elements. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Clicking "Block" automatically shows nothing except this text notation: "&lt;em&gt;No block selected.&lt;/em&gt;"&lt;br /&gt;
&lt;/p&gt;
&lt;h2 id="Issue"&gt;Issue&lt;/h2&gt;
&lt;p&gt;
To get settings to a specific block requires a person to click that block to activate and show its settings in the right panel area. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
With some blocks, this is easy, such as the "paragraph block" or "image block", but with other blocks it becomes a dreadful time-consuming guessing game of where to click to activate and show its settings. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
One such block that is arduous to show its settings is the "columns" block. &lt;br /&gt;
Since the columns block is to add other blocks within them, I end up activating the inner blocks instead and not the settings for the columns block. Where-ever these block boundaries are for the column block versus the inner blocks is a nightmare to find, like groping in the dark. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Since there is a complete absence of indicators to click, I end up having to click the area many times over in numerous locations and to get the actual spot that activates the column's settings is like trying to click a single pixel out of thousands, that is how hard it is. &lt;br /&gt;
&lt;/p&gt;
&lt;h2 id="Resolution"&gt;Resolution&lt;/h2&gt;
&lt;p&gt;
This applies to fixing the entire block editor, not just the "columns" block. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I see two basic fixes to this issue.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fix 1. In the right panel, under "Block", automatically list the blocks that are actively in use. When clicking a specific named block in the right panel, it highlights that block in the editor area and in the right panel the settings for that block appear. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
or...&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fix 2. If you want to keep the right panel block list empty until a block is clicked, then use the Elementor method in the editor area, where a &lt;em&gt;cursor hover&lt;/em&gt; automatically shows the block (with blue borders) and a title/label as well. A person can then easily locate and click a spot on the hover label to activate the settings for that block in the right panel.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fix 3. Taking Fix &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2" title="#2: defect (bug):  posting per xmlrpc - works, but gives errmsgs ala &amp;#34;invalid xml&amp;#34; (closed: fixed)"&gt;#2&lt;/a&gt;, add a feature when right clicking the outlined and labeled block in the editor area provides a submenu that gives the option to click and activate "Settings" for that block (&lt;em&gt;or do something similar with the same end result &amp;gt; activating its settings in the right panel&lt;/em&gt;).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I believe Fix &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/3" title="#3: defect (bug): Certain characters in commenter name/email/URI fields are incorrectly ... (closed: fixed)"&gt;#3&lt;/a&gt; is the best. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Without fixing this, using the Block editor because very discouraging at the least.&lt;br /&gt;
&lt;/p&gt;
&lt;h2 id="ReasoningbehindMySuggestions"&gt;Reasoning behind My Suggestions&lt;/h2&gt;
&lt;p&gt;
The majority of using WordPress are non-tech minded people, who do not want to learn CSS, HTML, etc and only want a product they can easily use without a large learning curve. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
User friendly interface has always been a core goal in Web Development and to fix this issue moves the WordPress block editor into a better position as a user friendly product, especially if you hope to be competitive against page editors like Elementor. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36258 (BuddyPress Admin Toolbar becomes blank for non-logged users when ...) updated</title>
      
        <dc:creator>sabernhardt</dc:creator>

      <pubDate>Mon, 05 Apr 2021 21:58:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36258#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36258#comment:5/1617659928808871</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@valery-kondakoff I created a ticket to show BuddyPress links, if you would like to follow and/or comment there:&lt;br /&gt;
&lt;a class="ext-link" href="https://buddypress.trac.wordpress.org/ticket/8451"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://buddypress.trac.wordpress.org/ticket/8451&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35725 (Add WebP support.) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Mon, 05 Apr 2021 18:25:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35725#comment:153</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35725#comment:153/1617647153227782</guid>
      <description>&lt;p&gt;
This article has some methodology using SSIM, not sure how that compares to DSSIM: &lt;a class="ext-link" href="https://developers.google.com/speed/webp/docs/webp_study#methodology"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developers.google.com/speed/webp/docs/webp_study#methodology&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44827 (Admin Bar No Longer Displaying on Frontend) closed</title>
      
        <dc:creator>sabernhardt</dc:creator>

      <pubDate>Mon, 05 Apr 2021 18:21:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44827#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44827#comment:2/1617646887739635</guid>
      <description>worksforme: &lt;p&gt;
@elxafil The problem may have been fixed in the past few years. I tried a fresh install of WordPress 5.7 and saw the toolbar on the front end both before and after activating multisite.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If you still experience this problem, please reopen the ticket and give screenshots and/or more details.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Tickets #45022,​52973 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 05 Apr 2021 17:48:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=45022%2C52973</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=45022%2C52973/1617644935936746</guid>
      <description>duplicate: &lt;p&gt;
Hi there, welcome to WordPress Trac!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks for the ticket, we're already tracking this feature request in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/45022" title="#45022: feature request: Add a wp-ajax.php at the root of wordpress (closed: wontfix)"&gt;#45022&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12400" title="#12400: feature request: Add a wp_loaded hook, an ob_start hook, and an front end ajax hook (closed: wontfix)"&gt;#12400&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #52973 (Consider changing "admin-ajax.php" files location) created</title>
      
        <dc:creator>mdsaifurrahmann029</dc:creator>

      <pubDate>Mon, 05 Apr 2021 17:38:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52973</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52973/1617644327036782</guid>
      <description>&lt;p&gt;
Hey there,&lt;br /&gt;
I'm working with WordPress since 2010 and noticed that the &lt;code&gt; admin-ajax.php &lt;/code&gt; file is located under the &lt;code&gt; wp-admin &lt;/code&gt; folder. Everything was just fine. But the problem begins when &lt;code&gt; admin_url() &lt;/code&gt; function showed up the directory on the source code.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
like this: &lt;code&gt;example.com/wp-admin/admin-ajax.php&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think this file (admin-ajax.php) directory or admin_url function might be considered. Let me explain why.&lt;br /&gt;
When a large company or a business website is created with WordPress, it is quite vulnerable. Any hacker at the intermediate level is able to grab sensitive data with access to the website.&lt;br /&gt;
So then the clients consider the security aspect of the website. We work to protect the website from hackers by hiding the CMS from the site created by WordPress and by securing many more things. But since the directory of this file is visible in the source code, it is not easy for many to hide the CMS completely.&lt;br /&gt;
And since the theme/plugin developers use this file through the admin_url() function, it is necessary to change the default output of this function (url/wp-admin/) or the directory of the admin-ajax.php file considering the security aspect.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Technology growing up day by day. This simple directory leaks the CMS and newbie developers are get suffering.&lt;br /&gt;
Please think about this. Hope this file system will be patched in the next update soon.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thank you.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #52970 (Improve text in help tabs of Personal Data Exporter/Eraser) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 05 Apr 2021 17:27:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52970#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52970#comment:2/1617643659835048</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #50460 (Don't minimize the `script-loader-packages.php` file) updated</title>
      
        <dc:creator>gziolo</dc:creator>

      <pubDate>Mon, 05 Apr 2021 15:18:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50460#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50460#comment:9/1617635928972221</guid>
      <description>&lt;p&gt;
Maybe we can tweak it in the webpack plugin, it looks like the following lines are responsible of the output format:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/blob/48e470eca70966c8a9ff89f342c875b7aa9845b0/packages/dependency-extraction-webpack-plugin/lib/index.js#L95-L99"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/blob/48e470eca70966c8a9ff89f342c875b7aa9845b0/packages/dependency-extraction-webpack-plugin/lib/index.js#L95-L99&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>1.png attached to Ticket #52972</title>
      
        <dc:creator>jack960330</dc:creator>

      <pubDate>Mon, 05 Apr 2021 14:18:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/52972/1.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/52972/1.png/1617632282001478</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #52972 (WordPress background report jQuery error) created</title>
      
        <dc:creator>jack960330</dc:creator>

      <pubDate>Mon, 05 Apr 2021 14:03:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52972</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52972/1617631432280280</guid>
      <description>&lt;p&gt;
Here I have the following error:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://files.slack.com/files-pri/T024MFP4J-F01TZEHPHNC/image.png"&gt;&lt;img src="https://files.slack.com/files-pri/T024MFP4J-F01TZEHPHNC/image.png" alt="https://files.slack.com/files-pri/T024MFP4J-F01TZEHPHNC/image.png" crossorigin="anonymous" title="https://files.slack.com/files-pri/T024MFP4J-F01TZEHPHNC/image.png" /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Upon investigation, it appears to be the following two documents:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp-includes/js/jquery/jquery.js
wp-includes/js/jquery/jquery.min.js
&lt;/pre&gt;&lt;p&gt;
The following calls exist:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;jQuery.noConflict()
&lt;/pre&gt;&lt;p&gt;
Since the backend core of WordPress seems to already use jQuery instead of $, I think I can remove this call&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The temporary solution is to delete it&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #52798 (delete_option() does not clear cache if option is missing in database.) updated</title>
      
        <dc:creator>donmhico</dc:creator>

      <pubDate>Mon, 05 Apr 2021 13:43:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52798#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52798#comment:3/1617630190357705</guid>
      <description>&lt;p&gt;
I attached a PR above that should fix the issue. In the PR I moved the block of code which deletes the cache before it checks if the option exists in the database. I think that since we are deleting the option in DB, it's safe to delete it in the cache regardless of whether the option exists in database or not. Also you can notice that if the option is not present in the DB we are still returning &lt;code&gt;false&lt;/code&gt; early, without triggering the &lt;code&gt;delete_option&lt;/code&gt; and other actions. It's because I believe that those actions should only be triggered if the option is deleted in the &lt;strong&gt;database&lt;/strong&gt; and shouldn't be triggered if the option are only deleted in the cache.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Any other thoughts / insights are welcome!&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52798 (delete_option() does not clear cache if option is missing in database.) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Mon, 05 Apr 2021 13:37:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52798#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52798#comment:2/1617629836615845</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1168"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1168&lt;/a&gt; on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/wordpress-develop&lt;/a&gt; by &lt;a class="ext-link" href="https://github.com/donmhico"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;donmhico&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
This PR fixes the issue with &lt;code&gt;delete_option&lt;/code&gt; failing to delete the cache if the option no longer exist in the database (deleted manually).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Trac ticket: &lt;a href="https://core.trac.wordpress.org/ticket/52798"&gt;https://core.trac.wordpress.org/ticket/52798&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52963 (Could use a Helper Function for Auto-Updates) updated</title>
      
        <dc:creator>donmhico</dc:creator>

      <pubDate>Mon, 05 Apr 2021 13:36:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52963#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52963#comment:3/1617629777904679</guid>
      <description>&lt;p&gt;
Added a patch above. It maybe a good idea to have a function like &lt;code&gt;enable_auto_update_plugin( $plugin )&lt;/code&gt; instead of having the logic embedded in &lt;code&gt;src/wp-admin/plugins.php&lt;/code&gt;. This will make the unit testing easier.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52314 (the HTML &lt;title&gt; tag for Edit Post should include the post's title) updated</title>
      
        <dc:creator>peterhartree</dc:creator>

      <pubDate>Mon, 05 Apr 2021 12:50:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52314#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52314#comment:5/1617627019960846</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Seems like the status quo is especially bad for editors who rely on screen readers—it could slow them down a bunch.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52314 (the HTML &lt;title&gt; tag for Edit Post should include the post's title) updated</title>
      
        <dc:creator>peterhartree</dc:creator>

      <pubDate>Mon, 05 Apr 2021 12:49:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52314#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52314#comment:4/1617626997620019</guid>
      <description>&lt;p&gt;
+1 to this issue: I hate to think how much time I've spent trying to find the correct "Edit post" tab over the years. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For what it's worth, my quick thought is that the following &amp;lt;title&amp;gt; format would be best for most people: &lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Edit: [Post name] &amp;lt; [Blog name] — WordPress&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think we want as many words of the title as possible to be visible in the browser tab. Given that, including the post type (e.g. "Edit post:") does not seem above the bar.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For very long post names, it might make sense to truncate a bit. But I agree with @skierpage—it seems fine to exceed the W3C 64 character recommendation in this case.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10653 (Update comment_author when display_name changes) updated</title>
      
        <dc:creator>ricjcs</dc:creator>

      <pubDate>Mon, 05 Apr 2021 12:31:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10653#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10653#comment:23/1617625914806746</guid>
      <description>&lt;p&gt;
I was going to report this but I noticed that it has been reported for over 12 years.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It would be very useful if it could be solved. I have a website where my profile has more than 40 comments, I wanted to change the display name, so that it is also changed in the comments I have to change one by one or resort to some trick.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52971 (WP_Query's meta_query With Multiple EXISTS keys and OR Relation ...) created</title>
      
        <dc:creator>oxibug</dc:creator>

      <pubDate>Mon, 05 Apr 2021 12:31:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52971</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52971/1617625913963373</guid>
      <description>&lt;p&gt;
Hi There!&lt;br /&gt;
Another Very Weird Issue :)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Using WP_Query's [meta_query] with &lt;strong&gt;OR relation&lt;/strong&gt; and Multiple &lt;strong&gt;EXISTS Keys&lt;/strong&gt; generates a very long unnecessary inner joins relation and &lt;strong&gt;stuck in an infinite loop&lt;/strong&gt; and &lt;strong&gt;consume the MySQL resources&lt;/strong&gt; with high load.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm trying to get all post IDs that have one of 50 meta keys to replace with new keys, So I collect all meta keys using foreach statement with &lt;strong&gt;OR relation&lt;/strong&gt; and pass it to the [meta_query] in WP_Query .. Very simple but I noticed that there's no result and infinite page load and using high resources of MySQL.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I create the SQL statement with $wpdb and it works very fast, So I create a new WP_MetaQuery object to see the result and I noticed a huge unnecessary INNER JOINs relation.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Here's a full example:&lt;/strong&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Insert 100 Test Posts and 50 Metas For Each: Append &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/52971?action=insert" title="#52971: defect (bug): WP_Query's meta_query With Multiple EXISTS keys and OR Relation ... (new)"&gt;?action=insert&lt;/a&gt; in the URL
&lt;/li&gt;&lt;li&gt;Try to get posts using WP_Query: Append &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/52971?action=wp_query_and_meta_query" title="#52971: defect (bug): WP_Query's meta_query With Multiple EXISTS keys and OR Relation ... (new)"&gt;?action=wp_query_and_meta_query&lt;/a&gt; in URL - &lt;strong&gt;RESULT: Infinite Loop&lt;/strong&gt;
&lt;/li&gt;&lt;li&gt;Try to use $wpdb instead: Append &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/52971?action=wpdb_query_get_ids" title="#52971: defect (bug): WP_Query's meta_query With Multiple EXISTS keys and OR Relation ... (new)"&gt;?action=wpdb_query_get_ids&lt;/a&gt; in URL - &lt;strong&gt;RESULT: Success, Takes few seconds&lt;/strong&gt;
&lt;/li&gt;&lt;li&gt;See the SQL statement generated by WP_MetaQuery: add &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/52971?action=show_meta_query_clause" title="#52971: defect (bug): WP_Query's meta_query With Multiple EXISTS keys and OR Relation ... (new)"&gt;?action=show_meta_query_clause&lt;/a&gt; - &lt;strong&gt;RESULT: a Huge unnecessary &lt;/strong&gt;INNER JOIN x AS x# ON y&lt;strong&gt; relation&lt;/strong&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/52971?action=wpdb_query_delete" title="#52971: defect (bug): WP_Query's meta_query With Multiple EXISTS keys and OR Relation ... (new)"&gt;?action=wpdb_query_delete&lt;/a&gt; to delete all added posts only.
&lt;/li&gt;&lt;/ol&gt;&lt;pre class="wiki"&gt;add_action('wp', 'oxibug_trigger_action');
/**
 * Trigger Suitable Function
 *
 * @return void
 */
function oxibug_trigger_action() {
    if( ! isset( $_GET['action'] ) ) {
        return;
    }
    $action = wp_strip_all_tags( $_GET['action'] );
    switch( strtolower( $action ) ) {
        case 'insert': {
                oxibug_insert_posts_and_metas();
            } break;
        case 'wp_query_and_meta_query': {
                oxibug_WP_Query_and_meta_query();
            } break;
        case 'show_meta_query_clause': {
                oxibug_show_meta_query_clause();
            } break;
        case 'wpdb_query_get_ids': {
                oxibug_wpdb_query_get_ids();
            } break;
        case 'wpdb_query_delete': {
                oxibug_wpdb_query_delete();
            } break;
    }
}
/**
 * Return New Meta Key
 *
 * @param mixed $key
 * @return string
 */
function oxibug_get_new_meta_key( $key ) {
    return sanitize_text_field( sprintf( 'oxibug_xyz%s', $key ) );
}
/**
 * Return Key-Value Pairs array with Old and New meta keys
 *
 * @return array
 */
function oxibug_legacy_and_new_meta_keys() {
    return [
        'oxibug_abc_post_main_color'       =&amp;gt; oxibug_get_new_meta_key('_page_main_color'),
        'oxibug_abc_page_layout'           =&amp;gt; oxibug_get_new_meta_key('_page_layout'),
        'oxibug_abc_post_sbwide'           =&amp;gt; oxibug_get_new_meta_key('_page_sb_wide'),
        'oxibug_abc_post_sbnarrow'         =&amp;gt; oxibug_get_new_meta_key('_page_sb_narrow'),
        'oxibug_abc_page_sbwide'           =&amp;gt; oxibug_get_new_meta_key('_page_sb_wide'),
        'oxibug_abc_page_sbnarrow'         =&amp;gt; oxibug_get_new_meta_key('_page_sb_narrow'),
        'oxibug_abc_self_video_m4v_url'    =&amp;gt; oxibug_get_new_meta_key('_format_video_selfhosted_mp4'),
        'oxibug_abc_self_video_ogv_url'    =&amp;gt; oxibug_get_new_meta_key('_format_video_selfhosted_ogv'),
        'oxibug_abc_self_video_webmv_url'  =&amp;gt; oxibug_get_new_meta_key('_format_video_selfhosted_webmv'),
        'oxibug_abc_self_video_poster_url' =&amp;gt; oxibug_get_new_meta_key('_format_video_selfhosted_poster'),
        /* Audio */
        'oxibug_abc_soundcloud_url'        =&amp;gt; oxibug_get_new_meta_key('_format_audio_oembed'),
        'oxibug_abc_self_audio_mp3_url'    =&amp;gt; oxibug_get_new_meta_key('_format_audio_selfhosted_mp3'),
        'oxibug_abc_self_audio_oga_url'    =&amp;gt; oxibug_get_new_meta_key('_format_audio_selfhosted_ogg'),
        'oxibug_abc_self_audio_m4a_url'    =&amp;gt; oxibug_get_new_meta_key('_format_audio_selfhosted_m4a'),
        /* Post Formats: Image | Video */
        'oxibug_abc_lightbox_check'        =&amp;gt; oxibug_get_new_meta_key('_format_image_lighbox_enable'),
        'oxibug_abc_post_banner_caption'   =&amp;gt; oxibug_get_new_meta_key('_format_status_banner_caption'),
        'oxibug_abc_quote_text'            =&amp;gt; oxibug_get_new_meta_key('_format_quote_text'),
        'oxibug_abc_quote_author'          =&amp;gt; oxibug_get_new_meta_key('_format_quote_author_name'),
        'oxibug_abc_url_text'              =&amp;gt; oxibug_get_new_meta_key('_format_link_text'),
        'oxibug_abc_url_destination'       =&amp;gt; oxibug_get_new_meta_key('_format_link_url'),
        /*
            * Layout Settings - if Old = [hide] turn ON the new option
            *
            * */
        'oxibug_abc_post_breadcrumb'       =&amp;gt; oxibug_get_new_meta_key('_hide_breadcrumb'),
        'oxibug_abc_post_meta_info'        =&amp;gt; oxibug_get_new_meta_key('_hide_metas'),
        'oxibug_abc_post_share_box'        =&amp;gt; oxibug_get_new_meta_key('_hide_share_icons'),
        'oxibug_abc_post_tags'             =&amp;gt; oxibug_get_new_meta_key('_hide_tags_box'),
        'oxibug_abc_post_author_box'       =&amp;gt; oxibug_get_new_meta_key('_hide_author_box'),
        'oxibug_abc_related_posts'         =&amp;gt; oxibug_get_new_meta_key('_hide_related_posts_box'),
        'oxibug_abc_posts_navigation'      =&amp;gt; oxibug_get_new_meta_key('_hide_nav_box'),
        /* Review Items */
        'oxibug_abc_post_review_types'         =&amp;gt; oxibug_get_new_meta_key('_review_type'),    /* [disabled] =&amp;gt; Add 0 to the new meta [_review_show]  */
        'oxibug_abc_post_review_position'      =&amp;gt; oxibug_get_new_meta_key('_review_position'),
        'oxibug_abc_post_reviews_summation'    =&amp;gt; oxibug_get_new_meta_key('_review_items_avg'),   /* This field is Dynamic - SUM of all review items */
        'oxibug_abc_review_item'               =&amp;gt; oxibug_get_new_meta_key('_review_items'),
        'oxibug_abc_post_review_title'         =&amp;gt; oxibug_get_new_meta_key('_review_title'),
        'oxibug_abc_post_review_desc'          =&amp;gt; oxibug_get_new_meta_key('_review_desc'),
        'oxibug_abc_post_review_summary_title' =&amp;gt; oxibug_get_new_meta_key('_review_summary_title'),
        'oxibug_abc_post_review_summary_desc'  =&amp;gt; oxibug_get_new_meta_key('_review_summary_desc'),
        'oxibug_abc_post_review_user_rates'            =&amp;gt; oxibug_get_new_meta_key('_review_user_ratings_status'),
        'oxibug_abc_post_review_user_rates_bgcolor'    =&amp;gt; oxibug_get_new_meta_key('_review_user_ratings_result_bgcolor'),
        'oxibug_abc_post_review_btn_text'      =&amp;gt; oxibug_get_new_meta_key('_review_add_btn_text'),
        'oxibug_abc_post_review_btn_icon'      =&amp;gt; oxibug_get_new_meta_key('_review_add_btn_icon'),
        'oxibug_abc_post_review_btn_url'       =&amp;gt; oxibug_get_new_meta_key('_review_add_btn_url'),
        'oxibug_abc_post_review_btn_bgcolor'   =&amp;gt; oxibug_get_new_meta_key('_review_add_btn_bgcolor'),
        'oxibug_abc_post_review_pros_word'     =&amp;gt; oxibug_get_new_meta_key('_review_pros_word'),
        'oxibug_abc_post_review_pros_icon'     =&amp;gt; oxibug_get_new_meta_key('_review_pros_icon'),
        'oxibug_abc_post_review_pros_list'     =&amp;gt; oxibug_get_new_meta_key('_review_pros_list'),
        'oxibug_abc_post_review_cons_word'     =&amp;gt; oxibug_get_new_meta_key('_review_cons_word'),
        'oxibug_abc_post_review_cons_icon'     =&amp;gt; oxibug_get_new_meta_key('_review_cons_icon'),
        'oxibug_abc_post_review_cons_list'     =&amp;gt; oxibug_get_new_meta_key('_review_cons_list'),
        /* Post Views */
        'oxibug_abc_post_views_count'          =&amp;gt; oxibug_get_new_meta_key('_post_views'),
    ];
}
/**
 * Insert 100 Test Posts and some Meta Keys
 *
 */
function oxibug_insert_posts_and_metas() {
    $legacy_and_new_keys = oxibug_legacy_and_new_meta_keys();
    $result = [];
    for( $i=0; $i&amp;lt;100; $i++ ) {
        $post_id = wp_insert_post( [
            'post_type'     =&amp;gt; 'post',
            'post_title'    =&amp;gt; wp_strip_all_tags( sprintf( 'Test Meta Query Post #:%s', $i ) ),
            'post_content'  =&amp;gt; sprintf( 'Test Meta Query Post Content #:%s', $i ),
            'post_content_filtered' =&amp;gt; '',
            'post_excerpt'          =&amp;gt; '',
            'post_status'   =&amp;gt; 'publish',
            // 'post_author'   =&amp;gt; 1,
            // 'post_category' =&amp;gt; [],
            'comment_status'        =&amp;gt; '',
            'ping_status'           =&amp;gt; '',
            'post_password'         =&amp;gt; '',
            'to_ping'               =&amp;gt; '',
            'pinged'                =&amp;gt; '',
            'post_parent'           =&amp;gt; 0,
            'menu_order'            =&amp;gt; 0,
            'guid'                  =&amp;gt; '',
            'import_id'             =&amp;gt; 0,
            'context'               =&amp;gt; '',
            'post_date'             =&amp;gt; '',
            'post_date_gmt'         =&amp;gt; '',
        ], TRUE, TRUE );
        if( ! is_wp_error( $post_id ) ) {
            $result[ $post_id ] = [];
            foreach( (array) array_keys( $legacy_and_new_keys ) as $_legacy_key ) {
                $upstatus = update_post_meta( $post_id, $_legacy_key, '' );
                $result[ $post_id ][ $_legacy_key ] = $upstatus ? 'Added' : 'Failed';
            }
            /* Clean Cache */
            clean_post_cache( $post_id );
        }
        else {
            echo 'ERROR: Insert Post Failed!';
        }
    }
    /* DEBUG */
    echo sprintf( '%d Posts Inserted', count( $result ) );
    // echo print_r( $result );
}
/**
 * --- DEBUG ---
 * Show the Meta Query SQL Statement
 *
 */
function oxibug_show_meta_query_clause() {
    /**
     *
     * @var wpdb
     * */
    global $wpdb;
    $legacy_meta_keys = oxibug_legacy_and_new_meta_keys();
    $meta_query = [
        'relation'  =&amp;gt; 'OR'
    ];
    foreach( (array) array_keys( $legacy_meta_keys ) as $_legacy_key ) {
        $meta_query[] = [
            'key' =&amp;gt; $_legacy_key,
            'compare' =&amp;gt; 'EXISTS'
        ];
    }
    $objMetaQuery = new WP_Meta_Query( $meta_query );
    echo print_r( $objMetaQuery-&amp;gt;get_sql( 'post', $wpdb-&amp;gt;posts, 'ID', NULL ) );
}
/**
 * Query using WP_Query and meta_query key inside it
 *
 */
function oxibug_WP_Query_and_meta_query() {
    /**
     *
     * @var wpdb
     * */
    global $wpdb;
    $legacy_meta_keys = oxibug_legacy_and_new_meta_keys();
    $meta_query = [
        'relation'  =&amp;gt; 'OR'
    ];
    foreach( (array) array_keys( $legacy_meta_keys ) as $_legacy_key ) {
        $meta_query[] = [
            'key' =&amp;gt; $_legacy_key,
            'compare' =&amp;gt; 'EXISTS'
        ];
    }
    $obj_WP_Query = new WP_Query( [
        'numberposts'   =&amp;gt; -1,
        'paged'         =&amp;gt; null,
        'post_type'     =&amp;gt; 'post',
        'post_status'   =&amp;gt; 'publish',
        'meta_query'    =&amp;gt; $meta_query,
        'fields'        =&amp;gt; 'ids',
        'cache_results' =&amp;gt; false,
    ] );
    /*
     * Stuck in an Infinite Loop Because of the Huge SQL Statement
     * generated by [meta_query]
     *
     * */
    if( $obj_WP_Query-&amp;gt;have_posts() ) {
        echo sprintf( '%d Posts Found', $obj_WP_Query-&amp;gt;found_posts );
        /* DEBUG - NOT Working - */
        // echo print_r( $obj_WP_Query-&amp;gt;meta_query-&amp;gt;get_sql( 'post', $wpdb-&amp;gt;posts, 'ID', NULL ) );
    }
    else {
        echo 'No Posts Found';
    }
    $obj_WP_Query-&amp;gt;reset_postdata();
    wp_cache_flush();
}
/**
 * Get Posts IDs by one of the meta_key(s) provided
 *
 */
function oxibug_wpdb_query_get_ids() {
    global $wpdb;
    $legacy_meta_keys = oxibug_legacy_and_new_meta_keys();
    $qry = "SELECT DISTINCT tbl_posts.ID FROM {$wpdb-&amp;gt;posts} tbl_posts INNER JOIN {$wpdb-&amp;gt;postmeta} tbl_metas ON ( tbl_posts.ID = tbl_metas.post_id ) WHERE";
    /* Add [OR] in the second condition */
    $where_clause = 0;
    foreach( (array) array_keys( $legacy_meta_keys ) as $_legacy_key ) {
        $where_clause++;
        $qry .= ( $where_clause === 1 ) ?
            $wpdb-&amp;gt;prepare( ' tbl_metas.meta_key = %s', esc_sql( $_legacy_key ) ) :
            $wpdb-&amp;gt;prepare( ' OR tbl_metas.meta_key = %s', esc_sql( $_legacy_key ) );
    }
    $result = $wpdb-&amp;gt;get_results( $qry );
    $wpdb-&amp;gt;flush();
    echo print_r( wp_list_pluck( $result, 'ID' ) );
}
/**
 * --- DEBUG ---
 *
 * DELETE all added Posts by meta_key(s)
 *
 */
function oxibug_wpdb_query_delete() {
    global $wpdb;
    $legacy_meta_keys = oxibug_legacy_and_new_meta_keys();
    $qry = "DELETE tbl_posts, tbl_metas FROM {$wpdb-&amp;gt;posts} tbl_posts INNER JOIN {$wpdb-&amp;gt;postmeta} tbl_metas ON ( tbl_posts.ID = tbl_metas.post_id ) WHERE";
    $where_clause = 0;
    foreach( (array) array_keys( $legacy_meta_keys ) as $_legacy_key ) {
        $where_clause++;
        $qry .= ( $where_clause === 1 ) ?
            $wpdb-&amp;gt;prepare( ' tbl_metas.meta_key = %s', esc_sql( $_legacy_key ) ) :
            $wpdb-&amp;gt;prepare( ' OR tbl_metas.meta_key = %s', esc_sql( $_legacy_key ) );
    }
    $result = $wpdb-&amp;gt;get_results( $qry );
    $wpdb-&amp;gt;flush();
}
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #52963 (Could use a Helper Function for Auto-Updates) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Mon, 05 Apr 2021 12:27:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52963#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52963#comment:2/1617625624215868</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1167"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1167&lt;/a&gt; on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/wordpress-develop&lt;/a&gt; by &lt;a class="ext-link" href="https://github.com/donmhico"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;donmhico&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
This PR adds a new function &lt;code&gt;does_plugin_auto_updates( $plugin )&lt;/code&gt; which returns whether a plugin is toggled for auto updates.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
A few things.&lt;br /&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;The function &lt;strong&gt;does not&lt;/strong&gt; check whether a plugin is activated or not since it's possible to enable or disable the auto updates regardless of a plugin activation state.
&lt;/li&gt;&lt;li&gt;The function is added in &lt;code&gt;src/wp-admin/includes/plugin.php&lt;/code&gt; so that file should be included first, &lt;code&gt;include_once( ABSPATH . 'wp-admin/includes/plugin.php' );&lt;/code&gt;, if the function is needed in the frontend.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Trac ticket: &lt;a href="https://core.trac.wordpress.org/ticket/52963"&gt;https://core.trac.wordpress.org/ticket/52963&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52970 (Improve text in help tabs of Personal Data Exporter/Eraser) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Mon, 05 Apr 2021 11:03:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52970#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52970#comment:1/1617620586948090</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1166"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1166&lt;/a&gt; on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/wordpress-develop&lt;/a&gt; by &lt;a class="ext-link" href="https://github.com/dimadin"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;dimadin&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
Trac ticket:  &lt;a href="https://core.trac.wordpress.org/ticket/52970"&gt;https://core.trac.wordpress.org/ticket/52970&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52970 (Improve text in help tabs of Personal Data Exporter/Eraser) created</title>
      
        <dc:creator>dimadin</dc:creator>

      <pubDate>Mon, 05 Apr 2021 10:59:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52970</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52970/1617620391760589</guid>
      <description>&lt;p&gt;
In &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43994" title="#43994: enhancement: Help for Export/Erasure and Privacy admin pages need text and links. (closed: fixed)"&gt;#43994&lt;/a&gt;, it was proposed to add help tabs to Personal Data Exporter/Eraser tools. They were added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50147" title="Privacy: Add help tabs for Export Personal Data and Erase Personal ..."&gt;[50147]&lt;/a&gt; based on proposal by @burtrw. However, text that was committed gives incorrect information and it's inconsistent.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The biggest issue is that it gives false information about what data is deleted/anonymized by default. The only thing that is actually deleted/anonymized is the data about author of the comment user has made. My patch makes the following changes:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Only lists things that eraser actually does.
&lt;/li&gt;&lt;li&gt;Reviews listing of things that are exported, and uses names that are used in an export file.
&lt;/li&gt;&lt;li&gt;Uses sentence case for listing.
&lt;/li&gt;&lt;li&gt;Appends "Personal" in front of "Data Exporter/Eraser".
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Exporter: &lt;a class="ext-link" href="https://imgur.com/xhfZA24"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;BEFORE&lt;/a&gt; | &lt;a class="ext-link" href="https://imgur.com/br6ZIMz"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;AFTER&lt;/a&gt;&lt;br /&gt;
Eraser: &lt;a class="ext-link" href="https://imgur.com/x0xHhoB"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;BEFORE&lt;/a&gt; | &lt;a class="ext-link" href="https://imgur.com/OY7hne5"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;AFTER&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #52627 (Coding Standards fixes for WP 5.8) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 05 Apr 2021 10:48:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52627#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52627#comment:17/1617619692664704</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50658" title="Coding Standards: Give some variables in `WP_Importer` a more ..."&gt;50658&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Coding Standards: Give some variables in &lt;code&gt;WP_Importer&lt;/code&gt; a more meaningful name.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52627" title="#52627: task (blessed): Coding Standards fixes for WP 5.8 (closed: fixed)"&gt;#52627&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [50658]: Coding Standards: Give some variables in `WP_Importer` a more ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 05 Apr 2021 10:48:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/50658</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/50658/1617619691634735</guid>
      <description>&lt;p&gt;
Coding Standards: Give some variables in &lt;code&gt;WP_Importer&lt;/code&gt; a more meaningful name.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52627" title="#52627: task (blessed): Coding Standards fixes for WP 5.8 (closed: fixed)"&gt;#52627&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #52627 (Coding Standards fixes for WP 5.8) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 05 Apr 2021 10:36:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52627#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52627#comment:16/1617618978646296</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50657" title="Coding Standards: Use strict comparison in ..."&gt;50657&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Coding Standards: Use strict comparison in &lt;code&gt;wp-admin/includes/class-wp-filesystem-*.php&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52627" title="#52627: task (blessed): Coding Standards fixes for WP 5.8 (closed: fixed)"&gt;#52627&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [50657]: Coding Standards: Use strict comparison in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 05 Apr 2021 10:36:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/50657</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/50657/1617618977672051</guid>
      <description>&lt;p&gt;
Coding Standards: Use strict comparison in &lt;code&gt;wp-admin/includes/class-wp-filesystem-*.php&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52627" title="#52627: task (blessed): Coding Standards fixes for WP 5.8 (closed: fixed)"&gt;#52627&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #52969 (Permalink for /wp-includes falls back to blog post) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 05 Apr 2021 10:11:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52969#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52969#comment:2/1617617460541317</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52969 (Permalink for /wp-includes falls back to blog post) updated</title>
      
        <dc:creator>fancsali</dc:creator>

      <pubDate>Mon, 05 Apr 2021 09:48:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52969#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52969#comment:1/1617616091034025</guid>
      <description>&lt;p&gt;
Checked another few URLs, and the issue seems to be present for other URLs too, for example:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;example.com/wp-content/plugins/foo/&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;example.com/wp-conetnt/themes/foo/&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;example.com/wp-admin/foo/&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;...
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52969 (Permalink for /wp-includes falls back to blog post) created</title>
      
        <dc:creator>fancsali</dc:creator>

      <pubDate>Mon, 05 Apr 2021 09:39:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52969</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52969/1617615585101479</guid>
      <description>&lt;p&gt;
After setting up WordPress, and enabling pretty looking permalinks, I found something odd happening.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The Apache rewrite rules have been also set up in the VHost config:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;ServerName example.com
DocumentRoot /usr/share/wordpress
Alias /wp-content /var/www/example.com/wp-content
RewriteEngine On
RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]
RewriteRule ^index\.php$ - [L]
RewriteCond /usr/share/wordpress%{REQUEST_URI} !-f
RewriteCond /usr/share/wordpress%{REQUEST_URI} !-d
RewriteCond /var/www/example.com%{REQUEST_URI} !-f
RewriteCond /var/www/example.com%{REQUEST_URI} !-d
RewriteRule . /index.php [L]
# Directory permissions omitted
&lt;/pre&gt;&lt;p&gt;
&lt;strong&gt;Note&lt;/strong&gt;: I have the (shared) code in &lt;code&gt;/usr/share/wordpress&lt;/code&gt; and the actual &lt;em&gt;site-specific&lt;/em&gt; content in &lt;code&gt;/var/www/&amp;lt;domain-name&amp;gt;&lt;/code&gt; so I can host several sites with the same WP installation.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
So, everything seems fine and dandy, until Chrome tries to load some &lt;code&gt;.js.map&lt;/code&gt; files, which will raise a warning in the browser console:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
DevTools failed to load SourceMap: Could not parse content for &lt;a class="ext-link" href="https://example.com/wp-includes/js/underscore.min.js.map"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://example.com/wp-includes/js/underscore.min.js.map&lt;/a&gt;: Unexpected token &amp;lt; in JSON at position 0&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Having a look into the issue, I found, that most of the non-existent files will correctly return a 404 (as before the permalinks), however anything below &lt;code&gt;/wp-includes/js/&lt;/code&gt; will fall back to my first blog post. (So &lt;code&gt;https://7c00.io/wp-includes/js/foo/&lt;/code&gt; will also show my "hello-world" test post)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As due the rewrite rules everything is essentially handled by PHP, I suspect this is an issue with the WP permalinks business logic.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #52967 (error: without the possibility of downloading translations:) updated</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Mon, 05 Apr 2021 09:09:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52967#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52967#comment:2/1617613745831487</guid>
      <description>&lt;p&gt;
Hi there!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As per my search wp_remote_post function use WP_Http::request() function and &lt;code&gt;blocking&lt;/code&gt; default argument is &lt;code&gt;true&lt;/code&gt; &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/master/wp-includes/class-http.php#L202"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/master/wp-includes/class-http.php#L202&lt;/a&gt; &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39358 (Media search speed has been dramatically reduced) updated</title>
      
        <dc:creator>Krstarica</dc:creator>

      <pubDate>Mon, 05 Apr 2021 07:24:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39358#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39358#comment:20/1617607460492677</guid>
      <description>&lt;p&gt;
On WordPress 5.7 media search is still unbearably slow on large websites.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
# Query_time: 12.417980  Lock_time: 0.000105  Rows_sent: 20  Rows_examined: 942798&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT
  SQL_CALC_FOUND_ROWS wp_posts.ID
FROM
  wp_posts
  LEFT JOIN wp_postmeta AS sq1 ON (
    wp_posts.ID = sq1.post_id
    AND sq1.meta_key = '_wp_attached_file'
  )
WHERE
  1 = 1
  AND (
    (
      (
        wp_posts.post_title LIKE '%test%'
      )
      OR (
        wp_posts.post_excerpt LIKE '%test%'
      )
      OR (
        wp_posts.post_content LIKE '%test%'
      )
      OR (sq1.meta_value LIKE '%test%')
    )
  )
  AND wp_posts.post_type = 'attachment'
  AND (
    (
      wp_posts.post_status = 'inherit'
      OR wp_posts.post_status = 'private'
    )
  )
GROUP BY
  wp_posts.ID
ORDER BY
  wp_posts.post_title LIKE '%test%' DESC,
  wp_posts.post_date DESC
LIMIT
  0, 20;
&lt;/pre&gt;&lt;p&gt;
EXPLAIN says:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;+------+-------------+----------+------+------------------+------------------+---------+-------------------------+--------+---------------------------------------------------------------------+
| id   | select_type | table    | type | possible_keys    | key              | key_len | ref                     | rows   | Extra                                                               |
+------+-------------+----------+------+------------------+------------------+---------+-------------------------+--------+---------------------------------------------------------------------+
|    1 | SIMPLE      | wp_posts | ref  | type_status_date | type_status_date | 82      | const                   | 366787 | Using index condition; Using where; Using temporary; Using filesort |
|    1 | SIMPLE      | sq1      | ref  | post_id,meta_key | post_id          | 8       | wordpress.wp_posts.ID   |    2   | Using where                                                         |
+------+-------------+----------+------+------------------+------------------+---------+-------------------------+--------+---------------------------------------------------------------------+
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35725 (Add WebP support.) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Mon, 05 Apr 2021 05:31:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35725#comment:152</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35725#comment:152/1617600694062867</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35725#comment:151" title="Comment 151"&gt;adamsilverstein&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@mikeschroder - The latest patch should do this when Imagick is present; GD currently cannot generate lossless WebP images.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's awesome; thank you! I'll give that a test.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As an update, I'm still figuring out the best way to do DSSIM testing, because the tool used in the previous tests does not support WebP. It looks like this can be done with a user script + ImageMagick, but I've got to find out if the numbers generated can be compared to the previous ones, or whether that'll have to start from scratch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If anyone has thoughts / previous testing with DSSIM and WebP, insight and recs would be appreciated!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
One note on the new patch -- the WebP specific functions/sub-functions for gathering size/meta are starting to get a little confusing for me to follow. I'm wondering if it might be helpful to consolidate a little bit? I'm guessing it's this way for a reason, but figured I'd pass on the feedback.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52968 (Bootstrap 5 img-fluid and image caption conflict) updated</title>
      
        <dc:creator>ravipatel</dc:creator>

      <pubDate>Mon, 05 Apr 2021 03:24:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52968#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52968#comment:1/1617593076476134</guid>
      <description>&lt;p&gt;
@jeyhuno Please attach some screensho easy to get idea.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43502 (`WP_REST_Posts_Controller::prepare_item_for_response()` doesn't reset ...) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Sun, 04 Apr 2021 23:09:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43502#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43502#comment:19/1617577763926022</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1165"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1165&lt;/a&gt; on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/wordpress-develop&lt;/a&gt; by &lt;a class="ext-link" href="https://github.com/engahmeds3ed"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;engahmeds3ed&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
Call &lt;code&gt;wp_reset_postdata&lt;/code&gt; at the end of &lt;code&gt;prepare_item_for_response&lt;/code&gt; method&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Trac ticket: &lt;a href="https://core.trac.wordpress.org/ticket/43502"&gt;https://core.trac.wordpress.org/ticket/43502&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52968 (Bootstrap 5 img-fluid and image caption conflict) created</title>
      
        <dc:creator>jeyhuno</dc:creator>

      <pubDate>Sun, 04 Apr 2021 22:58:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52968</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52968/1617577100910426</guid>
      <description>&lt;p&gt;
Hello,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I am using Bootstrap version 5 with WordPress. When I try to add captions to image which is uploaded to post it conflicts with img CSS class "img-fluid". Adding caption adds parent container to the img and this changes normal img-fluid behavior. After removing the captions img-fluid behaves normal.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41616 (REST API: Expose old slugs) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Sun, 04 Apr 2021 21:10:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41616#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41616#comment:3/1617570636028238</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1164"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1164&lt;/a&gt; on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/wordpress-develop&lt;/a&gt; by &lt;a class="ext-link" href="https://github.com/engahmeds3ed"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;engahmeds3ed&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
Add &lt;code&gt;old_slug&lt;/code&gt; to list of fields returned with post details.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Trac ticket: &lt;a href="https://core.trac.wordpress.org/ticket/41616"&gt;https://core.trac.wordpress.org/ticket/41616&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52932 (Rest Api enum validation does not work correctly WordPress 5.7) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 04 Apr 2021 19:11:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52932#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52932#comment:12/1617563468725236</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50656" title="REST API: Correct `enum` validation for numeric values.
When ..."&gt;50656&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Correct &lt;code&gt;enum&lt;/code&gt; validation for numeric values.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When validating &lt;code&gt;enum&lt;/code&gt; values as &lt;code&gt;integer&lt;/code&gt; or &lt;code&gt;number&lt;/code&gt;, consider a number with a zero fractional part to be equivalent to an integer of the same value.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In &lt;code&gt;rest_are_values_equal()&lt;/code&gt;, when comparing two values of type &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;float&lt;/code&gt; (in any combination), first cast both of them to &lt;code&gt;float&lt;/code&gt; and then compare.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This matches some test cases from the official JSON Schema test suite.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50010" title="REST API: Support type coercion when validating the `enum` JSON Schema ..."&gt;[50010]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props yakimun, stefanjoebstl, TimothyBlynJacobs, rachelbaker.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50653" title="REST API: Correct `enum` validation for numeric values.
When ..."&gt;[50653]&lt;/a&gt; to the 5.7 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52932" title="#52932: defect (bug): Rest Api enum validation does not work correctly WordPress 5.7 (closed: fixed)"&gt;#52932&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [50656]: REST API: Correct `enum` validation for numeric values.  When ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 04 Apr 2021 19:11:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/50656</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/50656/1617563467772827</guid>
      <description>&lt;p&gt;
REST API: Correct &lt;code&gt;enum&lt;/code&gt; validation for numeric values.
&lt;/p&gt;
&lt;p&gt;
When validating &lt;code&gt;enum&lt;/code&gt; values as &lt;code&gt;integer&lt;/code&gt; or &lt;code&gt;number&lt;/code&gt;, consider a number with a zero fractional part to be equivalent to an integer of the same value.
&lt;/p&gt;
&lt;p&gt;
In &lt;code&gt;rest_are_values_equal()&lt;/code&gt;, when comparing two values of type &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;float&lt;/code&gt; (in any combination), first cast both of them to &lt;code&gt;float&lt;/code&gt; and then compare.
&lt;/p&gt;
&lt;p&gt;
This matches some test cases from the official JSON Schema test suite.
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50010" title="REST API: Support type coercion when validating the `enum` JSON Schema ..."&gt;[50010]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Props yakimun, stefanjoebstl, TimothyBlynJacobs, rachelbaker.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50653" title="REST API: Correct `enum` validation for numeric values.
When ..."&gt;[50653]&lt;/a&gt; to the 5.7 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52932" title="#52932: defect (bug): Rest Api enum validation does not work correctly WordPress 5.7 (closed: fixed)"&gt;#52932&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #52627 (Coding Standards fixes for WP 5.8) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 04 Apr 2021 18:32:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52627#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52627#comment:15/1617561168584087</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50655" title="Coding Standards: Move some translator comments to the correct place.
 ..."&gt;50655&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Coding Standards: Move some translator comments to the correct place.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/46273" title="Site Health: Include simple debug data in fatal error protection ..."&gt;[46273]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50060" title="REST API: Refactor `rest_validate_value_from_schema` into separate ..."&gt;[50060]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50117" title="Login: Enable filtering the `back to blog` link.
Add a new ..."&gt;[50117]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50654" title="Coding Standards: Move some translator comments to the correct place.
 ..."&gt;[50654]&lt;/a&gt; to the 5.7 branch.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52627" title="#52627: task (blessed): Coding Standards fixes for WP 5.8 (closed: fixed)"&gt;#52627&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [50655]: Coding Standards: Move some translator comments to the correct place.  ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 04 Apr 2021 18:32:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/50655</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/50655/1617561167631868</guid>
      <description>&lt;p&gt;
Coding Standards: Move some translator comments to the correct place.
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/46273" title="Site Health: Include simple debug data in fatal error protection ..."&gt;[46273]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50060" title="REST API: Refactor `rest_validate_value_from_schema` into separate ..."&gt;[50060]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50117" title="Login: Enable filtering the `back to blog` link.
Add a new ..."&gt;[50117]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50654" title="Coding Standards: Move some translator comments to the correct place.
 ..."&gt;[50654]&lt;/a&gt; to the 5.7 branch.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52627" title="#52627: task (blessed): Coding Standards fixes for WP 5.8 (closed: fixed)"&gt;#52627&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #52627 (Coding Standards fixes for WP 5.8) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 04 Apr 2021 18:31:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52627#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52627#comment:14/1617561100111751</guid>
      <description>&lt;p&gt;
Since &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50060" title="REST API: Refactor `rest_validate_value_from_schema` into separate ..."&gt;[50060]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50117" title="Login: Enable filtering the `back to blog` link.
Add a new ..."&gt;[50117]&lt;/a&gt; were in 5.7, going to merge &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50654" title="Coding Standards: Move some translator comments to the correct place.
 ..."&gt;[50654]&lt;/a&gt; to the 5.7 branch too.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52627 (Coding Standards fixes for WP 5.8) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 04 Apr 2021 18:29:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52627#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52627#comment:13/1617560940679438</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50654" title="Coding Standards: Move some translator comments to the correct place.
 ..."&gt;50654&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Coding Standards: Move some translator comments to the correct place.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/46273" title="Site Health: Include simple debug data in fatal error protection ..."&gt;[46273]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50060" title="REST API: Refactor `rest_validate_value_from_schema` into separate ..."&gt;[50060]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50117" title="Login: Enable filtering the `back to blog` link.
Add a new ..."&gt;[50117]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52627" title="#52627: task (blessed): Coding Standards fixes for WP 5.8 (closed: fixed)"&gt;#52627&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [50654]: Coding Standards: Move some translator comments to the correct place.  ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 04 Apr 2021 18:28:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/50654</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/50654/1617560939734247</guid>
      <description>&lt;p&gt;
Coding Standards: Move some translator comments to the correct place.
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/46273" title="Site Health: Include simple debug data in fatal error protection ..."&gt;[46273]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50060" title="REST API: Refactor `rest_validate_value_from_schema` into separate ..."&gt;[50060]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50117" title="Login: Enable filtering the `back to blog` link.
Add a new ..."&gt;[50117]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52627" title="#52627: task (blessed): Coding Standards fixes for WP 5.8 (closed: fixed)"&gt;#52627&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #52932 (Rest Api enum validation does not work correctly WordPress 5.7) reopened</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 04 Apr 2021 18:06:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52932#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52932#comment:11/1617559582311375</guid>
      <description>&lt;p&gt;
Reopening for backporting to the 5.7 branch.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #52932 (Rest Api enum validation does not work correctly WordPress 5.7) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 04 Apr 2021 18:05:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52932#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52932#comment:10/1617559511702152</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50653" title="REST API: Correct `enum` validation for numeric values.
When ..."&gt;50653&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Correct &lt;code&gt;enum&lt;/code&gt; validation for numeric values.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When validating &lt;code&gt;enum&lt;/code&gt; values as &lt;code&gt;integer&lt;/code&gt; or &lt;code&gt;number&lt;/code&gt;, consider a number with a zero fractional part to be equivalent to an integer of the same value.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In &lt;code&gt;rest_are_values_equal()&lt;/code&gt;, when comparing two values of type &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;float&lt;/code&gt; (in any combination), first cast both of them to &lt;code&gt;float&lt;/code&gt; and then compare.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This matches some test cases from the official JSON Schema test suite.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50010" title="REST API: Support type coercion when validating the `enum` JSON Schema ..."&gt;[50010]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props yakimun, stefanjoebstl, TimothyBlynJacobs, rachelbaker.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52932" title="#52932: defect (bug): Rest Api enum validation does not work correctly WordPress 5.7 (closed: fixed)"&gt;#52932&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [50653]: REST API: Correct `enum` validation for numeric values.  When ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 04 Apr 2021 18:05:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/50653</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/50653/1617559510746992</guid>
      <description>&lt;p&gt;
REST API: Correct &lt;code&gt;enum&lt;/code&gt; validation for numeric values.
&lt;/p&gt;
&lt;p&gt;
When validating &lt;code&gt;enum&lt;/code&gt; values as &lt;code&gt;integer&lt;/code&gt; or &lt;code&gt;number&lt;/code&gt;, consider a number with a zero fractional part to be equivalent to an integer of the same value.
&lt;/p&gt;
&lt;p&gt;
In &lt;code&gt;rest_are_values_equal()&lt;/code&gt;, when comparing two values of type &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;float&lt;/code&gt; (in any combination), first cast both of them to &lt;code&gt;float&lt;/code&gt; and then compare.
&lt;/p&gt;
&lt;p&gt;
This matches some test cases from the official JSON Schema test suite.
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50010" title="REST API: Support type coercion when validating the `enum` JSON Schema ..."&gt;[50010]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Props yakimun, stefanjoebstl, TimothyBlynJacobs, rachelbaker.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52932" title="#52932: defect (bug): Rest Api enum validation does not work correctly WordPress 5.7 (closed: fixed)"&gt;#52932&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #52627 (Coding Standards fixes for WP 5.8) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 04 Apr 2021 16:47:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52627#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52627#comment:12/1617554869313175</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50652" title="Coding Standards: Use strict comparison in ..."&gt;50652&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Coding Standards: Use strict comparison in &lt;code&gt;wp-admin/includes/class-core-upgrader.php&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52627" title="#52627: task (blessed): Coding Standards fixes for WP 5.8 (closed: fixed)"&gt;#52627&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [50652]: Coding Standards: Use strict comparison in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 04 Apr 2021 16:47:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/50652</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/50652/1617554868333101</guid>
      <description>&lt;p&gt;
Coding Standards: Use strict comparison in &lt;code&gt;wp-admin/includes/class-core-upgrader.php&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52627" title="#52627: task (blessed): Coding Standards fixes for WP 5.8 (closed: fixed)"&gt;#52627&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #11800 (doubled execution of cron jobs) updated</title>
      
        <dc:creator>opajaap</dc:creator>

      <pubDate>Sun, 04 Apr 2021 06:55:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11800#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11800#comment:9/1617519344561076</guid>
      <description>&lt;p&gt;
This is especially annoying when the cron process sends emails.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Here is a proof of evidence that this bug still exists.&lt;br /&gt;
What you see is a logfile from plugin wp photo album plus (last message on top) that shows that process ids 1965 and 1975 are doing the same job simultaneously.&lt;br /&gt;
The processes can not communicate through a wp option indicating what they are doing because the options table is not updated immediately. So saving the hashvalues in an option does not work here.&lt;br /&gt;
My solution to this is to write essential data indicating the job in a file and call clearstatcache(). If there is a second process attempting to do the same, it sees that in the file and can abort its execution. This kind of 'locking' is safe as such that it can not hang up the system (the 'lock' does not need to be released, it will be overwritten by the next email job).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It took me only a week to find this out.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The logfile (the process ids are from getmypid() and placed between brackets):&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Eml: on:01.04.2021 17:06:25: cron-job (1965): Done mailing commentnotify&lt;br /&gt;
Eml: on:01.04.2021 17:06:25: cron-job (1965): Mailinglist commentprevious scheduled for run in 120 seconds. Args: 0, 0, 252247, , 0&lt;br /&gt;
Eml: on:01.04.2021 17:06:25: cron-job (1965): Hash: ffb88919f374158d5ec5a63184939d1d added to sent mails&lt;br /&gt;
Eml: on:01.04.2021 17:06:25: cron-job (1965): Hash: ffb88919f374158d5ec5a63184939d1d, Mail sent to: [redacted] (105190) subject: [iPhotography] Comment on photo Monday's Photoshoot, photo: 183876&lt;br /&gt;
Eml: on:01.04.2021 17:06:25: cron-job (1965): Hash: ca4194fbb23e7fd80c1d31750555f1e9 added to sent mails&lt;br /&gt;
Eml: on:01.04.2021 17:06:25: cron-job (1965): Hash: ca4194fbb23e7fd80c1d31750555f1e9, Mail sent to: [redacted] (101488) subject: [iPhotography] Comment on photo Monday's Photoshoot, photo: 183876&lt;br /&gt;
Eml: on:01.04.2021 17:06:25: cron-job (1965): Hash: 3080ce36ffc367958b991b97abc20427 added to sent mails&lt;br /&gt;
Eml: on:01.04.2021 17:06:25: cron-job (1965): Hash: 3080ce36ffc367958b991b97abc20427, Mail sent to: [redacted] (100641) subject: [iPhotography] Comment on photo Monday's Photoshoot, photo: 183876&lt;br /&gt;
Eml: on:01.04.2021 17:06:25: cron-job (1965): Hash: b9fba1d0496a9b715a96a0906899d5d6 added to sent mails&lt;br /&gt;
Eml: on:01.04.2021 17:06:25: cron-job (1965): Hash: b9fba1d0496a9b715a96a0906899d5d6, Mail sent to: [redacted] (98553) subject: [iPhotography] Comment on photo Monday's Photoshoot, photo: 183876&lt;br /&gt;
Eml: on:01.04.2021 17:06:25: cron-job (1965): Hash: 622cbf03952ce0489f532d3d352037ab added to sent mails&lt;br /&gt;
Eml: on:01.04.2021 17:06:25: cron-job (1965): Hash: 622cbf03952ce0489f532d3d352037ab, Mail sent to: [redacted] (95781) subject: [iPhotography] Comment on photo Monday's Photoshoot, photo: 183876&lt;br /&gt;
Eml: on:01.04.2021 17:06:24: cron-job (1965): Hash: 4452147011a8668325abec4fc0a51582 added to sent mails&lt;br /&gt;
Eml: on:01.04.2021 17:06:24: cron-job (1965): Hash: 4452147011a8668325abec4fc0a51582, Mail sent to: [redacted] (84625) subject: [iPhotography] Comment on photo Monday's Photoshoot, photo: 183876&lt;br /&gt;
Eml: on:01.04.2021 17:06:24: cron-job (1975): Done mailing commentnotify&lt;br /&gt;
Eml: on:01.04.2021 17:06:24: cron-job (1975): Mailinglist commentprevious scheduled for run in 120 seconds. Args: 0, 0, 252247, , 0&lt;br /&gt;
Eml: on:01.04.2021 17:06:24: cron-job (1975): Hash: ffb88919f374158d5ec5a63184939d1d added to sent mails&lt;br /&gt;
Eml: on:01.04.2021 17:06:24: cron-job (1975): Hash: ffb88919f374158d5ec5a63184939d1d, Mail sent to: [redacted] (105190) subject: [iPhotography] Comment on photo Monday's Photoshoot, photo: 183876&lt;br /&gt;
Eml: on:01.04.2021 17:06:24: cron-job (1965): Hash: a476d22a0401eaf26deb4e04430ebba0 added to sent mails&lt;br /&gt;
Eml: on:01.04.2021 17:06:24: cron-job (1965): Hash: a476d22a0401eaf26deb4e04430ebba0, Mail sent to: [redacted] (80305) subject: [iPhotography] Comment on photo Monday's Photoshoot, photo: 183876&lt;br /&gt;
Eml: on:01.04.2021 17:06:24: cron-job (1975): Hash: ca4194fbb23e7fd80c1d31750555f1e9 added to sent mails&lt;br /&gt;
Eml: on:01.04.2021 17:06:24: cron-job (1975): Hash: ca4194fbb23e7fd80c1d31750555f1e9, Mail sent to: [redacted] (101488) subject: [iPhotography] Comment on photo Monday's Photoshoot, photo: 183876&lt;br /&gt;
Eml: on:01.04.2021 17:06:24: cron-job (1965): Hash: 0985dd7ea9637e2c46f75137250267c9 added to sent mails&lt;br /&gt;
Eml: on:01.04.2021 17:06:24: cron-job (1965): Hash: 0985dd7ea9637e2c46f75137250267c9, Mail sent to: [redacted] (36855) subject: [iPhotography] Comment on photo Monday's Photoshoot, photo: 183876&lt;br /&gt;
Eml: on:01.04.2021 17:06:24: cron-job (1975): Hash: 3080ce36ffc367958b991b97abc20427 added to sent mails&lt;br /&gt;
Eml: on:01.04.2021 17:06:24: cron-job (1975): Hash: 3080ce36ffc367958b991b97abc20427, Mail sent to: [redacted] (100641) subject: [iPhotography] Comment on photo Monday's Photoshoot, photo: 183876&lt;br /&gt;
Eml: on:01.04.2021 17:06:24: cron-job (1965): Potential receipients: 3643,36855,80305,84625,95781,101488,104541,105190,98553,100641, all subscribed potential: 36855,80305,84625,95781,98553,100641,101488,105190&lt;br /&gt;
Eml: on:01.04.2021 17:06:24: cron-job (1975): Hash: b9fba1d0496a9b715a96a0906899d5d6 added to sent mails&lt;br /&gt;
Eml: on:01.04.2021 17:06:24: cron-job (1975): Hash: b9fba1d0496a9b715a96a0906899d5d6, Mail sent to: [redacted] (98553) subject: [iPhotography] Comment on photo Monday's Photoshoot, photo: 183876&lt;br /&gt;
Eml: on:01.04.2021 17:06:24: cron-job (1965): superusers&lt;br /&gt;
Eml: on:01.04.2021 17:06:24: cron-job (1965): comment owner 100641, JoKayaks&lt;br /&gt;
Eml: on:01.04.2021 17:06:24: cron-job (1965): photo owner 98553, happyhannah&lt;br /&gt;
Eml: on:01.04.2021 17:06:24: cron-job (1965): admins 3643,36855,80305,84625,95781,101488,104541,105190&lt;br /&gt;
Eml: on:01.04.2021 17:06:24: cron-job (1975): Hash: 622cbf03952ce0489f532d3d352037ab added to sent mails&lt;br /&gt;
Eml: on:01.04.2021 17:06:24: cron-job (1975): Hash: 622cbf03952ce0489f532d3d352037ab, Mail sent to: [redacted] (95781) subject: [iPhotography] Comment on photo Monday's Photoshoot, photo: 183876&lt;br /&gt;
Eml: on:01.04.2021 17:06:24: cron-job (1975): Hash: 4452147011a8668325abec4fc0a51582 added to sent mails&lt;br /&gt;
Eml: on:01.04.2021 17:06:24: cron-job (1975): Hash: 4452147011a8668325abec4fc0a51582, Mail sent to: [redacted] (84625) subject: [iPhotography] Comment on photo Monday's Photoshoot, photo: 183876&lt;br /&gt;
Eml: on:01.04.2021 17:06:24: cron-job (1975): Hash: a476d22a0401eaf26deb4e04430ebba0 added to sent mails&lt;br /&gt;
Eml: on:01.04.2021 17:06:24: cron-job (1975): Hash: a476d22a0401eaf26deb4e04430ebba0, Mail sent to: [redacted] (80305) subject: [iPhotography] Comment on photo Monday's Photoshoot, photo: 183876&lt;br /&gt;
Eml: on:01.04.2021 17:06:24: cron-job (1975): Hash: 0985dd7ea9637e2c46f75137250267c9 added to sent mails&lt;br /&gt;
Eml: on:01.04.2021 17:06:24: cron-job (1975): Hash: 0985dd7ea9637e2c46f75137250267c9, Mail sent to: [redacted] (36855) subject: [iPhotography] Comment on photo Monday's Photoshoot, photo: 183876&lt;br /&gt;
Eml: on:01.04.2021 17:06:24: cron-job (1975): Potential receipients: 3643,36855,80305,84625,95781,101488,104541,105190,98553,100641, all subscribed potential: 36855,80305,84625,95781,98553,100641,101488,105190&lt;br /&gt;
Eml: on:01.04.2021 17:06:24: cron-job (1975): superusers&lt;br /&gt;
Eml: on:01.04.2021 17:06:24: cron-job (1975): comment owner 100641, JoKayaks&lt;br /&gt;
Eml: on:01.04.2021 17:06:24: cron-job (1975): photo owner 98553, happyhannah&lt;br /&gt;
Eml: on:01.04.2021 17:06:24: cron-job (1975): admins 3643,36855,80305,84625,95781,101488,104541,105190&lt;br /&gt;
Eml: on:01.04.2021 17:06:24: cron-job (1965): Doing mailing commentnotify for 103408 recipients. Starting id = 0&lt;br /&gt;
Eml: on:01.04.2021 17:06:24: cron-job (1975): Doing mailing commentnotify for 103408 recipients. Starting id = 0&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #50183 (Default locale should be en, not en-US) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 04 Apr 2021 03:49:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50183#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50183#comment:6/1617508148045942</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-i18n by getsnoopy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-i18n/p1617508145006900"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48152 (en as default language instead of en_us) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 04 Apr 2021 03:49:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48152#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48152#comment:13/1617508148017665</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-i18n by getsnoopy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-i18n/p1617508145006900"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>