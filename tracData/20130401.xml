<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #23880 (Minimum PHP version in Plugins) closed</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Mon, 01 Apr 2013 23:37:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23880#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23880#comment:32/1364859430259995</guid>
      <description>worksforme: &lt;p&gt;
Adding this to WordPress doesn't bring us somewhere. Users will find other plugins to solve the same issue they have, developers will make plugins users can't use and hosters don't have a clue it exists and hava a multi year upgrade plan.
&lt;/p&gt;
&lt;p&gt;
I also don't see anything why rmccue is happy to close it. He recommend it and that is fine.
&lt;/p&gt;
&lt;p&gt;
I'm closing this ticket for multiple reasons:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;more then 60% is running PHP 5.2 and if you want to build something useful try to let it work on PHP 5.2. So in general try to let it work. If it's for clients you know the server so these checks aren't needed.
&lt;/li&gt;&lt;li&gt;PHP and MySQL aren't the only thing a plugin needs a version for. Do we also need an extra line for all software that need to be installed? Like GD or Imagick is a must. Curl need to be installed. etc.
&lt;/li&gt;&lt;li&gt;You can easily implement this yourself without performance cost. Maybe even create a central plugin that takes care of it.
&lt;/li&gt;&lt;li&gt;It's nothing to do with preparation since PHP 5.2 code will work perfectly on 5.3. It's not that it breaks.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>revision-i18n.diff attached to Ticket #23917</title>
      
        <dc:creator>nao</dc:creator>

      <pubDate>Mon, 01 Apr 2013 23:35:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23917/revision-i18n.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23917/revision-i18n.diff/1364859348341230</guid>
      <description>&lt;p&gt;
Adds translation context to Revisions UI.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23917 (Revisions UI: Add translation context) created</title>
      
        <dc:creator>nao</dc:creator>

      <pubDate>Mon, 01 Apr 2013 23:35:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23917</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23917/1364859300129727</guid>
      <description>&lt;p&gt;
Some generic strings ("From:&amp;#34;, &amp;#34;To:&amp;#34;, &amp;#34;Previous", "Next") appear on the new Revisions UI. To keep these separate from other admin labels, translation context is needed.
&lt;/p&gt;
&lt;p&gt;
For example, "Next" can mean "Next Page" but it's better to be translated differently than "Next Revision".
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23880 (Minimum PHP version in Plugins) updated</title>
      
        <dc:creator>F J Kaiser</dc:creator>

      <pubDate>Mon, 01 Apr 2013 23:15:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23880#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23880#comment:31/1364858103822709</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23880#comment:30" title="Comment 30"&gt;rmccue&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
(...) although it's horrible performance-wise, you could dynamically rewrite your classes to use non-namespaced names. (I actually have a proof-of-concept of this lying around somewhere.)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I asked: &lt;em&gt;"(...) please elaborate how you'd efficiently do that (...)"&lt;/em&gt;, so this really isn't the answer. But nvm, it as well isn't where I wanted to get with my involvement in this discussion.
&lt;/p&gt;
&lt;p&gt;
WordPress already pushes devs to use a lot of &lt;em&gt;not-state-of-the-art&lt;/em&gt; code design patterns. This one (extremely minor) extension of the code base could bring us all (starting from users, to devs and even hosters) a big step towards a modern and competing environment and would allow us to pull a lot of code seamlessly into WP with just adding a header comment and calling it a plugin. This could so much open the door for more modern PHP versions - even on shared hosts. Let's see it positive, add this and try to prepare the environment for a switch to PHP 5.3+. One day we will need it. Let people better be prepared.
&lt;/p&gt;
&lt;p&gt;
And please don't be so &lt;em&gt;trigger happy&lt;/em&gt; with adding the &lt;em&gt;close&lt;/em&gt; workflow keyword.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16215 (Post Revision history displays the incorrect author) updated</title>
      
        <dc:creator>kurtpayne</dc:creator>

      <pubDate>Mon, 01 Apr 2013 22:08:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16215#comment:81</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16215#comment:81/1364854137114857</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/1252/tests" title="We now store a revision for the current version, so these counts must ..."&gt;1252/tests&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
We now store a revision for the current version, so these counts must be bumped. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16215" title="#16215: defect (bug): Post Revision history displays the incorrect author (closed: fixed)"&gt;#16215&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This brings the XMLRPC revisions tests in line with the posts revisions tests in &lt;a class="ext-link" href="https://unit-tests.trac.wordpress.org//intertrac/changeset%3A1251" title="changeset:1251 in WordPress Unit Tests Trac (old)"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;[UT1251]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset in tests [1252]: We now store a revision for the current version, so these counts must ...</title>
      
        <dc:creator>kurtpayne</dc:creator>

      <pubDate>Mon, 01 Apr 2013 22:08:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/1252/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/1252/tests/1364854136245884</guid>
      <description>&lt;p&gt;
We now store a revision for the current version, so these counts must be bumped. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16215" title="#16215: defect (bug): Post Revision history displays the incorrect author (closed: fixed)"&gt;#16215&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
This brings the XMLRPC revisions tests in line with the posts revisions tests in &lt;a class="ext-link" href="https://unit-tests.trac.wordpress.org//intertrac/changeset%3A1251" title="changeset:1251 in WordPress Unit Tests Trac (old)"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;[UT1251]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #23916 (502 Bad Gateway on wordpress.org) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 01 Apr 2013 21:57:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23916#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23916#comment:1/1364853471344828</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19570 (Post Formats: admin UI + fallbacks for themes that don't support them) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 01 Apr 2013 20:38:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19570#comment:136</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19570#comment:136/1364848696681609</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
When were you thinking this would initially happen?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
When starting a new post, we can "reduce" the UI on clicking a post format button. We know it's a new post because it has &lt;code&gt;$post-&amp;gt;post_status == 'auto-draft'&lt;/code&gt;. When opening a post for editing, post_status != 'auto-draft'.
&lt;/p&gt;
&lt;p&gt;
We can add a class on &amp;lt;div class="post-format-options"&amp;gt; to set the initial state, then toggle that class with jQuery on selecting a post format. So when that class is present the UI will be minimal, perhaps only a "Change post format" button. Clicking that button will remove the class and show the post format buttons.
&lt;/p&gt;
&lt;p&gt;
This would mean that once a post format is selected, the user will have to click twice to change it. This also suggests post formats should be set once.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We can't tell the difference between Standard-as-choice and Standard-as-default.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
When starting a post all formats will be visible until the user selects one. Not selecting a format = 'standard'. When editing a post if there's no format we assume 'standard' (same as now).
&lt;/p&gt;
&lt;p&gt;
Edit: don't think we need to tell the difference between Standard-as-choice and Standard-as-default. This works well as is now: new posts (post_status == 'auto-draft') have the 'standard' post format by default. If the user clicks 'standard', we hide the rest. If format is never set, all formats are visible until Save Draft or Publish. When editing a post we show the current post format, default or not.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23916 (502 Bad Gateway on wordpress.org) created</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Mon, 01 Apr 2013 20:29:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23916</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23916/1364848145468221</guid>
      <description>&lt;p&gt;
In the last weeks, I've been getting more and more sporadic "502 Bad Gateway" errors (from the nginx webserver), when accessing pages on wordpress.org.
&lt;/p&gt;
&lt;p&gt;
I've been getting them for my plugins' support forums most often, &lt;code&gt;http://wordpress.org/support/plugin/&amp;lt;plugin-slug&amp;gt;&lt;/code&gt;, but have now also received independent emails (and a &lt;a class="ext-link" href="https://twitter.com/eqmarketing/status/318782072711962624"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;tweet&lt;/a&gt;) from people that were trying to download the plugin ZIP file.
&lt;/p&gt;
&lt;p&gt;
In all cases, the outages were only temporary, ranging from a few seconds to maybe a minute. They are still rather annoying and can obviously cause confusion (as in that tweet) for regular users.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19570 (Post Formats: admin UI + fallbacks for themes that don't support them) updated</title>
      
        <dc:creator>lessbloat</dc:creator>

      <pubDate>Mon, 01 Apr 2013 20:21:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19570#comment:135</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19570#comment:135/1364847711555971</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19570#comment:134" title="Comment 134"&gt;markjaquith&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How would you imagine the UI collapsing?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So there's the less elegant, less code approach.  Just fadeout all of the non selected icons, which would shoot the remaining icon to the far left once all of the other icons are done fading out.
&lt;/p&gt;
&lt;p&gt;
Or the more elegant, more code approach.  Absolute position each icon with a z-index slightly lower as you go from left to right.  Then on collapse, animate each icon to left:0; individually while at the same time fading them out, bringing them all smoothly to the left, with only the selected icon remaining once they are all done fading.
&lt;/p&gt;
&lt;p&gt;
There are likely more options, but these are the only two I can think of at the moment.  Do either sound like they'll work?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19570 (Post Formats: admin UI + fallbacks for themes that don't support them) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Mon, 01 Apr 2013 20:11:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19570#comment:134</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19570#comment:134/1364847084649985</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19570#comment:133" title="Comment 133"&gt;lessbloat&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19570#comment:132" title="Comment 132"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Would it make sense to "reduce" the formats UI after selecting a post format or when opening a post for editing. At the moment all the nice buttons are quite inviting to click which is good when starting a new post but doesn't make much sense when opening a post to edit. Perhaps we can hide them behind a "Change post format" button or similar. That would suggest the format is something to be decided once at starting the post.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yep, that sounds smart.  When were you thinking this would initially happen?  My guess is that on click for "Save draft", and "Publish" might work?
&lt;/p&gt;
&lt;p&gt;
Thoughts?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Note: we can't tell the difference between Standard-as-choice and Standard-as-default.
&lt;/p&gt;
&lt;p&gt;
How would you imagine the UI collapsing?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19570 (Post Formats: admin UI + fallbacks for themes that don't support them) updated</title>
      
        <dc:creator>lessbloat</dc:creator>

      <pubDate>Mon, 01 Apr 2013 19:02:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19570#comment:133</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19570#comment:133/1364842938447745</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19570#comment:132" title="Comment 132"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Would it make sense to "reduce" the formats UI after selecting a post format or when opening a post for editing. At the moment all the nice buttons are quite inviting to click which is good when starting a new post but doesn't make much sense when opening a post to edit. Perhaps we can hide them behind a "Change post format" button or similar. That would suggest the format is something to be decided once at starting the post.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yep, that sounds smart.  When were you thinking this would initially happen?  My guess is that on click for "Save draft", and "Publish" might work?
&lt;/p&gt;
&lt;p&gt;
Thoughts?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23868 (Twenty Eleven: Multiple search forms should increment ids) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Mon, 01 Apr 2013 16:30:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23868#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23868#comment:6/1364833852834046</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23868#comment:5" title="Comment 5"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The first search form would still have the same id, only subsequent forms may have some styles missing.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Exactly. With one searchform fix in the header, on empty search result pages, 404 pages, and sidebars, it would not be styled.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23868 (Twenty Eleven: Multiple search forms should increment ids) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 01 Apr 2013 16:13:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23868#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23868#comment:5/1364832789695794</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23868/23868-2.2.patch" title="Attachment '23868-2.2.patch' in Ticket #23868"&gt;23868-2.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23868/23868-2.2.patch" title="Download"&gt;​&lt;/a&gt;, looks like &lt;code&gt;$search_form_counter&lt;/code&gt; should be incremented somewhere.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23868#comment:4" title="Comment 4"&gt;obenland&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Twenty Eleven itself uses an id to style the searchform, chances are high that child themes do the same.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The first search form would still have the same id, only subsequent forms may have some styles missing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23868 (Twenty Eleven: Multiple search forms should increment ids) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Mon, 01 Apr 2013 15:37:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23868#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23868#comment:4/1364830628501580</guid>
      <description>&lt;p&gt;
I doubt this will be feasible with the amount of child themes dependent on Twenty Eleven.
Twenty Eleven itself uses an id to style the searchform, chances are high that child themes do the same.
&lt;/p&gt;
&lt;p&gt;
I'm really sorry, but I don't think there is a way to get that in without breaking stuff. :(
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23039 (WP_Image_Editor_GD does not preserve alpha if is not resized) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 01 Apr 2013 15:21:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23039#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23039#comment:18/1364829681211171</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23884" title="Preserve alpha in WP_Image_Editor_GD when images are not resized.
 ..."&gt;23884&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Preserve alpha in WP_Image_Editor_GD when images are not resized.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props joehoyle&lt;br /&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23039" title="#23039: defect (bug): WP_Image_Editor_GD does not preserve alpha if is not resized (closed: fixed)"&gt;#23039&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [23884]: Preserve alpha in WP_Image_Editor_GD when images are not resized.  ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 01 Apr 2013 15:21:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/23884</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/23884/1364829679822899</guid>
      <description>&lt;p&gt;
Preserve alpha in WP_Image_Editor_GD when images are not resized.
&lt;/p&gt;
&lt;p&gt;
Props joehoyle
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23039" title="#23039: defect (bug): WP_Image_Editor_GD does not preserve alpha if is not resized (closed: fixed)"&gt;#23039&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14686 (Widget Instance Form Update Bug) updated</title>
      
        <dc:creator>dgwyer</dc:creator>

      <pubDate>Mon, 01 Apr 2013 14:26:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14686#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14686#comment:12/1364826384015671</guid>
      <description>&lt;p&gt;
Added a patch that fixes the issues in this ticket. It basically fires another XHR request when a widget is FIRST dragged into a widget area.
&lt;/p&gt;
&lt;p&gt;
The patch along with the test widget code above works fine. Plus, JS/jQuery is available to the widget, without having to manually click Save, so you can easily add jQuery tabs or toggle advanced widget options etc.
&lt;/p&gt;
&lt;p&gt;
Seeing as this extra XHR request fires ONLY the first time a widget is dragged into a widget area I think it's an acceptable fix.
&lt;/p&gt;
&lt;p&gt;
Obviously it would be preferable to have the form HTML returned along with the first XHR request but it seems this is not possible without some fundamental changes to the widget code (see comment 9 from azaozz).
&lt;/p&gt;
&lt;p&gt;
It 'almost' tantalizingly seems like this is possible looking at the code in ajax-actions.php as the initial XHR request returns nothing back to widgets.php. However there is no access to the global $wp_registered_widget_controls variable in wp_ajax_save_widget() during the initial XHR request so we can't just return the form HTML as a response.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23915 (discover_pingback_server_uri cases an error when discovery URI sets ...) created</title>
      
        <dc:creator>tomdxw</dc:creator>

      <pubDate>Mon, 01 Apr 2013 14:25:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23915</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23915/1364826325855868</guid>
      <description>&lt;p&gt;
Line 1673 in wp-includes/comment.php uses preg_match() on the output of wp_remote_retrieve_header(). When multiple headers are set of the same name, wp_remote_retrieve_header() returns an array.
&lt;/p&gt;
&lt;p&gt;
Thus occasionally the following error occurs:
&lt;/p&gt;
&lt;p&gt;
PHP Warning: preg_match() expects parameter 2 to be string, array given in xxxxxxx/wp-includes/comment.php on line 1673
&lt;/p&gt;
&lt;p&gt;
I have no idea how to make pingbacks happen so to reproduce, add this line to functions.php: discover_pingback_server_uri('&lt;a class="ext-link" href="http://localhost:8080/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://localhost:8080/&lt;/a&gt;');
&lt;/p&gt;
&lt;p&gt;
And in a terminal window run this (you may need to install the netcat-openbsd package in Debuntu):
&lt;code&gt;while true; do echo -en 'HTTP/1.1 200 OK\r\nContent-type: text/html\r\nContent-type: text/plain\r\n\r\n' | nc -lp 8080; done&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Then visit your WP installation and you shall get the aforementioned error message.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>widgets.js.patch attached to Ticket #14686</title>
      
        <dc:creator>dgwyer</dc:creator>

      <pubDate>Mon, 01 Apr 2013 14:07:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14686/widgets.js.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14686/widgets.js.patch/1364825227945824</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #20564 (Framework for storing revisions of Post Meta) updated</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Mon, 01 Apr 2013 10:16:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20564#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20564#comment:49/1364811376576134</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/20564#comment:48" title="Comment 48"&gt;azaozz&lt;/a&gt;: I think what Aaron meant in his comment is useful for posts only, but not really useful for revisions. I took a stab at the &lt;code&gt;_revision_meta&lt;/code&gt; approach in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/20564/20564.6.diff" title="Attachment '20564.6.diff' in Ticket #20564"&gt;20564.6.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/20564/20564.6.diff" title="Download"&gt;​&lt;/a&gt; which should keep the meta table clean and small for revisions. If this works out we can do the same for revisioned terms (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23893" title="#23893: defect (bug): Post format should be revisioned, auto-saved and previewable (closed: fixed)"&gt;#23893&lt;/a&gt;). Not really looking to fix this ticket, but rather lay a good foundation for whatever is next in 3.7 and 3.8.
&lt;/p&gt;
&lt;p&gt;
P.S. Sorry for the .6 vs -6 naming conflict, that's trac's auto-naming kicking in :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>20564.6.diff attached to Ticket #20564</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Mon, 01 Apr 2013 10:09:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/20564/20564.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/20564/20564.6.diff/1364810990324556</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23808 (allow multisite to match bare URL) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 01 Apr 2013 09:39:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23808#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23808#comment:1/1364809170815676</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23865 (Trailing slash is not enforced when editing the path for a ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 01 Apr 2013 09:38:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23865#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23865#comment:4/1364809108315267</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23636 (Allow multiple slugs in get_terms) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 01 Apr 2013 09:37:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23636#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23636#comment:1/1364809037868401</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23532 (Sync Tests Repository on Github) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 01 Apr 2013 09:36:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23532#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23532#comment:3/1364808976723370</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23225 (Customizer is Incompatible with jQuery UI Tabs.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 01 Apr 2013 09:34:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23225#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23225#comment:6/1364808897460721</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23454 (_deprecated_function Messages) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 01 Apr 2013 09:28:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23454#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23454#comment:1/1364808538298562</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23446 (Expose 'login_url' and 'admin_url' via XML-RPC) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 01 Apr 2013 09:28:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23446#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23446#comment:8/1364808494922345</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23785 (highlight rows on hover for tables with widefat class) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 01 Apr 2013 09:27:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23785#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23785#comment:2/1364808422077955</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23912 (Add Composer package description) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 01 Apr 2013 09:26:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23912#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23912#comment:1/1364808383958390</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16953 (Allow symlinked plugins) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 01 Apr 2013 09:25:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16953#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16953#comment:48/1364808318864580</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23709 (Relax wildcard restrictions for populate_network() when installing in ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 01 Apr 2013 09:25:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23709#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23709#comment:5/1364808314111119</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23882 (get_permalink() accepts an ID, the_permalink() does not) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 01 Apr 2013 09:25:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23882#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23882#comment:1/1364808311395118</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20564 (Framework for storing revisions of Post Meta) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 01 Apr 2013 08:50:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20564#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20564#comment:48/1364806228713963</guid>
      <description>&lt;p&gt;
We could, but having separate meta &lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/19570#comment:130"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;has some advantages&lt;/a&gt;. We could do a query to select posts by these meta fields which might be useful in some cases. Also that makes post formats more "futureproof".
&lt;/p&gt;
&lt;p&gt;
Yes, currently the revisions meta is only for post formats, and the fields can only be "single" there. It's not very hard to turn parts of it into an API, perhaps 3.7?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20564 (Framework for storing revisions of Post Meta) updated</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Mon, 01 Apr 2013 08:32:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20564#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20564#comment:47/1364805128383857</guid>
      <description>&lt;p&gt;
I'm pretty sure it's been mentioned somewhere before, but we can probably store all the revision meta in a single serialized _revision_meta key. I agree that adding keys to revisioned meta should be opt-in and that it's out of scope for 3.6, I just dislike the post-format-ish approach at &lt;code&gt;_wp_post_revision_meta_keys()&lt;/code&gt;, and the &lt;code&gt;$single&lt;/code&gt; assumption in &lt;code&gt;get_post_meta&lt;/code&gt; :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20564 (Framework for storing revisions of Post Meta) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 01 Apr 2013 08:22:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20564#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20564#comment:46/1364804572424869</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
The original post contains all those meta keys with empty values as well...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not sure that's needed either.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
...the revision post is a complete copy, so I think that's the expected behavior.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No, not a complete copy. It's a copy of the post data, most fields are not revisioned. By default only title, content and excerpt are. That's why we have &lt;code&gt;_wp_post_revision_fields()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Imagine a small site with 100 posts, each having 10 revisions. That's (1,100 * 7) nearly 8,000 rows in the post meta table just for post formats. And most will be empty. Now imagine a bigger site with 20,000 posts and 50 revisions each (that's not uncommon). Nearly 8,000,000 rows. And now imagine a really big site... :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I also think that there should be a more general approach for all possible meta, rather than post formats only.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, when we open the API to revision post meta (agree with @markjaquith it's out of scope at the moment), thinking it should be opt-in. A lot of the post meta doesn't need to be saved in revisions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17447 (Add 'register_post_type_args' hook) updated</title>
      
        <dc:creator>Jesper800</dc:creator>

      <pubDate>Mon, 01 Apr 2013 08:13:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17447#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17447#comment:10/1364804015246736</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17447 (Add 'register_post_type_args' hook) updated</title>
      
        <dc:creator>Jesper800</dc:creator>

      <pubDate>Mon, 01 Apr 2013 08:13:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17447#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17447#comment:9/1364804000646525</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17447#comment:7" title="Comment 7"&gt;mikeschinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17447#comment:6" title="Comment 6"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;code&gt;registered_post_type&lt;/code&gt; and &lt;code&gt;registered_taxonomy&lt;/code&gt; were added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/18833" title="Fire an action when a post type or taxonomy is registered so plugins ..."&gt;[18833]&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Those are great, thanks.
&lt;/p&gt;
&lt;p&gt;
But the real reason for my request here is the get hook-based access to the args so I'm going to change the title of this ticket and to add the patch I'd like to see.
&lt;/p&gt;
&lt;p&gt;
This patch would allow a plugin to disable some of the the default processing in register_post_type() and replace it with its own.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree: plugin authors need to be able to edit post type arguments on registering them. Currently, the only way to do it is by directly accessing &lt;code&gt;$wp_post_types&lt;/code&gt; (come to think of it, &lt;code&gt;get_post_type_object()&lt;/code&gt; should also work), which is not only undesirable but also quite inconvenient.
&lt;/p&gt;
&lt;p&gt;
As far as your diff-file is concerned: the second one seems partially right. Naming the filter 'register_post_type_args' complies with the standards, and all necessary parameters are passed.
&lt;/p&gt;
&lt;p&gt;
However... I'm wondering whether or not it would be better to apply the filter before calling &lt;code&gt;wp_parse_args&lt;/code&gt;. That way, you make sure that all values required for registering a post type are present. This is different from what the standard is for filtering arguments when fetching data, but in this case we're actually creating a post type object that has to have certain properties, as people (and WordPress) expect them to be there, e.g. the post type labels.
&lt;/p&gt;
&lt;p&gt;
If we call the filter before &lt;code&gt;wp_parse_args&lt;/code&gt; we make sure that all required properties are available.
&lt;/p&gt;
&lt;p&gt;
Returning &lt;code&gt;false&lt;/code&gt; on &lt;code&gt;empty( $args )&lt;/code&gt; is definitely not the way to go, a &lt;code&gt;WP_Error&lt;/code&gt; should be returned in that case.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23910 (Ajaxify All Admin Dashboard Widgets) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 01 Apr 2013 07:37:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23910#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23910#comment:3/1364801826599114</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20564 (Framework for storing revisions of Post Meta) updated</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Mon, 01 Apr 2013 06:48:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20564#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20564#comment:45/1364798891276246</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/20564#comment:42" title="Comment 42"&gt;azaozz&lt;/a&gt;: The original post contains all those meta keys with empty values as well, and the revision post is a complete copy, so I think that's the expected behavior. I also think that there should be a more general approach for all possible meta, rather than post formats only. Thoughts?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23880 (Minimum PHP version in Plugins) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Mon, 01 Apr 2013 05:13:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23880#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23880#comment:30/1364793194123902</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23880#comment:29" title="Comment 29"&gt;F J Kaiser&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Or even better: Tell me (or show with code) how you'd do the check for the following plugin.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;code&gt;a.php&lt;/code&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;/*
Plugin Name: Foo
*/
if (version_compare(PHP_VERSION, '5.3', '&amp;gt;')) {
    include 'b.php';
}
else {
    add_action('admin_notices', create_function('', 'Foo requires PHP 5.3 or newer.'));
}
&lt;/pre&gt;&lt;p&gt;
&lt;code&gt;b.php&lt;/code&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;namespace foo;
// Some functionality
&lt;/pre&gt;&lt;p&gt;
It's only six lines extra to check the PHP version in your code, plus you can do other things in there. For example, although it's horrible performance-wise, you could dynamically rewrite your classes to use non-namespaced names. (I actually have a proof-of-concept of this lying around somewhere.)
&lt;/p&gt;
&lt;p&gt;
I don't think this is something core needs to worry about, given how easy it is to do it yourself. Recommending close.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16953 (Allow symlinked plugins) updated</title>
      
        <dc:creator>lingfish</dc:creator>

      <pubDate>Mon, 01 Apr 2013 04:11:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16953#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16953#comment:47/1364789505968423</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23470 (Convert slash to dash and make body class for page templates look better) updated</title>
      
        <dc:creator>tillkruess</dc:creator>

      <pubDate>Mon, 01 Apr 2013 03:16:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23470#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23470#comment:4/1364786173572586</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23910 (Ajaxify All Admin Dashboard Widgets) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 01 Apr 2013 02:46:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23910#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23910#comment:2/1364784399482491</guid>
      <description>wontfix: &lt;p&gt;
There really isn't a reason to move to XHR for these widgets.
&lt;/p&gt;
&lt;p&gt;
The other widgets all require external HTTP requests to RSS feeds, which are in turn cached (both the feeds, and the HTML output of the widget).
&lt;/p&gt;
&lt;p&gt;
We found back in 3.2 (when the HTML output caching was added) that having widgets load via XHR made the dashboard appear slower to load. It feels more instant when things just appear suddenly.
&lt;/p&gt;
&lt;p&gt;
In the case of the cited widgets, these all require some DB queries, but that's about it. We're not dealing with the time delay of an HTTP request.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>class.wp-dependencies.php.patch attached to Ticket #23914</title>
      
        <dc:creator>kitchin</dc:creator>

      <pubDate>Mon, 01 Apr 2013 02:41:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23914/class.wp-dependencies.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23914/class.wp-dependencies.php.patch/1364784084652656</guid>
      <description>&lt;p&gt;
Some improvements, tell me if want an interdiff.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15081 (Search Form should use type='search') updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 01 Apr 2013 02:20:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15081#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15081#comment:30/1364782829505959</guid>
      <description>&lt;p&gt;
I like the switch to a filter here. Otherwise, I would have suggested turning $echo = true into $args = array().
&lt;/p&gt;
&lt;p&gt;
I do wonder if this could turn into a theme support call, at some point.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20564 (Framework for storing revisions of Post Meta) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 01 Apr 2013 02:08:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20564#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20564#comment:44/1364782083828052</guid>
      <description>&lt;p&gt;
In 20564-6.patch:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;When saving revisions (including autosaves): save the current post format as revision meta.
&lt;/li&gt;&lt;li&gt;When restoring from a revision, restore the format too.
&lt;/li&gt;&lt;li&gt;When saving revisions: add post format meta to the revision post only for the current post format, skip when empty.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>20564-6.patch attached to Ticket #20564</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 01 Apr 2013 02:03:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/20564/20564-6.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/20564/20564-6.patch/1364781807885052</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23911 (Post Format UI Bar always displays "Standard Post" instead of correct ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 31 Mar 2013 21:34:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23911#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23911#comment:1/1364765654605430</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23911/23911.patch" title="Attachment '23911.patch' in Ticket #23911"&gt;23911.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23911/23911.patch" title="Download"&gt;​&lt;/a&gt; is not localizable.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23911/23911.2.patch" title="Attachment '23911.2.patch' in Ticket #23911"&gt;23911.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23911/23911.2.patch" title="Download"&gt;​&lt;/a&gt; copies the actual post format button title.
&lt;/p&gt;
&lt;p&gt;
Noticed some more i18n issues in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23843" title="Post Format UI.
* Icons
* Selection
* Prompt text
* Special fields
* ..."&gt;[23843]&lt;/a&gt;, added to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23503" title="#23503: defect (bug): Post Formats: i18n issues (closed: fixed)"&gt;#23503&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23503 (Post Formats: i18n issues) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 31 Mar 2013 21:33:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23503#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23503#comment:1/1364765634224687</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>23911.2.patch attached to Ticket #23911</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 31 Mar 2013 21:26:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23911/23911.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23911/23911.2.patch/1364765173042342</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19570 (Post Formats: admin UI + fallbacks for themes that don't support them) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 31 Mar 2013 18:33:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19570#comment:132</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19570#comment:132/1364754803553833</guid>
      <description>&lt;p&gt;
Thinking more about this: a post format is (should be?) something the user chooses once at the beginning of creating new post. What would be the user expectation if that post format is changed later while editing the post?
&lt;/p&gt;
&lt;p&gt;
Currently any extra fields "disappear" from the UI together with any data that the user has entered there. Shouldn't we be marking the extra fields as "unused". We can keep the current data for the current editing session so the user can change his mind and revert back, but not save it or remove it on saving the post or publishing as it is irrelevant.
&lt;/p&gt;
&lt;p&gt;
Also, would it make sense to "reduce" the formats UI after selecting a post format or when opening a post for editing. At the moment all the nice buttons are quite inviting to click which is good when starting a new post but doesn't make much sense when opening a post to edit. Perhaps we can hide them behind a "Change post format" button or similar. That would suggest the format is something to be decided once at starting the post.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19570 (Post Formats: admin UI + fallbacks for themes that don't support them) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 31 Mar 2013 17:37:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19570#comment:131</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19570#comment:131/1364751446440356</guid>
      <description>&lt;p&gt;
Agreed, it makes sense to keep all post formats meta on the main post when it's non-empty. However for revisions (incl. autosaves) we should probably be saving only the current post format meta when it has changed and is non-empty. Copying all existing meta to each revision doesn't make sense as we end up with a ton of identical meta values.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23914 (Document WP_Dependencies) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sun, 31 Mar 2013 17:31:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23914#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23914#comment:3/1364751109670084</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
my bad, inline docs.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23914 (Document WP_Dependencies) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sun, 31 Mar 2013 17:28:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23914#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23914#comment:2/1364750924020061</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23914 (Document WP_Dependencies) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sun, 31 Mar 2013 17:28:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23914#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23914#comment:1/1364750902401746</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Can you re-upload the svn patch in the proper format with either a .diff or .patch extension?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19570 (Post Formats: admin UI + fallbacks for themes that don't support them) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Sun, 31 Mar 2013 16:39:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19570#comment:130</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19570#comment:130/1364747959457892</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19570#comment:128" title="Comment 128"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Why not one meta field that keeps all needed data? What happens when more than one format meta is set on a post? Do we need to keep all unused meta for the main post in addition to having it in the revisions?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think it makes sense to keep all non-empty post format meta.  That way switching to a different post format and back again doesn't have the appearance of losing data (even if that data could be retrieved from a revision).  They could all be put in one post meta field as a serialized array, but they you couldn't query based on them (such as "give me all quotes from xyz source" which could be easily accomplished with a postmeta query using _wp_format_quote_source that also specifies the quote term).  Still, adding empty keys seems pointless.
&lt;/p&gt;
&lt;p&gt;
As for what happens if more than one format meta is set...nothing.  The ones that aren't used for the current format are just...not used.  The format itself is determined based on a term from the post format taxonomy.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17626 (image_get_intermediate_size() may return wrong thumbnail size) updated</title>
      
        <dc:creator>carstenbach</dc:creator>

      <pubDate>Sun, 31 Mar 2013 16:26:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17626#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17626#comment:17/1364747172452434</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23870 (Filter Glyph for Comment Required Fields) updated</title>
      
        <dc:creator>cais</dc:creator>

      <pubDate>Sun, 31 Mar 2013 15:31:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23870#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23870#comment:5/1364743897711736</guid>
      <description>&lt;p&gt;
I prefer '*_glyph' versus '*_mark' as I relate glyph to symbol (read: asterisk, hash, etc.) but either term is fine as they would both be used to accomplish the same goal of implementing this enhancement. I can also envision this to be used for much more than simply changing the character displayed so the naming convention may not be vitally important as is.
&lt;/p&gt;
&lt;p&gt;
As to an argument rather than a filter ... I would probably think to look for a filter first (as I actually did) versus digging into the function to find the specific argument to address, but again either method is fine as both work. The argument method may be more inline with the rest of the function code even if I actually would prefer the filter myself.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23870 (Filter Glyph for Comment Required Fields) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 31 Mar 2013 11:14:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23870#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23870#comment:4/1364728474097023</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'd suggest &lt;code&gt;'comment_form_required_field_mark'&lt;/code&gt; as the filter name, seems more obvious: &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23870/23870.patch" title="Attachment '23870.patch' in Ticket #23870"&gt;23870.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23870/23870.patch" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
This could also probably be an additional &lt;code&gt;comment_form()&lt;/code&gt; argument rather than a filter: &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23870/23870.2.patch" title="Attachment '23870.2.patch' in Ticket #23870"&gt;23870.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23870/23870.2.patch" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23870.2.patch attached to Ticket #23870</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 31 Mar 2013 11:11:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23870/23870.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23870/23870.2.patch/1364728309575464</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>23870.patch attached to Ticket #23870</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 31 Mar 2013 11:11:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23870/23870.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23870/23870.patch/1364728304086428</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>wp-dependencies-patch.txt attached to Ticket #23914</title>
      
        <dc:creator>kitchin</dc:creator>

      <pubDate>Sun, 31 Mar 2013 06:01:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23914/wp-dependencies-patch.txt</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23914/wp-dependencies-patch.txt/1364709709498350</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23914 (Document WP_Dependencies) created</title>
      
        <dc:creator>kitchin</dc:creator>

      <pubDate>Sun, 31 Mar 2013 05:58:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23914</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23914/1364709522034047</guid>
      <description>&lt;p&gt;
The code in &lt;code&gt;wp-includes/class.wp-dependencies.php&lt;/code&gt; needs better documentation. Three confusions in particular:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;$args has a different meaning in WP_Dependencies and _WP_Dependency. In the first, it is a way to append query strings to the URL's. In the second it is a generic 5th parameter used by the API functions wp_register_*() and wp_enqueue_*(). In class WP_Styles it stands for $media. In class WP_Scripts it stands for $in_footer.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;&lt;code&gt;$handle&lt;/code&gt; sometimes means the registered &lt;code&gt;handle&lt;/code&gt;, and other times means &lt;code&gt;handle?args&lt;/code&gt;.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="3"&gt;&lt;li&gt;&lt;code&gt;$group&lt;/code&gt; stands for page placement in WP_Styles (0=header, 1=footer), and is unused in WP_Scripts (false). But a prominent comment uses the word "Groups" to describe something entirely different, a registered item with dependencies but no src. In my proposed documentation I use the word "Alias" for this meaning. An example of an alias is in wp-includes/script-loader.php:
&lt;pre class="wiki"&gt;add( 'scriptaculous', false, array('scriptaculous-dragdrop', 'scriptaculous-slider', 'scriptaculous-controls') );
&lt;/pre&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Patch attached. No code changes.
&lt;/p&gt;
&lt;p&gt;
An example of contributors not knowing about Confusion 2 is &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/13078" title="#13078: defect (bug): Make wp_register_style and wp_enqueue_style consistent (new)"&gt;#13078&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #13078 (Make wp_register_style and wp_enqueue_style consistent) updated</title>
      
        <dc:creator>kitchin</dc:creator>

      <pubDate>Sun, 31 Mar 2013 05:06:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13078#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13078#comment:6/1364706416708553</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16856 (When registering custom post type, menu_position isn't honored if it's ...) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Sun, 31 Mar 2013 02:52:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16856#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16856#comment:15/1364698335092875</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16856 (When registering custom post type, menu_position isn't honored if it's ...) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Sun, 31 Mar 2013 02:52:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16856#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16856#comment:14/1364698320664439</guid>
      <description>&lt;p&gt;
This one is really bothering me, really wish it could handle floats like 20.1 etc.. which would be covered by is_numeric() vs a strict is_int() check.
&lt;/p&gt;
&lt;p&gt;
Can someone who could bless this for 3.7 explain what it would take for this ticket to move forward? Updated patch is one thing, but I wouldn't want to update it and then it not move forward.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23913.patch attached to Ticket #23913</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 31 Mar 2013 02:35:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23913/23913.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23913/23913.patch/1364697347416285</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23913 (Revisions: remove the new _wp_last_revision_matches_current_post()) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 31 Mar 2013 02:06:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23913#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23913#comment:1/1364695618486851</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In 23913.patch​:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Remove _wp_last_revision_matches_current_post() and replace it with revision version check in &lt;code&gt;wp_list_post_revisions()&lt;/code&gt; (the only place it's used).
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23913 (Revisions: remove the new _wp_last_revision_matches_current_post()) created</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 31 Mar 2013 02:03:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23913</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23913/1364695398280329</guid>
      <description>&lt;p&gt;
As the title. That function is not needed, can be replaced with simple revision version check as we add a copy of the current post while fixing revisions post_author fields.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #20564 (Framework for storing revisions of Post Meta) updated</title>
      
        <dc:creator>WraithKenny</dc:creator>

      <pubDate>Sun, 31 Mar 2013 01:23:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20564#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20564#comment:43/1364693011176938</guid>
      <description>&lt;p&gt;
its the &lt;code&gt;if ( false === $meta_values )&lt;/code&gt; line I think
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [23883]: Compress scripts/styles: 3.6-alpha-23883.</title>
      
        <dc:creator>bumpbot</dc:creator>

      <pubDate>Sun, 31 Mar 2013 00:58:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/23883</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/23883/1364691515013637</guid>
      <description>&lt;p&gt;
Compress scripts/styles: 3.6-alpha-23883.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #19570 (Post Formats: admin UI + fallbacks for themes that don't support them) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Sun, 31 Mar 2013 00:56:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19570#comment:129</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19570#comment:129/1364691408386245</guid>
      <description>&lt;p&gt;
I would describe that as "awful" - I doubt it was intended, I think we need to switch on format and only add format meta that is relevant
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20564 (Framework for storing revisions of Post Meta) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 31 Mar 2013 00:54:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20564#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20564#comment:42/1364691297429458</guid>
      <description>&lt;p&gt;
Been seeing this lately in the postmeta table, post IDs 9212, 9213 and 9214 are revisions and all meta is empty (no values):
&lt;/p&gt;
&lt;pre class="wiki"&gt;4040 	9214 	_wp_format_video
4039 	9214 	_wp_format_audio
4038 	9214 	_wp_format_image
4037 	9214 	_wp_format_quote_source
4036 	9214 	_wp_format_quote
4035 	9214 	_wp_format_url
4032 	9213 	_wp_format_video
4031 	9213 	_wp_format_audio
4030 	9213 	_wp_format_image
4029 	9213 	_wp_format_quote_source
4028 	9213 	_wp_format_quote
4027 	9213 	_wp_format_url
4022 	9212 	_wp_format_video
4021 	9212 	_wp_format_audio
4020 	9212 	_wp_format_image
4019 	9212 	_wp_format_quote_source
4018 	9212 	_wp_format_quote
4017 	9212 	_wp_format_url
&lt;/pre&gt;&lt;p&gt;
Seems we are doing &lt;code&gt;isset()&lt;/code&gt; and should be doing &lt;code&gt;! empty()&lt;/code&gt; somewhere.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19570 (Post Formats: admin UI + fallbacks for themes that don't support them) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 31 Mar 2013 00:37:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19570#comment:128</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19570#comment:128/1364690251149185</guid>
      <description>&lt;p&gt;
I may be missing something but a post can only have one post format, right? Why do we have all the different formats related post meta:
&lt;/p&gt;
&lt;pre class="wiki"&gt;'_wp_format_url',
'_wp_format_quote',
'_wp_format_quote_source',
'_wp_format_image',
'_wp_format_gallery',
'_wp_format_audio',
'_wp_format_video',
&lt;/pre&gt;&lt;p&gt;
And then we update them &lt;a href="http://core.trac.wordpress.org/browser/trunk/wp-admin/includes/post.php#L205"&gt;all at once&lt;/a&gt; and add all on every revision and autosave? That would make the postmeta table "explode" :)
&lt;/p&gt;
&lt;p&gt;
Why not one meta field that keeps all needed data? What happens when more than one format meta is set on a post? Do we need to keep all unused meta for the main post in addition to having it in the revisions?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>