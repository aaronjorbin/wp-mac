<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #16625 (wp_dropdown_categories reqs (consistent) option_none_value) created</title>
      
        <dc:creator>rcain</dc:creator>

      <pubDate>Wed, 23 Feb 2011 23:58:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16625</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16625/1298505502342982</guid>
      <description>&lt;p&gt;
wp_dropdown_categories sets option_none value="-1" without any means to override, whereas other similar funcs (eg:wp_dropdown_pages) use options_none value=&lt;em&gt; and also provide method to override default (option_none_value).
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
please could we have a consistent set of values (and options interface) to all thee dropdown funcs and save us some unnecessary and messy extra coding. thanks.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16624 (Cache for WP_HTTP) created</title>
      
        <dc:creator>akshay_raje</dc:creator>

      <pubDate>Wed, 23 Feb 2011 23:52:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16624</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16624/1298505127010110</guid>
      <description>&lt;p&gt;
WP_HTTP should have a cache class (either file based or mysql) just like class-feed.php
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #13499 (in nav-menus.php the page hierarchy should show) updated</title>
      
        <dc:creator>Gecka</dc:creator>

      <pubDate>Wed, 23 Feb 2011 23:52:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13499#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13499#comment:8/1298505121328110</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16623 (Authentication Unique Keys and Salts broke wp-config.) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 23 Feb 2011 23:32:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16623#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16623#comment:2/1298503947927090</guid>
      <description>&lt;p&gt;
Upon some more checking.. The API shouldn't be returning slashes at all, or " both of which are in your keys..
&lt;/p&gt;
&lt;p&gt;
You used the web-creation of wp-config.php correct? and WordPress 3.1 just did it all by itself? (Or did you manually create the config file, OR copy-paste the file contents it gave you?)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15705 (I can't login to admin.) updated</title>
      
        <dc:creator>JohnONolan</dc:creator>

      <pubDate>Wed, 23 Feb 2011 23:30:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15705#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15705#comment:23/1298503844486524</guid>
      <description>&lt;p&gt;
Drill baby drill.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15705 (I can't login to admin.) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Wed, 23 Feb 2011 23:28:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15705#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15705#comment:22/1298503680449344</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15705 (I can't login to admin.) reopened</title>
      
        <dc:creator>ryanduff</dc:creator>

      <pubDate>Wed, 23 Feb 2011 23:26:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15705#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15705#comment:21/1298503606631055</guid>
      <description>&lt;p&gt;
I upgraded to 3.1 today and now I can't log into my back office again! Somebody please halp!
&lt;/p&gt;
&lt;p&gt;
I think it may have something to do with not having Django installed but I wasn't told it was required in the release notes. Isn't this something that should be bundled with WordPress?
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #16623 (Authentication Unique Keys and Salts broke wp-config.) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 23 Feb 2011 23:21:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16623#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16623#comment:1/1298503304373475</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Moving to WordPress.org - can be moved back for 3.2 after API change is done perhaps
&lt;/p&gt;
&lt;p&gt;
The API is returning a slash at the end of the string, whilst that's legit, core doesn't escape the string, and appears to be using it as-is. The result is the closing quote is escaped, causing.. well.. what you've got there
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Screen shot 2011-02-23 at 7.11.03 PM.png attached to Ticket #16623</title>
      
        <dc:creator>christopherross</dc:creator>

      <pubDate>Wed, 23 Feb 2011 23:14:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16623/Screen%20shot%202011-02-23%20at%207.11.03%20PM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16623/Screen%20shot%202011-02-23%20at%207.11.03%20PM.png/1298502867564249</guid>
      <description>&lt;p&gt;
Screenshot of error in text editor
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16623 (Authentication Unique Keys and Salts broke wp-config.) created</title>
      
        <dc:creator>christopherross</dc:creator>

      <pubDate>Wed, 23 Feb 2011 23:14:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16623</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16623/1298502840045898</guid>
      <description>&lt;p&gt;
I've never seen this happen before but today I was installing WordPress and the Authentication Unique Keys and Salts broke the site during install.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;define('NONCE_SALT',       'J6:6$c."Eec\_WQ:B2V \h 3,WZ?q&amp;lt;O[uTYq_~(@+[^T@}M,}yq6JKT3)PgKqRd\');&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
I've attached a Dreamweaver screenshot where the code highlighter found the error, after replacing the &lt;code&gt;J6:6$c."Eec\_WQ:B2V \h 3,WZ?q&amp;lt;O[uTYq_~(@+[^T@}M,}yq6JKT3)PgKqRd\&lt;/code&gt; above with a clean salt, it worked again.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16621 (Check term cache in _transform_terms()) updated</title>
      
        <dc:creator>misterbisson</dc:creator>

      <pubDate>Wed, 23 Feb 2011 23:07:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16621#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16621#comment:2/1298502430541312</guid>
      <description>&lt;p&gt;
@Scribu: sorry, you're right. I had been certain that WP maintained a cache addressable by term slug. I was wrong and probably guilty of wishful thinking.
&lt;/p&gt;
&lt;p&gt;
Are there strong arguments against maintaining such a cache?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16622 ([17246] Breaks category exclusion) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 23 Feb 2011 22:36:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16622#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16622#comment:11/1298500584488916</guid>
      <description>&lt;p&gt;
Updated the patch to reduce the number of &lt;code&gt;serialize()&lt;/code&gt; calls.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16622.2.diff attached to Ticket #16622</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 23 Feb 2011 22:34:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16622/16622.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16622/16622.2.diff/1298500453510576</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16622 ([17246] Breaks category exclusion) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 23 Feb 2011 22:27:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16622#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16622#comment:10/1298500054211738</guid>
      <description>&lt;p&gt;
Oh, since you're hashing all the query vars, you should rename 'parsed_tax_query_hash' to 'query_vars_hash'.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16622 ([17246] Breaks category exclusion) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 23 Feb 2011 22:21:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16622#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16622#comment:9/1298499698529943</guid>
      <description>&lt;p&gt;
Hashing the query vars seems like a good solution. Might end up with a few false positives sometimes, but it's better to err on the safe side.
&lt;/p&gt;
&lt;p&gt;
md5() is written for hashing large amounts of data, so that shouldn't be a problem.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16617 (New WP_Roles) updated</title>
      
        <dc:creator>jrfoell</dc:creator>

      <pubDate>Wed, 23 Feb 2011 22:17:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16617#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16617#comment:10/1298499452835719</guid>
      <description>&lt;p&gt;
Sorry, the patch was generated and tested against 3.1 today
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16617 (New WP_Roles) updated</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Wed, 23 Feb 2011 22:10:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16617#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16617#comment:9/1298499017894713</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Please do not change the version specified from the original ticket creation.  We use this to track when the bug was initially noticed/introduced.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16622 ([17246] Breaks category exclusion) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Wed, 23 Feb 2011 21:59:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16622#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16622#comment:8/1298498351468927</guid>
      <description>&lt;p&gt;
Also, for secondary requests, what other hook is available to go in and do &lt;code&gt;-&amp;gt;set()&lt;/code&gt;s? It seems like &lt;code&gt;parse_query&lt;/code&gt;/&lt;code&gt;pre_get_posts&lt;/code&gt; are the only option.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16617 (New WP_Roles) updated</title>
      
        <dc:creator>jrfoell</dc:creator>

      <pubDate>Wed, 23 Feb 2011 21:57:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16617#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16617#comment:8/1298498270212050</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>capabilities_patch.diff attached to Ticket #16617</title>
      
        <dc:creator>jrfoell</dc:creator>

      <pubDate>Wed, 23 Feb 2011 21:54:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16617/capabilities_patch.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16617/capabilities_patch.diff/1298498095376975</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16622 ([17246] Breaks category exclusion) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Wed, 23 Feb 2011 21:53:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16622#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16622#comment:7/1298497983294129</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16622#comment:5" title="Comment 5"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
pre_get_posts is an unreliable place to do set().  You are setting a query var after the query vars are parsed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The same would be true of &lt;code&gt;parse_query&lt;/code&gt; too, then. They're identical hooks. And they're fairly useful in my experience.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16622#comment:6" title="Comment 6"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
md5() probably isn't necessary, unless I'm missing something.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Just trying to not balloon the size of that object. Tradeoff between memory/CPU.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16622 ([17246] Breaks category exclusion) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 23 Feb 2011 21:50:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16622#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16622#comment:6/1298497819486844</guid>
      <description>&lt;p&gt;
md5() probably isn't necessary, unless I'm missing something.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16622 ([17246] Breaks category exclusion) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 23 Feb 2011 21:42:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16622#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16622#comment:5/1298497378687469</guid>
      <description>&lt;p&gt;
pre_get_posts is an unreliable place to do set().  You are setting a query var after the query vars are parsed.  It happens to work for a few things in 3.0, but it isn't uniformly reliable.  It also don't set the query flags to match the query.   But, I guess these things have become features. :-)
&lt;/p&gt;
&lt;p&gt;
Anyhow, the patch seems a good approach. The query vars array is usually pretty small so I don't think the serialize will be a big hit.  Going forward, we might want to
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16617 (New WP_Roles) updated</title>
      
        <dc:creator>jrfoell</dc:creator>

      <pubDate>Wed, 23 Feb 2011 21:19:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16617#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16617#comment:7/1298495996230709</guid>
      <description>&lt;p&gt;
Ignore the static patch to get_role... that is not a good solution because you can't prevent the constructor of WP_Roles from being public in PHP4.  However, having WP_Roles' $roles property use the same reference as $wp_user_roles will work.
&lt;/p&gt;
&lt;p&gt;
I have attached a change that will allow both methods to work as normal.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>get_role_diff.patch attached to Ticket #16617</title>
      
        <dc:creator>jrfoell</dc:creator>

      <pubDate>Wed, 23 Feb 2011 21:14:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16617/get_role_diff.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16617/get_role_diff.patch/1298495693440620</guid>
      <description>&lt;p&gt;
Static WP_Roles::get_role() patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16622 ([17246] Breaks category exclusion) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Wed, 23 Feb 2011 21:13:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16622#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16622#comment:4/1298495629496838</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Take a look at that patch. I suggested this before. Hashes the state of the query args, and compares it to the state of the current state, to determine whether something has changed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16622 ([17246] Breaks category exclusion) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 23 Feb 2011 21:12:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16622#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16622#comment:3/1298495525753287</guid>
      <description>&lt;p&gt;
There is still a possible problem with that though.   Setting 'cat' adds to the category inclusions and exclusions, rather than replacing them.  Trying to override a 'cat' query won't work as before.  I don't think this is a common usage though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16622.diff attached to Ticket #16622</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Wed, 23 Feb 2011 21:11:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16622/16622.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16622/16622.diff/1298495493627820</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16622 ([17246] Breaks category exclusion) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 23 Feb 2011 21:08:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16622#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16622#comment:2/1298495318131583</guid>
      <description>&lt;p&gt;
The quick fix is to lose $parsed_tax_query and take the hit of having to call get_term_children() twice.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15794 (wordpress.org plugins pages not updating when readme.txt changes) updated</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Wed, 23 Feb 2011 20:30:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15794#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15794#comment:6/1298493043377026</guid>
      <description>&lt;p&gt;
This is a problem with the order of operations. If you want to see an update to the plugin page then just commit some trailing whitespace to the trunk readme.txt. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16522" title="#16522: defect (bug): WordPress repository not refreshing (closed: fixed)"&gt;#16522&lt;/a&gt;, and a few other duplicates out there I think which could all be merged.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16622 ([17246] Breaks category exclusion) updated</title>
      
        <dc:creator>msafi</dc:creator>

      <pubDate>Wed, 23 Feb 2011 20:30:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16622#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16622#comment:1/1298493001042052</guid>
      <description>&lt;p&gt;
I use &lt;code&gt;pre_get_posts&lt;/code&gt; to only include certain categories in the feed and homepage, like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter('pre_get_posts', 'featured_posts');
function featured_posts($query)
{
        if (is_single()) return;
	if ($query-&amp;gt;is_home)
	{
	        $query-&amp;gt;set('cat', '50');
		return $query;
	}
	if ($query-&amp;gt;is_feed)
	{
		$query-&amp;gt;set('cat', '50,172');
		return $query;
	}
	return $query;
}
&lt;/pre&gt;&lt;p&gt;
But none of this code actually works after 3.1.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16436 (Use &lt;article&gt; in theme markup) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 23 Feb 2011 20:23:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16436#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16436#comment:11/1298492596305595</guid>
      <description>maybelater</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16436 (Use &lt;article&gt; in theme markup) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 23 Feb 2011 20:22:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16436#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16436#comment:10/1298492577188809</guid>
      <description>&lt;p&gt;
Indeed, nice article. My original point stands: Twenty Eleven will be HTML5.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16436 (Use &lt;article&gt; in theme markup) reopened</title>
      
        <dc:creator>Malcjohn</dc:creator>

      <pubDate>Wed, 23 Feb 2011 20:20:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16436#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16436#comment:9/1298492450038705</guid>
      <description>&lt;p&gt;
This article from yeasterday is great. Below is a link to download it. Maybe we should use it as our standart theme, which we can use instead of ours.
&lt;/p&gt;
&lt;p&gt;
Links:
&lt;a class="ext-link" href="http://www.smashingmagazine.com/2011/02/22/using-html5-to-transform-wordpress-twentyten-theme/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.smashingmagazine.com/2011/02/22/using-html5-to-transform-wordpress-twentyten-theme/&lt;/a&gt;
&lt;a class="ext-link" href="http://www.twentytenfive.com/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.twentytenfive.com/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #16152 (category__in now shows posts from children categories too) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Wed, 23 Feb 2011 20:18:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16152#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16152#comment:25/1298492295394533</guid>
      <description>&lt;p&gt;
Caused a bug: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16622" title="#16622: defect (bug): [17246] Breaks category exclusion (closed: fixed)"&gt;#16622&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16545 (Direct WP_Query::get_posts() calls can break) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Wed, 23 Feb 2011 20:16:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16545#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16545#comment:26/1298492179407543</guid>
      <description>&lt;p&gt;
Opened &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16622" title="#16622: defect (bug): [17246] Breaks category exclusion (closed: fixed)"&gt;#16622&lt;/a&gt; to track this bug.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16622 ([17246] Breaks category exclusion) created</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Wed, 23 Feb 2011 20:12:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16622</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16622/1298491922380644</guid>
      <description>&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17246" title="Don't parse cat query var twice.  Don't include children for ..."&gt;[17246]&lt;/a&gt; broke category exclusion using this code (change the excluded cats to match something in your install).
&lt;/p&gt;
&lt;pre class="wiki"&gt;function exclude_category($query) {
	if ( $query-&amp;gt;is_feed ) {
		$query-&amp;gt;set('cat', '-5,-6');
	}
	return $query;
}
add_filter('pre_get_posts', 'exclude_category');
&lt;/pre&gt;&lt;p&gt;
Reported by Mike Davidson &lt;a class="ext-link" href="http://wordpress.org/support/topic/wp-31-breaks-rss-customization-via-exclude_category?replies=1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;here&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16545 (Direct WP_Query::get_posts() calls can break) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 23 Feb 2011 19:44:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16545#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16545#comment:25/1298490263799853</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="http://wordpress.org/support/topic/wp-31-breaks-rss-customization-via-exclude_category"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/wp-31-breaks-rss-customization-via-exclude_category&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16545 (Direct WP_Query::get_posts() calls can break) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 23 Feb 2011 19:37:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16545#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16545#comment:24/1298489842944276</guid>
      <description>&lt;p&gt;
It's not a known problem. The ticket is closed as fixed.
&lt;/p&gt;
&lt;p&gt;
What is your code?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16545 (Direct WP_Query::get_posts() calls can break) updated</title>
      
        <dc:creator>mikeindustries</dc:creator>

      <pubDate>Wed, 23 Feb 2011 19:35:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16545#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16545#comment:23/1298489739520523</guid>
      <description>&lt;p&gt;
What's the latest on this? Appreciate everyone's work but kind of sucks that WP 3.1 was released with this as a known problem. Everyone who upgraded to 3.1 and had been excluding categories is now unintentionally polluting their public RSS feeds with unexpected content. This is the first time I've upgraded WordPress and regretted it :(.
&lt;/p&gt;
&lt;p&gt;
Thanks in advance for the help.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16621 (Check term cache in _transform_terms()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 23 Feb 2011 19:27:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16621#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16621#comment:1/1298489277326692</guid>
      <description>&lt;p&gt;
The trouble is that we can't retrieve cached terms by slug, only by term id.
&lt;/p&gt;
&lt;p&gt;
I guess we could still check the cache when transforming from a term id.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16621 (Check term cache in _transform_terms()) created</title>
      
        <dc:creator>misterbisson</dc:creator>

      <pubDate>Wed, 23 Feb 2011 19:21:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16621</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16621/1298488909684531</guid>
      <description>&lt;p&gt;
WP3.1's awesome new taxonomy query stuff rocks, but WP_Tax_Query-&amp;gt;_transform_terms() seems to be executing multiple identical queries on each page load. The front page of one of my sites gives me five of the following query:
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT wp_1_term_taxonomy.term_taxonomy_id
FROM wp_1_term_taxonomy
INNER JOIN wp_1_terms USING (term_id)
WHERE taxonomy = 'channel'
AND wp_1_terms.slug IN ('tech')
&lt;/pre&gt;&lt;p&gt;
I understand the function can do a lot more than map a single term+taxonomy to a term_taxonomy_id, but it also looks like there'd be some performance benefit from checking the term cache rather than the DB in those situations.
&lt;/p&gt;
&lt;p&gt;
Or, perhaps it'd be enough to simply cache the result for the duration of the page load.
&lt;/p&gt;
&lt;p&gt;
Or, maybe I'm focusing on the wrong problem, as the query takes just 1-2ms to execute.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16614 (Allow blog privacy to be set in wp_config.php) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 23 Feb 2011 18:23:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16614#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16614#comment:5/1298485428593636</guid>
      <description>&lt;p&gt;
You're always going to have code that needs to run on one or not the other, and some of it will need to be once the dev environment is loaded.
&lt;/p&gt;
&lt;p&gt;
One good example is a "Staging" plugin that deliberately detects live versus dev, and does various things depending on the environment. Or a plugin that only gets activated on one of them.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16614 (Allow blog privacy to be set in wp_config.php) updated</title>
      
        <dc:creator>kanuck54</dc:creator>

      <pubDate>Wed, 23 Feb 2011 18:05:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16614#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16614#comment:4/1298484304853257</guid>
      <description>&lt;p&gt;
My main issue with that solution is that &lt;code&gt;wp-content/&lt;/code&gt; is typically synched between live and dev environments; so ultimately, if I write a theme function or a plug-in, it's going to have to look at a constant defined in each config file anyway.
&lt;/p&gt;
&lt;p&gt;
And should my plug-in or theme wind up deactivated during a live-to-dev migration, the worst case scenario is that I could potentially have a broken dev site being indexed by a search engine.
&lt;/p&gt;
&lt;p&gt;
It's just not as robust as I'd like. I find it's always safest to assume myself and everyone else an idiot, and therefore I always like things idiot-proofed.
&lt;/p&gt;
&lt;p&gt;
I understand where you're coming from, and obviously in the meantime I'll just short-circuit &lt;code&gt;blog_public&lt;/code&gt; based on my own constant in &lt;code&gt;wp_config.php&lt;/code&gt;. I'm just hoping you'll consider this for the future—especially since I would disagree with the notion that the blog privacy option ought to be downplayed. It looks like &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16416" title="#16416: defect (bug): Settings -&amp;gt; Privacy &amp;#34;block search engines&amp;#34; option is not accurate (closed: fixed)"&gt;#16416&lt;/a&gt; will re-word the option to better indicate to non-techies what it does; and for the tech-inclined, it does exactly what it ought to do, so being able to control it absolutely alongside other instance-specific options would be ideal.
&lt;/p&gt;
&lt;p&gt;
Cheers.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16520 (When selecting more than 10 plugins to up date Update not working) updated</title>
      
        <dc:creator>cCat5564</dc:creator>

      <pubDate>Wed, 23 Feb 2011 18:02:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16520#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16520#comment:3/1298484143125361</guid>
      <description>&lt;p&gt;
LunaScape (it was Firefox), Direct update, it doesn't ask, when i use 5 or 8 plugins it updates, 27 plugins -&amp;gt; will not update, empty list, (i know that there is no limit, browser is fine)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [17488]: 3.2-bleeding</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 23 Feb 2011 16:51:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17488</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17488/1298479907386181</guid>
      <description>&lt;p&gt;
3.2-bleeding
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10913 (optimizations are much needed in the FTP filesystem) updated</title>
      
        <dc:creator>stevem</dc:creator>

      <pubDate>Wed, 23 Feb 2011 16:50:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10913#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10913#comment:14/1298479800949332</guid>
      <description>&lt;p&gt;
More good news :) Uploading just those two changed files again (wp-admin/includes/file.php and wp-admin/includes/class-wp-filesystem-ftpext.php) allowed the update to 3.1 to proceed correctly and quickly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16620 (WP_User_Query, one more column solves many problems) closed</title>
      
        <dc:creator>greuben</dc:creator>

      <pubDate>Wed, 23 Feb 2011 16:43:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16620#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16620#comment:1/1298479437239937</guid>
      <description>duplicate: &lt;p&gt;
Dupe of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16366" title="#16366: enhancement: Search Users box on ms-users.php doesn't search all fields (closed: fixed)"&gt;#16366&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16551 (get_calendar() uses hardcoded element ID) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 23 Feb 2011 16:37:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16551#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16551#comment:4/1298479020756694</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10964 (Improving query_posts performance) updated</title>
      
        <dc:creator>kawauso</dc:creator>

      <pubDate>Wed, 23 Feb 2011 16:21:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10964#comment:63</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10964#comment:63/1298478065214870</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10964#comment:62" title="Comment 62"&gt;mozzer69&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Do we have to patch with the latest attachment only ?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Either of the latest two patches should work, though I've not been able to test them thoroughly, they're based off the other patches.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16551 (get_calendar() uses hardcoded element ID) closed</title>
      
        <dc:creator>kawauso</dc:creator>

      <pubDate>Wed, 23 Feb 2011 15:57:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16551#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16551#comment:3/1298476672569752</guid>
      <description>duplicate</description>
      <category>closedticket</category>
    </item><item>
      <title>user.php attached to Ticket #16620</title>
      
        <dc:creator>jasonnathan</dc:creator>

      <pubDate>Wed, 23 Feb 2011 15:57:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16620/user.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16620/user.php/1298476641005360</guid>
      <description>&lt;p&gt;
wp-includes/user.php
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16620 (WP_User_Query, one more column solves many problems) created</title>
      
        <dc:creator>jasonnathan</dc:creator>

      <pubDate>Wed, 23 Feb 2011 15:56:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16620</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16620/1298476592047235</guid>
      <description>&lt;p&gt;
It is currently not very easy to search a user by his first or last name but if one more column (in fact, just one more word) was added to the User Query object, we could instruct our users to set their display name to something that represents their names and they become searchable!
&lt;/p&gt;
&lt;p&gt;
change line 490 from :
&lt;/p&gt;
&lt;pre class="wiki"&gt;	else
		$search_columns = array('user_login', 'user_nicename');
&lt;/pre&gt;&lt;p&gt;
to
&lt;/p&gt;
&lt;pre class="wiki"&gt;	else
		$search_columns = array('user_login', 'user_nicename', 'display_name');
&lt;/pre&gt;&lt;p&gt;
Now the display name yields results from search
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Milestone 3.1 completed</title>
      

      <pubDate>Wed, 23 Feb 2011 15:00:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/milestone/3.1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/milestone/3.1/1298473200000000</guid>
      <description>&lt;p&gt;
Reports:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="http://core.trac.wordpress.org/report/5"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;This Milestone's tickets&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://core.trac.wordpress.org/report/6"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;This Milestone's tickets, workflow oriented&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Contribute:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="http://core.trac.wordpress.org/report/11"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Needs Reporter Feedback / Steps To Reproduce&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://core.trac.wordpress.org/report/16"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Needs Patch&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://core.trac.wordpress.org/report/13"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Has Patch / Needs Testing&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://core.trac.wordpress.org/report/19"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Needs Punting&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://core.trac.wordpress.org/report/24"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;My Tickets&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://core.trac.wordpress.org/report/25"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;My Patches&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>milestone</category>
    </item><item>
      <title>Changeset [17487]: Tag 3.1</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Wed, 23 Feb 2011 14:49:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17487</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17487/1298472579339319</guid>
      <description>&lt;p&gt;
Tag 3.1
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #15794 (wordpress.org plugins pages not updating when readme.txt changes) updated</title>
      
        <dc:creator>eventualo</dc:creator>

      <pubDate>Wed, 23 Feb 2011 14:47:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15794#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15794#comment:5/1298472448074953</guid>
      <description>&lt;p&gt;
Same problem. I updated yesterday (23 feb 2011) but it shows date of previous update yet (14 nov 2010). Here my plugin:
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/alo-easymail/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/alo-easymail/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [17486]: 3.1</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Wed, 23 Feb 2011 14:45:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17486</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17486/1298472333452554</guid>
      <description>&lt;p&gt;
3.1
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [17485]: 3.1</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Wed, 23 Feb 2011 14:44:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17485</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17485/1298472295717092</guid>
      <description>&lt;p&gt;
3.1
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16618 (WP update runs out of memory) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 23 Feb 2011 14:35:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16618#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16618#comment:6/1298471709675761</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Might want to try this plugin:  &lt;a class="ext-link" href="http://wordpress.org/extend/plugins/memory-bump/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/memory-bump/&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That plugin is only for 2.9.x and below. It will have no effect in 3.0.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12935 (Evolve the URL routing system) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 23 Feb 2011 13:48:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12935#comment:63</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12935#comment:63/1298468929386798</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12935#comment:62" title="Comment 62"&gt;mikeschinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12935#comment:60" title="Comment 60"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
But the perceived lack of flexibility of WP_Rewrite isn't due to regexes, but due to the way these patterns are generated and stored.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You misquote me.  It's not a lack of flexibility of regular expressions; it's the requirement to match each URL in it's entirety that makes it very difficult for most people to set URL routes for anything beyond trivial.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I didn't quote you to begin with.
&lt;/p&gt;
&lt;p&gt;
&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, can you help me understand why you'd advocate maintaining a system that generates and map upwards of 1000 regular expresssions for a complex CMS when with a tree structure the matching would be 1 to 2 orders of magnitude less per page load?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I advocate maintaining this system for normal use. Complex CMSs can do tree structure matching, as needed.
&lt;/p&gt;
&lt;p&gt;
&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
And please address why retaining the complexity of the regular expressions as used in the rewrite system makes sense vs. much more straightforward simple match rules that mere mortals are much more likely to understand (with fallback to RegEx, of course?)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The system you propose is not actually that simple at all. You just replace the regex engine with PHP code, removing one common skillset with a very specific one (knowing the tree structure API and algorithm).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12935 (Evolve the URL routing system) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Wed, 23 Feb 2011 12:56:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12935#comment:62</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12935#comment:62/1298465801687606</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12935#comment:60" title="Comment 60"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
But the perceived lack of flexibility of WP_Rewrite isn't due to regexes, but due to the way these patterns are generated and stored.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You misquote me.  It's not a lack of flexibility of regular expressions; it's the requirement to match each URL in it's entirety that makes it very difficult for most people to set URL routes for anything beyond trivial.
&lt;/p&gt;
&lt;p&gt;
Remember the old saw:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;em&gt;"I had a programming problem and decided to use regular expressions. Then I had two problems."&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
So, although there certainly are use cases for parsing individual path segments - this can already be done (&lt;a class="ext-link" href="http://wordpress.stackexchange.com/questions/9419/remove-taxonomy-slug-from-a-custom-hierarchical-taxonomy-permalink/9685#9685"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;one example&lt;/a&gt;) - it shouldn't be the main way of defining rewrite paths.
&lt;/p&gt;
&lt;p&gt;
We should focus instead on making it easier to manipulate the existing regex rules.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Can you please explain the logic behind your conclusion and why it makes sense to continue to flatten a tree structure for matching?  Also please address the subsequent duplication required to match similar leaf nodes (like permastructs) rather than to match a tree structure using a tree structure, as proposed?
&lt;/p&gt;
&lt;p&gt;
Also, can you help me understand why you'd advocate maintaining a system that generates and map upwards of 1000 regular expresssions for a complex CMS when with a tree structure the matching would be 1 to 2 orders of magnitude less per page load?
&lt;/p&gt;
&lt;p&gt;
And please address why retaining the complexity of the regular expressions as used in the rewrite system makes sense vs. much more straightforward simple match rules that mere mortals are much more likely to understand (with fallback to RegEx, of course?)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16617 (New WP_Roles) updated</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Wed, 23 Feb 2011 12:13:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16617#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16617#comment:6/1298463199059585</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think this is a case of incorrect usage. The OO plugin functions should do exactly what the procedural ones do - i.e., let wordpress handle it:
&lt;/p&gt;
&lt;pre class="wiki"&gt;public function onActivation() {
	$role = get_role( 'administrator' );
	$role-&amp;gt;add_cap( 'add_cap_oo' );
}
public function onDeactivation() {
	$role = get_role( 'administrator' );
	$role-&amp;gt;remove_cap( 'add_cap_oo' );
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16619 (XMLRPC authentication bypasses plugins?) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 23 Feb 2011 11:44:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16619#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16619#comment:2/1298461450701168</guid>
      <description>&lt;p&gt;
See also, This: &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-includes/user.php#L40"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/browser/trunk/wp-includes/user.php#L40&lt;/a&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;40	        // TODO do we deprecate the wp_authentication action?
41	        do_action_ref_array('wp_authenticate', array(&amp;amp;$credentials['user_login'], &amp;amp;$credentials['user_password']));
&lt;/pre&gt;&lt;p&gt;
It seems that that filter is not the ideal one, 'authenticate' is the better filter for this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12935 (Evolve the URL routing system) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 23 Feb 2011 11:42:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12935#comment:61</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12935#comment:61/1298461375171945</guid>
      <description>&lt;p&gt;
I'm thinking about an intermediary representation in between permastructs and the final rules array.
&lt;/p&gt;
&lt;p&gt;
A rule would look like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;array(
  'pattern' =&amp;gt; 'regex string',
  'args' =&amp;gt; array( 'query_var' =&amp;gt; preg_index_nr )
)
&lt;/pre&gt;&lt;p&gt;
Example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;array(
  'pattern' =&amp;gt; 'tag/([^/]+)/page/?([0-9]{1,})/?$',
  'args' =&amp;gt; array( 'tag' =&amp;gt; 1, 'paged' =&amp;gt; 2 )
)
&lt;/pre&gt;&lt;p&gt;
which would lead to:
&lt;/p&gt;
&lt;pre class="wiki"&gt;'tag/([^/]+)/page/?([0-9]{1,})/?$' =&amp;gt; index.php?tag=$matches[1]&amp;amp;paged=$matches[2]
&lt;/pre&gt;&lt;p&gt;
This doesn't solve the re-ordering problem, but I think it's a good start.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16619 (XMLRPC authentication bypasses plugins?) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 23 Feb 2011 11:39:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16619#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16619#comment:1/1298461191073206</guid>
      <description>invalid: &lt;p&gt;
It looks like the plugin isn't hooking into enough places. It'll probably have to hook into 'check_password' or 'authenticate' filters.
&lt;/p&gt;
&lt;p&gt;
Try using &lt;code&gt; wp_authenticate($username, $password);&lt;/code&gt; directly in code, you'll probably find it fail there too.
&lt;/p&gt;
&lt;p&gt;
Report it to the plugin author, Please feel free to direct the plugin author to this ticket to re-open it if they have a reason to believe that there's a bug in core.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16617 (New WP_Roles) updated</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Wed, 23 Feb 2011 11:36:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16617#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16617#comment:5/1298460988468099</guid>
      <description>&lt;p&gt;
Here's the problem:
&lt;/p&gt;
&lt;p&gt;
The function &lt;code&gt;get_role()&lt;/code&gt; uses the global &lt;code&gt;$wp_roles&lt;/code&gt;, which is instantiated the first time that one of the capability functions are called. At instantiation, it loads the &lt;code&gt;wp_user_roles&lt;/code&gt; option and stores it as &lt;code&gt;$wp_roles-&amp;gt;roles&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Now, whenever you use $wp_roles::add_cap() (as the procedural plugin does), it simply adds the capability to &lt;code&gt;$wp_roles-&amp;gt;roles&lt;/code&gt;, and then does &lt;code&gt;update_option()&lt;/code&gt; to store it in the database. If, in the mean time, something else has updated the &lt;code&gt;wp_user_roles&lt;/code&gt; option independently (which is what the OO plugin does, with it's own instatiation of the WP_roles class), then $wp_roles has no knowledge of this and simply overwrites those changes. Hence the capability added by the OO plugin is overwritten.
&lt;/p&gt;
&lt;p&gt;
Basically, the current setup only works if you have *one* instantiation of the &lt;code&gt;WP_Roles&lt;/code&gt; class. Things will break if plugin authors create their own - because the &lt;code&gt;wp_user_roles&lt;/code&gt; option is loaded only once, at instantiation. Having two instances of the class making concurrent changes will always cause one set to be overwritten by the other.
&lt;/p&gt;
&lt;p&gt;
I'm no expert, but I can't see why you would want more than one instance of WP_Roles anyway?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15855 (Dropdown isn't shown when doing a user 'removal') updated</title>
      
        <dc:creator>designsimply</dc:creator>

      <pubDate>Wed, 23 Feb 2011 11:29:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15855#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15855#comment:33/1298460581908190</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Tried testing, but the patch fails to apply.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12935 (Evolve the URL routing system) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 23 Feb 2011 11:10:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12935#comment:60</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12935#comment:60/1298459422238887</guid>
      <description>&lt;p&gt;
After working with WP_Rewrite even more, I think this ticket's focus is on the wrong thing.
&lt;/p&gt;
&lt;p&gt;
Ordered URL regex patterns are used in many other CMSs/frameworks and are a pretty concise and powerfull way of defining rewrite rules, with limitations of course.
&lt;/p&gt;
&lt;p&gt;
But the perceived lack of flexibility of WP_Rewrite isn't due to regexes, but due to the way these patterns are generated and stored.
&lt;/p&gt;
&lt;p&gt;
It's akward to re-order rules, for example. Also, they're not grouped in any way after they're generated: you can't easily filter out only the taxonomy rewrite rules, or just the rules for a particular post type etc.
&lt;/p&gt;
&lt;p&gt;
So, although there certainly are use cases for parsing individual path segments - this can already be done (&lt;a class="ext-link" href="http://wordpress.stackexchange.com/questions/9419/remove-taxonomy-slug-from-a-custom-hierarchical-taxonomy-permalink/9685#9685"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;one example&lt;/a&gt;) - it shouldn't be the main way of defining rewrite paths.
&lt;/p&gt;
&lt;p&gt;
We should focus instead on making it easier to manipulate the existing regex rules.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16619 (XMLRPC authentication bypasses plugins?) created</title>
      
        <dc:creator>kojix</dc:creator>

      <pubDate>Wed, 23 Feb 2011 11:03:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16619</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16619/1298458998821924</guid>
      <description>&lt;p&gt;
I'm using the plugin Simple LDAP Authentication to authenticate to my blog network. The plugin is runing ok on the web authentication, but when trying the Android App, it fails with the User/password wrong message.
&lt;/p&gt;
&lt;p&gt;
I've set a password for my user into the wp_users table (by default the plugin sets it as a random value), and using this pwd i can authenticate, so I think that xmlrpc bypasses the plugin authentication (I've checked it putting error messages on log on the plugin process, and nothing appears when accessing via xmlrpc).
&lt;/p&gt;
&lt;p&gt;
In the xmlrpc.php doc, there is the wp_xmlrpc_server::login function, which performs this call:
&lt;/p&gt;
&lt;p&gt;
$user = wp_authenticate($username, $password);
&lt;/p&gt;
&lt;p&gt;
And on the plugin class definition we have:
&lt;/p&gt;
&lt;p&gt;
function LdapAuthenticationPlugin() {
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
add_action('wp_authenticate', array(&amp;amp;$this, 'authenticate'), 10, 2);
add_filter('check_password', array(&amp;amp;$this, 'override_password_check'), 10, 4);
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So, I think all should be ok, what makes me think that there could be an error on xmlrpc
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16618 (WP update runs out of memory) updated</title>
      
        <dc:creator>willkemp</dc:creator>

      <pubDate>Wed, 23 Feb 2011 10:49:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16618#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16618#comment:5/1298458158491419</guid>
      <description>&lt;p&gt;
Yes, that worked. Thank you very much for your help!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16618 (WP update runs out of memory) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 23 Feb 2011 10:39:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16618#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16618#comment:4/1298457598357803</guid>
      <description>&lt;p&gt;
You'll probably have to deactivate a few plugins then for the upgrade. Your memory usage is too high, not leaving enough headroom for when an upgrade is running.
&lt;/p&gt;
&lt;p&gt;
Future versions will optimize it a bit more.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16618 (WP update runs out of memory) updated</title>
      
        <dc:creator>willkemp</dc:creator>

      <pubDate>Wed, 23 Feb 2011 10:37:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16618#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16618#comment:3/1298457431905346</guid>
      <description>&lt;p&gt;
Thanks for that. I installed memory bump but the same thing happens.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16618 (WP update runs out of memory) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 23 Feb 2011 10:33:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16618#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16618#comment:2/1298457214864509</guid>
      <description>duplicate: &lt;p&gt;
Might want to try this plugin: &lt;a class="ext-link" href="http://wordpress.org/extend/plugins/memory-bump/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/memory-bump/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Closing as dup.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14069 (do_robots() ignores charset setting) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 23 Feb 2011 10:30:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14069#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14069#comment:7/1298457042096350</guid>
      <description>&lt;p&gt;
Thanks for looking into this.
&lt;/p&gt;
&lt;p&gt;
Indeed, US-ASCII is the preferred mime-name (&lt;a class="ext-link" href="http://www.iana.org/assignments/character-sets"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;ref&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
And indeed, the original code can be much simplified.
&lt;/p&gt;
&lt;p&gt;
For documentation purposes: &lt;a class="ext-link" href="http://hakre.wordpress.com/2011/02/23/best-practice-robots-txt/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Best Practice robots.txt&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16617 (New WP_Roles) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 23 Feb 2011 10:30:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16617#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16617#comment:4/1298457019191232</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>14069.2.patch attached to Ticket #14069</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 23 Feb 2011 10:29:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14069/14069.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14069/14069.2.patch/1298456949844921</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11101 (Gallery column width calculation needs more granularity) updated</title>
      
        <dc:creator>designsimply</dc:creator>

      <pubDate>Wed, 23 Feb 2011 10:12:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11101#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11101#comment:3/1298455926439972</guid>
      <description>&lt;p&gt;
The patch still had floor() instead of round(). Attached an updated patch, but also, is this really needed?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>11101.2.diff attached to Ticket #11101</title>
      
        <dc:creator>designsimply</dc:creator>

      <pubDate>Wed, 23 Feb 2011 10:11:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11101/11101.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11101/11101.2.diff/1298455919675536</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16618 (WP update runs out of memory) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 23 Feb 2011 07:39:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16618#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16618#comment:1/1298446750725269</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16236" title="#16236: task (blessed): Method to stream file downloads in HTTP API, to reduce update memory ... (closed: fixed)"&gt;#16236&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16618 (WP update runs out of memory) created</title>
      
        <dc:creator>willkemp</dc:creator>

      <pubDate>Wed, 23 Feb 2011 06:29:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16618</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16618/1298442593883528</guid>
      <description>&lt;p&gt;
When i try to auto update 3.0.4 to 3.0.5 i get the following error message:
&lt;/p&gt;
&lt;p&gt;
Downloading update from &lt;a class="ext-link" href="http://wordpress.org/wordpress-3.0.5.zip"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/wordpress-3.0.5.zip&lt;/a&gt;…
&lt;/p&gt;
&lt;p&gt;
Fatal error: Allowed memory size of 33554432 bytes exhausted (tried to allocate 2976664 bytes) in /home/willkemp/public_html/blog/wp-includes/class-http.php on line 1402
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16615 (More inline docs needed to explain DB errors esp. dead_db() and ...) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 23 Feb 2011 06:29:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16615#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16615#comment:2/1298442559543064</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Screen shot 2011-02-23 at 2.51.54 PM.png attached to Ticket #13958</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Wed, 23 Feb 2011 05:52:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13958/Screen%20shot%202011-02-23%20at%202.51.54%20PM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13958/Screen%20shot%202011-02-23%20at%202.51.54%20PM.png/1298440368267691</guid>
      <description>&lt;p&gt;
how it looks after 13958.2.diff is applied
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>13958.2.diff attached to Ticket #13958</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Wed, 23 Feb 2011 05:50:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13958/13958.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13958/13958.2.diff/1298440245049896</guid>
      <description>&lt;p&gt;
fixed typo
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #13958 (Deactivating custom post types/taxonomies breaks nav menus) updated</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Wed, 23 Feb 2011 05:49:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13958#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13958#comment:15/1298440172237933</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I just attached another patch that's a bit different from how filosofo's patch handles this issue:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If post type or taxonomy is invalid, post_status is draft.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Walker class is not touched. Instead, draft items are filtered again within &lt;code&gt;wp_get_nav_menu_items()&lt;/code&gt;. Otherwise, draft items would still be returned when calling &lt;code&gt;wp_get_nav_menu_items($menu, array('post_status' =&amp;gt; 'publish')&lt;/code&gt;, which is unexpected behavior.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;The invalid menu items are not touched as well, even when the menu is saved. The 'draft' post status is dubbed on the fly.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
As a result, when a plugin with custom tax or post type is disabled, then enabled again, its menu items won't go away.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>13958.diff attached to Ticket #13958</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Wed, 23 Feb 2011 05:43:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13958/13958.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13958/13958.diff/1298439787833514</guid>
      <description>&lt;p&gt;
mark menu items with invalid custom post type or taxonomy as "draft", but don't delete them
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16617 (New WP_Roles) updated</title>
      
        <dc:creator>jrfoell</dc:creator>

      <pubDate>Wed, 23 Feb 2011 05:41:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16617#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16617#comment:3/1298439661431671</guid>
      <description>&lt;p&gt;
I duplicated the procedural plugin and bulk activating those two was fine.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16617 (New WP_Roles) updated</title>
      
        <dc:creator>jrfoell</dc:creator>

      <pubDate>Wed, 23 Feb 2011 05:33:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16617#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16617#comment:2/1298439194829203</guid>
      <description>&lt;p&gt;
I discovered it when trying to activate two newly installed plugins that used the different role methods.  I activated them both at the same time (using the bulk activate feature) and noticed the menus for one plugin wouldn't show up unless I deactivated it, then reactivated it by itself.
&lt;/p&gt;
&lt;p&gt;
Created some example plugins to make testing simpler.
&lt;/p&gt;
&lt;p&gt;
PHP version: 5.3.3
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>plugin.2.php attached to Ticket #16617</title>
      
        <dc:creator>jrfoell</dc:creator>

      <pubDate>Wed, 23 Feb 2011 05:30:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16617/plugin.2.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16617/plugin.2.php/1298439040577752</guid>
      <description>&lt;p&gt;
Procedural plugin
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>plugin.php attached to Ticket #16617</title>
      
        <dc:creator>jrfoell</dc:creator>

      <pubDate>Wed, 23 Feb 2011 05:30:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16617/plugin.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16617/plugin.php/1298439020354578</guid>
      <description>&lt;p&gt;
OO Plugin
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16617 (New WP_Roles) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 23 Feb 2011 05:23:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16617#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16617#comment:1/1298438616078024</guid>
      <description>&lt;p&gt;
Could you attach the individual PHP files? Easier for people to glance over.
&lt;/p&gt;
&lt;p&gt;
Have you tried 2 procedural plugins?
&lt;/p&gt;
&lt;p&gt;
How did you discover this not working?
&lt;/p&gt;
&lt;p&gt;
Which version of PHP?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>add_cap_procedural.zip attached to Ticket #16617</title>
      
        <dc:creator>jrfoell</dc:creator>

      <pubDate>Wed, 23 Feb 2011 05:20:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16617/add_cap_procedural.zip</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16617/add_cap_procedural.zip/1298438418321839</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>add_cap_oo.zip attached to Ticket #16617</title>
      
        <dc:creator>jrfoell</dc:creator>

      <pubDate>Wed, 23 Feb 2011 05:20:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16617/add_cap_oo.zip</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16617/add_cap_oo.zip/1298438407154478</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16617 (New WP_Roles) created</title>
      
        <dc:creator>jrfoell</dc:creator>

      <pubDate>Wed, 23 Feb 2011 05:19:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16617</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16617/1298438349092317</guid>
      <description>&lt;p&gt;
Attached two example plugins, one procedural, one object oriented.  Both add a test capability to the administrator role and check for it (printing in the footer).  If you activate them individually, they're both fine, if you activate them both at the same time, the OO one fails.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10535 (_wp_filter_build_unique_id issues with the first time a filter is ...) updated</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Wed, 23 Feb 2011 03:25:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10535#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10535#comment:28/1298431504263829</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>15897.2.diff attached to Ticket #15897</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Wed, 23 Feb 2011 03:21:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/15897/15897.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/15897/15897.2.diff/1298431299967824</guid>
      <description>&lt;p&gt;
patch refreshed
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16614 (Allow blog privacy to be set in wp_config.php) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Wed, 23 Feb 2011 00:01:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16614#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16614#comment:3/1298419298516931</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16614 (Allow blog privacy to be set in wp_config.php) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Wed, 23 Feb 2011 00:00:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16614#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16614#comment:2/1298419238369812</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16614#comment:1" title="Comment 1"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'd rather you stuck to a filter.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree. This can be handled by a one line filter in a plugin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13429 (Updating Link URL on image within Admin with Gallery) updated</title>
      
        <dc:creator>designsimply</dc:creator>

      <pubDate>Tue, 22 Feb 2011 23:50:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13429#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13429#comment:20/1298418622758253</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Tested 13429.2.patch with &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17484" title="Also mention compressed scripts"&gt;r17484&lt;/a&gt;. Works for me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16614 (Allow blog privacy to be set in wp_config.php) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 22 Feb 2011 23:39:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16614#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16614#comment:1/1298417993715169</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'd rather you stuck to a filter.
&lt;/p&gt;
&lt;p&gt;
The option controls 3 things:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;robots.txt
&lt;/li&gt;&lt;li&gt;robots Meta in the &amp;lt;head&amp;gt;
&lt;/li&gt;&lt;li&gt;Disables pings
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Pretty sure it's the last one you wish to do here, We've been playing down the privacy option as it doesn't do what a lot of people expect it to do (ie. completely block search engines from indexing it, which it doesnt). giving it a define seems to give it more credentials than it's worth.
&lt;/p&gt;
&lt;p&gt;
Not all options deserve a define, infact, I can think of a few more that are worthy of it than this..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16616 (Publish immediately checkbox) closed</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Tue, 22 Feb 2011 23:29:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16616#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16616#comment:1/1298417393904331</guid>
      <description>duplicate: &lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16068" title="#16068: enhancement: No UI for &amp;#34;unscheduling&amp;#34; a scheduled post? (closed: duplicate)"&gt;#16068&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16616 (Publish immediately checkbox) created</title>
      
        <dc:creator>sjefen6</dc:creator>

      <pubDate>Tue, 22 Feb 2011 22:37:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16616</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16616/1298414251834441</guid>
      <description>&lt;p&gt;
There should be a checkbox for selecting "Publish immediately" when editing the time of when a post is published. This should set the publish time to the same state as when starting to write a new post, both if it is a draft (ie: time is set when pressing publish) and when it is a published post (ie: time is set when pressing update post).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Changeset [17484]: Also mention compressed scripts</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Tue, 22 Feb 2011 22:36:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17484</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17484/1298414218182390</guid>
      <description>&lt;p&gt;
Also mention compressed scripts
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [17483]: Also mention compressed scripts</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Tue, 22 Feb 2011 22:36:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17483</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17483/1298414177159533</guid>
      <description>&lt;p&gt;
Also mention compressed scripts
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16615 (More inline docs needed to explain DB errors esp. dead_db() and ...) updated</title>
      
        <dc:creator>jeremyclarke</dc:creator>

      <pubDate>Tue, 22 Feb 2011 22:27:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16615#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16615#comment:1/1298413658500615</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Ugh. I just realized that none of the wpdb::bail() messages show unless WP_DEBUG is set to true. This is my fault for not noticing.
&lt;/p&gt;
&lt;p&gt;
It seems that as long as WP_DEBUG is not true dead_db() does in fact fire and use the wp-content/db-error.php file as described.
&lt;/p&gt;
&lt;p&gt;
Apologies for the noise in the ticket above. I think that all we really need at this point is more comments in the source to make it clearer what is happening and when. The way it's set up now you'd have to dig around forever to realize what's going on.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16615 (More inline docs needed to explain DB errors esp. dead_db() and ...) created</title>
      
        <dc:creator>jeremyclarke</dc:creator>

      <pubDate>Tue, 22 Feb 2011 21:42:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16615</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16615/1298410978257370</guid>
      <description>&lt;p&gt;
&lt;strong&gt;The Problem: DB Error reporting can't be modified&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
I'm trying to set my sites up for some scheduled downtime of our (separate) MySQL server. I am hoping that I can show cached pages if they are requested, but show a 'We are down for scheduled maintenance' message when a user loads a page that needs the database.
&lt;/p&gt;
&lt;p&gt;
In the process I'm seeing there are many different places in the code that fire depending on exactly how broken the database is. Specifically, there are some scenarios where &lt;code&gt;dead_db()&lt;/code&gt;, which is totally different from the rest of the messages, will fire. dead_db() is cool because it promises to let us use a &lt;code&gt;/wp-content/db-error.php&lt;/code&gt; file to control output in case of a db error, but currently it is just frustrating because most types of db error (server missing, db missing) don't cause &lt;code&gt;dead_db()&lt;/code&gt; to fire, but instead use &lt;code&gt;$wpdb::bail()&lt;/code&gt;. These bail()-based errors are used in wp-db.php.
&lt;/p&gt;
&lt;p&gt;
However &lt;code&gt;dead_db()&lt;/code&gt; CAN still fire, which I know because our site often has database outages that result in the H2 from &lt;code&gt;dead_db()&lt;/code&gt; being shown. I think it's a certain mix of "the mysql server and database seem to exist, but are failing to respond to actual queries". That said, I'm pretty sure that the scenarios where dead_db still fires are ones also covered by some of the &lt;code&gt;$wpdb::bail()&lt;/code&gt; situations, and would be better off handled by one consistent system of errors. dead_db() should either be used for all DB related errors or deprecated, otherwise it is just an awkward red-herring for developers.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;The Solution: Better filters on &lt;code&gt;$wpdb::bail()&lt;/code&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
I think that all these messages need to be pluggable somehow and it should be clear how to do so when looking at the code itself. Asking people who want to change a wp_die() message to find it in the code is reasonable, but it should be clear from there how to change it. Ideally there would be a filter in the function that calls bail() that lets you edit the text and/or forward the user to another URL where a maintenance message lives. It should be of of those situations where finding the source of the message also finds the means of changing it.
&lt;/p&gt;
&lt;p&gt;
The simplest answer would be a filter added in &lt;code&gt;$wpdb::bail()&lt;/code&gt; that used the $error_code to identify the specific message. In the database errors the $error_code passed to bail() are useful slug-type strings like 'db_select_fail'. Something like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;apply_filters('wpdb_bail', $error_code, $message);
wp_die($message);
&lt;/pre&gt;&lt;p&gt;
This would give people a lot of control, and could easily be referred to in a comment before any given instance of &lt;code&gt;$wpdb::bail()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
To make the $error_code easier to find I think it's also worth reformatting the code used to call &lt;code&gt;$wpdb::bail()&lt;/code&gt;. Currently it takes this form:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$this-&amp;gt;bail( sprintf( /*WP_I18N_DB_CONN_ERROR*/"
...
SUPER LONG HTML MESSAGE
...
"/*/WP_I18N_DB_CONN_ERROR*/, $details['db_host'] ), 'db_connect_fail' );
&lt;/pre&gt;&lt;p&gt;
This makes it hard to notice the 'db_connect_fail' string all the noise. Instead the message perparation and bail() call should be on two lines, one for defining the message and another that only calls bail (with an explanation about the $error_message and filter above it).
&lt;/p&gt;
&lt;p&gt;
Looking at it deeper I imagine I can achieve what I want by hooking into the 'wp_die_handler' filter, checking for the exact HTML generated by the DB error (the &lt;code&gt;$message&lt;/code&gt; value in the code above), and doing something based on that, but it's obviously a house of cards for future updates where the text might change. It will also be easily foiled by any translation of the &lt;code&gt;$message&lt;/code&gt; which will change its output.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16223 (post_class for public custom taxonomies) updated</title>
      
        <dc:creator>sillybean</dc:creator>

      <pubDate>Tue, 22 Feb 2011 20:58:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16223#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16223#comment:6/1298408285726242</guid>
      <description>&lt;p&gt;
Finally found a moment to go through all the relevant functions, and it looks like they are hitting the cache whenever possible.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16614 (Allow blog privacy to be set in wp_config.php) created</title>
      
        <dc:creator>kanuck54</dc:creator>

      <pubDate>Tue, 22 Feb 2011 18:34:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16614</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16614/1298399653688360</guid>
      <description>&lt;p&gt;
I imagine this scenario is fairly common: I regularly reverse-migrate data from the &lt;code&gt;client_live&lt;/code&gt; database to the &lt;code&gt;client_dev&lt;/code&gt; database on a client site, so that I'm always working with the very latest live data when working on their custom theme.
&lt;/p&gt;
&lt;p&gt;
In this scenario, the &lt;code&gt;WP_HOME&lt;/code&gt; and &lt;code&gt;WP_SITEURL&lt;/code&gt; constants in &lt;code&gt;wp_config.php&lt;/code&gt; save me a ton of work; they very nearly foolproof the entire back-and-forth process.
&lt;/p&gt;
&lt;p&gt;
The one notable problem is blog privacy. Since &lt;code&gt;blog_public&lt;/code&gt; is an option stored in the database, every time I reverse-migrate, our dev site switches from private to public, and I need to remember to switch it back so I don't accidentally send out pingbacks and notify a site where our development environment is located.
&lt;/p&gt;
&lt;p&gt;
I can mitigate this with (in order of increasing foolproof-itude) a theme function, or a plug-in, or a drop-in plug-in; but I think it would make the &lt;em&gt;most&lt;/em&gt; sense if I could set this in &lt;code&gt;wp_config.php&lt;/code&gt;, since, like &lt;code&gt;WP_DEBUG&lt;/code&gt;, &lt;code&gt;WP_HOME&lt;/code&gt; and &lt;code&gt;WP_SITEURL&lt;/code&gt;, it's something that will frequently differ between two otherwise identical incarnations of a site.
&lt;/p&gt;
&lt;p&gt;
As I see it, defining a &lt;code&gt;WP_BLOG_PUBLIC&lt;/code&gt; constant in &lt;code&gt;wp_config.php&lt;/code&gt; could have the same effect as setting &lt;code&gt;WP_HOME&lt;/code&gt; or &lt;code&gt;WP_SITEURL&lt;/code&gt;; the option would still be visible in the Privacy Settings in the administration panel (&lt;code&gt;options-privacy.php&lt;/code&gt;), but you wouldn't be able to change it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16517 (What about / Whom to ask for full/missing wordpress source-code?) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Tue, 22 Feb 2011 17:59:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16517#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16517#comment:39/1298397553388480</guid>
      <description>&lt;p&gt;
Thank you!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11329 (Allow _wp_get_comment_list() to return comments only for specific users) updated</title>
      
        <dc:creator>cnorris23</dc:creator>

      <pubDate>Tue, 22 Feb 2011 17:45:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11329#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11329#comment:23/1298396749370848</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Suggest close as _wp_get_comment_list() has been replaced by WP_Comments_List_Table.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15959 (get_adjacent_post() can generate invalid SQL) updated</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Tue, 22 Feb 2011 17:33:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15959#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15959#comment:6/1298396018495077</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15959 (get_adjacent_post() can generate invalid SQL) updated</title>
      
        <dc:creator>wpdavis</dc:creator>

      <pubDate>Tue, 22 Feb 2011 17:32:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15959#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15959#comment:5/1298395969739692</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>get_adjacent_post.patch attached to Ticket #15959</title>
      
        <dc:creator>wpdavis</dc:creator>

      <pubDate>Tue, 22 Feb 2011 17:32:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/15959/get_adjacent_post.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/15959/get_adjacent_post.patch/1298395944834863</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15959 (get_adjacent_post() can generate invalid SQL) updated</title>
      
        <dc:creator>wpdavis</dc:creator>

      <pubDate>Tue, 22 Feb 2011 17:32:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15959#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15959#comment:4/1298395921312049</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Just updated the patch. Simply check if the array of object terms is empty.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16524 (No documentation (not possible?) to add plugins to Trac) updated</title>
      
        <dc:creator>Moskjis</dc:creator>

      <pubDate>Tue, 22 Feb 2011 17:17:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16524#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16524#comment:3/1298395057624287</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16517 (What about / Whom to ask for full/missing wordpress source-code?) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Tue, 22 Feb 2011 16:43:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16517#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16517#comment:38/1298392988349649</guid>
      <description>&lt;p&gt;
&lt;strong&gt;filosofo&lt;/strong&gt; — I added those two. They'll go out in the next deploy. Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11928 (Recent Comments widget injects unconfigurable CSS (with !important)) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Tue, 22 Feb 2011 16:23:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11928#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11928#comment:7/1298391831071985</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11928#comment:5" title="Comment 5"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We should however probably include this code in twentyten and style it on our own there.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1.
&lt;/p&gt;
&lt;p&gt;
i agree, this should be in the style.css file.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16517 (What about / Whom to ask for full/missing wordpress source-code?) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Tue, 22 Feb 2011 15:27:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16517#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16517#comment:37/1298388454761405</guid>
      <description>&lt;p&gt;
Thanks!
&lt;/p&gt;
&lt;p&gt;
It looks like that covers everything except for a couple of jQuery plugins:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;jquery.schedule.js: This appears to be from &lt;a class="ext-link" href="http://trainofthoughts.org/blog/2007/02/15/jquery-plugin-scheduler/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;here&lt;/a&gt;, but the current form was minified from &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-includes/js/jquery/jquery.schedule.js?rev=6546"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;this&lt;/a&gt; in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6590" title="Eliminate duplication in and minify jquery.schedule.js. fixes #5620"&gt;[6590]&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;All the jQuery UI plugin files:  You can get the full "source" from &lt;a class="ext-link" href="http://jqueryui.com/download"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;jQuery UI&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16517 (What about / Whom to ask for full/missing wordpress source-code?) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Tue, 22 Feb 2011 15:06:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16517#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16517#comment:36/1298387191124657</guid>
      <description>&lt;p&gt;
Ahh, I see. Fair enough. I've added both packages to &lt;a class="ext-link" href="http://wordpress.org/download/source/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/download/source/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16517 (What about / Whom to ask for full/missing wordpress source-code?) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Tue, 22 Feb 2011 14:55:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16517#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16517#comment:35/1298386526757505</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16517#comment:34" title="Comment 34"&gt;Otto42&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As I pointed out in the very first comment, can you point to what "source" you are referring to?
&lt;/p&gt;
&lt;p&gt;
Are not jQuery and TinyMCE both Javascript text files, and as such, their own "source"?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No. As the GPL states, the "source code for a work means the preferred form of the work for making modifications to it,"&lt;sup&gt;1&lt;/sup&gt; and the Free Software Foundation confirms that "Obfuscated “source code” is not real source code and does not count as source code." &lt;sup&gt;2&lt;/sup&gt;
&lt;/p&gt;
&lt;p&gt;
The TinyMCE and jQuery files in WordPress are minified and obscured, so by the definition of the GPL and as understood by the FSF, they are not source.
&lt;/p&gt;
&lt;p&gt;
But we don't have to consider the FSF's opinion (or the text of the GPL): TinyMCE &lt;em&gt;itself&lt;/em&gt; distinguishes between "source code" and "production code" (note how some download options offer "source code," whereas others do not). &lt;sup&gt;3&lt;/sup&gt;  Likewise, the "downloading jQuery" page &lt;sup&gt;4&lt;/sup&gt; distinguishes between the "minified version" and the "source version."
&lt;/p&gt;
&lt;p&gt;
So &lt;em&gt;on their own terms&lt;/em&gt; the TinyMCE and jQuery files do not appear in WordPress as source.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/1" title="New repository initialized by cvs2svn."&gt;[1]&lt;/a&gt; &lt;a class="ext-link" href="http://www.gnu.org/licenses/gpl-2.0.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.gnu.org/licenses/gpl-2.0.html&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/2" title="*** empty log message ***
"&gt;[2]&lt;/a&gt; &lt;a class="ext-link" href="http://www.gnu.org/philosophy/free-sw.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.gnu.org/philosophy/free-sw.html&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/3" title="*** empty log message ***
"&gt;[3]&lt;/a&gt; &lt;a class="ext-link" href="http://tinymce.moxiecode.com/download/download.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://tinymce.moxiecode.com/download/download.php&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/4" title="Some semantic updates
"&gt;[4]&lt;/a&gt; &lt;a class="ext-link" href="http://docs.jquery.com/Downloading_jQuery"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://docs.jquery.com/Downloading_jQuery&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16517 (What about / Whom to ask for full/missing wordpress source-code?) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Tue, 22 Feb 2011 14:34:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16517#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16517#comment:34/1298385250021507</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16517#comment:33" title="Comment 33"&gt;filosofo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Can we get the source for other bundled libraries up there too, such as that for TinyMCE and jQuery?
&lt;/p&gt;
&lt;p&gt;
Let me know if I should open another ticket for that.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As I pointed out in the very first comment, can you point to what "source" you are referring to?
&lt;/p&gt;
&lt;p&gt;
Are not jQuery and TinyMCE both Javascript text files, and as such, their own "source"?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16611 (Too few arguments to sprintf in WP_List_Table::comments_bubble()) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 22 Feb 2011 10:13:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16611#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16611#comment:17/1298369585403825</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17482" title="Avoid printf entirely. props SergeyBiryukov, fixes #16611 for 3.1."&gt;[17482]&lt;/a&gt;) Avoid printf entirely. props SergeyBiryukov, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16611" title="#16611: defect (bug): Too few arguments to sprintf in WP_List_Table::comments_bubble() (closed: fixed)"&gt;#16611&lt;/a&gt; for 3.1.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [17482]: Avoid printf entirely. props SergeyBiryukov, fixes #16611 for 3.1.</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 22 Feb 2011 10:13:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17482</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17482/1298369583399314</guid>
      <description>&lt;p&gt;
Avoid printf entirely. props SergeyBiryukov, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16611" title="#16611: defect (bug): Too few arguments to sprintf in WP_List_Table::comments_bubble() (closed: fixed)"&gt;#16611&lt;/a&gt; for 3.1.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16611 (Too few arguments to sprintf in WP_List_Table::comments_bubble()) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 22 Feb 2011 10:12:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16611#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16611#comment:16/1298369560982793</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17481" title="Avoid printf entirely. props SergeyBiryukov, fixes #16611 for trunk."&gt;[17481]&lt;/a&gt;) Avoid printf entirely. props SergeyBiryukov, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16611" title="#16611: defect (bug): Too few arguments to sprintf in WP_List_Table::comments_bubble() (closed: fixed)"&gt;#16611&lt;/a&gt; for trunk.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [17481]: Avoid printf entirely. props SergeyBiryukov, fixes #16611 for trunk.</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 22 Feb 2011 10:12:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17481</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17481/1298369558932506</guid>
      <description>&lt;p&gt;
Avoid printf entirely. props SergeyBiryukov, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16611" title="#16611: defect (bug): Too few arguments to sprintf in WP_List_Table::comments_bubble() (closed: fixed)"&gt;#16611&lt;/a&gt; for trunk.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16611 (Too few arguments to sprintf in WP_List_Table::comments_bubble()) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 22 Feb 2011 09:41:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16611#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16611#comment:15/1298367714786926</guid>
      <description>&lt;p&gt;
I was going to cycle back around and just string concatenate this, but decided to leave it for 3.2. Didn't see the extra bug in my testing.
&lt;/p&gt;
&lt;p&gt;
Looks good. Commit and ship.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16611 (Too few arguments to sprintf in WP_List_Table::comments_bubble()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 22 Feb 2011 09:27:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16611#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16611#comment:14/1298366869781532</guid>
      <description>&lt;p&gt;
Added patch with string concatenation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16611.3.patch attached to Ticket #16611</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 22 Feb 2011 09:26:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16611/16611.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16611/16611.3.patch/1298366801322352</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16604 (wp_mime_type_icon inline header docs need updating) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 22 Feb 2011 09:14:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16604#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16604#comment:1/1298366087776647</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>16604.patch attached to Ticket #16604</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 22 Feb 2011 09:14:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16604/16604.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16604/16604.patch/1298366068824271</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16611 (Too few arguments to sprintf in WP_List_Table::comments_bubble()) updated</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Tue, 22 Feb 2011 09:10:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16611#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16611#comment:13/1298365858354808</guid>
      <description>&lt;p&gt;
Do we even need the printf? Why not just string concatenation?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16611 (Too few arguments to sprintf in WP_List_Table::comments_bubble()) reopened</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 22 Feb 2011 08:29:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16611#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16611#comment:12/1298363376262029</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/16611/16611.2.diff" title="Attachment '16611.2.diff' in Ticket #16611"&gt;16611.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/16611/16611.2.diff" title="Download"&gt;​&lt;/a&gt; doesn't fix the initial issue. &lt;code&gt;printf()&lt;/code&gt; throws the same error message, as there are still encoded chars in the URL.
&lt;/p&gt;
&lt;p&gt;
Added new patch.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Changeset [17480]: POT, generated from r17478</title>
      
        <dc:creator>potbot</dc:creator>

      <pubDate>Tue, 22 Feb 2011 08:27:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17480</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17480/1298363256821224</guid>
      <description>&lt;p&gt;
POT, generated from &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17478" title="Back compat with the gallery_style filter in Twenty Ten. fixes #16610 ..."&gt;r17478&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [17479]: POT, generated from r17478</title>
      
        <dc:creator>potbot</dc:creator>

      <pubDate>Tue, 22 Feb 2011 08:27:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17479</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17479/1298363250618730</guid>
      <description>&lt;p&gt;
POT, generated from &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17478" title="Back compat with the gallery_style filter in Twenty Ten. fixes #16610 ..."&gt;r17478&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>16611.2.patch attached to Ticket #16611</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 22 Feb 2011 08:27:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16611/16611.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16611/16611.2.patch/1298363227133759</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16610 (Twenty Ten 1.2 compat for WP 3.0) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 22 Feb 2011 08:23:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16610#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16610#comment:6/1298363012547144</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17478" title="Back compat with the gallery_style filter in Twenty Ten. fixes #16610 ..."&gt;[17478]&lt;/a&gt;) Back compat with the gallery_style filter in Twenty Ten. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16610" title="#16610: defect (bug): Twenty Ten 1.2 compat for WP 3.0 (closed: fixed)"&gt;#16610&lt;/a&gt; for trunk.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [17478]: Back compat with the gallery_style filter in Twenty Ten. fixes #16610 ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 22 Feb 2011 08:23:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17478</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17478/1298363010535392</guid>
      <description>&lt;p&gt;
Back compat with the gallery_style filter in Twenty Ten. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16610" title="#16610: defect (bug): Twenty Ten 1.2 compat for WP 3.0 (closed: fixed)"&gt;#16610&lt;/a&gt; for trunk.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16610 (Twenty Ten 1.2 compat for WP 3.0) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 22 Feb 2011 08:23:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16610#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16610#comment:5/1298362993791680</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17477" title="Back compat with the gallery_style filter in Twenty Ten. fixes #16610 ..."&gt;[17477]&lt;/a&gt;) Back compat with the gallery_style filter in Twenty Ten. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16610" title="#16610: defect (bug): Twenty Ten 1.2 compat for WP 3.0 (closed: fixed)"&gt;#16610&lt;/a&gt; for the 3.1 branch.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [17477]: Back compat with the gallery_style filter in Twenty Ten. fixes #16610 ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 22 Feb 2011 08:23:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17477</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17477/1298362991297529</guid>
      <description>&lt;p&gt;
Back compat with the gallery_style filter in Twenty Ten. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16610" title="#16610: defect (bug): Twenty Ten 1.2 compat for WP 3.0 (closed: fixed)"&gt;#16610&lt;/a&gt; for the 3.1 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16610 (Twenty Ten 1.2 compat for WP 3.0) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 22 Feb 2011 04:42:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16610#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16610#comment:4/1298349731936316</guid>
      <description>&lt;p&gt;
Looks good.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16611 (Too few arguments to sprintf in WP_List_Table::comments_bubble()) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 22 Feb 2011 04:25:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16611#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16611#comment:11/1298348713383855</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17476" title="Use get_comments_number() in comments_bubble() method. Removes chance ..."&gt;[17476]&lt;/a&gt;) Use get_comments_number() in comments_bubble() method. Removes chance of sprintf arguments error due to percent encoding in URLs and kills unnecessary translations. Escape translations into attributes. esc_url on admin_url. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16611" title="#16611: defect (bug): Too few arguments to sprintf in WP_List_Table::comments_bubble() (closed: fixed)"&gt;#16611&lt;/a&gt; for the 3.1 branch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [17476]: Use get_comments_number() in comments_bubble() method. Removes chance ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 22 Feb 2011 04:25:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17476</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17476/1298348711369025</guid>
      <description>&lt;p&gt;
Use get_comments_number() in comments_bubble() method. Removes chance of sprintf arguments error due to percent encoding in URLs and kills unnecessary translations. Escape translations into attributes. esc_url on admin_url. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16611" title="#16611: defect (bug): Too few arguments to sprintf in WP_List_Table::comments_bubble() (closed: fixed)"&gt;#16611&lt;/a&gt; for the 3.1 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16611 (Too few arguments to sprintf in WP_List_Table::comments_bubble()) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 22 Feb 2011 04:24:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16611#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16611#comment:10/1298348662909487</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17475" title="Use get_comments_number() in comments_bubble() method. Removes chance ..."&gt;[17475]&lt;/a&gt;) Use get_comments_number() in comments_bubble() method. Removes chance of sprintf arguments error due to percent encoding in URLs and kills unnecessary translations. Escape translations into attributes. esc_url on admin_url. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16611" title="#16611: defect (bug): Too few arguments to sprintf in WP_List_Table::comments_bubble() (closed: fixed)"&gt;#16611&lt;/a&gt; for trunk.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [17475]: Use get_comments_number() in comments_bubble() method. Removes chance ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 22 Feb 2011 04:24:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17475</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17475/1298348660216984</guid>
      <description>&lt;p&gt;
Use get_comments_number() in comments_bubble() method. Removes chance of sprintf arguments error due to percent encoding in URLs and kills unnecessary translations. Escape translations into attributes. esc_url on admin_url. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16611" title="#16611: defect (bug): Too few arguments to sprintf in WP_List_Table::comments_bubble() (closed: fixed)"&gt;#16611&lt;/a&gt; for trunk.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16611 (Too few arguments to sprintf in WP_List_Table::comments_bubble()) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 22 Feb 2011 04:19:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16611#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16611#comment:9/1298348379578335</guid>
      <description>&lt;p&gt;
Looks good, tests good.  Ship it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16611 (Too few arguments to sprintf in WP_List_Table::comments_bubble()) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 22 Feb 2011 04:06:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16611#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16611#comment:8/1298347587829679</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I was wondering why we were using comments_number() like this.
&lt;/p&gt;
&lt;p&gt;
In 3.0, we had code that looked like the red in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15504" title="introduce WP_List_Table::comments_bubble(); revert to ..."&gt;r15504&lt;/a&gt; -- basically, massive strings going into comments_number(). We also didn't wrap the link in admin_url(), thus we had no extra percentages to screw things up. sprintf() plus admin_url(), two pretty innocuous changes, caused the regression.
&lt;/p&gt;
&lt;p&gt;
The smarter structuring in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15504" title="introduce WP_List_Table::comments_bubble(); revert to ..."&gt;r15504&lt;/a&gt; in turn revealed that get_comments_number() is a better approach.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16610 (Twenty Ten 1.2 compat for WP 3.0) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 22 Feb 2011 03:55:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16610#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16610#comment:3/1298346929001584</guid>
      <description>&lt;p&gt;
Second patch handles gallery style and ignores recent comments style.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16610.2.diff attached to Ticket #16610</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 22 Feb 2011 03:54:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16610/16610.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16610/16610.2.diff/1298346894002099</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16611 (Too few arguments to sprintf in WP_List_Table::comments_bubble()) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 22 Feb 2011 02:44:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16611#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16611#comment:7/1298342689728636</guid>
      <description>&lt;p&gt;
New patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16611.2.diff attached to Ticket #16611</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 22 Feb 2011 02:44:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16611/16611.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16611/16611.2.diff/1298342653916893</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16611 (Too few arguments to sprintf in WP_List_Table::comments_bubble()) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 22 Feb 2011 02:41:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16611#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16611#comment:6/1298342487905276</guid>
      <description>&lt;p&gt;
Proper function here is get_comments_number(), wrapped with number_format_i18n(). Anything else is extra we don't need or leverage, due to the arguments we pass comments_number().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16611 (Too few arguments to sprintf in WP_List_Table::comments_bubble()) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 22 Feb 2011 02:39:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16611#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16611#comment:5/1298342368937783</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The URL should also be escaped.
&lt;/p&gt;
&lt;p&gt;
Regardless, patch leaves an issue, due to the nature of comments_number(). If comments &amp;gt; 1, then comments_number() will do an str_replace() on the %. This borks the URL.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16611.diff attached to Ticket #16611</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 22 Feb 2011 02:27:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16611/16611.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16611/16611.diff/1298341649843074</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16611 (Too few arguments to sprintf in WP_List_Table::comments_bubble()) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 22 Feb 2011 02:26:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16611#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16611#comment:4/1298341564654701</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
$pending_phrase also needs to be escaped.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16517 (What about / Whom to ask for full/missing wordpress source-code?) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Tue, 22 Feb 2011 02:11:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16517#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16517#comment:33/1298340679256999</guid>
      <description>&lt;p&gt;
Can we get the source for other bundled libraries up there too, such as that for TinyMCE and jQuery?
&lt;/p&gt;
&lt;p&gt;
Let me know if I should open another ticket for that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10205 (getmyuid() called instead of posix_getuid() in get_filesystem_method() ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 22 Feb 2011 00:11:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10205#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10205#comment:18/1298333465252484</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
This current line says "hey, you have write permissions, but im going to fail you anyways". it doesnt make sense to me. PHP has full write access to a directory yet WP is denying it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thats exactly it. PHP has full write access to the directoryy/files.
&lt;/p&gt;
&lt;p&gt;
Now, Your server might be setup correctly to allow this to work adequately and if that's the case, i encourage you to add &lt;code&gt;define('FS_METHOD', 'direct');&lt;/code&gt; to your wp-config.php file.
&lt;/p&gt;
&lt;p&gt;
However, In a large number of shared hosts, and a large number of servers, the server will not be setup like yours. The files will be writable by apache/php, however files created by apache will not be readable/modifiable by FTP users, or, files created by apache, will be ultimately writable to all users on the server (As every instance of PHP runs as the same user with no security)
&lt;/p&gt;
&lt;p&gt;
It's currently setup to protect users from their shitty hosts. you might not have this problem, a lot of the major us hosts may not have this problem, but a tonne of shared hosts out there DO have this problem. When you've got over 30 million installs around the globe, there's a lot of configurations you have to work around, in this case, selecting the lowest common denominator which is guaranteed to work is current choice.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>