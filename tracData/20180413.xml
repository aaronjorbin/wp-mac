<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #43770 (accept 'menu_order' for 'orderby' get_sites() argument) created</title>
      
        <dc:creator>gnowland</dc:creator>

      <pubDate>Fri, 13 Apr 2018 23:53:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43770</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43770/1523663606447497</guid>
      <description>&lt;p&gt;
Trying to show a list of sites in a multisite network with get_sites(), using 'menu_order' for the 'orderby' argument does not have any effect (sites are instead ordered by id).
&lt;/p&gt;
&lt;p&gt;
Upon further investigation it appears that 'menu_order' is not one of the accepted options for 'orderby' (per codex page for get_sites()).
&lt;/p&gt;
&lt;p&gt;
Plugins like Intuitive Custom Post Order allow re-ordering of sites, and indeed there is a menu_order column in the wp_blogs table with the correct order.
&lt;/p&gt;
&lt;p&gt;
I would like to propose adding 'menu_order' as an accepted option for the 'orderby' argument of get_sites().
&lt;/p&gt;
&lt;p&gt;
Would this be possible?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43374 (PHP 7.2 Warning: count(): Parameter must be an array or an object that ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 13 Apr 2018 23:40:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43374#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43374#comment:6/1523662813470355</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43763 (Auto-fixable CS violations in Core) updated</title>
      
        <dc:creator>tfrommen</dc:creator>

      <pubDate>Fri, 13 Apr 2018 23:06:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43763#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43763#comment:2/1523660809888889</guid>
      <description>&lt;p&gt;
Hi Juliette,
&lt;/p&gt;
&lt;p&gt;
yeah, absolutely. That could have been fixed differently. In this case, I decided to leave it like so (which was basically the result of running phpcbf on that file), because the array before is actually the one being used in the line that I updated (which one doesn't see in the diff). So the two variables are at least somewhat related.
That said, I could also just remove the whitespace, and add a blank line in there, if you like that better. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43764 (CS: Fix violations for admin-header.php) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Fri, 13 Apr 2018 23:01:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43764#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43764#comment:1/1523660508676803</guid>
      <description>&lt;p&gt;
@marcomartins Welcome as a new contributor and thank you for your efforts.
&lt;/p&gt;
&lt;p&gt;
I've reviewed the latest patch (&lt;code&gt;3&lt;/code&gt;).
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Based on your patch I realize there is actually an issue with the ruleset as currently committed to core. The &lt;code&gt;WordPress.Variables.GlobalVariables&lt;/code&gt; sniff is referenced there, but should not be as that sniff should not be part of the core ruleset. Core overwriting Core global variables should always be fine. So this should be fixed in the ruleset, not by using &lt;code&gt;phpcs:ignore&lt;/code&gt; comments.
&lt;/li&gt;&lt;li&gt;The hook names cannot be ignored for "allow for dash in dynamic hook". The handbook is quite clear that dashes are not allowed in hook names: &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/coding-standards/php/#naming-conventions"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/handbook/best-practices/coding-standards/php/#naming-conventions&lt;/a&gt;, including dynamic hook names (see the examples) &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/coding-standards/php/#interpolation-for-naming-dynamic-hooks"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/handbook/best-practices/coding-standards/php/#interpolation-for-naming-dynamic-hooks&lt;/a&gt;
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
So there are two options here:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Either ignore it for the right reasons, i.e. not to break backwards-compatibility.
&lt;/li&gt;&lt;li&gt;Or deprecated the existing hook and introduce a new hook which complies with the naming conventions.
&lt;/li&gt;&lt;/ul&gt;&lt;ol start="3"&gt;&lt;li&gt;The &lt;code&gt;disable&lt;/code&gt; comments can be combined within the hook documentation blocks, like so:
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="sd"&gt;/**
 * Fires when scripts are printed for a specific admin page based on $hook_suffix.
 *
 * @since 2.1.0
 *
 * @phpcs:disable WordPress.NamingConventions.ValidHookName.UseUnderscores -- left as is not to break BC.
 */&lt;/span&gt;
&lt;span class="nx"&gt;do_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;"admin_print_scripts-&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$hook_suffix&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//phpcs:enable
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
which is a "cleaner" solution than having a &lt;code&gt;//&lt;/code&gt; comment above the docblock.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43763 (Auto-fixable CS violations in Core) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Fri, 13 Apr 2018 22:36:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43763#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43763#comment:1/1523659015783661</guid>
      <description>&lt;p&gt;
LGTM.
&lt;/p&gt;
&lt;p&gt;
Just FYI: The first one (in &lt;code&gt;src/wp-includes/widgets/class-wp-widget-media.php&lt;/code&gt;) can also be fixed by adding a new line before that line instead of making the assignment operators line up. For large arrays with assignment lines after them, that is sometimes a "cleaner" solution.
Up to you what makes the most sense in this situation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43757 (`WP_REST_Attachments_Controller` includes entire admin includes for a ...) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Fri, 13 Apr 2018 22:14:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43757#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43757#comment:3/1523657657021647</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43442 (Add tools for anonymizing of commenters) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Fri, 13 Apr 2018 22:08:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43442#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43442#comment:14/1523657318651300</guid>
      <description>&lt;p&gt;
Updated patch to work with new ajax on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43637" title="#43637: enhancement: Add filters and ajax support for personal data erasure (closed: fixed)"&gt;#43637&lt;/a&gt; -- response now includes how many comments were anonymized for the given page.
&lt;/p&gt;
&lt;p&gt;
In addition to requiring &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43637" title="#43637: enhancement: Add filters and ajax support for personal data erasure (closed: fixed)"&gt;#43637&lt;/a&gt; to test, this patch also requires &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43602" title="#43602: enhancement: Add to the privacy tools UX a means to erase personal data by username ... (closed: fixed)"&gt;#43602&lt;/a&gt; (coming soon) to test.
&lt;/p&gt;
&lt;p&gt;
cc @azaozz @mikejolley
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43442.2.diff attached to Ticket #43442</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Fri, 13 Apr 2018 22:04:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43442/43442.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43442/43442.2.diff/1523657079914932</guid>
      <description>&lt;p&gt;
Updated to match new impl in 43637 (returns number of comments updated per page, etc)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43637 (Add filters and ajax support for personal data erasure) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 13 Apr 2018 21:28:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43637#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43637#comment:5/1523654905760085</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #gdpr-compliance by allendav. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/gdpr-compliance/p1523654905000048"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43637 (Add filters and ajax support for personal data erasure) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Fri, 13 Apr 2018 21:26:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43637#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43637#comment:4/1523654787937562</guid>
      <description>&lt;p&gt;
Updated patch. Erasure ajax response now includes how many items were removed, how many were retained, and any messages personal data erasers wants to display to the administrator (e.g. "Personal data for this user was found in order 1324 but was not removed because the order has not yet shipped." )
&lt;/p&gt;
&lt;p&gt;
Requires additional patches to test. Please standby for updated patches for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43442" title="#43442: enhancement: Add tools for anonymizing of commenters (closed: fixed)"&gt;#43442&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43602" title="#43602: enhancement: Add to the privacy tools UX a means to erase personal data by username ... (closed: fixed)"&gt;#43602&lt;/a&gt; for testing.
&lt;/p&gt;
&lt;p&gt;
cc @azaozz @mikejolley
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43637.2.diff attached to Ticket #43637</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Fri, 13 Apr 2018 21:23:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43637/43637.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43637/43637.2.diff/1523654604211333</guid>
      <description>&lt;p&gt;
Updated to return the number of items removed, retained and any messages from the erasers
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43746 (Custom post type single post feed returns a 404 if has_archive is set ...) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Fri, 13 Apr 2018 19:59:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43746#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43746#comment:1/1523649569084355</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hey, thanks for your report.
&lt;/p&gt;
&lt;p&gt;
This appears to be by design. Types that have no archive will not create feed endpoints as you would expect.
&lt;/p&gt;
&lt;p&gt;
Singe &lt;code&gt;post&lt;/code&gt; and &lt;code&gt;page&lt;/code&gt; feeds are comment feeds and are created separately inside &lt;code&gt;WP_Rewrite::rewrite_rules&lt;/code&gt;, specifically in &lt;code&gt;WP_Rewrite::generate_rewrite_rules&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
By extension, you are able to create your own custom feed rules on single types by using &lt;code&gt;WP_Rewrite::generate_rewrite_rules&lt;/code&gt; and hooking into the &lt;code&gt;rewrite_rules_array&lt;/code&gt; filter.
&lt;/p&gt;
&lt;p&gt;
A quick fix would be to do:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action( 'rewrite_rules_array', function( $rules ) {
	global $wp_rewrite;
	$wp_rewrite-&amp;gt;add_rewrite_tag( '%my-custom-post-type%', 'my-custom-post-type/([^/]+)', 'example=' );
	$custom_rules = $wp_rewrite-&amp;gt;generate_rewrite_rules( '%my-custom-post-type%', EP_NONE, true, true, false, false );
	return $custom_rules + $rules;
} );
&lt;/pre&gt;&lt;p&gt;
This will generate the needed feed. I am working on a leaner patch.
&lt;/p&gt;
&lt;p&gt;
P.S.: The Rewrite API is insane to work with.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #43195,​43769 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 13 Apr 2018 19:52:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=43195%2C43769</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=43195%2C43769/1523649143893905</guid>
      <description>duplicate: &lt;p&gt;
Hi @sidivan, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
Thanks for the report, we're already tracking this issue in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43195" title="#43195: enhancement: dashicons fail w3c css validation (closed: fixed)"&gt;#43195&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #43769 (Error) created</title>
      
        <dc:creator>sidivan</dc:creator>

      <pubDate>Fri, 13 Apr 2018 18:49:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43769</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43769/1523645392900250</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;
CSS:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
.dashicons, .dashicons-before:before
transition: 0 is not a transition value.
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
.1s ease-in 0;-
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 13 Apr 2018 18:42:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:53</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:53/1523644932424950</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #meta by danieltj. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/meta/p1523644931000630"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43757 (`WP_REST_Attachments_Controller` includes entire admin includes for a ...) updated</title>
      
        <dc:creator>lonelyvegan</dc:creator>

      <pubDate>Fri, 13 Apr 2018 18:08:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43757#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43757#comment:2/1523642899438364</guid>
      <description>&lt;p&gt;
That's exactly the patch I was going to suggest but was having internet troubles and did get around to submitting it. Looks good to me, but I'm probably much to green to be reviewing patches to core. 😅 👍🏻
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43767 (Auto Delete Users after a period of time) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Fri, 13 Apr 2018 18:01:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43767#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43767#comment:2/1523642502443232</guid>
      <description>&lt;p&gt;
Relevant: GDPR Article 5, Paragaph 1(e) &lt;a class="ext-link" href="https://gdpr-info.eu/art-5-gdpr/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gdpr-info.eu/art-5-gdpr/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Noteworthy: The wp_users table includes the registration datetime for the user but not the last time they logged in / had their credentials used to authenticate a request.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://codex.wordpress.org/Database_Description#Table:_wp_users"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Database_Description#Table:_wp_users&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
There are probably a few factors to be considered before auto-deleting an idle account, e.g. whether or not if the user has provided content (e.g. posts, attachments, comments).
&lt;/p&gt;
&lt;p&gt;
If we do this, the solution should probably allow a plugin to block auto-deleting (e.g. if the user account needs to be retained for legal or contractual purposes.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43753 (Media Grid does not respect taxonomy URL parameters) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Fri, 13 Apr 2018 18:01:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43753#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43753#comment:2/1523642493267300</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Interesting.
&lt;/p&gt;
&lt;p&gt;
I could not reproduce on my setup. The URL is also different being &lt;code&gt;/wp-admin/upload.php?media_cats=one&amp;amp;post_type=attachment&amp;amp;mode=list&lt;/code&gt;. What am I missing?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 13 Apr 2018 17:55:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:52</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:52/1523642126841800</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42978" title="Privacy: improve the screen for setting a privacy policy page.
Props ..."&gt;42978&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Privacy: improve the screen for setting a privacy policy page.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props melchoyce, xkon, azaozz.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43435" title="#43435: enhancement: Add settings screen for creating a privacy policy (closed: fixed)"&gt;#43435&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42978]: Privacy: improve the screen for setting a privacy policy page.  Props ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 13 Apr 2018 17:55:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42978</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42978/1523642125764218</guid>
      <description>&lt;p&gt;
Privacy: improve the screen for setting a privacy policy page.
&lt;/p&gt;
&lt;p&gt;
Props melchoyce, xkon, azaozz.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43435" title="#43435: enhancement: Add settings screen for creating a privacy policy (closed: fixed)"&gt;#43435&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43768 (Dashboard-&gt;Activity, Recent Comment Actions Missing) updated</title>
      
        <dc:creator>hnwp</dc:creator>

      <pubDate>Fri, 13 Apr 2018 17:54:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43768#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43768#comment:1/1523642074793077</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43768 (Dashboard-&gt;Activity, Recent Comment Actions Missing) created</title>
      
        <dc:creator>hnwp</dc:creator>

      <pubDate>Fri, 13 Apr 2018 17:54:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43768</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43768/1523642043538823</guid>
      <description>&lt;p&gt;
In the WP Dashboard, toggling Activity in the Screen options, the recent comments usually have "approve", "spam", "delete", etc, but these are hidden visually.
&lt;/p&gt;
&lt;p&gt;
The p.row-actions is affected by list-tables.css, and pushes it left -9999px.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43754 (Problem with is_page() function when gets "NULL" parameter) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Fri, 13 Apr 2018 17:52:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43754#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43754#comment:1/1523641921316812</guid>
      <description>&lt;p&gt;
Hey, welcome to Trac!
&lt;/p&gt;
&lt;p&gt;
This is expected and tested behavior.
&lt;/p&gt;
&lt;p&gt;
What's your use case?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43757 (`WP_REST_Attachments_Controller` includes entire admin includes for a ...) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Fri, 13 Apr 2018 17:47:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43757#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43757#comment:1/1523641658020985</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hey, welcome to Trac! :)
&lt;/p&gt;
&lt;p&gt;
You appear to be very correct in this regard. Attached diff for leaner includes. Tests pass fine.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43757.diff attached to Ticket #43757</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Fri, 13 Apr 2018 17:46:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43757/43757.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43757/43757.diff/1523641618031046</guid>
      <description>&lt;p&gt;
leaner includes
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43760 (Create a revision when autosaving if the content has changed significantly) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Fri, 13 Apr 2018 17:34:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43760#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43760#comment:2/1523640846408238</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Interesting.
&lt;/p&gt;
&lt;p&gt;
43760.1.diff is my version for a diff-based implementation instead. Just as an idea with some tests that can also be repurposed for your patch.
&lt;/p&gt;
&lt;p&gt;
Also, a suggestion on the &lt;code&gt;wp_create_revision_for_autosave&lt;/code&gt; filter: I think should send in the &lt;code&gt;$post_data&lt;/code&gt; and &lt;code&gt;$autosave_data&lt;/code&gt;, the count probably useless as users would be using their own heuristics.
&lt;/p&gt;
&lt;p&gt;
Thoughts?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43760.1.diff attached to Ticket #43760</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Fri, 13 Apr 2018 17:31:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43760/43760.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43760/43760.1.diff/1523640684947812</guid>
      <description>&lt;p&gt;
diff-based implementation
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43767 (Auto Delete Users after a period of time) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 13 Apr 2018 17:29:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43767#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43767#comment:1/1523640591196603</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #gdpr-compliance by david-279. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/gdpr-compliance/p1523640590000383"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43767 (Auto Delete Users after a period of time) created</title>
      
        <dc:creator>David 279</dc:creator>

      <pubDate>Fri, 13 Apr 2018 17:29:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43767</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43767/1523640557311386</guid>
      <description>&lt;p&gt;
Principle 5 of the GDPR requires you to retain personal data no longer than is necessary for the purpose you obtained it for, ideally this means that after a period of time (determined by the admin) Users Data should be automatically deleted or annonymised there is currently no way to show the Admin when a user last visited the site so no way for them to know when to "Forget" Users let alone an automated way to do this.
&lt;/p&gt;
&lt;p&gt;
What is required is
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Some method of recording when a user last logged into the site
&lt;/li&gt;&lt;li&gt;An automated way of "Forgetting" users after a period set by the site admin
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
A further option for sites where sales occur would possibly be to add an accounting delay so that accounting records could be kept. for the period required by different countries laws, after the last purchase by a particular user, but that might need to be added to relevant plugins such as woocommerce
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43765 (CS Violations: wp-includes/version.php) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 13 Apr 2018 17:18:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43765#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43765#comment:3/1523639915546165</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #25280,​43766 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 13 Apr 2018 17:05:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=25280%2C43766</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=25280%2C43766/1523639145035422</guid>
      <description>duplicate: &lt;p&gt;
Thanks for the report, this issue is already being tracked in &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/25280" title="#25280: enhancement: wp_localize_script unexpectedly converts numbers to strings (assigned)"&gt;#25280&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>43546.3.diff attached to Ticket #43546</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Fri, 13 Apr 2018 16:53:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43546/43546.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43546/43546.3.diff/1523638417717162</guid>
      <description>&lt;p&gt;
Fix notices caused by incorrect construction of the report groups array
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43715 (Add Privacy Policy link to bundled theme footers) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Fri, 13 Apr 2018 16:53:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43715#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43715#comment:9/1523638397010739</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
This idea comes down to simply updating all bundled themes footers with something like &lt;code&gt;Proudly powered by WordPress. - Privacy Policy&lt;/code&gt;. Or an iteration of that.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I like that a lot better, since it's not intrusive to the user, and fits in elegantly with the existing design and markup.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43766 (Update WP_Script::localize to be JSON standard compliant) updated</title>
      
        <dc:creator>jason_the_adams</dc:creator>

      <pubDate>Fri, 13 Apr 2018 16:42:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43766#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43766#comment:1/1523637742213616</guid>
      <description>&lt;p&gt;
In the absence of a patch, I should have included that this is the culprit line of code: &lt;a href="https://core.trac.wordpress.org/browser/tags/4.9/src/wp-includes/class.wp-scripts.php#L426"&gt;https://core.trac.wordpress.org/browser/tags/4.9/src/wp-includes/class.wp-scripts.php#L426&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43766 (Update WP_Script::localize to be JSON standard compliant) created</title>
      
        <dc:creator>jason_the_adams</dc:creator>

      <pubDate>Fri, 13 Apr 2018 16:36:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43766</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43766/1523637409518348</guid>
      <description>&lt;p&gt;
Presently, when using wp_localize_script all of the scalar values are cast as a string. This means that integers and booleans aren't what they should be. In fact, boolean values are "1" and "0". This means the JSON this function produces does not mean the JSON schema standard: &lt;a class="ext-link" href="https://spacetelescope.github.io/understanding-json-schema/reference/boolean.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://spacetelescope.github.io/understanding-json-schema/reference/boolean.html&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Another fun issue here is that the type casting isn't recursive, meaning arrays/objects containing scalar values are valid JSON. This means there's an inconsistency in the way values are produced. Consider the following:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;wp_localize_script&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'test'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'testData'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
     &lt;span class="s1"&gt;'bool'&lt;/span&gt;  &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="s1"&gt;'num'&lt;/span&gt;   &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="s1"&gt;'array'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s1"&gt;'bool'&lt;/span&gt;  &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'num'&lt;/span&gt;   &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;
     &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="c1"&gt;// Yields the following JSON
&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"bool"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;"num"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;"array"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;"bool"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"num"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
I understand that this was originally intended for localization, but this is hugely used by plugins and themes as a way of passing server data to the browser as JSON. It really should meet the JSON schema and work consistently.
&lt;/p&gt;
&lt;p&gt;
I'll put a patch together shortly, but simply this should check for &lt;code&gt;is_bool()&lt;/code&gt; and &lt;code&gt;is_numeric&lt;/code&gt; prior to casting as a string and handling entities. And maybe it should be recursive so nested strings are also decoded?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 13 Apr 2018 16:20:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:51/1523636423997044</guid>
      <description>&lt;p&gt;
Re: &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43435#comment:49" title="Comment 49"&gt;comment 49&lt;/a&gt; and &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43435#comment:50" title="Comment 50"&gt;comment 50&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Fixed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42977" title="Privacy: fix error message and list table sorting errors on the Export ..."&gt;[42977]&lt;/a&gt;, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43481" title="#43481: enhancement: Add tabs and placeholders to privacy tools page in wp-admin (closed: fixed)"&gt;#43481&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39210 (switch_to_locale() unloads all plugin and theme translations) updated</title>
      
        <dc:creator>pcfreak30</dc:creator>

      <pubDate>Fri, 13 Apr 2018 16:17:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39210#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39210#comment:14/1523636264724533</guid>
      <description>&lt;p&gt;
So I spent a good few hours debugging this to find this bug! The bottom line is you can unload translations, but you cant add them back unless they are the core ones. the
&lt;code&gt;_load_textdomain_just_in_time&lt;/code&gt; function needs &lt;code&gt;|| isset( $l10n_unloaded[ $domain ] )&lt;/code&gt;
removed. I was doing this as part of a multisite plugin activation routine with rewrite rules since the language switcher would NOT switch languages properly.
&lt;/p&gt;
&lt;p&gt;
Here is a gist of some of the code in my (public) plugin that I had to use to get my use case fully working: &lt;a class="ext-link" href="https://gist.github.com/pcfreak30/12a0023518863ad75c2c05c76e8f53da"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gist.github.com/pcfreak30/12a0023518863ad75c2c05c76e8f53da&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I think there is a design flaw in this that needs to be looked at again.
&lt;/p&gt;
&lt;p&gt;
Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43481 (Add tabs and placeholders to privacy tools page in wp-admin) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 13 Apr 2018 16:17:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43481#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43481#comment:41/1523636223520917</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43481#comment:39" title="Comment 39"&gt;pento&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Thanks for fixing this, completely forgot about it...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43481 (Add tabs and placeholders to privacy tools page in wp-admin) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 13 Apr 2018 16:14:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43481#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43481#comment:40/1523636095216633</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42977" title="Privacy: fix error message and list table sorting errors on the Export ..."&gt;42977&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Privacy: fix error message and list table sorting errors on the Export Personal Data and Remove Personal Data screens.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43481" title="#43481: enhancement: Add tabs and placeholders to privacy tools page in wp-admin (closed: fixed)"&gt;#43481&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42977]: Privacy: fix error message and list table sorting errors on the Export ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 13 Apr 2018 16:14:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42977</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42977/1523636094214473</guid>
      <description>&lt;p&gt;
Privacy: fix error message and list table sorting errors on the Export Personal Data and Remove Personal Data screens.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43481" title="#43481: enhancement: Add tabs and placeholders to privacy tools page in wp-admin (closed: fixed)"&gt;#43481&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43765 (CS Violations: wp-includes/version.php) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 13 Apr 2018 15:46:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43765#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43765#comment:2/1523634384864778</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43765.2.patch attached to Ticket #43765</title>
      
        <dc:creator>sephsekla</dc:creator>

      <pubDate>Fri, 13 Apr 2018 15:43:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43765/43765.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43765/43765.2.patch/1523634217570866</guid>
      <description>&lt;p&gt;
Updated patch as per @ocean90's comment
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43667 (signup_nonce_check does not use wp_verify_nonce.) closed</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 13 Apr 2018 15:29:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43667#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43667#comment:9/1523633393298799</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42976" title="Multisite: Verify the signup nonce using `wp_verify_nonce()` in ..."&gt;42976&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Multisite: Verify the signup nonce using &lt;code&gt;wp_verify_nonce()&lt;/code&gt; in &lt;code&gt;signup_nonce_check()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Prior to this change, the nonce passed from &lt;code&gt;wp-signup.php&lt;/code&gt; was verified with a simple comparison. Furthermore in case of failures, &lt;code&gt;wp_die()&lt;/code&gt; would be called right during the HTML markup being already printed. Now the error message is returned properly, modifying the &lt;code&gt;WP_Error&lt;/code&gt; object in the passed &lt;code&gt;$result&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props herregroen.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43667" title="#43667: defect (bug): signup_nonce_check does not use wp_verify_nonce. (closed: fixed)"&gt;#43667&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42976]: Multisite: Verify the signup nonce using `wp_verify_nonce()` in ...</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 13 Apr 2018 15:29:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42976</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42976/1523633392232778</guid>
      <description>&lt;p&gt;
Multisite: Verify the signup nonce using &lt;code&gt;wp_verify_nonce()&lt;/code&gt; in &lt;code&gt;signup_nonce_check()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Prior to this change, the nonce passed from &lt;code&gt;wp-signup.php&lt;/code&gt; was verified with a simple comparison. Furthermore in case of failures, &lt;code&gt;wp_die()&lt;/code&gt; would be called right during the HTML markup being already printed. Now the error message is returned properly, modifying the &lt;code&gt;WP_Error&lt;/code&gt; object in the passed &lt;code&gt;$result&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props herregroen.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43667" title="#43667: defect (bug): signup_nonce_check does not use wp_verify_nonce. (closed: fixed)"&gt;#43667&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #40137 (Twenty Seventeen: Unordered list inner the ordened continue counting ...) updated</title>
      
        <dc:creator>toddhalfpenny</dc:creator>

      <pubDate>Fri, 13 Apr 2018 15:29:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40137#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40137#comment:2/1523633371222905</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43667 (signup_nonce_check does not use wp_verify_nonce.) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 13 Apr 2018 15:24:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43667#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43667#comment:8/1523633080759124</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43667/43667.diff" title="Attachment '43667.diff' in Ticket #43667"&gt;43667.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43667/43667.diff" title="Download"&gt;​&lt;/a&gt; includes 4 unit tests calling &lt;code&gt;wpmu_validate_blog_signup()&lt;/code&gt; and &lt;code&gt;wpmu_validate_user_signup()&lt;/code&gt;, verifying that the hooked-in function works properly. I also made a minor change, making the error code more verbose with 'invalid_nonce' instead of 'nonce'.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43667.diff attached to Ticket #43667</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 13 Apr 2018 15:23:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43667/43667.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43667/43667.diff/1523632993133718</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43765 (CS Violations: wp-includes/version.php) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 13 Apr 2018 15:15:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43765#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43765#comment:1/1523632554134456</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hello @sephsekla, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
Thanks for your patch. The &lt;code&gt;@package&lt;/code&gt; tag should be part of a file header and not the doc of global variable. Would you like to add a new patch that adds a file header to the file?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43762 (CS Violations: wp-includes/customize/class-wp-customize-color-control.php) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 13 Apr 2018 15:09:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43762#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43762#comment:2/1523632171126068</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42975" title="Customize: Remove a stray whitespace.
Props tfrommen.
Fixes #43762.
"&gt;42975&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Customize: Remove a stray whitespace.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props tfrommen.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43762" title="#43762: defect (bug): CS Violations: wp-includes/customize/class-wp-customize-color-control.php (closed: fixed)"&gt;#43762&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42975]: Customize: Remove a stray whitespace.  Props tfrommen. Fixes #43762. </title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 13 Apr 2018 15:09:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42975</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42975/1523632170056397</guid>
      <description>&lt;p&gt;
Customize: Remove a stray whitespace.
&lt;/p&gt;
&lt;p&gt;
Props tfrommen.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43762" title="#43762: defect (bug): CS Violations: wp-includes/customize/class-wp-customize-color-control.php (closed: fixed)"&gt;#43762&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43762 (CS Violations: wp-includes/customize/class-wp-customize-color-control.php) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 13 Apr 2018 15:09:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43762#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43762#comment:1/1523632154688977</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>casiepa</dc:creator>

      <pubDate>Fri, 13 Apr 2018 15:09:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:50/1523632153074973</guid>
      <description>&lt;p&gt;
Also:
&lt;/p&gt;
&lt;p&gt;
Entering a wrong email address in the 'Remove Personal Data' is showing an error about 'unable to add export request...'
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43765.patch attached to Ticket #43765</title>
      
        <dc:creator>sephsekla</dc:creator>

      <pubDate>Fri, 13 Apr 2018 15:09:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43765/43765.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43765/43765.patch/1523632150822679</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43765 (CS Violations: wp-includes/version.php) created</title>
      
        <dc:creator>sephsekla</dc:creator>

      <pubDate>Fri, 13 Apr 2018 15:08:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43765</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43765/1523632121519028</guid>
      <description></description>
      <category>newticket</category>
    </item><item>
      <title>43764.3.patch attached to Ticket #43764</title>
      
        <dc:creator>marcomartins</dc:creator>

      <pubDate>Fri, 13 Apr 2018 15:06:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43764/43764.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43764/43764.3.patch/1523631996503232</guid>
      <description>&lt;p&gt;
Fixes WordPress.WhiteSpace.PrecisionAlignment.Found and a faulty phpcs:ignore
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>casiepa</dc:creator>

      <pubDate>Fri, 13 Apr 2018 15:05:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:49/1523631917015638</guid>
      <description>&lt;p&gt;
Error on WordPress 5.0-alpha-42971
&lt;/p&gt;
&lt;p&gt;
Tools &amp;gt; Export Personal Data, enter email, confirm it from my email, it goes into 'Confirmed' =&amp;gt; all fine
&lt;/p&gt;
&lt;p&gt;
But if I want to filter on all the 'Confirmed' ones (by clicking the word 'Confirmed'), I get an error. The URL is incorrect
&lt;/p&gt;
&lt;p&gt;
It should be:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://wptrunk.server.eu/wp-admin/tools.php?page=export_personal_data&amp;amp;filter-status=request-confirmed"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wptrunk.server.eu/wp-admin/tools.php?page=export_personal_data&amp;amp;filter-status=request-confirmed&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
but it tries to go to:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://wptrunk.server.eu/wp-admin/tools.php?page=user_export_request&amp;amp;filter-status=request-confirmed"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wptrunk.server.eu/wp-admin/tools.php?page=user_export_request&amp;amp;filter-status=request-confirmed&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43743 (Terms list table should be full width when user cannot edit terms) updated</title>
      
        <dc:creator>mathieuhays</dc:creator>

      <pubDate>Fri, 13 Apr 2018 14:43:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43743#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43743#comment:4/1523630585494144</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've implemented a patch adding a variable &lt;code&gt;$has_2_columns_layout&lt;/code&gt; governing whether or not to add the &lt;code&gt;col_left&lt;/code&gt; &lt;code&gt;col_right&lt;/code&gt; markup.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43764.2.patch attached to Ticket #43764</title>
      
        <dc:creator>marcomartins</dc:creator>

      <pubDate>Fri, 13 Apr 2018 14:39:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43764/43764.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43764/43764.2.patch/1523630385498982</guid>
      <description>&lt;p&gt;
Inline phpcs:ignore moved to its own line or replaced with phpcs:disable.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>43743.diff attached to Ticket #43743</title>
      
        <dc:creator>mathieuhays</dc:creator>

      <pubDate>Fri, 13 Apr 2018 14:34:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43743/43743.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43743/43743.diff/1523630061286290</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43760 (Create a revision when autosaving if the content has changed significantly) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 13 Apr 2018 14:23:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43760#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43760#comment:1/1523629419397533</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43760.patch attached to Ticket #43760</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 13 Apr 2018 14:23:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43760/43760.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43760/43760.patch/1523629397590055</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36374 (Audio playback fails on iOS 9.x) updated</title>
      
        <dc:creator>pauljacobson</dc:creator>

      <pubDate>Fri, 13 Apr 2018 14:12:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36374#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36374#comment:23/1523628777788977</guid>
      <description>&lt;p&gt;
A related issue arose recently that I initially reported on GitHub here: &lt;a class="ext-link" href="https://github.com/wordpress-mobile/WordPress-iOS/issues/9001"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/wordpress-mobile/WordPress-iOS/issues/9001&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id="Expectedbehavior"&gt;Expected behavior&lt;/h2&gt;
&lt;p&gt;
Embedded audio should play back correctly, without skipping, and restarting.
&lt;/p&gt;
&lt;h2 id="Actualbehavior"&gt;Actual behavior&lt;/h2&gt;
&lt;p&gt;
&lt;code&gt;mp3&lt;/code&gt; audio files embedded using the &lt;code&gt;[audio]&lt;/code&gt; shortcode are playing intermittently on iOS devices running iOS version 11.2.6 (and older). The audio player is loaded in mobile Safari on these devices. See &lt;code&gt;1043002-zen&lt;/code&gt; for more context.
&lt;/p&gt;
&lt;p&gt;
User also reports that this issue occurs on new iOS devices running the current version of iOS.
&lt;/p&gt;
&lt;h2 id="Stepstoreproducethebehavior"&gt;Steps to reproduce the behavior&lt;/h2&gt;
&lt;p&gt;
Tested various audio clips on the same page. Audio clips are uploaded to the Media Library and embedded using the [audio] shortcode. Embeds are formatted like this:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;[audio src="https://username.files.wordpress.com/2015/10/filename.mp3"][/audio]&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
The site is set to Private. Site privacy doesn't appear to have affected playback.
&lt;/p&gt;
&lt;p&gt;
Tested on iPad, iOS 11.2.6
&lt;/p&gt;
&lt;p&gt;
The site is running on WordPress.com, using the Dara theme.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43764.patch attached to Ticket #43764</title>
      
        <dc:creator>marcomartins</dc:creator>

      <pubDate>Fri, 13 Apr 2018 14:12:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43764/43764.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43764/43764.patch/1523628737582301</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #20491 (Introduce some JavaScript i18n functions) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 13 Apr 2018 14:08:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20491#comment:89</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20491#comment:89/1523628483569312</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-js by nerrad. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-js/p1523628482000759"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43465 (Remove an extra space in the admin body class.) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 13 Apr 2018 14:02:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43465#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43465#comment:8/1523628131206281</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42974" title="Administration: Avoid an extra space in the admin body class.
Props ..."&gt;42974&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Administration: Avoid an extra space in the admin body class.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props jainnidhi, rhetorical, birgire, mathieuhays.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43465" title="#43465: defect (bug): Remove an extra space in the admin body class. (closed: fixed)"&gt;#43465&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #38741 (Introduce the concept of a large site in order to speed up the Users ...) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 13 Apr 2018 14:02:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38741#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38741#comment:30/1523628130160314</guid>
      <description>&lt;p&gt;
@johnbillion I like the idea of tying in more with the existing multisite functionality, and I actually prefer the initial name &lt;code&gt;wp_is_large_site()&lt;/code&gt; as it would align well with the existing &lt;code&gt;wp_is_large_network()&lt;/code&gt;. It could have a parameter defaulting to &lt;code&gt;users&lt;/code&gt;, which determines what criteria to use to determine whether the site is considered large. This would make it future-proof for other similar ideas (maybe &lt;code&gt;wp_is_large_site( 'posts' )&lt;/code&gt; could come in handy at some point too.
I don't like the &lt;code&gt;wp_is_large_user_count()&lt;/code&gt; as it's unclear how that works (it counts &lt;em&gt;all&lt;/em&gt; users, in multisite that's the entire setup). I also don't think we should need a separate additional filter to &lt;code&gt;wp_is_large_network()&lt;/code&gt; just for that purpose. The new function should be there for a site. It should be available for a single site, but just as useful when having multisite enabled.
&lt;/p&gt;
&lt;p&gt;
I propose the following:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Introduce &lt;code&gt;wp_is_large_site( $using = 'users', $site_id = null )&lt;/code&gt;. The second parameter defaults to the current site, but allows to do the check for another site in multisite.
&lt;/li&gt;&lt;li&gt;The option where the number is stored should be called &lt;code&gt;user_count&lt;/code&gt;. I don't see why the 'active' is needed here at all.
&lt;/li&gt;&lt;li&gt;The SQL query to count the users can remain as is for single site (single all users = site users here), but in multisite it should have a meta table join and do &lt;code&gt;WHERE umeta.meta_key = 'wp_X_capabilities'&lt;/code&gt; (depending on the site checked).
&lt;/li&gt;&lt;li&gt;&lt;code&gt;wp_update_active_user_count()&lt;/code&gt; should be &lt;code&gt;wp_update_site_user_counts( $site_id = null )&lt;/code&gt; instead, to align with &lt;code&gt;wp_update_network_user_counts( $network_id = null )&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;I really like the idea of leveraging &lt;code&gt;get_user_count()&lt;/code&gt; for sites as well, however I'm not sure how to sanely do so as it already has a &lt;code&gt;$network_id&lt;/code&gt; as first parameter. We could create &lt;code&gt;get_site_user_count()&lt;/code&gt; but that'd be kind of incoherent (unless we'd also have &lt;code&gt;get_network_user_count()&lt;/code&gt; - but maybe we could consider refactoring this).
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42974]: Administration: Avoid an extra space in the admin body class.  Props ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 13 Apr 2018 14:02:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42974</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42974/1523628130139991</guid>
      <description>&lt;p&gt;
Administration: Avoid an extra space in the admin body class.
&lt;/p&gt;
&lt;p&gt;
Props jainnidhi, rhetorical, birgire, mathieuhays.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43465" title="#43465: defect (bug): Remove an extra space in the admin body class. (closed: fixed)"&gt;#43465&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43764 (CS: Fix violations for admin-header.php) created</title>
      
        <dc:creator>marcomartins</dc:creator>

      <pubDate>Fri, 13 Apr 2018 14:01:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43764</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43764/1523628100523236</guid>
      <description>&lt;p&gt;
Fixes the coding standard violations for wp-admin/admin-header.php
&lt;/p&gt;
&lt;p&gt;
Ignores the following sniffs:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Generic.PHP.NoSilencedErrors.Discouraged
&lt;/li&gt;&lt;li&gt;WordPress.NamingConventions.ValidHookName.UseUnderscores
&lt;/li&gt;&lt;li&gt;WordPress.Variables.GlobalVariables.OverrideProhibited
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43465 (Remove an extra space in the admin body class.) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 13 Apr 2018 14:00:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43465#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43465#comment:7/1523628027558171</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43763.patch attached to Ticket #43763</title>
      
        <dc:creator>tfrommen</dc:creator>

      <pubDate>Fri, 13 Apr 2018 13:57:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43763/43763.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43763/43763.patch/1523627837618355</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43763 (Auto-fixable CS violations in Core) created</title>
      
        <dc:creator>tfrommen</dc:creator>

      <pubDate>Fri, 13 Apr 2018 13:56:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43763</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43763/1523627789045749</guid>
      <description>&lt;p&gt;
There are Core files with unopinionated CS violations that should be fixed.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>43465.4.diff attached to Ticket #43465</title>
      
        <dc:creator>jainnidhi</dc:creator>

      <pubDate>Fri, 13 Apr 2018 13:54:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43465/43465.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43465/43465.4.diff/1523627680446765</guid>
      <description>&lt;p&gt;
I've already added the patch 43465.diff for this fix but I've used the coding standards in this patch.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 13 Apr 2018 13:49:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:76</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:76/1523627354299500</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43316#comment:75" title="Comment 75"&gt;adamsilverstein&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
To those on this thread advocating alternate approaches, can you agree to moving ahead with a separate Autosaves controller (latest in 43316.12.diff​) and if not, what blocking concerns remain?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed, lets move on with 12.diff :)
&lt;/p&gt;
&lt;p&gt;
In 43316.14.diff:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;As discussed with @rmccue, move the "create revision when autosaving and content is significantly different" to a new ticket, &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43760" title="#43760: enhancement: Create a revision when autosaving if the content has changed significantly (new)"&gt;#43760&lt;/a&gt;.
&lt;/li&gt;&lt;li&gt;Remove the &lt;code&gt;delete&lt;/code&gt; endpoint. We shouldn't be deleting revisions, see the previous comments and &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/43709" title="#43709: defect (bug): Fix or remove the &amp;#34;delete revision&amp;#34; endpoint (assigned)"&gt;#43709&lt;/a&gt;.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43761 (CS: Fix violations for wp-admin/install-helper.php) updated</title>
      
        <dc:creator>jipmoors</dc:creator>

      <pubDate>Fri, 13 Apr 2018 13:45:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43761#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43761#comment:1/1523627131265478</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43761-fix-coding-standards.patch attached to Ticket #43761</title>
      
        <dc:creator>jipmoors</dc:creator>

      <pubDate>Fri, 13 Apr 2018 13:45:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43761/43761-fix-coding-standards.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43761/43761-fix-coding-standards.patch/1523627120786616</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>43762.patch attached to Ticket #43762</title>
      
        <dc:creator>tfrommen</dc:creator>

      <pubDate>Fri, 13 Apr 2018 13:40:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43762/43762.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43762/43762.patch/1523626819772970</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43762 (CS Violations: wp-includes/customize/class-wp-customize-color-control.php) created</title>
      
        <dc:creator>tfrommen</dc:creator>

      <pubDate>Fri, 13 Apr 2018 13:39:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43762</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43762/1523626757690252</guid>
      <description>&lt;p&gt;
There are CS violations that should be fixed.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43465 (Remove an extra space in the admin body class.) updated</title>
      
        <dc:creator>mathieuhays</dc:creator>

      <pubDate>Fri, 13 Apr 2018 13:34:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43465#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43465#comment:6/1523626477859319</guid>
      <description>&lt;p&gt;
I've tested the patch 43465.3.diff. It introduces a syntax error and doesn't comply to the WordPress Coding Standards.
&lt;/p&gt;
&lt;p&gt;
I've tested 43465.2.diff locally, it solves the issue and does comply to the WordPress Coding Standards.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43761 (CS: Fix violations for wp-admin/install-helper.php) created</title>
      
        <dc:creator>jipmoors</dc:creator>

      <pubDate>Fri, 13 Apr 2018 13:25:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43761</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43761/1523625930899442</guid>
      <description>&lt;p&gt;
Working on this currently, during WordCamp London contributor day.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>43316.14.diff attached to Ticket #43316</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 13 Apr 2018 13:20:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43316/43316.14.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43316/43316.14.diff/1523625652507352</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43760 (Create a revision when autosaving if the content has changed significantly) created</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 13 Apr 2018 13:08:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43760</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43760/1523624892825553</guid>
      <description>&lt;p&gt;
Sometimes a user may edit a post for hours without saving it. We have autosaves to prevent any data loss. However in some cases there may be an user or a server error and the content may not be submitted or the post may be "empty". This doesn't happen often, but is usually devastating for the users. They just lost hours of work!
&lt;/p&gt;
&lt;p&gt;
To safeguard against these cases, we can create post revisions when the autosave data is significantly different than the existing post.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43759 (CS: Fix violations for wp-includes/class-wp-comment-query.php) updated</title>
      
        <dc:creator>jipmoors</dc:creator>

      <pubDate>Fri, 13 Apr 2018 13:08:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43759#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43759#comment:2/1523624886477679</guid>
      <description>&lt;p&gt;
After adding an ignore to a &lt;code&gt;wpdb-&amp;gt;prepare&lt;/code&gt;, I decided to add comments to add prepare statements to the separate parts that are used to build the query.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43759 (CS: Fix violations for wp-includes/class-wp-comment-query.php) updated</title>
      
        <dc:creator>jipmoors</dc:creator>

      <pubDate>Fri, 13 Apr 2018 13:06:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43759#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43759#comment:1/1523624813733956</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43759-fix-coding-standards.patch attached to Ticket #43759</title>
      
        <dc:creator>jipmoors</dc:creator>

      <pubDate>Fri, 13 Apr 2018 13:06:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43759/43759-fix-coding-standards.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43759/43759-fix-coding-standards.patch/1523624799591826</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42061 (Add new utility function for checking if the current request is a REST ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 13 Apr 2018 12:39:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42061#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42061#comment:4/1523623147746317</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42061 (Add new utility function for checking if the current request is a REST ...) reopened</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 13 Apr 2018 12:24:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42061#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42061#comment:3/1523622275386947</guid>
      <description>&lt;p&gt;
I think this needs to be revisited, for the same purpose we have functions like &lt;code&gt;wp_doing_ajax()&lt;/code&gt; etc. Every function in WordPress can be misused, but a &lt;code&gt;wp_doing_rest()&lt;/code&gt; or &lt;code&gt;wp_is_rest_request()&lt;/code&gt; would allow fixing weird hacks necessary when working with unit tests. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43751" title="#43751: defect (bug): REST API: Attachments controller should respect &amp;#34;Max upload file size&amp;#34; ... (closed: fixed)"&gt;#43751&lt;/a&gt; for an example.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #43751 (REST API: Attachments controller should respect "Max upload file size" ...) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 13 Apr 2018 12:22:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43751#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43751#comment:1/1523622131706902</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Working on this was quite terrible, but at least I was able to figure out the sources of the issue, and &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43751/43751.diff" title="Attachment '43751.diff' in Ticket #43751"&gt;43751.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43751/43751.diff" title="Download"&gt;​&lt;/a&gt; is "working". Thoughts:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The logic to check both these things with an upload is in &lt;code&gt;check_upload_size()&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;This function is hooked into &lt;code&gt;wp_handle_upload_prefilter&lt;/code&gt;, but not into &lt;code&gt;wp_handle_sideload_prefilter&lt;/code&gt;. That is one problem, because depending on how you upload the file via the REST API, it may use the latter.
&lt;/li&gt;&lt;li&gt;Related to that, in unit tests, we need to hook the function into yet another filter, &lt;code&gt;wp_handle_mock_upload_filter&lt;/code&gt; because the REST API uses that with tests and &lt;code&gt;$_FILES&lt;/code&gt; leveraged.
&lt;/li&gt;&lt;li&gt;The worst part about all of this (and the second problem) is that &lt;code&gt;check_upload_size()&lt;/code&gt; has a terrible condition that it may just &lt;code&gt;wp_die()&lt;/code&gt; under certain circumstances. I added the condition of a &lt;code&gt;REST_REQUEST&lt;/code&gt; in there, so that it no longer dies during a REST API request. However, since that constant cannot be set during tests, I included a hack for unit tests in the &lt;code&gt;WP_REST_Attachments_Controller&lt;/code&gt; that set &lt;code&gt;$_POST['html-upload']&lt;/code&gt;, just so that it doesn't die. I'd love for this to not be necessary, therefore I vote for reopening &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/42061" title="#42061: enhancement: Add new utility function for checking if the current request is a REST ... (assigned)"&gt;#42061&lt;/a&gt; and introducing that function, if only for the sake of unit tests. If that gets available, this hack would no longer be necessary.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43751.diff attached to Ticket #43751</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 13 Apr 2018 12:06:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43751/43751.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43751/43751.diff/1523621189871193</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43545 (Helper functions: Anonymizing data in a standardized way) reopened</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 13 Apr 2018 11:50:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43545#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43545#comment:38/1523620251386083</guid>
      <description>&lt;p&gt;
Reopen for "next minor".
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #43759 (CS: Fix violations for wp-includes/class-wp-comment-query.php) created</title>
      
        <dc:creator>jipmoors</dc:creator>

      <pubDate>Fri, 13 Apr 2018 11:46:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43759</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43759/1523620010752014</guid>
      <description>&lt;p&gt;
Working on a patch for this during WordCamp London, currently.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43755 (CS: Fix violations for wp-includes/canonical.php) updated</title>
      
        <dc:creator>jipmoors</dc:creator>

      <pubDate>Fri, 13 Apr 2018 11:43:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43755#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43755#comment:4/1523619786014161</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43755 (CS: Fix violations for wp-includes/canonical.php) updated</title>
      
        <dc:creator>jipmoors</dc:creator>

      <pubDate>Fri, 13 Apr 2018 11:41:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43755#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43755#comment:3/1523619717049452</guid>
      <description>&lt;p&gt;
Have made some additional changes to make sure &lt;code&gt;wp_parse_url&lt;/code&gt; is used on all occasions.
&lt;/p&gt;
&lt;p&gt;
Also to be able to ignore the &lt;code&gt;prepare&lt;/code&gt; statement sniff, have made sure all parts of the query have been prepared.
I can imagine this could be a separate patch or at least be a separate commit, but it was in line of fixing the code sniff.
&lt;/p&gt;
&lt;p&gt;
Have ran all unit tests and did not encounter any problems.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43755 (CS: Fix violations for wp-includes/canonical.php) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Fri, 13 Apr 2018 11:29:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43755#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43755#comment:2/1523618962872656</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43755-fix-coding-standards.patch attached to Ticket #43755</title>
      
        <dc:creator>jipmoors</dc:creator>

      <pubDate>Fri, 13 Apr 2018 11:27:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43755/43755-fix-coding-standards.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43755/43755-fix-coding-standards.patch/1523618860375515</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43755 (CS: Fix violations for wp-includes/canonical.php) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Fri, 13 Apr 2018 11:14:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43755#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43755#comment:1/1523618086941187</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43758 (To not charge the content of the Boxes in the admin page if a boxed is ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 13 Apr 2018 11:14:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43758#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43758#comment:1/1523618079495103</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43758 (To not charge the content of the Boxes in the admin page if a boxed is ...) created</title>
      
        <dc:creator>colomet</dc:creator>

      <pubDate>Fri, 13 Apr 2018 11:02:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43758</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43758/1523617376775233</guid>
      <description>&lt;p&gt;
Revisions, Slug, Owner... are boxes of the screen option of the editor pager that some times are deactivated. If we do not load while we open a page if are deactivated, we will have a faster and simpler charge of the page.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://i.imgur.com/WnhFIkD.png"&gt;&lt;img src="https://i.imgur.com/WnhFIkD.png" alt="https://i.imgur.com/WnhFIkD.png" crossorigin="anonymous" title="https://i.imgur.com/WnhFIkD.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Tickets #43206,​43756 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 13 Apr 2018 10:35:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=43206%2C43756</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=43206%2C43756/1523615736103739</guid>
      <description>duplicate: &lt;p&gt;
Hi @thedemon12, welcome to WordPress Trac! Thanks for the report.
&lt;/p&gt;
&lt;p&gt;
Wrapping URLs in angle brackets is recommended behaviour by both &lt;a class="ext-link" href="https://www.w3.org/Addressing/URL/5.1_Wrappers.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the W3C&lt;/a&gt; and in &lt;a class="ext-link" href="https://www.ietf.org/rfc/rfc3986.txt"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Section C of the URI RFC&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
If some email service includes the ending bracket in the link, unfortunately there's not much we can do to fix that.
&lt;/p&gt;
&lt;p&gt;
Gmail usually handles this just fine. Problems only occur when using a plugin which adds HTML emails to WordPress, which causes the &amp;lt; and &amp;gt; to be interpreted as a HTML element.
&lt;/p&gt;
&lt;p&gt;
With that being said, this has been reported numerous times in the past. See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/23578" title="#23578: defect (bug): URLs wrapped in &amp;lt;&amp;gt; parsed as HTML when wp_mail_content_type set to ... (new)"&gt;#23578&lt;/a&gt;, &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/43206" title="#43206: defect (bug): Angle brackets around URLs can confuse email clients (reopened)"&gt;#43206&lt;/a&gt;, &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/18493" title="#18493: enhancement: HTML emails (reviewing)"&gt;#18493&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21095" title="#21095: defect (bug): Reset password link is in &amp;lt; RESET_URL &amp;gt; - Gmail does not show it. (closed: invalid)"&gt;#21095&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23420" title="#23420: enhancement: Lost password, invalid key - noticed something (closed: wontfix)"&gt;#23420&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39742" title="#39742: defect (bug): Password reset link does not show in most email clients due to &amp;#34;&amp;lt;&amp;#34; &amp;amp; ... (closed: duplicate)"&gt;#39742&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #43757 (`WP_REST_Attachments_Controller` includes entire admin includes for a ...) created</title>
      
        <dc:creator>lonelyvegan</dc:creator>

      <pubDate>Fri, 13 Apr 2018 10:33:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43757</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43757/1523615595745118</guid>
      <description>&lt;p&gt;
Looks like &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-includes/rest-api/endpoints/class-wp-rest-attachments-controller.php"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-includes/rest-api/endpoints/class-wp-rest-attachments-controller.php&lt;/a&gt; uses only a few admin function (&lt;code&gt;wp_handle_upload&lt;/code&gt;, &lt;code&gt;wp_generate_attachment_metadata&lt;/code&gt;, &lt;code&gt;wp_tempnam&lt;/code&gt;, and &lt;code&gt;wp_handle_sideload&lt;/code&gt;) but it's requiring the entire &lt;code&gt;admin.php&lt;/code&gt; include.
&lt;/p&gt;
&lt;p&gt;
It seems we could just require &lt;code&gt;file.php&lt;/code&gt; and &lt;code&gt;image.php&lt;/code&gt; from the admin directly instead.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>wp.PNG attached to Ticket #43756</title>
      
        <dc:creator>thedemon12</dc:creator>

      <pubDate>Fri, 13 Apr 2018 10:24:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43756/wp.PNG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43756/wp.PNG/1523615095132827</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43756 (Use of &lt; in wp-login.php) created</title>
      
        <dc:creator>thedemon12</dc:creator>

      <pubDate>Fri, 13 Apr 2018 10:24:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43756</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43756/1523615075394484</guid>
      <description>&lt;p&gt;
In the line 367 of wp-login.php :
$message .= '&amp;lt;' . network_site_url( "wp-login.php?action=rp&amp;amp;key=$key&amp;amp;login=" . rawurlencode( $user_login ), 'login' ) . "&amp;gt;\r\n";
Gmail as of now doesn't show any link in the mail when prompted for password reset. This is because Gmail interprets it as code in &amp;lt; &amp;gt;
&lt;a style="padding:0; border:none" href="https://ibb.co/ebsunS"&gt;&lt;img src="https://ibb.co/ebsunS" alt="https://ibb.co/ebsunS" crossorigin="anonymous" title="https://ibb.co/ebsunS" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
To fix it , we shall replace &amp;lt; with ( . and it works after it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43755 (CS: Fix violations for wp-includes/canonical.php) created</title>
      
        <dc:creator>jipmoors</dc:creator>

      <pubDate>Fri, 13 Apr 2018 10:19:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43755</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43755/1523614749551751</guid>
      <description>&lt;p&gt;
Started working on this at WordCamp London contributor day.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42885 (Fix PHPCS "Yoda Condition checks" for root files of WordPress Core.) updated</title>
      
        <dc:creator>jipmoors</dc:creator>

      <pubDate>Fri, 13 Apr 2018 10:13:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42885#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42885#comment:8/1523614432516499</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;
Ultimately, the aim is to have phpcs run on every commit. If we don't allow assignments in conditions, then the reason for Yoda conditions (avoiding accidental assignment in conditions) should no longer be necessary.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I disagree that it's the only reason of having that sniff.
&lt;/p&gt;
&lt;p&gt;
Having consistency on how the condition is formatted is a gain that this sniff provides.
Making sure the developer does not have to think about the way it should be read is a big gain.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43374 (PHP 7.2 Warning: count(): Parameter must be an array or an object that ...) updated</title>
      
        <dc:creator>toddhalfpenny</dc:creator>

      <pubDate>Fri, 13 Apr 2018 09:59:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43374#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43374#comment:5/1523613579917345</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43522 (Add aria-current to output of Walker_Page) updated</title>
      
        <dc:creator>lonelyvegan</dc:creator>

      <pubDate>Fri, 13 Apr 2018 09:58:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43522#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43522#comment:4/1523613506053990</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looks like this has a patch, so updating the keywords.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43753 (Media Grid does not respect taxonomy URL parameters) updated</title>
      
        <dc:creator>mclaurent</dc:creator>

      <pubDate>Fri, 13 Apr 2018 09:42:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43753#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43753#comment:1/1523612574313244</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43754 (Problem with is_page() function when gets "NULL" parameter) created</title>
      
        <dc:creator>pawels</dc:creator>

      <pubDate>Fri, 13 Apr 2018 09:32:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43754</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43754/1523611929262450</guid>
      <description>&lt;p&gt;
Problem with function is_page() when it gets "NULL" parameter then return "TRUE"
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>listview.jpg attached to Ticket #43753</title>
      
        <dc:creator>mclaurent</dc:creator>

      <pubDate>Fri, 13 Apr 2018 09:23:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43753/listview.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43753/listview.jpg/1523611390867368</guid>
      <description>&lt;p&gt;
Media list view with taxonomy filter
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>gridview.jpg attached to Ticket #43753</title>
      
        <dc:creator>mclaurent</dc:creator>

      <pubDate>Fri, 13 Apr 2018 09:22:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43753/gridview.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43753/gridview.jpg/1523611371513955</guid>
      <description>&lt;p&gt;
Media grid view with taxonomy filter
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43753 (Media Grid does not respect taxonomy URL parameters) created</title>
      
        <dc:creator>mclaurent</dc:creator>

      <pubDate>Fri, 13 Apr 2018 09:22:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43753</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43753/1523611329922759</guid>
      <description>&lt;p&gt;
The media items are correctly filtered on the list page but the grid view does apparently not take the taxonomy filter into account.
&lt;/p&gt;
&lt;p&gt;
The list view was fixed in &lt;a href="https://core.trac.wordpress.org/ticket/30584"&gt;https://core.trac.wordpress.org/ticket/30584&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id="Environment"&gt;Environment&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;WAMP
&lt;/li&gt;&lt;li&gt;WP 4.9.5
&lt;/li&gt;&lt;li&gt;Twenty Seventeen
&lt;/li&gt;&lt;li&gt;PHP 7.1
&lt;/li&gt;&lt;li&gt;10.0.19-MariaDB
&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="Stepstoreproduce"&gt;Steps to reproduce&lt;/h2&gt;
&lt;p&gt;
Add a category to the media by adding this to functions.php
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'init'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'jw_tax'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;jw_tax&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="nx"&gt;register_taxonomy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'media_cats'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'attachment'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="s1"&gt;'label'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Media Categories'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'jw'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="s1"&gt;'hierarchical'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Same steps as the other ticket.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Upload an attachment via Media &amp;gt; Add New
&lt;/li&gt;&lt;li&gt;Edit the attachment and add to new category
&lt;/li&gt;&lt;li&gt;Add more media but don't attach to the category.
&lt;/li&gt;&lt;li&gt;Go to the Media &amp;gt; Media categories, click on the number in the final column (1)
&lt;/li&gt;&lt;li&gt;You are redirected to the grid view of the media section. Note all items are showed.
&lt;/li&gt;&lt;li&gt;Switch to the list view and see the filter is applied correctly.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43709 (Fix or remove the "delete revision" endpoint) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 13 Apr 2018 07:26:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43709#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43709#comment:4/1523604417009372</guid>
      <description>&lt;p&gt;
Yeah, capability based approach will make it easier for plugins to enable deleting of revisions. As far as I see the checks should be if the current user can:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Delete the parent post.
&lt;/li&gt;&lt;li&gt;Delete revisions. This should always be "do_not_allow" by default.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42202 (REST API: no equivalent for `who=authors` to display potential authors) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 13 Apr 2018 06:35:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42202#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42202#comment:9/1523601359686006</guid>
      <description>&lt;p&gt;
Would &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/286"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/286&lt;/a&gt; be a viable underlying solution? If so, I‘ll try to get it over the finish line asap. It‘s the patch I was working on for &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/16841" title="#16841: defect (bug): Manually created user roles not showing in author dropdown regardless ... (assigned)"&gt;#16841&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43055 (Reorganize Core JS / introduce build step) updated</title>
      
        <dc:creator>omarreiss</dc:creator>

      <pubDate>Fri, 13 Apr 2018 05:56:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43055#comment:62</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43055#comment:62/1523598985317660</guid>
      <description>&lt;p&gt;
Ok, left the engines untouched. Fixed the PHP unit tests and an issue where I forgot to commit jQuery.color back. Also rebased on master again, which was fun...
&lt;/p&gt;
&lt;p&gt;
All tests (qunit and phpunit) now also need to load code from &lt;code&gt;build&lt;/code&gt;. I think this is warranted because most tests are in fact integration tests and thus assume to be run in a fully functional system. As we modularize and isolate code in the future, we can consider creating true unit tests which include code straight from source. Maybe I should create a ticket for context.
&lt;/p&gt;
&lt;p&gt;
If you try to run &lt;code&gt;phpunit&lt;/code&gt; with &lt;code&gt;src&lt;/code&gt; as &lt;code&gt;ABSPATH&lt;/code&gt;, the unit tests exit with instructions on how to fix so there should be a fairly straightforward path forward.
&lt;/p&gt;
&lt;p&gt;
I think this iteration is as good as complete. Happy we have split out some next steps in the other tickets!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>js-organization-8.patch attached to Ticket #43055</title>
      
        <dc:creator>omarreiss</dc:creator>

      <pubDate>Fri, 13 Apr 2018 05:35:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43055/js-organization-8.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43055/js-organization-8.patch/1523597701094755</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43715 (Add Privacy Policy link to bundled theme footers) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 13 Apr 2018 02:49:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43715#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43715#comment:8/1523587789813506</guid>
      <description>&lt;p&gt;
&lt;strong&gt;Note for clarification of the ticket as well&lt;/strong&gt;: My intention on this was to connect the default front-end more with our Privacy Policy page tools as everything will be explained in there, not create an actual 'consent popup' - a consent per cookie / data handling thing etc popup needs a lot of discussion and it will pretty much be 99% intrusive / UI breaking for most of the themes afaic so we shouldn't go for it without getting feedback from theme authors first as well.
&lt;/p&gt;
&lt;p&gt;
That being said an extra thought I had instead of going the 'intrusive' popup way since any actual 'modals' would again mess with how Themes look etc and we don't want to mess peoples sites up UI wise is to just display a Privacy Policy page link in the default footers if the Privacy Policy page exists.
&lt;/p&gt;
&lt;p&gt;
This idea comes down to simply updating all bundled themes footers with something like &lt;code&gt;Proudly powered by WordPress. - Privacy Policy&lt;/code&gt;. Or an iteration of that.
&lt;/p&gt;
&lt;p&gt;
So again everybody else could simply use any plugin he likes or any preferred/custom way to link to his PP page + create his consent modals until we implement something to cover everything.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Extra note about the &lt;code&gt;consents&lt;/code&gt; in general&lt;/strong&gt;: In the company I work they decided that we won't be asking for consent for each cookie / data gather individually. Instead our Privacy Policy / Terms &amp;amp; Conditions of using any given website will state all aspects of data collection and everything GDPR needs of course but there will be 1 single notification that you simply accept 'Everything stated in this page' if you want to use the website ( that's why we will be tracking who 'opted in for the whole website experience basically'.
&lt;/p&gt;
&lt;p&gt;
Now I'm not even sure if that's legally bulletproof but it basically strips pretty much all individual consents / opt-ins and merges them into 1 big thing.
&lt;/p&gt;
&lt;p&gt;
To sum this up: There have been some mockups all over the internet showing popup boxes with loads of multi-consent forms so the user has the ability to 'accept' whatever he likes etc.
&lt;/p&gt;
&lt;p&gt;
We ended up to go the way of 'if you want to see this website, well you have to accept everything' and that's it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 13 Apr 2018 02:22:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:48/1523586131371945</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43435/43435.6.diff" title="Attachment '43435.6.diff' in Ticket #43435"&gt;43435.6.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43435/43435.6.diff" title="Download"&gt;​&lt;/a&gt; is a first pass based on &lt;a class="missing attachment"&gt;Tools.png&lt;/a&gt; suggestions.
&lt;/p&gt;
&lt;p&gt;
It still needs the appropriate texts to be filled instead of &lt;code&gt;Lorem Ipsum&lt;/code&gt; etc but other than that it should be ok following @melchoyce 's mockup + input.
&lt;/p&gt;
&lt;p&gt;
Note for @melchoyce I've added the divider ( &amp;lt;hr&amp;gt; ) permanently instead of showing it after selecting or creating a page just to have a permanent division between explanation + the actual 'tools'. But we could still go on showing/hiding it with the Edit - View message if it feels off.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43435.6.diff attached to Ticket #43435</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 13 Apr 2018 02:16:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43435/43435.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43435/43435.6.diff/1523585772188528</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42202 (REST API: no equivalent for `who=authors` to display potential authors) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Fri, 13 Apr 2018 01:36:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42202#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42202#comment:8/1523583416318603</guid>
      <description>&lt;p&gt;
For the purposes of querying for users who can be assigned to posts, I think we should introduce a &lt;code&gt;who&lt;/code&gt; query argument which accepts &lt;code&gt;author&lt;/code&gt;. This is the simplest way to emulate the classic editor behavior for &lt;code&gt;wp_dropdown_users()&lt;/code&gt;. We can change the underlying implementation at some future date if we need to.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43749 (Update zxcvbn to 4.4.2) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Fri, 13 Apr 2018 01:12:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43749#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43749#comment:2/1523581974555106</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the ticket @desrosj, for the moment this ticket is blocked by &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43055" title="#43055: enhancement: Reorganize Core JS / introduce build step (closed: fixed)"&gt;#43055&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
As the Zxcvbn library will be relocated to a different folder as part of this ticket waiting for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43055" title="#43055: enhancement: Reorganize Core JS / introduce build step (closed: fixed)"&gt;#43055&lt;/a&gt; to be merged will help us avoid having to create another patch for the &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43055" title="#43055: enhancement: Reorganize Core JS / introduce build step (closed: fixed)"&gt;#43055&lt;/a&gt; ticket with Zxcvbn 4.4.2 and creating a patch twice here in this ticket.
&lt;/p&gt;
&lt;p&gt;
It is expected that &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43055" title="#43055: enhancement: Reorganize Core JS / introduce build step (closed: fixed)"&gt;#43055&lt;/a&gt; will be merged in coming days/week.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43709 (Fix or remove the "delete revision" endpoint) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Fri, 13 Apr 2018 01:08:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43709#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43709#comment:3/1523581694309362</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
For the historical context, this was introduced in &lt;a class="ext-link" href="https://github.com/WP-API/WP-API/pull/1110"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WP-API/WP-API/pull/1110&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I'm +1 for the capability-based approach.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43715 (Add Privacy Policy link to bundled theme footers) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Fri, 13 Apr 2018 00:59:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43715#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43715#comment:7/1523581149431096</guid>
      <description>&lt;p&gt;
The article that @nickwuk linked to includes this interesting quote:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
in January 2017, the European Commission clarified the high-level privacy rules as follows: The so called “cookie provision”, which has resulted in an overload of consent requests for internet users, will be streamlined. New rules will allow users to be more in control of their settings, providing an easy way to accept or refuse the tracking of cookies and other identifiers in case of privacy risks.
&lt;/p&gt;
&lt;p&gt;
The proposal clarifies that &lt;strong&gt;no consent is needed for non-privacy intrusive cookies improving internet experience&lt;/strong&gt; (e.g. to remember shopping cart history). Cookies set by a visited website counting the number of visitors to that website will no longer require consent.” [emphasis mine]
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think that's something that should be carefully considered before adding a cookie modal to Core. I personally feel like those modals have a very negative impact on user experience while simultaneously failing to provide any kind of meaningful improvement to a user's privacy.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42707 (Show taxonomy visibility information in the REST API) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 13 Apr 2018 00:55:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42707#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42707#comment:12/1523580929732854</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42973" title="REST API: Fix a typo introduced in [42729].
Props danielbachhuber. ..."&gt;42973&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Fix a typo introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42729" title="REST API: Show taxonomy visibility settings.
For Gutenberg and other ..."&gt;[42729]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props danielbachhuber.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42707" title="#42707: enhancement: Show taxonomy visibility information in the REST API (closed: fixed)"&gt;#42707&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42973]: REST API: Fix a typo introduced in [42729].  Props danielbachhuber. ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 13 Apr 2018 00:55:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42973</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42973/1523580928689190</guid>
      <description>&lt;p&gt;
REST API: Fix a typo introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42729" title="REST API: Show taxonomy visibility settings.
For Gutenberg and other ..."&gt;[42729]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Props danielbachhuber.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42707" title="#42707: enhancement: Show taxonomy visibility information in the REST API (closed: fixed)"&gt;#42707&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43481 (Add tabs and placeholders to privacy tools page in wp-admin) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 13 Apr 2018 00:53:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43481#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43481#comment:39/1523580813033738</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42972" title="Tests: Update the REST API fixtures.
[42967] included new post ..."&gt;42972&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Tests: Update the REST API fixtures.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42967" title="Privacy: add new wp-admin screens for exporting and removing of ..."&gt;[42967]&lt;/a&gt; included new post statii, but didn't add them to the REST API tests.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43481" title="#43481: enhancement: Add tabs and placeholders to privacy tools page in wp-admin (closed: fixed)"&gt;#43481&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42972]: Tests: Update the REST API fixtures.  [42967] included new post ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 13 Apr 2018 00:53:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42972</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42972/1523580811951076</guid>
      <description>&lt;p&gt;
Tests: Update the REST API fixtures.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42967" title="Privacy: add new wp-admin screens for exporting and removing of ..."&gt;[42967]&lt;/a&gt; included new post statii, but didn't add them to the REST API tests.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43481" title="#43481: enhancement: Add tabs and placeholders to privacy tools page in wp-admin (closed: fixed)"&gt;#43481&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #42707 (Show taxonomy visibility information in the REST API) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Fri, 13 Apr 2018 00:09:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42707#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42707#comment:11/1523578185206887</guid>
      <description>&lt;p&gt;
&lt;code&gt;42707.3.diff&lt;/code&gt; fixes the typo
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>42707.3.diff attached to Ticket #42707</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Fri, 13 Apr 2018 00:09:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42707/42707.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42707/42707.3.diff/1523578162918447</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43752 (ID, post_parent, menu_order on global $post object is a string in edit ...) updated</title>
      
        <dc:creator>javorszky</dc:creator>

      <pubDate>Thu, 12 Apr 2018 23:35:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43752#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43752#comment:1/1523576157073961</guid>
      <description>&lt;p&gt;
Related WooCommerce issue on &lt;a class="ext-link" href="https://github.com/woocommerce/woocommerce/issues/19704"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/woocommerce/woocommerce/issues/19704&lt;/a&gt; (tldr: it being a string causes it to slow down due to WC expecting the prop to be an int)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43752 (ID, post_parent, menu_order on global $post object is a string in edit ...) created</title>
      
        <dc:creator>javorszky</dc:creator>

      <pubDate>Thu, 12 Apr 2018 23:34:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43752</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43752/1523576048343192</guid>
      <description>&lt;p&gt;
When I'm on an edit post screen, the ID, post_parent, menu_order attributes on the global $post object are strings. I expect them to be integers.
&lt;/p&gt;
&lt;p&gt;
To quickly check, put this in a plugin:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'add_meta_boxes'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="nx"&gt;add_meta_box&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'foo'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'bar'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nb"&gt;var_dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Here's what's happening:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;in wp-admin/post.php the edit case happens, and within that the post gets reloaded here: &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/4.9.5/wp-admin/post.php#L167"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/4.9.5/wp-admin/post.php#L167&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;that function will run the post object through its own filter with filter edit here: &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/4.9.5/wp-includes/post.php#L552"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/4.9.5/wp-includes/post.php#L552&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;because at the time $this-&amp;gt;filter = "raw", and the $filter is edit, that will run the object through sanitize_post here &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/4.9.5/wp-includes/class-wp-post.php#L354"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/4.9.5/wp-includes/class-wp-post.php#L354&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;sanitize_post will, in turn, run all the fields through sanitize_post_field here: &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/4.9.5/wp-includes/post.php#L1940"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/4.9.5/wp-includes/post.php#L1940&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;and even though we have 3 fields set as int (&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/4.9.5/wp-includes/post.php#L1973"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/4.9.5/wp-includes/post.php#L1973&lt;/a&gt;), by the time we get to this part (&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/4.9.5/wp-includes/post.php#L2027-L2034"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/4.9.5/wp-includes/post.php#L2027-L2034&lt;/a&gt;), those three will be ran through esc_attr
&lt;/li&gt;&lt;li&gt;esc_attr will feed it through _wp_specialchars here &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/4.9.5/wp-includes/formatting.php#L3978"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/4.9.5/wp-includes/formatting.php#L3978&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;which begins with $string = (string) $string; here &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/4.9.5/wp-includes/formatting.php#L912"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/4.9.5/wp-includes/formatting.php#L912&lt;/a&gt;
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
The part that throws me off is that &lt;code&gt;sanitize_post_field&lt;/code&gt; declares these three properties to be integers at the beginning of the function, so I sort of expected them to come out as integers on the other end.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43751 (REST API: Attachments controller should respect "Max upload file size" ...) created</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Thu, 12 Apr 2018 23:26:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43751</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43751/1523575577901053</guid>
      <description>&lt;p&gt;
When the REST API is in use on WordPress multisite, the &lt;code&gt;WP_REST_Attachments_Controller&lt;/code&gt; should respect the "Max upload file size" and "Site upload space" site options.
&lt;/p&gt;
&lt;p&gt;
If an uploaded file fails either check, then an error should be returned and WordPress shouldn't save the file.
&lt;/p&gt;
&lt;p&gt;
Related &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/issues/6154"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/issues/6154&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43545 (Helper functions: Anonymizing data in a standardized way) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 12 Apr 2018 21:19:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43545#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43545#comment:37/1523567965623808</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42971" title="Privacy: add helper function for anonymizing data in a standardized ..."&gt;42971&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Privacy: add helper function for anonymizing data in a standardized way.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props jesperher, allendav, iandunn, birgire, azaozz.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43545" title="#43545: enhancement: Helper functions: Anonymizing data in a standardized way (closed: fixed)"&gt;#43545&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42971]: Privacy: add helper function for anonymizing data in a standardized ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 12 Apr 2018 21:19:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42971</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42971/1523567964598707</guid>
      <description>&lt;p&gt;
Privacy: add helper function for anonymizing data in a standardized way.
&lt;/p&gt;
&lt;p&gt;
Props jesperher, allendav, iandunn, birgire, azaozz.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43545" title="#43545: enhancement: Helper functions: Anonymizing data in a standardized way (closed: fixed)"&gt;#43545&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #9757 (Allow Plugin/Theme updates from a uploaded .zip file.) updated</title>
      
        <dc:creator>bloggingthemes</dc:creator>

      <pubDate>Thu, 12 Apr 2018 20:54:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9757#comment:90</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9757#comment:90/1523566470468439</guid>
      <description>&lt;p&gt;
I certainly hope this ticket will keep progressing. One of the biggest user experience one could hope for is to give them the method of updating an existing theme and/or plugin simply by re-uploading using the installer. Most users are scared of FTP (I don't blame them), but using a third party plugin is not ideal because who knows how long it will be kept up-to-date and supported.
&lt;/p&gt;
&lt;p&gt;
This is definitely important to exist within the core and should have been there since the beginning. I get so many users say to me:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;How come I can't update my theme using the installer?
&lt;/li&gt;&lt;li&gt;How come I can update with 1-click themes and plugins I get from wordpress but not yours?
&lt;/li&gt;&lt;li&gt;Or they use the installer and get that "already exists" message and get frustrated.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Overall, I hope this gains ground for an upcoming WordPress release because people need this.
&lt;/p&gt;
&lt;p&gt;
I've been using Joomla for 10 years and they've always had this capability. It also doesn't matter what the zip file name is either because it looks at the file's xml info. In the case of WordPress, I would assume this would be a similar equivelent of the text-domain and version number of the theme or plugin. Ultimately, it shouldn't matter if the theme or plugin was installed from .org or elsewhere, the fact is that for a much better user experience, we need this.
&lt;/p&gt;
&lt;p&gt;
Hopefully this makes it in an upcoming release.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43545 (Helper functions: Anonymizing data in a standardized way) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 12 Apr 2018 20:21:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43545#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43545#comment:36/1523564465973426</guid>
      <description>&lt;p&gt;
Thanks @iandunn, I wasn't aware of the &lt;code&gt;@uses&lt;/code&gt; being discouraged, I only consulted core here regarding that tag ;-)
You're absolutely right about the try/catch not working for PHP warnings, it was the first thing that I tried and it somehow worked well with phpunit ;-)
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43545/43545.7.diff" title="Attachment '43545.7.diff' in Ticket #43545"&gt;43545.7.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43545/43545.7.diff" title="Download"&gt;​&lt;/a&gt; should include all the four files and it removes the &lt;code&gt;@uses&lt;/code&gt;, try/catch and the &lt;em&gt;unrecognized address&lt;/em&gt; testcase.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36455 (Call opcache_reset() after plug-in, theme or core update) updated</title>
      
        <dc:creator>GregLone</dc:creator>

      <pubDate>Thu, 12 Apr 2018 20:18:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36455#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36455#comment:43/1523564316279869</guid>
      <description>&lt;p&gt;
Uh, you're right.
Yes I got one, but because I wrote my tests differently, and shouldn't.
My apology :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43545.7.diff attached to Ticket #43545</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 12 Apr 2018 20:07:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43545/43545.7.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43545/43545.7.diff/1523563665838928</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36455 (Call opcache_reset() after plug-in, theme or core update) updated</title>
      
        <dc:creator>benoitchantre</dc:creator>

      <pubDate>Thu, 12 Apr 2018 20:05:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36455#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36455#comment:42/1523563544974409</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36455#comment:41" title="Comment 41"&gt;GregLone&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi there,
&lt;/p&gt;
&lt;p&gt;
You'll get a fatal error with php &amp;lt; 5.5 because of &lt;code&gt;empty()&lt;/code&gt;:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;if ( ! empty( ini_get( 'opcache.restrict_api' ) ) &amp;amp;&amp;amp; strpos( __FILE__, ini_get( 'opcache.restrict_api' ) ) !== 0 ) {
        return;
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Should be:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$restrict_api = ini_get( 'opcache.restrict_api' );
if ( $restrict_api &amp;amp;&amp;amp; strpos( __FILE__, $restrict_api ) !== 0 ) {
        return;
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;
Before this test, there's a guard clause that check for the existence of opcache_reset() (since PHP 5.5).
There should be no error with PHP &amp;lt; 5.5 because opcache_reset() doesn't exist in these versions and the function will return early.
&lt;/p&gt;
&lt;p&gt;
Did you experiment a fatal error?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43750 (Establish a standard means of core reading privacy declarations from ...) updated</title>
      
        <dc:creator>TZ Media</dc:creator>

      <pubDate>Thu, 12 Apr 2018 19:57:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43750#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43750#comment:2/1523563064566836</guid>
      <description>&lt;p&gt;
To repeat concerns from the discussion about this (can‘t remember by whom):
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The privacy notice in the plugin description is more aimed at site admins wanting to use the plugin. But the privacy notice aimed at the end user of the site might have to be different, as it must conform to legal requirements.
&lt;/li&gt;&lt;li&gt;The privacy notice aimed at the end user might have different requirements depending e.g. on the configuration of the plugin. So it would be better to have this privacy notice in code, so it can adapt to that, while the privacy statement in the readme is static.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43750 (Establish a standard means of core reading privacy declarations from ...) updated</title>
      
        <dc:creator>casiepa</dc:creator>

      <pubDate>Thu, 12 Apr 2018 19:12:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43750#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43750#comment:1/1523560341764105</guid>
      <description>&lt;p&gt;
Some first thoughts:
&lt;/p&gt;
&lt;p&gt;
1) It could be readme.txt or readme.md
&lt;/p&gt;
&lt;p&gt;
2) I suppose it could start as:
&lt;/p&gt;
&lt;pre class="wiki"&gt;== Plugin Privacy Policy ==
&lt;/pre&gt;&lt;p&gt;
just like
&lt;/p&gt;
&lt;pre class="wiki"&gt;== Changelog ==
&lt;/pre&gt;&lt;p&gt;
3) Below that standard paragraphs or is any further 'formatting' needed?
&lt;/p&gt;
&lt;p&gt;
4) Versioning would be done by increasing the version of the plugin (?)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43009 (Create Video/Audio Playlist hooks not working as expected) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 12 Apr 2018 18:06:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43009#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43009#comment:8/1523556368995457</guid>
      <description>&lt;p&gt;
I think your doc comment proposal looks good.
&lt;/p&gt;
&lt;p&gt;
At least it looks like it's easier to explain the (persistent) behaviour rather than the (initially) behaviour ;-) because the user might wonder what happens after (initally) ;-)
&lt;/p&gt;
&lt;p&gt;
I tried to see if it's possible to add some extra logic into the callback here:
&lt;/p&gt;
&lt;pre class="wiki"&gt;this.listenTo( wp.media.model.Attachments.all, 'change:type', this.mediaTypeCounts );
&lt;/pre&gt;&lt;p&gt;
but it looks like it will not fire when audio/video is deleted. The &lt;code&gt;deleteAttachment&lt;/code&gt; event fires though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43637 (Add filters and ajax support for personal data erasure) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Thu, 12 Apr 2018 17:42:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43637#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43637#comment:3/1523554959350743</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43602 (Add to the privacy tools UX a means to erase personal data by username ...) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Thu, 12 Apr 2018 17:42:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43602#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43602#comment:7/1523554945931756</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43551 (Add a means to package personal data into a file) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Thu, 12 Apr 2018 17:42:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43551#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43551#comment:6/1523554932722006</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43546 (Add to the privacy tools UX a means to export personal data by ...) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Thu, 12 Apr 2018 17:41:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43546#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43546#comment:11/1523554912539580</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43009 (Create Video/Audio Playlist hooks not working as expected) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 12 Apr 2018 17:39:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43009#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43009#comment:7/1523554759051384</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I noticed that if we delete the last audio/video then the create playlist menu items are not hidden.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yea, the inconsistencies are a bit frustrating, in part because we've hijacked these $has_ variables with a setting that i think  really only applies on load. I'm going to dig in to see why that happens.
&lt;/p&gt;
&lt;p&gt;
The docs should make it clear you can pass three things to the filter: true, false or null - each with different behaviors.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;null: perform a query to see if media exists, initially show button if present
&lt;/li&gt;&lt;li&gt;true (default): always show button (initially)
&lt;/li&gt;&lt;li&gt;false: never show button (initially)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Thinking about this more, maybe we could consider changing how the filter works so that true and false actually persist beyond initial load, which is the core expectation that raised this ticket. This actually seems more useful unless I'm missing some use case.
&lt;/p&gt;
&lt;p&gt;
The filter action would then become:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;null: perform a query to see if media exists, initially show button if present
&lt;/li&gt;&lt;li&gt;true (default): always show button (even if all items removed)
&lt;/li&gt;&lt;li&gt;false: never show button (even if new items added)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
What do you think?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43750 (Establish a standard means of core reading privacy declarations from ...) created</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Thu, 12 Apr 2018 17:35:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43750</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43750/1523554542328403</guid>
      <description>&lt;p&gt;
To help administrators create and maintain their site's privacy policy, we not only need the privacy declarations for WordPress core (the software) but also need a means of getting privacy declarations from plugins. This ticket is about getting those privacy declarations from plugins. (See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43473" title="#43473: enhancement: Add default text for a privacy policy (closed: fixed)"&gt;#43473&lt;/a&gt; for core's declarations.)
&lt;/p&gt;
&lt;p&gt;
The proposed way right now is for plugins to add their privacy declarations to their readme.txt somehow. This ticket needs to define how exactly to add those to readme.txt (e.g. what section, format).
&lt;/p&gt;
&lt;p&gt;
This ticket also needs to result in the code that allows those privacy declarations to be surfaced in the privacy-policy-editing user interface proposed in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43435" title="#43435: enhancement: Add settings screen for creating a privacy policy (closed: fixed)"&gt;#43435&lt;/a&gt; (alongside the declarations from core itself from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43473" title="#43473: enhancement: Add default text for a privacy policy (closed: fixed)"&gt;#43473&lt;/a&gt;)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43545 (Helper functions: Anonymizing data in a standardized way) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Thu, 12 Apr 2018 17:34:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43545#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43545#comment:35/1523554497158557</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
No problems with new files in /tests. They are only problematic in /build for minor releases.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Doh, good point :)
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43545/43545.6.diff" title="Attachment '43545.6.diff' in Ticket #43545"&gt;43545.6.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43545/43545.6.diff" title="Download"&gt;​&lt;/a&gt; has lots of good tweaks. A few minor questions:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Should &lt;code&gt;@uses&lt;/code&gt; be added? It sounds like &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/inline-documentation-standards/php/#phpdoc-tags"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the standard discourages it now&lt;/a&gt;, and I personally feel like it adds a maintenance overhead without being particularly useful.
&lt;/li&gt;&lt;li&gt;I don't think &lt;code&gt;inet_(ntop|pton)&lt;/code&gt; &lt;code&gt;throw&lt;/code&gt; any exceptions, so is there a benefit of using &lt;code&gt;try/catch&lt;/code&gt;?
&lt;/li&gt;&lt;li&gt;It looks like the changes to &lt;code&gt;src/wp-admin/includes/class-wp-community-events.php&lt;/code&gt; and &lt;code&gt;tests/phpunit/tests/admin/includesCommunityEvents.php&lt;/code&gt; were left out.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43009 (Create Video/Audio Playlist hooks not working as expected) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 12 Apr 2018 17:21:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43009#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43009#comment:6/1523553712301652</guid>
      <description>&lt;p&gt;
@adamsilverstein I think I agree with you.
&lt;/p&gt;
&lt;p&gt;
In versions before 4.8, the previous "Create Audio Playlist" link was displayed if the Media Library contained any audio, else it was hidden. Same for videos.
&lt;/p&gt;
&lt;p&gt;
There we had:
&lt;/p&gt;
&lt;pre class="wiki"&gt;'attachmentCounts' =&amp;gt; array(
    'audio' =&amp;gt; ( $has_audio ) ? 1 : 0,
    'video' =&amp;gt; ( $has_video ) ? 1 : 0
),
&lt;/pre&gt;&lt;p&gt;
with &lt;code&gt;$has_audio&lt;/code&gt; and &lt;code&gt;$has_video&lt;/code&gt; from possible very heavy database queries.
&lt;/p&gt;
&lt;p&gt;
So looking at ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31071" title="#31071: defect (bug): media / post_mime_type related queries are very slow on larger sites (closed: fixed)"&gt;#31071&lt;/a&gt; again, I think the intention there wasn't to change the original behavior of the "Create Audio/Videos Playlist" links, were it was hidden in the absence of audios/videos.
&lt;/p&gt;
&lt;p&gt;
In hindsight I think the previous &lt;code&gt;$has_audio&lt;/code&gt; and &lt;code&gt;$has_video&lt;/code&gt; naming was more clear,
compared to the changes in 4.8:
&lt;/p&gt;
&lt;pre class="wiki"&gt;'attachmentCounts' =&amp;gt; array(
	'audio' =&amp;gt; ( $show_audio_playlist ) ? 1 : 0,
	'video' =&amp;gt; ( $show_video_playlist ) ? 1 : 0,
),
&lt;/pre&gt;&lt;p&gt;
I noticed that if we delete the last audio/video then the create playlist menu items are not hidden.
&lt;/p&gt;
&lt;p&gt;
Maybe there's a way to check &lt;code&gt;this.counts[ attr ].count &amp;lt; 1&lt;/code&gt; on audio/video delete and if so, hide the menu item with &lt;code&gt;this.menuItemVisibility( this.counts[ attr ].state, 'hide' );&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Would that be consistent with the display of the create playlist menu items, when the first audio/video are uploaded?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36455 (Call opcache_reset() after plug-in, theme or core update) updated</title>
      
        <dc:creator>GregLone</dc:creator>

      <pubDate>Thu, 12 Apr 2018 17:08:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36455#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36455#comment:41/1523552882555283</guid>
      <description>&lt;p&gt;
Hi there,
&lt;/p&gt;
&lt;p&gt;
You'll get a fatal error with php &amp;lt; 5.5 because of &lt;code&gt;empty()&lt;/code&gt;:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;if ( ! empty( ini_get( 'opcache.restrict_api' ) ) &amp;amp;&amp;amp; strpos( __FILE__, ini_get( 'opcache.restrict_api' ) ) !== 0 ) {
        return;
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Should be:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$restrict_api = ini_get( 'opcache.restrict_api' );
if ( $restrict_api &amp;amp;&amp;amp; strpos( __FILE__, $restrict_api ) !== 0 ) {
        return;
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40020 (Customizer fails to load in Safari due to X-Origin Header mismatch) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 12 Apr 2018 16:49:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40020#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40020#comment:11/1523551768553413</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Amazing research 🎉
&lt;/p&gt;
&lt;p&gt;
@fullyint I'm pretty sure that the unit tests will need to be updated based on this change: &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/blob/ede824e/tests/phpunit/tests/customize/manager.php#L845-L858"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/wordpress-develop/blob/ede824e/tests/phpunit/tests/customize/manager.php#L845-L858&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43749 (Update zxcvbn to 4.4.2) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 12 Apr 2018 16:49:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43749#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43749#comment:1/1523551747566600</guid>
      <description>&lt;p&gt;
Of note, this library should have the dictionary within passed through a rot13 for PG-ness.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31647" title="#31647: enhancement: zxcvbn.js is old (closed: fixed)"&gt;#31647&lt;/a&gt; has a patch against the library's master branch for performing this modification: &lt;a href="https://core.trac.wordpress.org/ticket/31647#comment:9"&gt;https://core.trac.wordpress.org/ticket/31647#comment:9&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43749 (Update zxcvbn to 4.4.2) created</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 12 Apr 2018 16:32:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43749</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43749/1523550753574982</guid>
      <description>&lt;p&gt;
4.4.2 contains several bug fixes.
&lt;/p&gt;
&lt;p&gt;
For a full list of changes, see &lt;a class="ext-link" href="https://github.com/dropbox/zxcvbn/compare/v4.4.1...v4.4.2"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/dropbox/zxcvbn/compare/v4.4.1...v4.4.2&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>43748.2.patch attached to Ticket #43748</title>
      
        <dc:creator>macbookandrew</dc:creator>

      <pubDate>Thu, 12 Apr 2018 16:13:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43748/43748.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43748/43748.2.patch/1523549598014764</guid>
      <description>&lt;p&gt;
fixed a typo
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>43748.1.patch attached to Ticket #43748</title>
      
        <dc:creator>macbookandrew</dc:creator>

      <pubDate>Thu, 12 Apr 2018 16:12:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43748/43748.1.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43748/43748.1.patch/1523549544690496</guid>
      <description>&lt;p&gt;
New actionr
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43748 (Create new action edit_user_updated_user similar to edit_user_created_user) created</title>
      
        <dc:creator>macbookandrew</dc:creator>

      <pubDate>Thu, 12 Apr 2018 16:11:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43748</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43748/1523549490420239</guid>
      <description>&lt;p&gt;
I would like to see a new action &lt;code&gt;edit_user_updated_user&lt;/code&gt; similar to the &lt;code&gt;edit_user_created_user&lt;/code&gt; action so I can run custom actions (i.e., updating an external API with the changed data).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43747 ($query set post__not_in not accepting inputs from variables correctly) closed</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 12 Apr 2018 14:52:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43747#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43747#comment:1/1523544774914996</guid>
      <description>invalid: &lt;p&gt;
Hi there
&lt;/p&gt;
&lt;p&gt;
The documentation for &lt;code&gt;post__not_in&lt;/code&gt; is pretty clear:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
An array of post IDs not to retrieve. Note: a string of comma-separated IDs will NOT work.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;code&gt;array(316,319,321)&lt;/code&gt; is an array of integers, which are post IDs.
&lt;/p&gt;
&lt;p&gt;
In your example, &lt;code&gt;array($exclude_string)&lt;/code&gt; is the same as writing &lt;code&gt;array( '316,319,321' )&lt;/code&gt;. This is an array with one item, a string containing a comma-separated list of post IDs.
&lt;/p&gt;
&lt;p&gt;
To make your code work, just use &lt;code&gt;$query-&amp;gt;set( 'post__not_in', array( implode( ',', $exclude_string ) ) );&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43747 ($query set post__not_in not accepting inputs from variables correctly) created</title>
      
        <dc:creator>Venutius</dc:creator>

      <pubDate>Thu, 12 Apr 2018 14:36:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43747</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43747/1523543798134670</guid>
      <description>&lt;p&gt;
If I enter:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;$query-&amp;gt;set('post__not_in', array(316,319,321));&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
posts 316, 319 and 321 are excluded from the loop.
&lt;/p&gt;
&lt;p&gt;
However, if I do:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;$exclude_string = '316,319,321';&lt;/code&gt;
&lt;code&gt;$query-&amp;gt;set('post__not_in', array($exclude_string));&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Only post 316 is excluded. Can't see where I'd be doing something wrong here.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 12 Apr 2018 14:25:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:75</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:75/1523543105729939</guid>
      <description>&lt;p&gt;
Some good points have been made here and its time to take stock of all the feedback and move forward! The lack of any autosave capability is a blocker for merging Gutenberg because without it autosaves are essentially broken.
&lt;/p&gt;
&lt;p&gt;
My intuition and initial  idea was a separate Autosave controller. Still, I liked the idea of adding autosave capability to the revisions controller (as @rmccue suggested in 43316.13.diff) because of their technical similarity, or even adding to the posts controller with a flag as originally proposed in 43316.patch by @azaozz...
&lt;/p&gt;
&lt;p&gt;
However from the client's perspective these actually seem like pretty different concepts. As @schlessera keeps pointing out, its the difference in the &lt;em&gt;concepts of autosave vs. revision vs post&lt;/em&gt; that suggests a separate autosave endpoint is appropriate. The fact that technically autosaves are very similar to revisions and even posts is an implementation detail that doesn't concern clients.
&lt;/p&gt;
&lt;p&gt;
To those on this thread advocating alternate approaches, can you agree to moving ahead with a separate Autosaves controller (latest in 43316.12.diff​) and if not, what blocking concerns remain?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38228 (Add filter to default gallery shortcode output) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 12 Apr 2018 14:05:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38228#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38228#comment:5/1523541903523376</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33979 (Add filter for 'post_gallery_item') updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 12 Apr 2018 14:03:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33979#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33979#comment:11/1523541782145183</guid>
      <description>&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36270" title="#36270: enhancement: Allow filtering of the final HTML output of media related shortcodes (new)"&gt;#36270&lt;/a&gt;, &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/38100" title="#38100: feature request: Gallery Caption Filter (new)"&gt;#38100&lt;/a&gt;, &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/33468" title="#33468: enhancement: Add image caption hook (reviewing)"&gt;#33468&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43746 (Custom post type single post feed returns a 404 if has_archive is set ...) created</title>
      
        <dc:creator>henry.wright</dc:creator>

      <pubDate>Thu, 12 Apr 2018 13:58:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43746</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43746/1523541497349305</guid>
      <description>&lt;p&gt;
When using &lt;code&gt;register_post_type()&lt;/code&gt;, the single post feed returns a 404 if &lt;code&gt;has_archive&lt;/code&gt; is set to false. This seems to happen regardless of the value of &lt;code&gt;feeds&lt;/code&gt; in the &lt;code&gt;rewrite&lt;/code&gt; array. For example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;register_post_type(
    'example',
    array(
        'rewrite'     =&amp;gt; array( 'slug' =&amp;gt; 'my-custom-post-type', 'feeds' =&amp;gt; true ),
        'has_archive' =&amp;gt; false
    )
);
&lt;/pre&gt;&lt;pre class="wiki"&gt;$ curl -IL https://example.com/my-custom-post-type/some-text/feed/
HTTP/1.1 404 Not Found
&lt;/pre&gt;&lt;p&gt;
I'd expect a feed for the post to be built if &lt;code&gt;feeds&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Note I have flushed permalinks.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43009 (Create Video/Audio Playlist hooks not working as expected) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 12 Apr 2018 13:13:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43009#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43009#comment:5/1523538805194534</guid>
      <description>&lt;p&gt;
I agree, the doc block is misleading. We should probably update it to reflect the actual behavior. Do you think completely disabling these links is useful?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43009 (Create Video/Audio Playlist hooks not working as expected) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 12 Apr 2018 11:49:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43009#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43009#comment:4/1523533773169926</guid>
      <description>&lt;p&gt;
Thanks @adamsilverstein, I remember watching that ticket at the time but I never realized that this was the intended behavior of the filter ;-)
&lt;/p&gt;
&lt;p&gt;
If this is the intended behavior, then adjusting the filter doc comments would help here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42814 (PHP 7.2 Warning: ...wp-includes/post-template.php on line 284) updated</title>
      
        <dc:creator>yashparmar71</dc:creator>

      <pubDate>Thu, 12 Apr 2018 11:28:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42814#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42814#comment:46/1523532497663461</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/42814" title="#42814: defect (bug): PHP 7.2 Warning: ...wp-includes/post-template.php on line 284 (reopened)"&gt;internetwerk&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Warning with PHP 7.2:
&lt;/p&gt;
&lt;p&gt;
Warning: count(): Parameter must be an array or an object that implements Countable in /wp-includes/post-template.php on line 284
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
if get this error
you must be try this it work very nice
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
while (have_posts()) {                                                the_post();
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43745 ((Yet another ;-) Redirect loop with encoded query keys) created</title>
      
        <dc:creator>wrwrwr0</dc:creator>

      <pubDate>Thu, 12 Apr 2018 11:11:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43745</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43745/1523531494115404</guid>
      <description>&lt;p&gt;
Some live examples:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://news.microsoft.com/?%C2%A2"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://news.microsoft.com/?%C2%A2&lt;/a&gt; &lt;br /&gt;
&lt;a class="ext-link" href="https://newsroom.fb.com/?%C2%A2"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://newsroom.fb.com/?%C2%A2&lt;/a&gt; &lt;br /&gt;
&lt;a class="ext-link" href="https://www.thewaltdisneycompany.com/?%C2%A2"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.thewaltdisneycompany.com/?%C2%A2&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
(At the time of writing these show "page isn't redirecting properly" / "redirected you too many times" notice.)
&lt;/p&gt;
&lt;p&gt;
To reproduce on a fresh install set some permalink structure and put a static page on front, for convenience:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;wp rewrite structure &lt;span class="s1"&gt;'/%year%/%monthnum%/%postname%/'&lt;/span&gt;
wp option update show_on_front page
wp option update page_on_front 2
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Observe a 301 with the location exactly matching the request:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;curl -I http://test.local/?%C2%A2
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
(Query with any character in a key matching &lt;a href="https://core.trac.wordpress.org/browser/tags/4.9.5/src/wp-includes/pluggable.php#L1232"&gt;the first regex&lt;/a&gt; in
wp_sanitize_redirect().)
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/browser/tags/4.9.5/src/wp-includes/canonical.php#L42"&gt;redirect_canonical()&lt;/a&gt; is hooked by default to &lt;code&gt;template_redirect&lt;/code&gt;. Under some circumstances &lt;code&gt;$redirect_url&lt;/code&gt; can be set to more or less the same as &lt;code&gt;$requested_url&lt;/code&gt; in the somewhat lengthy "is 404" conditional. The code that readds additional query args, around &lt;a href="https://core.trac.wordpress.org/browser/tags/4.9.5/src/wp-includes/canonical.php#L360"&gt;line 360&lt;/a&gt; of the function, uses &lt;a href="https://core.trac.wordpress.org/browser/tags/4.9.5/src/wp-includes/formatting.php#L2475"&gt;rawurlencode_deep()&lt;/a&gt;, which leaves keys unencoded. In consequence, &lt;code&gt;$requested_url&lt;/code&gt; and &lt;code&gt;$redirect_url&lt;/code&gt; around &lt;a href="https://core.trac.wordpress.org/browser/tags/4.9.5/src/wp-includes/canonical.php#L490"&gt;line 490&lt;/a&gt; may differ only in query encoding. Further, &lt;code&gt;wp_sanitize_request()&lt;/code&gt;, applied after the chained redirects check, reencodes some multibyte characters.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43545 (Helper functions: Anonymizing data in a standardized way) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 12 Apr 2018 11:05:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43545#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43545#comment:34/1523531147818280</guid>
      <description>&lt;p&gt;
I was testing various IP address inputs, when I noticed that for e.g.:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$ip_addr = ':::';
echo inet_pton( $ip_addr );
&lt;/pre&gt;&lt;p&gt;
gives a PHP warning:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Warning:  inet_pton(): Unrecognized address ::: in [...][...] on line 3
&lt;/pre&gt;&lt;p&gt;
We could handle it with e.g.:
&lt;/p&gt;
&lt;pre class="wiki"&gt;try {
	$ip_addr = inet_ntop( inet_pton( $ip_addr ) &amp;amp; inet_pton( $netmask ) );
	if( false === $ip_addr ) {
		return '::';
	}
} catch( Exception $error ) {
	return '::';
}
&lt;/pre&gt;&lt;p&gt;
where we also handle the possible &lt;code&gt;false&lt;/code&gt; output of &lt;code&gt;inet_ntop()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I checked and these warnings will be removed in PHP 7.1+
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/php/php-src/pull/3200"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/php/php-src/pull/3200&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43545/43545.6.diff" title="Attachment '43545.6.diff' in Ticket #43545"&gt;43545.6.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43545/43545.6.diff" title="Download"&gt;​&lt;/a&gt; patch includes suggestions that:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;tests part&lt;/strong&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Declares visibility and adds doc comments for
&lt;ul&gt;&lt;li&gt;&lt;code&gt;test_anonymize_email()&lt;/code&gt;,
&lt;/li&gt;&lt;li&gt;&lt;code&gt;test_anonymize_url()&lt;/code&gt;,
&lt;/li&gt;&lt;li&gt;&lt;code&gt;test_anonymize_date()&lt;/code&gt;,
&lt;/li&gt;&lt;li&gt;&lt;code&gt;test_anonymize_text()&lt;/code&gt;,
&lt;/li&gt;&lt;li&gt;&lt;code&gt;test_anonymize_long_text()&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Adds misisng full-stops to inline comments.
&lt;/li&gt;&lt;li&gt;Adds doc parameters for &lt;code&gt;$raw_ip&lt;/code&gt; and &lt;code&gt;$expected_result&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Detailed &lt;code&gt;@return&lt;/code&gt; for &lt;code&gt;data_wp_privacy_anonymize_ip()&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Adds a file doc comment.
&lt;/li&gt;&lt;li&gt;Adds short doc comment for the class.
&lt;/li&gt;&lt;li&gt;Makes the tests explicit in &lt;code&gt;test_anonymize_text()&lt;/code&gt;, &lt;code&gt;test_anonymize_long_text()&lt;/code&gt;, i.e. use &lt;code&gt;assertEquals()&lt;/code&gt; instead of &lt;code&gt;assertNotEquals()&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Adds the invalid IP testcase: &lt;code&gt;::: -&amp;gt; ::&lt;/code&gt; that would give a PHP warning if unhandled.
&lt;/li&gt;&lt;li&gt;Adds the invalid IP testcase: &lt;code&gt;null -&amp;gt; 0.0.0.0&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Adds the netmask testcase: &lt;code&gt;10.20.30.45/24 -&amp;gt; 10.20.30.0&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Adds a &lt;code&gt;markTestSkipped&lt;/code&gt; in &lt;code&gt;test_wp_privacy_anonymize_ip()&lt;/code&gt; if &lt;code&gt;inet_pton&lt;/code&gt; and &lt;code&gt;inet_pton&lt;/code&gt; are not available.
Otherwise most of the IPv6 testcases, provided by &lt;code&gt;data_wp_privacy_anonymize_ip()&lt;/code&gt;, would fail.
Another approach would be to adjust the testcases to to handle that.
&lt;/li&gt;&lt;li&gt;Replaces: &lt;code&gt;Test that get_unsafe_client_ip() properly anonymizes all possible address formats.&lt;/code&gt; with: &lt;code&gt;Test that wp_privacy_anonymize_ip() properly anonymizes all possible IP address formats.&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;strong&gt;src part:&lt;/strong&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Adds  &lt;code&gt;@uses inet_ntop and inet_pton if available, to handle IPv6 addresses.&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Handle a possible PHP warning from &lt;code&gt;inet_pton&lt;/code&gt; and &lt;code&gt;inet_pton&lt;/code&gt; for an unrecognized address.
&lt;/li&gt;&lt;li&gt;Handle a possible &lt;code&gt;false&lt;/code&gt; output of &lt;code&gt;inet_ntop()&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;strong&gt;To consider:&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;echo wp_privacy_anonymize_data( 'ip', '...' );
&lt;/pre&gt;&lt;p&gt;
outputs: &lt;code&gt;'...0'&lt;/code&gt; instead of &lt;code&gt;0.0.0.0&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Another example is how out-of-range IPv4 should be handled:
&lt;/p&gt;
&lt;pre class="wiki"&gt;echo wp_privacy_anonymize_data( 'ip', '999.999.999.999' );
&lt;/pre&gt;&lt;p&gt;
outputs: &lt;code&gt;'999.999.999.0'&lt;/code&gt; but should it be instead &lt;code&gt;0.0.0.0&lt;/code&gt; ?
&lt;/p&gt;
&lt;p&gt;
One might aim for a stricter IPv4 validation in a future ticket or e.g. ticket &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/34538" title="#34538: enhancement: Improvement of the IPv4 address format check (reviewing)"&gt;#34538&lt;/a&gt; &lt;a href="https://core.trac.wordpress.org/ticket/34538"&gt;Improvement of the IPv4 address format check&lt;/a&gt; on &lt;code&gt;WP_Http::is_ip_address&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I wonder if there should be a general WP IP utility (possible future ticket) to avoid IP handling duplications in various parts of the core (e.g. db hosts, HTTP API, Rest, Multisite support of IPv6, ... ).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43545.6.diff attached to Ticket #43545</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 12 Apr 2018 10:54:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43545/43545.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43545/43545.6.diff/1523530499396488</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43744 (`WP_REST_Server::EDITABLE` should not contain POST) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Thu, 12 Apr 2018 10:15:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43744#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43744#comment:2/1523528104892049</guid>
      <description>&lt;p&gt;
Thanks for the rapid response. A POST request is expected to to create new resource, which I certainly don't want to give the impression of allowing. A POST to a collection is fine, we have &lt;code&gt;CREATABLE&lt;/code&gt; for that. But adding &lt;code&gt;::EDITABLE&lt;/code&gt; to a single item resource would add &lt;code&gt;POST&lt;/code&gt; implying that resources can also be created.
&lt;/p&gt;
&lt;p&gt;
So I can't give my endpoint the &lt;code&gt;::EDITABLE&lt;/code&gt; flag, and instead have to write &lt;code&gt;array( 'PUT', 'PATCH' )&lt;/code&gt;, something annoyed me a bit and broke the flow. Trivial, and easily fixable, especially if they're converted to arrays, in core you would change all instances of &lt;code&gt;::EDITABLE&lt;/code&gt; to &lt;code&gt;::EDITABLE + ::CREATABLE&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Again, just being pedantic, the world doesn't have to stop because of this. And I may be mistaken regarding the POST, but here:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://en.wikipedia.org/wiki/Representational_state_transfer#Relationship_between_URL_and_HTTP_methods"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://en.wikipedia.org/wiki/Representational_state_transfer#Relationship_between_URL_and_HTTP_methods&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I guess a &lt;code&gt;POST&lt;/code&gt; request to a single Taxonomy item would be equivalent to creating a new Term inside that Taxonomy. But a &lt;code&gt;POST&lt;/code&gt; to a single Term wouldn't make sense, no? I understand that the three verbs for core endpoints are aliased, and okay, but if I don't want a POST to be available and working for robustness, documentation purposes I can't use &lt;code&gt;::EDITABLE&lt;/code&gt; in its  strict sense.
&lt;/p&gt;
&lt;p&gt;
Hope this makes sense.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43744 (`WP_REST_Server::EDITABLE` should not contain POST) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 12 Apr 2018 09:55:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43744#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43744#comment:1/1523526940754546</guid>
      <description>&lt;p&gt;
Why are you unable to use &lt;code&gt;WP_REST_Server::EDITABLE&lt;/code&gt; at all? Can you elaborate a bit? What's your use case.
&lt;/p&gt;
&lt;p&gt;
For history: editable has meant POST + PUT + PATCH since the project started during GSoC 2013: &lt;a class="ext-link" href="https://gsoc.trac.wordpress.org/changeset/1964"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gsoc.trac.wordpress.org/changeset/1964&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
As far as I understand it and how I've used REST principles in the past, is that a &lt;code&gt;POST&lt;/code&gt; to a collection means creating a resource, and &lt;code&gt;POST&lt;/code&gt; to a single resource is the same as using &lt;code&gt;PUT&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43744 (`WP_REST_Server::EDITABLE` should not contain POST) created</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Thu, 12 Apr 2018 09:29:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43744</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43744/1523525340395171</guid>
      <description>&lt;p&gt;
Editable != creatable. The POST method is used to create resources, not update them.
&lt;/p&gt;
&lt;p&gt;
I am unable to use &lt;code&gt;WP_REST_Server::EDITABLE&lt;/code&gt; at all.
&lt;/p&gt;
&lt;p&gt;
Also, can these be arrays? Would be cool to do &lt;code&gt;array_merge&lt;/code&gt;, &lt;code&gt;array_diff&lt;/code&gt; on these definitions.
&lt;/p&gt;
&lt;p&gt;
Thoughts?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43743 (Terms list table should be full width when user cannot edit terms) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 12 Apr 2018 08:52:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43743#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43743#comment:3/1523523165590355</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
What scenario allows you to access this page but not add new terms? What role do you need to have/setup to test this?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This happens when you have the &lt;code&gt;manage_terms&lt;/code&gt; capability for that taxonomy but not &lt;code&gt;edit_terms&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
In my case, the custom taxonomy was registered with caps like these:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;'capabilities'          =&amp;gt; [
        'manage_terms' =&amp;gt; 'manage_categories',
        'edit_terms'   =&amp;gt; 'manage_business_areas',
        'delete_terms' =&amp;gt; 'manage_business_areas',
        'assign_terms' =&amp;gt; 'edit_posts',
],
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Categories being a default taxonomy, I had the &lt;code&gt;manage_categories&lt;/code&gt; caps but since I haven't yet added the custom &lt;code&gt;manage_business_areas&lt;/code&gt; cap to my user / role, the demonstrated scenario happens.
&lt;/p&gt;
&lt;p&gt;
You could easily test it by manually removing the &lt;code&gt;edit_categories&lt;/code&gt; capability using something like the Members plugin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43545 (Helper functions: Anonymizing data in a standardized way) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 12 Apr 2018 08:09:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43545#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43545#comment:33/1523520574121005</guid>
      <description>&lt;p&gt;
@iandunn thanks for the review and the fixes! 43545.5.diff looks good. Going to commit it later today if no other remarks.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
...the Events Widget doesn't strictly need $ipv6_fallback mode, if using the un-anonymized IP is going to cause GDPR issues.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Was thinking about that too. For privacy we have to guarantee we return an anonymized IP, no matter what. Since we depend on the PHP version/environment to be able to do anonymization of IPv6 addresses, it's probably a good idea to be able to fall back gracefully. However removing that will make &lt;code&gt;wp_privacy_anonymize_ip()&lt;/code&gt; simpler to use... Kind of 50/50 there :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If this gets bumped from &lt;code&gt;5.0&lt;/code&gt; to &lt;code&gt;4.9.x&lt;/code&gt;...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No problems with new files in /tests. They are only problematic in /build for minor releases.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41191 (Create browse happy type notice for PHP versions) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Thu, 12 Apr 2018 08:01:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41191#comment:94</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41191#comment:94/1523520112569067</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41191#comment:92" title="Comment 92"&gt;karmatosed&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As has been asked, I am going to give a design review of this. I am coming a little into this without knowing the history (so please consider this).
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;That is a lot of text and expecting people to read it is quite the ask. I think it should be collapsed by default or a lot less text.
&lt;/li&gt;&lt;li&gt;That button (blue primary one) should not be full width. Make it fit the text please.
&lt;/li&gt;&lt;li&gt;I am unsure this should be a red error, perhaps it's more of a warning?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Agree on these points here.
&lt;/p&gt;
&lt;p&gt;
Button should be smaller (fit the text), the text reduced. I tried to reduce some of it in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/41191/41191.11.diff" title="Attachment '41191.11.diff' in Ticket #41191"&gt;41191.11.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/41191/41191.11.diff" title="Download"&gt;​&lt;/a&gt; and the red should be changed to a orange (warning colour) as whilst it's not broken per se, &lt;strong&gt;PHP should be upgraded&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;
I am against having this collapsed by default though. If we have it collapsed be default it won't have the effect that we're intending it to have. It should be right in front of you to see it clearly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43743 (Terms list table should be full width when user cannot edit terms) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Thu, 12 Apr 2018 07:46:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43743#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43743#comment:2/1523519208494994</guid>
      <description>&lt;p&gt;
I'd suggest hiding the div completely (not using CSS) if it's empty so it's not present in the DOM as it doesn't need to exist on the page if empty. What scenario allows you to access this page but not add new terms? What role do you need to have/setup to test this?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43743 (Terms list table should be full width when user cannot edit terms) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 12 Apr 2018 07:41:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43743#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43743#comment:1/1523518871595553</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>list-table-float-none.png attached to Ticket #43743</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 12 Apr 2018 07:32:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43743/list-table-float-none.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43743/list-table-float-none.png/1523518351383633</guid>
      <description>&lt;p&gt;
Proposed solution
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>list-table-float-right.png attached to Ticket #43743</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 12 Apr 2018 07:32:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43743/list-table-float-right.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43743/list-table-float-right.png/1523518342685790</guid>
      <description>&lt;p&gt;
Status quo
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43743 (Terms list table should be full width when user cannot edit terms) created</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 12 Apr 2018 07:31:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43743</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43743/1523518279679121</guid>
      <description>&lt;p&gt;
The &lt;code&gt;edit-tags.php&lt;/code&gt; screen is split into two columns. On the left hand side is a form to create new terms, on the right hand side is the list of existing terms.
&lt;/p&gt;
&lt;p&gt;
Now, the form is only visible if the user has the &lt;code&gt;edit_terms&lt;/code&gt; capability for the current taxonomy. If they don't, the left column is simply empty.
&lt;/p&gt;
&lt;p&gt;
Instead of wasting this space, I'd suggest to make the list table take the full width of the screen instead of residing at the right side.
&lt;/p&gt;
&lt;p&gt;
Unfortunately this can't be yet achieved using CSS alone because &lt;code&gt;#col-left&lt;/code&gt; isn't empty as it contains a &lt;code&gt;.col-wrap&lt;/code&gt; div.
&lt;/p&gt;
&lt;p&gt;
If we'd move the &lt;code&gt;current_user_can( $tax-&amp;gt;cap-&amp;gt;edit_terms )&lt;/code&gt; check outside &lt;code&gt;.col-wrap&lt;/code&gt; or even &lt;code&gt;#col-left&lt;/code&gt;, we could use something like &lt;code&gt;#col-left:empty #col-right { float: none; width: 100% }&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #40020 (Customizer fails to load in Safari due to X-Origin Header mismatch) updated</title>
      
        <dc:creator>fullyint</dc:creator>

      <pubDate>Thu, 12 Apr 2018 07:21:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40020#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40020#comment:10/1523517715517660</guid>
      <description>&lt;h2 id="Summary"&gt;Summary&lt;/h2&gt;
&lt;p&gt;
Currently, if the Customizer's embed gives an &lt;code&gt;ALLOW-FROM&lt;/code&gt; header, it must be same domain/origin due to &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/39128" title="#39128: defect (bug): Customize: Preview fails to load when domain mapping in use ... (assigned)"&gt;#39128&lt;/a&gt; and any specified path has no effect (discussed below). Thus, switching to &lt;code&gt;SAMEORIGIN&lt;/code&gt; loses nothing. It achieves broader browser support (see added green boxes in table below).
&lt;/p&gt;
&lt;p&gt;
The path should probably remain absent from &lt;code&gt;frame-ancestors&lt;/code&gt;, due to browsers' inconsistent treatment. If there is ever a day of cross-domain Customizer embeds, &lt;code&gt;frame-ancestors&lt;/code&gt; can accept multiple &lt;code&gt;source&lt;/code&gt;s.
&lt;/p&gt;
&lt;h2 id="PathinALLOW-FROM"&gt;Path in &lt;code&gt;ALLOW-FROM&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;
It would be appealing to add the &lt;code&gt;path/to/customize.php&lt;/code&gt; specificity to &lt;code&gt;ALLOW-FROM&lt;/code&gt; but as you suspected, the path appears to be ignored. I find &lt;code&gt;ALLOW-FROM&lt;/code&gt; discussed only as some other origin, like an opposite to &lt;code&gt;SAMEORIGIN&lt;/code&gt;, never with a path. Also see this note from the &lt;a class="ext-link" href="https://tools.ietf.org/html/rfc7034#section-2.1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;X-Frame-Options spec&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
The meaning of the term "serialized-origin" is given in &lt;a class="ext-link" href="https://tools.ietf.org/html/rfc6454#section-7.1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;RFC6454&lt;/a&gt;... Any data beyond the domain address (i.e., any data after the "/" separator) is to be ignored."
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Perhaps the path specificity never worked but the perceived loss is limited because &lt;code&gt;ALLOW-FROM&lt;/code&gt; would only apply to IE 11 and other older browser versions. Most modern browsers support &lt;a class="ext-link" href="https://w3c.github.io/webappsec-csp/2/#frame-ancestors-and-frame-options"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;frame-ancestors&lt;/a&gt;.
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
If a resource has both policies, the &lt;code&gt;frame-ancestors&lt;/code&gt; policy SHOULD be enforced and the &lt;code&gt;X-Frame-Options&lt;/code&gt; policy SHOULD be ignored.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="Pathinframe-ancestors"&gt;Path in &lt;code&gt;frame-ancestors&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;
My impression is that browsers' implementation of &lt;code&gt;frame-ancestors&lt;/code&gt; has not settled on the treatment of paths. In my tests (see table below), Firefox and Edge seem to ignore the path. So long as the origin is correct, all paths succeed, e.g.,
&lt;/p&gt;
&lt;pre class="wiki"&gt;frame-ancestors https://example.com/nonexistent-path/
&lt;/pre&gt;&lt;p&gt;
On the other hand, it seems that &lt;em&gt;any&lt;/em&gt; path, even if correct, causes Chrome and Safari to block the embed.
&lt;/p&gt;
&lt;p&gt;
The fact that Firefox ignores the path in &lt;code&gt;frame-ancestors&lt;/code&gt; (embed succeeds) but Chrome evaluates the path in some way (embed fails) may be an example of &lt;a class="ext-link" href="https://bugzilla.mozilla.org/show_bug.cgi?id=1367531#c11"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;this discussion at Firefox&lt;/a&gt; for how to implement &lt;code&gt;frame-ancestors&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
It seems safest for &lt;code&gt;frame-ancestors&lt;/code&gt; to avoid paths until cross-browser treatment becomes more consistent.
&lt;/p&gt;
&lt;h2 id="Tests"&gt;Tests&lt;/h2&gt;
&lt;p&gt;
I did some informal manual testing related to &lt;code&gt;ALLOW-FROM&lt;/code&gt; and &lt;code&gt;frame-ancestors&lt;/code&gt;, their interaction, and the effect of adding a path to the &lt;code&gt;source&lt;/code&gt;:
&lt;/p&gt;
&lt;table class="wiki"&gt;
&lt;tr&gt;&lt;td style="text-align: center"&gt;    &lt;/td&gt;&lt;th style="text-align: center"&gt;  &lt;strong&gt;IE&lt;/strong&gt;  &lt;/th&gt;&lt;th style="text-align: center"&gt;  &lt;strong&gt;Edge&lt;/strong&gt;  &lt;/th&gt;&lt;th style="text-align: center"&gt;  &lt;strong&gt;Firefox&lt;/strong&gt;  &lt;/th&gt;&lt;th style="text-align: center"&gt;  &lt;strong&gt;Chrome&lt;/strong&gt;  &lt;/th&gt;&lt;th style="text-align: center"&gt;  &lt;strong&gt;Safari&lt;/strong&gt;
&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt; &lt;strong&gt;&lt;code&gt;ALLOW-FROM&lt;/code&gt; supported?&lt;/strong&gt; &lt;/th&gt;&lt;td style="text-align: center"&gt;  &lt;span style="color: white; background: #39b54a"&gt;_ Y _&lt;/span&gt;  &lt;/td&gt;&lt;td style="text-align: center"&gt;  &lt;span style="color: white; background: #39b54a"&gt;_ Y _&lt;/span&gt;  &lt;/td&gt;&lt;td style="text-align: center"&gt;  &lt;span style="color: white; background: #39b54a"&gt;_ Y _&lt;/span&gt;  &lt;/td&gt;&lt;td style="text-align: center"&gt;  &lt;span style="color: white; background: #c44230"&gt;_ N _&lt;/span&gt;  &lt;/td&gt;&lt;td style="text-align: center"&gt;  &lt;span style="color: white; background: #c44230"&gt;_ N _&lt;/span&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt; &lt;strong&gt;&lt;code&gt;SAMEORIGIN&lt;/code&gt; supported?&lt;/strong&gt; &lt;/th&gt;&lt;td style="text-align: center"&gt;  &lt;span style="color: white; background: #39b54a"&gt;_ Y _&lt;/span&gt;  &lt;/td&gt;&lt;td style="text-align: center"&gt;  &lt;span style="color: white; background: #39b54a"&gt;_ Y _&lt;/span&gt;  &lt;/td&gt;&lt;td style="text-align: center"&gt;  &lt;span style="color: white; background: #39b54a"&gt;_ Y _&lt;/span&gt;  &lt;/td&gt;&lt;td style="text-align: center"&gt;  &lt;span style="color: white; background: #39b54a"&gt;_ Y _&lt;/span&gt;  &lt;/td&gt;&lt;td style="text-align: center"&gt;  &lt;span style="color: white; background: #39b54a"&gt;_ Y _&lt;/span&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt; &lt;strong&gt;&lt;code&gt;frame-ancestors&lt;/code&gt; supported?&lt;/strong&gt; &lt;/th&gt;&lt;td style="text-align: center"&gt;  &lt;span style="color: white; background: #c44230"&gt;_ N _&lt;/span&gt;  &lt;/td&gt;&lt;td style="text-align: center"&gt;  &lt;span style="color: white; background: #39b54a"&gt;_ Y _&lt;/span&gt;  &lt;/td&gt;&lt;td style="text-align: center"&gt;  &lt;span style="color: white; background: #39b54a"&gt;_ Y _&lt;/span&gt;  &lt;/td&gt;&lt;td style="text-align: center"&gt;  &lt;span style="color: white; background: #39b54a"&gt;_ Y _&lt;/span&gt;  &lt;/td&gt;&lt;td style="text-align: center"&gt;  &lt;span style="color: white; background: #39b54a"&gt;_ Y _&lt;/span&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt; &lt;strong&gt;&lt;code&gt;frame-ancestors&lt;/code&gt; override &lt;code&gt;ALLOW-FROM&lt;/code&gt;?&lt;/strong&gt; &lt;/th&gt;&lt;td style="text-align: center"&gt;  n/a  &lt;/td&gt;&lt;td style="text-align: center"&gt;  &lt;span style="color: white; background: #39b54a"&gt;_ Y _&lt;/span&gt;  &lt;/td&gt;&lt;td style="text-align: center"&gt;  &lt;span style="color: white; background: #39b54a"&gt;_ Y _&lt;/span&gt;  &lt;/td&gt;&lt;td style="text-align: center"&gt;  &lt;span style="color: white; background: #39b54a"&gt;_ Y _&lt;/span&gt;  &lt;/td&gt;&lt;td style="text-align: center"&gt;  &lt;span style="color: white; background: #39b54a"&gt;_ Y _&lt;/span&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt; &lt;strong&gt;&lt;code&gt;ALLOW-FROM&lt;/code&gt; honors path?&lt;/strong&gt; &lt;/th&gt;&lt;td style="text-align: center"&gt;  &lt;span style="color: white; background: #c44230"&gt;_ N _&lt;/span&gt;  &lt;/td&gt;&lt;td style="text-align: center"&gt;  &lt;span style="color: white; background: #c44230"&gt;_ N _&lt;/span&gt;  &lt;/td&gt;&lt;td style="text-align: center"&gt;  &lt;span style="color: white; background: #c44230"&gt;_ N _&lt;/span&gt;  &lt;/td&gt;&lt;td style="text-align: center"&gt;  n/a  &lt;/td&gt;&lt;td style="text-align: center"&gt;  n/a
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt; &lt;strong&gt;when &lt;code&gt;frame-ancestors&lt;/code&gt;&lt;br /&gt;specifies a &lt;code&gt;source&lt;/code&gt; with a path&lt;/strong&gt; &lt;/th&gt;&lt;td style="text-align: center"&gt;  n/a  &lt;/td&gt;&lt;td style="text-align: center"&gt;  embed succeeds&lt;br /&gt;(path ignored)  &lt;/td&gt;&lt;td style="text-align: center"&gt;  embed succeeds&lt;br /&gt;(path ignored)  &lt;/td&gt;&lt;td style="text-align: center"&gt;  embed fails  &lt;/td&gt;&lt;td style="text-align: center"&gt;  embed fails
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt; &lt;strong&gt;browser version tested&lt;/strong&gt; &lt;/th&gt;&lt;td style="text-align: center"&gt;  11.371.16299.0  &lt;/td&gt;&lt;td style="text-align: center"&gt;  41.16299.371.0  &lt;/td&gt;&lt;td style="text-align: center"&gt;  65.0.3325.181  &lt;/td&gt;&lt;td style="text-align: center"&gt;  59.0.2  &lt;/td&gt;&lt;td style="text-align: center"&gt;  11605.1.33.1.3
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43546 (Add to the privacy tools UX a means to export personal data by ...) updated</title>
      
        <dc:creator>TZ Media</dc:creator>

      <pubDate>Thu, 12 Apr 2018 07:21:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43546#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43546#comment:10/1523517667639498</guid>
      <description>&lt;p&gt;
Great work, @allendav!
&lt;/p&gt;
&lt;p&gt;
I have a few thoughts regarding the possibility of adding additional output generators (as plugin), as we will need other (custom) output formats for some projects (e.g. XML output or a single PDF document instead of HTML.
&lt;/p&gt;
&lt;p&gt;
From how I understand your code, we would need to be able to
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Add additional action links to the items in the table, like "Download Personal Data as XML".
&lt;/li&gt;&lt;li&gt;Be able to use the HTML generation without saving it to a file directly (to further process it and save it in a different file format like PDF).
&lt;/li&gt;&lt;li&gt;Be able to easily add other output formats, by
&lt;ul&gt;&lt;li&gt;either making as much of the functionality - like generation of $export_data or the ajax loop from xfn.js - reusable as separate functions,
&lt;/li&gt;&lt;li&gt;or make the export generator aware of different output formats, like
&lt;ul&gt;&lt;li&gt;register possible export format generators - including the one form core that generates HTML/ZIP - via a filter hook,
&lt;/li&gt;&lt;li&gt;automate the generation of action links for each format to the items in the table,
&lt;/li&gt;&lt;li&gt;send the desired output format as handler in the AJAX request loop that triggers the report generation,
&lt;/li&gt;&lt;li&gt;and call the export generator that is registered for this handler to generate an output file (either a single file, or an archive)
&lt;ul&gt;&lt;li&gt;Question here: Could we refactor the zip file generation into a helper function that is reusable for all export generators?
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I know that this would require deep changes, but would it be possible to include this possibility one way or the other? I'd prefer the last approach as it is the most flexible one for plugin authors, but I could live with other approaches as well.
&lt;/p&gt;
&lt;p&gt;
Also I'd be willing to help implementing this if we can agree on an approach.
&lt;/p&gt;
&lt;p&gt;
EDIT: Another idea would be the possibility to add additional files to the zip file, so the user could get the HTML, and I could add the same data as XML, or in other formats, as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43742 (Add $_wp_admin_css_colors variable to front-end) created</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Thu, 12 Apr 2018 07:17:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43742</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43742/1523517463509806</guid>
      <description>&lt;p&gt;
I've developed a plugin that uses the admin colour scheme functionality.
&lt;/p&gt;
&lt;p&gt;
When a colour scheme is registered (using &lt;code&gt;wp_admin_css_color&lt;/code&gt;), it's added to the &lt;code&gt;$_wp_admin_css_colors&lt;/code&gt; variable. This is only accessible within the dashboard though so if you try and use that variable on the front-end, it returns &lt;code&gt;null&lt;/code&gt; (doesn't exist).
&lt;/p&gt;
&lt;p&gt;
Can this be made accessible on the front-end too?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #13372 (Separate Image sizes for different post types) updated</title>
      
        <dc:creator>galbaras</dc:creator>

      <pubDate>Thu, 12 Apr 2018 04:35:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13372#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13372#comment:22/1523507722399874</guid>
      <description>&lt;p&gt;
It may be better to not use post types, but allow plugin and theme developers to manage things via hooks and extra parameters, with old-style calls defaulting to "everything/everywhere".
&lt;/p&gt;
&lt;p&gt;
Images can have a new classification, which allows more than one selection. When uploaded, they can be designated "post image", "product image", etc.
&lt;/p&gt;
&lt;p&gt;
add_image_size() can be extended to accept an array of pre_registered designations, via a new function, say add_image_designation(), which accepts a name and a title.
&lt;/p&gt;
&lt;p&gt;
After an image is uploaded and classified, WordPress can generate the supposedly-correct thumbnails.
&lt;/p&gt;
&lt;p&gt;
Similarly, after editing the classification of an image, WordPress can adjust the thumbnails, possibly without ever deleting files.
&lt;/p&gt;
&lt;p&gt;
srcset handling can follow image classification.
&lt;/p&gt;
&lt;p&gt;
It is the responsibility of the developer and the content creator to use the correct images, but WordPress can help by allowing image selection by designation when embedding with Add Media.
&lt;/p&gt;
&lt;p&gt;
This can be made easier by linking content types with image designations, and then allowing only images matching the content type to be embedded.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43454 (Add UI elements to make the user aware of image geo data) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 12 Apr 2018 00:43:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43454#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43454#comment:10/1523493834414965</guid>
      <description>&lt;p&gt;
@allendav We had decided to close this one alongside &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9257" title="#9257: enhancement: EXIF GPS data (closed: maybelater)"&gt;#9257&lt;/a&gt; (which was deemed plugin territory for now). Without &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9257" title="#9257: enhancement: EXIF GPS data (closed: maybelater)"&gt;#9257&lt;/a&gt;, Core would be unaware of any EXIF GPS data.
&lt;/p&gt;
&lt;p&gt;
Are you advocating for a general notice in the media library? Or one that is displayed when an image is uploaded that actually contains EXIF GPS data? If the latter, we should reopen both tickets. Regardless of whether Core is aware of the EXIF GPS data, any image that is uploaded does potentially have that data since the original uploaded media file is not modified on upload.
&lt;/p&gt;
&lt;p&gt;
Just want to make sure we reopen the correct tickets for visibility!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43741.diff attached to Ticket #43741</title>
      
        <dc:creator>Karzin</dc:creator>

      <pubDate>Thu, 12 Apr 2018 00:43:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43741/43741.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43741/43741.diff/1523493832102525</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43454 (Add UI elements to make the user aware of image geo data) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Thu, 12 Apr 2018 00:31:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43454#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43454#comment:9/1523493077866746</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Since location data is personal data, and it is possible to correlate authors with the attachments they upload in the REST API, we at least need to warn administrators to include a warning in their site's privacy policy about EXIF GPS data in media.
&lt;/p&gt;
&lt;p&gt;
Even better though, we could warn users in the Media Library uploader that the image they uploaded contains EXIF GPS and the risks therein.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43741 (Improve media_sideload_image() image extensions detection) created</title>
      
        <dc:creator>Karzin</dc:creator>

      <pubDate>Thu, 12 Apr 2018 00:30:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43741</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43741/1523493044330843</guid>
      <description>&lt;p&gt;
&lt;strong&gt;media_sideload_image()&lt;/strong&gt; applies a pattern to the URL trying to detect image extensions.
&lt;/p&gt;
&lt;p&gt;
There are cases where Image URLs don't end on jpg, png or any other extensions.
They can be simply a number or any other weird urls, but they are actually just fine
&lt;a class="ext-link" href="https://crmall.generalshopping.com.br:8097/Api/store/image/bkxjNm5LU0RzQW5rdVNvUHZVSURkQT09"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://crmall.generalshopping.com.br:8097/Api/store/image/bkxjNm5LU0RzQW5rdVNvUHZVSURkQT09&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
So I think it would be a good idea trying to detect the image extensions on these cases, like this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nv"&gt;$matches&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$image_type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;exif_imagetype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$file&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$image_type&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$fileextension&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;image_type_to_extension&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$image_type&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="nv"&gt;$matches&lt;/span&gt;       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$fileextension&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WP_Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'image_sideload_failed'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Invalid image URL'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
It's been working on my tests pretty nice.
The only other thing I have to do in order to test such urls is turning reject_unsafe_urls to false, like this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'http_request_args'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$url&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'reject_unsafe_urls'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}),&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>newticket</category>
    </item>
   </channel>
</rss>