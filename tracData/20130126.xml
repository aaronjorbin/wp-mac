<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #23281 (Enhancement for comment_form(); allow styling the submit button) updated</title>
      
        <dc:creator>Danielx64</dc:creator>

      <pubDate>Sat, 26 Jan 2013 23:43:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23281#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23281#comment:4/1359243797097610</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23281#comment:3" title="Comment 3"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
No, &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23281/comment_form.diff" title="Attachment 'comment_form.diff' in Ticket #23281"&gt;comment_form.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23281/comment_form.diff" title="Download"&gt;​&lt;/a&gt; isn't a correct patch.
&lt;/p&gt;
&lt;p&gt;
Please take a look at &lt;a class="ext-link" href="http://make.wordpress.org/core/handbook/submitting-a-patch/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://make.wordpress.org/core/handbook/submitting-a-patch/&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Do you know how I can do this without svn? I do alot of my dev stuff on a server that never reach the internet. This time I used the diff tool that was in centos :'(
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>comment_form.diff attached to Ticket #23281</title>
      
        <dc:creator>Danielx64</dc:creator>

      <pubDate>Sat, 26 Jan 2013 23:41:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23281/comment_form.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23281/comment_form.diff/1359243668427447</guid>
      <description>&lt;p&gt;
Just make a patch for add class feature
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23298 (Initial gallery 'Link to' setting not applied) updated</title>
      
        <dc:creator>CBarrett123</dc:creator>

      <pubDate>Sat, 26 Jan 2013 23:38:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23298#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23298#comment:1/1359243525515446</guid>
      <description>&lt;p&gt;
I can confirm the bug reported by Pokes using Twelve Eleven with no plugins active.
If you generate a new Gallery using either freshly uploaded images, or existing images previously uploaded, and set the link to "Media File", it's dropping the link="file" rom teh shortcode. You end up with [gallery ids="1,2,3,4"].
&lt;/p&gt;
&lt;p&gt;
During the Gallery generation step, or when editing the gallery after saving, if you toggle from link to "Media File" to link to "Attachment Page" and then back to link to "Media File", now the correct short code of [gallery link="file" ids="1,2,3,4"] is generated.
&lt;/p&gt;
&lt;p&gt;
Cheers!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23291 (wp_mail should handle phpmailer exceptions instead of ignoring them) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Sat, 26 Jan 2013 23:36:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23291#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23291#comment:11/1359243375421980</guid>
      <description>&lt;p&gt;
Also, &lt;a class="ext-link" href="http://php.net/manual/en/language.operators.errorcontrol.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;set_error_handler() callbacks are still fired even when error suppression is used&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The errors wouldn't show up in the error_log, though, so that's still a problem for troubleshooting.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>1-25-2013 7-40-50 PM.png attached to Ticket #23298</title>
      
        <dc:creator>CBarrett123</dc:creator>

      <pubDate>Sat, 26 Jan 2013 23:33:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23298/1-25-2013%207-40-50%20PM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23298/1-25-2013%207-40-50%20PM.png/1359243225460355</guid>
      <description>&lt;p&gt;
Link to Attachment
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>1-25-2013 6-53-34 PM.png attached to Ticket #23298</title>
      
        <dc:creator>CBarrett123</dc:creator>

      <pubDate>Sat, 26 Jan 2013 23:33:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23298/1-25-2013%206-53-34%20PM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23298/1-25-2013%206-53-34%20PM.png/1359243189354854</guid>
      <description>&lt;p&gt;
Link to Media File
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23291 (wp_mail should handle phpmailer exceptions instead of ignoring them) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Sat, 26 Jan 2013 23:28:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23291#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23291#comment:10/1359242904576351</guid>
      <description>&lt;p&gt;
I don't really buy that set_error_handler() is hard to use, can you elaborate on that?
&lt;/p&gt;
&lt;p&gt;
I think bringing up suppressed errors is a very good point, though. It looks like 4 out of the 19 calls to wp_mail() in core suppress errors.
&lt;/p&gt;
&lt;p&gt;
To me that begs 2 questions,
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Why is it not used consistently? Are there reasons for suppressing it in some cases, or is it just the lack of an official policy that leads to different developer's preferences being implemented in different patches?
&lt;/li&gt;&lt;li&gt;Should error suppression be used at all? What's the case for it? I think it's reasonable to assume that production servers will have display_errors disabled, and that anyone with it enabled on a dev server would want to be aware of the errors.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
I'd propose getting rid of error suppression for all wp_mail() calls, so that the new trigger_error() calls in this patch can be relied upon.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23291 (wp_mail should handle phpmailer exceptions instead of ignoring them) updated</title>
      
        <dc:creator>bpetty</dc:creator>

      <pubDate>Sat, 26 Jan 2013 22:37:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23291#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23291#comment:9/1359239821199945</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23291#comment:8" title="Comment 8"&gt;mark-k&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Seems to me that returning WP_Error is the only real solution here, anything else will just be an hack around it. The only place in core which cares right now about the return value can be changed to expect either false or WP_Error so it still will be compatible with plugins which override wp_mail, and we are early enough in 3.6 cycle to let authors of plugins that use wp_mail know about the change and prepare for it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is not how compatibility is maintained in WordPress. This can't be changed, and that's just the way it is unfortunately. There are other perfectly acceptable solutions that remain backwards compatible anyway. Sure, it would have been nice if wp_mail() was originally designed to return WP_Error, but it wasn't, and it never will now (unless you want to start a discussion about changing the deprecation and API compatibility policies, but that's outside the scope of this issue).
&lt;/p&gt;
&lt;p&gt;
All that aside though, there's plenty of perfectly acceptable ways to validate an email address &lt;strong&gt;before&lt;/strong&gt; calling &lt;code&gt;wp_mail()&lt;/code&gt;, and I'm fairly certain most locations that call &lt;code&gt;wp_mail()&lt;/code&gt; do that already as any properly written code should when written for an application that doesn't support exceptions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23291 (wp_mail should handle phpmailer exceptions instead of ignoring them) updated</title>
      
        <dc:creator>mark-k</dc:creator>

      <pubDate>Sat, 26 Jan 2013 21:44:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23291#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23291#comment:8/1359236657213573</guid>
      <description>&lt;p&gt;
set_error_handler is just not very easy to use. It is probably not very known and you have to filter the errors to find the ones you are interested in.
&lt;/p&gt;
&lt;p&gt;
Actually not sure if triggering an error is good enough because many places suppress errors when calling wp_mail, and places which don't, might suddenly display unexpected errors.
&lt;/p&gt;
&lt;p&gt;
Seems to me that returning WP_Error is the only real solution here, anything else will just be an hack around it. The only place in core which cares right now about the return value can be changed to expect either false or WP_Error so it still will be compatible with plugins which override wp_mail, and we are early enough in 3.6 cycle to let authors of plugins that use wp_mail know about the change and prepare for it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22200 (Require users to set a site title) updated</title>
      
        <dc:creator>avreidy</dc:creator>

      <pubDate>Sat, 26 Jan 2013 20:43:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22200#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22200#comment:3/1359233006394651</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>options.php.diff attached to Ticket #22200</title>
      
        <dc:creator>avreidy</dc:creator>

      <pubDate>Sat, 26 Jan 2013 20:41:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22200/options.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22200/options.php.diff/1359232915531660</guid>
      <description>&lt;p&gt;
Updated to notify users that omitting a site title is not necessary if they simply want to hide it
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22975 (Remove deprecated jQuery methods from core to be safe for jQuery 1.9) updated</title>
      
        <dc:creator>Lwangaman</dc:creator>

      <pubDate>Sat, 26 Jan 2013 19:49:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22975#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22975#comment:27/1359229741516799</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
jQuery 1.9 has specifically deprecated the methods ".live()" and ".browser()" in favour of ".on()" and ".support()" respectively.
This breaks "wp-includes/js/admin-bar.js" (or "wp-includes/js/admin-bar.min.js") which makes use of the "$.browser()" method to target Mozilla. Hovering over admin bar items when using jQuery 1.9 results in these errors in the console:
Uncaught TypeError: Cannot read property 'mozilla' of undefined ---- admin-bar.min.js:1
It will be necessary to target the specific functionality of mozilla that is different from other browsers in order to use "$.support()".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15311 (dynamic image resize (on the fly) using already available functions) updated</title>
      
        <dc:creator>esauvisky</dc:creator>

      <pubDate>Sat, 26 Jan 2013 19:37:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15311#comment:80</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15311#comment:80/1359229033309469</guid>
      <description>&lt;p&gt;
Is it possible to apply &lt;em&gt;vt_resize&lt;/em&gt; automatically to every image that is displayed with lower dimensions than the original one?
&lt;/p&gt;
&lt;p&gt;
For example, I have a 500x500px image, but I've used it with &lt;em&gt;width:300px; height:300px&lt;/em&gt;. How can I automatically scale it without having to manually call &lt;em&gt;vt_resize&lt;/em&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23299 (Definition List in Editor) created</title>
      
        <dc:creator>gputignano</dc:creator>

      <pubDate>Sat, 26 Jan 2013 18:38:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23299</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23299/1359225492349525</guid>
      <description>&lt;p&gt;
After switch from Text to Visual and then from Visual to Text the formatting of the definition list is lost.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21509 (Enable XML-RPC by default and remove the option) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Sat, 26 Jan 2013 17:56:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21509#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21509#comment:17/1359222960950222</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23291 (wp_mail should handle phpmailer exceptions instead of ignoring them) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Sat, 26 Jan 2013 17:37:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23291#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23291#comment:7/1359221836552324</guid>
      <description>&lt;p&gt;
23291.diff pushes the error through PHP, so you can use &lt;a class="ext-link" href="http://us.php.net/manual/en/function.set-error-handler.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;set_error_handler( 'your-callback-function', E_USER_NOTICE )&lt;/a&gt; to catch it and do whatever you'd like.
&lt;/p&gt;
&lt;p&gt;
Adding an action on top of that would be add a bit of unnecessary overhead. It wouldn't be significant in-and-of-itself, but combined with the hundreds of other hooks already in WP, it can add up. I don't see any added benefit to an extra action over just hooking into PHP's error handling. Does anyone else?
&lt;/p&gt;
&lt;p&gt;
We may want to add some kind of ID to the error message so that it's easier to distinguish from other messages, though. e.g.,
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Notice: [wp_mail] Invalid address: first.last@ in /var/www/vhosts/example.com/httpdocs/wp-svn-trunk/wp-includes/pluggable.php on line 359
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
...instead of just
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Notice: Invalid address: first.last@ in /var/www/vhosts/example.com/httpdocs/wp-svn-trunk/wp-includes/pluggable.php on line 359
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thoughts on that?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18733 (Show revision number for post/pages in Revision list) updated</title>
      
        <dc:creator>midhund</dc:creator>

      <pubDate>Sat, 26 Jan 2013 17:31:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18733#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18733#comment:12/1359221485299882</guid>
      <description>&lt;p&gt;
So there was a discussion with @nacin,
&lt;/p&gt;
&lt;p&gt;
The revision id is unique in entire blog,
or
Unique in Post? then each post have revision 1, 2, 3, ...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16847 (Capability check fails for custom post type revision edit (&amp; ...) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sat, 26 Jan 2013 16:32:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16847#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16847#comment:14/1359217953969282</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7392 (Don't create new autosave revision if nothing has changed yet) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sat, 26 Jan 2013 16:31:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7392#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7392#comment:18/1359217914259971</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9843 (Duplicate autosave/revisions clutter the database) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sat, 26 Jan 2013 16:31:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9843#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9843#comment:14/1359217874778421</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19932 (Pass post ID to post revision field filter) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sat, 26 Jan 2013 16:29:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19932#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19932#comment:6/1359217796627833</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
looks good.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18733 (Show revision number for post/pages in Revision list) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sat, 26 Jan 2013 16:25:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18733#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18733#comment:11/1359217543594654</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
this ties right into the ui refresh.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7237 (Multiple clean_post_cache() calls when saving a post due to post revisions) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sat, 26 Jan 2013 16:21:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7237#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7237#comment:14/1359217278664517</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22289 (Filter to override WP_POST_REVISIONS (or define it later)) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sat, 26 Jan 2013 16:20:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22289#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22289#comment:10/1359217209340236</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18857 (get_plugin_page_hookname uses menu_title to construct subpage load-hooks) updated</title>
      
        <dc:creator>brasofilo</dc:creator>

      <pubDate>Sat, 26 Jan 2013 14:48:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18857#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18857#comment:5/1359211696885468</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18282 (Issue with admin page hierarchy in Menu admin) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Sat, 26 Jan 2013 13:18:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18282#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18282#comment:15/1359206284746105</guid>
      <description>&lt;p&gt;
This is essentially a visual bug - the hierarchy is not actually altered, and since nav menus specifically do not rely on the page hierarchy, nothing is broken beyond the visual. Yes, it is a bug and yes, it is frustrating, but it shouldn't be something that holds up a launch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16024 (Conditional Comments for JS) updated</title>
      
        <dc:creator>pauldewouters</dc:creator>

      <pubDate>Sat, 26 Jan 2013 12:17:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16024#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16024#comment:38/1359202650880157</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23291 (wp_mail should handle phpmailer exceptions instead of ignoring them) updated</title>
      
        <dc:creator>mark-k</dc:creator>

      <pubDate>Sat, 26 Jan 2013 12:07:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23291#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23291#comment:6/1359202039859039</guid>
      <description>&lt;p&gt;
In my case the error was at front end so option 2 would probably not have helped in diagnosing the problem.
&lt;/p&gt;
&lt;p&gt;
What about having an action/filter to be executed when there is an exception? This way if plugins will want to handle errors they will get a notification about them.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23298 (Initial gallery 'Link to' setting not applied) created</title>
      
        <dc:creator>pokes</dc:creator>

      <pubDate>Sat, 26 Jan 2013 11:55:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23298</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23298/1359201359578969</guid>
      <description>&lt;p&gt;
When inserting a new gallery in a post, the setting shown in the 'Link to' dropdown of the gallery settings is not applied. Changing the setting (even straight back to what it showed) causes it to be applied.
&lt;/p&gt;
&lt;p&gt;
To demonstrate/reproduce:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;New Post.
&lt;/li&gt;&lt;li&gt;Add Media.
&lt;/li&gt;&lt;li&gt;Create Gallery.
&lt;/li&gt;&lt;li&gt;Create a New Gallery.
&lt;/li&gt;&lt;li&gt;Under Gallery Settings observe but don't touch the 'Link to' setting.
&lt;/li&gt;&lt;li&gt;Insert Gallery.
&lt;/li&gt;&lt;li&gt;Resulting gallery shortcode has no link=file or link=post regardless of the 'Link to' setting.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23296 (3.6 - Edit Post, Invalid implode after Core-Update) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 26 Jan 2013 11:51:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23296#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23296#comment:4/1359201076529951</guid>
      <description>&lt;p&gt;
From which version?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23296 (3.6 - Edit Post, Invalid implode after Core-Update) updated</title>
      
        <dc:creator>hovida</dc:creator>

      <pubDate>Sat, 26 Jan 2013 11:46:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23296#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23296#comment:3/1359200767507882</guid>
      <description>&lt;p&gt;
That was an clean installation. No Plugins enabled, problem are directrly after Core update.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23291 (wp_mail should handle phpmailer exceptions instead of ignoring them) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Sat, 26 Jan 2013 08:56:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23291#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23291#comment:5/1359190573705325</guid>
      <description>&lt;p&gt;
Updated patch to use E_USER_NOTICE instead of E_USER_WARNING.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23291.diff attached to Ticket #23291</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Sat, 26 Jan 2013 08:55:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23291/23291.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23291/23291.diff/1359190520565949</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23243 (wp_mail() not working with "Name &lt;email&gt;" format in buggy PHP versions ...) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Sat, 26 Jan 2013 08:40:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23243#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23243#comment:2/1359189620977207</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/23291" title="#23291: enhancement: wp_mail should handle phpmailer exceptions instead of ignoring them (new)"&gt;#23291&lt;/a&gt; pushes any exceptions that PHPMailer throws to PHP's error_log. Since the bug was fixed in PHP two years ago, isn't triggered by core and only happens on Windows servers, then maybe the extra logging is enough?
&lt;/p&gt;
&lt;p&gt;
If an actual workaround is desired, I would think it'd be more appropriate to do that upstream, rather than in WP.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23291 (wp_mail should handle phpmailer exceptions instead of ignoring them) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 26 Jan 2013 08:34:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23291#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23291#comment:4/1359189244187150</guid>
      <description>&lt;p&gt;
I'd go for E_USER_NOTICE so as to prevent it being shown in production environments, but #3 was the first thing that came to my mind.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23291 (wp_mail should handle phpmailer exceptions instead of ignoring them) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Sat, 26 Jan 2013 08:20:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23291#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23291#comment:3/1359188414903277</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
WP doesn't use exceptions at all, so there's nothing for it to bubble up to. That also means there's no precedence in core for how to handle this.
&lt;/p&gt;
&lt;p&gt;
These are the ideas I had:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Return a WP_Error instead of false. That would break backwards compatibility, though.
&lt;/li&gt;&lt;li&gt;Issue an admin_notice. That's probably more visible than desired, though, and it wouldn't always be obvious when it was created or what event it was tied to. It could also be triggered by user A and seen by user B, leading to confusion.
&lt;/li&gt;&lt;li&gt;Push an entry to PHP's error_log. This seems like the best solution to me. One potential downside is that if display_errors is enabled, the warning will cause the page to crash with "Cannot modify header information - headers already sent". I think that's to be expected, though, and probably consistent with other warnings thrown elsewhere in core.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
I've added a patch that implements #3.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18857 (get_plugin_page_hookname uses menu_title to construct subpage load-hooks) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 26 Jan 2013 07:50:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18857#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18857#comment:4/1359186615300300</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18857 (get_plugin_page_hookname uses menu_title to construct subpage load-hooks) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 26 Jan 2013 07:49:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18857#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18857#comment:3/1359186551972601</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #18857,​23297 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 26 Jan 2013 07:48:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=18857%2C23297</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=18857%2C23297/1359186533173683</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/18857" title="#18857: defect (bug): get_plugin_page_hookname uses menu_title to construct subpage load-hooks (accepted)"&gt;#18857&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #18282 (Issue with admin page hierarchy in Menu admin) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 26 Jan 2013 07:09:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18282#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18282#comment:14/1359184190330034</guid>
      <description>&lt;p&gt;
I'm not actually looking into it yet, I've just removed the previous owner so that someone else could take over this ticket. Feel free to submit a patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23296 (3.6 - Edit Post, Invalid implode after Core-Update) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 26 Jan 2013 07:01:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23296#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23296#comment:2/1359183681093058</guid>
      <description>&lt;p&gt;
Can you reproduce the issue on a clean install (with Twenty Twelve or Twenty Eleven theme activated and all plugins disabled)?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23296 (3.6 - Edit Post, Invalid implode after Core-Update) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 26 Jan 2013 06:59:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23296#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23296#comment:1/1359183567186119</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've disabled the mbstring extension on my install to force the compat version to run instead, but still could not reproduce the issue.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;mb_substr()&lt;/code&gt; is called via &lt;code&gt;wp_html_excerpt()&lt;/code&gt; for the blog name in Toolbar. If the blog name is empty, the host name is used instead: &lt;br /&gt;
&lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/tags/3.5.1/wp-includes/admin-bar.php#L219"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/browser/tags/3.5.1/wp-includes/admin-bar.php#L219&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
What's the value of &lt;code&gt;$blogname&lt;/code&gt; in your case?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16215 (Post Revision history displays the incorrect author) updated</title>
      
        <dc:creator>mdawaffe</dc:creator>

      <pubDate>Sat, 26 Jan 2013 06:01:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16215#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16215#comment:26/1359180100214385</guid>
      <description>&lt;p&gt;
Cool.  Let's work on one bug at a time.  Smaller, focused patches will move forward more quickly.
&lt;/p&gt;
&lt;p&gt;
The most important thing to fix is the revisions' authorship.  Once we have that done, we can look at any UI/UX issues.
&lt;/p&gt;
&lt;p&gt;
I'm working on a patch that moves the revision version data to post_name.  We already take that field over for revisions.
&lt;/p&gt;
&lt;p&gt;
The patch also takes a different approach in displaying the correct author (one that won't poison any persistant caches), and will have a way to upgrade each revision row.  I'm not yet sure when we should call that upgrade function.
&lt;/p&gt;
&lt;p&gt;
I'll get the patch up this weekend or Monday.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #22990,​23274 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 26 Jan 2013 05:59:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=22990%2C23274</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=22990%2C23274/1359179959482294</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22990" title="#22990: enhancement: Edit custom image sizes (closed: duplicate)"&gt;#22990&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #22896 (Prevent plugins from overriding jQuery in the admin) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sat, 26 Jan 2013 05:23:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22896#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22896#comment:40/1359177834479426</guid>
      <description>&lt;p&gt;
brilliant, patient, thoughtful discussion! now lets get this patch committed!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7237 (Multiple clean_post_cache() calls when saving a post due to post revisions) updated</title>
      
        <dc:creator>ethitter</dc:creator>

      <pubDate>Sat, 26 Jan 2013 05:17:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7237#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7237#comment:13/1359177448394460</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9843 (Duplicate autosave/revisions clutter the database) updated</title>
      
        <dc:creator>ethitter</dc:creator>

      <pubDate>Sat, 26 Jan 2013 05:17:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9843#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9843#comment:13/1359177442276528</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18733 (Show revision number for post/pages in Revision list) updated</title>
      
        <dc:creator>ethitter</dc:creator>

      <pubDate>Sat, 26 Jan 2013 05:17:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18733#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18733#comment:10/1359177437308372</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20982 (Restoring post revisions does not update _edit_last) updated</title>
      
        <dc:creator>ethitter</dc:creator>

      <pubDate>Sat, 26 Jan 2013 05:17:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20982#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20982#comment:5/1359177431815480</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16847 (Capability check fails for custom post type revision edit (&amp; ...) updated</title>
      
        <dc:creator>ethitter</dc:creator>

      <pubDate>Sat, 26 Jan 2013 05:17:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16847#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16847#comment:13/1359177426479498</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16215 (Post Revision history displays the incorrect author) updated</title>
      
        <dc:creator>ethitter</dc:creator>

      <pubDate>Sat, 26 Jan 2013 05:17:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16215#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16215#comment:25/1359177420732758</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19932 (Pass post ID to post revision field filter) updated</title>
      
        <dc:creator>ethitter</dc:creator>

      <pubDate>Sat, 26 Jan 2013 05:12:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19932#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19932#comment:5/1359177163511949</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In &lt;a class="ext-link" href="http://core.trac.wordpress.org/attachment/ticket/19932/19932.1.patch"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;19932.1.patch&lt;/a&gt;, I refreshed the patch and added the entire revision to the third instance of the filter. I also added the revision side to the uses, or an empty string when not in a &lt;code&gt;diff&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19932.1.patch attached to Ticket #19932</title>
      
        <dc:creator>ethitter</dc:creator>

      <pubDate>Sat, 26 Jan 2013 05:03:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19932/19932.1.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19932/19932.1.patch/1359176604426337</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22289 (Filter to override WP_POST_REVISIONS (or define it later)) updated</title>
      
        <dc:creator>ethitter</dc:creator>

      <pubDate>Sat, 26 Jan 2013 04:32:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22289#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22289#comment:9/1359174770095072</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
As &lt;a class="ext-link" href="http://core.trac.wordpress.org/attachment/ticket/22289/22289.patch"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;22289.patch&lt;/a&gt; demonstrates, there are a variety of places where &lt;code&gt;WP_POST_REVISIONS&lt;/code&gt; is used, and the data that is available and useful in each situation varies. As such, I opted to use &lt;code&gt;compact()&lt;/code&gt; to ensure that a single filter is available, context about the filter calls is provided, and whatever data is available in each context is passed as well.
&lt;/p&gt;
&lt;p&gt;
From call to call, the &lt;code&gt;wp_post_revisions&lt;/code&gt; filter will always provide a &lt;code&gt;context&lt;/code&gt; array key in the additional data it passes, and a full post object is generally available. Beyond that, consistency is lost. In XMLRPC calls, it might be useful to know the username or blog ID of the request, whereas uses in &lt;code&gt;revisions.php&lt;/code&gt; can call for the post, the current revision, or the two revisions being compared.
&lt;/p&gt;
&lt;p&gt;
For what it's worth, I also prepared a patch that uses a different filter in each of the three files impacted by this patch, but that seemed like more of a pain for users.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22289 (Filter to override WP_POST_REVISIONS (or define it later)) updated</title>
      
        <dc:creator>ethitter</dc:creator>

      <pubDate>Sat, 26 Jan 2013 04:26:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22289#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22289#comment:8/1359174373730644</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22289#comment:7" title="Comment 7"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I've thought about this for a long time now. I think this ought to be post type specific.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I've been working on this for a bit now, and post-type-specific revision values will be possible, but I haven't made any changes that explicitly do so (yet).
&lt;/p&gt;
&lt;p&gt;
There are a few uses of &lt;code&gt;WP_POST_REVISIONS&lt;/code&gt;, such as those in &lt;code&gt;wp-includes/post.php&lt;/code&gt;, where only a post ID is available. I don't think it's a great idea to move the &lt;code&gt;get_post()&lt;/code&gt; calls in those cases, since as is we bail beforehand if someone sets the constant's value to &lt;code&gt;false&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18282 (Issue with admin page hierarchy in Menu admin) updated</title>
      
        <dc:creator>energy0m</dc:creator>

      <pubDate>Sat, 26 Jan 2013 04:22:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18282#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18282#comment:13/1359174172288453</guid>
      <description>&lt;p&gt;
How can I help him when I don't know enough about PHP to resolve the problem?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>22289.patch attached to Ticket #22289</title>
      
        <dc:creator>ethitter</dc:creator>

      <pubDate>Sat, 26 Jan 2013 04:21:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22289/22289.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22289/22289.patch/1359174061208521</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22289 (Filter to override WP_POST_REVISIONS (or define it later)) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 26 Jan 2013 04:08:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22289#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22289#comment:7/1359173303725640</guid>
      <description>&lt;p&gt;
I've thought about this for a long time now. I think this ought to be post type specific. You may care about lots of revisions for a fast-edited post, but you may care less about pages. Though, I'm thinking more about individual post types wanting control over this.
&lt;/p&gt;
&lt;p&gt;
The API will probably look very similar to another thing I'd like to see — post type specific trash durations.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23119 (UX Improvements to nav-menus.php) updated</title>
      
        <dc:creator>lessbloat</dc:creator>

      <pubDate>Sat, 26 Jan 2013 02:04:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23119#comment:160</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23119#comment:160/1359165883641562</guid>
      <description>&lt;p&gt;
Some updated concepts posted here: &lt;a class="ext-link" href="http://make.wordpress.org/core/2013/01/23/for-tomorrows-menu-office-hours-i-only/#comment-7777"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://make.wordpress.org/core/2013/01/23/for-tomorrows-menu-office-hours-i-only/#comment-7777&lt;/a&gt; based on our discussion Thursday.
&lt;/p&gt;
&lt;p&gt;
Please leave feedback on that thread. Thanks! :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22289 (Filter to override WP_POST_REVISIONS (or define it later)) updated</title>
      
        <dc:creator>ethitter</dc:creator>

      <pubDate>Sat, 26 Jan 2013 01:48:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22289#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22289#comment:6/1359164906734083</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23295 (Improved login expiration warning) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Sat, 26 Jan 2013 01:44:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23295#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23295#comment:5/1359164676523533</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>current_screen-WPLANG.png attached to Ticket #23297</title>
      
        <dc:creator>brasofilo</dc:creator>

      <pubDate>Sat, 26 Jan 2013 01:19:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23297/current_screen-WPLANG.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23297/current_screen-WPLANG.png/1359163170798371</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23297 (Translated $hook_suffix) created</title>
      
        <dc:creator>brasofilo</dc:creator>

      <pubDate>Sat, 26 Jan 2013 01:14:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23297</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23297/1359162876376191</guid>
      <description>&lt;p&gt;
Depending on WPLANG, I'm getting a different &lt;code&gt;$hook_suffix&lt;/code&gt; / &lt;code&gt;$current_screen-&amp;gt;base&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
I traced the origin to the function &lt;code&gt;get_plugin_page_hookname()&lt;/code&gt; in &lt;code&gt;/wp-admin/includes/plugin.php&lt;/code&gt;, but can't see a solution.
&lt;/p&gt;
&lt;p&gt;
Experiencing this using the plugin Advanced Custom Fields. I'm trying to hook in the plugin page and just discovered this issue, one would expect this kind of slug not to be translated.
&lt;/p&gt;
&lt;p&gt;
&lt;sub&gt;(attachments, &lt;code&gt;$current_screen&lt;/code&gt; object with default WPLANG and defined as pt_BR)&lt;/sub&gt;
&lt;/p&gt;
&lt;p&gt;
Only found refence to this in Ticket: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8246" title="#8246: defect (bug): screen_meta and plugins and columns and 2.7beta3 ??? (closed: fixed)"&gt;#8246&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #4010 (Add Image Importing to the Blogger Importer) updated</title>
      
        <dc:creator>Workshopshed</dc:creator>

      <pubDate>Sat, 26 Jan 2013 00:34:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4010#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4010#comment:18/1359160490914585</guid>
      <description>&lt;p&gt;
False positive issue should be fixed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23295 (Improved login expiration warning) updated</title>
      
        <dc:creator>mbijon</dc:creator>

      <pubDate>Fri, 25 Jan 2013 23:59:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23295#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23295#comment:4/1359158358634327</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7392 (Don't create new autosave revision if nothing has changed yet) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Jan 2013 23:55:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7392#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7392#comment:17/1359158130466046</guid>
      <description>&lt;p&gt;
This is also something we noticed while doing &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22687" title="#22687: defect (bug): auto-drafts are improperly stored as the first revision (closed: fixed)"&gt;#22687&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23296 (3.6 - Edit Post, Invalid implode after Core-Update) created</title>
      
        <dc:creator>hovida</dc:creator>

      <pubDate>Fri, 25 Jan 2013 23:48:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23296</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23296/1359157731869146</guid>
      <description>&lt;p&gt;
&lt;strong&gt;Error:&lt;/strong&gt; implode(): Invalid arguments passed
&lt;/p&gt;
&lt;p&gt;
The implode function have invalid Arguments.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;URL:&lt;/strong&gt; /wp-admin/edit.php
&lt;br /&gt;&lt;strong&gt;HTTP referrer:&lt;/strong&gt; &lt;a class="ext-link" href="http://adrean-test.eatserver.nl/wp-admin/update-core.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://adrean-test.eatserver.nl/wp-admin/update-core.php&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;FIX (wp-includes/compat.php - Line 32):&lt;/strong&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;return ($chars  ? implode( '', $chars ) : array());
&lt;/pre&gt;&lt;p&gt;
&lt;strong&gt;Stacktrace:&lt;/strong&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;in implode called at /www/htdocs-test/wp-includes/compat.php (32)
in _mb_substr called at /www/htdocs-test/wp-includes/compat.php (18)
in mb_substr called at /www/htdocs-test/wp-includes/formatting.php (3096)
in wp_html_excerpt called at /www/htdocs-test/wp-includes/admin-bar.php (230)
in wp_admin_bar_site_menu called at ? (?)
in call_user_func_array called at /www/htdocs-test/wp-includes/plugin.php (487)
in do_action_ref_array called at /www/htdocs-test/wp-includes/admin-bar.php (58)
in wp_admin_bar_render called at ? (?)
in call_user_func_array called at /www/htdocs-test/wp-includes/plugin.php (406)
in do_action called at /www/htdocs-test/wp-admin/admin-header.php (113)
in require_once called at /www/htdocs-test/wp-admin/edit.php (220)
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #4010 (Add Image Importing to the Blogger Importer) updated</title>
      
        <dc:creator>Workshopshed</dc:creator>

      <pubDate>Fri, 25 Jan 2013 23:46:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4010#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4010#comment:17/1359157586268140</guid>
      <description>&lt;p&gt;
Javascript has been moved to external file and rendering of table is now done by WP class WP_List_Table so the importer now looks more like other admin screens. The progress bars are now done using JQuery.UI.Progressbar and we get a count of the images processed. Turn of post revisions in the loading process. Importer can be re-run without getting duplicates. Have added a refresh button so you can see if you've had more updates since you last imported.
&lt;/p&gt;
&lt;p&gt;
Still getting false positives on files that are not actually images.
&lt;/p&gt;
&lt;p&gt;
My false positive test is a wikipedia page which although having a .png extention is actually a HTML page and hence we don't want to download it.
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;a href="http://en.wikipedia.org/wiki/File:Centrifugal_governor.png"&amp;gt;&amp;lt;img src="suitablelocalimage.png"&amp;gt;&amp;lt;/a&amp;gt;
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23295 (Improved login expiration warning) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 25 Jan 2013 23:29:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23295#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23295#comment:3/1359156558203043</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
We can use the new Heartbeat API from JS to request time left to cookies expiration, or on the PHP side, send notification to the browser one hour before.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23295 (Improved login expiration warning) updated</title>
      
        <dc:creator>dh-shredder</dc:creator>

      <pubDate>Fri, 25 Jan 2013 23:05:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23295#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23295#comment:2/1359155146387304</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23295 (Improved login expiration warning) updated</title>
      
        <dc:creator>mintindeed</dc:creator>

      <pubDate>Fri, 25 Jan 2013 22:50:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23295#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23295#comment:1/1359154215126593</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23295 (Improved login expiration warning) created</title>
      
        <dc:creator>mintindeed</dc:creator>

      <pubDate>Fri, 25 Jan 2013 22:49:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23295</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23295/1359154185649289</guid>
      <description>&lt;p&gt;
The goal here is to improve the user experience when your login has / will expire, as discussed in &lt;a class="ext-link" href="http://make.wordpress.org/core/2013/01/07/wordpress-3-6-autosave-and-post-locking/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress 3.6: Autosave and Post Locking&lt;/a&gt; and the &lt;a class="ext-link" href="http://make.wordpress.org/core/2013/01/25/agenda-for-todays-autosave-and-post-locking-team/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;autosave and post locking team meeting in IRC&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The suggested tactic is to integrate the &lt;a class="ext-link" href="https://github.com/Penske-Media-Corp/pmc-post-savior/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PMC Post Savior&lt;/a&gt; plugin into core.  That part should be pretty straightforward.
&lt;/p&gt;
&lt;p&gt;
I think 3 valuable enhancements that are on the plugin's roadmap, but not yet complete would be:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Alert properly on failed requests and lost connectivity.  If my internet connection has gone down and I'm still working, I should be alerted that I'm "Working offline" and my changes aren't being automatically saved.  I don't think this should be a blocking UI, but it should be obvious.
&lt;/li&gt;&lt;li&gt;Block publish/save until login has been verified.  Polling duration can be decreased (or maybe even done away with entirely) if we block the Publish/Save/etc actions until we've verified the user's cookie.
&lt;/li&gt;&lt;li&gt;Pre-emptive notification.  When approaching the user's login cookie expiration time, say 1 hour before, display a message and allow the user to extend their login.  For example, how banking sites notify you when you've been inactive too long and they're about to log you out.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18282 (Issue with admin page hierarchy in Menu admin) updated</title>
      
        <dc:creator>Marventus</dc:creator>

      <pubDate>Fri, 25 Jan 2013 22:42:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18282#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18282#comment:12/1359153762418381</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@energy0m: the issue will be resolved when... someone takes the time to resolve it. It seems Sergey is looking into it, but if you are in a rush, I suggest you contact him and - here's a crazy idea! - offer him to help. In the meantime, I can only suggest you take a chill pill and read up on what Open Source is all about: &lt;a class="ext-link" href="http://en.wikipedia.org/wiki/Open_source"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://en.wikipedia.org/wiki/Open_source&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23294 (Using "OR" in 'meta_query' negates the "NOT EXISTS" compare.) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Fri, 25 Jan 2013 22:36:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23294#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23294#comment:2/1359153395290531</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #23268,​23294 batch updated</title>
      
        <dc:creator>hereswhatidid</dc:creator>

      <pubDate>Fri, 25 Jan 2013 22:33:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=23268%2C23294</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=23268%2C23294/1359153182421288</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23268" title="#23268: defect (bug): NOT EXISTS meta query with OR relation (closed: fixed)"&gt;#23268&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #23294 (Using "OR" in 'meta_query' negates the "NOT EXISTS" compare.) created</title>
      
        <dc:creator>hereswhatidid</dc:creator>

      <pubDate>Fri, 25 Jan 2013 22:31:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23294</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23294/1359153093002897</guid>
      <description>&lt;p&gt;
When using the "NOT EXISTS" compare within 'meta_query' to look for undefined custom fields if I also add in a secondary 'OR' query, the entire query behaves as if I was just checking for "EXISTS".  The following code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;'meta_query' =&amp;gt; array(
  'relation' =&amp;gt; 'OR',
  array(
    'key' =&amp;gt; 'status',
    'compare' =&amp;gt; 'NOT EXISTS',
  ),
  array(
    'key' =&amp;gt; 'status',
    'value' =&amp;gt; 'new',
    'compare' =&amp;gt; '=',
  ),
);
&lt;/pre&gt;&lt;p&gt;
will return any post that has a value set for the "status" custom field.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18282 (Issue with admin page hierarchy in Menu admin) updated</title>
      
        <dc:creator>energy0m</dc:creator>

      <pubDate>Fri, 25 Jan 2013 22:22:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18282#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18282#comment:11/1359152577564910</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
When is this ticket going to be resolved? is there a patch? This is core functionality keeping my project from launching which is over 18months old. not cool. I can put in pages manually but my client cant manage them and as it turns out they have a very deep sitemap to place in the menu's section.
&lt;/p&gt;
&lt;p&gt;
so again.. when is this to be resolved?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23274 (Use image crop on specific custom size) updated</title>
      
        <dc:creator>WraithKenny</dc:creator>

      <pubDate>Fri, 25 Jan 2013 21:55:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23274#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23274#comment:6/1359150916584172</guid>
      <description>&lt;p&gt;
Unless this feature is already actually in, and I didn't notice, and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19889" title="#19889: defect (bug): Image Editor doesn't apply changes to custom image sizes (closed: fixed)"&gt;#19889&lt;/a&gt; is hiding it. In which this ticket is a dup bug. In that case my bad.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23274 (Use image crop on specific custom size) reopened</title>
      
        <dc:creator>WraithKenny</dc:creator>

      <pubDate>Fri, 25 Jan 2013 21:49:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23274#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23274#comment:5/1359150579902972</guid>
      <description>&lt;p&gt;
Aside from the bug on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19889" title="#19889: defect (bug): Image Editor doesn't apply changes to custom image sizes (closed: fixed)"&gt;#19889&lt;/a&gt; blocking the enhancement on this ticket, I don't think it's a duplicate. The comments on that ticket say that this feature request isn't in scope of that ticket (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19889" title="#19889: defect (bug): Image Editor doesn't apply changes to custom image sizes (closed: fixed)"&gt;#19889&lt;/a&gt;) and asked for a new ticket for the enhancement...
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #23293 (wpColorPicker not working in widgets) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Fri, 25 Jan 2013 21:49:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23293#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23293#comment:6/1359150555552640</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23293 (wpColorPicker not working in widgets) closed</title>
      
        <dc:creator>mattwiebe</dc:creator>

      <pubDate>Fri, 25 Jan 2013 21:34:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23293#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23293#comment:5/1359149668189909</guid>
      <description>invalid: &lt;p&gt;
This is an implementation issue, not a &lt;code&gt;wpColorPicker&lt;/code&gt; issue. It's not magic, it has to be called on the right element at the right time. You could:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Put a &lt;code&gt;script&lt;/code&gt; element inline inside the widget's &lt;code&gt;widget&lt;/code&gt; method, referencing some unique id that you give the text &lt;code&gt;input&lt;/code&gt; that you want to turn into a &lt;code&gt;wpColorPicker&lt;/code&gt; instance. A bit ugly, but it'll work.
&lt;/li&gt;&lt;li&gt;If inline code makes you twitch, the cleaner version would go something like:
&lt;/li&gt;&lt;/ol&gt;&lt;pre class="wiki"&gt;jQuery('#widgets-right .widgets-sortables').on('sortstop', function(event,ui){
    // run js after widgets are dropped. ui.item contains the dropped item.
    // note that the dropped item could just as easily be a reordering rather
    // than a new widget. Plan your logic accordingly.
});
&lt;/pre&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #23293 (wpColorPicker not working in widgets) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 25 Jan 2013 21:32:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23293#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23293#comment:4/1359149551261770</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22363 (Accents in attachment filenames should be sanitized) updated</title>
      
        <dc:creator>tar.gz</dc:creator>

      <pubDate>Fri, 25 Jan 2013 20:58:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22363#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22363#comment:16/1359147523312851</guid>
      <description>&lt;p&gt;
Some more information after further research:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The same issue obviously appears for any type of attachment, such as a PDF that would be linked from within a post. In Safari, linking to a PDF file with diacritics will lead to the 404 page.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;On WordPress.com, a solution has been implemented: when uploading the "moiré-pättern.png" file from above, it gets renamed into "mc3b8irecc81-pacc88ttern.png". So there is some sanitization in place, which is lacking in WordPress.org. And it works in OSX.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Here are two more links from support forums, showing how this issue affects users around the world:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://discussions.apple.com/thread/4381117"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://discussions.apple.com/thread/4381117&lt;/a&gt; (has some good info!)
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://wordpress.org/support/topic/uploaded-image-with-accents-in-name-image-dont-show-in-safari-6?replies=5"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/uploaded-image-with-accents-in-name-image-dont-show-in-safari-6?replies=5&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
All this testing actually leads me to think that I should open another ticket, not about &lt;em&gt;renaming&lt;/em&gt; the files, but about generating &lt;em&gt;URL-encoded links&lt;/em&gt; when embedding files into a post (or generating galleries with the shortcode). According to &lt;a class="ext-link" href="http://tools.ietf.org/html/rfc3986#page-16"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;RFC 3986&lt;/a&gt; (URI Generic Syntax), accented characters should be percent-encoded. I guess the simple solution would be to cleanse those filenames with the &lt;a class="ext-link" href="http://php.net/rawurlencode"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;rawurlencode()&lt;/a&gt; PHP function when generating the link.
&lt;/p&gt;
&lt;p&gt;
With that strategy, we would have a pretty good fix, even without touching the upload / file renaming process.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23230 (Change hyphen in front of "Draft" to em dash) updated</title>
      
        <dc:creator>kkalvaa</dc:creator>

      <pubDate>Fri, 25 Jan 2013 20:08:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23230#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23230#comment:6/1359144480219625</guid>
      <description>&lt;p&gt;
Regardless of whether it is a hyphen or minus it should still be a dash there. Again, ref wikipedia.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23230 (Change hyphen in front of "Draft" to em dash) updated</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Fri, 25 Jan 2013 20:05:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23230#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23230#comment:5/1359144321411505</guid>
      <description>&lt;p&gt;
How do you know this is a hyphen or a minus sign?
&lt;/p&gt;
&lt;p&gt;
1: -
2: -
&lt;/p&gt;
&lt;p&gt;
the are the same
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23230 (Change hyphen in front of "Draft" to em dash) updated</title>
      
        <dc:creator>kkalvaa</dc:creator>

      <pubDate>Fri, 25 Jan 2013 19:56:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23230#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23230#comment:4/1359143794883133</guid>
      <description>&lt;p&gt;
It should be an em dash because it is typographically correct in English (but an en dash would be correct in other languages). It should not be a hyphen because it not joining words or letters inside a word. A hyphen is not a dash, it is punctuation, for everything else a dash should be used. That's my reasoning.
&lt;/p&gt;
&lt;p&gt;
Ref: &lt;a class="ext-link" href="http://en.wikipedia.org/wiki/Dash"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://en.wikipedia.org/wiki/Dash&lt;/a&gt; and &lt;a class="ext-link" href="http://www.smashingmagazine.com/2011/08/15/mind-your-en-and-em-dashes-typographic-etiquette/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.smashingmagazine.com/2011/08/15/mind-your-en-and-em-dashes-typographic-etiquette/&lt;/a&gt; (plus a ton of typographical tradition and research)
&lt;/p&gt;
&lt;p&gt;
Personally I prefer the en dash, I find the em dash a tad too long, but that's how English typography is.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23187 (esc_url() fails if the URL's scheme's case does not match the allowed ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Jan 2013 19:29:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23187#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23187#comment:10/1359142175563356</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23187 (esc_url() fails if the URL's scheme's case does not match the allowed ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Jan 2013 19:28:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23187#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23187#comment:9/1359142128534714</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23348" title="Treat URL schemes as case insensitive when sanitizing them in ..."&gt;23348&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Treat URL schemes as case insensitive when sanitizing them in esc_url().&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23303" title="Treat URL schemes as case insensitive when sanitizing them in ..."&gt;[23303]&lt;/a&gt; to the 3.5 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
props mdawaffe.&lt;br /&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23187" title="#23187: defect (bug): esc_url() fails if the URL's scheme's case does not match the allowed ... (closed: fixed)"&gt;#23187&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [23348]: Treat URL schemes as case insensitive when sanitizing them in ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Jan 2013 19:28:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/23348</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/23348/1359142127590931</guid>
      <description>&lt;p&gt;
Treat URL schemes as case insensitive when sanitizing them in esc_url().
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23303" title="Treat URL schemes as case insensitive when sanitizing them in ..."&gt;[23303]&lt;/a&gt; to the 3.5 branch.
&lt;/p&gt;
&lt;p&gt;
props mdawaffe.
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23187" title="#23187: defect (bug): esc_url() fails if the URL's scheme's case does not match the allowed ... (closed: fixed)"&gt;#23187&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [23347]: The 3.5 branch is now 3.5.2-alpha.  </title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Jan 2013 19:28:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/23347</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/23347/1359142089275222</guid>
      <description>&lt;p&gt;
The 3.5 branch is now 3.5.2-alpha.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #23230 (Change hyphen in front of "Draft" to em dash) updated</title>
      
        <dc:creator>aaronholbrook</dc:creator>

      <pubDate>Fri, 25 Jan 2013 18:22:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23230#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23230#comment:3/1359138125784943</guid>
      <description>&lt;p&gt;
Why should it be an em dash instead of a hyphen? What reasoning do you have for this change?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15955 (move_uploaded_file mangles non-ascii characters on Windows platforms) updated</title>
      
        <dc:creator>Perepandel</dc:creator>

      <pubDate>Fri, 25 Jan 2013 17:51:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15955#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15955#comment:23/1359136269169448</guid>
      <description>&lt;p&gt;
I've discovered this patch has a side effect after applying it to another of my sites: my theme stopped displaying featured images of size 'thumbnail', although it was specified in the theme's code, thumbnails for the proper sizes were still being generated and it was working properly until then. I disabled the plugin and voilà - it works again. I suspect it has todo something with autfw_generate_attachment_metadata($metadata, $attachment_id) and autfw_update_attachment_metadata($metadata) but need more time to fix it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23096 (Provide callback before setting state of the editor media manager) updated</title>
      
        <dc:creator>husobj</dc:creator>

      <pubDate>Fri, 25 Jan 2013 16:54:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23096#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23096#comment:5/1359132843705317</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23293 (wpColorPicker not working in widgets) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 16:47:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23293#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23293#comment:3/1359132462876539</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23293 (wpColorPicker not working in widgets) updated</title>
      
        <dc:creator>johnstonphilip</dc:creator>

      <pubDate>Fri, 25 Jan 2013 16:37:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23293#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23293#comment:2/1359131834636897</guid>
      <description>&lt;p&gt;
Ah good call. Yes .on() would work. I tested it with other jquery elements in my widget and they work when first added. The same should be applied to wpColorPicker.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23148 (Add hook in wp_ajax_save_attachment for additional attachment fields) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Fri, 25 Jan 2013 16:36:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23148#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23148#comment:9/1359131772910807</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23096 (Provide callback before setting state of the editor media manager) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Fri, 25 Jan 2013 16:35:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23096#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23096#comment:4/1359131748879898</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
WANT / NEED. Caps on purpose.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16847 (Capability check fails for custom post type revision edit (&amp; ...) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 25 Jan 2013 16:35:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16847#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16847#comment:12/1359131715200852</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>16847.diff attached to Ticket #16847</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 25 Jan 2013 16:34:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16847/16847.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16847/16847.diff/1359131679586301</guid>
      <description>&lt;p&gt;
match cap checks in revisions to cap check used in edit
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16847 (Capability check fails for custom post type revision edit (&amp; ...) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 25 Jan 2013 16:34:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16847#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16847#comment:11/1359131645502167</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
i have been re-reading the ticket again trying to understand it. the root of the issue is that the edit screen makes a different check for capabilities before allowing access than the revisions review screen.
&lt;/p&gt;
&lt;p&gt;
its pointed out above, but worth repeating with current links --
&lt;/p&gt;
&lt;p&gt;
edit.php checks &lt;code&gt;current_user_can( $post_type_object-&amp;gt;cap-&amp;gt;edit_posts )&lt;/code&gt;  - &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/tags/3.5.1/wp-admin/edit.php#L21"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;At line 21&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
revisions.php checks &lt;code&gt;if ( !current_user_can( 'read_post', $revision-&amp;gt;ID ) || !current_user_can( 'read_post', $post-&amp;gt;ID ) )&lt;/code&gt; &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/tags/3.5.1/wp-admin/revision.php#L111"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;At Line 111&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
the difference in the check apparently lead to the (difficult to reproduce) bug in this ticket.
&lt;/p&gt;
&lt;p&gt;
if i understand it correctly the bug is still there and probably best would be solved by replacing the check in revisions to match the edit.php.
&lt;/p&gt;
&lt;p&gt;
i have attached a patch for review that changes each of several calls in revisions.php to the same check used in edit.php, this should lead to better expected behavior, that is same capabilities required for editing a post than for editing a revision, which wasn't _quite_ the case before.
&lt;/p&gt;
&lt;p&gt;
along the way i noticed the same calls repeating several times in different parts of the switch loop (you will see that in my patch).  shouldn't we just move these common checks to the top of the switch loop.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23293 (wpColorPicker not working in widgets) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Fri, 25 Jan 2013 16:32:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23293#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23293#comment:1/1359131525445915</guid>
      <description>&lt;p&gt;
.live is deprecated in 1.9 - use &lt;code&gt;.on()&lt;/code&gt; or &lt;code&gt;.delegate()&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23148 (Add hook in wp_ajax_save_attachment for additional attachment fields) updated</title>
      
        <dc:creator>mordauk</dc:creator>

      <pubDate>Fri, 25 Jan 2013 16:31:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23148#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23148#comment:8/1359131502962027</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23293 (wpColorPicker not working in widgets) created</title>
      
        <dc:creator>johnstonphilip</dc:creator>

      <pubDate>Fri, 25 Jan 2013 16:31:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23293</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23293/1359131468603545</guid>
      <description>&lt;p&gt;
This should be a simple fix. I was creating a widget that uses the new color picker in WordPress 3.5.
&lt;/p&gt;
&lt;p&gt;
It works fine except for when it is first added to a sidebar. I suspect this is because the widget is being added to the sidebar by jquery. The color picker is also applied using jquery - but it isn't able to select the color element because it wasn't part of the DOM when the page loaded.
&lt;/p&gt;
&lt;p&gt;
I don't know where the js code is for the wpColorPicker javascript function, but somewhere in there this should likely be added:
&lt;a class="ext-link" href="http://api.jquery.com/live/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://api.jquery.com/live/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23279 (Add templates to style registration, signup, activation, login and ...) updated</title>
      
        <dc:creator>sabreuse</dc:creator>

      <pubDate>Fri, 25 Jan 2013 15:29:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23279#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23279#comment:6/1359127795984279</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23289 (wp_protect_special_option rejects things it shouldn't) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Jan 2013 14:28:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23289#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23289#comment:5/1359124086924626</guid>
      <description>&lt;p&gt;
Best I can tell, this would only affect delete_option(). The other methods — get, update, and add — all trim( $option ) then check if $option is empty, and if so, return false. trim() would convert 0 to '0' but this is still empty.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23289.diff attached to Ticket #23289</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Jan 2013 14:28:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23289/23289.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23289/23289.diff/1359124084596688</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>23052.4.diff attached to Ticket #23052</title>
      
        <dc:creator>aaronholbrook</dc:creator>

      <pubDate>Fri, 25 Jan 2013 14:08:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23052/23052.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23052/23052.4.diff/1359122893441662</guid>
      <description>&lt;p&gt;
Fixed ipstenu's patch - diff was not relative to installation, included a 'wp' prefix which broke patch. Tested patch, looks good.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15585 ("LGPL License" should just be "LGPL") updated</title>
      
        <dc:creator>aaronholbrook</dc:creator>

      <pubDate>Fri, 25 Jan 2013 14:00:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15585#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15585#comment:8/1359122404182356</guid>
      <description>&lt;p&gt;
Tested on trunk, looks good.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19239 (Combine WordPress News and Other WordPress News dashboard widgets) updated</title>
      
        <dc:creator>aaronholbrook</dc:creator>

      <pubDate>Fri, 25 Jan 2013 13:56:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19239#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19239#comment:11/1359122168043416</guid>
      <description>&lt;p&gt;
Testing patch 19239.patch - not sure if it's just my installation, but the widget sits at 'Loading...'.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16953 (Allow symlinked plugins) updated</title>
      
        <dc:creator>markus.magnuson</dc:creator>

      <pubDate>Fri, 25 Jan 2013 13:34:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16953#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16953#comment:38/1359120886231873</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23113 (Automatic notice of new localized version missing) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 13:24:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23113#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23113#comment:5/1359120290694005</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23113#comment:4" title="Comment 4"&gt;pavelevap&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
But it is not possible to update to Czech version of WordPress 3.5. There is only English version available. It is also regression, because it was possible several months ago.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Could not reproduce. When I complete those 3 steps with &lt;code&gt;define('WPLANG', 'ru_RU')&lt;/code&gt;, I get both Russian and English 3.5.1 packages listed on the Updates screen. Note that the Updates screen has a 60 seconds timeout before refreshing the data.
&lt;/p&gt;
&lt;p&gt;
With &lt;code&gt;define('WPLANG', 'cs_CZ')&lt;/code&gt;, currently only the English package is displayed indeed, probably because there's no 3.5.1 package on cs.wordpress.org yet.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16214 (Custom Field "Name" and "Value" headers shouldn't show if there are no ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 12:53:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16214#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16214#comment:13/1359118427998952</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Resolution&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Fixed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/18445" title="Introduce register_meta(), get_metadata_by_mid(), and *_post_meta ..."&gt;[18445]&lt;/a&gt; by unsetting protected meta fields before printing the table (similar to what &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/16214/ticket.16214.2.diff" title="Attachment 'ticket.16214.2.diff' in Ticket #16214"&gt;ticket.16214.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/16214/ticket.16214.2.diff" title="Download"&gt;​&lt;/a&gt; suggested).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23292 (Media uploader loads full size image and slows down, please change to ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 12:31:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23292#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23292#comment:1/1359117097844170</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23272 (Notice on class-wp-walker.php) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 12:24:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23272#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23272#comment:4/1359116652146583</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23346" title="Make sure the array exists before adding an element to it. props ..."&gt;23346&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Make sure the array exists before adding an element to it. props rodrigosprimo. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23272" title="#23272: defect (bug): Notice on class-wp-walker.php (closed: fixed)"&gt;#23272&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [23346]: Make sure the array exists before adding an element to it. props ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 12:24:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/23346</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/23346/1359116650939476</guid>
      <description>&lt;p&gt;
Make sure the array exists before adding an element to it. props rodrigosprimo. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23272" title="#23272: defect (bug): Notice on class-wp-walker.php (closed: fixed)"&gt;#23272&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16847 (Capability check fails for custom post type revision edit (&amp; ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 12:16:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16847#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16847#comment:10/1359116182411103</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10690 (WordPress does not support non-ascii characters in the domain name) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 12:03:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10690#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10690#comment:31/1359115422794680</guid>
      <description>&lt;p&gt;
Now that AJAX for IDN is fixed in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18952" title="#18952: defect (bug): AJAX calls to IDN don't work in IE and Opera (closed: fixed)"&gt;#18952&lt;/a&gt;, I don't see any issues other than &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/11734" title="#11734: defect (bug): trackback_rdf() for IDN (xn--) Domains produces invalid HTML (new)"&gt;#11734&lt;/a&gt; when using the Punycode representation of URLs.
&lt;/p&gt;
&lt;p&gt;
We should probably convert &lt;code&gt;home&lt;/code&gt; and &lt;code&gt;siteurl&lt;/code&gt; to Punycode automatically, as mentioned in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19279" title="#19279: defect (bug): Admin actions redirects to invalid domain with IDN-domains (closed: duplicate)"&gt;#19279&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16953 (Allow symlinked plugins) updated</title>
      
        <dc:creator>synapticism</dc:creator>

      <pubDate>Fri, 25 Jan 2013 11:13:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16953#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16953#comment:37/1359112420962072</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23289 (wp_protect_special_option rejects things it shouldn't) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Fri, 25 Jan 2013 10:00:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23289#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23289#comment:4/1359108049337107</guid>
      <description>&lt;p&gt;
Ok, I'm no longer speechless. I guess that does make sense, given that
&lt;/p&gt;
&lt;pre class="wiki"&gt;var_dump( 0 == 'a2' );
&lt;/pre&gt;&lt;p&gt;
also gives true.
Initially, I was expecting (or hoping?) for strict comparison to be the default in &lt;code&gt;in_array&lt;/code&gt;, but that would be inconsistent with other functions. So, yeah, it does make sense.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23292 (Media uploader loads full size image and slows down, please change to ...) created</title>
      
        <dc:creator>mnrtjeR</dc:creator>

      <pubDate>Fri, 25 Jan 2013 09:31:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23292</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23292/1359106271892652</guid>
      <description>&lt;p&gt;
The media uploader is really slow if you upload 1024 x 768 images, the reason for this is that the preview shows full size images.
&lt;/p&gt;
&lt;p&gt;
Underneath here is a quick fix to speed up the media uploader to thumbnails.
Please change line 1333 in "wp-includes/media.php" from:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$attachment_url = wp_get_attachment_url( $attachment-&amp;gt;ID );
&lt;/pre&gt;&lt;p&gt;
to:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$attachment_url = wp_get_attachment_thumb_url($attachment-&amp;gt;ID );
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23289 (wp_protect_special_option rejects things it shouldn't) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Fri, 25 Jan 2013 08:54:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23289#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23289#comment:3/1359104085957529</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23289#comment:2" title="Comment 2"&gt;TobiasBg&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
PHP, this earns you another &lt;strong&gt;WTF&lt;/strong&gt;?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Makes full sense given that it's a non-strict comparison. When converting strings to integers, it takes as many digits as possible before a non-digit and turns that into an integer. In this case, &lt;code&gt;2a&lt;/code&gt; becomes &lt;code&gt;2&lt;/code&gt;, but there are no digits at the start of &lt;code&gt;a2&lt;/code&gt;, so that becomes &lt;code&gt;0&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Patch looks good, +1.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23289 (wp_protect_special_option rejects things it shouldn't) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Fri, 25 Jan 2013 08:26:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23289#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23289#comment:2/1359102419364877</guid>
      <description>&lt;p&gt;
PHP, this earns you another &lt;strong&gt;WTF&lt;/strong&gt;?
&lt;/p&gt;
&lt;p&gt;
Compare
&lt;/p&gt;
&lt;pre class="wiki"&gt;var_dump( in_array( 0, array( '1', 'a2' ) ) ); // bool(true)
&lt;/pre&gt;&lt;p&gt;
to
&lt;/p&gt;
&lt;pre class="wiki"&gt;var_dump( in_array( 0, array( '1', '2a' ) ) ); // bool(false)
&lt;/pre&gt;&lt;p&gt;
I'm a little bit speechless right now...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10690 (WordPress does not support non-ascii characters in the domain name) updated</title>
      
        <dc:creator>espsjurs</dc:creator>

      <pubDate>Fri, 25 Jan 2013 08:26:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10690#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10690#comment:30/1359102396234010</guid>
      <description>&lt;p&gt;
Hello there,
&lt;/p&gt;
&lt;p&gt;
This is still an issue :-(
&lt;/p&gt;
&lt;p&gt;
Is someone working on this?
&lt;/p&gt;
&lt;p&gt;
Espen
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23216 (Create "WP Heartbeat" API) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Fri, 25 Jan 2013 07:59:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23216#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23216#comment:30/1359100753359161</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23291 (wp_mail should handle phpmailer exceptions instead of ignoring them) updated</title>
      
        <dc:creator>mark-k</dc:creator>

      <pubDate>Fri, 25 Jan 2013 07:05:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23291#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23291#comment:2/1359097516560233</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23291 (wp_mail should handle phpmailer exceptions instead of ignoring them) updated</title>
      
        <dc:creator>mark-k</dc:creator>

      <pubDate>Fri, 25 Jan 2013 07:04:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23291#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23291#comment:1/1359097497178769</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23291 (wp_mail should handle phpmailer exceptions instead of ignoring them) created</title>
      
        <dc:creator>mark-k</dc:creator>

      <pubDate>Fri, 25 Jan 2013 07:04:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23291</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23291/1359097477400765</guid>
      <description>&lt;p&gt;
Right now code in wp_mail that call phpmailer looks like
&lt;/p&gt;
&lt;pre class="wiki"&gt;	try {
		$phpmailer-&amp;gt;Send();
	} catch ( phpmailerException $e ) {
		return false;
	}
&lt;/pre&gt;&lt;p&gt;
or worse (not failing at all).
&lt;/p&gt;
&lt;p&gt;
Yesterday had to hack core files to find out that an email address did not have a valid email format. Exceptions should either propagate in some way, or be reported to an error log.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23285 (Implement an AMD JavaScript loader in WordPress) updated</title>
      
        <dc:creator>auniquename</dc:creator>

      <pubDate>Fri, 25 Jan 2013 06:57:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23285#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23285#comment:12/1359097053375029</guid>
      <description>&lt;p&gt;
Right. So why build something over and over and over when you can build it once? I'm glad you see the benefit of the idea.
&lt;/p&gt;
&lt;p&gt;
If it has to wait for me to do it for WordPress myself, then so be it. Fine, I can deal with that. But it will take me much longer than a more experienced or skilled developer. I'm a chemist by education and training, not a computer scientist. (Though I understand all they teach in school now is Java with a big easy button.) Also, I would test it to death so that it is guaranteed to work and be near perfect in every way.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Anyone that agrees with you in a situation like this seems to believe they are volunteering to do the work (and I wish they didn't because they aren't).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
(This is an excellent point, thank you for reminding me.)
&lt;/p&gt;
&lt;p&gt;
The problem is that it will not pay the rent and I have about 8 weeks left until I am on the street. So it just is not going to happen right now. Sorry I don't have a patch for you, but the idea is a good one. My dilemma continues unresolved in the other ticket, there are just too many possible use cases.
&lt;/p&gt;
&lt;p&gt;
I am not alone in my issues with jQuery UI, it is far from personal, I just seem to have found more bugs than others by pushing the product to its (intended) limits.
&lt;/p&gt;
&lt;p&gt;
And whether you like it or not, compromised WP sites reflect poorly on WP as much as on their owners.
&lt;/p&gt;
&lt;p&gt;
Sorry if this post comes across as snarky, I do not mean it to be, I'm just tired and frustrated and should really go to bed. Everyone participating in this discussion has been most civil and helpful and I appreciate that a great deal, it is a rare thing on the internet.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23285 (Implement an AMD JavaScript loader in WordPress) updated</title>
      
        <dc:creator>bpetty</dc:creator>

      <pubDate>Fri, 25 Jan 2013 05:59:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23285#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23285#comment:11/1359093588366853</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23285 (Implement an AMD JavaScript loader in WordPress) updated</title>
      
        <dc:creator>bpetty</dc:creator>

      <pubDate>Fri, 25 Jan 2013 05:57:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23285#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23285#comment:10/1359093422335960</guid>
      <description>&lt;p&gt;
Putting aside @auniquename's personal issues working with jQuery and other JS libs themselves, the idea of using RequireJS with &lt;a class="ext-link" href="http://requirejs.org/docs/api.html#multiversion"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;multiversion support&lt;/a&gt; actually does have some merit, and is at least worth some investigation, discussion, and possible patch down the road.
&lt;/p&gt;
&lt;p&gt;
As was mentioned, WP does update bundled JS libraries very frequently, and they are often updated to API incompatible versions. They might as well be since there's no stable API policy around 3rd party JS libraries still. Most of the libraries WP bundles are bundled because they are quality, popular libraries, and so they often do have good policies around backwards compatibility even when upgrading to API incompatible versions (often only removing really old API like WP occasionally does, or infrequently used API). So it doesn't happen very frequently, but plugins do occasionally break when WP is updated and those JS libraries the plugin was originally built on are updated with it to API incompatible versions. That is the definition of "API incompatible", code originally written to work with older versions is not guaranteed to work with the new API incompatible branch.
&lt;/p&gt;
&lt;p&gt;
I'd be surprised if the plugin review team hasn't seen this with old plugins. Do they even review old plugins, particularly ones with high incompatible votes in the compatibility matrix, or only new ones?
&lt;/p&gt;
&lt;p&gt;
Anyway, I believe these are the same issues @auniquename is referring to. They are also the same issues I've referred to in the past when discussing &lt;a class="ext-link" href="http://ibaku.wordpress.com/2012/11/08/wordpress-plugin-and-theme-api-manifest-versioning/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;plugin API manifest versioning&lt;/a&gt;. I actually do believe this is one approach to the problem that could potentially work.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23285#comment:8" title="Comment 8"&gt;auniquename&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
People have custom plugins written for their site alone, and then may never hear from the developer again and are unable to maintain code themselves. Ya, their bed, lie in it, yada, yada...  But if we can prevent that, then why not?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sorry, but you'll generally find that most of the WP community doesn't care about these people, and the response you'll almost always find from WP developers is "upgrade your plugins or fix them" - and if their developer has abandoned them or disappeared, the answer is hire another. You won't get far with that argument.
&lt;/p&gt;
&lt;p&gt;
Also keep in mind though that if you feel like you're being pushed back, it's because you're making a suggestion to change something without even providing a patch to review and test out. Anyone that agrees with you in a situation like this seems to believe they are volunteering to do the work (and I wish they didn't because they aren't). When that happens, they're always inclined to defend however it is that WP currently handles (or doesn't handle) that issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23272 (Notice on class-wp-walker.php) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Jan 2013 05:54:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23272#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23272#comment:3/1359093269150204</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looks good, yes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16847 (Capability check fails for custom post type revision edit (&amp; ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Jan 2013 05:50:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16847#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16847#comment:9/1359093016727857</guid>
      <description>&lt;p&gt;
I doubt there is a bug here at all.
&lt;/p&gt;
&lt;p&gt;
Revisions simply use its parent post for cap checking. This is baked into map_meta_cap directly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23290 (When using switch_to_blog() with a persistent object cache that lacks ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Jan 2013 05:40:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23290#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23290#comment:2/1359092437633470</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Curiously, not a regression — existed back when this was just a wp_cache_init() call too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23290 (When using switch_to_blog() with a persistent object cache that lacks ...) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Fri, 25 Jan 2013 05:33:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23290#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23290#comment:1/1359091989056122</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23290 (When using switch_to_blog() with a persistent object cache that lacks ...) created</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 25 Jan 2013 05:28:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23290</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23290/1359091724590955</guid>
      <description>&lt;p&gt;
If you're using a persistent object cache that lacks the new &lt;code&gt;wp_cache_switch_to_blog()&lt;/code&gt; support, WordPress core &lt;code&gt;else&lt;/code&gt;s into a complete cache clobbering branch. It is smart about grabbing the global groups and re-adding those after &lt;code&gt;wp_cache_init()&lt;/code&gt; is called, but it doesn't do the same for non-persistent groups. Those are a hardcoded array. So if you call &lt;code&gt;switch_to_blog()&lt;/code&gt;, you would lose any custom-added non-persistent groups.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23285 (Implement an AMD JavaScript loader in WordPress) updated</title>
      
        <dc:creator>auniquename</dc:creator>

      <pubDate>Fri, 25 Jan 2013 05:01:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23285#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23285#comment:9/1359090101795729</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22896 (Prevent plugins from overriding jQuery in the admin) updated</title>
      
        <dc:creator>auniquename</dc:creator>

      <pubDate>Fri, 25 Jan 2013 05:00:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22896#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22896#comment:39/1359090021467270</guid>
      <description>&lt;p&gt;
Hrm. This approach is not working for jQuery plugins. I cannot make the call to jQuery.noConflict(true) before loading jQuery plugins, as they still reference (jQuery). So if I make the jQuery.noConflict call after including my desired jQuery plugins the question is will the jQuery plugins collide? I'll have to find a way to test that.
&lt;/p&gt;
&lt;p&gt;
This approach does seem to work (my-libs.js):
&lt;/p&gt;
&lt;pre class="wiki"&gt;/* included minified jQuery */
/* included minified jQuery UI */
/* included minified Iris */
var MYjQuery = jQuery.noConflict(true);
&lt;/pre&gt;&lt;p&gt;
Confirmed in (my.js):
&lt;/p&gt;
&lt;pre class="wiki"&gt;alert("Native jQuery version: " + jQuery().jquery);
alert("Native jQuery UI version: " + jQuery.ui.version);
alert("MY jQuery version: " + MYjQuery().jquery);
alert("MY jQuery UI version: " + MYjQuery.ui.version);
MYjQuery(document).ready(function($) {
	alert("Native jQuery version: " + jQuery().jquery);
	alert("Native jQuery UI version: " + jQuery.ui.version);
	alert("MY jQuery version: " + $().jquery);
	alert("MY jQuery UI version: " + $.ui.version);
});
jQuery(document).ready(function($) {
	alert("Native jQuery version: " + $().jquery);
	alert("Native jQuery UI version: " + $.ui.version);
	alert("MY jQuery version: " + MYjQuery().jquery);
	alert("MY jQuery UI version: " + MYjQuery.ui.version);
});
&lt;/pre&gt;&lt;p&gt;
Yields the expected version in all places called (both scripts loaded normally via wp_register_script, wp_enqueue_script and forcing a native jQuery UI load adding it to the dependencies array for my.js ).
&lt;/p&gt;
&lt;p&gt;
Now the question is what to do about Iris, as it is not a jQuery plugin, but is dependent on it. I have the hook set and checked for my plugin options page so on the admin side all this is only loaded on my options page anyway, and I do not need Iris for my front end but would be nice to have the option though...
&lt;/p&gt;
&lt;p&gt;
edit: actually Iris is a jQuery plugin, it's included Color.js is not however.
&lt;/p&gt;
&lt;p&gt;
Do I want to depend on the native version of Iris and risk my plugin breaking at some point in the future? Hmmm.  I would prefer to include and isolate Iris as well, so I can count on it always being there and behaving as expected. It appears to be globally scoped. What to do? (not really asking here, just mulling it over...)
&lt;/p&gt;
&lt;p&gt;
Ah, but wait! What if somebody else loads WP native (and/or non-native) jQuery and jQuery UI on the same page before and/or after I do... so many test cases dammit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22187 (Add docblocks to wp-signup.php) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Fri, 25 Jan 2013 04:44:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22187#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22187#comment:9/1359089061808497</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22187#comment:8" title="Comment 8"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Good catch Sergey. 22187-docblocks.2.diff should cover it. See anything else that stands out?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10883 (db-error.php not used for all DB failures) updated</title>
      
        <author>jose@…</author>

      <pubDate>Fri, 25 Jan 2013 04:39:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10883#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10883#comment:7/1359088795700256</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I am also wondering if this is going to be implemented any time soon. It is not true that the standard message appears only on the back-end. In my experience db-error.php is not called if there is a connection error on the front-end. For the time being, I just added the conditional below just before the bail function as suggested above.
&lt;/p&gt;
&lt;pre class="wiki"&gt;        if ( file_exists( WP_CONTENT_DIR . '/db-error.php' ) ) {
                require_once( WP_CONTENT_DIR . '/db-error.php' );
                die();
        }
&lt;/pre&gt;&lt;p&gt;
If you don't want to do it permanently, at least give us a filter so we can change it through a custom function.
&lt;/p&gt;
&lt;p&gt;
Thanks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>22187-docblocks.2.diff attached to Ticket #22187</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Fri, 25 Jan 2013 04:30:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22187/22187-docblocks.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22187/22187-docblocks.2.diff/1359088225724755</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23281 (Enhancement for comment_form(); allow styling the submit button) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 04:30:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23281#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23281#comment:3/1359088217258991</guid>
      <description>&lt;p&gt;
No, &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23281/comment_form.diff" title="Attachment 'comment_form.diff' in Ticket #23281"&gt;comment_form.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23281/comment_form.diff" title="Download"&gt;​&lt;/a&gt; isn't a correct patch.
&lt;/p&gt;
&lt;p&gt;
Please take a look at &lt;a class="ext-link" href="http://make.wordpress.org/core/handbook/submitting-a-patch/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://make.wordpress.org/core/handbook/submitting-a-patch/&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23270 (Links are not updated when changing a multisite path) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 04:28:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23270#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23270#comment:1/1359088094942799</guid>
      <description>&lt;p&gt;
Updating the links in content doesn't seem feasible, due to scalability reasons. We don't do that in single site when changing &lt;code&gt;home&lt;/code&gt; or &lt;code&gt;siteurl&lt;/code&gt;, so I don't think we should do it in Multisite. Rewording is probably the only option here.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
"Update siteurl and home as well.", where the "as well" makes it sound as if other elements on your site will be updated regardless.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
FWIW, it doesn't sound that way for me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23285 (Implement an AMD JavaScript loader in WordPress) updated</title>
      
        <dc:creator>auniquename</dc:creator>

      <pubDate>Fri, 25 Jan 2013 04:26:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23285#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23285#comment:8/1359088010118599</guid>
      <description>&lt;p&gt;
Perhaps so in my case, as I am more particular than most.
&lt;/p&gt;
&lt;p&gt;
That said, my comments on people not wanting to update in order to preserve the functionality of unmaintained plugins stand, and that is damaging overall to the reputation of WordPress, particularly with regard to security.
&lt;/p&gt;
&lt;p&gt;
People have custom plugins written for their site alone, and then may never hear from the developer again and are unable to maintain code themselves. Ya, their bed, lie in it, yada, yada...  But if we can prevent that, then why not?
&lt;/p&gt;
&lt;p&gt;
I also have this crazy half baked idea of snapshotting the current version of jQuery in WordPress when a plugin that references it is installed, then storing it in the db and feed the plugin that copy henceforth... until the plugin itself is updated. I haven't really thought that all the way through though. Probably lots of pitfalls.
&lt;/p&gt;
&lt;p&gt;
I just don't see any reason why not include some way to deal with js lib version dependencies. Not doing so causes more problems than doing so as I see it.
&lt;/p&gt;
&lt;p&gt;
Also, the release cycle is frequent enough to make all this a lot of work, too much? Even just thinking about how to write a plugin that supports multiple versions of WordPress and multiple versions of js libs is giving me braincramps. I cannot count on users updating their sites to the latest versions, so if I want my plugin to work on the most sites possible I need to write it to account for a whole quarterly history of jQuery revisions back a few years at least. Why put people through that? Overall man hours expended to implement an AMD style loader or some kind of mechanism to deal with multiple versions of js libs in WordPress would be considerably less. Set it and forget it I say. Computers and software are meant for automating such arduous and burdensome tasks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23281 (Enhancement for comment_form(); allow styling the submit button) updated</title>
      
        <dc:creator>Danielx64</dc:creator>

      <pubDate>Fri, 25 Jan 2013 04:25:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23281#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23281#comment:2/1359087913226998</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Not sure if I make the patch right
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23089 (Rewrite a confusing condition in default-widgets.php) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 04:09:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23089#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23089#comment:12/1359086954535455</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23089#comment:11" title="Comment 11"&gt;kovshenin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I rarely use the ternary operator, but when I do, I always put brackets around the condition
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, I prefer that form too. However, the form without the brackets appears to be prevailing throughout the core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23285 (Implement an AMD JavaScript loader in WordPress) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 04:00:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23285#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23285#comment:7/1359086430343743</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23285#comment:6" title="Comment 6"&gt;auniquename&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Alternatively, if plugin authors are encouraged to bundle and isolate jQuery themselves as discussed in that other ticket, then why make the jQuery used internally by WordPress available to plugin authors as it is now at all?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Quite the contrary, plugin authors are encouraged to use the jQuery version bundled with WordPress, and update the plugins accordingly. Your situation, as described in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22896#comment:29" title="Comment 29 for #22896: enhancement: Prevent plugins from overriding jQuery in the admin (closed: fixed)"&gt;ticket:22896:29&lt;/a&gt;, sounds like an edge case to me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22187 (Add docblocks to wp-signup.php) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 03:43:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22187#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22187#comment:8/1359085415290036</guid>
      <description>&lt;p&gt;
Some text needs updating:
&lt;/p&gt;
&lt;pre class="wiki"&gt;The default styles are printed via signup_header which is hooked to wp_head.
They can be overloaded by replacing the output on the signup_header action hook.
&lt;/pre&gt;&lt;p&gt;
This was the case in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/22187/22187.4.diff" title="Attachment '22187.4.diff' in Ticket #22187"&gt;22187.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/22187/22187.4.diff" title="Download"&gt;​&lt;/a&gt;, but not in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/22187/22187-docblocks.diff" title="Attachment '22187-docblocks.diff' in Ticket #22187"&gt;22187-docblocks.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/22187/22187-docblocks.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23272 (Notice on class-wp-walker.php) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 03:30:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23272#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23272#comment:2/1359084621263856</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/9830" title="Make arguments to start_el consistent and ensure that page walking is ..."&gt;[9830]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23285 (Implement an AMD JavaScript loader in WordPress) updated</title>
      
        <dc:creator>auniquename</dc:creator>

      <pubDate>Fri, 25 Jan 2013 03:19:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23285#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23285#comment:6/1359083959307634</guid>
      <description>&lt;p&gt;
@scribu - Roger. I've got that now. Though I will use the solution outlined later in that ticket. WordPress does not necessarily need to use AMD to implement multiple js lib versions dependencies, but why re-invent the wheel? Alternatively, if plugin authors are encouraged to bundle and isolate jQuery themselves as discussed in that other ticket, then why make the jQuery used internally by WordPress available to plugin authors as it is now at all? And why is the solution I have arrived at with the assistance here not documented? (I know, it is in the jQuery docs, but the WordPress codex leads one to register their scripts with dependencies on the jQuery included with WordPress)
&lt;/p&gt;
&lt;p&gt;
@wonderboymusic - Basically, it comes down to using multiple fully css scoped jQuery UI themes on a single page that will continue to work across at least a few releases of WordPress and jQuery. (If called for, depending on how the user sets the plugin options, and without breaking any other plugins or native WordPress functionality.) I am not so much concerned with what happens in admin as on the front end. I now have a way to make WordPress do it by isolating my jQuery and its plugins as discussed (but this is not the standard or documented way to use jQuery in WordPress). Currently the challenge that I face now that I can reliably isolate jQuery and its plugins in WordPress is the failings of jQuery UI itself. When you fully css scope a theme (every single css selector, not just the ones they scope in the themeroller - to preserve a theme behaviour across mutliple jQuery UI versions without collision with other jQuery UI themes from earlier or later versions) - you soon discover that many of the jQuery UI functions do not really take into account a css scoped theme at all (even a partially scoped one as the themeroller does).
&lt;/p&gt;
&lt;p&gt;
What happens is that things like overlays, and element clones used for animations and effects fall out of the css scope by being appended to elements (usually body) outside your defined css scope - and one cannot apply their jQuery UI scoping class to the body of a document without potentially affecting jQuery UI themes elements added before or after the ones you are working with.
&lt;/p&gt;
&lt;p&gt;
Hopefully that fills in some of the blanks for you. Right now my issue is with overlays (I have my own hack for that and it has been reported in the jQuery bug tracker), and with the explode effect falling out of theme scope, which has not been reported, and I seem to be unable to register on their bug tracker all names no matter how unique (even tried GUIDs) are reported as taken. Grrr. So I have registered on their forums to report some of this stuff.
&lt;/p&gt;
&lt;p&gt;
In jQuery UI 1.9.2 scoped overlays did not appear at all and had to be kicked into scope, now in 1.10.0 they appear in scope but out of z-order and over the element they are supposed to be behind. (I have hacks for both cases.) What is clear is that the jQuery UI developers are not testing under multiple scoped themes at all. That is half the point of jQuery UI - themed UIs!!! Arg!
&lt;/p&gt;
&lt;p&gt;
The reason I wanted to use jQuery UI 1.10.0 is that it corrects the dialog falling out of scope by allowing it to be appended to elements other than the body without a hack that adversely affects the body dimensions. i.e. this:
&lt;a class="ext-link" href="http://stackoverflow.com/questions/2199888/custom-css-scope-jquery-ui-dialog-themes"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://stackoverflow.com/questions/2199888/custom-css-scope-jquery-ui-dialog-themes&lt;/a&gt;
is no longer required.
&lt;/p&gt;
&lt;p&gt;
However there is still the overlay and explode issues (both existed prior to 1.10.0) and now icon button focus and sprite issues with the themes as implemented in 1.10.0 that did not exist in 1.9.2.
&lt;/p&gt;
&lt;p&gt;
So neither product is really ready for what I want to make them do, but it is so close... I can taste it. But the bulk of this reply is actually for the broken jQuery bug tracker...
&lt;/p&gt;
&lt;p&gt;
The issue relating directly to &lt;strong&gt;this ticket&lt;/strong&gt; is that I still see the need to use some way to handle multiple versions of jQuery in WordPress in a standard way. I suggested AMD as it seems to be the direction this type of thing is going, though it need not be done that way, there is more than one way to skin this cat. The alternative, and perhaps better solution (?) is not to encourage plugin authors to use the jQuery included in WordPress at all and lock it down for internal use only, and document or link the proper way to isolate your own copy of jQuery to use in your plugin as I have arrived at for my current solution. It is all about plugin stability and longevity.
&lt;/p&gt;
&lt;p&gt;
When a new plugin breaks an old one on a site, all the client knows is that their site is broken. Or when a WordPress update breaks a plugin that a site depends on... the user is inclined not to update, but what if that update contains a critical security update? I see a lot of job postings to fix old WordPress sites that have been compromised. The current situation does not really do much to prevent that from happening. I found a way to do it, and then a better ("the right way") to do with with the help here, but how many plugin authors will go to the trouble that I have to ensure that?
&lt;/p&gt;
&lt;p&gt;
And lo and behold... as I have been writing this:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Work around some misconfigurations that may have caused some JavaScript in the WordPress admin area to fail.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
...
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Server-side request forgery (SSRF) and remote port scanning via pingbacks. Fixed by the WordPress security team.
&lt;/li&gt;&lt;li&gt;Cross-site scripting (XSS) via shortcodes and post content. Discovered by Jon Cave of the WordPress security team.
&lt;/li&gt;&lt;li&gt;Cross-site scripting (XSS) in the external library Plupload. Plupload 1.5.5 was released to address this issue.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://codex.wordpress.org/Version_3.5.1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Version_3.5.1&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Though I see this after updating:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
External Libraries
WordPress now includes the Underscore and Backbone JavaScript libraries. TinyMCE, jQuery, jQuery UI, and SimplePie have all been updated to the latest versions.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not quite so. WordPress' jQuery and jQuery UI remain at 1.8.3 and 1.9.2 respectively, while the current versions are 1.9.0 and 1.10.0. WordPress' Backbone is at 0.9.2 not the current 0.9.10 ...
&lt;/p&gt;
&lt;p&gt;
This adds weight to my argument.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23280 (TinyMCE issue with table wrapped with shortcode) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 03:02:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23280#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23280#comment:2/1359082975346730</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22896 (Prevent plugins from overriding jQuery in the admin) updated</title>
      
        <dc:creator>auniquename</dc:creator>

      <pubDate>Fri, 25 Jan 2013 02:46:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22896#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22896#comment:38/1359081995007641</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22896#comment:37" title="Comment 37"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I may be mis-reading something but as Sergey pointed out above
&lt;/p&gt;
&lt;pre class="wiki"&gt;var mypluginjq = jQuery.noConflict();
&lt;/pre&gt;&lt;p&gt;
won't do it. You need
&lt;/p&gt;
&lt;pre class="wiki"&gt;var mypluginjq = jQuery.noConflict(true);
&lt;/pre&gt;&lt;p&gt;
so both &lt;code&gt;jQuery&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; are returned to the original values. See ​&lt;a class="ext-link" href="http://api.jquery.com/jQuery.noConflict/#example-4"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://api.jquery.com/jQuery.noConflict/#example-4&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;code&gt;*****&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
OK, I see now, thank you all for your patience and helpfulness. I know this is not really the place for such assistance and this is somewhat a tangent to the original topic of this ticket (though not entirely).
&lt;/p&gt;
&lt;p&gt;
So what I want to do in my myplugin-libs.js file is:
&lt;/p&gt;
&lt;pre class="wiki"&gt;
/* included minified jQuery */
var mypluginjq = jQuery.noConflict(true);
(function($){
/* included minified jQuery UI */
/* included minified Iris */
}(mypluginjq));
&lt;/pre&gt;&lt;p&gt;
...and in my myplugin.js
&lt;/p&gt;
&lt;pre class="wiki"&gt;
mypluginjq(document).ready(function($) {
    /* Finally, my plugin jQuery stuff */
});
&lt;/pre&gt;&lt;p&gt;
No ugly hacks needed! Sweet. This makes the demonstration I was working on redundant, though it would still illustrate where the standard approach will go wrong...
&lt;/p&gt;
&lt;p&gt;
So the question remains, what about plugin authors who have not thought it through like this and simply use the WordPress bundled jQuery as recommended in the codex? Their plugins will break in a relatively short time. I still think an AMD style solution of some kind is required in the long run. In any case, I'd say some additions to &lt;a class="ext-link" href="http://codex.wordpress.org/Function_Reference/wp_enqueue_script"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Function_Reference/wp_enqueue_script&lt;/a&gt; are in order. If not there, then some more appropriate and prominent location.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23276 (WordPress Importer: Update existing navs instead of new) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 02:41:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23276#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23276#comment:3/1359081683747168</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21210 (Coding formating in register_taxonomy defaults array) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 02:40:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21210#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21210#comment:1/1359081611491094</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23275 (WordPress Importer: line-ending mismatch corrupts serialized meta) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 02:36:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23275#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23275#comment:5/1359081374934684</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18282 (Issue with admin page hierarchy in Menu admin) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 02:34:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18282#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18282#comment:10/1359081288438776</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #18282,​23286 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 02:34:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=18282%2C23286</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=18282%2C23286/1359081260061525</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/18282" title="#18282: defect (bug): Issue with admin page hierarchy in Menu admin (reviewing)"&gt;#18282&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #16847 (Capability check fails for custom post type revision edit (&amp; ...) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 25 Jan 2013 02:27:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16847#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16847#comment:8/1359080834429342</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16847#comment:7" title="Comment 7"&gt;westi&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Moving to the Revisions Component for 3.6
&lt;/p&gt;
&lt;p&gt;
Next steps:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Concrete reproductive steps on the ticket for the bug.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
i am also unclear how to reproduce the bug.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23289 (wp_protect_special_option rejects things it shouldn't) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 02:26:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23289#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23289#comment:1/1359080819857561</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2268" title="#2268: defect (bug): get_option() on non-existent option always invokes new query (closed: fixed)"&gt;#2268&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Confirmed that &lt;code&gt;in_array( 0, array( 'alloptions', 'notoptions' ) )&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>patch attached to Ticket #23289</title>
      
        <dc:creator>agarden</dc:creator>

      <pubDate>Fri, 25 Jan 2013 02:14:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23289/patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23289/patch/1359080094357261</guid>
      <description>&lt;p&gt;
Patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23289 (wp_protect_special_option rejects things it shouldn't) created</title>
      
        <dc:creator>agarden</dc:creator>

      <pubDate>Fri, 25 Jan 2013 02:14:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23289</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23289/1359080054832683</guid>
      <description>&lt;p&gt;
If &lt;code&gt;wp_protect_special_option&lt;/code&gt; is called with $option == 0 it will die. I have a client for whom this took down their entire WordPress install. Now, I assume that some plugin or some such should not have been passing zero as an option name, so that's another bug. But a buggy plugin should not be able to take down an entire install so carelessly.
&lt;/p&gt;
&lt;p&gt;
Fix is trivial. Have &lt;code&gt;in_array&lt;/code&gt; use strict checking. Patch is attached.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23091 (Need to remove deprecated get_bloginfo('url') from ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 02:09:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23091#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23091#comment:4/1359079767217283</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23091/23091.2.diff" title="Attachment '23091.2.diff' in Ticket #23091"&gt;23091.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23091/23091.2.diff" title="Download"&gt;​&lt;/a&gt; also renames &lt;code&gt;$site_url&lt;/code&gt; to &lt;code&gt;$home_url&lt;/code&gt;, to prevent confusion.
&lt;/p&gt;
&lt;p&gt;
However, &lt;code&gt;get_bloginfo( 'url' )&lt;/code&gt; is not deprecated, only &lt;code&gt;home&lt;/code&gt; and &lt;code&gt;siteurl&lt;/code&gt; parameters are:
&lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/tags/3.5.1/wp-includes/general-template.php#L407"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/browser/tags/3.5.1/wp-includes/general-template.php#L407&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;url&lt;/code&gt; is still a valid parameter. We use &lt;code&gt;get_bloginfo( 'url' )&lt;/code&gt; in some other places as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21663 (Use mysqli for MySQL queries when available) updated</title>
      
        <dc:creator>ryanduff</dc:creator>

      <pubDate>Fri, 25 Jan 2013 02:07:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21663#comment:69</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21663#comment:69/1359079658821380</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>23091.2.diff attached to Ticket #23091</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 02:06:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23091/23091.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23091/23091.2.diff/1359079598106368</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22896 (Prevent plugins from overriding jQuery in the admin) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 25 Jan 2013 01:56:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22896#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22896#comment:37/1359078985159855</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22896#comment:33" title="Comment 33"&gt;auniquename&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I of course tried &lt;strong&gt;exactly that&lt;/strong&gt; first (see long boring story above)...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I may be mis-reading something but as Sergey pointed out above
&lt;/p&gt;
&lt;pre class="wiki"&gt;var mypluginjq = jQuery.noConflict();
&lt;/pre&gt;&lt;p&gt;
won't do it. You need
&lt;/p&gt;
&lt;pre class="wiki"&gt;var mypluginjq = jQuery.noConflict(true);
&lt;/pre&gt;&lt;p&gt;
so both &lt;code&gt;jQuery&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; are returned to the original values. See ​&lt;a class="ext-link" href="http://api.jquery.com/jQuery.noConflict/#example-4"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://api.jquery.com/jQuery.noConflict/#example-4&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23259 (Allow filtering the $function parameter of add_filter(), has_filter() ...) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Fri, 25 Jan 2013 01:46:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23259#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23259#comment:15/1359078417868127</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23259#comment:14" title="Comment 14"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Version field indicates when the feature was initially suggested.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It must have been mistaken changed as I didn't do it explicitly, sorry about that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23259 (Allow filtering the $function parameter of add_filter(), has_filter() ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 01:45:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23259#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23259#comment:14/1359078357854290</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Version field indicates when the feature was initially suggested.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23259 (Allow filtering the $function parameter of add_filter(), has_filter() ...) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Fri, 25 Jan 2013 01:34:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23259#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23259#comment:13/1359077691361380</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23259#comment:12" title="Comment 12"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
But I would see it as too course-grained to address the hook removal use-case.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, but you start from the premise that what sitebuilders want to do is "remove hooks". My contention is that that's not what they want to do; they want to stop those annoying share buttons from appearing under each post. Or they want to not have plugin X enqueue a bunch of JS files on every single page.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Your contention aside, I had one data point (my commenter) to your assumption.  One data point is not a statistically valid sample but neither is your assumption.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Back to the topic at hand: There is no quick fix for needlessly complex plugin or theme code; a patch to WP core won't fix it. Neither will a single Codex page.
&lt;/p&gt;
&lt;p&gt;
What we can do is:
&lt;/p&gt;
&lt;p&gt;
a) Encourage devs to make the class instance available, like you did in your blog post.
&lt;/p&gt;
&lt;p&gt;
b) Write more blog posts on how to organize complex plugins, on when classes are necessary and when they aren't etc.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Fine.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22896 (Prevent plugins from overriding jQuery in the admin) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 01:30:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22896#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22896#comment:36/1359077446293769</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22896#comment:33" title="Comment 33"&gt;auniquename&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22896#comment:30" title="Comment 30"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;pre class="wiki"&gt;var myjq = jQuery.noConflict(true);
&lt;/pre&gt;&lt;p&gt;
Ref: &lt;a class="ext-link" href="http://api.jquery.com/jQuery.noConflict/#example-4"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://api.jquery.com/jQuery.noConflict/#example-4&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I of course tried &lt;strong&gt;exactly that&lt;/strong&gt; first (see long boring story above). Like so:
&lt;/p&gt;
&lt;pre class="wiki"&gt;var mypluginjq = jQuery.noConflict();
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
Note that your code doesn't set the &lt;code&gt;removeAll&lt;/code&gt; parameter, which tells jQuery to remove all the variables from the global scope (including jQuery itself). The link above is an example of loading two different jQuery versions at the same time.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22896 (Prevent plugins from overriding jQuery in the admin) updated</title>
      
        <dc:creator>auniquename</dc:creator>

      <pubDate>Fri, 25 Jan 2013 01:13:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22896#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22896#comment:35/1359076433024808</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22896#comment:34" title="Comment 34"&gt;wonderboymusic&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm gonna need to see more of your plugin code before I am convinced that we're all stupid. I am currently on a production site running different jQuery in admin / front end, running jQuery UI, running tons of Backbone, Underscore, etc and have had zero problems. Can you put some code in a Gist or attach some code to the ticket that shows what is breaking?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;code&gt;*****&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Not accusing anyone of being stupid. That would be mean. If anyone, it is me. But I do not think so. I cannot share my plugin code currently as I am writing it for a private client.
&lt;/p&gt;
&lt;p&gt;
I will create a test package to illustrate.
&lt;/p&gt;
&lt;p&gt;
The idea is to try and run multiple versions of jQuery &lt;strong&gt;on the same page&lt;/strong&gt; when you are not in control of the order in which they are loaded, which without some guiding standard or controlling framework is not currently possible. (the current wp situation)
&lt;/p&gt;
&lt;p&gt;
Please standby for test demonstration. I might prove myself wrong. But I think I already know the answer, it will depend on when and where jQuery functions are called.
&lt;/p&gt;
&lt;p&gt;
Oh right... the key here is that all plugins must use a named alias for the version of jQuery loaded, which is not the case. I will demonstrate. Standby, it will take a bit...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22896 (Prevent plugins from overriding jQuery in the admin) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Fri, 25 Jan 2013 00:56:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22896#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22896#comment:34/1359075385966729</guid>
      <description>&lt;p&gt;
I'm gonna need to see more of your plugin code before I am convinced that we're all stupid. I am currently on a production site running different jQuery in admin / front end, running jQuery UI, running tons of Backbone, Underscore, etc and have had zero problems. Can you put some code in a Gist or attach some code to the ticket that shows what is breaking?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23262.4.patch attached to Ticket #23262</title>
      
        <dc:creator>aaronholbrook</dc:creator>

      <pubDate>Fri, 25 Jan 2013 00:53:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23262/23262.4.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23262/23262.4.patch/1359075229466703</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23262 (Update Backbone.js to 0.9.10) updated</title>
      
        <dc:creator>aaronholbrook</dc:creator>

      <pubDate>Fri, 25 Jan 2013 00:53:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23262#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23262#comment:3/1359075221199056</guid>
      <description>&lt;p&gt;
Fixed array styling (spaces between parens) at suggestion of Mr. Solomon.
&lt;/p&gt;
&lt;p&gt;
Thanks Evan :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23282 (Add shortcodes for inline HTML5 audio / video) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Fri, 25 Jan 2013 00:52:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23282#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23282#comment:7/1359075164099625</guid>
      <description>&lt;p&gt;
I uploaded a screenshot with the WordPress school colors
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>media.png attached to Ticket #23282</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Fri, 25 Jan 2013 00:52:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23282/media.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23282/media.png/1359075127060883</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22896 (Prevent plugins from overriding jQuery in the admin) updated</title>
      
        <dc:creator>auniquename</dc:creator>

      <pubDate>Fri, 25 Jan 2013 00:49:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22896#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22896#comment:33/1359074996275134</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22896#comment:30" title="Comment 30"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
With jQuery there is a better way to do this: let the WordPress jQuery load first, then load your desired version in the footer or right before it's needed, load jQuery UI or any other plugins you want to use with the different version and do:
&lt;/p&gt;
&lt;pre class="wiki"&gt;var myjq = jQuery.noConflict(true);
&lt;/pre&gt;&lt;p&gt;
Ref: &lt;a class="ext-link" href="http://api.jquery.com/jQuery.noConflict/#example-4"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://api.jquery.com/jQuery.noConflict/#example-4&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Then in your scripts you can use the version you want:
&lt;/p&gt;
&lt;pre class="wiki"&gt;(function($){
// your code here uses the alternative jQuery version
}(myjq));
(function($){
// this uses the standard jQuery version
}(jQuery));
&lt;/pre&gt;&lt;p&gt;
This is &lt;strong&gt;the proper way&lt;/strong&gt; to load several versions of jQuery and have them all work and (of course) doesn't affect or break anything in WordPress.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;code&gt;*****&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
I of course tried &lt;strong&gt;exactly that&lt;/strong&gt; first (see long boring story above). Like so:
&lt;/p&gt;
&lt;pre class="wiki"&gt;
/* included minified jQuery */
var mypluginjq = jQuery.noConflict();
/* included minified jQuery UI */
/* included minified Iris */
mypluginjq(document).ready(function($) {
    /* My Plugin jQuery stuff */
});
&lt;/pre&gt;&lt;p&gt;
As instructed here:
&lt;a class="ext-link" href="http://docs.jquery.com/Using_jQuery_with_Other_Libraries"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://docs.jquery.com/Using_jQuery_with_Other_Libraries&lt;/a&gt;
and here:
&lt;a class="ext-link" href="http://docs.jquery.com/Core/jQuery.noConflict"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://docs.jquery.com/Core/jQuery.noConflict&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;It did not work.&lt;/em&gt; When I called a jQuery version check outside and within the scoped functions it reported the same version everywhere - the last one loaded. And when called from other plugins, all reported the same version of jQuery, the last one loaded.
&lt;/p&gt;
&lt;p&gt;
The difference being perhaps that I am mostly trying to use fully scoped jQuery UI themes and I see detail here that most do not or perhaps never will.
&lt;/p&gt;
&lt;p&gt;
My guess is that no one has ever tested enough functionality to see a difference. Or actually made version calls.
&lt;/p&gt;
&lt;p&gt;
Maybe I screwed something up, but I don't think so. I'll try a very simple test page to see...
&lt;/p&gt;
&lt;p&gt;
As far a I know and from what the documentation says, the noConflict call is simply to prevent collisions over the use of $ by other libraries, not to handle multiple versions of itself... note also the long note about AMD at the end of the jQuery source. I shall proceed with my simple test however, to either prove myself right or wrong, but I think I already know the answer: if you are not in full control of the order of the loading of scripts (as with a wordpress install from the plugin author's perspective - you are screwed).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23285 (Implement an AMD JavaScript loader in WordPress) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 25 Jan 2013 00:37:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23285#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23285#comment:5/1359074254541789</guid>
      <description>&lt;p&gt;
Since jQuery hardcodes the module name as 'jquery', I don't see how AMD would help with having two versions loaded separately.
&lt;/p&gt;
&lt;p&gt;
From the ticket you mention:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
With jQuery there is a better way to do this: let the WordPress jQuery load first, then load your desired version in the footer or right before it's needed [...]
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/22896#comment:30"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/ticket/22896#comment:30&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23262.3.patch attached to Ticket #23262</title>
      
        <dc:creator>aaronholbrook</dc:creator>

      <pubDate>Fri, 25 Jan 2013 00:36:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23262/23262.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23262/23262.3.patch/1359074215408719</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23262 (Update Backbone.js to 0.9.10) updated</title>
      
        <dc:creator>aaronholbrook</dc:creator>

      <pubDate>Fri, 25 Jan 2013 00:36:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23262#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23262#comment:2/1359074204094296</guid>
      <description>&lt;p&gt;
Please ignore the backbone-min.js file, after talking with @evan, realized keeping the WP name was the smart thing to do.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23285 (Implement an AMD JavaScript loader in WordPress) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Fri, 25 Jan 2013 00:33:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23285#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23285#comment:4/1359073990881251</guid>
      <description>&lt;p&gt;
"Basically, neither WordPress or jQuery is ready for a plugin as complicated as I want to produce"
&lt;/p&gt;
&lt;p&gt;
What does that even mean? Please describe so someone can help you get there - I doubt it's impossible
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23262 (Update Backbone.js to 0.9.10) updated</title>
      
        <dc:creator>aaronholbrook</dc:creator>

      <pubDate>Fri, 25 Jan 2013 00:29:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23262#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23262#comment:1/1359073790062732</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Apologies for the double upload, first time manually uploading a diff.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23285 (Implement an AMD JavaScript loader in WordPress) updated</title>
      
        <dc:creator>auniquename</dc:creator>

      <pubDate>Fri, 25 Jan 2013 00:28:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23285#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23285#comment:3/1359073737763141</guid>
      <description>&lt;p&gt;
See ticket linked above (and again below):
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/22896"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/ticket/22896&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Plugin collisions with other plugins and the core functionality of WordPress (usually, but not always, in admin).
&lt;/p&gt;
&lt;p&gt;
I have had to resort to an ugly and inefficient hack to ensure that the jQuery I want to use in my plugin does not conflict with the one used in WordPress or with the jQuery used by other plugins. And to attempt to have a plugin with a working lifespan longer than the WordPress and jQuery release cycles.
&lt;/p&gt;
&lt;p&gt;
However I have hit other significant issues with jQuery itself and I am attempting to report issues there, but their bug tracker registration is broken and I have to resort to their forums.
&lt;/p&gt;
&lt;p&gt;
Basically, neither WordPress or jQuery is ready for a plugin as complicated as I want to produce. I hope by submitting this feedback that someday they will be.
&lt;/p&gt;
&lt;p&gt;
Ultimately the goal is to use multiple jQuery UI themes in a plugin in such a way that it does not break anything else and will work for an extended period of time with little to no maintenance (see long comment in ticket linked above).
&lt;/p&gt;
&lt;p&gt;
As I see it, this needs to happen. Though perhaps I expect too much?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>backbone-min.js attached to Ticket #23262</title>
      
        <dc:creator>aaronholbrook</dc:creator>

      <pubDate>Fri, 25 Jan 2013 00:28:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23262/backbone-min.js</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23262/backbone-min.js/1359073681056878</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>23262.2.patch attached to Ticket #23262</title>
      
        <dc:creator>aaronholbrook</dc:creator>

      <pubDate>Fri, 25 Jan 2013 00:27:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23262/23262.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23262/23262.2.patch/1359073626717137</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>23262.patch attached to Ticket #23262</title>
      
        <dc:creator>aaronholbrook</dc:creator>

      <pubDate>Fri, 25 Jan 2013 00:26:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23262/23262.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23262/23262.patch/1359073619172353</guid>
      <description>&lt;p&gt;
23262.patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #17737 (Be better at forcing data types for query vars) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Jan 2013 00:26:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17737#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17737#comment:7/1359073562905536</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think 's' also throws a warning.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>