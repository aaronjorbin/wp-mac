<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #36367 (Give users control on the term redirect) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 03 Apr 2016 23:16:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36367#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36367#comment:4/1459725399988755</guid>
      <description>&lt;p&gt;
Hi @alexvandervegt, thanks for the ticket! Would you like to add a patch?
&lt;/p&gt;
&lt;p&gt;
Note that new filters need to be documented as per the &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/inline-documentation-standards/php/#4-hooks-actions-and-filters"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;documentation standards&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36367 (Give users control on the term redirect) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 03 Apr 2016 23:13:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36367#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36367#comment:3/1459725185550456</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36392 (wp_add_inline_script() breaks script dependency order when using ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 03 Apr 2016 22:33:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36392#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36392#comment:7/1459722787347447</guid>
      <description>&lt;p&gt;
@ocean90 you're absolutely right. I neglected to include the dependency when registering. Nevertheless, when adding the dependency the issue was incidentally still present. But, when I applied &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36392/36392.2.patch" title="Attachment '36392.2.patch' in Ticket #36392"&gt;36392.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36392/36392.2.patch" title="Download"&gt;​&lt;/a&gt; then the order gets fixed! :+1:
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36392 (wp_add_inline_script() breaks script dependency order when using ...) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 03 Apr 2016 22:06:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36392#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36392#comment:6/1459721219791019</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@westonruter Did you miss to define a dependency in &lt;a class="ext-link" href="https://gist.github.com/westonruter/c8968edc125fd31ae2da4171ced8c62b#file-script-loader-test-case-php-L10"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gist.github.com/westonruter/c8968edc125fd31ae2da4171ced8c62b#file-script-loader-test-case-php-L10&lt;/a&gt;?
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36392/36392.2.patch" title="Attachment '36392.2.patch' in Ticket #36392"&gt;36392.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36392/36392.2.patch" title="Download"&gt;​&lt;/a&gt; fixes the unit test but not sure if it fixes your issue too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36392.2.patch attached to Ticket #36392</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 03 Apr 2016 21:09:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36392/36392.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36392/36392.2.patch/1459717779189191</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16557 (Ability to disable redirect_guess_404_permalink()) updated</title>
      
        <dc:creator>esemlabel</dc:creator>

      <pubDate>Sun, 03 Apr 2016 20:45:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16557#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16557#comment:28/1459716351445021</guid>
      <description>&lt;p&gt;
The if statement should contain exclusion of $_GET 'p' parametr for link rel='shortlink' to work properly.
&lt;/p&gt;
&lt;pre class="wiki"&gt;function remove_redirect_guess_404_permalink( $redirect_url ) {
	if ( is_404() &amp;amp;&amp;amp; !isset($_GET['p']) )
		return false;
	return $redirect_url;
}
add_filter( 'redirect_canonical', 'remove_redirect_guess_404_permalink' );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36374 (Audio playback fails on iOS 9.x) updated</title>
      
        <dc:creator>a4jp.com</dc:creator>

      <pubDate>Sun, 03 Apr 2016 20:32:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36374#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36374#comment:21/1459715574329186</guid>
      <description>&lt;p&gt;
I think I might have found the problem with iOS 9 update.
&lt;/p&gt;
&lt;p&gt;
I emptied my htaccess file and uploaded a blank file to my server as a test.
&lt;/p&gt;
&lt;p&gt;
Of course this gave an error stating I needed a newer version of PHP but I went to the server settings and updates the PHP version of the server space to PHP 7.0.3.
&lt;/p&gt;
&lt;p&gt;
After that, it added this info to the file automatically.
&lt;/p&gt;
&lt;pre class="wiki"&gt;suPHP_ConfigPath /home/a4jp/agreatdream.com/xserver_php/
AddHandler fcgid-script .php .phps
FCGIWrapper "/home/a4jp/agreatdream.com/xserver_php/php-cgi" .php
FCGIWrapper "/home/a4jp/agreatdream.com/xserver_php/php-cgi" .phps
&lt;/pre&gt;&lt;p&gt;
I got the sounds playing perfectly on test page on my server (&lt;a class="ext-link" href="http://agreatdream.com/quiz34test.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://agreatdream.com/quiz34test.php&lt;/a&gt;) then I went to (&lt;a class="ext-link" href="http://agreatdream.com/free-study/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://agreatdream.com/free-study/&lt;/a&gt;) but there was a 404 error so I added a few extra lines of code to the htaccess file from the old file.
&lt;/p&gt;
&lt;pre class="wiki"&gt;suPHP_ConfigPath /home/a4jp/agreatdream.com/xserver_php/
AddHandler fcgid-script .php .phps
FCGIWrapper "/home/a4jp/agreatdream.com/xserver_php/php-cgi" .php
FCGIWrapper "/home/a4jp/agreatdream.com/xserver_php/php-cgi" .phps
#access plus 2 hours before - above
# BEGIN WordPress
# BEGIN Math Captcha
&amp;lt;IfModule mod_rewrite.c&amp;gt;
RewriteEngine On
RewriteCond %{REQUEST_METHOD} POST
RewriteCond %{REQUEST_URI} .wp-comments-post.php*
RewriteCond %{HTTP_REFERER} !.*agreatdream.com.* [OR]
RewriteCond %{HTTP_USER_AGENT} ^$
RewriteRule (.*) ^http://%{REMOTE_ADDR}/$ [R=301,L]
&amp;lt;/IfModule&amp;gt;
# END Math Captcha
&amp;lt;IfModule mod_rewrite.c&amp;gt;
RewriteEngine On
RewriteBase /
RewriteRule ^index\.php$ - [L]
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule . /index.php [L]
&amp;lt;/IfModule&amp;gt;
# END WordPress
&lt;/pre&gt;&lt;p&gt;
After doing this with a refresh, I got Worpress working again. No more 404 errors.
&lt;/p&gt;
&lt;p&gt;
That means that something in the old htaccess file was causing the problem on iOS devices with WordPress.
&lt;/p&gt;
&lt;p&gt;
I don't know who made the original file but want to find out the best optimizations for the old file if possible.
&lt;/p&gt;
&lt;pre class="wiki"&gt;suPHP_ConfigPath /home/a4jp/agreatdream.com/xserver_php/
#Expire Header
&amp;lt;FilesMatch "\.(ico|pdf|flv|jpg|jpeg|png|gif|js|css|swf)(\.gz)?$"&amp;gt;
Header unset ETag
FileETag None
ExpiresDefault "access plus 1 day"
&amp;lt;/FilesMatch&amp;gt;
#access plus 2 hours before - above
# BEGIN WordPress
# BEGIN Math Captcha
&amp;lt;IfModule mod_rewrite.c&amp;gt;
RewriteEngine On
RewriteCond %{REQUEST_METHOD} POST
RewriteCond %{REQUEST_URI} .wp-comments-post.php*
RewriteCond %{HTTP_REFERER} !.*agreatdream.com.* [OR]
RewriteCond %{HTTP_USER_AGENT} ^$
RewriteRule (.*) ^http://%{REMOTE_ADDR}/$ [R=301,L]
&amp;lt;/IfModule&amp;gt;
# END Math Captcha
&amp;lt;IfModule mod_rewrite.c&amp;gt;
RewriteEngine On
RewriteBase /
RewriteRule ^index\.php$ - [L]
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule . /index.php [L]
&amp;lt;/IfModule&amp;gt;
# END WordPress
# compress text, html, javascript, css, xml:
AddOutputFilterByType DEFLATE text/plain
AddOutputFilterByType DEFLATE text/html
AddOutputFilterByType DEFLATE text/xml
AddOutputFilterByType DEFLATE text/css
AddOutputFilterByType DEFLATE application/xml
AddOutputFilterByType DEFLATE application/xhtml+xml
AddOutputFilterByType DEFLATE application/rss+xml
AddOutputFilterByType DEFLATE application/javascript
# Or, compress certain file types by extension:
&amp;lt;files *.html&amp;gt;
SetOutputFilter DEFLATE
&amp;lt;/files&amp;gt;
# BEGIN WP Performance Score Booster Settings
## BEGIN Enable GZIP Compression ##
&amp;lt;IfModule mod_deflate.c&amp;gt;
AddOutputFilterByType DEFLATE text/plain
AddOutputFilterByType DEFLATE text/html
AddOutputFilterByType DEFLATE text/xml
AddOutputFilterByType DEFLATE text/css
AddOutputFilterByType DEFLATE application/xml
AddOutputFilterByType DEFLATE application/xhtml+xml
AddOutputFilterByType DEFLATE application/rss+xml
AddOutputFilterByType DEFLATE application/javascript
AddOutputFilterByType DEFLATE application/x-javascript
AddOutputFilterByType DEFLATE application/x-httpd-php
AddOutputFilterByType DEFLATE application/x-httpd-fastphp
AddOutputFilterByType DEFLATE image/svg+xml
SetOutputFilter DEFLATE
&amp;lt;/IfModule&amp;gt;
## END Enable GZIP Compression ##
## BEGIN Vary: Accept-Encoding Header ##
&amp;lt;IfModule mod_headers.c&amp;gt;
&amp;lt;FilesMatch "\.(js|css|xml|gz)$"&amp;gt;
Header append Vary: Accept-Encoding
&amp;lt;/FilesMatch&amp;gt;
&amp;lt;/IfModule&amp;gt;
## END Vary: Accept-Encoding Header ##
## BEGIN Expires Caching (Leverage Browser Caching) ##
&amp;lt;IfModule mod_expires.c&amp;gt;
ExpiresActive On
ExpiresByType image/jpg "access 2 week"
ExpiresByType image/jpeg "access 2 week"
ExpiresByType image/gif "access 2 week"
ExpiresByType image/png "access 2 week"
ExpiresByType text/css "access 2 week"
ExpiresByType application/pdf "access 2 week"
ExpiresByType text/x-javascript "access 2 week"
ExpiresByType application/x-shockwave-flash "access 2 week"
ExpiresByType image/x-icon "access 2 week"
ExpiresDefault "access 2 week"
&amp;lt;/IfModule&amp;gt;
## END Expires Caching (Leverage Browser Caching) ##
# END WP Performance Score Booster Settings
SetEnvIf Request_URI ".*" AllowCountry
AddHandler fcgid-script .php .phps
FCGIWrapper "/home/a4jp/agreatdream.com/xserver_php/php-cgi" .php
FCGIWrapper "/home/a4jp/agreatdream.com/xserver_php/php-cgi" .phps
&lt;/pre&gt;&lt;p&gt;
I'm so glad I found this fix and I hope the lines of code that screw up the audio playback on WordPress sites on Apple products but not PCs or Android devices can still be figured out though.
&lt;/p&gt;
&lt;p&gt;
It would also be great to have info on the best optimizations in the htaccess file for WordPress.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36389 (Selective refresh for widgets gets lost once `refresh` is used) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 03 Apr 2016 20:23:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36389#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36389#comment:12/1459715009779952</guid>
      <description>&lt;p&gt;
Used the steps from &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36389#comment:5" title="Comment 5"&gt;comment:5&lt;/a&gt; to reproduce the issue, &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36389/36389.1.diff" title="Attachment '36389.1.diff' in Ticket #36389"&gt;36389.1.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36389/36389.1.diff" title="Download"&gt;​&lt;/a&gt; fixes it for me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36173 (4.5 About Page) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Sun, 03 Apr 2016 20:14:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36173#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36173#comment:9/1459714478728982</guid>
      <description>&lt;p&gt;
Design in that patch is already outdated. Will have something with images and videos up some time today.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36173 (4.5 About Page) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 03 Apr 2016 20:04:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36173#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36173#comment:8/1459713892733842</guid>
      <description>&lt;p&gt;
It might be better to put device preview before custom logo since everyone can use it whereas custom logo is only available for certain themes (and won't ever be available for all themes, including Twenty Fourteen). For both of those, it could be cool to include a customizer-loading button so that users can get right there to try it out (logo could be deep-linked). Using the &lt;code&gt;.load-customize&lt;/code&gt; class on the element will also open it right inline over the current page (see from the dashboard, &lt;code&gt;&amp;lt;a class="button button-primary button-hero load-customize hide-if-no-customize" href="&amp;lt;?php admin_url( 'customize.php' ); ?&amp;gt;" ... &lt;/code&gt;).
&lt;/p&gt;
&lt;p&gt;
I would definitely use a single animated gif for the device preview image.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36407 (Coding typo: space should be after closing quote, not before) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 03 Apr 2016 19:37:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36407#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36407#comment:1/1459712231012304</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/30705" title="Admin help text changes for the General Settings screen, post editing ..."&gt;[30705]&lt;/a&gt;, changed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36971" title="Editor: correct and update the Visual and Text editors description in ..."&gt;[36971]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36394 (git-or-svn module assumes only one can be true) updated</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Sun, 03 Apr 2016 15:36:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36394#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36394#comment:8/1459697789978658</guid>
      <description>&lt;p&gt;
This seems like a good change. The module code for detecting git or svn is rather straight forward, so I'm not sure we benefit a lot from having it in another module.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36360 (Multisite - WP defaults to LT language even if it set to EN) updated</title>
      
        <dc:creator>KestutisIT</dc:creator>

      <pubDate>Sun, 03 Apr 2016 15:36:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36360#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36360#comment:3/1459697786613546</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36380 (Moderate Comment screen no longer displays raw content) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Sun, 03 Apr 2016 14:47:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36380#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36380#comment:8/1459694831313647</guid>
      <description>&lt;p&gt;
Looks good. I'd maybe also wrap the url in parenthesis, but that's just a minor stylistic preference.
&lt;/p&gt;
&lt;p&gt;
@michaelarestad what do you think about the selectors?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36407.patch attached to Ticket #36407</title>
      
        <dc:creator>dimadin</dc:creator>

      <pubDate>Sun, 03 Apr 2016 14:44:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36407/36407.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36407/36407.patch/1459694699861083</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36407 (Coding typo: space should be after closing quote, not before) created</title>
      
        <dc:creator>dimadin</dc:creator>

      <pubDate>Sun, 03 Apr 2016 14:43:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36407</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36407/1459694631117575</guid>
      <description>&lt;p&gt;
While translating, I've noticed this. Since administration should already get new strings for "About" screen, this can go for 4.5.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #33215 (Main plugin file loaded multiple times under special circumstances on ...) updated</title>
      
        <dc:creator>mensmaximus</dc:creator>

      <pubDate>Sun, 03 Apr 2016 12:25:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33215#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33215#comment:4/1459686349934653</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33215#comment:3" title="Comment 3"&gt;jeremyfelt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Would it make sense to automatically de-activate the plugin on the main site before activating it network wide or show a notice that the plugin should be deactivated first... or a mix?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Wouldn't this be dangerous in case a plugin is not multisite compatible or if a plugin author explicitly decides to change the logic of a plugin in case it gets network activated?
&lt;/p&gt;
&lt;p&gt;
What if options get stored in
&lt;/p&gt;
&lt;pre class="wiki"&gt;$wpdb-&amp;gt;base_prefix . "options"
&lt;/pre&gt;&lt;p&gt;
after network activation instead of
&lt;/p&gt;
&lt;pre class="wiki"&gt;$wpdb-&amp;gt;prefix . "options"
&lt;/pre&gt;&lt;p&gt;
opposed to a per site activation?
&lt;/p&gt;
&lt;p&gt;
If a plugin was active before this could lead to loss of all stored options. We all know that from many child themes that do not share the settings with the parent. And there it is still the same table.
&lt;/p&gt;
&lt;p&gt;
My first idea would be to disable the network activation by default as soon as a plugin has been installed on a per site basis. If there would be a filter for the network activation a plugin developer could decide whether to disable this default to allow network activation even if the plugin has already been activated on individual sites because his plugin stores options always at the same place.
&lt;/p&gt;
&lt;p&gt;
In such a case deactivating wont hurt. The question is, is this something wordpress core has to solve or is it something a plugin developer should handle during activation despite the fact there is no way to deactivate network activation at the moment? (network: false would be helpful in the plugin file header as well as a filter for the network activation link in net-admin)?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36401 (Bump Akismet for 4.5) updated</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Sun, 03 Apr 2016 12:02:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36401#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36401#comment:3/1459684958966607</guid>
      <description>&lt;p&gt;
Not a joke :)
&lt;/p&gt;
&lt;p&gt;
@helen and @dd32 have bumped it before. I'm not sure if anyone particular owns it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31104 (Plugin activation includes plugin file in variable scope of activate_plugin) updated</title>
      
        <dc:creator>mensmaximus</dc:creator>

      <pubDate>Sun, 03 Apr 2016 11:38:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31104#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31104#comment:8/1459683511933646</guid>
      <description>&lt;p&gt;
If the way of inclusion gets changed in activate_plugin() this might also be changed in plugin_sandbox_scrape().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36406 ($network_wide is unreliable) updated</title>
      
        <dc:creator>mensmaximus</dc:creator>

      <pubDate>Sun, 03 Apr 2016 11:16:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36406#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36406#comment:3/1459682170102782</guid>
      <description>&lt;p&gt;
And I think there is one more bug in /wp-admin/plugins.php within the 'error_scrape' case from the switch statement. Line 166 shows
&lt;/p&gt;
&lt;pre class="wiki"&gt;do_action( "activate_{$plugin}" );
&lt;/pre&gt;&lt;p&gt;
but I think this should be
&lt;/p&gt;
&lt;pre class="wiki"&gt;do_action( "activate_{$plugin}", is_network_admin() );
&lt;/pre&gt;&lt;p&gt;
like within activate_plugin() in /wp-admin/includes/plugin.php where in shows in line 573
&lt;/p&gt;
&lt;pre class="wiki"&gt;do_action( 'activate_' . $plugin, $network_wide );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36406 ($network_wide is unreliable) updated</title>
      
        <dc:creator>mensmaximus</dc:creator>

      <pubDate>Sun, 03 Apr 2016 10:59:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36406#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36406#comment:2/1459681148709674</guid>
      <description>&lt;p&gt;
Well now I understand the issue arises from calling plugin_sandbox_scrape() in /wp-admin/plugins.php. Just for a test I set
&lt;/p&gt;
&lt;pre class="wiki"&gt;$_GET['networkwide'] = 1
&lt;/pre&gt;&lt;p&gt;
within plugin_sandbox_scrape() and replaced
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( $network_wide )
&lt;/pre&gt;&lt;p&gt;
with
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( $_GET['networkwide'] )
&lt;/pre&gt;&lt;p&gt;
in my activation test (the back compat for plugins). As a result the message I want to show is displayed. However this is not a (good) solution and still I think calling plugin_sandbox_scrape() twice is wrong.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36378 (Srcset download 2 images with one request.) updated</title>
      
        <dc:creator>adam.radocz</dc:creator>

      <pubDate>Sun, 03 Apr 2016 10:37:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36378#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36378#comment:4/1459679876765399</guid>
      <description>&lt;p&gt;
I made a video from a clean wordpress in a different pc. When I tried to reproduce the bug with only one image, I also couldn't as you. But when I uploaded a second image the bug appeared. I guess the problem is the wordpress resize the theme's framework when the page is completely loaded, as you can see at 6:30 in the video for one moment, and both the two images are downloaded for the two different viewsport.
&lt;/p&gt;
&lt;p&gt;
Here is the video: &lt;a class="ext-link" href="https://youtu.be/d_PES0DM18Y"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://youtu.be/d_PES0DM18Y&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36378#comment:3" title="Comment 3"&gt;joemcgill&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi @adam.radocz,
&lt;/p&gt;
&lt;p&gt;
I'm not able to reproduce this with a clean version of the Twenty Sixteen theme (which appears to be what you're using in your screenshot). Is it possible that you have any other plugin enabled that would be modifying the way images are loaded (e.g. a lazy loading plugin maybe)? I suspect there's something beyond the markup/browser causing this issue because in the screenshot shows that an "other" source initiating the double download, and not the HTML markup itself.
&lt;/p&gt;
&lt;p&gt;
If you can replicate the issue again with a clean install of WP and one of the default themes with no plugins activated, that would be helpful.
&lt;/p&gt;
&lt;p&gt;
Thanks,
Joe
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36406 ($network_wide is unreliable) updated</title>
      
        <dc:creator>mensmaximus</dc:creator>

      <pubDate>Sun, 03 Apr 2016 10:34:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36406#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36406#comment:1/1459679699550744</guid>
      <description>&lt;p&gt;
To visualize this issue better I have captured some information at the beginning of the function (where exit(1) is located):
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Captured during a successful network activation&lt;/strong&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;***** activate_wpmu-activation-test/index.php: 2016-04-03 10:27:49 *****
(
    [stage] =&amp;gt; 1
    [network_wide] =&amp;gt; 1
    [GET] =&amp;gt; Array
        (
            [action] =&amp;gt; activate
            [plugin] =&amp;gt; wpmu-activation-test/index.php
            [plugin_status] =&amp;gt; all
            [paged] =&amp;gt; 1
            [s] =&amp;gt;
            [_wpnonce] =&amp;gt; ed6fce4af2
            [networkwide] =&amp;gt; 1
        )
)
&lt;/pre&gt;&lt;p&gt;
&lt;strong&gt;Captured while exiting at exit(3) to avoid network activation of the plugin&lt;/strong&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;***** activate_wpmu-activation-test/index.php: 2016-04-03 10:25:46 *****
(
    [stage] =&amp;gt; 1
    [network_wide] =&amp;gt; 1
    [GET] =&amp;gt; Array
        (
            [action] =&amp;gt; activate
            [plugin] =&amp;gt; wpmu-activation-test/index.php
            [plugin_status] =&amp;gt; all
            [paged] =&amp;gt; 1
            [s] =&amp;gt;
            [_wpnonce] =&amp;gt; ed6fce4af2
            [networkwide] =&amp;gt; 1
        )
)
***** activate_wpmu-activation-test/index.php: 2016-04-03 10:25:48 *****
(
    [stage] =&amp;gt; 1
    [network_wide] =&amp;gt;
    [GET] =&amp;gt; Array
        (
            [action] =&amp;gt; error_scrape
            [plugin] =&amp;gt; wpmu-activation-test/index.php
            [_wpnonce] =&amp;gt; c9063923af
        )
)
***** activate_wpmu-activation-test/index.php: 2016-04-03 10:25:48 *****
(
    [stage] =&amp;gt; 1
    [network_wide] =&amp;gt;
    [GET] =&amp;gt; Array
        (
            [action] =&amp;gt; error_scrape
            [plugin] =&amp;gt; wpmu-activation-test/index.php
            [_wpnonce] =&amp;gt; c9063923af
        )
)
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36406 ($network_wide is unreliable) created</title>
      
        <dc:creator>mensmaximus</dc:creator>

      <pubDate>Sun, 03 Apr 2016 09:20:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36406</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36406/1459675233491949</guid>
      <description>&lt;p&gt;
This issue may be related to ticket &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/31104" title="#31104: defect (bug): Plugin activation includes plugin file in variable scope of activate_plugin (reviewing)"&gt;#31104&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Scenario:
In a WordPress network an admin decides a plugin must not be network activated. Only a per site or even a site specific activation shall be allowed.
&lt;/p&gt;
&lt;p&gt;
Idea:
Conditional check during plugin activation and die with an error message if $network_wide is true.
&lt;/p&gt;
&lt;p&gt;
Result:
Plugin does not get activated but the custom error message is not displayed
&lt;/p&gt;
&lt;p&gt;
Assume the following function run during activation (it is simplified and the real activation sequence does not have echos!)
&lt;/p&gt;
&lt;pre class="wiki"&gt;function test_activation_hook( $network_wide ) {
	echo '&amp;lt;span&amp;gt;1 | &amp;lt;/span&amp;gt;';
	// exit( 1 );
	if ( is_multisite() ) {
		echo '&amp;lt;span&amp;gt;2: | &amp;lt;/span&amp;gt;';
		// exit( 2 );
		if ( $network_wide ) {
			echo '&amp;lt;span&amp;gt;3: | &amp;lt;/span&amp;gt;';
			// exit( 3 );
		} else {
			echo '&amp;lt;span&amp;gt;4: | &amp;lt;/span&amp;gt;';
			// exit( 4 );
		}
	} else {
		echo '&amp;lt;span&amp;gt;5: | &amp;lt;/span&amp;gt;';
		// exit( 5 );
	}
	echo '&amp;lt;span&amp;gt;6: | &amp;lt;/span&amp;gt;';
	exit( 6 );
}
&lt;/pre&gt;&lt;p&gt;
If you exit after if(is_multisite) the message displayed will be '1 | 2 |'
If you exit after if($network_wide) during a networkwide activation the message displayed is '1 | 2 | 4 | 6' instead of '1 | 2| 3|'
Exiting at 4, 5, or 6 will display '1 | 2| 4|', '1 | 2| 5|' and '1 | 2| 6|' as expected.
&lt;/p&gt;
&lt;p&gt;
After many hours of debuging I realized the function (the action filter 'activate_' . $plugin) gets executed 3 times if you exit it early. And only the first call has the argument $network_wide set to true if it is an network_wide activation.
&lt;/p&gt;
&lt;p&gt;
If you like to exit at 3, that is you do not want a network activation, the flow is therefore as follows:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The first run (click on network activate) has $network_wide set to true and will exit at 3
&lt;/li&gt;&lt;li&gt;the second run (no idea why) has $network_wide set to false and will pass 1 | 2 | 4 | 6
&lt;/li&gt;&lt;li&gt;the third run (no idea why) has $network_wide set to false and will pass 1 | 2 | 4 | 6
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Imho calling the activation function (or the code) three times in case you exit it (better say terminate because you cant end a plugin installiton clean) is wrong at all. However if this is by design then $network_wide must be reliably set to true if it originally was.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36401 (Bump Akismet for 4.5) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sun, 03 Apr 2016 08:11:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36401#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36401#comment:2/1459671076383419</guid>
      <description>&lt;p&gt;
Who usually handles this, assuming it's not an April fools joke?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36173 (4.5 About Page) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sun, 03 Apr 2016 08:09:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36173#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36173#comment:7/1459670958993988</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36173/36173.diff" title="Attachment '36173.diff' in Ticket #36173"&gt;First patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36173/36173.diff" title="Download"&gt;​&lt;/a&gt;. @melchoyce put together the design with temporary inline styles and is working on the images that are missing.  Video is in progress.
&lt;/p&gt;
&lt;p&gt;
The "Under the Hood" section is the most rough. Feel free to suggest re-wording, or changes there. I'm not certain that script changes should be -- and if they are, we should probably give the exact information on what changed. Also wondering if a general link to the field guide at the top of that section might make sense.
&lt;/p&gt;
&lt;p&gt;
I removed one of the "Under the Hood" items, making it 5 items -- so guessing @melchoyce will probably want to change how the second row is laid out.
&lt;/p&gt;
&lt;p&gt;
Contributions for copy so far from @helen, @mattfelten, &amp;amp; @melchoyce, with some initial inspiration from @jorbin (if I missed you, please comment here).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36173.diff attached to Ticket #36173</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sun, 03 Apr 2016 08:00:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36173/36173.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36173/36173.diff/1459670433705903</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36393 (Loss of multibyte comment author names) updated</title>
      
        <dc:creator>cfinke</dc:creator>

      <pubDate>Sun, 03 Apr 2016 06:53:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36393#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36393#comment:3/1459666419399573</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36393#comment:2" title="Comment 2"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is (more or less) taken care of in 4.5 by checking the submitted strings lengths, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10377" title="#10377: defect (bug): Comment fields should have max lengths (closed: fixed)"&gt;#10377&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed that &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10377" title="#10377: defect (bug): Comment fields should have max lengths (closed: fixed)"&gt;#10377&lt;/a&gt; covers the situation I encountered. I had tested it in 4.4 by actually doing the comment form submission, but when I tested it against trunk, I was using the code I had written to simulate the process, which didn't trigger those checks.
&lt;/p&gt;
&lt;p&gt;
This same bug is present in term creation (tested in trunk just now): create a tag or category with the name &lt;code&gt;AAAﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃ&lt;/code&gt; (201 bytes, destined for a 200-byte field). The category or tag will be created, but with a blank name. If you use the string &lt;code&gt;ﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃAAA&lt;/code&gt; (again 201 bytes, but with the 200th byte being a complete character), the name will be properly truncated to &lt;code&gt;ﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃAA&lt;/code&gt; before creating the category.
&lt;/p&gt;
&lt;p&gt;
Here's my &lt;code&gt;wp_terms&lt;/code&gt; structure:
&lt;/p&gt;
&lt;pre class="wiki"&gt;CREATE TABLE `wp_terms` (
  `term_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(200) NOT NULL DEFAULT '',
  `slug` varchar(200) NOT NULL DEFAULT '',
  `term_group` bigint(10) NOT NULL DEFAULT '0',
  PRIMARY KEY (`term_id`),
  KEY `slug` (`slug`(191)),
  KEY `name` (`name`(191))
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36405 (User creation fails for users with long names.) created</title>
      
        <dc:creator>cfinke</dc:creator>

      <pubDate>Sun, 03 Apr 2016 05:49:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36405</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36405/1459662540975277</guid>
      <description>&lt;p&gt;
Summary: When creating a user with a long first or last name, the query that inserts the user into the DB is assumed to have succeeded, but that fact is never verified.
&lt;/p&gt;
&lt;p&gt;
Sign in as an admin and create a new user, giving it the first name &lt;code&gt;ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQ&lt;/code&gt; (or any 251-byte string). After submitting the form, you'll see a handful of error messages (line numbers are from trunk just now, but I can reproduce the bug as far back as 4.2.1):
&lt;/p&gt;
&lt;pre class="wiki"&gt;Notice: Trying to get property of non-object in wp-includes/pluggable.php on line 1716
Notice: Trying to get property of non-object in wp-includes/pluggable.php on line 1717
Notice: Trying to get property of non-object in wp-includes/pluggable.php on line 1730
Notice: Trying to get property of non-object in wp-includes/pluggable.php on line 1738
Notice: Trying to get property of non-object in wp-includes/pluggable.php on line 1740
Notice: Trying to get property of non-object in wp-includes/pluggable.php on line 1742
Notice: Trying to get property of non-object in wp-includes/pluggable.php on line 1746
Warning: Cannot modify header information - headers already sent by (output started at wp-includes/pluggable.php:1716) in wp-includes/pluggable.php on line 1171
&lt;/pre&gt;&lt;p&gt;
What happens is that the &lt;code&gt;$wpdb-&amp;gt;insert( $wpdb-&amp;gt;users, $data + compact( 'user_login' ) );&lt;/code&gt; call in &lt;code&gt;wp_insert_user()&lt;/code&gt; fails, but there's no check to ensure that it succeeded, so the code proceeds to try and create a new &lt;code&gt;WP_User&lt;/code&gt; with ID &lt;code&gt;0&lt;/code&gt;. This results in unexpected behavior, like sending a "New User Registration" email to the admin with blank "Username" and "Email" values.
&lt;/p&gt;
&lt;p&gt;
The failure is due to &lt;code&gt;$wpdb-&amp;gt;process_fields()&lt;/code&gt; calling &lt;code&gt;$wpdb-&amp;gt;strip_invalid_text()&lt;/code&gt;, which truncates the &lt;code&gt;display_name&lt;/code&gt; field (because the &lt;code&gt;display_name&lt;/code&gt; field only allows 250 bytes), and because it then doesn't match the value passed into &lt;code&gt;$wpdb-&amp;gt;process_fields()&lt;/code&gt;, it returns &lt;code&gt;false&lt;/code&gt;. So this isn't so much a bug about a text string that's too long, it's really a bug about not checking the return value of &lt;code&gt;$wpdb-&amp;gt;insert()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I think the resolution of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10377" title="#10377: defect (bug): Comment fields should have max lengths (closed: fixed)"&gt;#10377&lt;/a&gt; is probably the same kind of approach that could be taken here, since the problems seem similar.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36292 (Rewrites: Next Generation) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Sun, 03 Apr 2016 05:05:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36292#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36292#comment:11/1459659921893484</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36292#comment:10" title="Comment 10"&gt;giuseppe.mazzapica&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36292#comment:9" title="Comment 9"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think both of the solutions suggested here might be missing something.
&lt;/p&gt;
&lt;p&gt;
If hooks are used as @giuseppe.mazzapica then unit testing will be more difficult if not close to impossible, and that is Part 2 of @rmccue's requirements &lt;em&gt;(which I definitely agree with.)&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Why? Can you better explain this? If there will be a callback or an object that receives an array of rules and do the parsing, you can easily unit test that callback or object by passing to it an arbitrary set of rules.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Actually, you can test but you cannot really &lt;strong&gt;&lt;em&gt;unit&lt;/em&gt;&lt;/strong&gt; test.
&lt;/p&gt;
&lt;p&gt;
You &lt;em&gt;can&lt;/em&gt; do is &lt;em&gt;"integration"&lt;/em&gt; testing though, and that's what your test suites in Cortex are doing.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://www.toptal.com/qa/how-to-write-testable-code-and-why-it-matters"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Here is an article&lt;/a&gt; that explains the difference.
&lt;/p&gt;
&lt;p&gt;
Of course you can't really unit test &lt;em&gt;anything&lt;/em&gt; that has a hook in it, which indicts the majority of the WordPress extension API, and I am fully aware of that.
&lt;/p&gt;
&lt;p&gt;
It is possible that we should use hooks for routing -- because that is how practically everything else in WordPress is extended -- and forgo the benefits of unit testing and be satisfied instead with integration testing in exchange for easier extensibility.  Personally I am on the fence about it and could go either way.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The "chunck" step, will create an array for every rule, and arrays are notoriously memory consuming. That's the less.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The existing system uses arrays, and unless we generate code with &lt;code&gt;switch&lt;/code&gt; statements -- not going to happen for a user-administerable blogging software -- there is not many others way to handle it routing patterns besides arrays.  Also, when you wrote &lt;em&gt;"will create an array for every rule"&lt;/em&gt; it implies to me that you may simply not understand what I proposed?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is why I proposed a system that adds rules with a callback: using a callback is very easy to pass context to it and implement rule logic based on context. In fact, I proposed that rule callbacks should receive an instance of the yet to come WP_HTTP_Request (that @rmccue mentioned in OP). That object would be enough to provide all the context is needed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As best I can tell from what you proposed the callback is not called until &lt;em&gt;after&lt;/em&gt; the regex matches, so unless I misunderstand your suggestion the matches would still be context free.
&lt;/p&gt;
&lt;p&gt;
Maybe your definition of &lt;em&gt;"context"&lt;/em&gt; is different than I intended when I used it? The context I meant was that state of the system configuration and/or data currently in the system.  For example, if we want Categories in the URL root and we have a &lt;code&gt;sports&lt;/code&gt; category slug then that URL would route to the Category Archive instead of routing to a Page with a URL slug of &lt;code&gt;sports&lt;/code&gt;.  &lt;em&gt;(And with the approach I proposed we'd need to make sure users were warned when path segments became ambigous.)&lt;/em&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Consider, first of all, that FastRoute performs a singular &lt;code&gt;preg_match_all&lt;/code&gt; call to find a match among all rules.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Are you &lt;strong&gt;absolutely certain, without-a-doubt&lt;/strong&gt; that the above statements of yours that I quoted is correct?
&lt;/p&gt;
&lt;p&gt;
I assert your statement is not correct and that FastRoute chucks in groups of ~10 rules meaning it may need to make many more than a single &lt;code&gt;preg_match_all()&lt;/code&gt; call in order to match a URL.  Would you like me to prove my assertion?
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
P.S. BTW, I set up a test with Cortex and one thing I noticed was quite a lot of overhead in the autoloading and the creation of all the objects prior to getting to the point of calling &lt;code&gt;Router-&amp;gt;match()&lt;/code&gt;. Further &lt;code&gt;Router-&amp;gt;parseRoutes&lt;/code&gt; does a lot of work on each page load that could be cached. That includes &lt;code&gt;RouteParser-&amp;gt;parse()&lt;/code&gt; doing a &lt;code&gt;preg_split()&lt;/code&gt; and &lt;code&gt;RouteParser-&amp;gt;parsePlaceholders() &lt;/code&gt;doing a &lt;code&gt;preg_match_all()&lt;/code&gt; for each route for each page load.
&lt;/p&gt;
&lt;p&gt;
So even if FastRoute only performed a singular &lt;code&gt;preg_match_all&lt;/code&gt; call the two extra regex you do for each rule negates your assertions there is only one.
&lt;/p&gt;
&lt;p&gt;
Since I did not profile your code I have no certainty on the amount of overhead  all your setup adds but it felt like a lot of overhead as implemented as It took what seemed like forever to trace through it using XDEBUG just to get to &lt;code&gt;Router-&amp;gt;match()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I also have not yet profiled my proposed approach for performance either. FWIW.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29040 (Customizer: Header Image not Updating when using static front page) updated</title>
      
        <dc:creator>davidakennedy</dc:creator>

      <pubDate>Sat, 02 Apr 2016 21:47:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29040#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29040#comment:11/1459633677569369</guid>
      <description>&lt;p&gt;
I did some more testing on this, and it appears to be isolated to WordPress 4.4 and above.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #35917,​36404 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 02 Apr 2016 21:29:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=35917%2C36404</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=35917%2C36404/1459632571961150</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35917" title="#35917: enhancement: Update `grunt-patch-wordpress` version to include support for ... (closed: fixed)"&gt;#35917&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>36404.diff attached to Ticket #36404</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Sat, 02 Apr 2016 21:28:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36404/36404.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36404/36404.diff/1459632524606418</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36404 (Allow uploading of patches from the command line) created</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Sat, 02 Apr 2016 21:28:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36404</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36404/1459632483484624</guid>
      <description>&lt;p&gt;
The next version of grunt-patch-wordpress includes patch uploading, this would be a cool thing to enable.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36354 (Bundled themes: Bump version numbers, changelogs and POT files for 4.5 ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 02 Apr 2016 21:20:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36354#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36354#comment:3/1459632024008896</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-themes by davidakennedy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-themes/p1459632022000042"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36354 (Bundled themes: Bump version numbers, changelogs and POT files for 4.5 ...) updated</title>
      
        <dc:creator>davidakennedy</dc:creator>

      <pubDate>Sat, 02 Apr 2016 21:15:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36354#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36354#comment:2/1459631747946474</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Changelogs updated:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://codex.wordpress.org/Twenty_Eleven_Theme_Changelog#Version_2.4"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Twenty_Eleven_Theme_Changelog#Version_2.4&lt;/a&gt;
&lt;a class="ext-link" href="http://codex.wordpress.org/Twenty_Twelve_Theme_Changelog#Version_2.0"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Twenty_Twelve_Theme_Changelog#Version_2.0&lt;/a&gt;
&lt;a class="ext-link" href="http://codex.wordpress.org/Twenty_Thirteen_Theme_Changelog#Version_1.9"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Twenty_Thirteen_Theme_Changelog#Version_1.9&lt;/a&gt;
&lt;a class="ext-link" href="http://codex.wordpress.org/Twenty_Fourteen_Theme_Changelog#Version_1.7"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Twenty_Fourteen_Theme_Changelog#Version_1.7&lt;/a&gt;
&lt;a class="ext-link" href="http://codex.wordpress.org/Twenty_Fifteen_Theme_Changelog#Version_1.5"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Twenty_Fifteen_Theme_Changelog#Version_1.5&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I did not update Twenty Ten as nothing changed. Not sure if we would still need to update POT files for it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36354.patch attached to Ticket #36354</title>
      
        <dc:creator>davidakennedy</dc:creator>

      <pubDate>Sat, 02 Apr 2016 21:11:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36354/36354.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36354/36354.patch/1459631497616244</guid>
      <description>&lt;p&gt;
Update version numbers and readme file for 4.5 release.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36394 (git-or-svn module assumes only one can be true) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Sat, 02 Apr 2016 20:48:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36394#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36394#comment:7/1459630081091091</guid>
      <description>&lt;p&gt;
Removed ES2015 syntax and made it compatible with node &amp;gt;= 0.10.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36394.5.patch attached to Ticket #36394</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Sat, 02 Apr 2016 20:45:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36394/36394.5.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36394/36394.5.patch/1459629922770501</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36394 (git-or-svn module assumes only one can be true) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Sat, 02 Apr 2016 20:14:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36394#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36394#comment:6/1459628080178754</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I don't think this is worth changing for 4.5.  Having both git and svn in a checkout seems like an edgecase to me, and not one that . The case of having a full svn checkout is uncommon, but also something that's not specifically supported by any of the other VC agnostic tools..
&lt;/p&gt;
&lt;p&gt;
Was this reported upstream to git-or-svn?
&lt;/p&gt;
&lt;p&gt;
As far as the patch itself, we can't use &lt;code&gt;let&lt;/code&gt;, arrow functions or many other es6 functions with node 0.12 or 0.10 so I can't even test to see if it works as expected.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36394 (git-or-svn module assumes only one can be true) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Sat, 02 Apr 2016 20:02:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36394#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36394#comment:5/1459627357964598</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36394 (git-or-svn module assumes only one can be true) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Sat, 02 Apr 2016 19:56:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36394#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36394#comment:4/1459626972067037</guid>
      <description>&lt;p&gt;
@jorbin @netweb Could you review this please?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36394.4.patch attached to Ticket #36394</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Sat, 02 Apr 2016 19:55:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36394/36394.4.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36394/36394.4.patch/1459626905701842</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36389 (Selective refresh for widgets gets lost once `refresh` is used) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 02 Apr 2016 17:56:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36389#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36389#comment:11/1459619774495895</guid>
      <description>&lt;p&gt;
There, &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36389/36389.1.diff" title="Attachment '36389.1.diff' in Ticket #36389"&gt;36389.1.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36389/36389.1.diff" title="Download"&gt;​&lt;/a&gt; fixes the issue by ensuring the preview filter for &lt;code&gt;sidebars_widgets&lt;/code&gt; gets added before the sidebars are iterated for adding the controls.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36393 (Loss of multibyte comment author names) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 02 Apr 2016 15:14:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36393#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36393#comment:2/1459610059765238</guid>
      <description>&lt;p&gt;
This is (more or less) taken care of in 4.5 by checking the submitted strings lengths, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10377" title="#10377: defect (bug): Comment fields should have max lengths (closed: fixed)"&gt;#10377&lt;/a&gt;. Trying to use &lt;code&gt;ﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃﾃ&lt;/code&gt; as comment author name in trunk blocks the comment and triggers an error.
&lt;/p&gt;
&lt;p&gt;
In this particular case showing an error is quite better UX than silently truncating somebody's name :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20746 (Accessing non-existing theme folder in Network install gives 500 error) updated</title>
      
        <dc:creator>Maigret</dc:creator>

      <pubDate>Sat, 02 Apr 2016 12:58:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20746#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20746#comment:33/1459601881445406</guid>
      <description>&lt;p&gt;
Hi everyone,
&lt;/p&gt;
&lt;p&gt;
I can confirm this behavior on subfolder fresh new multisite installation. The fix mentioned above (removing interrogation point) is working fine on our dedicated server.
&lt;/p&gt;
&lt;p&gt;
Let me know if I can help.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36394 (git-or-svn module assumes only one can be true) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Sat, 02 Apr 2016 12:36:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36394#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36394#comment:3/1459600573090007</guid>
      <description>&lt;p&gt;
Adjusted the task for you, @netweb.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36394.3.patch attached to Ticket #36394</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Sat, 02 Apr 2016 12:34:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36394/36394.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36394/36394.3.patch/1459600498474641</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36403 (Incorrect use of E_USER_NOTICE in wpdb::_real_escape()) created</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 02 Apr 2016 11:26:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36403</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36403/1459596365520147</guid>
      <description>&lt;p&gt;
in &lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/4.4.2/src/wp-includes/wp-db.php?marks=1136,1138#L1113"&gt;wpdb::_real_escape()&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/4.4.2/src/wp-includes/wp-db.php#L1113" title="Download"&gt;​&lt;/a&gt;, the last parameter for &lt;code&gt;_doing_it_wrong()&lt;/code&gt; calls is &lt;code&gt;E_USER_NOTICE&lt;/code&gt;, which leads to the following message:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
wpdb must set a database connection for use with escaping. This message was added in version 1024.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It was apparently influenced by &lt;a class="ext-link" href="http://php.net/manual/en/function.trigger-error.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;trigger_error()&lt;/a&gt;. For &lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/_doing_it_wrong/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;_doing_it_wrong()&lt;/a&gt;, however, the last parameter should be the version of WordPress where the message was added, i.e. &lt;code&gt;'3.6'&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/24758" title="Check that we have a database connection in wpdb::_real_escape(). see ..."&gt;[24758]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Tickets #35111,​36395 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 02 Apr 2016 11:16:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=35111%2C36395</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=35111%2C36395/1459595792537728</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37156" title="Plugins: Use correct placeholder for the number of reviews.
 ..."&gt;37156&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Plugins: Use correct placeholder for the number of reviews.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;number_format_i18n()&lt;/code&gt; returns a string, not an integer.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35111" title="#35111: defect (bug): Remove title attributes: the Plugin details modal. (closed: fixed)"&gt;#35111&lt;/a&gt;.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36395" title="#36395: defect (bug): Information in aria-label incorrect for reviews in plugin details (closed: fixed)"&gt;#36395&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [37156]: Plugins: Use correct placeholder for the number of reviews.  ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 02 Apr 2016 11:16:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37156</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37156/1459595792022646</guid>
      <description>&lt;p&gt;
Plugins: Use correct placeholder for the number of reviews.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;number_format_i18n()&lt;/code&gt; returns a string, not an integer.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35111" title="#35111: defect (bug): Remove title attributes: the Plugin details modal. (closed: fixed)"&gt;#35111&lt;/a&gt;.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36395" title="#36395: defect (bug): Information in aria-label incorrect for reviews in plugin details (closed: fixed)"&gt;#36395&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Tickets #35111,​36396 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 02 Apr 2016 11:11:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=35111%2C36396</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=35111%2C36396/1459595512819946</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37155" title="I18N: Clarify translator comment for an a11y label added in [36618].
 ..."&gt;37155&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
I18N: Clarify translator comment for an a11y label added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36618" title="Accessibility: Remove title attributes from the Plugin details modal.
 ..."&gt;[36618]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props TacoVerdo.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35111" title="#35111: defect (bug): Remove title attributes: the Plugin details modal. (closed: fixed)"&gt;#35111&lt;/a&gt;.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36396" title="#36396: defect (bug): Make clear which variable is used for singular/plural (closed: fixed)"&gt;#36396&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [37155]: I18N: Clarify translator comment for an a11y label added in [36618].  ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 02 Apr 2016 11:11:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37155</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37155/1459595512068361</guid>
      <description>&lt;p&gt;
I18N: Clarify translator comment for an a11y label added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36618" title="Accessibility: Remove title attributes from the Plugin details modal.
 ..."&gt;[36618]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Props TacoVerdo.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35111" title="#35111: defect (bug): Remove title attributes: the Plugin details modal. (closed: fixed)"&gt;#35111&lt;/a&gt;.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36396" title="#36396: defect (bug): Make clear which variable is used for singular/plural (closed: fixed)"&gt;#36396&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>36389.1.diff attached to Ticket #36389</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 02 Apr 2016 09:25:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36389/36389.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36389/36389.1.diff/1459589121135917</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36389 (Selective refresh for widgets gets lost once `refresh` is used) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 02 Apr 2016 09:12:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36389#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36389#comment:10/1459588341000664</guid>
      <description>&lt;p&gt;
Seeing a problem with the patch. If the preview is refreshed after a new widget is added, it will not be included among the activeControls and so it will then appear to fade out even though the widget appears in the preview.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36376 (current_user_can/has_cap fails when user has multiple roles) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sat, 02 Apr 2016 09:11:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36376#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36376#comment:6/1459588293211381</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
We discussed this issue at WCTRN contributor day, and we couldn't reproduce the issue even with various permutations of WPFront User Role Editor and WooCommerce activated or not.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36376/36376.tests.diff" title="Attachment '36376.tests.diff' in Ticket #36376"&gt;36376.tests.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36376/36376.tests.diff" title="Download"&gt;​&lt;/a&gt; is a test that demonstrates the current behaviour works as expected and that a user with the roles of Author and Customer does indeed have the &lt;code&gt;edit_posts&lt;/code&gt; cap.
&lt;/p&gt;
&lt;p&gt;
Is there anything missing from that test Mike?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36392 (wp_add_inline_script() breaks script dependency order when using ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 02 Apr 2016 08:45:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36392#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36392#comment:5/1459586750574235</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36389 (Selective refresh for widgets gets lost once `refresh` is used) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 02 Apr 2016 08:42:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36389#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36389#comment:9/1459586555612639</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Ultimately it looks like the issue is that the widget settings are being registered too early, and that they need to be deferred until &lt;code&gt;widgets_init&lt;/code&gt;. @scamartist26 please test &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36389/36389.0.diff" title="Attachment '36389.0.diff' in Ticket #36389"&gt;36389.0.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36389/36389.0.diff" title="Download"&gt;​&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36389.0.diff attached to Ticket #36389</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 02 Apr 2016 08:41:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36389/36389.0.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36389/36389.0.diff/1459586487182230</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>patch.diff attached to Ticket #36402</title>
      
        <dc:creator>cristovaov</dc:creator>

      <pubDate>Sat, 02 Apr 2016 08:20:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36402/patch.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36402/patch.diff/1459585212143699</guid>
      <description>&lt;p&gt;
Patch function get_front_page_template()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36402 (front-page.php behavior for child themes) created</title>
      
        <dc:creator>cristovaov</dc:creator>

      <pubDate>Sat, 02 Apr 2016 08:18:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36402</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36402/1459585139044744</guid>
      <description>&lt;p&gt;
Currently, if a parent theme has a &lt;code&gt;front-page.php&lt;/code&gt; template, child theme inherits this too.
&lt;/p&gt;
&lt;p&gt;
I think this should not happen.
&lt;/p&gt;
&lt;p&gt;
On this specific case, I think that a child theme should behave like a parent one.
The attached patch checks:
&lt;/p&gt;
&lt;pre class="wiki"&gt;   if
     * A child theme is NOT used
     or
       * A child theme is being used and includes 'front-page.php'
   then
     * Load 'front-page.php'
&lt;/pre&gt;&lt;p&gt;
This allows a child theme to include its own &lt;code&gt;front-page.php&lt;/code&gt; template or setting the &lt;em&gt;front-page&lt;/em&gt; to a page from the 'Reading' setting.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36389 (Selective refresh for widgets gets lost once `refresh` is used) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 02 Apr 2016 04:12:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36389#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36389#comment:8/1459570355571283</guid>
      <description>&lt;p&gt;
OK, I think the issue is this: when you edit a widget, it will be included among the &lt;code&gt;customized&lt;/code&gt; state and will be seen when accessing &lt;code&gt;WP_Customize_Manager::unsanitized_post_values()&lt;/code&gt;. The &lt;code&gt;WP_Customize_Widgets::register_settings()&lt;/code&gt; method is called at &lt;code&gt;after_setup_theme&lt;/code&gt; and it ensures that any widgets in the &lt;code&gt;customized&lt;/code&gt; state are registered up front. The &lt;code&gt;WP_Customize_Widgets::get_selective_refreshable_widgets()&lt;/code&gt; method is getting called before the &lt;code&gt;widgets_init&lt;/code&gt; is triggered, and because of this none of the widgets have been registered and so an empty array gets cached.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36394 (git-or-svn module assumes only one can be true) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Sat, 02 Apr 2016 03:01:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36394#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36394#comment:2/1459566085437939</guid>
      <description>&lt;p&gt;
Rather than creating another ticket adding support for full repo SVN checkouts whilst we're at it would be great. I've got checkouts (used for alternate version testing etc) of WordPress (and bbPress and BuddyPress) using &lt;code&gt;https://develop.svn.wordpress.org/&lt;/code&gt; rather than &lt;code&gt;https://develop.svn.wordpress.org/trunk&lt;/code&gt;, as such the &lt;code&gt;.svn&lt;/code&gt; folder is up the directory tree one folder alongside the &lt;code&gt;branches&lt;/code&gt;, &lt;code&gt;tags&lt;/code&gt;, and &lt;code&gt;trunk&lt;/code&gt; folders.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;netweb@MacBook ~/dev/develop.svn.wordpress.org
&lt;span class="nv"&gt;$ &lt;/span&gt;ls
total 0
drwxr-xr-x   6 netweb staff  204 Apr  2 13:56 .
drwxr-xr-x  44 netweb staff 1.5K Mar 31 17:51 ..
drwxr-xr-x   8 netweb staff  272 Nov 20 16:06 .svn
drwxr-xr-x  28 netweb staff  952 Dec 15 19:39 branches
drwxr-xr-x 154 netweb staff 5.2K Apr  2 13:59 tags
drwxr-xr-x  18 netweb staff  612 Mar 26 00:34 trunk
netweb@MacBook ~/dev/develop.svn.wordpress.org
&lt;span class="nv"&gt;$ &lt;/span&gt;svn info
Path: .
Working Copy Root Path: /Users/netweb/dev/develop.svn.wordpress.org
URL: https://develop.svn.wordpress.org
Relative URL: ^/
Repository Root: https://develop.svn.wordpress.org
Repository UUID: 602fd350-edb4-49c9-b593-d223f7449a82
Revision: 37154
Node Kind: directory
Schedule: normal
Last Changed Author: azaozz
Last Changed Rev: 37154
Last Changed Date: 2016-04-02 08:12:18 +1100 &lt;span class="o"&gt;(&lt;/span&gt;Sat, 02 Apr 2016&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36292 (Rewrites: Next Generation) updated</title>
      
        <dc:creator>giuseppe.mazzapica</dc:creator>

      <pubDate>Sat, 02 Apr 2016 00:33:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36292#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36292#comment:10/1459557200987352</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36292#comment:9" title="Comment 9"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think both of the solutions suggested here might be missing something.
&lt;/p&gt;
&lt;p&gt;
If hooks are used as @giuseppe.mazzapica then unit testing will be more difficult if not close to impossible, and that is Part 2 of @rmccue's requirements &lt;em&gt;(which I definitely agree with.)&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Why? Can you better explain this? If there will be a callback or an object that receives an array of rules and do the parsing, you can easily unit test that callback or object by passing to it an arbitrary set of rules.
&lt;/p&gt;
&lt;p&gt;
That said, there are 2 ways to collect that array of rules: using a global array (just like dozen of other feaures are implemented in WP) or use a &lt;code&gt;RulesCollection&lt;/code&gt; object (that will be stored in a global var anyway).
&lt;/p&gt;
&lt;p&gt;
In both cases you'll be able to also test the code that adds rules. If both &lt;em&gt;collecting&lt;/em&gt; code and &lt;em&gt;parsing&lt;/em&gt; code will be testable, and pretty easily I have to say, which is the issue here? Maybe an example will help me understanding.
&lt;/p&gt;
&lt;p&gt;
And, by the way, I use hooks in Cortex (&lt;a class="ext-link" href="https://github.com/Brain-WP/Cortex"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/Brain-WP/Cortex&lt;/a&gt;) and it has an unit tests coverage of 95.57% (&lt;a class="ext-link" href="https://codecov.io/github/Brain-WP/Cortex?branch=refactoring-fastroute"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codecov.io/github/Brain-WP/Cortex?branch=refactoring-fastroute&lt;/a&gt;).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
OTOH, @rmccue's solution to use an object is a great first step is does not address other issues that the rewrite system has. The biggest problem I've run into with URL routing on client projects is that WordPress's rewrite system is context free and what we've often needed has been context sensitive routes. For example, if you want to have an &lt;code&gt;/about/&lt;/code&gt; URL and also have your categories in the root &lt;code&gt;/politics/&lt;/code&gt; and &lt;code&gt;/sports/&lt;/code&gt; you can't do it with the WordPress Rewrite system as-is. And simply ignoring those use-case requirements ends up giving people who are against WordPress more ammunition to shoot it down.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm very agree with this. This is why I proposed a system that adds rules with a callback: using a callback is very easy to pass context to it and implement rule logic based on context. In fact, I proposed that rule callbacks should receive an instance of the yet to come &lt;code&gt;WP_HTTP_Request&lt;/code&gt; (that @rmccue mentioned in OP). That object would be enough to provide all the context is needed.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That said, while FastRoute is excellent engineering by @nikic, he overlooked one of the most obvious optimizations you can do with URLs and that is segment chunking &lt;em&gt;(although I won't take credit for recognizing it; it was Otto who gave me the idea.)&lt;/em&gt;  So that instead of looking at URLs in groups of 10 you look at segments instead.
&lt;/p&gt;
&lt;p&gt;
What's more, you can subdivide the URLs you need to look at by grouping them based on the number of slash-separated segments they contain. Once we have conceptually divided up by number of segments, we can really optimize matching.
&lt;/p&gt;
&lt;p&gt;
For the root segment for most WordPress sites you will not have that many unique segments; throw them into an array and do an &lt;code&gt;in_array()&lt;/code&gt; &lt;em&gt;(or into a string using strpos`)&lt;/em&gt; to find the proper route; likely much faster than using groups of 10 regex.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sorry, but segment chunking will absolutely &lt;strong&gt;not&lt;/strong&gt; be an optimization compared to FastRoute (even if it may be an optimization compared to current WP implementation).
&lt;/p&gt;
&lt;p&gt;
Consider, first of all, that FastRoute performs &lt;strong&gt;a singular &lt;code&gt;preg_match_all&lt;/code&gt; call&lt;/strong&gt; to find a match among all rules.
&lt;/p&gt;
&lt;p&gt;
Using the "chuncks" approach you have to chunck, then filter, then finally perform matching.
&lt;/p&gt;
&lt;p&gt;
The "chunck" step, will create an array for every rule, and arrays are notoriously memory consuming. That's the less.
&lt;/p&gt;
&lt;p&gt;
Regarding the "filter" step, if a rule contains one or more variable chuncks, and very likely it does, to include / exclude the rule from the "matched rule candidates" you need to perform -at least- one &lt;code&gt;preg_match&lt;/code&gt; per rule and &lt;strong&gt;each&lt;/strong&gt; of those &lt;code&gt;preg_match&lt;/code&gt;, will consume almost the same time of the singular &lt;code&gt;preg_match_all&lt;/code&gt; call that FastRoute performs.
&lt;/p&gt;
&lt;p&gt;
After all rules are filtered, you still have to find the one that matches...
&lt;/p&gt;
&lt;p&gt;
In short, the chuncking approach would be more performant of FastRoute only in the very edge case in which there are just few rules and none of the contains variable parts. In other cases it would be from several to dozens (potentially hundreds) times less performant.
&lt;/p&gt;
&lt;p&gt;
Note that my words are based on experience. In my first attempt to a routing system for WP, that was 2 years ago with Clever Rules (&lt;a class="ext-link" href="https://github.com/Giuseppe-Mazzapica/CleverRules"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/Giuseppe-Mazzapica/CleverRules&lt;/a&gt;), I was using the "chunking" approach (very similar to the one you describe). The performance gain I have now using FastRoute is not trivial.
&lt;/p&gt;
&lt;p&gt;
However, I see the benefit of looking at URL segments in term of convenience, because you can use different logic based on, for instance, the root URL chunck.
&lt;/p&gt;
&lt;p&gt;
This is why, in Cortex, the action I use to add rules passes an instance of PSR-7 &lt;code&gt;UriInterface&lt;/code&gt; (&lt;a class="ext-link" href="https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-7-http-message.md#35-psrhttpmessageuriinterface"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-7-http-message.md#35-psrhttpmessageuriinterface&lt;/a&gt;) that gives me the possibility to conditionally &lt;em&gt;add&lt;/em&gt; rules. This is possible in Cortex because there I use &lt;code&gt;do_parse_request&lt;/code&gt; hook, will not be possible in core until the flushing system will not be refactored, as already discussed in a previous post.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>