<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #20997 (Multisite not honoring upload_filetypes) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 15 Jul 2012 22:39:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20997#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20997#comment:6/1342391982410387</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've added a note to the &lt;a class="ext-link" href="http://codex.wordpress.org/Network_Admin_Settings_Screen#Upload_Settings"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Network Admin Settings Screen&lt;/a&gt; page.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21274 (Broken link for next comment pages for page on front) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 15 Jul 2012 22:20:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21274#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21274#comment:1/1342390837114828</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I can't reproduce this following the steps provided the description. The URL I get is &lt;code&gt;http://trunk.wordpress/comment-page-1/#comments&lt;/code&gt;, and it works fine.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;url&lt;/code&gt; and &lt;code&gt;ref&lt;/code&gt; parameters don't look like WP query variables. Could you try with all plugins disabled?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21283 (Keyboard focus in the theme customizer should be on left options panel) updated</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Sun, 15 Jul 2012 22:06:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21283#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21283#comment:1/1342390011912001</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Ran into this myself this other day. Extremely frustrating and completely inaccessible. Moving to 3.5 to see how we can actively address it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14539 (Cache-Control / Expires headers not applied to files in Multisite ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 15 Jul 2012 21:45:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14539#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14539#comment:7/1342388710588201</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Version number indicates when the bug was initially introduced/reported.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14539 (Cache-Control / Expires headers not applied to files in Multisite ...) updated</title>
      
        <dc:creator>Coopeh</dc:creator>

      <pubDate>Sun, 15 Jul 2012 21:41:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14539#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14539#comment:6/1342388490843227</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Receiving the same issues using Nginx, although they are returning as 304 instead of 200 in my case. It will only take the global expires setting and not adhere to the one I've set for static objects, png/jpg/js etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21271 (Make admin backend unit-tests friendly) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Sun, 15 Jul 2012 20:39:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21271#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21271#comment:2/1342384791912551</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21284 (Better New Plugin Filtering) updated</title>
      
        <dc:creator>cbesett</dc:creator>

      <pubDate>Sun, 15 Jul 2012 20:30:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21284#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21284#comment:3/1342384244075348</guid>
      <description>&lt;p&gt;
The real need is the Add Plugin area of the wordpress installation though.  I agree better sorting at the beginning would be recommended.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21284 (Better New Plugin Filtering) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 15 Jul 2012 20:12:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21284#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21284#comment:2/1342383174445133</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
An even better approach would be if the search results were ordered automatically by all these criteria.
&lt;/p&gt;
&lt;p&gt;
Anyway, this seems like a .org thing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21280 (Upload title in hebrew in flipped) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 15 Jul 2012 19:47:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21280#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21280#comment:1/1342381655517244</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
That screenshot looks like it's made in WordPress 3.2.1.
&lt;/p&gt;
&lt;p&gt;
In 3.3, a new file uploader was introduced (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18206" title="#18206: task (blessed): Upgrade the file uploader (closed: fixed)"&gt;#18206&lt;/a&gt;), which uses HTML5 first and should fall back to Flash only in IE if Silverlight is not installed.
&lt;/p&gt;
&lt;p&gt;
Could you check if the issue still exists in 3.4.1?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20534 (Featured Image (Post Thumbnail) SSL Issue) updated</title>
      
        <dc:creator>xyzzy</dc:creator>

      <pubDate>Sun, 15 Jul 2012 19:20:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20534#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20534#comment:4/1342380042539962</guid>
      <description>&lt;p&gt;
Might this be considered for 3.5 or beyond?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20534 (Featured Image (Post Thumbnail) SSL Issue) updated</title>
      
        <dc:creator>xyzzy</dc:creator>

      <pubDate>Sun, 15 Jul 2012 19:18:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20534#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20534#comment:3/1342379924678811</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12267 (Upgrade loop objects to provide identical presentational interfaces) updated</title>
      
        <dc:creator>toppa</dc:creator>

      <pubDate>Sun, 15 Jul 2012 19:06:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12267#comment:63</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12267#comment:63/1342379177883860</guid>
      <description>&lt;p&gt;
Thanks scribu - I've corrected the magic set (the "if" block was leftover from when I originally tried making the properties private).
&lt;/p&gt;
&lt;p&gt;
This will be a work in progress for a bit, so instead of posting a series of patches here, anyone interested can follow or contribute on GitHub: &lt;a class="ext-link" href="https://github.com/toppa/WordPress/compare/adding-wp-post-class"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/toppa/WordPress/compare/adding-wp-post-class&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21276 (Respect 'suppress_filters' arg in WP_Query-&gt;get_posts()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 15 Jul 2012 18:09:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21276#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21276#comment:2/1342375790455546</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21281 (RTL indention icons need to be flipped) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 15 Jul 2012 17:55:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21281#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21281#comment:1/1342374916743417</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Seems to be broken since 2.5 (2.3.3 used nested &lt;code&gt;&amp;lt;blockquote&amp;gt;&lt;/code&gt; tags for indentation).
&lt;/p&gt;
&lt;p&gt;
I've tried to add &lt;code&gt;directionality : "rtl"&lt;/code&gt; and directionality plugin to &lt;a class="ext-link" href="http://fiddle.tinymce.com/baaaab"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;TinyMCE fiddle config&lt;/a&gt;, and couldn't make indentation work there either.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18821 (Add a Last Updated Date Field for Plugins to the WP Backend) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 15 Jul 2012 17:33:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18821#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18821#comment:6/1342373636296675</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21284" title="#21284: feature request: Better New Plugin Filtering (closed: duplicate)"&gt;#21284&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19520 (Display percentage of plugin compatibility when a new WP update is ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 15 Jul 2012 17:33:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19520#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19520#comment:3/1342373634391470</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21284" title="#21284: feature request: Better New Plugin Filtering (closed: duplicate)"&gt;#21284&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21284 (Better New Plugin Filtering) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 15 Jul 2012 17:32:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21284#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21284#comment:1/1342373529311666</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18821" title="#18821: feature request: Add a Last Updated Date Field for Plugins to the WP Backend (closed: maybelater)"&gt;#18821&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19520" title="#19520: enhancement: Display percentage of plugin compatibility when a new WP update is ... (closed: maybelater)"&gt;#19520&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21284 (Better New Plugin Filtering) created</title>
      
        <dc:creator>cbesett</dc:creator>

      <pubDate>Sun, 15 Jul 2012 17:24:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21284</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21284/1342373064409251</guid>
      <description>&lt;p&gt;
Currently trying to sort through available plugins by searching is quite laborious since there is no way to filter out things you don't want - such as plugins that haven't been tested with your version, haven't been updated in 100+ days, have a really low rating, etc.  I'm constantly surprised at how many plugins i have to go through before i can even find one that is compatible with at least WP two versions ago much less the current one.
&lt;/p&gt;
&lt;p&gt;
You should be able to filter on:  Tested with current version, Rating of X+, Download at least XX, and so on to make it easier to find something you want.
&lt;/p&gt;
&lt;p&gt;
And then column sorting after then by date added, date updated, rating, etc.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21282 (Introduce wp_header() pluggable function) updated</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Sun, 15 Jul 2012 15:35:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21282#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21282#comment:2/1342366556971336</guid>
      <description>&lt;p&gt;
When &lt;code&gt;header()&lt;/code&gt; function is used in tested code, PHPUnit will report error in tests because of "Cannot modify header information - headers already sent" warning. Therefore &lt;code&gt;header()&lt;/code&gt; function in tested code has to be either prefixed with &lt;code&gt;@&lt;/code&gt; or stubbed. My patch allows to use the latter approach.
&lt;/p&gt;
&lt;p&gt;
Regarding pluggable functions - I can use another approach, e.g. call &lt;code&gt;wp_header&lt;/code&gt; action from &lt;code&gt;wp_header()&lt;/code&gt; function, and hook a function to it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21237 (Terminology for "Front" and "Home") updated</title>
      
        <dc:creator>sabreuse</dc:creator>

      <pubDate>Sun, 15 Jul 2012 15:01:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21237#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21237#comment:1/1342364513538847</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21282 (Introduce wp_header() pluggable function) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 15 Jul 2012 14:49:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21282#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21282#comment:1/1342363740744489</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
We already have a wp_redirect() function, which should be used instead of &lt;code&gt;header( "Location: ..." )&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I don't see how changing the other headers, such as "Content Type" would help with testing.
&lt;/p&gt;
&lt;p&gt;
Also, I personally don't like pluggable functions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21283 (Keyboard focus in the theme customizer should be on left options panel) created</title>
      
        <dc:creator>pjad</dc:creator>

      <pubDate>Sun, 15 Jul 2012 14:32:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21283</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21283/1342362741626665</guid>
      <description>&lt;p&gt;
For accessibility reasons, users should be able to tab through the options in the theme customizer. Currently when you open the customizer at /wp-admin/customize.php focus appears to be behind the view and it's not clear how you can tab to the options.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>21273.diff attached to Ticket #21282</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Sun, 15 Jul 2012 12:51:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21282/21273.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21282/21273.diff/1342356668144442</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21282 (Introduce wp_header() pluggable function) created</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Sun, 15 Jul 2012 12:47:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21282</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21282/1342356442975494</guid>
      <description>&lt;p&gt;
I will be nice to have pluggable function wrapper for PHP &lt;code&gt;header()&lt;/code&gt; function - this will allow to unit test HTTP headers sent by WordPress. Attached patch adds it, and replaces all existing calls to &lt;code&gt;header()&lt;/code&gt; with it.
&lt;/p&gt;
&lt;p&gt;
Question: some of exiting calls had errors silenced using &lt;code&gt;@&lt;/code&gt;, some not. In my code I added &lt;code&gt;@&lt;/code&gt;. Should I keep it, remove it or maybe add extra param to function to conditionally silence errors?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>carldanley</dc:creator>

      <pubDate>Sun, 15 Jul 2012 12:05:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:32/1342353918096290</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21170#comment:31" title="Comment 31"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The .namespace/identifier bit would only be used do identify the callback, so each "leaf" on the "branch" would have a name and we would be able to easily remove anonymous "leaves" by branch name + leaf name
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I understand what you're saying now. The only question I have is how do we traverse the array to find simulated 'parents' and 'children'. If doAction( 'some.action' ) was called and we know there were several actions that existed such as 'some.action.a' and 'some.action.b', would we first find 'some.action' and then maybe look to a 'family' property that will indicate who the parent/children are? I don't think traversing each key in this flat array and determining who is prefixed with the correct action/identifier is the safest way, especially using for( var in ) to iterate. Thoughts?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If we create the nodes as instances of a small class, or even as simple objects, we can store the nodeType in each.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree in saying that we should keep the actions/filters in separate containers. I don't think it's necessary to specify nodeType of 'action' for 100+ different actions, as an example. We already know that it's an action because we have to access the 'ACTIONS' variable and, for this example, storing a 'nodeType' for each ACTION of value 'action' would mean making the array 600+ bytes heavier at run-time. I would use the same new 'object' class for both actions and filters and maybe pass the nodeType to the scope when needed. Thoughts?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Yeah, chaining is definitely handy. The question is whether it's better to support chaining or to return true/false on success/failure when adding or removing actions and filter.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You're also making me sway on chaining vs. true/false. It would interesting to hear other opinions as well.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Perhaps if we get it right, it can also be released as a stand-alone JS class.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's what I'm shooting for! :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5809 (Updating a term in one taxonomy affects the term in every taxonomy) updated</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Sun, 15 Jul 2012 08:40:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5809#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5809#comment:51/1342341606657896</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21281 (RTL indention icons need to be flipped) created</title>
      
        <dc:creator>AlmogBaku</dc:creator>

      <pubDate>Sun, 15 Jul 2012 08:33:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21281</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21281/1342341186123244</guid>
      <description>&lt;p&gt;
By clicking the padding button(for indention) the action not works - it warpped the text by "p" element with &lt;strong&gt;padding-left&lt;/strong&gt; insted or &lt;strong&gt;padding-right&lt;/strong&gt; in RTL.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21280 (Upload title in hebrew in flipped) created</title>
      
        <dc:creator>AlmogBaku</dc:creator>

      <pubDate>Sun, 15 Jul 2012 08:28:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21280</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21280/1342340899386878</guid>
      <description>&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://easycaptures.com/fs/uploaded/597/6113589647.png"&gt;&lt;img src="http://easycaptures.com/fs/uploaded/597/6113589647.png" alt="http://easycaptures.com/fs/uploaded/597/6113589647.png" crossorigin="anonymous" title="http://easycaptures.com/fs/uploaded/597/6113589647.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
At the upload interface the text is "קבצים לבחור" istead of "לבחור קבצים".
&lt;/p&gt;
&lt;p&gt;
It seems that the flash is flipped the translated text in hebrew.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21279 (get_pages() does not clear cache items when non-Page hierarchical post ...) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Sun, 15 Jul 2012 07:01:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21279#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21279#comment:2/1342335660766367</guid>
      <description>&lt;p&gt;
Workaround for plugins that have hierarchical post types and use get_posts() or wp_list_pages():
&lt;/p&gt;
&lt;pre class="wiki"&gt;
add_action( 'clean_post_cache', 'YOUR_PREFIX_clean_post_cache', 10, 2 );
function YOUR_PREFIX_clean_post_cache( $post_id, $post ) {
	if ( 'YOUR-POST-TYPE' === $post-&amp;gt;post_type )
		wp_cache_delete( 'get_pages', 'posts' ); // See: http://core.trac.wordpress.org/ticket/21279
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21279 (get_pages() does not clear cache items when non-Page hierarchical post ...) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Sun, 15 Jul 2012 06:44:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21279#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21279#comment:1/1342334691171258</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
That patch is the easy approach — just clear the cache for any hierarchical post type. Should we bother segmenting by post_type? What about queries with multiple post_types? Put those in a general bucket? Or shouldn't we bother?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>21279.diff attached to Ticket #21279</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Sun, 15 Jul 2012 06:43:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21279/21279.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21279/21279.diff/1342334615182411</guid>
      <description>&lt;p&gt;
The easy approach.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 15 Jul 2012 06:43:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:31/1342334597186544</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21170#comment:30" title="Comment 30"&gt;carldanley&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
... they (actions and filters) are essentially treated the same, except for how they are processed; the only slight variance is that filters can modify the value passed to them.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right, they are handled the same way in PHP too. Essentially they are the same thing except for filters the returned value of each callback is passed on to the next callback as first arg, and returned at the end.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Are you referencing how the objects for filters &amp;amp; actions are bound with 3 properties ( id, callbacks &amp;amp; children ) and sort of nested within each other?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Uh, sry I didn't explain that well. Was referring to support for more than one namespace/identifier, like: &lt;code&gt;actionname.namespace.other.third&lt;/code&gt;. When parsed that would create a tree-like structure for each action that doesn't seem needed as all actions would be called regardless of the structure. So a "flat" structure, i.e. one branch (actionname) with many leaves (callbacks) would work just as well. The .namespace/identifier bit would only be used to identify the callback, so each "leaf" on the "branch" would have a name and we would be able to easily remove anonymous "leaves" by branch name + leaf name :)
&lt;/p&gt;
&lt;p&gt;
(In 21170.patch the term "namespace" should be read "identifier" as that probably describes it's role better).
&lt;/p&gt;
&lt;p&gt;
Also thinking the namespaces/identifiers should be required as that would make removing anonymous functions easy. As far as I see the most common use of this would be with anonymous functions: `addAction('init.my-thing', function(){...});
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What if we did the following:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;rework the internal storage to have 2 variables or keys for 'actions' and 'filters'.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Actions and filters should be kept separate, i.e. &lt;code&gt;addAction('init')&lt;/code&gt; makes this an "action node", there can't be a filter 'init', &lt;code&gt;applyFilters('something', val)&lt;/code&gt; would be another node, etc. If we create the nodes as instances of a small class, or even as simple objects, we can store the nodeType in each.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;when addAction() is called with a namespace, split it and find every hierarchical identifier to check to see if they exist, creating them, if they don't already exist, as you go, ie. you add "my.awesome.func", build an array of "levels" of identifiers ( [ 'my', 'my.awesome', 'my.awesome.func' ] ) and then loop through the array.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Not sure there's a need for that hierarchy (as explained above). Perhaps some usage examples would help here.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
...I think for this particular case chaining makes good sense when doing something. In terms of useability, I'd rather see/type
&lt;/p&gt;
&lt;pre class="wiki"&gt;$wp.hooks.addAction().addAction().addFilter().addFilter();
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
Yeah, chaining is definitely handy. The question is whether it's better to support chaining or to return true/false on success/failure when adding or removing actions and filter. The example in 21170.patch (and jQuery.Callbacks() I believe) would only add a particular callback once, so returning false on attempts to add it again makes sense. I'm 50/50 on this at the moment, would be good to get more opinions :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What do you think? I appreciate the feedback and am willing to rework logic on this. I've been pumped ever since lgedeon mentioned this ticket to me.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, it's an interesting challenge. Perhaps if we get it right, it can also be released as a stand-alone JS class.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21279 (get_pages() does not clear cache items when non-Page hierarchical post ...) created</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Sun, 15 Jul 2012 06:36:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21279</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21279/1342334211163844</guid>
      <description>&lt;p&gt;
&lt;code&gt;wp_list_pages()&lt;/code&gt; takes a &lt;code&gt;post_type&lt;/code&gt; argument (it works with any hierarchical post type). &lt;code&gt;wp_list_pages()&lt;/code&gt; is powered by &lt;code&gt;get_pages()&lt;/code&gt;. &lt;code&gt;get_pages()&lt;/code&gt; has object caching. When a Page changes (edit, create, delete), this cache is cleared, via &lt;code&gt;clean_post_cache()&lt;/code&gt;. But it is &lt;strong&gt;not&lt;/strong&gt; cleared for non-Page post types. Thus you get stuck with old data.
&lt;/p&gt;
&lt;p&gt;
Here's the offending code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	if ( 'page' == $post-&amp;gt;post_type ) {
		wp_cache_delete( 'all_page_ids', 'posts' );
		wp_cache_delete( 'get_pages', 'posts' );
		do_action( 'clean_page_cache', $post-&amp;gt;ID );
	}
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21278 (Canonical redirect for non-existent singular paged content) created</title>
      
        <dc:creator>smub</dc:creator>

      <pubDate>Sun, 15 Jul 2012 05:41:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21278</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21278/1342330873103638</guid>
      <description>&lt;p&gt;
I'm using version 3.4.1
&lt;/p&gt;
&lt;p&gt;
For ex: we have this article on WPBeginner
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.wpbeginner.com/wp-tutorials/how-install-wordpress-cdn-solution-maxcdn/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.wpbeginner.com/wp-tutorials/how-install-wordpress-cdn-solution-maxcdn/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Anyone can simply add:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.wpbeginner.com/wp-tutorials/how-install-wordpress-cdn-solution-maxcdn/345/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.wpbeginner.com/wp-tutorials/how-install-wordpress-cdn-solution-maxcdn/345/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This will resolve the post with the rel="canonical" for the new page which creates duplicate content.
&lt;/p&gt;
&lt;p&gt;
I tried this with @JJJ at WordCamp columbus. This only works with numbers not letters or characters. It has to do something with post pagination even though the article is not split into pages.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21276 (Respect 'suppress_filters' arg in WP_Query-&gt;get_posts()) updated</title>
      
        <dc:creator>brandondove</dc:creator>

      <pubDate>Sun, 15 Jul 2012 05:27:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21276#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21276#comment:1/1342330030213643</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>21277.diff attached to Ticket #21277</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 15 Jul 2012 05:19:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21277/21277.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21277/21277.diff/1342329567835558</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21277 (Remove unused nonce fields in site-themes.php and site-users.php) created</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 15 Jul 2012 05:18:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21277</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21277/1342329534363985</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/16242" title="site-themes.php cleanup. Props PeteMall. see #14897"&gt;16242&lt;/a&gt; from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14897" title="#14897: task (blessed): Selecting Network Themes &amp;amp; Appearance selection (closed: fixed)"&gt;14897&lt;/a&gt;, &lt;code&gt;check_admin_referer( 'edit-site' )&lt;/code&gt; was removed during a massive reorg of site-themes.php. Additional nonce checks were added via the nonce audit in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15969" title="#15969: defect (bug): Audit nonces (closed: fixed)"&gt;15969&lt;/a&gt;, but the nonce field generation for the original edit-site was never removed. This currently results in the generation of two hidden inputs with &lt;code&gt;name="_wp_nonce"&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;check_admin_referer( 'edit-site' )&lt;/code&gt; was also removed for site-users.php in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/16560" title="Adapt user-list-table for network admin site-users. See #15558"&gt;16560&lt;/a&gt;, but the 2 associated nonce field(s) remained. A 3rd 'edit-site' nonce field was added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/16585" title="Tighter match for the ACL."&gt;16585&lt;/a&gt; when a new form was added, but that has been unnecessary.
&lt;/p&gt;
&lt;p&gt;
The attached patch removes all 4 instances of &lt;code&gt;wp_nonce_field( 'edit-site' )&lt;/code&gt; across site-themes.php and site-users.php as they are no longer required in either.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21273 (Automatically open help panel) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 15 Jul 2012 05:10:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21273#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21273#comment:10/1342329051607613</guid>
      <description>&lt;p&gt;
21273-6.patch is the merge of ticket.21273.4.diff and 21273-5.patch (as discussed with @ptahdunbar in #wordpress-dev).
&lt;/p&gt;
&lt;p&gt;
Still thinking it's a good idea to be able to load a page with the Help panel open. Any confusion can be reduced (eliminated?) if the user can see the panel opening animation. Perhaps this would make some users notice that there's a Help panel :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>21273-6.patch attached to Ticket #21273</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 15 Jul 2012 05:07:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21273/21273-6.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21273/21273-6.patch/1342328831389663</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>carldanley</dc:creator>

      <pubDate>Sun, 15 Jul 2012 05:02:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:30/1342328572407191</guid>
      <description>&lt;p&gt;
It was fun to write! Couple of responses/questions:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The term "namespace" is used loosely in the above example.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree, it was hard coming up with a term that encapsulates the object for both actions &amp;amp; filters. If you looked through the demo, they are essentially treated the same, except for how they are processed; the only slight variance is that filters can modify the value passed to it. That said, what do you think we could call these "objects" to help reduce confusion and standardize it? I will make the changes in comments/code to reflect the more accurate choice of words.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Having a complex structure/tree of actions is not necessary as they are all called at that specific time anyway (same as attaching events to the DOM).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Are you referencing how the objects for filters &amp;amp; actions are bound with 3 properties ( id, callbacks &amp;amp; children ) and sort of nested within each other? What if we did the following:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;rework the internal storage to have 2 variables or keys for 'actions' and 'filters'.
&lt;/li&gt;&lt;li&gt;when addAction() is called with a namespace, split it and find every hierarchical identifier to check to see if they exist, creating them, if they don't already exist, as you go, ie. you add "my.awesome.func", build an array of "levels" of identifiers ( [ 'my', 'my.awesome', 'my.awesome.func' ] ) and then loop through the array. The identifiers could be hashed or literally written as the exact key with string filter to make sure there are no illegal characters as a key within the corresponding array.
&lt;/li&gt;&lt;/ul&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
Chaining might be useful in some cases, however not all methods can be "chainable" as applyFilters will have to return the filtered value.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Just to point out that not all methods in jQuery are 'chainable' either, example; $( object ).height(); or $( object ).width(); I think for this particular case chaining makes good sense when doing something. In terms of useability, I'd rather see/type
&lt;/p&gt;
&lt;pre class="wiki"&gt;$wp.hooks.addAction().addAction().addFilter().addFilter();
&lt;/pre&gt;&lt;p&gt;
than
&lt;/p&gt;
&lt;pre class="wiki"&gt;$wp.hooks.addAction();
$wp.hooks.addAction();
$wp.hooks.addFilter();
$wp.hooks.addFilter();
&lt;/pre&gt;&lt;p&gt;
It's easier to type the first example than the latter.
&lt;/p&gt;
&lt;p&gt;
What do you think? I appreciate the feedback and am willing to rework logic on this. I've been pumped ever since lgedeon mentioned this ticket to me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5809 (Updating a term in one taxonomy affects the term in every taxonomy) updated</title>
      
        <dc:creator>anointed</dc:creator>

      <pubDate>Sun, 15 Jul 2012 04:05:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5809#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5809#comment:50/1342325115032027</guid>
      <description>&lt;p&gt;
+1 for inclusion sooner than later. I keep getting hit by this 'bug' myself.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21270 (Use update_blog_option() when enabling/disabling themes per site in ...) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 15 Jul 2012 03:55:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21270#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21270#comment:2/1342324524657358</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Good point.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/21270/21270.2.diff" title="Attachment '21270.2.diff' in Ticket #21270"&gt;21270.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/21270/21270.2.diff" title="Download"&gt;​&lt;/a&gt; also removes &lt;code&gt;switch_to_blog()&lt;/code&gt; and &lt;code&gt;restore_current_blog()&lt;/code&gt; and replaces &lt;code&gt;get_option()&lt;/code&gt; with &lt;code&gt;get_blog_option()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>21270.2.diff attached to Ticket #21270</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 15 Jul 2012 03:54:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21270/21270.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21270/21270.2.diff/1342324485776860</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21273 (Automatically open help panel) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 15 Jul 2012 02:48:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21273#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21273#comment:9/1342320533520044</guid>
      <description>&lt;p&gt;
21273-5.patch is more or less based on 21273.3.diff and has some improvements. Also supports links on the same page with &lt;code&gt;href="#tab-panel-*"&lt;/code&gt; to open the help on that tab or switch to the tab if the help is already opened.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>21273-5.patch attached to Ticket #21273</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 15 Jul 2012 02:44:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21273/21273-5.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21273/21273-5.patch/1342320298893857</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>21276.diff attached to Ticket #21276</title>
      
        <dc:creator>brandondove</dc:creator>

      <pubDate>Sun, 15 Jul 2012 01:14:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21276/21276.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21276/21276.diff/1342314853356348</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21276 (Respect 'suppress_filters' arg in WP_Query-&gt;get_posts()) created</title>
      
        <dc:creator>brandondove</dc:creator>

      <pubDate>Sun, 15 Jul 2012 01:13:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21276</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21276/1342314830404334</guid>
      <description>&lt;p&gt;
Before trying to run filters, there's a check to see if we should suppress filters using the suppress_filters arg. Four filters run whether or not suppress_filters is set to true. This patch just adds checks against that arg for those filter calls.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21270 (Use update_blog_option() when enabling/disabling themes per site in ...) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 15 Jul 2012 00:42:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21270#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21270#comment:1/1342312940430077</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
If we use update_blog_option(), we can drop the switch_to_blog() / restore_current_blog() which would be done internally now.
&lt;/p&gt;
&lt;p&gt;
It would make sense to do this even without the caching benefit, so +1.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>ticket.21273.4.diff attached to Ticket #21273</title>
      
        <dc:creator>ptahdunbar</dc:creator>

      <pubDate>Sun, 15 Jul 2012 00:40:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21273/ticket.21273.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21273/ticket.21273.4.diff/1342312805526040</guid>
      <description>&lt;p&gt;
removed ability to open help from another page; removed hash updating; adding ability to link to help panel from current page;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21271 (Make admin backend unit-tests friendly) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 15 Jul 2012 00:38:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21271#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21271#comment:1/1342312729419110</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5809 (Updating a term in one taxonomy affects the term in every taxonomy) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Sat, 14 Jul 2012 23:44:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5809#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5809#comment:49/1342309474477648</guid>
      <description>&lt;p&gt;
both counts need to be updated when tt_id is updated in term_relationships - I updated my patch
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>terms.diff attached to Ticket #5809</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Sat, 14 Jul 2012 23:43:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5809/terms.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5809/terms.diff/1342309418143635</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5809 (Updating a term in one taxonomy affects the term in every taxonomy) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Sat, 14 Jul 2012 23:10:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5809#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5809#comment:48/1342307451491214</guid>
      <description>&lt;p&gt;
can someone point me to where unit tests would be included / uploaded / patched, etc?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5809 (Updating a term in one taxonomy affects the term in every taxonomy) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Jul 2012 23:08:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5809#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5809#comment:47/1342307297639285</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21275" title="#21275: defect (bug): Insert new term on wp_update_term when multiple taxonomies share term ... (closed: duplicate)"&gt;#21275&lt;/a&gt; has another patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21275 (Insert new term on wp_update_term when multiple taxonomies share term ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Jul 2012 23:08:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21275#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21275#comment:2/1342307291614228</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16936 (Changing a menu or tag/category title with matching slugs changes both) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Jul 2012 23:05:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16936#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16936#comment:3/1342307137475180</guid>
      <description>&lt;p&gt;
Duplicate: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20707" title="#20707: defect (bug): Menu name and taxonomy Term conflict (closed: duplicate)"&gt;#20707&lt;/a&gt; (which in turn was closed as a duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5809" title="#5809: defect (bug): Updating a term in one taxonomy affects the term in every taxonomy (closed: fixed)"&gt;#5809&lt;/a&gt;).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21275 (Insert new term on wp_update_term when multiple taxonomies share term ...) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sat, 14 Jul 2012 23:01:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21275#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21275#comment:1/1342306911037309</guid>
      <description>duplicate: &lt;p&gt;
Dupe of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5809" title="#5809: defect (bug): Updating a term in one taxonomy affects the term in every taxonomy (closed: fixed)"&gt;#5809&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This is indeed an infuriating bug when you get hit by it. Please have a read through the comments on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5809" title="#5809: defect (bug): Updating a term in one taxonomy affects the term in every taxonomy (closed: fixed)"&gt;#5809&lt;/a&gt; and see if your patch fits the bill. Note that any fix &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5809#comment:40" title="Comment 40 for #5809: defect (bug): Updating a term in one taxonomy affects the term in every taxonomy (closed: fixed)"&gt;won't get in without unit tests&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>terms.diff attached to Ticket #21275</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Sat, 14 Jul 2012 22:52:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21275/terms.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21275/terms.diff/1342306370689984</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21275 (Insert new term on wp_update_term when multiple taxonomies share term ...) created</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Sat, 14 Jul 2012 22:52:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21275</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21275/1342306325783832</guid>
      <description>&lt;p&gt;
This bug, and it is a bug, has had real-world consequences for our site management. Here is the scenario, which I think we are all familiar with:
&lt;/p&gt;
&lt;p&gt;
1) I add a term for post_tag: Brooklyn&lt;br /&gt;
2) I add a term for taxonomy, location: Brooklyn&lt;br /&gt;
3) I add a term for taxonomy, radio_station: Brooklyn&lt;br /&gt;
4) I change the name of my radio_station: Brooklyn's Finest&lt;br /&gt;
5) My tag and location are now called: Brooklyn's Finest&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This sucks. I have if / else'd a few lines of wp_update_term to take this scenario into account. Here is what it does:
&lt;/p&gt;
&lt;p&gt;
1) checks the number of taxonomies a term belongs to&lt;br /&gt;
2) If that number is more than 1:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;stores reference to old_tt_id
&lt;/li&gt;&lt;li&gt;calls wp_insert_term (which wil handle dupe and slug checking, etc)
&lt;/li&gt;&lt;li&gt;updates the term_relationships for posts - old_tt_id becomes new_tt_id generated by wp_insert_term
&lt;/li&gt;&lt;li&gt;calls wp_delete_term on the old term_id which will delete the term cache
&lt;/li&gt;&lt;li&gt;changes the function internal $term_id to whatever wp_insert_term returned
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
3) If count is not more than one, function runs like normal
&lt;/p&gt;
&lt;p&gt;
The result:&lt;br /&gt;
The post_tag and location remain "Brooklyn"&lt;br /&gt;
The radio_station is "renamed" to "Brooklyn's Finest"&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Here is the code stub you can use to test this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action( 'init', function () {
    register_taxonomy( 'radio_station', 'post', array(
        'labels' =&amp;gt; array( 'name' =&amp;gt; 'Radio Stations' )
    ) );
} );
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 14 Jul 2012 22:15:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:29/1342304110745594</guid>
      <description>&lt;p&gt;
Looks very interesting. Couple of "first look" notes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The complex namespace implementation looks good. However I'm not sure we need to go there. The term "namespace" is used loosely in the above example. It works about the same like in jQuery event namespacing and is more of a "unique identifier" than a real namespace. (That's my fault btw, should have called it "identifier"). It can be implemented as above: &lt;code&gt;addAction('actionname.identifier', function(args){...});&lt;/code&gt; or as separate arg: &lt;code&gt;addAction('actionname', 'identifier', function(args){...});&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;
&lt;p&gt;
Generally the actions (and filters) are a way to call specific function at a specific time. Having a complex structure/tree of actions is not necessary as they are all called at that specific time anyway (same as attaching events to the DOM).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
Perhaps if we are implementing "stop execution if any callback returns false" (and that's a big &lt;strong&gt;if&lt;/strong&gt;, since there's no such functionality in the PHP version), having a more complex structure of identifiers (namespaces) would allow for one branch to be stopped while other branches continue. Still, that would be a "border case" functionality. (Normally a plugin would register one callback with &lt;code&gt;addAction&lt;/code&gt; and would expect it to be executed every time when &lt;code&gt;doAction&lt;/code&gt; is triggered. For a "tree" structure to work, plugins would have to share the "branch names" which is quite hard to do, or we will end up with a big tree with many branches  that have only one "leaf" (callback) each, and that's not useful).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;Not sure about support for 'processingMethod'. Imho it's better/more important to be able to directly set the scope for the callbacks (all similar libraries support that). It would be good if you can add some usage examples for this.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Chaining might be useful in some cases, however not all methods can be "chainable" as &lt;code&gt;applyFilters&lt;/code&gt; will have to return the filtered value. Maybe it would be better to leave chaining off and return true/false on whether &lt;code&gt;addAction/addFilter/removeAction/removeFilter&lt;/code&gt; was successful or not.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21266 (Enhancements for page numbers links API) updated</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Sat, 14 Jul 2012 21:47:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21266#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21266#comment:3/1342302443048293</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21274" title="#21274: defect (bug): Broken link for next comment pages for page on front (closed: fixed)"&gt;#21274&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>21271.2.diff attached to Ticket #21266</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Sat, 14 Jul 2012 21:46:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21266/21271.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21266/21271.2.diff/1342302391379794</guid>
      <description>&lt;p&gt;
Path with fix for incorrect index-based permalinks for front page
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21266 (Enhancements for page numbers links API) updated</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Sat, 14 Jul 2012 21:45:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21266#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21266#comment:2/1342302324510040</guid>
      <description>&lt;p&gt;
I have performed some additional tests and found that &lt;code&gt;get_comments_pagenum_link()&lt;/code&gt; and &lt;code&gt;get_post_page_link()&lt;/code&gt; do not generate correct links when both page on front and index-based permalinks are used - generated permalinks does not include the `/index.php/' part. New patch fixes this bug.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21274 (Broken link for next comment pages for page on front) created</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Sat, 14 Jul 2012 21:31:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21274</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21274/1342301465459438</guid>
      <description>&lt;p&gt;
Create page and configure WP do display it on front. Set Comments per page to some small value. Go to front page and add few comments - more than configured Comments per page, so WP will display only some of them and link leading to remaining ones (e.g. &lt;code&gt;&lt;/code&gt;&lt;code&gt;http://wp-beta.local/comment-page-1/#comments&lt;/code&gt;&lt;code&gt;&lt;/code&gt;). This link does not work - when you click it, browser will be redirected to following url, but page contents does not change:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;&lt;/code&gt;&lt;code&gt;http://wp-beta.local/?url=%2Fcomment-page-1%2F&amp;amp;ref=http%3A%2F%2Fwp-beta.local%2F%3Furl%3D%252Fcomment-page-1%252F%26ref%3Dhttp%253A%252F%252Fwp-beta.local%252F#comments&lt;/code&gt;&lt;code&gt;&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Note: permalink format is set to &lt;code&gt;/%postname%/&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21273 (Automatically open help panel) updated</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Sat, 14 Jul 2012 21:25:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21273#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21273#comment:8/1342301137679125</guid>
      <description>&lt;p&gt;
I agree with Jane - I think it's possible that it would be disorienting to a user to do it when the page loads. Imagine if they reload the page with the hash in it, or bookmark it that way. It will always happen, regardless of their intent, and for non-technical users who, in my experience, tend to bookmark something new once they get there and use that bookmark from that point on, having it scroll-and-slide-down every single time would surely be frustrating.
&lt;/p&gt;
&lt;p&gt;
A much more common use case than the plugin row links in my mind would be for looking for guidance when on a screen, e.g. "What am I supposed to put in this field again and why?" When you think of using it that way, clicking a link to an anchor to slide open the available contextual help, which doesn't take you away from your current position on the page because it's fixed to the top, makes a lot more sense.
&lt;/p&gt;
&lt;p&gt;
Thinking on it more, I suppose the question then becomes whether or not there should be something in core that makes it easy to specify that a link will open contextual help (binding an action), since technically you could do it now on your own. A class to use for the link, JS that looks for &lt;code&gt;#tab-panel*&lt;/code&gt; in href's, or something else?
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21273#comment:5" title="Comment 5"&gt;ptahdunbar&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21273#comment:4" title="Comment 4"&gt;helenyhou&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Seems like it'd be much more likely that the link would be to help located on the current screen, so it would need to work whenever, not just on page load.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;I was just pointing out that it works when linking to help panels between pages. It works whenever.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Does it currently or do you mean it could? I just tested again and it doesn't work when it's linking within the page, and the JS tells me it's just activating on document ready.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;FF works smoothly on my mba. don't tell me ur on a winbox ;p
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Nope, also OSX. It appears to put the top corner at the real 0,0, which is behind the admin bar.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21273 (Automatically open help panel) updated</title>
      
        <dc:creator>ptahdunbar</dc:creator>

      <pubDate>Sat, 14 Jul 2012 20:55:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21273#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21273#comment:7/1342299316458889</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21273#comment:6" title="Comment 6"&gt;jane&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I like idea of auto-opening a same-page help tab on click contextually, but am not as sure about switching pages and opening a help tab, seems like it might be disorienting. Might be a situation where popping a modal with the relevant text might be a better experience than dumping them somewhere else to get instructions for something.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well, the idea being that it could be linked from the plugin's row links on the plugins page for quick access after installation. It would be sweet, not a deal-breaker tho.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19729 (WP_Meta_Query is inefficient when only specifying keys in "OR" query) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Sat, 14 Jul 2012 20:53:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19729#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19729#comment:10/1342299206209580</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Resurrecting this for 3.5.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21273 (Automatically open help panel) updated</title>
      
        <dc:creator>jane</dc:creator>

      <pubDate>Sat, 14 Jul 2012 20:42:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21273#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21273#comment:6/1342298570060930</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21273#comment:3" title="Comment 3"&gt;helenyhou&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote&gt;
&lt;p&gt;
I feel like this was attempted before but abandoned for one reason or another.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We did, I wanted to get the click targets up into the toolbar as icon + text, but we weren't able to get positioning we all agreed on before it was time to freeze/go beta. Definitely worth revisiting.
&lt;/p&gt;
&lt;p&gt;
I like idea of auto-opening a same-page help tab on click contextually, but am not as sure about switching pages and opening a help tab, seems like it might be disorienting. Might be a situation where popping a modal with the relevant text might be a better experience than dumping them somewhere else to get instructions for something.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>ticket.21273.3.diff attached to Ticket #21273</title>
      
        <dc:creator>ptahdunbar</dc:creator>

      <pubDate>Sat, 14 Jul 2012 20:39:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21273/ticket.21273.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21273/ticket.21273.3.diff/1342298371188336</guid>
      <description>&lt;p&gt;
removes hash when closing help screen
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21273 (Automatically open help panel) updated</title>
      
        <dc:creator>ptahdunbar</dc:creator>

      <pubDate>Sat, 14 Jul 2012 20:38:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21273#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21273#comment:5/1342298289791932</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21273#comment:4" title="Comment 4"&gt;helenyhou&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Seems like it'd be much more likely that the link would be to help located on the current screen, so it would need to work whenever, not just on page load.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;I was just pointing out that it works when linking to help panels between pages. It works whenever.
&lt;/li&gt;&lt;/ul&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
Scrolling back to the top is a bit wonky in Firefox (I know, I'm the holdout, and it's not going to change)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;FF works smoothly on my mba. don't tell me ur on a winbox ;p
&lt;/li&gt;&lt;/ul&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
Re: new patch - remove the hash when the panel is closed?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;I can remove the hash, but the # is still there :/
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
P.S. The more patches I post the more ghetto my js gets. #phpdevftw :D
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21273 (Automatically open help panel) updated</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Sat, 14 Jul 2012 20:13:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21273#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21273#comment:4/1342296789235677</guid>
      <description>&lt;p&gt;
Oh, new patch while I was writing the previous comment. Ignore the last bullet point :)
&lt;/p&gt;
&lt;p&gt;
Re: new patch - remove the hash when the panel is closed?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21273 (Automatically open help panel) updated</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Sat, 14 Jul 2012 20:11:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21273#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21273#comment:3/1342296667155780</guid>
      <description>&lt;p&gt;
+1 for the idea.
&lt;/p&gt;
&lt;p&gt;
Initial observations:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Seems like it'd be much more likely that the link would be to help located on the current screen, so it would need to work whenever, not just on page load.
&lt;/li&gt;&lt;li&gt;Scrolling back to the top is a bit wonky in Firefox (I know, I'm the holdout, and it's not going to change)
&lt;/li&gt;&lt;li&gt;Both the Screen Options and Help tabs are in the open state and are showing.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I wonder if this would work better if the tabs and panels were fixed to the top below the toolbar. I feel like this was attempted before but abandoned for one reason or another. Would like to discuss trying it again. I think it would be especially helpful on longer screens so that you don't have to go back up to the top to find help/screen options - in fact, I wonder if that's why they are so little noticed in the first place. We would have to contemplate what that means for screens that are too short to show the tab to close the panel back up again.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>ticket.21273.2.diff attached to Ticket #21273</title>
      
        <dc:creator>ptahdunbar</dc:creator>

      <pubDate>Sat, 14 Jul 2012 19:52:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21273/ticket.21273.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21273/ticket.21273.2.diff/1342295572391697</guid>
      <description>&lt;p&gt;
verifies that the panel actually exists; bug fix when screen options panel is set; new: update the url when navigating between tabs.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>carldanley</dc:creator>

      <pubDate>Sat, 14 Jul 2012 19:52:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:28/1342295567550677</guid>
      <description>&lt;p&gt;
Hi all,
&lt;/p&gt;
&lt;p&gt;
I've been working with lgedeon to compile a list of requirements for this library and then spent some time building something custom to support what we might need. Long story short, let me jump into it:
&lt;/p&gt;
&lt;h3 id="SupportedFeatures:"&gt;Supported Features:&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;jQuery style dot namespacing
&lt;ul&gt;&lt;li&gt;Can add/remove namespaces like so:&lt;br /&gt;&lt;strong&gt;$wp.hooks.addAction( 'some.crazy.action', func, 5 );&lt;/strong&gt;&lt;br /&gt;&lt;strong&gt;$wp.hooks.addAction( 'some.crazy', func2, 7);&lt;/strong&gt;&lt;br /&gt;&lt;strong&gt;$wp.hooks.removeAction( 'some.crazy.action' );&lt;/strong&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Supports method chaining to create a jQuery-like function chain: &lt;br /&gt; &lt;strong&gt;$wp.hooks.addAction().addFilter().removeFilter().doAction();&lt;/strong&gt;
&lt;/li&gt;&lt;li&gt;Priorities
&lt;ul&gt;&lt;li&gt;Ability to pass applicable callbacks through a process method of choice so filters can be processed in predefined functions. The object that holds the predefined filtering methods can also be worked to support extensions in case developers want to write their own filtering methods. In example: &lt;br /&gt; &lt;strong&gt;$wp.hooks.doAction( 'some.action', { 'some' : 'data' }, 'processingMethod' );&lt;/strong&gt; &lt;br /&gt;*note: also works for applyFilter().
&lt;/li&gt;&lt;li&gt;Currently has support for handling processing callbacks through a default 'sequential' method; I do have plans to implement the following methods:
&lt;ul&gt;&lt;li&gt;minValue
&lt;/li&gt;&lt;li&gt;maxValue
&lt;/li&gt;&lt;li&gt;allTrue
&lt;/li&gt;&lt;li&gt;allFalse
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Supports unique identifiers
&lt;/li&gt;&lt;li&gt;Anonymous functions are supported:&lt;br /&gt;&lt;strong&gt;$wp.hooks.addAction( 'anonymous.funcs', function(){ /* do something */ }, 30 );&lt;/strong&gt;
&lt;/li&gt;&lt;li&gt;Checks for a $wp global and binds itself to $wp.hooks
&lt;ul&gt;&lt;li&gt;$wp was used in case we decide to create other library functions, etc.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id="SupportedFunctions:"&gt;Supported Functions:&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;addAction&lt;/strong&gt;( action, callback, priority )
&lt;/li&gt;&lt;li&gt;&lt;strong&gt;doAction&lt;/strong&gt;( action, data, processMethod )
&lt;ul&gt;&lt;li&gt;processMethod is currently string only but when I add support for registering new process methods, I intend on adding support for passing a defined or anonymous function directly through the processMethod parameter.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;removeAction&lt;/strong&gt;( action )
&lt;/li&gt;&lt;li&gt;&lt;strong&gt;addFilter&lt;/strong&gt;( filter, callback, priority )
&lt;/li&gt;&lt;li&gt;&lt;strong&gt;applyFilter&lt;/strong&gt;( filter, data, processMethod )
&lt;ul&gt;&lt;li&gt;see note for 'processMethod' under the doAction() function.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;removeFilter&lt;/strong&gt;( filter )
&lt;/li&gt;&lt;li&gt;&lt;strong&gt;didAction&lt;/strong&gt;( action )
&lt;ul&gt;&lt;li&gt;returns false or an integer count
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;didFilter&lt;/strong&gt;( filter )
&lt;ul&gt;&lt;li&gt;returns false or an integer count
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
If you have questions concerning logic and/or code implementation, please refer to my code commenting first. I have tried to heavily comment the API in areas that I thought may need further explanation or where I had ideas for future improvements. I will patch the github as necessary.
&lt;/p&gt;
&lt;p&gt;
Also wanted to note that, when compressed, this library is only around 2kb ( so far ).
&lt;/p&gt;
&lt;p&gt;
Code can be found on my github here: &lt;a class="ext-link" href="https://github.com/carldanley/WordPress-Action-Filter-Library"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/carldanley/WordPress-Action-Filter-Library&lt;/a&gt;
Demo can be temporarily found here: &lt;a class="ext-link" href="http://codebyter.dyndns.info/wp.hooks/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codebyter.dyndns.info/wp.hooks/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21273 (Automatically open help panel) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 14 Jul 2012 19:08:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21273#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21273#comment:2/1342292910402359</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I really like this idea. Note that this should actually verify that the hash is a panel. So a simple match for &lt;code&gt;^tab-panel-&lt;/code&gt; would be a good start. I imagine others will want to weigh in more on the particular implementation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21273 (Automatically open help panel) updated</title>
      
        <dc:creator>ptahdunbar</dc:creator>

      <pubDate>Sat, 14 Jul 2012 19:06:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21273#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21273#comment:1/1342292791768145</guid>
      <description>&lt;p&gt;
Don't forget to &lt;code&gt;define( 'SCRIPT_DEBUG', true );&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>ticket.21273.diff attached to Ticket #21273</title>
      
        <dc:creator>ptahdunbar</dc:creator>

      <pubDate>Sat, 14 Jul 2012 19:04:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21273/ticket.21273.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21273/ticket.21273.diff/1342292686008628</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21273 (Automatically open help panel) created</title>
      
        <dc:creator>ptahdunbar</dc:creator>

      <pubDate>Sat, 14 Jul 2012 19:04:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21273</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21273/1342292660452146</guid>
      <description>&lt;p&gt;
The help screen is highly inaccessible. Developers are not able to link to content in the help panels if you need to point users to specific directions for your plugin.
&lt;/p&gt;
&lt;p&gt;
This patch is a quick stab at it to see if it's worth while.
&lt;/p&gt;
&lt;p&gt;
What it does it allow direct links to the help panel. Upon pageload, it'll automagically open up to the correct panel.
&lt;/p&gt;
&lt;p&gt;
Usage:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Install the patch
&lt;/li&gt;&lt;li&gt;Click &lt;a class="ext-link" href="http://wordpress.dev/wp-admin/index.php#tab-panel-help-layout"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.dev/wp-admin/index.php#tab-panel-help-layout&lt;/a&gt;
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Again, this is a quick stab. The concept could definitely be improve/abstracted and DRYed up.
&lt;/p&gt;
&lt;p&gt;
Let me know your thoughts :-)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18588 (Auto-select "Primary Menu " when switching themes) updated</title>
      
        <dc:creator>unsalkorkmaz</dc:creator>

      <pubDate>Sat, 14 Jul 2012 16:50:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18588#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18588#comment:6/1342284629276362</guid>
      <description>&lt;p&gt;
This is not a full solution for this problem but if you looking for a temporary solution for similar theme switches that have same theme locations (child themes etc):
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://wordpress.stackexchange.com/questions/58164/assign-menus-to-theme-locations-with-theme-activation"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.stackexchange.com/questions/58164/assign-menus-to-theme-locations-with-theme-activation&lt;/a&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;/*
 This action copies old theme's theme location saves to
 new theme if new theme doesnt have saves before.
 */
 add_action( 'after_switch_theme',  'ajx_theme_locations_rescue' );
 function ajx_theme_locations_rescue() {
	// bug report / support: http://www.unsalkorkmaz.com/
	// We got old theme's slug name
	$old_theme = get_option( 'theme_switched' );
	// Getting old theme's settings
	$old_theme_mods = get_option("theme_mods_{$old_theme}");
	// Getting old theme's theme location settings
	$old_theme_navs = $old_theme_mods['nav_menu_locations'];
	// Getting new theme's theme location settings
	$new_theme_navs = get_theme_mod( 'nav_menu_locations' );
	// If new theme's theme location is empty (its not empty if theme was activated and set some theme locations before)
	if (!$new_theme_navs) {
		// Getting registered theme locations on new theme
		$new_theme_locations = get_registered_nav_menus();
		foreach ($new_theme_locations as $location =&amp;gt; $description ) {
			// We setting same nav menus for each theme location
			$new_theme_navs[$location] = $old_theme_navs[$location];
		}
		set_theme_mod( 'nav_menu_locations', $new_theme_navs );
	}
 }
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21085 (Better XML-RPC media handling) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Sat, 14 Jul 2012 16:50:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21085#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21085#comment:4/1342284605632199</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>11058_unregister_taxonomy_from_object_type.diff attached to Ticket #11058</title>
      
        <dc:creator>leewillis77</dc:creator>

      <pubDate>Sat, 14 Jul 2012 16:07:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11058/11058_unregister_taxonomy_from_object_type.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11058/11058_unregister_taxonomy_from_object_type.diff/1342282058199119</guid>
      <description>&lt;p&gt;
Patch updated, and re-rolled against 3.4.1
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #4590 (Does XMLRPC need a wp_supportedPostAttributes method?) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Jul 2012 15:17:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4590#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4590#comment:6/1342279020798255</guid>
      <description>wontfix</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #20548 (xmlrpc "getrecentposts" inconsistent with "getpost") updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Jul 2012 15:11:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20548#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20548#comment:8/1342278690332107</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16316 (Enable pagination for the XML-RPC getRecentPosts function) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Jul 2012 15:07:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16316#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16316#comment:15/1342278422931578</guid>
      <description>duplicate</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #11150 ([wp-xmlrpc] need wp.editCategory) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Jul 2012 15:01:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11150#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11150#comment:5/1342278089025791</guid>
      <description>duplicate: &lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18439" title="#18439: task (blessed): Edit a term in XMLRPC (closed: fixed)"&gt;#18439&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #21272 (reporting typo in dbDelta) created</title>
      
        <dc:creator>apimlott</dc:creator>

      <pubDate>Sat, 14 Jul 2012 14:45:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21272</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21272/1342277125805840</guid>
      <description>&lt;p&gt;
In dbDelta, there is the section:
&lt;/p&gt;
&lt;pre class="wiki"&gt;                // For every remaining index specified for the table
                foreach ( (array) $indices as $index ) {
                        // Push a query line into $cqueries that adds the index to that table
                        $cqueries[] = "ALTER TABLE {$table} ADD $index";
                        $for_update[$table.'.'.$fieldname] = 'Added index '.$table.' '.$index;
                }
&lt;/pre&gt;&lt;p&gt;
Note that $for_update is updated with the wrong array index.  This causes some updates not to be returned in $for_update.  Better would be:
&lt;/p&gt;
&lt;pre class="wiki"&gt;                        $for_update[$table.'.'.$index] = 'Added index '.$table.' '.$index;
&lt;/pre&gt;&lt;p&gt;
Even this is not really right, since indexes and columns may have the same names.  Given that the users of dbDelta don't even seem to care about the keys, it might be simpler just to change all the $for_update lines to
&lt;/p&gt;
&lt;pre class="wiki"&gt;                        $for_update[] = ...
&lt;/pre&gt;&lt;p&gt;
except for the first one that must be keyed on table name.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21271 (Make admin backend unit-tests friendly) created</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Sat, 14 Jul 2012 14:19:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21271</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21271/1342275560640819</guid>
      <description>&lt;p&gt;
Recently I started writing unit tests for my plugins. Beside tests focused on functionality (where I directly call my plugin functions) I write some basic integrations tests, which should test that WordPress will call my function, pass data in expected format and recognize data returned from it. For frontend it is quite easy - theme API is well-defined, so I can write something like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;public function test_something() {
	// add new post
	$post_id = wp_insert_post( array( ... ) );
	$this-&amp;gt;assertGreaterThan( 0, $post_id );
	// go to post page
	$this-&amp;gt;go_to( get_permalink( $post_id ) );
	// main loop
	$checked_post = false;
	while ( have_posts() ) {
		the_post();
		if ( $post_id == get_the_ID() ) {
			$checked_post = true;
			// test that content is modified
			ob_start();
			the_content();
			$result = ob_get_clean();
			$this-&amp;gt;assertEquals( '...', $result );
		}
	}
	// make sure test above was executed
	$this-&amp;gt;assertTrue( $checked_post );
}
&lt;/pre&gt;&lt;p&gt;
Unfortunately this is not true for admin backend - there most of code is written directly at file level (not in functions and classes), so I would need to either duplicate this code in my tests (bad approach, because would have to monitor original code for changes), or test using whole file (either load it directly or use Selenium) - in this case test would be more complicated.
&lt;/p&gt;
&lt;p&gt;
Therefore I logged this ticket, to start discussion how we can perform refactoring of admin backend to make it more tests-friendly, and how to test it more thoroughly. Most probably we would also need to modify the testing framework (e.g. introduce new &lt;code&gt;admin_go_to()&lt;/code&gt; method).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #20548 (xmlrpc "getrecentposts" inconsistent with "getpost") updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Sat, 14 Jul 2012 14:08:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20548#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20548#comment:7/1342274902342084</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
First of all that are two different API's and the implementation is different. Also clients should try to use the wp.* methods.
&lt;/p&gt;
&lt;p&gt;
That said we really can’t change it because things will break. At least from my experience with iOS development.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17156 (Filters to allow setting custom taxonomy on the fly) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Sat, 14 Jul 2012 14:02:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17156#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17156#comment:3/1342274533711857</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I believe this can be closed now due the work in 3.4 where you now can add terms and there are some extra hooks added
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16316 (Enable pagination for the XML-RPC getRecentPosts function) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Sat, 14 Jul 2012 14:00:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16316#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16316#comment:14/1342274404362755</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Can be closed since it can be done with the wp.getPosts &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18433" title="#18433: task (blessed): Retrieve a list of posts  via XML-RPC (closed: fixed)"&gt;#18433&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21085 (Better XML-RPC media handling) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Sat, 14 Jul 2012 13:57:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21085#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21085#comment:3/1342274272488304</guid>
      <description>&lt;p&gt;
There should also be an method for removing a media item. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5310" title="#5310: enhancement: XMLRPC interface should expose mechanism for listing and deleting ... (closed: fixed)"&gt;#5310&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11150 ([wp-xmlrpc] need wp.editCategory) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Sat, 14 Jul 2012 13:57:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11150#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11150#comment:4/1342274221726654</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Can be closed in favor of editTerm
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18200 (Language Packs) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 14 Jul 2012 13:55:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18200#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18200#comment:30/1342274131838082</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Oh, dd32, why you didn't post a comment, we could have never seen this patch? :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Because the patch is more than useless without the WordPress.org infrastructure being setup (And it wasn't set up, and still isn't ready).  Those that needed to know there's a patch here knew about it :)
&lt;/p&gt;
&lt;p&gt;
The overview of what you've said sounds about right for the process it'd be doing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4590 (Does XMLRPC need a wp_supportedPostAttributes method?) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Sat, 14 Jul 2012 13:45:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4590#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4590#comment:5/1342273553172507</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I believe this ticket can be closed as wont-fix since of all the wp methods and its hard to maintain something like that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18200 (Language Packs) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 14 Jul 2012 13:45:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18200#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18200#comment:29/1342273548701872</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18200 (Language Packs) updated</title>
      
        <dc:creator>dimadin</dc:creator>

      <pubDate>Sat, 14 Jul 2012 13:29:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18200#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18200#comment:28/1342272540794275</guid>
      <description>&lt;p&gt;
Oh, dd32, why you didn't post a comment, we could have never seen this patch? :)
&lt;/p&gt;
&lt;p&gt;
Anyway, I'll try to summarize what this patch does so you correct me where I'm wrong:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;On core/plugins/themes check for updates, we now check for languages too.
&lt;/li&gt;&lt;li&gt;Checks for languages are done by searching for language files in WP_LANG_DIR, from which is then PO-Revision-Date taken to be sent to api.wp.org.
&lt;/li&gt;&lt;li&gt;When any install/upgrade of core/plugin/theme is done, rechecks for updates are forced for everything so that there are fresh results against latest versions.
&lt;/li&gt;&lt;li&gt;After that, upgrades for available languages updates for everything (core/plugins/themes) are forced.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19978 (Twenty Twelve) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sat, 14 Jul 2012 11:55:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19978#comment:75</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19978#comment:75/1342266958956983</guid>
      <description>&lt;p&gt;
&lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/21256" title="#21256: feature request: New theme feature - add_theme_support( 'content-width', $defaults ) (assigned)"&gt;#21256&lt;/a&gt; ticket could be related to Twenty Twelve theme.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21188 (Fullscreen (distraction-free) editor should have a preview button) updated</title>
      
        <dc:creator>tillkruess</dc:creator>

      <pubDate>Sat, 14 Jul 2012 11:45:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21188#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21188#comment:3/1342266348460724</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21042 (Plugins' implementation of "Number of Columns" screen option broken) updated</title>
      
        <dc:creator>diegotdai</dc:creator>

      <pubDate>Sat, 14 Jul 2012 11:16:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21042#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21042#comment:9/1342264616858998</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
On line 11 $('.postbox-container:visible').lengt; is missing h for length?
&lt;/p&gt;
&lt;pre class="wiki"&gt;var n = parseInt($(this).val(), ps = $('#poststuff'), visible = $('.postbox-container:visible').lengt;
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16494 (Remove "no conflict" mode from bundled jquery) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Sat, 14 Jul 2012 11:04:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16494#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16494#comment:39/1342263866853559</guid>
      <description>&lt;p&gt;
I wouldn't change it because of the reasons given. It shouldn't be changed because other developers doing it wrong.
In my opinion when you write code it should always be wrapped in a jQuery function. and as param you can pass $
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21256 (New theme feature - add_theme_support( 'content-width', $defaults )) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sat, 14 Jul 2012 10:52:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21256#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21256#comment:4/1342263169983925</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21256#comment:1" title="Comment 1"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
You are right, Twenty Twelve has a very nice workaround for full-width page-template:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( ! isset( $content_width ) )
	$content_width = 625;
function twentytwelve_content_width() {
	if ( is_page_template( 'full-width-page.php' ) || is_attachment() ) {
		global $content_width;
		$content_width = 960;
	}
}
add_action( 'template_redirect', 'twentytwelve_content_width' );
&lt;/pre&gt;&lt;p&gt;
I like this approach, but using conditionals to set different sizes for different post-types requires many lines of code. with $defaults array it's easier.
&lt;/p&gt;
&lt;p&gt;
And remember that other themes do it in different ways. There is no standard way to do this. If we will make it a core-theme-feature, all themes will use it the same way.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21266 (Enhancements for page numbers links API) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Sat, 14 Jul 2012 08:07:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21266#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21266#comment:1/1342253229858998</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19978 (Twenty Twelve) updated</title>
      
        <dc:creator>Mamaduka</dc:creator>

      <pubDate>Sat, 14 Jul 2012 07:31:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19978#comment:74</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19978#comment:74/1342251102154347</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19978#comment:73" title="Comment 73"&gt;DrewAPicture&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21223" title="#21223: defect (bug): Inconsistent font size in Network Admin &amp;gt; Site Users screen (closed: fixed)"&gt;#21223&lt;/a&gt; Make title truly pluggable
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Wrong ticket, here's correct one - &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21233" title="#21233: defect (bug): Twenty Twelve: Make title truly pluggable (closed: fixed)"&gt;#21233&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>21270.diff attached to Ticket #21270</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sat, 14 Jul 2012 05:08:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21270/21270.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21270/21270.diff/1342242483296356</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21270 (Use update_blog_option() when enabling/disabling themes per site in ...) created</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sat, 14 Jul 2012 05:07:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21270</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21270/1342242451519241</guid>
      <description>&lt;p&gt;
Currently, when site/theme options are changed in site-themes.php, we use &lt;code&gt;update_option( 'allowedthemes', $allowed_themes )&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This seems to cause an object cache related issue after the save and redirect when the table is displayed again. After clicking enable or disable next to a theme, no change is obvious, but the database is still updated.
&lt;/p&gt;
&lt;p&gt;
When &lt;code&gt;get_allowed_on_site()&lt;/code&gt; fires in class-wp-theme.php, and &lt;code&gt;$current&lt;/code&gt; evaluates to false, we use &lt;code&gt;get_blog_option( $blog_id, 'allowedthemes' )&lt;/code&gt; to grab the data, which looks first to an object cache key that is not set on update in site-themes.php:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;$key = $blog_id . '-' . $setting . '-blog_option'&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
When object cache is not available, this falls back to &lt;code&gt;get_option()&lt;/code&gt;, which pulls the data as intended.
&lt;/p&gt;
&lt;p&gt;
This patch modifies site-themes.php to use &lt;code&gt;update_blog_option( $id, 'allowedthemes', $allowed_themes )&lt;/code&gt;. This continues to set the original &lt;code&gt;update_option()&lt;/code&gt; but provides for the correct cache key/value as well.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16494 (Remove "no conflict" mode from bundled jquery) updated</title>
      
        <dc:creator>WraithKenny</dc:creator>

      <pubDate>Sat, 14 Jul 2012 04:23:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16494#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16494#comment:38/1342239807680762</guid>
      <description>&lt;p&gt;
could also
&lt;/p&gt;
&lt;pre class="wiki"&gt;$scripts-&amp;gt;add_data( 'jquery', 'data', 'jQuery.noConflict();' );
&lt;/pre&gt;&lt;p&gt;
after 'jquery' is added in script-loader.php.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16494 (Remove "no conflict" mode from bundled jquery) updated</title>
      
        <dc:creator>WraithKenny</dc:creator>

      <pubDate>Sat, 14 Jul 2012 03:54:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16494#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16494#comment:37/1342238083445264</guid>
      <description>&lt;p&gt;
Perhaps a function that'd do:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;script&amp;gt;var $bak = $; $ = jQuery;&amp;lt;/script&amp;gt;
&lt;/pre&gt;&lt;p&gt;
before the desired jQuery plugin script, then after it:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;script&amp;gt;$ = $bak;&amp;lt;/script&amp;gt;
&lt;/pre&gt;&lt;p&gt;
used as such:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_jquery_conflict_resolution( 'dollar-dependant-plugin' );
&lt;/pre&gt;&lt;p&gt;
Alternatively, just register jQuery's source as 'jquery-conflict' and register the &lt;code&gt;jQuery.noConflict();&lt;/code&gt; bit as 'jquery' but that depends on 'jquery-conflict'
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_register_script( 'jquery-conflict', 'jquery.js', ... );
wp_register_script( 'jquery', 'jquery-noconflict.js', array('jquery-conflict'), ... );
&lt;/pre&gt;&lt;p&gt;
this way both are always loaded when 'jquery' is enqueued and it can be concatenated.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [21273]: Compress scripts/styles: 3.5-alpha-21273. TinyMCE updated.</title>
      
        <dc:creator>bumpbot</dc:creator>

      <pubDate>Sat, 14 Jul 2012 02:58:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/21273</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/21273/1342234700309027</guid>
      <description>&lt;p&gt;
Compress scripts/styles: 3.5-alpha-21273. TinyMCE updated.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #21197 (There are two diffrent full screen editors) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 14 Jul 2012 01:46:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21197#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21197#comment:9/1342230415911325</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/21272" title="TinyMCE: add the Alt + W shortcut only when DFW is loaded and Alt + G ..."&gt;[21272]&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
TinyMCE: add the Alt + W shortcut only when DFW is loaded and Alt + G only when MCE fullscreen is loaded, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21197" title="#21197: defect (bug): There are two diffrent full screen editors (closed: fixed)"&gt;#21197&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [21272]: TinyMCE: add the Alt + W shortcut only when DFW is loaded and Alt + G ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 14 Jul 2012 01:46:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/21272</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/21272/1342230414854484</guid>
      <description>&lt;p&gt;
TinyMCE: add the Alt + W shortcut only when DFW is loaded and Alt + G only when MCE fullscreen is loaded, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21197" title="#21197: defect (bug): There are two diffrent full screen editors (closed: fixed)"&gt;#21197&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #21197 (There are two diffrent full screen editors) reopened</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Jul 2012 01:10:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21197#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21197#comment:8/1342228231350733</guid>
      <description>&lt;p&gt;
&lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21197#comment:2" title="Comment 2"&gt;comment:2&lt;/a&gt; is still an issue.
&lt;/p&gt;
&lt;p&gt;
Tested in Firefox 13, Chrome 20, IE 8, Opera 12. In Opera, a blank window with a scrollbar appears in step 3 instead of the DFW editor.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>drag-drop-visual-editor-2.zip attached to Ticket #19845</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 14 Jul 2012 00:58:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19845/drag-drop-visual-editor-2.zip</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19845/drag-drop-visual-editor-2.zip/1342227500948504</guid>
      <description></description>
      <category>attachment</category>
    </item>
   </channel>
</rss>