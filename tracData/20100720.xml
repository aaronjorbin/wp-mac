<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>query_allowed_keys.patch attached to Ticket #14368</title>
      
        <dc:creator>wjm</dc:creator>

      <pubDate>Tue, 20 Jul 2010 23:59:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14368/query_allowed_keys.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14368/query_allowed_keys.patch/1279670382000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14368 (make the 'orderby' argument in get_posts() accept all "post" fields) created</title>
      
        <dc:creator>wjm</dc:creator>

      <pubDate>Tue, 20 Jul 2010 23:58:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14368</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14368/1279670321000000</guid>
      <description>&lt;p&gt;
Right now, some post's fields were not accepted when retrieving posts (even though they were documented in codex . for example "name" (slug)  was missing).
&lt;/p&gt;
&lt;p&gt;
this patch sorts the elements in the $allow_keys array (in the same order as the db' s columns) and adds the missing ones, I added every field except the ones that were long text fields (content, excerpt, etc)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14135 (edit_posts_per_page) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Tue, 20 Jul 2010 23:03:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14135#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14135#comment:12/1279667020000000</guid>
      <description>&lt;p&gt;
(Now that I looked...) In _option &amp;amp; _transient functions they are the opposite order- specific first, generic second. We should go for consistency.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13691 (Make get_template_part() accept multiple template names) updated</title>
      
        <dc:creator>demetris</dc:creator>

      <pubDate>Tue, 20 Jul 2010 22:39:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13691#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13691#comment:9/1279665598000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14135 (edit_posts_per_page) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 20 Jul 2010 22:04:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14135#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14135#comment:11/1279663479000000</guid>
      <description>&lt;p&gt;
Out of curiosity, anyone else have a preference for which filter comes first?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14135 (edit_posts_per_page) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 20 Jul 2010 22:03:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14135#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14135#comment:10/1279663428000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looks solid.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14367 (wordpress outputs blank html) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 20 Jul 2010 21:14:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14367#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14367#comment:1/1279660442000000</guid>
      <description>invalid: &lt;p&gt;
Sounds like you're missing a theme, or your theme is broken.
&lt;/p&gt;
&lt;p&gt;
Try the support forums: &lt;a class="ext-link" href="http://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14367 (wordpress outputs blank html) created</title>
      
        <dc:creator>yurivict</dc:creator>

      <pubDate>Tue, 20 Jul 2010 21:12:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14367</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14367/1279660374000000</guid>
      <description>&lt;p&gt;
I am on FreeBSD-8.1 using the latest in ports wordpress-3.0.0.
&lt;/p&gt;
&lt;p&gt;
When I navigate to /wordpress I get an empty html.
When I navigate to wordpress/wp-admin/ I see admin pages fine, but clicking on the 'XXX Blog' in the top left corner I get the blank html again.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14353 (editor cuts off text at first german umlaut) updated</title>
      
        <dc:creator>christian_gnoth</dc:creator>

      <pubDate>Tue, 20 Jul 2010 21:04:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14353#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14353#comment:4/1279659860000000</guid>
      <description>&lt;p&gt;
out of security reasons I remove the user adminwptrack - everyone could have access to other blogs (it is a multisite feature enabled installation)
&lt;/p&gt;
&lt;p&gt;
but with the admin user I have this problem and with the other editor user it is working fine.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10976 (Add before_content and after_content to widget options) updated</title>
      
        <dc:creator>lancewillett</dc:creator>

      <pubDate>Tue, 20 Jul 2010 21:01:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10976#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10976#comment:9/1279659716000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10976#comment:3" title="Comment 3"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It seems this can be added in the &lt;code&gt;widget&lt;/code&gt; method for a simple widget. However adding it globally would not make sense for more complex widgets that output several different elements and don't have distinct &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;content&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, this would only be for simple widgets. More complex widgets can generally be styled without a problem based on more complex the HTML output.
&lt;/p&gt;
&lt;p&gt;
Though many widgets do not need an extra wrapper element, some do. In those cases it would be helpful to have widget content before/after hooks available, but empty by default.
&lt;/p&gt;
&lt;p&gt;
Case in point: if you look at the default widgets in &lt;code&gt;/wp-includes/default-widgets.php&lt;/code&gt; you'll see that at least two of the default widgets use an extra wrapper element around the widget content (calendar and tag cloud).
&lt;/p&gt;
&lt;p&gt;
The main benefits I see for adding in the hooks are:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;The ability to style only the widget content area (avoiding styling the title and overall widget wrapper).
&lt;/li&gt;&lt;li&gt;The ability to specifically target elements inside the widget content area.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
This happens often in themes where the widget has multiple block level elements, like a text widget with multiple paragraph elements. The last paragraph element in the widget content might have bottom margin, for example, and if you cannot target only the paragraph elements in the widget content area it's difficult to remove the bottom margin to ensure that the widgets themselves have consistent spacing.
&lt;/p&gt;
&lt;p&gt;
It is possible to target the last element with a &lt;code&gt;last:child&lt;/code&gt; selector, but that isn't supported in older browsers, so having an HTML element is the only way to achieve this until all browsers support CSS3.
&lt;/p&gt;
&lt;p&gt;
As mentioned in the original ticket, the way themes address this now is to add in an extra &lt;code&gt;div&lt;/code&gt; in the "after_title" hook and then close it with the "before_widget" -- the problem is that if the title is empty you end up with an improperly formed &lt;code&gt;div&lt;/code&gt; element.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14366 (Standardize e-mail, email text) updated</title>
      
        <dc:creator>demetris</dc:creator>

      <pubDate>Tue, 20 Jul 2010 20:11:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14366#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14366#comment:4/1279656660000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The latest edition of the Shorter OED (which is not really short if you have seen it, just a shorter version of the 20-volume full version) dropped hyphens by the thousands because “people are not confident about using hyphens anymore, they’re not really sure what they are for”:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.reuters.com/article/idUSHAR15384620070921"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.reuters.com/article/idUSHAR15384620070921&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Now, coming to the proposed patch, I am opposed to changing strings just to unify hyphenated and unhyphenated spellings.  It breaks translated strings (too many in this case), adding extra work for translators without any compelling reason.
&lt;/p&gt;
&lt;p&gt;
But we should certainly standardize on a spelling, not only for email but for other words too, so that we can increase consistency as time goes by.
&lt;/p&gt;
&lt;p&gt;
(I’ve started drafting a style guide that deals with cases like that, among other things, and I believe I will have something ready by the time 3.1 development starts.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14355 (is_front_page returns false - if used after the loop starts) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 20 Jul 2010 19:48:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14355#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14355#comment:8/1279655336000000</guid>
      <description>invalid: &lt;p&gt;
I can't reproduce anything with that code per se, but it is obvious why is_front_page is returning two different values. Between calls, you call query_posts(), which resets the query object and changes all of the conditionals to reflect the new query.
&lt;/p&gt;
&lt;p&gt;
If you don't want to alter things that low-level, then using get_posts or a new WP_Query will suffice.
&lt;/p&gt;
&lt;p&gt;
Also, if you're going to use &lt;code&gt;$_SERVER['PHP_SELF']&lt;/code&gt;, better not to use it, but if you do, then make sure you escape it. &lt;a class="ext-link" href="http://markjaquith.wordpress.com/2009/09/21/php-server-vars-not-safe-in-forms-or-links/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://markjaquith.wordpress.com/2009/09/21/php-server-vars-not-safe-in-forms-or-links/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14355 (is_front_page returns false - if used after the loop starts) updated</title>
      
        <dc:creator>christian_gnoth</dc:creator>

      <pubDate>Tue, 20 Jul 2010 19:43:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14355#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14355#comment:7/1279655036000000</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14355 (is_front_page returns false - if used after the loop starts) updated</title>
      
        <dc:creator>christian_gnoth</dc:creator>

      <pubDate>Tue, 20 Jul 2010 19:42:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14355#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14355#comment:6/1279654946000000</guid>
      <description>&lt;pre class="wiki"&gt;&amp;lt;?php
$biq_theme_options = biq_get_theme_options();
get_header('xajax');
global $xajax;
//$xajax = new xajax();
$xajax-&amp;gt;registerFunction('load_latest_post');
$xajax-&amp;gt;processRequest();
echo
'&amp;lt;div id="main_content_container"&amp;gt;' . "\n" .
'  &amp;lt;div id="content_container"&amp;gt;' . "\n";
if ( is_home() )
{
}
var_dump(is_front_page());
if ( is_front_page() )
{
  // check for referer and show two latest posts excerpts
  //biq_check_referer();
  query_posts(array( 'posts_per_page' =&amp;gt; '2', 'category_name' =&amp;gt; 'Blog Post' ));
  echo '  &amp;lt;div id="latest_post_container"&amp;gt;' . "\n";
  echo '    &amp;lt;div id="latest_post"&amp;gt;' . "\n";
  if ( have_posts() )
  {
    while(have_posts())
    {
      the_post();
      $biq_id = get_the_ID();
      echo '    &amp;lt;div ';
      post_class();
      echo ' id="co-post-' . get_the_ID() . '"&amp;gt;' . "\n";
      $result = is_front_page();
      var_dump($result);
      echo 'index.php:' . is_front_page() . ':&amp;lt;br /&amp;gt;' . "\n";
      echo '    &amp;lt;h3&amp;gt;&amp;lt;a href="' . get_permalink() . '" rel="bookmark" onclick="xajax_load_latest_post(\'' . get_the_ID() . '\'); return false;" title="Permalink: ' . the_title( '', '', false) . '"&amp;gt;' . the_title( '', '', false) . '&amp;lt;/a&amp;gt;&amp;lt;/h3&amp;gt;' . "\n";
//      echo '    &amp;lt;h3&amp;gt;&amp;lt;a href="javascript:xajax_load_latest_post(' . get_the_ID() . ')" rel="bookmark" onclick="return !xajax_load_latest_post(' . get_the_ID() . ');" title="Permalink: ' . the_title( '', '', false) . '"&amp;gt;' . the_title( '', '', false) . '&amp;lt;/a&amp;gt;&amp;lt;/h3&amp;gt;' . "\n";
//      echo '    &amp;lt;h3&amp;gt;&amp;lt;a href="#" rel="bookmark" onclick="xajax_load_latest_post(\'' . get_the_ID() . '\');" title="Permalink: ' . the_title( '', '', false) . '"&amp;gt;' . the_title( '', '', false) . '&amp;lt;/a&amp;gt;&amp;lt;/h3&amp;gt;' . "\n";
//      echo '    &amp;lt;h3&amp;gt;&amp;lt;a href="javascript:xajax_load_latest_post(\'' . $biq_id . '\')" rel="bookmark" title="Permalink: ' . the_title( '', '', false) . '"&amp;gt;' . the_title( '', '', false) . '&amp;lt;/a&amp;gt;&amp;lt;/h3&amp;gt;' . "\n";
      the_excerpt();
      echo '    &amp;lt;/div&amp;gt;' . "\n";
    }
  }
  wp_reset_query();
  echo '    &amp;lt;/div&amp;gt;' . "\n";
  echo '  &amp;lt;/div&amp;gt;' . "\n";
}
$biq_amazon_item_list_search = NULL;
$biq_amazon_items_per_page   = NULL;
$biq_amazon_item_list_page   = NULL;
//  process submitted data
//  SORT Order
if ( $_POST['biq_amazon_item_list_search'] )
{
  $biq_amazon_item_list_search = $_POST['biq_amazon_item_list_search'];
}
//  number of items to display
if ( $_POST['amazon_items_ppage'] )
{
  $biq_amazon_items_per_page = intval($_POST['amazon_items_ppage']);
  $_SESSION['amazon_items_ppage'] = $biq_amazon_items_per_page;
}
if ( !$biq_amazon_items_per_page )
{
  if ( $_SESSION['amazon_items_ppage'] )
    $biq_amazon_items_per_page = $_SESSION['amazon_items_ppage'];
  else
    $biq_amazon_items_per_page = 9;
}
//  page number
if ( $_POST['biq_amazon_item_list_page'] )
{
  $biq_amazon_item_list_page = intval($_POST['biq_amazon_item_list_page']);
}
if ( !$biq_amazon_item_list_page OR isset($_POST['biq_amazon_item_list_page_first']))
  $biq_amazon_item_list_page = 1;
//  call to get product items
$query = 'SELECT * FROM amazon_attributes;';
$biq_amazon_product_list = $wpdb-&amp;gt;get_results($query);
if ( $biq_amazon_product_list )
{
  $biq_amazon_product_list_count = count( $biq_amazon_product_list );
  echo '  &amp;lt;div id="content"&amp;gt;' . "\n";
  echo '    &amp;lt;div id="amazon_item_list_header"&amp;gt;' . "\n";
  echo '      &amp;lt;div id="amazon_items_search"&amp;gt;' . "\n";
  echo '        &amp;lt;b&amp;gt;SORT BY&amp;lt;/b&amp;gt; ' . "\n";
  echo '        &amp;lt;form class="form_items_search" action="' . $_SERVER['PHP_SELF'] . '" method="post"&amp;gt;' . "\n";
  echo '          &amp;lt;select name="biq_amazon_item_list_search" size="1"&amp;gt;' . "\n";
  echo '            &amp;lt;option&amp;gt;&amp;lt;a href=""&amp;gt;LOW PRICE&amp;lt;/a&amp;gt;&amp;lt;/option&amp;gt;' . "\n";
  echo '            &amp;lt;option&amp;gt;&amp;lt;a href=""&amp;gt;HIGH PRICE&amp;lt;/a&amp;gt;&amp;lt;/option&amp;gt;' . "\n";
  echo '            &amp;lt;option&amp;gt;&amp;lt;a href=""&amp;gt;DISCOUNT&amp;lt;/a&amp;gt;&amp;lt;/option&amp;gt;' . "\n";
  echo '          &amp;lt;/select&amp;gt;' . "\n";
  echo '        &amp;lt;/form&amp;gt;' . "\n";
  echo '      &amp;lt;/div&amp;gt;' . "\n";
  echo '      &amp;lt;div id="amazon_items_count"&amp;gt;' . "\n";
  echo '        ' . $biq_amazon_items_per_page . ' of ' . $biq_amazon_product_list_count . ' SHOES' . "\n";
  echo '      &amp;lt;/div&amp;gt;' . "\n";
  echo '      &amp;lt;div id="amazon_items_ppage"&amp;gt;' . "\n";
  echo '        &amp;lt;form class="form_items_ppage" method="post" action=""&amp;gt;Items per Page &amp;lt;a href=""&amp;gt;&amp;lt;input type="submit" class="input_items_ppage" name="amazon_items_ppage" value="9" /&amp;gt;&amp;lt;/a&amp;gt; | &amp;lt;/form&amp;gt;' . "\n";
  echo '        &amp;lt;form class="form_items_ppage" method="post" action=""&amp;gt;&amp;lt;a href=""&amp;gt;&amp;lt;input type="submit" class="input_items_ppage" name="amazon_items_ppage" value="18" /&amp;gt;&amp;lt;/a&amp;gt; | &amp;lt;/form&amp;gt;' . "\n";
  echo '        &amp;lt;form class="form_items_ppage" method="post" action=""&amp;gt;&amp;lt;a href=""&amp;gt;&amp;lt;input type="submit" class="input_items_ppage" name="amazon_items_ppage" value="27" /&amp;gt;&amp;lt;/a&amp;gt; | &amp;lt;/form&amp;gt;' . "\n";
  echo '      &amp;lt;/div&amp;gt;' . "\n";
  echo '    &amp;lt;/div&amp;gt;' . "\n";
  $biq_amazon_page_count = intval($biq_amazon_product_list_count / $biq_amazon_items_per_page);
  if ( ($biq_amazon_page_count * $biq_amazon_items_per_page) &amp;lt; $biq_amazon_product_list_count )
    $biq_amazon_page_count++;
  if ( isset($_POST['biq_amazon_item_list_page_last']) )
    $biq_amazon_item_list_page = $biq_amazon_page_count;
  $biq_item_counter = $biq_amazon_items_per_page * ($biq_amazon_item_list_page - 1) + 1;
  $biq_amazon_product_list_page_rest = $biq_amazon_product_list_count % $biq_amazon_items_per_page;
  $biq_amazon_page_row_count = $biq_amazon_items_per_page / 3;
  for ( $index = 0; (($index &amp;lt; $biq_amazon_page_row_count)); $index++)
  {
    echo '  &amp;lt;div id="amazon_item_row"&amp;gt;' . "\n";
    for ( $i = 0; (($i &amp;lt; 3) AND ( ($biq_item_counter &amp;lt;= $biq_amazon_product_list_count) )); $i++)
    {
      echo '    &amp;lt;div id="amazon_item_field"&amp;gt;' . "\n";
      echo '      &amp;lt;div id="amazon_item_img"&amp;gt;' . "\n";
      echo '        &amp;lt;a href="' . $biq_amazon_product_list[$biq_item_counter]-&amp;gt;detail_page_url . '" title="' . $biq_amazon_product_list[$biq_item_counter]-&amp;gt;title . '" target="_blank"&amp;gt;';
      echo '&amp;lt;img src="' . $biq_amazon_product_list[$biq_item_counter]-&amp;gt;medium_image_url . '" alt="' . htmlentities($biq_amazon_product_list[$biq_item_counter]-&amp;gt;prod_desc) . '" /&amp;gt;';
      echo '&amp;lt;/a&amp;gt;' . "\n";
      echo '      &amp;lt;/div&amp;gt;' . "\n";
//      echo '      &amp;lt;div class="item_seperator"&amp;gt;&amp;lt;/div&amp;gt;' . "\n";
      echo '      &amp;lt;div id="amazon_item_description"&amp;gt;' . "\n";
      echo '        &amp;lt;a href="' . $biq_amazon_product_list[$biq_item_counter]-&amp;gt;detail_page_url . '" title="' . $biq_amazon_product_list[$biq_item_counter]-&amp;gt;title . '" target="_blank"&amp;gt;' . $biq_amazon_product_list[$biq_item_counter]-&amp;gt;title . '&amp;lt;/a&amp;gt;&amp;lt;br /&amp;gt;' . "\n";
      echo $biq_amazon_product_list[$biq_item_counter]-&amp;gt;brand . '&amp;lt;br /&amp;gt;' . "\n";
      if ( ($biq_amazon_product_list[$biq_item_counter]-&amp;gt;pct_off != NULL) AND ($biq_amazon_product_list[$biq_item_counter]-&amp;gt;pct_off != 0))
      {
        echo $biq_amazon_product_list[$biq_item_counter]-&amp;gt;formatted_price . '&amp;lt;br /&amp;gt;' . "\n";
        echo $biq_amazon_product_list[$biq_item_counter]-&amp;gt;display_price . ' (' . ($biq_amazon_product_list[$biq_item_counter]-&amp;gt;pct_off * 100) . '% off)' . "\n";
      }
      else
      {
        echo $biq_amazon_product_list[$biq_item_counter]-&amp;gt;display_price . '&amp;lt;br /&amp;gt;' . "\n";
      }
      echo '      &amp;lt;/div&amp;gt;' . "\n";
      echo '    &amp;lt;/div&amp;gt;' . "\n";
      $biq_item_counter++;
    }
    if ( $index &amp;lt; ($biq_amazon_page_row_count - 1))
      echo '    &amp;lt;div class="seperator"&amp;gt;&amp;lt;/div&amp;gt;' . "\n";
    echo '  &amp;lt;/div&amp;gt;' . "\n";
  }
  echo '    &amp;lt;div id="amazon_item_list_footer"&amp;gt;' . "\n";
  echo '      &amp;lt;div id="amazon_item_list_footer_link"&amp;gt;' . "\n";
  echo '        &amp;lt;a href="#top"&amp;gt;Back To Top&amp;lt;/a&amp;gt;' . "\n";
  echo '      &amp;lt;/div&amp;gt;' . "\n";
  echo '      &amp;lt;div id="amazon_item_list_footer_nav"&amp;gt;' . "\n";
  echo '        &amp;lt;form class="form_item_list_page" method="post" action=""&amp;gt;&amp;lt;a href=""&amp;gt;&amp;lt;input type="submit" class="input_item_list_page_first" name="biq_amazon_item_list_page_first" value="" /&amp;gt;&amp;lt;/a&amp;gt; &amp;lt;/form&amp;gt;' . "\n";
  if ( $biq_amazon_item_list_page &amp;gt; 10 )
    $biq_list_page_start = $biq_amazon_item_list_page - 5;
  else
    $biq_list_page_start = 1;
  for ( $i=$biq_list_page_start; (($i &amp;lt;= $biq_amazon_page_count) AND ($i &amp;lt;= ($biq_list_page_start + 10))); $i++ )
  {
    if ( $i == $biq_amazon_item_list_page )
      echo '&amp;lt;form class="form_item_list_page" method="post" action=""&amp;gt;&amp;lt;a href=""&amp;gt;&amp;lt;input type="submit" class="input_item_list_page active" name="biq_amazon_item_list_page" value="' . $i . '" /&amp;gt;&amp;lt;/a&amp;gt;  |  &amp;lt;/form&amp;gt;' . "\n";
    else
      echo '&amp;lt;form class="form_item_list_page" method="post" action=""&amp;gt;&amp;lt;a href=""&amp;gt;&amp;lt;input type="submit" class="input_item_list_page nonactive" name="biq_amazon_item_list_page" value="' . $i . '" /&amp;gt;&amp;lt;/a&amp;gt;  |  &amp;lt;/form&amp;gt;' . "\n";
  }
  echo '        &amp;lt;form class="form_item_list_page" method="post" action=""&amp;gt;&amp;lt;a href=""&amp;gt;&amp;lt;input type="submit" class="input_item_list_page_last" name="biq_amazon_item_list_page_last" value="" /&amp;gt;&amp;lt;/a&amp;gt; &amp;lt;/form&amp;gt;' . "\n";
  echo '      &amp;lt;/div&amp;gt;' . "\n";
  echo '    &amp;lt;/div&amp;gt;' . "\n";
  echo '	&amp;lt;/div&amp;gt;' . "\n";
}
else
{
  echo '  &amp;lt;p&amp;gt;' . __('Sorry, no products available.', 'biq') . '&amp;lt;/p&amp;gt;' . "\n";
}
echo '	&amp;lt;/div&amp;gt;' . "\n\n";
get_sidebar();
get_footer();
?&amp;gt;
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14135 (edit_posts_per_page) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Tue, 20 Jul 2010 19:41:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14135#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14135#comment:9/1279654884000000</guid>
      <description>&lt;p&gt;
Added. I also added the post_type to the generic filter.
&lt;/p&gt;
&lt;p&gt;
Even without your explanation above, in the 3.0 cycle we added quite a few of the generic filters because they are useful. So, the generic one should remain here for consistency.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14353 (editor cuts off text at first german umlaut) updated</title>
      
        <dc:creator>christian_gnoth</dc:creator>

      <pubDate>Tue, 20 Jul 2010 19:39:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14353#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14353#comment:3/1279654798000000</guid>
      <description>&lt;p&gt;
each text can be taken - for example:
&lt;/p&gt;
&lt;p&gt;
otto otto rüstung alf alf
&lt;/p&gt;
&lt;p&gt;
will be cut to:
&lt;/p&gt;
&lt;p&gt;
otto otto
&lt;/p&gt;
&lt;p&gt;
character encoding is utf-8.
&lt;/p&gt;
&lt;p&gt;
you can test under:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://wp-theme-t1.it-gnoth.de"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wp-theme-t1.it-gnoth.de&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
there is an admin user:
&lt;/p&gt;
&lt;p&gt;
adminwptrack
paswd: wptrack
&lt;/p&gt;
&lt;p&gt;
please let me know when you have finished testing, so I can remove the user.
&lt;/p&gt;
&lt;p&gt;
with this admin user you will have this reported case.
&lt;/p&gt;
&lt;p&gt;
strange is, that with an user as editor it is working correct:
&lt;/p&gt;
&lt;p&gt;
user: wptrack1
paswd: wptrack
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14365 (Admin custom option screen not saved unless user manage_options capability) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 20 Jul 2010 19:39:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14365#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14365#comment:1/1279654796000000</guid>
      <description>&lt;p&gt;
That would definitely create a hole, but you bring up an interesting point. I'd think we'd want to want the settings API leveraged where possible, including say theme options pages that may only be governed by edit_themes or edit_theme_options for cap checks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>14135.3.diff attached to Ticket #14135</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Tue, 20 Jul 2010 19:37:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14135/14135.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14135/14135.3.diff/1279654674000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14366 (Standardize e-mail, email text) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Tue, 20 Jul 2010 19:36:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14366#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14366#comment:3/1279654598000000</guid>
      <description>&lt;p&gt;
Also,
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.google.com/trends?q=&amp;#34;e-mail&amp;#34;,+email"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Google Trends&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.thefictiondesk.com/blog/spelling-email-vs-e-mail/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;This blog post&lt;/a&gt; says that the &lt;em&gt;OED&lt;/em&gt; allows "email," and who can argue against the &lt;em&gt;OED&lt;/em&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14366 (Standardize e-mail, email text) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Tue, 20 Jul 2010 19:25:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14366#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14366#comment:2/1279653947000000</guid>
      <description>&lt;p&gt;
The AP stylebook is probably being too conservative, if that's what it recommends.  My observation has been that tech-savvy people overwhelmingly use "email" instead of "e-mail," and to confirm it, just compare the number search results for "email" against "e-mail."  Or compare the following searches:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;'site:[URL of a site you respect] "e-mail"&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
against
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;'site:[URL of a site you respect] "email"&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14366 (Standardize e-mail, email text) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 20 Jul 2010 19:25:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14366#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14366#comment:1/1279653921000000</guid>
      <description>&lt;p&gt;
The AP only went from "Web site" to "website" this year. Many assumed they would also drop the hyphen but they didn't, at least this round.
&lt;/p&gt;
&lt;p&gt;
This might be overly pedantic, but I think I'd prefer sans hyphen and I think most technology companies/sites/blogs would agree. It's more progressive and it is certainly the direction it is gravitating to. That said, if we do have a proper spelling buried in the canon somewhere, I think Jane would know.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>email.diff attached to Ticket #14366</title>
      
        <dc:creator>niallkennedy</dc:creator>

      <pubDate>Tue, 20 Jul 2010 19:19:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14366/email.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14366/email.diff/1279653559000000</guid>
      <description>&lt;p&gt;
Replace email with e-mail
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14366 (Standardize e-mail, email text) created</title>
      
        <dc:creator>niallkennedy</dc:creator>

      <pubDate>Tue, 20 Jul 2010 19:19:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14366</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14366/1279653542000000</guid>
      <description>&lt;p&gt;
WordPress uses "e-mail" and "email" pretty interchangeably for site text, comments, and mail messages. In some cases both forms of the electronic-mail term are used on the same error message!
&lt;/p&gt;
&lt;p&gt;
This patch replaces all instances of "email" in WordPress text with "e-mail" instead. The electronic-mail abbreviation of "e-mail" is the current &lt;a class="ext-link" href="http://www.apstylebook.com/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;AP Stylebook&lt;/a&gt; recommendation. Electronic-mail translates well.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14355 (is_front_page returns false - if used after the loop starts) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Tue, 20 Jul 2010 19:17:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14355#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14355#comment:5/1279653451000000</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14355 (is_front_page returns false - if used after the loop starts) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 20 Jul 2010 19:16:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14355#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14355#comment:4/1279653410000000</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Please post a snippet of code that reproduces this on any install.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13946 (register new user - multi site feature - user not registered for right blog) updated</title>
      
        <dc:creator>christian_gnoth</dc:creator>

      <pubDate>Tue, 20 Jul 2010 19:16:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13946#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13946#comment:2/1279653389000000</guid>
      <description>&lt;p&gt;
thanks for the hint - I still would like to keep this request for the future releases or wordpress.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14135 (edit_posts_per_page) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 20 Jul 2010 19:16:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14135#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14135#comment:8/1279653360000000</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/branches/2.9/wp-admin/includes/post.php#L853"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/browser/branches/2.9/wp-admin/includes/post.php#L853&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It used to be edit_posts_per_page. We changed it in wp-admin/includes, but didn't change this instance. Really, both spots should have both filters, generic (old) followed by specific (new). Unless I'm missing something -- does that make sense?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14355 (is_front_page returns false - if used after the loop starts) updated</title>
      
        <dc:creator>christian_gnoth</dc:creator>

      <pubDate>Tue, 20 Jul 2010 19:14:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14355#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14355#comment:3/1279653261000000</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14135 (edit_posts_per_page) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Tue, 20 Jul 2010 19:10:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14135#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14135#comment:7/1279653029000000</guid>
      <description>&lt;p&gt;
It was added in 3.0, so it's only covering backward compatibility for 33 days. Anyone using it will also have to use the other filter as well or the page count is off.
&lt;/p&gt;
&lt;p&gt;
Do you want me to redo the patch &amp;amp; put the generic one back and add it to includes/post.php?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10710 (parse_request() of WP should set empty query variables when appropriate) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Tue, 20 Jul 2010 19:00:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10710#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10710#comment:7/1279652455000000</guid>
      <description>&lt;p&gt;
Another reason for this is that when endpoint rewrite rules are generated, they explicitly allow for empty endpoint values (see line 1289ff of &lt;code&gt;wp-includes/rewrite.php&lt;/code&gt;).
&lt;/p&gt;
&lt;p&gt;
So WP rewrite is writing checks that WP query can't cash.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14365 (Admin custom option screen not saved unless user manage_options capability) created</title>
      
        <dc:creator>markauk</dc:creator>

      <pubDate>Tue, 20 Jul 2010 18:54:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14365</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14365/1279652042000000</guid>
      <description>&lt;p&gt;
I have a custom options screen. The menu and sub-menu pages for that screen are set to show only if a user has a custom capability ('be_super_editor') in this case.
&lt;/p&gt;
&lt;p&gt;
The options screen shows or not as expected if a user has or does not have the 'be_super_editor' capability.
&lt;/p&gt;
&lt;p&gt;
However, the options cannot be updated unless the user has 'manage_options' capability as well. This seems to be wrong for two reasons:-
&lt;/p&gt;
&lt;p&gt;
(1) if a capability allows an options screen to be accessed, it is reasonable to assume that the user should be able to make changes to that screen.
&lt;/p&gt;
&lt;p&gt;
(2) giving these users 'manage_options' capability is not a good idea as that allows them to do other things that they shouldn't be able to do (e.g. access wp-admin/options.php directly).
&lt;/p&gt;
&lt;p&gt;
Changing line 30 of wp-admin/options.php from:-
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( !current_user_can('manage_options') )
&lt;/pre&gt;&lt;p&gt;
to:-
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( !current_user_can('manage_options') &amp;amp;&amp;amp; 'update' != $action )
&lt;/pre&gt;&lt;p&gt;
fixes the problem, though I don't know enough about the inner workings of WP security to say if this creates any further security/permissions issues.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14348 (If it's a HEAD request, stop after the head!) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Tue, 20 Jul 2010 18:48:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14348#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14348#comment:5/1279651725000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14348#comment:4" title="Comment 4"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I can easily picture a plugin overriding headers after an output buffer gets started or something similar. The patch exits too early.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I thought the same thing, but I was wrong. The exit()ing is not part of the patch, but already in the code. Also, there is a filter, called 'wp_headers' that a plugin can hook into.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11010 (adapt to https use) updated</title>
      
        <dc:creator>peaceablewhale</dc:creator>

      <pubDate>Tue, 20 Jul 2010 17:30:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11010#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11010#comment:10/1279647058000000</guid>
      <description>&lt;p&gt;
I am using Internet Explorer 8, which issues warning for mixing HTTP and HTTPS content. However, it does not issue any warning to my blog and the links generated by WordPress do start with &lt;a class="ext-link" href="https://"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I guess it is a theme issue rather than core issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11010 (adapt to https use) updated</title>
      
        <dc:creator>brantgurga</dc:creator>

      <pubDate>Tue, 20 Jul 2010 17:28:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11010#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11010#comment:9/1279646899000000</guid>
      <description>&lt;p&gt;
This is still an issue as far as I can tell. Make sure you aren't letting your browser accept http content on a site accessed by https. That's where the issue is. Wordpress hardcodes to using the http version instead of switching based on how the site is accessed. As a result, you end up with an https page with http content. This allows the http content (if you allow it) to cross that security boundary. This is still happening in 3.0 on my installation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14348 (If it's a HEAD request, stop after the head!) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Tue, 20 Jul 2010 17:18:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14348#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14348#comment:4/1279646284000000</guid>
      <description>&lt;p&gt;
I can easily picture a plugin overriding headers after an output buffer gets started or something similar. The patch exits too early.
&lt;/p&gt;
&lt;p&gt;
I suspect anything short of output buffering, running the full WP, and discarding the output, will introduce potential issues. Alternatively we could close as wontfix or worksforme, since that would be what apache does already.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12974 (Add support to get_archive_template() for custom content types) updated</title>
      
        <dc:creator>epicalex</dc:creator>

      <pubDate>Tue, 20 Jul 2010 16:58:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12974#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12974#comment:16/1279645111000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14360 (Smilies on SSL) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 20 Jul 2010 16:53:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14360#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14360#comment:1/1279644817000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
A simple switch from get_option('site_url') to site_url() will handle that.
&lt;/p&gt;
&lt;p&gt;
And really, the whole thing should instead use includes_url() and then pass that result to the filter.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10976 (Add before_content and after_content to widget options) reopened</title>
      
        <dc:creator>gordonbrander</dc:creator>

      <pubDate>Tue, 20 Jul 2010 16:33:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10976#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10976#comment:8/1279643625000000</guid>
      <description>&lt;p&gt;
Apologies, should have re-opened with last comments.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #11010 (adapt to https use) updated</title>
      
        <dc:creator>peaceablewhale</dc:creator>

      <pubDate>Tue, 20 Jul 2010 16:21:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11010#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11010#comment:8/1279642872000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
My WordPress 3.0 with the default Twenty Ten theme works well with both HTTP and HTTPS. Is this issue still valid?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14355 (is_front_page returns false - if used after the loop starts) updated</title>
      
        <dc:creator>christian_gnoth</dc:creator>

      <pubDate>Tue, 20 Jul 2010 16:20:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14355#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14355#comment:2/1279642821000000</guid>
      <description>&lt;p&gt;
sorry, it was written wrong - it returns outside true and inside false. and I am using query_posts.
&lt;/p&gt;
&lt;p&gt;
Problem is, that I am showing on my front page an excerpt and I have a customized excerpt function - in that customized excerpt function I am testing if it is front page or not and return different content. (&lt;a class="ext-link" href="http://wp-theme-t1.it-gnoth.de"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wp-theme-t1.it-gnoth.de&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
if query posts is teh reason - it should be possible to show different posts on the front page and still the function returns true.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14069 (do_robots() ignores charset setting) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 20 Jul 2010 15:49:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14069#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14069#comment:5/1279640966000000</guid>
      <description>&lt;p&gt;
More important then the actual encoding of the file (okay, if you want that any robot reads it, make it ASCII - period.) is the encoding of the relative URLs used inside the file.
&lt;/p&gt;
&lt;p&gt;
Those should be properly urlencoded.
&lt;/p&gt;
&lt;p&gt;
I made a write-up here: &lt;a class="ext-link" href="http://hakre.wordpress.com/2010/07/20/encoding-of-the-robots-txt-file/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Encoding of the robots.txt file&lt;/a&gt; and the resource ocen90 linked has this useful information as well:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
[M]ake sure the bots can properly read the file and directory path names, regardless of whether it adheres to ASCII standards. When writing directives that include characters unavailable in ASCII, you can "escape" (aka percent-encode) them, which enables the bot to read them.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think this is mostly important for webmasters who really want to care about these issues. My suggestion is to deliver the file in US-ASCII. It then can even mislabled as UTF-8 or Latin-1 as w/o running into any problems as long as the rules created by other parts of the webapplication are correctly urlencoded.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14364 ("Now" button for current date in update post published date and time) created</title>
      
        <dc:creator>dovydas</dc:creator>

      <pubDate>Tue, 20 Jul 2010 15:16:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14364</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14364/1279638960000000</guid>
      <description>&lt;p&gt;
It would be very convenient to have a button called "Now" in "Edit post" window in "Published on: date @ time" section.
&lt;/p&gt;
&lt;p&gt;
Google likes to know when old posts gets updated. So it is recommended to update post "published on:&amp;#34; date when post content is updated. When a user wants to update publishing time and date of a post, he must click &amp;#34;Edit", then manually enter year, month, day, hour and minute of current date and time and then click "Update post". It is quite slow and dull process but it could be automated easily with a new button.
&lt;/p&gt;
&lt;p&gt;
It would be very nice to have a button called "Now" which should automatically fill in year, month, day, hour and minute fields with values of current date and time.
&lt;/p&gt;
&lt;p&gt;
Whenever a user updates post publishing date and time, the date and time that he/she usually enters is current date and time. The "Now" button would be a big time saver for users who update their posts.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14363 (Atom feed is broken when WordPress is served as application/xhtml+xml) created</title>
      
        <dc:creator>peaceablewhale</dc:creator>

      <pubDate>Tue, 20 Jul 2010 14:57:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14363</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14363/1279637872000000</guid>
      <description>&lt;p&gt;
Atom feed is broken when WordPress is served as application/xhtml+xml because of the difference in html_type_rss().
&lt;/p&gt;
&lt;p&gt;
The patch attached also deprecates the_excerpt_rss() with a new function called 'the_excerpt_feed'.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14362 (Internal Pingbacks, only once in post) created</title>
      
        <dc:creator>iGraf</dc:creator>

      <pubDate>Tue, 20 Jul 2010 14:43:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14362</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14362/1279637003000000</guid>
      <description>&lt;p&gt;
I use pingbacks to external and internal websites. External websites to ping correctly. Internal pingbacks works only on link!
&lt;/p&gt;
&lt;p&gt;
Example in post: five links to internal posts (own blog)
&lt;/p&gt;
&lt;p&gt;
when i get publishing, only one pingback is in the commentlist. After edit again (without correction), then the next pingback is published on comments.
&lt;/p&gt;
&lt;p&gt;
etc.
&lt;/p&gt;
&lt;p&gt;
Can wordpress publish only ONE internal pingback?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #6109 (Add class attribute for next_posts_link and previous_posts_link) updated</title>
      
        <dc:creator>sorich87</dc:creator>

      <pubDate>Tue, 20 Jul 2010 13:50:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6109#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6109#comment:6/1279633825000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>link-template.patch attached to Ticket #6109</title>
      
        <dc:creator>sorich87</dc:creator>

      <pubDate>Tue, 20 Jul 2010 13:48:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/6109/link-template.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/6109/link-template.patch/1279633714000000</guid>
      <description>&lt;p&gt;
here is a patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>14361.patch attached to Ticket #14361</title>
      
        <dc:creator>peaceablewhale</dc:creator>

      <pubDate>Tue, 20 Jul 2010 13:46:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14361/14361.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14361/14361.patch/1279633588000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14361 (the_title does not escape HTML special characters properly) created</title>
      
        <dc:creator>peaceablewhale</dc:creator>

      <pubDate>Tue, 20 Jul 2010 13:45:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14361</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14361/1279633552000000</guid>
      <description>&lt;p&gt;
The 'the_title' function does not escape HTML special characters properly, causing invalid HTML.
&lt;/p&gt;
&lt;p&gt;
Test case: "&amp;lt;test&amp;gt;This is a test&amp;lt;/test&amp;gt;"
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #9993 (Rss and atom feeds are dropping some characters) updated</title>
      
        <dc:creator>peaceablewhale</dc:creator>

      <pubDate>Tue, 20 Jul 2010 12:51:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9993#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9993#comment:14/1279630309000000</guid>
      <description>&lt;p&gt;
Patch updated for 3.1.
&lt;/p&gt;
&lt;p&gt;
"&amp;amp; &amp;gt; test &amp;lt;" now works even without the patch, but "&amp;lt;test&amp;gt;This is a test&amp;lt;/test&amp;gt;" not.
&lt;/p&gt;
&lt;p&gt;
I still think there is no reason for having 'strip_tags' in feed title as they are escaped already.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>9993.patch attached to Ticket #9993</title>
      
        <dc:creator>peaceablewhale</dc:creator>

      <pubDate>Tue, 20 Jul 2010 12:49:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/9993/9993.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/9993/9993.patch/1279630178000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #9515 (feed_link functions should add a slash before the query when permalink ...) updated</title>
      
        <dc:creator>peaceablewhale</dc:creator>

      <pubDate>Tue, 20 Jul 2010 12:27:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9515#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9515#comment:39/1279628851000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14328 (next page doesn't work when using a template page for front page) reopened</title>
      
        <dc:creator>juggledad</dc:creator>

      <pubDate>Tue, 20 Jul 2010 11:16:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14328#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14328#comment:4/1279624615000000</guid>
      <description>&lt;p&gt;
It seems to me that that is inconsistant.
&lt;/p&gt;
&lt;p&gt;
Lets say I have a page template that I set as the front page and it contains The LOOP, and it does 'X' to every post. If I set the 'Blog pages show at most' to 10, then 10 posts will show "X'. If I change the 'Blog pages show at most' to 5, then I will see "X' on the first 5 posts, but when you go to the next page "X" will not happen. This is inconsistent.
&lt;/p&gt;
&lt;p&gt;
Even more the point, if I have two pages in my site and used the same template for both and set one as the front page, what is seen on both pages should be the same. If it is different then - in my mind - there is a bug.
&lt;/p&gt;
&lt;p&gt;
If you allow the front page to be set to a page with a template, then on pagination, you still have use that template.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14328#comment:3" title="Comment 3"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That's the correct behaviour: the 'Page of Posts' template is only loaded for the front page, not for subsequent paged archives.
&lt;/p&gt;
&lt;p&gt;
You should use home.php if you want that behaviour.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #14360 (Smilies on SSL) created</title>
      
        <dc:creator>tech163</dc:creator>

      <pubDate>Tue, 20 Jul 2010 10:55:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14360</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14360/1279623333000000</guid>
      <description>&lt;p&gt;
When I have smiles in comments, they are not served in SSL, even if I enabled FORCE_SSL_ADMIN in wp-config.
&lt;/p&gt;
&lt;p&gt;
I think this can be fixed by changing:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	$siteurl = get_option( 'siteurl' );
&lt;/pre&gt;&lt;p&gt;
to
&lt;/p&gt;
&lt;pre class="wiki"&gt;	$siteurl = get_option( 'siteurl' );
	if($_SERVER['HTTPS'] == 'on') {
		if(substr($siteurl, 0, 5) == 'http:') {
			$siturl = 'https:' . substr($siteurl, 5);
		}
	}
&lt;/pre&gt;&lt;p&gt;
on line 1427 of /wp-includes/formatting.php.
&lt;/p&gt;
&lt;p&gt;
Can someone else verify that this works?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14357 (get_page_by_path() and get_page_by_title() lack caching) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 20 Jul 2010 10:13:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14357#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14357#comment:2/1279620810000000</guid>
      <description>&lt;p&gt;
Similar: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13170" title="#13170: enhancement: get_term_by() should check object cache (closed: worksforme)"&gt;#13170&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14359 (Support loading mu_plugins from subdirectories) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 20 Jul 2010 09:35:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14359#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14359#comment:1/1279618551000000</guid>
      <description>&lt;p&gt;
The issue I see is that many use it like so: a directory of scripts, with files at the root including what must be loaded that happens to be below the top level. This is how any multi-file mu plugin must work currently.
&lt;/p&gt;
&lt;p&gt;
Changing that without it being an opt-in would obviously break quite a bit.
&lt;/p&gt;
&lt;p&gt;
The ability for files in mu-plugins to be visible in the admin is quite new. I wrote the code for it for 3.0; the functionality itself was introduced in 2.8 in core, and in MU years before that. Enabling it to scan plugin headers is a complete afterthought in the general sense.
&lt;/p&gt;
&lt;p&gt;
My point is, even if we scanned subdirectories, files not containing headers would need to be moved down an additional directory anyway (no different from moving a single file up a directory, as it is now) or we would need to store valid plugins in the DB, something we've never done for these -- mu-plugins are completely stateless. Not only do we make headers optional, but they were useless until 3.0.
&lt;/p&gt;
&lt;p&gt;
Simple solution I see is that you simply move up yahoo_example.php to be on the same level as yahoo_example and make sure the php file includes what it needs out of the folder. More complex solution, well, I'm not sure -- it involves a significant rework of a section that, I think, is best kept light and simple so plugins, networks, and Yahoo can build whatever their heart desires on top of it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>13326.1.diff attached to Ticket #13326</title>
      
        <dc:creator>simonwheatley</dc:creator>

      <pubDate>Tue, 20 Jul 2010 09:32:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13326/13326.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13326/13326.1.diff/1279618343000000</guid>
      <description>&lt;p&gt;
Adds $is_iphone to the global declaration
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #13326 (WordPress does not function on iPad in View (non HTML Mode)) updated</title>
      
        <dc:creator>simonwheatley</dc:creator>

      <pubDate>Tue, 20 Jul 2010 09:31:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13326#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13326#comment:12/1279618298000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13326#comment:10" title="Comment 10"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13326#comment:9" title="Comment 9"&gt;simonwheatley&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Unfortunately that won't fix this issue completely. When editing a post we output the content slightly differently depending on whether the Visual or the HTML editor is loaded first. We should handle this in the back-end/PHP as the TinyMCE team suggests.
&lt;/p&gt;
&lt;p&gt;
Patching this should be quite trivial, will add a proposed patch a bit later.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Fair enough. I think the patch needs $is_iphone to be global declaration at the top of the function... I'll post a patch shortly. Otherwise I've tested this on an iPad and it works, thanks!
&lt;/p&gt;
&lt;p&gt;
Any chance we can get a nice small change like this into 3.0.1?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14352 (Fatal error message when trying to access my homepage and/or login to ...) closed</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Tue, 20 Jul 2010 07:56:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14352#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14352#comment:1/1279612615000000</guid>
      <description>worksforme: &lt;p&gt;
You should really use the forums to diagnose support issues, trac is for reporting bugs.  Check your WordPress directories for deleted files and re-upload wp-includes from zip file if necessary.
&lt;/p&gt;
&lt;p&gt;
If it still doesn't work, start a topic on &lt;a class="ext-link" href="http://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14359 (Support loading mu_plugins from subdirectories) created</title>
      
        <dc:creator>benward</dc:creator>

      <pubDate>Tue, 20 Jul 2010 05:42:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14359</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14359/1279604564000000</guid>
      <description>&lt;p&gt;
Aim: Enhance the load_mu_plugins mechanism to support loading plugins from inside subdirectories in &lt;code&gt;WPMU_PLUGIN_DIR&lt;/code&gt;, in both initialization and plugins administration interface.
&lt;/p&gt;
&lt;p&gt;
Why: We (Yahoo, hello) are making substantial use of the &lt;code&gt;mu-plugins&lt;/code&gt; mechanism to extend WordPress functionality at a deployment level, adding core product/instance functionality to a as part of the code deployment, rather than features that are enabled through the GUI. (e.g. Authentication, custom input filtering, integration with low level options configuration systems we have.) Each such enhancement is modular, and some wrap additional libraries, so all of our ‘must-use’ plugins are packaged in separate directories. WordPress, as of now, does not load must-use plugins from subdirectories.
&lt;/p&gt;
&lt;p&gt;
Thus, we have one root must-use plugin that recursively loads plugins from subdirectories. This has the disadvantage that those sub-directory plugins then aren't listed in the Plugins UI, and it's all a bit of a hack.
&lt;/p&gt;
&lt;p&gt;
I'm working on a patch to improve the mu-plugin loading to support single-subdirectory loading, _similar_ to regular plugins. The components of this are:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Patch &lt;code&gt;wp-admin/includes/plugin.php:get_plugins()&lt;/code&gt; to accept &lt;code&gt;$plugin_root&lt;/code&gt; as a parameter—either &lt;code&gt;WP_PLUGIN_DIR&lt;/code&gt; or &lt;code&gt;WPMU_PLUGIN_DIR&lt;/code&gt;—and build a cache key using that path rather than fixed &lt;code&gt;plugins&lt;/code&gt; key.
&lt;/li&gt;&lt;li&gt;Patch &lt;code&gt;wp-admin/includes/plugin.php:get_mu_plugins()&lt;/code&gt; to call &lt;code&gt;get_plugins()&lt;/code&gt; specifying &lt;code&gt;WPMU_PLUGIN_DIR&lt;/code&gt; as the &lt;code&gt;$plugin_root&lt;/code&gt;. This loads subdirectory plugins with details into the admin UI.
&lt;/li&gt;&lt;li&gt;From &lt;code&gt;wp-admin/includes/plugin.php:get_plugins()&lt;/code&gt; refactor the recursive directory listing code into a non-admin &lt;code&gt;get_plugins()&lt;/code&gt; method in &lt;code&gt;wp-includes/load.php&lt;/code&gt;, since it is needed to load the mu-plugins.
&lt;/li&gt;&lt;li&gt;Patch &lt;code&gt;load.php:wp_get_mu_plugins()&lt;/code&gt; to grab plugin files from &lt;code&gt;WPMU_PLUGINS_DIR&lt;/code&gt; and subdirectories, using refactoring file-listing function from \&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/3" title="#3: defect (bug): Certain characters in commenter name/email/URI fields are incorrectly ... (closed: fixed)"&gt;#3&lt;/a&gt;.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
In writing this I quickly hit on why WordPress treats mu-plugins so simply already: Regular plugins are examined for metadata to check their validity, regardless of filename, and then active plugins are stored as an option and cached. Since must-use plugins are not stored in an option, and since caching is not a default feature of WordPress, mu-plugin loading cannot require calling &lt;code&gt;/wp-admin/includes/plugin.php:get_plugin_data()&lt;/code&gt; on every load. As such, I'm currently working with a new, but I think more reasonable structure limitation for mu-plugins: That the main file for a subdirectory-based mu-plugin must be named the same as its containing directory: That is, the &lt;code&gt;./yahoo_example&lt;/code&gt; plugin must be initialized by &lt;code&gt;./yahoo_example/yahoo_example.php&lt;/code&gt;. This pattern seems to match how many plugins already package themselves anyway.
&lt;/p&gt;
&lt;p&gt;
That said, I am interested to hear other suggestions on how to load from mu_plugins without introducing a performance hit.
&lt;/p&gt;
&lt;p&gt;
I'm posting this bug to describe my fix. I'm testing the patch at present and will attach it for review/comment after a couple of immediate kinks are ironed out.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14348 (If it's a HEAD request, stop after the head!) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Tue, 20 Jul 2010 05:31:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14348#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14348#comment:3/1279603878000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Oops, seemed to have lost my mind sometime a few minutes ago. I'm just going to be other there if you need me. No? Okay then.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14348 (If it's a HEAD request, stop after the head!) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Tue, 20 Jul 2010 05:22:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14348#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14348#comment:2/1279603367000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I hope by, "Thanks for reporting" what you mean to say is "that in no way should this patch ever be applied to WordPress and thanks for duplicating something hakre has already bought attention and I believe has a patch for what is appropriate to fixing the issue you have."
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14069 (do_robots() ignores charset setting) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 20 Jul 2010 03:15:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14069#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14069#comment:4/1279595743000000</guid>
      <description>&lt;p&gt;
I'm not the character queen either. Historically the safest route should be US-ASCII (or 7bit ascii). If robots.txt would support the encoding like we have it with URLs, then the robots.txt file can be 100% US-ASCII endocded, and the content it transport can be an urlencoded representation of any other character set then (which would not make much sense, becuase how should a robot determine a charset then?).
&lt;/p&gt;
&lt;p&gt;
To make a longer story short, the charset meta-information as provided by the headers must match with the body encoding of the robots.txt file server response. The suggestion from that bing website can be useful but should not matter here. In the end a blogs admin decides which charset a blog uses. That's the charset robots.txt is encoded in as well. If it's incompatible with robots, then it's the admins choice.
&lt;/p&gt;
&lt;p&gt;
Blogs should be either US-ASCII or UTF-8 btw. You can (but must not) use latin-1 for historical or performance reasons. This is how I would formulate a best practice suggestion.
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/14201" title="#14201: defect (bug): Canonical redirect kicks in in case of category/tag base containing ... (new)"&gt;#14201&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14348 (If it's a HEAD request, stop after the head!) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 20 Jul 2010 03:14:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14348#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14348#comment:1/1279595647000000</guid>
      <description>&lt;p&gt;
Thanks for reporting.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14353 (editor cuts off text at first german umlaut) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 20 Jul 2010 03:11:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14353#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14353#comment:2/1279595461000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14353 (editor cuts off text at first german umlaut) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 20 Jul 2010 03:10:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14353#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14353#comment:1/1279595448000000</guid>
      <description>&lt;p&gt;
Please provide a smaple text, the exact steps to reproduce and name the encoding setting you have on your blog.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11373 (get_page_by_path() enhancements) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 20 Jul 2010 03:08:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11373#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11373#comment:9/1279595317000000</guid>
      <description>&lt;p&gt;
See also: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14357" title="#14357: enhancement: get_page_by_path() and get_page_by_title() lack caching (closed: duplicate)"&gt;#14357&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14292 (loop in tags url to same url) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 20 Jul 2010 03:06:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14292#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14292#comment:25/1279595209000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7095" title="#7095: defect (bug): Japanese Tag Slugs (closed: fixed)"&gt;#7095&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14313 (TAG permalink with chinese (Japanese) character have issue) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 20 Jul 2010 03:06:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14313#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14313#comment:23/1279595194000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7095" title="#7095: defect (bug): Japanese Tag Slugs (closed: fixed)"&gt;#7095&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14062 (some Location headers are using relative url's) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 20 Jul 2010 02:56:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14062#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14062#comment:5/1279594599000000</guid>
      <description>&lt;p&gt;
One way would be to check each call of &lt;code&gt;wp_redirect()&lt;/code&gt;. Another idea I have is to integreate a warning inside my better redirects plugin that does throw warnings if WP_DEBUG is enabled. Can help with plugin development as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13955 (Updated / corrected List of HTTP status codes) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 20 Jul 2010 02:54:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13955#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13955#comment:6/1279594449000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13955#comment:3" title="Comment 3"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13955#comment:2" title="Comment 2"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Why does IANA keep references to obsoleted tracks on their list?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Because those header codes were once defined and need to be blocked in the registry. So a code in the registry does not mean that it can be used only that it once had a meaning - even if for only a short period of time. That's comparable to the entries that are of no use (blocked).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13940 (get_status_header_desc() returns HTTP 1.1 status codes for HTTP 1.0) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 20 Jul 2010 02:50:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13940#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13940#comment:17/1279594206000000</guid>
      <description>&lt;p&gt;
To rephrase what I wrote in response to Mark, emphasis by me:
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13940#comment:5" title="Comment 5"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13940#comment:3" title="Comment 3"&gt;markjaquith&lt;/a&gt;:
You must not return wrong status-&lt;strong&gt;codes&lt;/strong&gt; (which would invalidate the full phrase) in HTTP 1.0 nor in HTTP 1.1.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As you can see I'm writing about &lt;strong&gt;codes, &lt;em&gt;not&lt;/em&gt; phrases&lt;/strong&gt;. This is the same for the title of this ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13326 (WordPress does not function on iPad in View (non HTML Mode)) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 20 Jul 2010 01:24:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13326#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13326#comment:11/1279589086000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>13326.patch attached to Ticket #13326</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 20 Jul 2010 01:23:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13326/13326.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13326/13326.patch/1279589028000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>14358.patch attached to Ticket #14358</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Tue, 20 Jul 2010 01:09:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14358/14358.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14358/14358.patch/1279588150000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14358 (Filter meta widget's "Powered By" text) created</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Tue, 20 Jul 2010 01:08:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14358</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14358/1279588130000000</guid>
      <description>&lt;p&gt;
For MS installations, site owners may want to change this text. Let's encourage not editing core files.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14357 (get_page_by_path() and get_page_by_title() lack caching) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Mon, 19 Jul 2010 23:51:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14357#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14357#comment:1/1279583492000000</guid>
      <description>&lt;p&gt;
See also: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11373" title="#11373: enhancement: get_page_by_path() enhancements (closed: fixed)"&gt;#11373&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14354 (Abilty to add classes to menu items) closed</title>
      
        <dc:creator>rfair404</dc:creator>

      <pubDate>Mon, 19 Jul 2010 23:41:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14354#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14354#comment:5/1279582866000000</guid>
      <description>invalid: &lt;p&gt;
I feel silly, oh so silly for missing that one.  Thanks all
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #13327 (Post editor puts content through wpautop() before displaying it to ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 19 Jul 2010 23:29:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13327#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13327#comment:6/1279582194000000</guid>
      <description>&lt;p&gt;
Been thinking more about this: currently we output HTML for both cases, js and no-js and then hide the extra elements with CSS (the .hide-if-js, .hide-if-no-js classes).
&lt;/p&gt;
&lt;p&gt;
This is working well and is completely transparent for the user. The disadvantages are that we output more HTML code and that in certain cases we still need to know whether JS in the browser is disabled before we start the output like for this ticket or the horizontal folding of the admin menu.
&lt;/p&gt;
&lt;p&gt;
It seems we have two options:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Change the no-js mechanism to use a "session" type cookie, i.e. add a &amp;lt;noscript&amp;gt; redirect in the HTML header and when that is triggered, set a cookie that will expire when the browser is closed.
&lt;pre class="wiki"&gt;&amp;lt;head&amp;gt;
&amp;lt;noscript&amp;gt;&amp;lt;meta http-equiv=refresh content="0; url=..." /&amp;gt;&amp;lt;/noscript&amp;gt;
&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The main disadvantage of this method is that the &amp;lt;noscript&amp;gt; tag is invalid in the HTML head in XHTML 1.0. However this is widely used and seems to work properly in all current browsers (see Google Maps for example).
&lt;/p&gt;
&lt;p&gt;
From user prospective there will be no change when JS is enabled and only a very small delay in loading the first admin screen when it's disabled. In the back-end we can see that redirect, set a global or a constant, set the temporary cookie and stop outputting the &amp;lt;noscript&amp;gt; redirect (of course we will be checking for that cookie first).
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Continue handling this on per-case basis. In that terms we would need to output two content textareas on the write/edit screen and hide the extra one with CSS:
&lt;/li&gt;&lt;/ul&gt;&lt;pre class="wiki"&gt;&amp;lt;textarea id="content" name="content" class="hide-if-no-js"&amp;gt;&amp;lt;/textarea&amp;gt;
&amp;lt;textarea id="content-nojs" name="content-nojs" class="hide-if-js"&amp;gt;&amp;lt;/textarea&amp;gt;
&lt;/pre&gt;&lt;p&gt;
If JS is enabled we can empty the content of #content-nojs (or even remove it completely), then when saving the post we will look first whether &lt;code&gt;$_POST['content-nojs']&lt;/code&gt; is not empty and copy that over &lt;code&gt;$_POST['content']&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14357 (get_page_by_path() and get_page_by_title() lack caching) created</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Mon, 19 Jul 2010 23:24:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14357</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14357/1279581890000000</guid>
      <description>&lt;p&gt;
&lt;code&gt;get_page_by_path()&lt;/code&gt; and &lt;code&gt;get_page_by_title()&lt;/code&gt; always hit the database. We should add caching and caching invalidation for these two functions.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #13326 (WordPress does not function on iPad in View (non HTML Mode)) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 19 Jul 2010 21:37:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13326#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13326#comment:10/1279575457000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13326#comment:9" title="Comment 9"&gt;simonwheatley&lt;/a&gt;:
TinyMCE will be upgraded to its latest version for WordPress 3.1, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12574" title="#12574: task (blessed): Update Tinymce (closed: fixed)"&gt;#12574&lt;/a&gt;. I expect this will land in 3.1-alpha early in the next dev. cycle, probably early September.
&lt;/p&gt;
&lt;p&gt;
Unfortunately that won't fix this issue completely. When editing a post we output the content slightly differently depending on whether the Visual or the HTML editor is loaded first. We should handle this in the back-end/PHP as the TinyMCE team suggests.
&lt;/p&gt;
&lt;p&gt;
Patching this should be quite trivial, will add a proposed patch a bit later.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14355 (is_front_page returns false - if used after the loop starts) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 19 Jul 2010 21:21:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14355#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14355#comment:1/1279574487000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Can't reproduce. Are you using query_posts() by any chance?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14349 (Filter to query_posts() args) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 19 Jul 2010 20:54:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14349#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14349#comment:10/1279572855000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14349#comment:7" title="Comment 7"&gt;filosofo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14349#comment:3" title="Comment 3"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Well, the earliest hook is 'parse_query', which might or might not be good enough.
&lt;/p&gt;
&lt;p&gt;
So a nice clean filter right at the beginning of WP_Query::parse_query() wouldn't hurt.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What would that do for custom query variables that using a callback on &lt;code&gt;parse_query&lt;/code&gt; doesn't?  In other words, I don't see anything here that can't easily be accomplished using existing hooks.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It would be useful if you needed to alter the query variables before all the query flags were set. Currently, you would have to set them manually, or call parse_query() again somehow.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13915 (WP_Http_Fopen is PHP4 only) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Mon, 19 Jul 2010 20:53:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13915#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13915#comment:7/1279572787000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13915#comment:6" title="Comment 6"&gt;johnjamesjacoby&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@jacobsantos, if you can explain how to duplicate the environment I'll gladly test it against BuddyPress and help if a fix is necessary.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I still don't understand. This is a PHP4 environment, so you would simply install PHP4. The Streams will not be available. If you Install PHP5, then this class should never be used, the next fail over should be fsockopen.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If I recall, this issue may have been almost (if not over) a year ago, so I'm a little fuzzy on the topic myself.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That is unfortunate as I'm trying to figure out what the other guy means. If fopen doesn't exist, then I'm unsure how the HTTP API has anything to do with avatars and what not with BuddyPress and WPMU (which is part of WP now). There were problems with specific versions of fopen when cURL was installed and used, but that generally has no good fix.
&lt;/p&gt;
&lt;p&gt;
I'm to assume that either it has to do with the filesystem which is outside the scope of this ticket and also HTTP API. Or the problem was outside the scope of this class and API and is a PHP issue. Neither of which has anything to do with this ticket.
&lt;/p&gt;
&lt;p&gt;
Until more information is given, I can't really give a solution and therefore have to ignore it. As of right now, until more information is given, I believe it has nothing to do with this ticket or the patch, I would frankly rather it not be discussed further.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14349 (Filter to query_posts() args) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 19 Jul 2010 20:48:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14349#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14349#comment:9/1279572485000000</guid>
      <description>worksforme: &lt;p&gt;
Most times, when you have to manipulate the raw SQL request, you need to alter multiple sections in the query. Therefore, you need to register a callback for each SQL segment and repeat the same check in each callback:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function fictional_alter_where( $where, $wp_query ) {
    if ( $wp_query-&amp;gt;get( 'custom_var' ) ) {
        $where .= " AND meta_value IN ( 'foo', 'bar' )";
    }
    return $where;
}
add_filter( 'posts_where', 'fictional_alter_where' );
function fictional_alter_join( $join, $wp_query ) {
    global $wpdb;
    if ( $wp_query-&amp;gt;get( 'custom_var' ) ) {
        $join .= " JOIN $wpdb-&amp;gt;postmeta ON ($wpdb-&amp;gt;posts.ID = $wpdb-&amp;gt;postmeta.post_id )";
    }
    return $join;
}
add_filter( 'posts_where', 'fictional_alter_join' );
&lt;/pre&gt;&lt;p&gt;
I think you'll agree that this is pretty cumbersome.
&lt;/p&gt;
&lt;p&gt;
Using wp-query-manipulation.php:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function fictional_alter_query( $bits, $wp_query ) {
    global $wpdb;
    if ( $wp_query-&amp;gt;get( 'custom_var' ) ) {
    	$bits['where'] .= " AND meta_value IN ( 'foo', 'bar' )";
        $bits['join']  .= " JOIN $wpdb-&amp;gt;postmeta ON ($wpdb-&amp;gt;posts.ID = $wpdb-&amp;gt;postmeta.post_id )";
    }
    return $bits;
}
new WP_Query_Manipulation( 'fictional_alter_query' );
&lt;/pre&gt;&lt;p&gt;
I'm so happy I've found an easier way to do this and it doesn't even require a patch. Thanks, lucaswxp :D
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [15448]: Do not include space in the beginning of internationalized string </title>
      
        <dc:creator>nbachiyski</dc:creator>

      <pubDate>Mon, 19 Jul 2010 20:36:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15448</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15448/1279571790247882</guid>
      <description>&lt;p&gt;
Do not include space in the beginning of internationalized string
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [15447]: Do not include newline character in the beginning if the database ...</title>
      
        <dc:creator>nbachiyski</dc:creator>

      <pubDate>Mon, 19 Jul 2010 20:35:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15447</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15447/1279571715338116</guid>
      <description>&lt;p&gt;
Do not include newline character in the beginning if the database error string
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14356 (Better string for onbeforeunload event dialog) updated</title>
      
        <dc:creator>demetris</dc:creator>

      <pubDate>Mon, 19 Jul 2010 20:30:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14356#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14356#comment:2/1279571441000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@nacin
&lt;/p&gt;
&lt;p&gt;
Yes. I forgot to add that:
&lt;/p&gt;
&lt;p&gt;
The string will have to also work with Chrome, which does not have any default strings there. Instead, it has more informative buttons:
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;[Leave this Page] [Stay on this Page]
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
(That‘s in Chromium for Linux.  I will have to check the other Chromes too, but I think it is the same across operating systems.)
&lt;/p&gt;
&lt;p&gt;
Internet and Firefox have the exact same dialog (the one I am quoting in the description).
&lt;/p&gt;
&lt;p&gt;
Safari has:
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;Are you sure you want to leave this page?
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;Press OK to continue, or Cancel to stay on the current page.
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;[OK] [Cancel]
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
Opera does not implement onbeforeunload yet.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>wp-query-manipulation.php attached to Ticket #14349</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 19 Jul 2010 20:30:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14349/wp-query-manipulation.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14349/wp-query-manipulation.php/1279571439000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14349 (Filter to query_posts() args) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 19 Jul 2010 19:49:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14349#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14349#comment:8/1279568949000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14349#comment:7" title="Comment 7"&gt;filosofo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What would that do for custom query variables that using a callback on &lt;code&gt;parse_query&lt;/code&gt; doesn't?  In other words, I don't see anything here that can't easily be accomplished using existing hooks.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Seconding that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14349 (Filter to query_posts() args) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Mon, 19 Jul 2010 19:46:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14349#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14349#comment:7/1279568801000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14349#comment:3" title="Comment 3"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Well, the earliest hook is 'parse_query', which might or might not be good enough.
&lt;/p&gt;
&lt;p&gt;
So a nice clean filter right at the beginning of WP_Query::parse_query() wouldn't hurt.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What would that do for custom query variables that using a callback on &lt;code&gt;parse_query&lt;/code&gt; doesn't?  In other words, I don't see anything here that can't easily be accomplished using existing hooks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14349 (Filter to query_posts() args) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 19 Jul 2010 19:42:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14349#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14349#comment:6/1279568521000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14349 (Filter to query_posts() args) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 19 Jul 2010 19:41:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14349#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14349#comment:5/1279568492000000</guid>
      <description>&lt;p&gt;
Nice; I would love to have access to all the query bits in one callback.
&lt;/p&gt;
&lt;p&gt;
I would even be happy with this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function alter_query_bits( $sql_query, $query_vars ) {
   if ( isset( $query_vars['my_custom_arg'] ) ) {
      // do some stuff to $sql_query
    }
    return $sql_query;
}
add_filter( 'query_bits', 'alter_query_bits', 10, 2);
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14354 (Abilty to add classes to menu items) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 19 Jul 2010 19:05:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14354#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14354#comment:4/1279566314000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14354#comment:3" title="Comment 3"&gt;filosofo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I thought that's what I said.  :)
&lt;/p&gt;
&lt;p&gt;
Thanks for making it clearer.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ah, that you did. I just kind of read through it and saw mention of the filter, and realized rfair404 may not have noticed the screen options to boot.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14354 (Abilty to add classes to menu items) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Mon, 19 Jul 2010 19:03:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14354#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14354#comment:3/1279566231000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14354#comment:2" title="Comment 2"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also -- wp-admin/nav-menus.php, Screen Options &amp;gt; Classes.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I thought that's what I said.  :)
&lt;/p&gt;
&lt;p&gt;
Thanks for making it clearer.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14354 (Abilty to add classes to menu items) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 19 Jul 2010 19:00:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14354#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14354#comment:2/1279566013000000</guid>
      <description>&lt;p&gt;
Also -- wp-admin/nav-menus.php, Screen Options &amp;gt; Classes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14356 (Better string for onbeforeunload event dialog) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 19 Jul 2010 18:59:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14356#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14356#comment:1/1279565969000000</guid>
      <description>&lt;p&gt;
Pretty sure the resulting dialog is browser specific.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14354 (Abilty to add classes to menu items) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Mon, 19 Jul 2010 18:58:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14354#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14354#comment:1/1279565898000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
You can add classes to each menu item individually and directly.  If you want to add a particular class automatically, you should be able to do it using the  &lt;code&gt;nav_menu_css_class&lt;/code&gt; filter.
&lt;/p&gt;
&lt;p&gt;
If there's something you still are not able to accomplish using the existing filters, please elaborate.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14356 (Better string for onbeforeunload event dialog) created</title>
      
        <dc:creator>demetris</dc:creator>

      <pubDate>Mon, 19 Jul 2010 18:53:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14356</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14356/1279565595000000</guid>
      <description>&lt;p&gt;
The WP string for this now is:
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;The changes you made will be lost if you navigate away from this page.&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
The resulting dialog is:
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;Are you sure you want to navigate away from this page?
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;The changes you made will be lost if you navigate away from this page.
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;Press OK to continue, or Cancel to stay on the current page.
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;[OK] [Cancel]
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
Which is repetitive and, it seems to me, confusing.
&lt;/p&gt;
&lt;p&gt;
I was thinking we could change our string to something not repetitive that complements better the default strings.  E.g.:
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;You have unsaved changes that will be lost!
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
Patch available upon request.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14355 (is_front_page returns false - if used after the loop starts) created</title>
      
        <dc:creator>christian_gnoth</dc:creator>

      <pubDate>Mon, 19 Jul 2010 18:51:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14355</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14355/1279565481000000</guid>
      <description>&lt;p&gt;
hello,
I am using is_front_page() on different places in my theme template files.
&lt;/p&gt;
&lt;p&gt;
It returns for the front page and home page true if I call it inside the loop - if I call it before the loop starts ( if(have_posts()) ) it returns false for the front page. it also returns false if I call it in my functions.php file in a customized excerpt action hook.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14354 (Abilty to add classes to menu items) created</title>
      
        <dc:creator>rfair404</dc:creator>

      <pubDate>Mon, 19 Jul 2010 18:48:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14354</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14354/1279565292000000</guid>
      <description>&lt;p&gt;
Sure would be nice if I could add classes to the menu items created by wp_nav_menu. For example, I could add a class "last" to the last li generated by the menu, therefor being able to style it differently from the rest. same with the first. I think it would be nice, from a theme development standpoint for this to be default. But also be nice if I could add class contact or something to a specific element, therefor being able to put a custom background image, etc in my stylesheet.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14135 (edit_posts_per_page) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 19 Jul 2010 18:47:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14135#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14135#comment:6/1279565265000000</guid>
      <description>&lt;p&gt;
I don't see why the filter needs to be removed? That's a generic filter and should remain if only for back compat. Possibly even added into template.php I'd think.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14135 (edit_posts_per_page) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Mon, 19 Jul 2010 18:44:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14135#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14135#comment:5/1279565090000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14135 (edit_posts_per_page) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Mon, 19 Jul 2010 18:43:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14135#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14135#comment:4/1279565014000000</guid>
      <description>&lt;p&gt;
The second patch uses the 20 in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15444" title="Remove rededundant code. see #14292"&gt;[15444]&lt;/a&gt; and less confusing variable names.
&lt;/p&gt;
&lt;p&gt;
Anyone using these filters would have been using both filters to get the correct display, so switching to using the same filter should not adversely affect anyone.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>14135.2.diff attached to Ticket #14135</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Mon, 19 Jul 2010 18:41:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14135/14135.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14135/14135.2.diff/1279564901000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14342 (posts paging calculation inconsistent) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 19 Jul 2010 16:29:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14342#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14342#comment:4/1279556947000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15446" title="Default posts per page to 20. Props wpmuguru. fixes #14342 for 3.0.1"&gt;[15446]&lt;/a&gt;) Default posts per page to 20. Props wpmuguru. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14342" title="#14342: defect (bug): posts paging calculation inconsistent (closed: fixed)"&gt;#14342&lt;/a&gt; for 3.0.1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [15446]: Default posts per page to 20. Props wpmuguru. fixes #14342 for 3.0.1</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 19 Jul 2010 16:29:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15446</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15446/1279556945225798</guid>
      <description>&lt;p&gt;
Default posts per page to 20. Props wpmuguru. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14342" title="#14342: defect (bug): posts paging calculation inconsistent (closed: fixed)"&gt;#14342&lt;/a&gt; for 3.0.1
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14342 (posts paging calculation inconsistent) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 19 Jul 2010 16:28:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14342#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14342#comment:3/1279556909000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15445" title="Default posts per page to 20. Props wpmuguru. fixes #14342 for 3.1"&gt;[15445]&lt;/a&gt;) Default posts per page to 20. Props wpmuguru. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14342" title="#14342: defect (bug): posts paging calculation inconsistent (closed: fixed)"&gt;#14342&lt;/a&gt; for 3.1
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [15445]: Default posts per page to 20. Props wpmuguru. fixes #14342 for 3.1</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 19 Jul 2010 16:28:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15445</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15445/1279556906752294</guid>
      <description>&lt;p&gt;
Default posts per page to 20. Props wpmuguru. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14342" title="#14342: defect (bug): posts paging calculation inconsistent (closed: fixed)"&gt;#14342&lt;/a&gt; for 3.1
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14342 (posts paging calculation inconsistent) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 19 Jul 2010 16:27:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14342#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14342#comment:2/1279556858000000</guid>
      <description>&lt;p&gt;
The default for other pages as well as screen options is 20. Let's standardize on that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14349 (Filter to query_posts() args) updated</title>
      
        <dc:creator>lucaswxp</dc:creator>

      <pubDate>Mon, 19 Jul 2010 16:27:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14349#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14349#comment:4/1279556825000000</guid>
      <description>&lt;p&gt;
Something like:
add_filter('query_args-my_custom_arg', 'parse_my_custom_arg');
/&lt;strong&gt;
@param string $arg_value Value of my custom arg
@param array $sql_query That will be a ARRAY with all the sql's (posts_where, joins etc)
&lt;/strong&gt;/
function parse_my_custom_arg($arg_value, $sql_query){
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
$sql_query&lt;a class="missing wiki"&gt;where?&lt;/a&gt; .= " AND custom_something = '$arg_value' "
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;em&gt; do another things
&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
return $sql_query;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}
&lt;/p&gt;
&lt;p&gt;
to:
query_posts('my_custom_arg=arg-value');
&lt;/p&gt;
&lt;p&gt;
I thought something like that =)
&lt;/p&gt;
&lt;p&gt;
Srry for the bad english, I'm brazilian
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14292 (loop in tags url to same url) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 19 Jul 2010 16:16:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14292#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14292#comment:24/1279556190000000</guid>
      <description>&lt;p&gt;
For the log: normalizing the path is a bad idea.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14343 (user_can_access_admin_page not recognising taxonomies) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 19 Jul 2010 16:08:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14343#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14343#comment:7/1279555738000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
user_can_access_admin_page() should never be relied upon. It is a fallback. We can look into fixing it for pages that have query args in 3.1.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14330 (Improper handling of 'post_type[]=' like parameters) updated</title>
      
        <dc:creator>loushou</dc:creator>

      <pubDate>Mon, 19 Jul 2010 15:53:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14330#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14330#comment:19/1279554835000000</guid>
      <description>&lt;p&gt;
Hakre - On second thought, I may have reacted a little too quickly. Your solution does solve the main problem; however, now ALL the params are getting turned to an array. First I am not sure that the extra logic for every param being an array is being accounted for with you solution (as there is plenty of logic below the for loop that deals with each param individually) and second, I am pretty sure that WP_Query only accepts arrays for certain params, not all params. For instance, had we included a date and time in our URL, the hour, minute, second, month, day, and year params all require single values, not arrays. Same for the name param. This solution is not as complete as I originally thought at first glance. :(
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14330 (Improper handling of 'post_type[]=' like parameters) updated</title>
      
        <dc:creator>loushou</dc:creator>

      <pubDate>Mon, 19 Jul 2010 15:42:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14330#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14330#comment:18/1279554169000000</guid>
      <description>&lt;p&gt;
Hakre - excellent suggestion. Looks really good and does the same exact thing. Wish I would have thought of that.
&lt;/p&gt;
&lt;p&gt;
WpmuGuru - while that may work for the 'get_post' function, it will not work for a regular url query string. In classes.php on line 224, while the url params are getting looped over, we do not have a statement that will explode each param on ',', however it does make use of:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt; parse_str($query, $perma_query_vars); &lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
which makes my query work. That being said, perhaps that notation should be added to the patch as well. What does everyone think?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14349 (Filter to query_posts() args) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 19 Jul 2010 14:59:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14349#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14349#comment:3/1279551556000000</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Well, the earliest hook is 'parse_query', which might or might not be good enough.
&lt;/p&gt;
&lt;p&gt;
So a nice clean filter right at the beginning of WP_Query::parse_query() wouldn't hurt.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9951 (Add [taxonomy]__in, [taxonomy]__not_in to wp_query) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 19 Jul 2010 14:46:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9951#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9951#comment:24/1279550794000000</guid>
      <description>&lt;p&gt;
Marked &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14351" title="#14351: enhancement: Search for posts with multiple custom taxonomies (closed: duplicate)"&gt;#14351&lt;/a&gt; as dup of this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14351 (Search for posts with multiple custom taxonomies) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 19 Jul 2010 14:46:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14351#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14351#comment:1/1279550768000000</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9951" title="#9951: enhancement: Add [taxonomy]__in, [taxonomy]__not_in to wp_query (closed: duplicate)"&gt;#9951&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14313 (TAG permalink with chinese (Japanese) character have issue) closed</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 19 Jul 2010 14:21:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14313#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14313#comment:22/1279549301000000</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14292" title="#14292: defect (bug): loop in tags url to same url (closed: fixed)"&gt;#14292&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14353 (editor cuts off text at first german umlaut) created</title>
      
        <dc:creator>christian_gnoth</dc:creator>

      <pubDate>Mon, 19 Jul 2010 13:40:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14353</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14353/1279546840000000</guid>
      <description>&lt;p&gt;
if I post a entry with german umlauts the editor cuts of on the first occurence of a umlaut the whole text and saves only the beginning.
&lt;/p&gt;
&lt;p&gt;
in prior versions of wp it too happened.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #13326 (WordPress does not function on iPad in View (non HTML Mode)) updated</title>
      
        <dc:creator>simonwheatley</dc:creator>

      <pubDate>Mon, 19 Jul 2010 12:50:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13326#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13326#comment:9/1279543828000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
TinyMCE release v3.3.4 addressed this (&lt;a class="ext-link" href="http://tinymce.moxiecode.com/punbb/viewtopic.php?id=21314"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://tinymce.moxiecode.com/punbb/viewtopic.php?id=21314&lt;/a&gt;):
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We also added detection logic for iPhone/iPad so that TinyMCE doesn't
get initialized on these devices. It's currently impossible for us to add
iPhone/iPad support since WebKit on these devices lacks any for of
caret within contentEditable areas. Even though this detection logic
will keep TinyMCE from being initialized it's recommended to do the
device checking on the server side since the main script of TinyMCE
will be loaded even though it can't be used.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I've created an &lt;strong&gt;incomplete&lt;/strong&gt; patch which attempts to upgrade WP to TinyMCE v3.3.8, which is the current production release. Issues I've noticed with this patch:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The spellchecker button is blank
&lt;/li&gt;&lt;li&gt;The align buttons don't work (error message: "TypeError: Result of expression 'c.editorCommands.mceJustify' [undefined] is not a function.")
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Patch refinements welcome!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14352 (Fatal error message when trying to access my homepage and/or login to ...) created</title>
      
        <dc:creator>birkettphotography</dc:creator>

      <pubDate>Mon, 19 Jul 2010 11:48:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14352</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14352/1279540126000000</guid>
      <description>&lt;p&gt;
I have suddenly started getting the following error message when I try to access my website, or acess the log in page to make changes to the site:
Warning: require(/homez.358/emmabirk/www/wp-includes/load.php) [function.require]: failed to open stream: No such file or directory in /homez.358/emmabirk/www/wp-settings.php on line 19
&lt;/p&gt;
&lt;p&gt;
Fatal error: require() [function.require]: Failed opening required '/homez.358/emmabirk/www/wp-includes/load.php' (include_path='.:/usr/local/lib/php') in /homez.358/emmabirk/www/wp-settings.php on line 19
Please could you respond asap, as the site cannot be viewed at all at the moment, and it is causing me huge inconvenience.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14292 (loop in tags url to same url) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 19 Jul 2010 10:37:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14292#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14292#comment:23/1279535846000000</guid>
      <description>&lt;p&gt;
for the log: Path could be normalized as well:
&lt;/p&gt;
&lt;pre class="wiki"&gt;# http://webroot.loc/wordpress/tag/../tag/%61-%E4%B8%80%E6%A0%B7
HTTP/1.1 404 Not Found
Date: Mon, 19 Jul 2010 10:25:59 GMT
Server: Apache
Cache-Control: no-cache, must-revalidate, max-age=0
Expires: Wed, 11 Jan 1984 05:00:00 GMT
Pragma: no-cache
X-Pingback: http://webroot.loc/wordpress/xmlrpc.php
Last-Modified: Mon, 19 Jul 2010 10:26:04 GMT
Content-Type: text/html; charset=UTF-8
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14351 (Search for posts with multiple custom taxonomies) created</title>
      
        <dc:creator>bigfoot13442</dc:creator>

      <pubDate>Mon, 19 Jul 2010 10:36:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14351</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14351/1279535819000000</guid>
      <description>&lt;p&gt;
Allow searching for posts with multiple custom taxonomies and terms.
Perhaps through the use of {customtax}&lt;span class="underline"&gt;and.
&lt;/span&gt;&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14349 (Filter to query_posts() args) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 19 Jul 2010 09:02:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14349#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14349#comment:2/1279530144000000</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14349 (Filter to query_posts() args) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 19 Jul 2010 09:02:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14349#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14349#comment:1/1279530134000000</guid>
      <description>&lt;p&gt;
I believe there are filters inside WP_Query which should be able to be utilised for this?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14346 (FS_METHOD values not explained in Codex docs) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 19 Jul 2010 08:57:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14346#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14346#comment:1/1279529824000000</guid>
      <description>invalid: &lt;p&gt;
I've updated the section on update constants, and separated the SSH stuff out from the rest a bit. Trac is however, for code, and not for documentation needs. The Documentation mailing list may be a better location for these requests in future.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14350 (Login form constant refresh blocking login due to install.php not deleted) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 19 Jul 2010 03:51:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14350#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14350#comment:1/1279511476000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
index-install.php is nonexistent in 3.0.
&lt;/p&gt;
&lt;p&gt;
MU had some issues in terms of how secure index-install was, but install.php does not need to be renamed in WordPress and we do not recommend editing or renaming core files. If you go to install.php on an installed site, you'll get a notice clearly telling you WordPress is already installed. Additionally, Tools &amp;gt; Network is its own script, and is unrelated to install.php.
&lt;/p&gt;
&lt;p&gt;
The login form refresh during a network installation (Tools &amp;gt; Network) has nothing to do with this (see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12142" title="#12142: defect (bug): cant access admin in ms install (closed: fixed)"&gt;#12142&lt;/a&gt;), and I honestly have no idea what the link between the two is.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14350 (Login form constant refresh blocking login due to install.php not deleted) created</title>
      
        <dc:creator>gazouteast</dc:creator>

      <pubDate>Mon, 19 Jul 2010 03:44:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14350</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14350/1279511065000000</guid>
      <description>&lt;p&gt;
In WPMU the final page of install had a warning a long way down the screen, that the /wp-admin/install.php file had to be deleted or renamed before the new site could be used.
&lt;/p&gt;
&lt;p&gt;
Failing to do that blocked all login attempts, and simply reloaded the login screen with no warnings to say why.
&lt;/p&gt;
&lt;p&gt;
In WP 3.0 (new install) the same login behaviour occurs, but there is no warning on the final install screen to delete / rename the install.php file, nor any in the readme or codex.
&lt;/p&gt;
&lt;p&gt;
Proposed - the final install screen needs the warning used in WPMU reintroduced, but in a page position where it is obvious (not 3 screen heights of scrolling down the page) - in the excitement of successfully installing a new site, it is easy to overlook such post-install details.  Codex and readme also needs this stated clearly.
&lt;/p&gt;
&lt;p&gt;
Preferably, the install routine should rename the install.php to something like install-done.php automatically, to prevent these problems and reduce user actions / improve the UX and reduce support threads in the forums.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14349 (Filter to query_posts() args) created</title>
      
        <dc:creator>lucaswxp</dc:creator>

      <pubDate>Mon, 19 Jul 2010 03:38:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14349</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14349/1279510694000000</guid>
      <description>&lt;p&gt;
Will be nice a filter to the query_posts() args and related functions (like get_posts()).
That way, we will can add our own args, like:
query_posts('my_custom_arg=my_special_value&amp;amp;...');
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #13118 (wp-login.php and wp-admin folder location/name choice during the ...) reopened</title>
      
        <dc:creator>gazouteast</dc:creator>

      <pubDate>Mon, 19 Jul 2010 03:33:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13118#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13118#comment:3/1279510437000000</guid>
      <description>&lt;p&gt;
I have been asking for a long time for a simple triple define in wp-config.php to set the names and paths of the three main wordpress wp-* folders.
&lt;/p&gt;
&lt;p&gt;
This is a basic and foundation level security measure to delay / divert hackers.
&lt;/p&gt;
&lt;p&gt;
The entire code base should be pointing to those three paths via constants, and the paths for those constants should be definable.  If set during install rather than in wp-config, the true paths could be saved in the database as MD5 hashes, making it even tighter.
&lt;/p&gt;
&lt;p&gt;
Security by obfuscation is not a house of cards, it is an additional layer.  There is nothing to stop (and it would be recommended to do so) having dummy folders retained with the original wp-* names, password protected from cPanel / Plesk etc as a frustration to hackers, who might then focus on cracking to get into empty folders while ignoring the real and obfuscated locations.  During which time, server logs would tip the hosting service or site admins that something was happening.
&lt;/p&gt;
&lt;p&gt;
I think it is disingenuous of WordPress to shun this measure, when even scripts like osCommerce have had it for seven or eight years already - see also discussions on Mark Jaquith's blog post regarding hosts need to get with the WordPress hosting requirements, and the many angst comments about flawed WordPress security coding.
&lt;/p&gt;
&lt;p&gt;
You're missing a real opportunity to tighten ship here guys, and with the most minimum of effort.
&lt;/p&gt;
&lt;p&gt;
Gaz
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #13915 (WP_Http_Fopen is PHP4 only) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Mon, 19 Jul 2010 03:13:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13915#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13915#comment:6/1279509184000000</guid>
      <description>&lt;p&gt;
@jacobsantos, if you can explain how to duplicate the environment I'll gladly test it against BuddyPress and help if a fix is necessary.
&lt;/p&gt;
&lt;p&gt;
If I recall, this issue may have been almost (if not over) a year ago, so I'm a little fuzzy on the topic myself.
&lt;/p&gt;
&lt;p&gt;
At first glance, it doesn't seem like the patch would hurt. Although the WP_Http_Streams::test method puts that check after the function_exists('fopen') check. That doesn't mean it wouldn't wreck our days if we tried it. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14073 (Custom Taxonomies - Post Count wrong) updated</title>
      
        <dc:creator>defade</dc:creator>

      <pubDate>Mon, 19 Jul 2010 02:42:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14073#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14073#comment:7/1279507353000000</guid>
      <description>&lt;p&gt;
I have noticed tonight something else, that i'm sure is related to this bug. I'm not sure if i just add it to the comments here, or if i am supposed to update the original bug report - i will probably do both and let a moderator sort it out as applicable
&lt;/p&gt;
&lt;p&gt;
I have drafted in article (post) that is yet to be published. While doing so i had to create a new "driver tag" (drivers name not yet listed in the custom "drivers" taxonomy)
&lt;/p&gt;
&lt;p&gt;
As before, while saving the draft a few times this artificially increased the 'post count' for that tag
&lt;/p&gt;
&lt;p&gt;
So now that "driver tag" appears in my "Drivers" tag cloud, and is listed as having 2 topics associated with it... but of course it is just one post, and has not even been published yet (at time of writing this comment) - So when you click on that tag, the site just throws up a 404 "We could not find what your looking for" Error
&lt;/p&gt;
&lt;p&gt;
Which is not particularly an ideal situation, to say the least
&lt;/p&gt;
&lt;p&gt;
I don't actually understand how this Wordpress Trac works, or understand the grammar associated with it... but has anyone looked into this bug? Does it exist and are people working on it? I see that the milestone has changed from 3.1 to Triage, but no idea what that means.
&lt;/p&gt;
&lt;p&gt;
I'm about 99% sure it is a bug, and nothing wrong with my theme/code... but that 1% doubt is niggling at me, and i'd like to know if i just need to sit patiant and wait for a fix, or try and discover what has gone wrong with my sites code
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14348 (If it's a HEAD request, stop after the head!) created</title>
      
        <dc:creator>mitchoyoshitaka</dc:creator>

      <pubDate>Mon, 19 Jul 2010 02:31:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14348</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14348/1279506687000000</guid>
      <description>&lt;p&gt;
Right now, as far as I can tell, when a HTTP HEAD request is made against WordPress, we go ahead and produce the entire page content, only to have it ignored. Attached is a patch to repair this.
&lt;/p&gt;
&lt;p&gt;
While not a huge issue, if you happen to receive lots of HEAD requests, this can make a large difference, as each HEAD request will be much faster and not waste precious resources.
&lt;/p&gt;
&lt;p&gt;
I have tried to ensure that this patch, by being in send_headers, will produce a HEAD response functionally identical to the response header of GET/POST requests, as it should be.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>14292.6.patch attached to Ticket #14292</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 19 Jul 2010 00:48:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14292/14292.6.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14292/14292.6.patch/1279500522000000</guid>
      <description>&lt;p&gt;
(minor) unset $unreserved as well
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>14292.5.patch attached to Ticket #14292</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 19 Jul 2010 00:45:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14292/14292.5.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14292/14292.5.patch/1279500352000000</guid>
      <description>&lt;p&gt;
URLs are ASCII 7Buit (US-ASCII) encoded, 8bit-upper-half is invalid
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14347 (URLs are not handeled properly) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 19 Jul 2010 00:41:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14347#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14347#comment:5/1279500096000000</guid>
      <description>&lt;p&gt;
Found another defect regarding the range of invalid chars, US-ASCII is 7bit, so upper-half of 8-bit encodings are invalid.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14347 (URLs are not handeled properly) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 19 Jul 2010 00:26:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14347#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14347#comment:4/1279499214000000</guid>
      <description>&lt;p&gt;
Removed the defect to not normalize the queryinfo part of an URL: &lt;a class="ext-link" href="http://core.trac.wordpress.org/attachment/ticket/14292/14292.4.patch"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;14292.4.patch&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>14292.4.patch attached to Ticket #14292</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 19 Jul 2010 00:25:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14292/14292.4.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14292/14292.4.patch/1279499125000000</guid>
      <description>&lt;p&gt;
Query normalized as well
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14313 (TAG permalink with chinese (Japanese) character have issue) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 19 Jul 2010 00:24:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14313#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14313#comment:21/1279499087000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14313#comment:11" title="Comment 11"&gt;Lafirel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I am wondering if 3.0 have a estimate to response diffrents header via diffrents browser or search engine spider?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Robot, search, post, preview, trackback and comment popup requests and requests done by an admin user are never redirected.
&lt;/p&gt;
&lt;p&gt;
You reported that requests from robots got a redirect, so this is out of synch but ignoring that for now, the list is when canonical redirects are not done.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>