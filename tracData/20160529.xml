<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #36971 (Show readme.txt from Themes) created</title>
      
        <dc:creator>zodiac1978</dc:creator>

      <pubDate>Sun, 29 May 2016 23:53:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36971</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36971/1464566000994675</guid>
      <description>&lt;p&gt;
The readme.txt should be used to document any dependencies of a theme. But if we install the theme from inside WordPress there is no way to see the readme.txt for an unexperienced user.
&lt;/p&gt;
&lt;p&gt;
For example the Sela theme needs Jetpack to show Testimonials.
See readme.txt: &lt;a class="ext-link" href="https://themes.svn.wordpress.org/sela/1.0.9/readme.txt"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://themes.svn.wordpress.org/sela/1.0.9/readme.txt&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
But the theme page is not mentioning that (&lt;a class="ext-link" href="https://wordpress.org/themes/sela/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/themes/sela/&lt;/a&gt;) and there is no direct link or presentation of the readme.txt with this essential information on the theme page or inside WordPress.
&lt;/p&gt;
&lt;p&gt;
I suggest showing the readme.txt somewhere or use a system like &lt;a class="ext-link" href="https://github.com/TGMPA/TGM-Plugin-Activation"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/TGMPA/TGM-Plugin-Activation&lt;/a&gt; to give this information to the user.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36009 (wp_new_user_notification "user" option for third parameter) updated</title>
      
        <dc:creator>jshrek</dc:creator>

      <pubDate>Sun, 29 May 2016 22:59:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36009#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36009#comment:13/1464562794660175</guid>
      <description>&lt;p&gt;
I submitted the following suggestion here &lt;a href="https://core.trac.wordpress.org/ticket/36970"&gt;https://core.trac.wordpress.org/ticket/36970&lt;/a&gt; which turns out to be a duplicate of this one!
&lt;/p&gt;
&lt;p&gt;
Adding a user email only option is great idea.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36970 (wp_new_user_notification disable admin email but allow user email) updated</title>
      
        <dc:creator>jshrek</dc:creator>

      <pubDate>Sun, 29 May 2016 22:59:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36970#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36970#comment:2/1464562777682260</guid>
      <description>&lt;p&gt;
Oops sorry. Thanks for pointing that out!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #36009,​36970 batch updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sun, 29 May 2016 22:19:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=36009%2C36970</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=36009%2C36970/1464560361524085</guid>
      <description>duplicate: &lt;p&gt;
Hi @jshrek - Thanks for the ticket, and welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
This idea was proposed and the enhancement was added to WordPress in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37276" title="Users: In `wp_new_user_notification()`, sdd `'user'` option for the ..."&gt;[37276]&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36009" title="#36009: enhancement: wp_new_user_notification &amp;#34;user&amp;#34; option for third parameter (closed: fixed)"&gt;#36009&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>wp_new_user_notification.php attached to Ticket #36970</title>
      
        <dc:creator>jshrek</dc:creator>

      <pubDate>Sun, 29 May 2016 20:48:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36970/wp_new_user_notification.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36970/wp_new_user_notification.php/1464554934615075</guid>
      <description>&lt;p&gt;
Suggested patch for wp_new_user_notification
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36970 (wp_new_user_notification disable admin email but allow user email) created</title>
      
        <dc:creator>jshrek</dc:creator>

      <pubDate>Sun, 29 May 2016 20:48:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36970</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36970/1464554897811537</guid>
      <description>&lt;p&gt;
I would like to suggest a simple patch to the wp_new_user_notification function that would allow you send the user their email but disable to admin notification email.
&lt;/p&gt;
&lt;p&gt;
Currently you can either send an email to both the user and the admin, or the admin only but there is no option to send email to the user only.
&lt;/p&gt;
&lt;p&gt;
So currently if I look at &lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/4.5/src/wp-includes/pluggable.php"&gt;source:tags/4.5/src/wp-includes/pluggable.php&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/4.5/src/wp-includes/pluggable.php" title="Download"&gt;​&lt;/a&gt; at line 1719 we have this line which sends the email to the admin:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="nx"&gt;wp_mail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;get_option&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'admin_email'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'[%s] New User Registration'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nv"&gt;$blogname&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nv"&gt;$message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
My suggestion is as follows:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="c1"&gt;//Allow ability to disable email to admin but still send email to the user.
&lt;/span&gt;    &lt;span class="c1"&gt;// If $notify is 'admin' then email will only be sent to admin user but not to user.
&lt;/span&gt;    &lt;span class="c1"&gt;// If $notify is 'both' then email will be sent to admin and to user.
&lt;/span&gt;    &lt;span class="c1"&gt;// If $notify is '' (blank) then email will be sent to admin and to user.
&lt;/span&gt;    &lt;span class="c1"&gt;// If $notify is anything else (like 'user') then email will only be sent to user but not to admin.
&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'admin'&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nv"&gt;$notify&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="s1"&gt;'both'&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nv"&gt;$notify&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nv"&gt;$notify&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="nx"&gt;wp_mail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;get_option&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'admin_email'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'[%s] New User Registration'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nv"&gt;$blogname&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nv"&gt;$message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Not sure how I can submit this patch, but I have attached the function with the changes.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #33563 (Multiple Calls to export_wp() Causes Error) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 29 May 2016 19:32:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33563#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33563#comment:4/1464550358334290</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
A few notes on the patch:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;__DIR__&lt;/code&gt; is not available in PHP 5.2
&lt;/li&gt;&lt;li&gt;You're missing the &lt;code&gt;wxr.php&lt;/code&gt; file you created in the patch. There's no need for this file though, just add these functions at the bottom of &lt;code&gt;export.php&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>wordpress-develop.33563.2.diff attached to Ticket #33563</title>
      
        <dc:creator>screamingdev</dc:creator>

      <pubDate>Sun, 29 May 2016 19:09:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33563/wordpress-develop.33563.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33563/wordpress-develop.33563.2.diff/1464548944290205</guid>
      <description>&lt;p&gt;
Swap wxr_* functions and for testing comments_open needed to be fixed in case of wrong post ID's
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33563 (Multiple Calls to export_wp() Causes Error) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 29 May 2016 18:55:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33563#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33563#comment:3/1464548131651252</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by screamingdev. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1464548129007446"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>wordpress-develop.33563.diff attached to Ticket #33563</title>
      
        <dc:creator>screamingdev</dc:creator>

      <pubDate>Sun, 29 May 2016 18:50:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33563/wordpress-develop.33563.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33563/wordpress-develop.33563.diff/1464547822998172</guid>
      <description>&lt;p&gt;
Put wxr_* function in separate file
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33563 (Multiple Calls to export_wp() Causes Error) updated</title>
      
        <dc:creator>screamingdev</dc:creator>

      <pubDate>Sun, 29 May 2016 18:49:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33563#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33563#comment:2/1464547777873697</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Here is a patch with test, that puts the wxr_* function in a separate file.
The &lt;code&gt;export_wp()&lt;/code&gt; function requires that file once.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36969 (Requests: Don't set CURLOPT_CAINFO if sslverify is false) created</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 29 May 2016 18:41:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36969</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36969/1464547318718530</guid>
      <description>&lt;p&gt;
This is a regression of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33978" title="#33978: defect (bug): Don't set CURLOPT_CAINFO if sslverify is false (closed: fixed)"&gt;#33978&lt;/a&gt; introduced by the Requests library (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33055" title="#33055: task (blessed): Support Parallel HTTP Requests in WP_Http, et al (closed: fixed)"&gt;#33055&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;CURLOPT_CAINFO&lt;/code&gt; should not be set when &lt;code&gt;sslverify&lt;/code&gt; is set to false.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36968 (image_memory_limit filter docblock for ...) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sun, 29 May 2016 17:36:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36968#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36968#comment:2/1464543361642202</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Good catch @bobbingwide. Patch looks right to me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36968 (image_memory_limit filter docblock for ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 29 May 2016 17:24:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36968#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36968#comment:1/1464542664761307</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>36968.patch attached to Ticket #36968</title>
      
        <dc:creator>bobbingwide</dc:creator>

      <pubDate>Sun, 29 May 2016 17:20:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36968/36968.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36968/36968.patch/1464542433697487</guid>
      <description>&lt;p&gt;
Fix docblock for image_memory_limit filter
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36968 (image_memory_limit filter docblock for ...) created</title>
      
        <dc:creator>bobbingwide</dc:creator>

      <pubDate>Sun, 29 May 2016 17:15:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36968</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36968/1464542121309977</guid>
      <description>&lt;p&gt;
The documentation for the image_memory_limit filter in wp-includes/class-wp-image-editor-imagick.php currently says
&lt;/p&gt;
&lt;pre class="wiki"&gt;This filter is documented in wp-includes/class-wp-image-editor-imagick.php
&lt;/pre&gt;&lt;p&gt;
I believe it should be
&lt;/p&gt;
&lt;pre class="wiki"&gt;This filter is documented in wp-includes/class-wp-image-editor-gd.php
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36497 (Merge Twenty Sixteen with the rest of WordPress Core) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 29 May 2016 16:18:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36497#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36497#comment:7/1464538698685532</guid>
      <description>&lt;p&gt;
@ocean90 do you want to bring this up as release lead and see where we go with this? I'm slightly concerned we don't get a decision before we face the same issues again.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26379 (Twenty Fourteen: Featured Content Slider problems in IE10+ with touch) closed</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 29 May 2016 16:16:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26379#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26379#comment:17/1464538606955699</guid>
      <description>wontfix: &lt;p&gt;
@celloexpressions ok, great. Closing now after feedback, thanks all.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36346 (Twenty Sixteen/Fifteen/Thirteen/Twelve titles can lead to horizontal ...) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 29 May 2016 16:15:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36346#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36346#comment:15/1464538526472072</guid>
      <description>&lt;p&gt;
@mrahmadawais my concern with break-word is it could look bad in a lot of cases. It also could cause the browser issues being suggested. I'd be interested in seeing a suggestion of it and thorough browser and device testing to prove this isn't the case.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36429 (Twenty Eleven Ephemera widget fails to prevent caching in Customizer ...) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 29 May 2016 16:07:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36429#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36429#comment:9/1464538028632717</guid>
      <description>&lt;p&gt;
@anneschmidt just to let you know, I couldn't get your patch working. However, I took the work you'd done and made a fix for that. Thanks for sending your patch in and if this is your first props - congratulations!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36429 (Twenty Eleven Ephemera widget fails to prevent caching in Customizer ...) closed</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 29 May 2016 16:05:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36429#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36429#comment:8/1464537947261869</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37590" title="Twenty Elevent Ephemera widget fix for caching in Customizer preview. ..."&gt;37590&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Twenty Elevent Ephemera widget fix for caching in Customizer preview.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36429" title="#36429: defect (bug): Twenty Eleven Ephemera widget fails to prevent caching in Customizer ... (closed: fixed)"&gt;#36429&lt;/a&gt;. Props anneschmidt, westonruter.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37590]: Twenty Elevent Ephemera widget fix for caching in Customizer preview. ...</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 29 May 2016 16:05:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37590</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37590/1464537946264997</guid>
      <description>&lt;p&gt;
Twenty Elevent Ephemera widget fix for caching in Customizer preview.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36429" title="#36429: defect (bug): Twenty Eleven Ephemera widget fails to prevent caching in Customizer ... (closed: fixed)"&gt;#36429&lt;/a&gt;. Props anneschmidt, westonruter.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36964 (Show/hide the tag-cloud on `edit-tags.php` admin pages using a filter) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sun, 29 May 2016 15:02:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36964#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36964#comment:4/1464534175491408</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36964#comment:2" title="Comment 2"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How useful is that tag cloud anyway? Why not completely remove it instead of adding an option to do so?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Removing this "blog-era-feature" sounds good, either by removing it from the code entirely or by filtering the preview.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34521 (Unifying permission error messages) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Sun, 29 May 2016 14:40:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34521#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34521#comment:33/1464532858763109</guid>
      <description>&lt;p&gt;
Refresh.
&lt;/p&gt;
&lt;p&gt;
Please double-check with me, I just saw 2 mistakes :(
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp-admin/includes/file.php
wp-includes/deprecated.php
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>34521.3.patch attached to Ticket #34521</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Sun, 29 May 2016 14:39:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34521/34521.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34521/34521.3.patch/1464532779216652</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36967 (Color contrast: the Edit Comment screen "Status" box labels) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 29 May 2016 13:58:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36967#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36967#comment:1/1464530324421532</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The proposed patch just removes the colors.
&lt;/p&gt;
&lt;p&gt;
Note: as far as I can tell, the &lt;code&gt;#poststuff .inside label.deleted&lt;/code&gt; is not used in core, it was introduced during the work to introduce the "Trash" status on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4529" title="#4529: task (blessed): &amp;#34;Trash&amp;#34; status for comments and posts (closed: fixed)"&gt;#4529&lt;/a&gt; where at some point the deleted comments were still editable and the Status box had a 4th radio button. See the first patches on that ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36967.patch attached to Ticket #36967</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 29 May 2016 13:50:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36967/36967.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36967/36967.patch/1464529850067483</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36967 (Color contrast: the Edit Comment screen "Status" box labels) created</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 29 May 2016 13:49:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36967</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36967/1464529766487992</guid>
      <description>&lt;p&gt;
See related &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31713" title="#31713: defect (bug): Color contrast ratio in the admin (closed: wontfix)"&gt;#31713&lt;/a&gt;, &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/35659" title="#35659: defect (bug): Color contrast: audit all the oranges (colors!) (assigned)"&gt;#35659&lt;/a&gt; and &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/35622" title="#35622: defect (bug): Color contrast: audit all the &amp;#34;#f00&amp;#34; and &amp;#34;red&amp;#34; reds (assigned)"&gt;#35622&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
In the "Edit Comment" screen, the "Status" box has three radio buttons with colored labels. The current orange and red don't have a sufficient color contrast ratio of at least 4.5:1.
&lt;/p&gt;
&lt;p&gt;
Quickly &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1464371165001669"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;discussed on the Slack design channel&lt;/a&gt; and agreed to simply remove the colors, see screenshot below.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/znI7WasX00.png"&gt;&lt;img src="https://cldup.com/znI7WasX00.png" alt="https://cldup.com/znI7WasX00.png" crossorigin="anonymous" title="https://cldup.com/znI7WasX00.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Worth noting orange it's basically impossible to contrast with a white background unless it's turned to a nearly-red or nearly-brown color. Also, it was pointed out the current red "Spam" is competing with the red "Move to Trash" below.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36822 (srcset is added to &lt;img /&gt; even if media file is not present in media ...) updated</title>
      
        <dc:creator>temmokan</dc:creator>

      <pubDate>Sun, 29 May 2016 10:50:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36822#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36822#comment:10/1464519008686798</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
What exactly is "not part of the media library"?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
File has not been added to media library via corresponding Wordpress admin interface.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In any case don't think this is a typical case that needs to be supported.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In other words, there will be code that will generate invalid markup in case something "unusual" is encountered.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The patch can break some CDNs that are working now.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Checkbox settings like "CDN is used to cache images" could be used, checked by default, to allow stricter behaviour (by unchecking it).
&lt;/p&gt;
&lt;p&gt;
IMHO, "do not assume anything" should also be applied to Wordpress programming. Any assumption not explicitly documented can cause many hard to track/handle problems.
&lt;/p&gt;
&lt;p&gt;
That is, please document the exact behaviour as feature in case you do not wish to handle all "unusual" cases correctly.
&lt;/p&gt;
&lt;p&gt;
Thanks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36587 (PHPUnit Tests fail with PHP7 and Imagick 3.4.x) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 29 May 2016 08:07:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36587#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36587#comment:23/1464509226690382</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36587#comment:22" title="Comment 22"&gt;mikeschroder&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What are the ways in which users are most likely to experience this problem in the real world? (want to be sure I'm not missing cases here)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
One way of looking at it; It upgrades any PHP Warnings thrown by any code to effectively PHP Fatals. That would be triggered (as in this case) by either malformed exif data (or other plugin issues) where warnings were expected and were explicitly silenced by &lt;code&gt;@&lt;/code&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'd hope this also, *if* we give hosts enough runway/notice to do it. In reality, some, but not all hosts will be upgraded, so I'd like to look at this from the user perspective.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I firmly believe the user experience of not having a broken response is the primary objective. We shouldn't have to tell hosts to fix broken stuff or that a recently released extension on a brand new PHP branch is faulty - that's their responsibility to keep up to speed on. Our responsibility is to offer a seamless experience for our users, and degrade gracefully where appropriate.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36945 (Substrings that should not be translated should not be translatable) updated</title>
      
        <dc:creator>julesaus</dc:creator>

      <pubDate>Sun, 29 May 2016 07:39:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36945#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36945#comment:6/1464507588599019</guid>
      <description>&lt;p&gt;
Oh, just to note the other thing I changed in this patch:  I've seen contributions where translators replace the wildcard with the literal string "wp-config", so I made that translator comment a bit more verbose.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>network.php.if-wp-config-sample.php-is-localised.patch attached to Ticket #36945</title>
      
        <dc:creator>julesaus</dc:creator>

      <pubDate>Sun, 29 May 2016 07:38:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36945/network.php.if-wp-config-sample.php-is-localised.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36945/network.php.if-wp-config-sample.php-is-localised.patch/1464507501644433</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36945 (Substrings that should not be translated should not be translatable) updated</title>
      
        <dc:creator>julesaus</dc:creator>

      <pubDate>Sun, 29 May 2016 07:37:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36945#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36945#comment:5/1464507471936240</guid>
      <description>&lt;p&gt;
Thanks for the corrections, I think I've got it now, but just to make sure, let me spell it out:
&lt;/p&gt;
&lt;p&gt;
We've got separate GP projects for each locale/version combination, and each one should match the string in the wp-config-sample.php for that locale/branch.  For example, the French and 4.5.x:
Translation: &lt;a class="ext-link" href="https://translate.wordpress.org/projects/wp/dev/admin/network/fr/default?filters%5Bterm%5D=happy+blogging&amp;amp;filters%5Buser_login%5D=&amp;amp;filters%5Bstatus%5D=current_or_waiting_or_fuzzy_or_untranslated&amp;amp;filter=Filter&amp;amp;sort%5Bby%5D=priority&amp;amp;sort%5Bhow%5D=desc"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://translate.wordpress.org/projects/wp/dev/admin/network/fr/default?filters%5Bterm%5D=happy+blogging&amp;amp;filters%5Buser_login%5D=&amp;amp;filters%5Bstatus%5D=current_or_waiting_or_fuzzy_or_untranslated&amp;amp;filter=Filter&amp;amp;sort%5Bby%5D=priority&amp;amp;sort%5Bhow%5D=desc&lt;/a&gt;
Localized config file (fr_FR 4.5): &lt;a class="ext-link" href="https://i18n.trac.wordpress.org/browser/fr_FR/branches/4.5/dist/wp-config-sample.php#L87"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://i18n.trac.wordpress.org/browser/fr_FR/branches/4.5/dist/wp-config-sample.php#L87&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Just to reassess now that I understand the problem better: for 4.5 there are 20 locales that have the a localized config, and the other 135 that translate.wordpress.org lists do not, so I think it's still worth making this change, and the challenge is just in squeezing that paragraph down to a &lt;code&gt;/* translators: */&lt;/code&gt; one-liner.
&lt;/p&gt;
&lt;p&gt;
I've had a crack in the latest patch.  It's probably the longest translator comment in the codebase :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36534 (Media Upload Issue Since 4.5 Upgrade) updated</title>
      
        <dc:creator>Chaton666</dc:creator>

      <pubDate>Sun, 29 May 2016 07:13:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36534#comment:59</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36534#comment:59/1464506006277481</guid>
      <description>&lt;p&gt;
Some news...
The patch 36534.diff works if the uploaded images size are less than 200 Ko.
(WP MU 4.5.2, 1&amp;amp;1 hosting)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36669 (Update SimplePie to Latest Version and possibly include PHP-MF2) updated</title>
      
        <dc:creator>slushman</dc:creator>

      <pubDate>Sun, 29 May 2016 04:13:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36669#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36669#comment:3/1464495181522304</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've run into an issue with a plugin trying to read an RSS feed from a site with a Lets Encrypt (self-signed) cert. It appears this was fixed in [May 2015](&lt;a class="ext-link" href="https://github.com/simplepie/simplepie/pull/407"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/simplepie/simplepie/pull/407&lt;/a&gt;) and that fix is part of SimplePie 1.4.
Submitting patch to update SimplePie to version 1.4.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>update-simplepie.patch attached to Ticket #36669</title>
      
        <dc:creator>slushman</dc:creator>

      <pubDate>Sun, 29 May 2016 04:12:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36669/update-simplepie.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36669/update-simplepie.patch/1464495129144519</guid>
      <description>&lt;p&gt;
Patch updating SimplePie to version 1.4.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #34936 (Reconcile wp-settings-cli.php with wp-settings.php) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 28 May 2016 23:32:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34936#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34936#comment:15/1464478342329001</guid>
      <description>&lt;p&gt;
@jorbin: On the DocBlock summaries, we should be describing what's &lt;em&gt;filterable&lt;/em&gt;. In this case, something like:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;"Filters whether to bypass the maintenance mode check."
&lt;/li&gt;&lt;li&gt;"Filters whether to bypass the debug mode check."
&lt;/li&gt;&lt;li&gt;"Filters whether to bypass loading the advanced-cache.php drop-in."
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Additionally, as these are effectively what we've in the past referred to as "boolean filters", it would be useful to describe what happens when a truthy value is returned to the hooks.
&lt;/p&gt;
&lt;p&gt;
Finally, I don't think these warrant &lt;code&gt;@ignore&lt;/code&gt; tags – they're still very valid hooks and should be discoverable, just maybe not for plugin developers, which we can certainly make clear. Any plugins trying to leverage them are explicitly voiding the warranty by virtue of saying so in the DocBlock descriptions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36964 (Show/hide the tag-cloud on `edit-tags.php` admin pages using a filter) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 28 May 2016 23:19:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36964#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36964#comment:3/1464477575060048</guid>
      <description>&lt;p&gt;
For some history and context, the tag cloud on the tags screen was added around 2.7 when &lt;em&gt;basic styling of any measurable kind&lt;/em&gt; was also added to the screen, see &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/9339" title="2 column Tags page, needs more styling"&gt;[9339]&lt;/a&gt;. At the time, this improvement was pre-list table, pre-edit-tag links, pre-most anything we're familiar with today.
&lt;/p&gt;
&lt;p&gt;
For a bit of fun, you can see the progression:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15141" title="Don't call wp_tag_cloud() at all for hierarchical taxonomies."&gt;[15141]&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/13160" title="Only show &amp;#34;Popular Terms&amp;#34; header when there is a tag cloud to show. ..."&gt;[13160]&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/10554" title="Add taxonomy argument to wp_tag_cloud()"&gt;[10554]&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/9518" title="Add &amp;#34;Choose from popular tags&amp;#34; to the tags postbox"&gt;[9518]&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/9345" title="More styling for the Tags page, change the Options pages background ..."&gt;[9345]&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/9340" title="Introduce get_edit_tag_link() and add option to wp_tag_cloud() for ..."&gt;[9340]&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/9339" title="2 column Tags page, needs more styling"&gt;[9339]&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I would be in favor of at least switching to hiding the tag cloud by default for tags going forward.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36965 (Updates still fail on Windows hosts) reopened</title>
      
        <dc:creator>billseyLCIS</dc:creator>

      <pubDate>Sat, 28 May 2016 22:56:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36965#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36965#comment:2/1464476186311754</guid>
      <description>&lt;p&gt;
I'm not sure how I would go about finding the input to the function or seeing what $filename is set to. Each time I've seen this it has been when a WP update has been released and I have selected the automatic update process. It fails with an out of memory error either at the beginning of the FTP transfers or at the end (I assume the former, since that would logically be when the paths are formulated). I think I still have an install image for one of the older versions, so I should be able to reproduce it, but I'll need some hand holding to get it to give me that info.
&lt;/p&gt;
&lt;p&gt;
Though the suggested solution is the same, I don't believe the symptom is. In 33999 it seems to hang, in this one it errors out with out of memory errors. See &lt;a class="ext-link" href="https://wordpress.org/support/topic/cant-update-to-422-fatal-error-memory-size-exhausted?replies=18"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/cant-update-to-422-fatal-error-memory-size-exhausted?replies=18&lt;/a&gt; and &lt;a class="ext-link" href="https://wordpress.org/support/topic/fatal-error-again-2?replies=6"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/fatal-error-again-2?replies=6&lt;/a&gt; for my previous issues with it.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #36966 (Search is not working with soft hyphen symbols) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 28 May 2016 22:50:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36966#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36966#comment:1/1464475856799078</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36966 (Search is not working with soft hyphen symbols) created</title>
      
        <dc:creator>mvasin</dc:creator>

      <pubDate>Sat, 28 May 2016 21:36:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36966</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36966/1464471389568300</guid>
      <description>&lt;p&gt;
Site search doesn't work if a word contains soft hyphen symbols.
&lt;/p&gt;
&lt;p&gt;
When a word is pretty long and it should fit within a limited space, the best solution seems to be to stuff it with soft hyphens (&amp;amp;shy;), so there will be no hanging lines.
&lt;/p&gt;
&lt;p&gt;
It looks like this: Pseu&amp;amp;shy;do&amp;amp;shy;pseu&amp;amp;shy;do&amp;amp;shy;hy&amp;amp;shy;po&amp;amp;shy;pa&amp;amp;shy;ra&amp;amp;shy;thy&amp;amp;shy;roi&amp;amp;shy;dism
&lt;/p&gt;
&lt;p&gt;
But in this case the word can't be found.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36959 (Clicking Add site fast enough adds same site twice) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 28 May 2016 20:10:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36959#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36959#comment:3/1464466216595325</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36959 (Clicking Add site fast enough adds same site twice) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sat, 28 May 2016 20:06:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36959#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36959#comment:2/1464465960596135</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Ideally the 'Add Site' button would disable itself in the same way the 'Update' button disables itself on the post editing screen.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #33999,​36965 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 28 May 2016 18:53:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=33999%2C36965</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=33999%2C36965/1464461587767493</guid>
      <description>duplicate: &lt;p&gt;
Hello @billseyLCIS, welcome to Trac!
&lt;/p&gt;
&lt;p&gt;
This is a duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33999" title="#33999: defect (bug): WordPress Update issue (closed: fixed)"&gt;#33999&lt;/a&gt; and something that we haven't been able to reproduce yet.
&lt;/p&gt;
&lt;p&gt;
@billseyLCIS Would it be possible for you to provide the input to the function, and the value of &lt;code&gt;$filename&lt;/code&gt; on each iteration of it? Any further info should be attached to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33999" title="#33999: defect (bug): WordPress Update issue (closed: fixed)"&gt;#33999&lt;/a&gt;. Thank you!
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #36965 (Updates still fail on Windows hosts) created</title>
      
        <dc:creator>billseyLCIS</dc:creator>

      <pubDate>Sat, 28 May 2016 18:26:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36965</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36965/1464459966055752</guid>
      <description>&lt;p&gt;
This seems to rear it's head with every update. file.php does not correctly handle Windows style separators, expecting instead of a '\' a '/'. The fix is simple, in file.php use:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;if ( empty( $filename ) || '.' == $filename || DIRECTORY_SEPARATOR == $filename ) {
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
instead of:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;if ( empty( $filename ) || '.' == $filename || '/' == $filename ) {
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36534 (Media Upload Issue Since 4.5 Upgrade) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sat, 28 May 2016 17:41:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36534#comment:58</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36534#comment:58/1464457290708246</guid>
      <description>&lt;p&gt;
While doing additional profiling/research for this ticket, I'm noticing that the new compression settings introduced in 4.5 can result in an increase in total wall time while creating images, while memory used is generally the same, so we could be running into time limits that are being applied to ImageMagick on hosts (via their policy.xml settings, for example). Here's the data from an example run:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;XHProf run of an image in 4.5&lt;/strong&gt;
Total Incl. Wall Time (microsec):        2,018,447 microsecs
Total Incl. CPU (microsecs):        1,851,793 microsecs
Total Incl. MemUse (bytes):        4,452,312 bytes
Total Incl. PeakMemUse (bytes):        4,805,744 bytes
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;XHProf run of an image in 4.4&lt;/strong&gt;
Total Incl. Wall Time (microsec):        1,676,827 microsecs
Total Incl. CPU (microsecs):        1,092,302 microsecs
Total Incl. MemUse (bytes):        4,449,392 bytes
Total Incl. PeakMemUse (bytes):        4,794,664 bytes
&lt;/p&gt;
&lt;p&gt;
The difference is almost entirely a result of the switch to using &lt;code&gt;Imagick::resizeimage&lt;/code&gt; instead of &lt;code&gt;Imagick::scaleimage&lt;/code&gt; introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36891" title="Media: Progressive enhancement for Imagick; add profiles to whitelist. ..."&gt;[36891]&lt;/a&gt;. We're using Imagick's &lt;code&gt;FILTER_TRIANGLE&lt;/code&gt; within the &lt;code&gt;resizeImage()&lt;/code&gt; function, which produces the best results considering file size savings, image quality, and performance, but is still more resource intensive than if we were to use &lt;code&gt;FILTER_BOX&lt;/code&gt; which is the default (I believe).
&lt;/p&gt;
&lt;p&gt;
While &lt;code&gt;WP_Image_Editor_Imagick::thumbnail_image()&lt;/code&gt; accepts alternate filters as a parameter, there really is no easy way for users to alter this value unless we were to add a filter before &lt;code&gt;Imagick::resizeimage&lt;/code&gt; is called.
&lt;/p&gt;
&lt;p&gt;
We may also be able to check the value of &lt;code&gt;Imagick::getResourceLimit&lt;/code&gt; and conditionally use the &lt;code&gt;FILTER_BOX&lt;/code&gt; filter when the available resource time is low, but I'm not sure.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30180 (wp_get_attachment_image_src does not return alt or meta) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sat, 28 May 2016 17:19:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30180#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30180#comment:10/1464455970801257</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/30180#comment:9" title="Comment 9"&gt;joedolson&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think this is a great plan. A few questions come to mind:
&lt;/p&gt;
&lt;p&gt;
Which attributes should we return?
...
I'm inclined to think that it should only be the fields needed for the &lt;code&gt;img&lt;/code&gt; element...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Good question. I could see use cases for both, to be honest. A function that only returns an array of attribute values that can be used in &lt;code&gt;img&lt;/code&gt; markup could keep the function lighter, but I could also see cases where knowing additional metadata (like which sizes are registered in the database with that image) could be valuable to JS front-ends that are using the information to do more complex calculations based on the result of API calls.
&lt;/p&gt;
&lt;p&gt;
However, a more advanced use case might be better addressed by a proper &lt;code&gt;WP_Image&lt;/code&gt; API rather than speculating and trying to do too much here, so a function that returns attributes for the &lt;code&gt;img&lt;/code&gt; element is probably a good starting point. With that being the case, I would suggest we name the function &lt;code&gt;wp_get_attachment_image_attributes()&lt;/code&gt; (to match the name of the enclosed filter that would need to be maintained).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36735 (Add media, insert from URL and alt attribute) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sat, 28 May 2016 17:06:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36735#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36735#comment:8/1464455176968135</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @dabnpits that's a nice improvement, and maybe one that could be applied in &lt;code&gt;wp_get_attachment_image()&lt;/code&gt; as well but that might be better handled as a part of adding a new &lt;code&gt;wp_get_attachment_image_alt()&lt;/code&gt; helper function in &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/30180" title="#30180: enhancement: wp_get_attachment_image_src does not return alt or meta (accepted)"&gt;#30180&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36052 (Non-Image/Audio/Video Attachments Can't Display on Edit) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sat, 28 May 2016 15:41:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36052#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36052#comment:4/1464450112508399</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Moving to 4.6 for consideration.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36477 (Responsive images (srcset) can include images larger than the full size) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 28 May 2016 15:32:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36477#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36477#comment:7/1464449554407377</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1464449551000705"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36477 (Responsive images (srcset) can include images larger than the full size) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sat, 28 May 2016 15:27:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36477#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36477#comment:6/1464449227595849</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The idea of trying to explicitly make file size a consideration when calculating &lt;code&gt;srcset&lt;/code&gt; attributes. However, this will require us to add the file size of each image as attachment metadata. Perhaps we could use &lt;code&gt;Imagick::getImageLength&lt;/code&gt; during the resize process to grab this info?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35390 (image_constrain_size_for_editor() should not affect images generated ...) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sat, 28 May 2016 15:06:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35390#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35390#comment:21/1464447993497043</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Moving this into the 4.6 milestone. To move this forward, Let's look into an approach that replaces &lt;code&gt;image_constrain_size_for_editor()&lt;/code&gt; with new helper functions that is only called when preparing markup for the editor (rather than requiring context switching) and avoids possible &lt;code&gt;is_admin()&lt;/code&gt; AJAX issues.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36345 (We shouldn't use "full" as image size name in wp_calculate_image_srcset()) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sat, 28 May 2016 14:59:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36345#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36345#comment:6/1464447586763817</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36345#comment:4" title="Comment 4"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Perhaps we should "reserve" &lt;code&gt;full&lt;/code&gt; and even &lt;code&gt;original&lt;/code&gt; as size names that may be used by core, similarly to medium-large.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I like the idea of reserving both the &lt;code&gt;original&lt;/code&gt; and &lt;code&gt;full&lt;/code&gt; size names. In the future, I could even see a use case for regenerating a &lt;code&gt;full&lt;/code&gt; size image from the &lt;code&gt;original&lt;/code&gt; that is the same dimensions if someone uploads a file that isn't optimized for the web. This is also another good reason for not automatically adding the original file to the &lt;code&gt;$image_sizes&lt;/code&gt; array using &lt;code&gt;full&lt;/code&gt; as the key name.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35128 (Srcset may include a much-too-large image, apparently no way to set ...) closed</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sat, 28 May 2016 14:42:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35128#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35128#comment:7/1464446530175314</guid>
      <description>worksforme: &lt;p&gt;
Hi @programmin,
&lt;/p&gt;
&lt;p&gt;
Apologies on the delay in responding to your ticket. You're correct that the best way for theme authors to adjust for use cases where an available image size is slightly smaller that what the browser needs, is to modify the sizes of images WordPress creates on upload and/or add additional sizes using &lt;code&gt;add_image_size()&lt;/code&gt; which fit the needs of your theme. Since &lt;code&gt;srcset&lt;/code&gt; and &lt;code&gt;sizes&lt;/code&gt; are evaluated by browsers, and we have no way of impacting the way browsers choose to implement their source selection process, this is probably the best we can do.
&lt;/p&gt;
&lt;p&gt;
If you need to use the &lt;code&gt;wp_calculate_image_sizes&lt;/code&gt; filter differently on particular layouts, I would consider either adding the filter from within your custom template, or being creative with which conditional tags you check before applying the filter. For example, if you only want to apply the filter on the front page of the site, you could do something like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;// Only add the filter on the front page of the site.
if ( is_front_page() ) {
  add_filter( 'wp_calculate_image_sizes', 'my_homepage_srcset_filter', 10, 2 );
}
function my_homepage_srcset_filter( $sizes, $size ) {
  // Add function logic here.
}
&lt;/pre&gt;&lt;p&gt;
Since WordPress doesn't know anything about your intended markup when this function is called, it's best if this kind of filtering/customization is handled by theme authors. We also have to be careful about creating a bunch of new image sizes out of the box due to the fact that many WordPress users are on shared hosting with limited resources. I'm going to go ahead and close this as a &lt;em&gt;worksforme&lt;/em&gt; for now, but feel free to continue the conversation or reopen if you have a use case that you don't believe can be resolved using the current set of tools available and we can reevaluate. Thanks again.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36964 (Show/hide the tag-cloud on `edit-tags.php` admin pages using a filter) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 28 May 2016 14:26:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36964#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36964#comment:2/1464445565245561</guid>
      <description>&lt;p&gt;
How useful is that tag cloud anyway? Why not completely remove it instead of adding an option to do so?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36549 (Space in attachment filename breaks srcset) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sat, 28 May 2016 14:11:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36549#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36549#comment:9/1464444697452203</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36962 (Responsive images WONT work in mobiles) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sat, 28 May 2016 14:00:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36962#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36962#comment:3/1464444015811852</guid>
      <description>&lt;p&gt;
With the &lt;code&gt;srcset&lt;/code&gt; and &lt;code&gt;sizes&lt;/code&gt; markup pattern, the image selection is totally up to the browser and not something that can be controlled from the developer side (by design). If you want to force the browser to choose a specific image, you would probably need to create your own markup using something like the &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; element (see: &lt;a class="ext-link" href="http://responsiveimages.org/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://responsiveimages.org/&lt;/a&gt;).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32274 (Works faster that use __DIR__ instead of dirname(__FILE__) .) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Sat, 28 May 2016 13:46:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32274#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32274#comment:11/1464443167166227</guid>
      <description>&lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32274 (Works faster that use __DIR__ instead of dirname(__FILE__) .) closed</title>
      
        <dc:creator>nigro.simone</dc:creator>

      <pubDate>Sat, 28 May 2016 12:46:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32274#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32274#comment:10/1464439604029717</guid>
      <description>maybelater</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #32274 (Works faster that use __DIR__ instead of dirname(__FILE__) .) reopened</title>
      
        <dc:creator>nigro.simone</dc:creator>

      <pubDate>Sat, 28 May 2016 12:44:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32274#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32274#comment:9/1464439477962498</guid>
      <description>&lt;p&gt;
ok, this is a "maybelater" when minimal php version of wordpress will be PHP 5.3
&lt;/p&gt;
&lt;p&gt;
Side note: PHP 5.2 is out-date and unsafe.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #36964 (Show/hide the tag-cloud on `edit-tags.php` admin pages using a filter) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sat, 28 May 2016 12:40:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36964#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36964#comment:1/1464439205591162</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The patch was tested.
&lt;/p&gt;
&lt;p&gt;
You can hide the tag cloud using:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;add_filter( 'show_admin_popular_items_tag_cloud', '__return_false' );&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36964.patch attached to Ticket #36964</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sat, 28 May 2016 12:38:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36964/36964.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36964/36964.patch/1464439117292610</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>texonomy-tags.png attached to Ticket #36964</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sat, 28 May 2016 12:38:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36964/texonomy-tags.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36964/texonomy-tags.png/1464439081399908</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36964 (Show/hide the tag-cloud on `edit-tags.php` admin pages using a filter) created</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sat, 28 May 2016 12:37:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36964</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36964/1464439065604952</guid>
      <description>&lt;p&gt;
The &lt;code&gt;edit-tags.php&lt;/code&gt; page shows a tag-cloud with "Popular Tags" on non-hierarchical taxonomies. There is no way to remove this tag cloud and the H2 title from the admin screen.
&lt;/p&gt;
&lt;p&gt;
This ticket introduces a new boolean filter "&lt;code&gt;show_admin_popular_items_tag_cloud&lt;/code&gt;" that allows you to remove this blog-feature.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
The current code that shows the tag cloud:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( ! is_null( $tax-&amp;gt;labels-&amp;gt;popular_items ) ) {
	if ( current_user_can( $tax-&amp;gt;cap-&amp;gt;edit_terms ) ) {
		$tag_cloud = wp_tag_cloud( array( 'taxonomy' =&amp;gt; $taxonomy, 'post_type' =&amp;gt; $post_type, 'echo' =&amp;gt; false, 'link' =&amp;gt; 'edit' ) );
	} else {
		$tag_cloud = wp_tag_cloud( array( 'taxonomy' =&amp;gt; $taxonomy, 'echo' =&amp;gt; false ) );
	}
	if ( $tag_cloud ) :
	?&amp;gt;
&amp;lt;div class="tagcloud"&amp;gt;
&amp;lt;h2&amp;gt;&amp;lt;?php echo $tax-&amp;gt;labels-&amp;gt;popular_items; ?&amp;gt;&amp;lt;/h2&amp;gt;
&amp;lt;?php echo $tag_cloud; unset( $tag_cloud ); ?&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;?php
	endif;
}
&lt;/pre&gt;&lt;p&gt;
The new code with the proposed filter:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$show_admin_popular_items = ! is_null( $tax-&amp;gt;labels-&amp;gt;popular_items );
/**
 * Filters whether to show the popular items tag cloud in the taxonomy admin screen.
 *
 * This filter controls the visibility of the popular items tag cloud in the
 * taxonomy admin screen.
 *
 * By default, the tag cloud is visible on non-hierarchy taxonomies admin pages.
 * You can hide it using `__return_false`.
 *
 * @since 4.6.0
 *
 * @param bool $show_admin_popular_items Whether to show the popular items tag cloud.
 */
if ( apply_filters( 'show_admin_popular_items_tag_cloud', $show_admin_popular_items ) ) {
	if ( current_user_can( $tax-&amp;gt;cap-&amp;gt;edit_terms ) ) {
		$tag_cloud = wp_tag_cloud( array( 'taxonomy' =&amp;gt; $taxonomy, 'post_type' =&amp;gt; $post_type, 'echo' =&amp;gt; false, 'link' =&amp;gt; 'edit' ) );
	} else {
		$tag_cloud = wp_tag_cloud( array( 'taxonomy' =&amp;gt; $taxonomy, 'echo' =&amp;gt; false ) );
	}
	if ( $tag_cloud ) {
?&amp;gt;
&amp;lt;div class="tagcloud"&amp;gt;
&amp;lt;h2&amp;gt;&amp;lt;?php echo $tax-&amp;gt;labels-&amp;gt;popular_items; ?&amp;gt;&amp;lt;/h2&amp;gt;
&amp;lt;?php echo $tag_cloud; unset( $tag_cloud ); ?&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;?php
	}
}
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #32274 (Works faster that use __DIR__ instead of dirname(__FILE__) .) closed</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Sat, 28 May 2016 12:10:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32274#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32274#comment:8/1464437434858194</guid>
      <description>maybelater: &lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/32274#comment:5" title="Comment 5"&gt;nigro.simone&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Very simple way for support old php version without &lt;code&gt; __DIR__ &lt;/code&gt;(&amp;lt; 5.3.0) is add in index.php:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;defined&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'__DIR__'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'__DIR__'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;__FILE__&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
and now is possible and safe replace everywhere &lt;code&gt; dirname(__FILE__) &lt;/code&gt; with &lt;code&gt; __DIR__ &lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
this work without problem (tested my self).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This will only work for files in that one directory. &lt;code&gt;__DIR__&lt;/code&gt; won't be magic, and so it is really not any use for us. We can already use &lt;code&gt;ABSPATH&lt;/code&gt; or other constants. In fact, that's what we already do. The only place that we really use &lt;code&gt;dirname( __FILE__ )&lt;/code&gt; in core is in files that are entry-points of the application. We use that to include the bootstrap, and then use &lt;code&gt;ABSPATH&lt;/code&gt; and other constants after that.
&lt;/p&gt;
&lt;p&gt;
For plugins, the solution is for them to define their own constants if they don't want to use &lt;code&gt;dirname( __FILE__ )&lt;/code&gt; in every place.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #32274 (Works faster that use __DIR__ instead of dirname(__FILE__) .) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 28 May 2016 11:44:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32274#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32274#comment:7/1464435892949184</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32274 (Works faster that use __DIR__ instead of dirname(__FILE__) .) reopened</title>
      
        <dc:creator>nigro.simone</dc:creator>

      <pubDate>Sat, 28 May 2016 09:02:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32274#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32274#comment:6/1464426136868217</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #36861 (The Insert into post button in the Edit Image window doesn't work.) updated</title>
      
        <dc:creator>almendron</dc:creator>

      <pubDate>Sat, 28 May 2016 08:51:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36861#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36861#comment:19/1464425484111124</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36861#comment:14" title="Comment 14"&gt;joemcgill&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@almendron – I'm not entirely clear on what error you're experiencing. If you're saying that once you applied the patch that the button in step 4 has been replaced with a "Back" button, then that's the expected behavior of this fix. If something else is happening, could you explain in more detail, or leave screenshots? Listing the OS/Browser version you are testing on is helpful as well.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Button "back" (version 4.4) in step 4 has been replaced with a "Insert into post" (version 4.5) button. The error is on the change button. Version 4.4 was "Back" and now "Insert into post".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32274 (Works faster that use __DIR__ instead of dirname(__FILE__) .) updated</title>
      
        <dc:creator>nigro.simone</dc:creator>

      <pubDate>Sat, 28 May 2016 08:37:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32274#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32274#comment:5/1464424623163673</guid>
      <description>&lt;p&gt;
Very simple way for support old php version without &lt;code&gt; __DIR__ &lt;/code&gt;(&amp;lt; 5.3.0) is add in index.php:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;defined&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'__DIR__'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'__DIR__'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;__FILE__&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
and now is possible and safe replace everywhere &lt;code&gt; dirname(__FILE__) &lt;/code&gt; with &lt;code&gt; __DIR__ &lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
this work without problem (tested my self).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #32274,​36963 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 28 May 2016 08:27:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=32274%2C36963</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=32274%2C36963/1464424040264385</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32274" title="#32274: enhancement: Works faster that use __DIR__ instead of dirname(__FILE__) . (closed: maybelater)"&gt;#32274&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #36963 (a little performance improvment: replace dirname(__FILE__) with __DIR__) created</title>
      
        <dc:creator>nigro.simone</dc:creator>

      <pubDate>Sat, 28 May 2016 08:19:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36963</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36963/1464423563106505</guid>
      <description>&lt;p&gt;
A little performance improvment is replace
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;dirname(__FILE__)
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
with
&lt;/p&gt;
&lt;pre class="wiki"&gt;__DIR__
&lt;/pre&gt;&lt;p&gt;
Their result is exactly the same ; so, no difference on that.
&lt;/p&gt;
&lt;p&gt;
For example, the two following lines :
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nb"&gt;var_dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;__FILE__&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nb"&gt;var_dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__DIR__&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Will both give the same output :
&lt;/p&gt;
&lt;pre class="wiki"&gt;string '/htdocs/wordpress' (length=17)
&lt;/pre&gt;&lt;p&gt;
But, there are at least two differences :
&lt;/p&gt;
&lt;p&gt;
1) _DIR_ only exists with PHP &amp;gt;= 5.3
2) _DIR_ is evaluated at compile-time, while dirname(_FILE_) means a function-call and is evaluated at execution-time, so, _DIR_ is faster.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #20875 (Introduce wp_cache_get_multi()) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 28 May 2016 04:37:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20875#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20875#comment:16/1464410258950191</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
A couple of patches, in the interest of moving this ticket along.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/20875/20875.3.diff" title="Attachment '20875.3.diff' in Ticket #20875"&gt;20875.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/20875/20875.3.diff" title="Download"&gt;​&lt;/a&gt; is a core patch that shows what the default &lt;code&gt;wp_cache_get_multi()&lt;/code&gt; might look like. Instead of the &lt;code&gt;( $keys, $groups )&lt;/code&gt; syntax suggested by @tollmanz, I've gone for the more straightforward multidimensional array:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$cached = wp_cache_get_multi( array(
    'cache_group_1' =&amp;gt; array( 'foo', 'bar' ),
    'cache_group_2' =&amp;gt; array( 'baz' ),
) );
&lt;/pre&gt;&lt;p&gt;
This syntax is more verbose in many cases, but (a) it's more consistent and thus clearer, and (b) it better parallels the format of the array returned by the function. This format is what's expected by &lt;a class="ext-link" href="https://github.com/ericmann/Redis-Object-Cache/blob/master/object-cache.php#L546"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/ericmann/Redis-Object-Cache/blob/master/object-cache.php#L546&lt;/a&gt; and &lt;a class="ext-link" href="https://plugins.svn.wordpress.org/memcached/trunk/object-cache.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.svn.wordpress.org/memcached/trunk/object-cache.php&lt;/a&gt;, but different from what's expected by &lt;a class="ext-link" href="https://github.com/mgmartel/memcached-redux/blob/master/object-cache.php#L256"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/mgmartel/memcached-redux/blob/master/object-cache.php#L256&lt;/a&gt; and &lt;a class="ext-link" href="https://github.com/tollmanz/wordpress-pecl-memcached-object-cache/blob/master/object-cache.php#L1384"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/tollmanz/wordpress-pecl-memcached-object-cache/blob/master/object-cache.php#L1384&lt;/a&gt; (the latter two expect @tollmanz's syntax, or some subset of it). We are going to have to break compatibility with something, so I'd suggest we choose the syntax we like the best. I prefer what's in my patch, but I don't feel strongly about it.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/20875/20875-example-usage.diff" title="Attachment '20875-example-usage.diff' in Ticket #20875"&gt;20875-example-usage.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/20875/20875-example-usage.diff" title="Download"&gt;​&lt;/a&gt; is an example of how it'd be used in core. The example is from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36953" title="#36953: defect (bug): Meta lazyloading can cause excessive calls to object cache (closed: fixed)"&gt;#36953&lt;/a&gt;. This is a particularly interesting example because it's fetching from lots of cache *groups* at the same time. (If we go forward with this ticket, I'd move the logic from this patch into &lt;code&gt;get_object_term_cache()&lt;/code&gt; - the patch is for demonstration only.)
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/20875/20875-implementation-apc.php" title="Attachment '20875-implementation-apc.php' in Ticket #20875"&gt;20875-implementation-apc.php&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/20875/20875-implementation-apc.php" title="Download"&gt;​&lt;/a&gt; is a totally untested PoC patch for the APC drop-in.
&lt;/p&gt;
&lt;p&gt;
I haven't accounted for the &lt;code&gt;$force&lt;/code&gt; or &lt;code&gt;$found&lt;/code&gt; parameters that &lt;code&gt;get()&lt;/code&gt; has. It's hard to deal with them without making the syntax even more convoluted. Worth noting that the Redis and Memcached plugins listed above also do not support these flags, for &lt;code&gt;get_multi()&lt;/code&gt; *or* for &lt;code&gt;get()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
It's still #yolofriday where I live, so I'm putting this up for 4.6 consideration.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>20875-implementation-apc.php attached to Ticket #20875</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 28 May 2016 04:13:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/20875/20875-implementation-apc.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/20875/20875-implementation-apc.php/1464408791768812</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>20875-example-usage.diff attached to Ticket #20875</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 28 May 2016 04:13:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/20875/20875-example-usage.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/20875/20875-example-usage.diff/1464408781148319</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>20875.3.diff attached to Ticket #20875</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 28 May 2016 04:10:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/20875/20875.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/20875/20875.3.diff/1464408657461288</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36822 (srcset is added to &lt;img /&gt; even if media file is not present in media ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 28 May 2016 03:56:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36822#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36822#comment:9/1464407764605163</guid>
      <description>&lt;p&gt;
There are three requirements for srcset and sizes to be added to an image tag:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;There should be a class name with the attachment post id in it. Example: &lt;code&gt;wp-image-4&lt;/code&gt; means attachment id 4.
&lt;/li&gt;&lt;li&gt;That id should be of an image attachment post (not page, not revision, etc.).
&lt;/li&gt;&lt;li&gt;There should be image meta for that attachment post containing information about the sub-sizes that were generated when the image was uploaded.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The &lt;code&gt;wp-image-###&lt;/code&gt; class is only added when images are inserted from the media library. If the image tag is copied and then the src is changed, the class(es) on it would probably need changing or removing too.
&lt;/p&gt;
&lt;p&gt;
I also don't understand:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;code&gt;&amp;lt;img src="/wp-content/uploads/YYYY/MM/filename.png"&amp;gt;&lt;/code&gt; where the above file is *not* part of Media library
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What exactly is "not part of the media library"? There is no attachment post for it? Or there is no image meta? Or sub-sizes? Or all three? And why is that file in the media library directory?
&lt;/p&gt;
&lt;p&gt;
If any of the above, why the filename matches a file that is a part of the media library?
&lt;/p&gt;
&lt;p&gt;
Confusing :)
&lt;/p&gt;
&lt;p&gt;
In any case don't think this is a typical case that needs to be supported. The patch can break some CDNs that are working now.
&lt;/p&gt;
&lt;p&gt;
Perhaps we can add a filter on the filename matching so such "extreme" edge cases can be dealt with by a simple plugin? If I remember correctly we were discussing a filter there. At the end we decided against it as there weren't any reported problems that would have been solved by adding such filter.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36953 (Meta lazyloading can cause excessive calls to object cache) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 28 May 2016 03:09:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36953#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36953#comment:6/1464404950967519</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37589" title="Allow term meta lazy-loading to be selectively disabled in `WP_Query`. ..."&gt;37589&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Allow term meta lazy-loading to be selectively disabled in &lt;code&gt;WP_Query&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The process of lazy-loading can be resource intensive for object that have&lt;br /&gt;
terms in large numbers of taxonomies and are running a persistent object cache.&lt;br /&gt;
This new parameter allows the feature to be disabled in these cases.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props DBrumbaugh10Up.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36953" title="#36953: defect (bug): Meta lazyloading can cause excessive calls to object cache (closed: fixed)"&gt;#36953&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37589]: Allow term meta lazy-loading to be selectively disabled in `WP_Query`. ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 28 May 2016 03:09:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37589</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37589/1464404949827549</guid>
      <description>&lt;p&gt;
Allow term meta lazy-loading to be selectively disabled in &lt;code&gt;WP_Query&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
The process of lazy-loading can be resource intensive for object that have
terms in large numbers of taxonomies and are running a persistent object cache.
This new parameter allows the feature to be disabled in these cases.
&lt;/p&gt;
&lt;p&gt;
Props DBrumbaugh10Up.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36953" title="#36953: defect (bug): Meta lazyloading can cause excessive calls to object cache (closed: fixed)"&gt;#36953&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36962 (Responsive images WONT work in mobiles) updated</title>
      
        <dc:creator>gabu69</dc:creator>

      <pubDate>Sat, 28 May 2016 03:04:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36962#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36962#comment:2/1464404665502320</guid>
      <description>&lt;p&gt;
I see, is there any way to serve the smaller file (400px one) to those devices or mobile browsers that have a large pixel density?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36953 (Meta lazyloading can cause excessive calls to object cache) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 28 May 2016 02:43:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36953#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36953#comment:5/1464403406991638</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
So was term_meta_lazyload depreciated in WP 4.5?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No. Term meta lazyloading was introduced in 4.5.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@boonebgorges The patch implements option &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/1" title="#1: defect (bug): Handle https:// when manipulating 'home' (closed: fixed)"&gt;#1&lt;/a&gt; that you've listed as far as I can understand
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks. I mistyped - I meant that the value of &lt;code&gt;lazyload_term_meta&lt;/code&gt; should fall back on the value of &lt;code&gt;update_term_meta_cache&lt;/code&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What I'm missing I guess is why a site can't just set update_term_meta_cache to "false" in the pre_get_posts call back?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This can already be done. But it makes it impossible to prime the term cache without priming the termmeta cache.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36822 (srcset is added to &lt;img /&gt; even if media file is not present in media ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 28 May 2016 01:57:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36822#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36822#comment:8/1464400671981214</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1464400669000697"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36962 (Responsive images WONT work in mobiles) closed</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sat, 28 May 2016 01:35:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36962#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36962#comment:1/1464399359839141</guid>
      <description>worksforme: &lt;p&gt;
Hi @gabu69,
&lt;/p&gt;
&lt;p&gt;
Welcome to Trac! It looks like everything is working as expected when I look at your test example. One thing I noticed that may be of help is that you only have three sources available, 400px, 730px, and your full size 2048px version. You may want to add at least one additional size that is larger (maybe something like 1000px). Currently, if a mobile browser has a pixel density of 2x and the viewport width is 400px wide, it's going to look for a source that's at least 800px wide. Since you don't have any sizes between 730px and 2048px, many times it will choose the 2048px size instead of scaling up a smaller image.
&lt;/p&gt;
&lt;p&gt;
To add additional image sizes to your theme you can use the &lt;code&gt;add_image_size()&lt;/code&gt; function (&lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/add_image_size/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;see documentation&lt;/a&gt; in your functions.php file.
&lt;/p&gt;
&lt;p&gt;
Since WordPress is working as expected, I'm going to go ahead and close this ticket as a &lt;em&gt;worksforme&lt;/em&gt;, but feel free to continue the conversation if you have any questions.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36962 (Responsive images WONT work in mobiles) created</title>
      
        <dc:creator>gabu69</dc:creator>

      <pubDate>Sat, 28 May 2016 01:10:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36962</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36962/1464397807088063</guid>
      <description>&lt;p&gt;
I just noticed the responsive images aint working for mobiles in my wordpress site.
&lt;/p&gt;
&lt;p&gt;
For example I test a mobile browser here: &lt;a class="ext-link" href="http://www.recreotesting.com/responsive-images/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.recreotesting.com/responsive-images/&lt;/a&gt; and using Google Chrome Developers Tools (F12) I notice the image that is being displayed to the reader is actually the biggest size one.
&lt;a class="ext-link" href="http://imgur.com/oipXb3T"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://imgur.com/oipXb3T&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
But when I do it in a desktop with screen&amp;lt;400px it will work:
&lt;a class="ext-link" href="https://imgur.com/YV77xBE"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://imgur.com/YV77xBE&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
How can I fix this?
&lt;/p&gt;
&lt;p&gt;
Seems the code is fine as far as I see?:&amp;lt;p&amp;gt;&amp;lt;img src="&lt;a class="ext-link" href="http://www.recreotesting.com/wp-content/uploads/2016/05/TheMask.jpg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.recreotesting.com/wp-content/uploads/2016/05/TheMask.jpg&lt;/a&gt;" alt="TheMask" width="2048" height="1130" class="alignnone size-full wp-image-14412" srcset="&lt;a class="ext-link" href="http://www.recreotesting.com/wp-content/uploads/2016/05/TheMask.jpg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.recreotesting.com/wp-content/uploads/2016/05/TheMask.jpg&lt;/a&gt; 2048w, &lt;a class="ext-link" href="http://www.recreotesting.com/wp-content/uploads/2016/05/TheMask-400x221.jpg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.recreotesting.com/wp-content/uploads/2016/05/TheMask-400x221.jpg&lt;/a&gt; 400w, &lt;a class="ext-link" href="http://www.recreotesting.com/wp-content/uploads/2016/05/TheMask-730x403.jpg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.recreotesting.com/wp-content/uploads/2016/05/TheMask-730x403.jpg&lt;/a&gt; 730w" sizes="(max-width: 2048px) 100vw, 2048px" /&amp;gt;&amp;lt;/p&amp;gt; /&amp;gt;&amp;lt;/p&amp;gt;
}}}
&lt;/p&gt;
&lt;p&gt;
Works on desktop but in my mobile (LG 4, chrome 50.0.2661.89) it wont simply work the responsive images which is the point for it mostly right?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item>
   </channel>
</rss>