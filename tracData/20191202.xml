<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #48856 (Administration Email Verification allows users to update main admin ...) updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Mon, 02 Dec 2019 23:39:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48856#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48856#comment:1/1575329940733066</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hello @bublitzcreative &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Welcome to Trac and thanks for the ticket!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Beware that any administrator can do and change anything, including edit other users of any role. This has nothing to do with "Administration Email Verification", which is just a warning pointing to the site email set in General Options - not linked to any user.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If those capabilites are undesired - do not appoint them Administrators. If you want more fine grained roles and capabilities, there are plugins for that.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48747 (WP_Customize_Setting doesn't clean up after itself) updated</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Mon, 02 Dec 2019 23:03:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48747#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48747#comment:10/1575327813889763</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
No problem, @jon81. If you do get the urge to write the patch after all, the &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/tutorials/getting-started/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;core handbook&lt;/a&gt; has great documentation on setting up a development environment and working with patches.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47692 (Optgroup in Customizer Select Control) updated</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Mon, 02 Dec 2019 22:58:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47692#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47692#comment:5/1575327519761596</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the updated patch, @chintan1896. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The new patch does guard against PHP errors, but it still seems to me to leave room for developer confusion. If &lt;code&gt;$optgroup&lt;/code&gt; is changed without changing the shape of &lt;code&gt;$choices&lt;/code&gt;, or vice versa, the control disappears.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also, what if the developer wants some choices in an &lt;code&gt;optgroup&lt;/code&gt; and some at the top level of the &lt;code&gt;select&lt;/code&gt;?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I also don't see any change to the JavaScript control template in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/47692/47692-new.diff" title="Attachment '47692-new.diff' in Ticket #47692"&gt;47692-new.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/47692/47692-new.diff" title="Download"&gt;​&lt;/a&gt;. Was it left out by accident?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>admin-email.jpg attached to Ticket #48856</title>
      
        <dc:creator>bublitzcreative</dc:creator>

      <pubDate>Mon, 02 Dec 2019 21:30:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/48856/admin-email.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/48856/admin-email.jpg/1575322259626732</guid>
      <description>&lt;p&gt;
Shows you how a user was able to change my email address
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #48856 (Administration Email Verification allows users to update main admin ...) created</title>
      
        <dc:creator>bublitzcreative</dc:creator>

      <pubDate>Mon, 02 Dec 2019 21:27:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48856</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48856/1575322078689350</guid>
      <description>&lt;p&gt;
Some of my users have admin roles. When one of them got their first "Administration Email Verification" email, they were able to use the link to change MY email address.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #48855 (Updating transient to remove expiration fails) created</title>
      
        <dc:creator>stndrdsnz</dc:creator>

      <pubDate>Mon, 02 Dec 2019 19:50:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48855</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48855/1575316242902534</guid>
      <description>&lt;p&gt;
When updating a transient using the set_transient method, it fails to update the transient's expiration date. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Looking at the code, it appears it's only looking for the expiration and deleting it if a new expiration date is specified. This renders it impossible to switch a transient from having an expiration date to not having one.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
ex. code: &lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="c1"&gt;//new transient set to expire in one hour
&lt;/span&gt;&lt;span class="nx"&gt;set_transient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'new_transient'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'data'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//Update transient and remove expiration
&lt;/span&gt;&lt;span class="nx"&gt;set_transient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'new_transient'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'new_data'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
At this point, if you look in the options table for the _transient_new_transient_expiration you'll find the previous value of 1 hour for the expiration instead of the expiration having been removed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
One thing I recognize, that may render this from being a "bug" is the nature of transients would be if transient information isn't available, it shouldn't be relied upon, but rather rebuilt. In this use case above, a transient that's set to not expire, but actually still has an expiration date, would expire and in theory then be regenerated later if the data is requested after the expiration.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #48854 (WP_Query unused code) closed</title>
      
        <dc:creator>mostafaabd</dc:creator>

      <pubDate>Mon, 02 Dec 2019 19:13:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48854#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48854#comment:1/1575314015351856</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #48854 (WP_Query unused code) created</title>
      
        <dc:creator>mostafaabd</dc:creator>

      <pubDate>Mon, 02 Dec 2019 19:00:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48854</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48854/1575313243449815</guid>
      <description>&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/browser/tags/5.3/src/wp-includes/class-wp-query.php#L3411"&gt;https://core.trac.wordpress.org/browser/tags/5.3/src/wp-includes/class-wp-query.php#L3411&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
inside function query on line 3411&lt;br /&gt;
$this-&amp;gt;query      = wp_parse_args( $query );&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I think wp_parse_args take 2 arguments to Merge a user defined arguments into defaults array.&lt;br /&gt;
but here we only path one parameter&lt;br /&gt;
so I think its good to remove this function to be&lt;br /&gt;
$this-&amp;gt;query      = $query;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #47546 (The language used for the `lang` attribute isn't validated before ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 02 Dec 2019 18:38:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47546#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47546#comment:2/1575311881349636</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the patch @krynes.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Is there a performance overhead with calling &lt;code&gt;get_available_languages()&lt;/code&gt;?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48853 (Error generating thumbnails of PDF files) created</title>
      
        <dc:creator>joseaneto</dc:creator>

      <pubDate>Mon, 02 Dec 2019 18:00:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48853</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48853/1575309604450447</guid>
      <description>&lt;p&gt;
After updating WordPress to 5.3, we saw how the thumbnails of the PDF files were not generated.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
After many tests in different environments (we have tested with PHP versions 7.0, 7.1, 7.2 and 7.3, and in different servers), I found the cause, this change: &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/46238" title="Media: Prevent unnecessary whitespace around PDF Thumbnails.
Stops ..."&gt;[46238]&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Calling &lt;code&gt;setOption&lt;/code&gt; before &lt;code&gt;readImage&lt;/code&gt; produces an internal error in Imagick (&lt;code&gt;ImagickException: Failed to read the file&lt;/code&gt;) that causes it not to be able to read the file, while moving this line to run after &lt;code&gt;readImage&lt;/code&gt; generates thumbnails without problems.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #40199 (Customize: collapse suggested and previously uploaded header images ...) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Mon, 02 Dec 2019 17:59:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40199#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40199#comment:25/1575309589026730</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
As this has feedback, during the design triage going to remove the feedback labels for design.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>menu-item-original-view.png attached to Ticket #37417</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Mon, 02 Dec 2019 17:59:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37417/menu-item-original-view.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37417/menu-item-original-view.png/1575309542625271</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37417 (Customize Nav Menus: more visible way to navigate the preview to a ...) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Mon, 02 Dec 2019 17:58:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37417#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37417#comment:15/1575309530384050</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Isn't it a option to directly show the page on the right side when the user clicks on a menu item in the customiser? So they can instantly see what they are doing in the customiser?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Clicking on the title opens the accordion, which is a standard interaction across WordPress — I don't think we should change this interaction in just one place.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
We should definitely separate previewing from the "original" label, since they're two different concepts. Instead, we could move "original" to live underneath the navigation label field, and only show it if you've changed the page label to something custom.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Then, we can pull "View Page" out as it's own link.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40199 (Customize: collapse suggested and previously uploaded header images ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 02 Dec 2019 17:54:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40199#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40199#comment:24/1575309257479594</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by karmatosed. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1575309256100400"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25214 (Behaviour when deleting menu items with sub-menus) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 02 Dec 2019 17:48:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25214#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25214#comment:14/1575308894930507</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by karmatosed. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1575308891098300"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37417 (Customize Nav Menus: more visible way to navigate the preview to a ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 02 Dec 2019 17:42:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37417#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37417#comment:14/1575308565766759</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by karmatosed. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1575308564094900"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44539 (Notify the admin when no personal data is found for a user) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 02 Dec 2019 17:36:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44539#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44539#comment:4/1575308192484146</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by karmatosed. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1575308190091200"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44103 (change the type attribute of #menu_order from 'text' to 'number') updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Mon, 02 Dec 2019 17:35:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44103#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44103#comment:4/1575308150836795</guid>
      <description>&lt;p&gt;
Could someone add some before/after screenshots? That'll help folks reviewing to understand the context.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44103 (change the type attribute of #menu_order from 'text' to 'number') updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 02 Dec 2019 17:32:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44103#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44103#comment:3/1575307961462788</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by karmatosed. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1575307959086800"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48778 (PDF Upload Bug in 5.3) updated</title>
      
        <dc:creator>nullreturned</dc:creator>

      <pubDate>Mon, 02 Dec 2019 17:24:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48778#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48778#comment:7/1575307466069365</guid>
      <description>&lt;p&gt;
I haven't done too much debugging, but I'm getting the same issue as well.  Anything I try to upload to the Media that's over 1MB in size is giving the same exact error.  I've tried this with multiple file types.  Anything over 1MB takes a very long time, and then errors with: "Unexpected response from the server. The file may have been uploaded successfully. Check in the Media Library or reload the page." and nothing actually uploads.  It is also insanely slow to get this to process through, and I have fairly fast (150mbs) uploads. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Files smaller than 1MB have no issues and are processed immediately.  I've checked my host's phprc file and don't see anything that would limit it.  I had turned on debugging, and no errors were returned (strangely).  I've verified that both WordPress and my Host is set to limit it at 64M, so I'm not sure where the culprit may be.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48552 (Twenty Twenty: Add theme support for responsive embeds) updated</title>
      
        <dc:creator>nielslange</dc:creator>

      <pubDate>Mon, 02 Dec 2019 17:09:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48552#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48552#comment:10/1575306554410549</guid>
      <description>&lt;p&gt;
Thanks for mentioning this, @ianbelanger!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Do you still know under which conditions you tested this implementation during eth GitHub development? Was it an embedded YouTube video you tested this implementation with?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48779 (Enhancement: Twenty Twenty: Copyright and WordPress as text widget) updated</title>
      
        <dc:creator>rnmartinez</dc:creator>

      <pubDate>Mon, 02 Dec 2019 16:47:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48779#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48779#comment:5/1575305235763414</guid>
      <description>&lt;p&gt;
I would like to add a big +1 to this ticket. I feel that changing the copyright footer shouldn't require creation of a child theme when so much can be accomplished with CSS&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48552 (Twenty Twenty: Add theme support for responsive embeds) updated</title>
      
        <dc:creator>ianbelanger</dc:creator>

      <pubDate>Mon, 02 Dec 2019 16:41:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48552#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48552#comment:9/1575304863081420</guid>
      <description>&lt;p&gt;
@nielslange and @williampatton I actually tried adding this support during development on GitHub, but there were some adverse side effects when I did it. Mainly video embeds were not actually responsive after adding this support, where they were before adding it. I believe that this needs further testing before it can be committed to core.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48601 (Twenty Twenty: document.body is null) closed</title>
      
        <dc:creator>ianbelanger</dc:creator>

      <pubDate>Mon, 02 Dec 2019 16:37:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48601#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48601#comment:25/1575304657578229</guid>
      <description>fixed: &lt;p&gt;
This issue has been fixed and committed to core. It should be released with the next version of core 5.3.1.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #48617 (Twenty Twenty: Figure elements with inline style can overflow content ...) updated</title>
      
        <dc:creator>ianbelanger</dc:creator>

      <pubDate>Mon, 02 Dec 2019 16:36:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48617#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48617#comment:6/1575304566420808</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48637 (Twenty Twenty: The use of word-break: break-word; causes vertical ...) updated</title>
      
        <dc:creator>ianbelanger</dc:creator>

      <pubDate>Mon, 02 Dec 2019 16:34:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48637#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48637#comment:4/1575304489282740</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48679 (Twenty Twenty: Theme Color Picker for primary color) updated</title>
      
        <dc:creator>ianbelanger</dc:creator>

      <pubDate>Mon, 02 Dec 2019 16:32:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48679#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48679#comment:10/1575304337375452</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48726 (Twenty Twenty: Wrong Text Color for Background Color &amp; Subtle ...) updated</title>
      
        <dc:creator>ianbelanger</dc:creator>

      <pubDate>Mon, 02 Dec 2019 16:27:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48726#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48726#comment:1/1575304045779896</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48729 (Twenty Twenty: Margin reset for first-child and last-child is ...) updated</title>
      
        <dc:creator>ianbelanger</dc:creator>

      <pubDate>Mon, 02 Dec 2019 16:26:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48729#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48729#comment:1/1575304008262335</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48734 (Twenty Twenty: [em] tag with blank string inside ruins theme layout) updated</title>
      
        <dc:creator>ianbelanger</dc:creator>

      <pubDate>Mon, 02 Dec 2019 16:23:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48734#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48734#comment:10/1575303789555850</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48779 (Enhancement: Twenty Twenty: Copyright and WordPress as text widget) updated</title>
      
        <dc:creator>ianbelanger</dc:creator>

      <pubDate>Mon, 02 Dec 2019 16:20:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48779#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48779#comment:4/1575303622117191</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48835 (Twenty Twenty: hr class="post-separator" broken by hide categories) updated</title>
      
        <dc:creator>ianbelanger</dc:creator>

      <pubDate>Mon, 02 Dec 2019 16:16:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48835#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48835#comment:3/1575303399969627</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48837 (Twenty Twenty: Wrong cover height in Chrome mobile) updated</title>
      
        <dc:creator>ianbelanger</dc:creator>

      <pubDate>Mon, 02 Dec 2019 16:15:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48837#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48837#comment:2/1575303359017908</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48176 (Deprecated get_all_category_ids() call can return incorrect results) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 02 Dec 2019 14:47:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48176#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48176#comment:5/1575298048247116</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/46810" title="Taxonomy: Remove redundant caching from `get_all_category_ids()`, ..."&gt;46810&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Taxonomy: Remove redundant caching from &lt;code&gt;get_all_category_ids()&lt;/code&gt;, deprecated in favor of &lt;code&gt;get_terms()&lt;/code&gt; in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28679" title="Deprecate get_all_category_ids(). Suggest get_terms() as a ..."&gt;[28679]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;all_category_ids&lt;/code&gt; cache key it relied on was removed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/5555" title="Term cache work. see #4189"&gt;[5555]&lt;/a&gt; and never repopulated, causing invalid or unexpected results when using a persistent object cache.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props itowhid06, johnjamesjacoby.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/48176" title="#48176: defect (bug): Deprecated get_all_category_ids() call can return incorrect results (closed: fixed)"&gt;#48176&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [46810]: Taxonomy: Remove redundant caching from `get_all_category_ids()`, ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 02 Dec 2019 14:47:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/46810</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/46810/1575298047163763</guid>
      <description>&lt;p&gt;
Taxonomy: Remove redundant caching from &lt;code&gt;get_all_category_ids()&lt;/code&gt;, deprecated in favor of &lt;code&gt;get_terms()&lt;/code&gt; in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28679" title="Deprecate get_all_category_ids(). Suggest get_terms() as a ..."&gt;[28679]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;all_category_ids&lt;/code&gt; cache key it relied on was removed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/5555" title="Term cache work. see #4189"&gt;[5555]&lt;/a&gt; and never repopulated, causing invalid or unexpected results when using a persistent object cache.
&lt;/p&gt;
&lt;p&gt;
Props itowhid06, johnjamesjacoby.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/48176" title="#48176: defect (bug): Deprecated get_all_category_ids() call can return incorrect results (closed: fixed)"&gt;#48176&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #48176 (Deprecated get_all_category_ids() call can return incorrect results) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 02 Dec 2019 14:41:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48176#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48176#comment:4/1575297664779417</guid>
      <description>&lt;p&gt;
Some history on the &lt;code&gt;'all_category_ids'&lt;/code&gt; cache key:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/3011/trunk/wp-admin/admin-db.php" title="Object caching, round one."&gt;[3011/trunk/wp-admin/admin-db.php]&lt;/a&gt;.
&lt;/li&gt;&lt;li&gt;Replaced with &lt;code&gt;clean_category_cache()&lt;/code&gt; in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/4631" title="Some caching cleanups."&gt;[4631]&lt;/a&gt;.
&lt;/li&gt;&lt;li&gt;Removed in favor of &lt;code&gt;clean_term_cache( $id, 'category' )&lt;/code&gt; in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/5555" title="Term cache work. see #4189"&gt;[5555]&lt;/a&gt;.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48849 (XML-RPC - passing array of tag names for strip_tags()) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 02 Dec 2019 14:17:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48849#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48849#comment:1/1575296232453645</guid>
      <description>maybelater: &lt;p&gt;
Thanks for the patch!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As noted in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/48848#comment:2" title="Comment 2 for #48848: defect (bug): Passing array of tag names for strip_tags() in WP Mail (closed: maybelater)"&gt;comment:2:ticket:48848&lt;/a&gt;, WordPress still supports PHP 5.6+, so the patch cannot be used until the minimum required version is bumped to PHP 7.4.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #48848 (Passing array of tag names for strip_tags() in WP Mail) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 02 Dec 2019 14:16:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48848#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48848#comment:3/1575296219847944</guid>
      <description>maybelater: &lt;p&gt;
Thanks for the patch!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As noted in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/48848#comment:2" title="Comment 2"&gt;comment:2&lt;/a&gt;, WordPress still supports PHP 5.6+, so the patch cannot be used until the minimum required version is bumped to PHP 7.4.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #48177 (Remove deprecated get_all_category_ids() from Tests) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 02 Dec 2019 14:13:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48177#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48177#comment:4/1575295983723731</guid>
      <description>wontfix: &lt;p&gt;
Closing, per &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/48177#comment:1" title="Comment 1"&gt;comment:1&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #47965 (Missing strict comparison check in REST Autosaves Controller) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 02 Dec 2019 14:12:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47965#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47965#comment:6/1575295926931966</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48176 (Deprecated get_all_category_ids() call can return incorrect results) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 02 Dec 2019 14:10:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48176#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48176#comment:3/1575295858946441</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48852 (add exceptions for Class WP_Theme Theme name) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 02 Dec 2019 14:08:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48852#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48852#comment:1/1575295738495306</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29807 (add support for picture element and srcset attribute on img in wp_kses) updated</title>
      
        <dc:creator>webkinder</dc:creator>

      <pubDate>Mon, 02 Dec 2019 10:38:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29807#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29807#comment:32/1575283136207953</guid>
      <description>&lt;p&gt;
We should really have that in core. Also triggers block validation errors in Gutenberg when a user tries to save a block with an &amp;lt;picture&amp;gt; tag in it.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48848 (Passing array of tag names for strip_tags() in WP Mail) updated</title>
      
        <dc:creator>skithund</dc:creator>

      <pubDate>Mon, 02 Dec 2019 10:21:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48848#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48848#comment:2/1575282119416883</guid>
      <description>&lt;p&gt;
WordPress supports PHP 5.6+, so there's no need for PHP 7.4 only code refactoring.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>48852.patch attached to Ticket #48852</title>
      
        <dc:creator>dkarfa</dc:creator>

      <pubDate>Mon, 02 Dec 2019 10:11:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/48852/48852.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/48852/48852.patch/1575281514505770</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #48852 (add exceptions for Class WP_Theme Theme name) created</title>
      
        <dc:creator>dkarfa</dc:creator>

      <pubDate>Mon, 02 Dec 2019 10:11:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48852</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48852/1575281462340800</guid>
      <description>&lt;p&gt;
PHP 7.4 allow exceptions from &lt;code&gt;__toString()&lt;/code&gt;, add exceptions for WP_Theme Class theme name &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>48849.2.patch attached to Ticket #48849</title>
      
        <dc:creator>wpamitkumar</dc:creator>

      <pubDate>Mon, 02 Dec 2019 09:48:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/48849/48849.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/48849/48849.2.patch/1575280081451464</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47620 (REST API: Expose blocks registered on the server) updated</title>
      
        <dc:creator>koke</dc:creator>

      <pubDate>Mon, 02 Dec 2019 09:03:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47620#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47620#comment:22/1575277399350241</guid>
      <description>&lt;p&gt;
To clarify the mobile perspective, we are currently not loading any code from the server. We have doubts that the &lt;a class="ext-link" href="https://developer.apple.com/app-store/review/guidelines/#third-party-software"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;App Store Guidelines would allow us to do so&lt;/a&gt;. The current approach is that we are shipping the code for the core blocks we support with the apps. Once we have enough to support plugins, the idea is to start doing the same for the most popular/requested plugins and ship their code alongside the apps.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
That's why we need a version to know which code matches to a specific block. We have already run into issues with that recently. Whenever a block markup changes, Gutenberg is designed to deal with backwards compatibility and migrate that content automatically. However, it might be the case that you try to open a block created with the newer markup with an older client, leading to "invalid content".&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This can happen both ways: people might upgrade their site before their apps, but also we are currently developing gutenberg-mobile against master, so users would get updated on mobile way before they do on their sites, unless they are running the plugin.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48841 (Add missing doc and refactor code for REST API: ...) updated</title>
      
        <dc:creator>dkarfa</dc:creator>

      <pubDate>Mon, 02 Dec 2019 08:54:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48841#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48841#comment:3/1575276898209794</guid>
      <description>&lt;p&gt;
Hi @mukesh27,&lt;br /&gt;
I have updated the patch.&lt;br /&gt;
Thank you,&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>48841.1.patch attached to Ticket #48841</title>
      
        <dc:creator>dkarfa</dc:creator>

      <pubDate>Mon, 02 Dec 2019 08:52:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/48841/48841.1.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/48841/48841.1.patch/1575276743157748</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #48851 (thumbnails not created on upload) created</title>
      
        <dc:creator>sarahk238</dc:creator>

      <pubDate>Mon, 02 Dec 2019 08:08:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48851</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48851/1575274093312429</guid>
      <description>&lt;p&gt;
I get this message when trying to upload a pdf:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Unexpected response from the server. The file may have been uploaded successfully. Check in the Media Library or reload the page.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The file uploads but no thumbnail is created.  This was working fine until the last update to 5.3&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>47692-new.diff attached to Ticket #47692</title>
      
        <dc:creator>chintan1896</dc:creator>

      <pubDate>Mon, 02 Dec 2019 08:03:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47692/47692-new.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47692/47692-new.diff/1575273790319047</guid>
      <description>&lt;p&gt;
I attached new changes for optgroup
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47692 (Optgroup in Customizer Select Control) updated</title>
      
        <dc:creator>chintan1896</dc:creator>

      <pubDate>Mon, 02 Dec 2019 08:00:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47692#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47692#comment:4/1575273627317017</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hey @dlh , &lt;br /&gt;
Please review on latest patch. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>plugin-autoupdates-wp-admin.png attached to Ticket #48850</title>
      
        <dc:creator>jeherve</dc:creator>

      <pubDate>Mon, 02 Dec 2019 07:58:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/48850/plugin-autoupdates-wp-admin.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/48850/plugin-autoupdates-wp-admin.png/1575273490195854</guid>
      <description>&lt;p&gt;
New Automatic update field in the Plugins screen
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #48850 (Plugins Screen: introduce "Automatic updates" column / option) created</title>
      
        <dc:creator>jeherve</dc:creator>

      <pubDate>Mon, 02 Dec 2019 07:57:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48850</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48850/1575273445673514</guid>
      <description>&lt;p&gt;
WordPress 3.7 introduced us to &lt;a class="ext-link" href="https://make.wordpress.org/core/2013/10/25/the-definitive-guide-to-disabling-auto-updates-in-wordpress-3-7/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;automatic updates for Core, themes, plugins, and translations&lt;/a&gt;. It also brought us filters like &lt;code&gt;auto_update_plugin&lt;/code&gt; that allow site owners to &lt;a class="ext-link" href="https://wordpress.org/support/article/configuring-automatic-background-updates/#plugin-theme-updates-via-filter"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;automatically update specific plugins&lt;/a&gt; if they want to. &lt;br /&gt;
WordPress 5.1 went a step further with &lt;a class="ext-link" href="https://make.wordpress.org/core/2019/01/14/php-site-health-mechanisms-in-5-1/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Fatal Error Protection&lt;/a&gt;, and 5.2 made managing any failures caused by broken plugins even easier with &lt;a class="ext-link" href="https://make.wordpress.org/core/2019/04/16/fatal-error-recovery-mode-in-5-2/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Recovery Mode&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
At this point, I think it has become relatively safe for a site owner to use the &lt;code&gt;auto_update_plugin&lt;/code&gt; filter to enable autoupdates for any or all of their plugins. It removes one of the burdens of site management, and in case of failure (such as a plugin introducing a fatal error with an update) it is relatively easy to access the dashboard and remove the plugin.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
All that said, I would like to suggest making plugin autoupdates even more mainstream by adding a new column to the Plugins screen, where one could toggle autoupdates on / off for just about any plugin.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>twenty.gif attached to Ticket #48765</title>
      
        <dc:creator>utsav72640</dc:creator>

      <pubDate>Mon, 02 Dec 2019 07:47:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/48765/twenty.gif</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/48765/twenty.gif/1575272845248769</guid>
      <description>&lt;p&gt;
GIF
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>48849.patch attached to Ticket #48849</title>
      
        <dc:creator>dkarfa</dc:creator>

      <pubDate>Mon, 02 Dec 2019 07:47:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/48849/48849.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/48849/48849.patch/1575272830473932</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #48849 (XML-RPC - passing array of tag names for strip_tags()) created</title>
      
        <dc:creator>dkarfa</dc:creator>

      <pubDate>Mon, 02 Dec 2019 07:46:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48849</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48849/1575272796167432</guid>
      <description>&lt;p&gt;
In PHP 7.4 now strip_tags() also accepts an array of allowed tags: instead of strip_tags($str, '&amp;lt;a&amp;gt;&amp;lt;p&amp;gt;') you can now write strip_tags($str, ['a', 'p']).&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #48848 (Passing array of tag names for strip_tags() in WP Mail) updated</title>
      
        <dc:creator>dkarfa</dc:creator>

      <pubDate>Mon, 02 Dec 2019 07:44:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48848#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48848#comment:1/1575272685564576</guid>
      <description>&lt;p&gt;
In PHP 7.4 now strip_tags() also accepts an array of allowed tags: instead of strip_tags($str, '&amp;lt;a&amp;gt;&amp;lt;p&amp;gt;') you can now write strip_tags($str, ['a', 'p']).&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>48848.patch attached to Ticket #48848</title>
      
        <dc:creator>dkarfa</dc:creator>

      <pubDate>Mon, 02 Dec 2019 07:44:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/48848/48848.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/48848/48848.patch/1575272641574035</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #48848 (Passing array of tag names for strip_tags() in WP Mail) created</title>
      
        <dc:creator>dkarfa</dc:creator>

      <pubDate>Mon, 02 Dec 2019 07:42:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48848</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48848/1575272578834273</guid>
      <description></description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #48747 (WP_Customize_Setting doesn't clean up after itself) updated</title>
      
        <dc:creator>jon81</dc:creator>

      <pubDate>Mon, 02 Dec 2019 06:52:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48747#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48747#comment:9/1575269536615564</guid>
      <description>&lt;p&gt;
Hi @dlh,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Sorry for the late reply! I didn't realise you were waiting on me to write a patch, I'd prefer to be unassigned for the time being.. as I don't have any experience writing patches and I'm very busy leading up to the end of year, as are we all no doubt?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thankyou for all your help, and I wish you the best in the coming holidays!&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48841 (Add missing doc and refactor code for REST API: ...) updated</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Mon, 02 Dec 2019 05:11:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48841#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48841#comment:2/1575263461357420</guid>
      <description>&lt;p&gt;
@dkarfa One small text change suggestion.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt; Registers routes for attachments. &lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Replace to&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt; Register routes for the attachments. &lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47964 (jQuery Syntax Error when using a colon character in the widget class) updated</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Mon, 02 Dec 2019 02:13:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47964#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47964#comment:1/1575252833742380</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hey @taskotr — are you still able to replicate this issue? If so, can you provide a code sample that causes it with a fresh installation?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48842 (Fix calculation error when resampling images before resizing in ...) updated</title>
      
        <dc:creator>vanyukov</dc:creator>

      <pubDate>Mon, 02 Dec 2019 02:12:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48842#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48842#comment:5/1575252735414326</guid>
      <description>&lt;p&gt;
@azaozz , the "to be more efficient" was for resource handling. When debugging the issue with large sizes not being generated, I went back to a 4 or 5 years back discussion in trac and there was a reference to this article: &lt;br /&gt;
&lt;a class="ext-link" href="https://www.smashingmagazine.com/2015/06/efficient-image-resizing-with-imagemagick/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.smashingmagazine.com/2015/06/efficient-image-resizing-with-imagemagick/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I can see that many image optimization settings are similar in WordPress, so I assumed a lot was taken from that article. Here's a quote:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This means that if we were resizing an image to be 500 pixels wide, -thumbnail would first resize it to 2,500 pixels wide using -sample; the result might be blocky and pixelated, as we saw in the examples above, but the operation would be fast and would produce a result with a small file size. Then, ImageMagick would resize this image from 2,500 pixels wide to 500 pixels wide using -resize. This smooths out the blockiness, but the file size stays pretty low.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48842 (Fix calculation error when resampling images before resizing in ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 02 Dec 2019 01:51:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48842#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48842#comment:4/1575251463496163</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/48842#comment:3" title="Comment 3"&gt;vanyukov&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think it's a bit wrong, at least, from the original intention. Images are upscaled up to smooth out the edges during resizing. If we have a 5x larger image - just skip resample and resize, if we don't - resample the original and &lt;em&gt;then&lt;/em&gt; resize.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hmm, I read the comment there differently :)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
"To be more efficient..." sounds like this is done in order to help efficiency, i.e. create a much smaller sub-size faster and using less server resources. Not sure if the idea was to upscale the original in order to produce "smoother" sub-size. The existing code suggests that too. Also think &lt;code&gt;Imagick::thumbnailImage()&lt;/code&gt; does something similar internally.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;Imagick::sampleImage()&lt;/code&gt; seems like a "fast" scaling method: &lt;a class="ext-link" href="https://imagemagick.org/api/resize.php#SampleImage"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://imagemagick.org/api/resize.php#SampleImage&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
SampleImage() scales an image to the desired dimensions with pixel sampling. Unlike other scaling methods, this method does not introduce any additional color into the scaled image.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm sure @mikeschroder and @joemcgill will know more.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48842 (Fix calculation error when resampling images before resizing in ...) updated</title>
      
        <dc:creator>vanyukov</dc:creator>

      <pubDate>Mon, 02 Dec 2019 00:42:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48842#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48842#comment:3/1575247340509553</guid>
      <description>&lt;p&gt;
@azaozz, &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I think it's a bit wrong, at least, from the original intention. Images are upscaled up to smooth out the edges during resizing. If we have a 5x larger image - just skip resample and resize, if we don't - resample the original and &lt;em&gt;then&lt;/em&gt; resize.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Resizing a 1000x500 image to 300x150 doesn't resample the source. The resampled image would be larger than the original: 1500x750, $resize_ratio is 2.25.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Exactly the point - we &lt;strong&gt;should&lt;/strong&gt; resample the original to 1.5x the size.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also, tetsted the above fix, and these sizes fail:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Resizing a 10315x7049 image to 150x150 &lt;strong&gt;does&lt;/strong&gt; resample the source. The &lt;code&gt;$resize_ratio&lt;/code&gt; is &lt;code&gt;0.0077361660674977&lt;/code&gt;. No need to resample, we have a huge original we can resize from.
&lt;/li&gt;&lt;li&gt;Resizing a 10315x7049 image to 300x205 &lt;strong&gt;does&lt;/strong&gt; resample the source. The &lt;code&gt;$resize_ratio&lt;/code&gt; is &lt;code&gt;0.021145520584494&lt;/code&gt;. Same thing.
&lt;/li&gt;&lt;li&gt;Resizing a 10315x7049 image to 2100x1435 &lt;strong&gt;does not&lt;/strong&gt; resample the source. The &lt;code&gt;$resize_ratio&lt;/code&gt; is &lt;code&gt;1.0361305086402&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
In my initial proposal, I've suggested having a dynamic &lt;code&gt;$sample_factor&lt;/code&gt;. It doesn't have to be with &lt;code&gt;do...while&lt;/code&gt;, but just not resample all the images to 5x size.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For example, 2100x1435 is just a bit off from being 5x smaller than 10315x7049.&lt;br /&gt;
&lt;code&gt;(10315x7049)-(2100x1435*25) = 2627065&lt;/code&gt;, so we can just resample the original to x1.01791 the size and the resize from that image. Does that make sense?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48522 (Attachment size not generated when large images uploaded) updated</title>
      
        <dc:creator>vanyukov</dc:creator>

      <pubDate>Mon, 02 Dec 2019 00:03:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48522#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48522#comment:26/1575244984261536</guid>
      <description>&lt;p&gt;
@azaozz ,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Just a quick test - it does fix the upload issue. But it doesn't seem like the right way to calculate the resample ratio. Will reply in the other task.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42437 (Thumbnails can overwrite other uploads if filename matches) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 01 Dec 2019 23:49:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42437#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42437#comment:31/1575244143831786</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/42437#comment:30" title="Comment 30"&gt;pbiron&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@azaozz I'm working on a revised patch for this.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Where do you think is the best place to do this "extra" collision detection?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Been thinking about this for a while. Not sure it can use &lt;code&gt;glob()&lt;/code&gt; as the PHP manual warns that:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Note: This function will not work on remote files as the file to be examined must be accessible via the server's filesystem.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Can try to generate a list of "reserved parts" of image file names. For that it will need access to the actual file, then it can use &lt;code&gt;getimagesize( $file )&lt;/code&gt; to get the image dimensions, &lt;code&gt;wp_get_registered_image_subsizes()&lt;/code&gt;, and &lt;code&gt;image_resize_dimensions()&lt;/code&gt; to get the exact &lt;code&gt;123x456&lt;/code&gt; part. Then we can still use &lt;code&gt;file_exists()&lt;/code&gt; or &lt;code&gt;is_file()&lt;/code&gt; that support remote files.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Looks like that will work, but may be a bit fragile? May also result in some false positives.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I like the idea @joemcgill described in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42437#comment:21" title="#42437: defect (bug): Thumbnails can overwrite other uploads if filename matches (closed: fixed)"&gt;comment 21&lt;/a&gt;. But appending a hash only to sub-sizes will prevent the possibility to "get" the attachment ID from an image URL, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/48453" title="#48453: defect (bug): Regression: Implied contract between image sub-size filenames and ... (closed: fixed)"&gt;#48453&lt;/a&gt;. Perhaps a short hash (6-8 letters/numbers) could be added to the original file name instead of the &lt;code&gt;-1&lt;/code&gt;, &lt;code&gt;-2&lt;/code&gt;, etc?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For where/how to do this, there seem to be couple of possibilities:&lt;br /&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Use the existing mechanism to pass &lt;code&gt;$unique_filename_callback&lt;/code&gt; to &lt;code&gt;wp_unique_filename()&lt;/code&gt;. This will work for the default uploading functions, for example &lt;code&gt;media_handle_upload()&lt;/code&gt;, but will require some changes to them (5-6 places as far as I see). The downside is that it will not work for plugins using the same functions.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;Include it in &lt;code&gt;wp_unique_filename()&lt;/code&gt;. This may result in "false positives" when generating file names, but generally will have better backwards compatibility.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43113 (Multiple custom item classes are returned as single string when using ...) updated</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Sun, 01 Dec 2019 23:41:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43113#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43113#comment:3/1575243695134073</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Storing the classes as a string in the setting value seems right to me because &lt;code&gt;wp_update_nav_menu_item()&lt;/code&gt; expects to receive a string for &lt;code&gt;menu-item-classes&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The problem occurs (I think) when the nav menu item's properties are overwritten with the customized state in &lt;code&gt;\WP_Customize_Nav_Menu_Item_Setting::filter_wp_get_nav_menu_items()&lt;/code&gt;. The string setting value for &lt;code&gt;classes&lt;/code&gt; overwrites the array value set by &lt;code&gt;wp_setup_nav_menu_item()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43113/43113.diff" title="Attachment '43113.diff' in Ticket #43113"&gt;43113.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43113/43113.diff" title="Download"&gt;​&lt;/a&gt; attempts to fix this in &lt;code&gt;\WP_Customize_Nav_Menu_Item_Setting::value_as_wp_post_nav_menu_item()&lt;/code&gt; by ensuring that a string &lt;code&gt;classes&lt;/code&gt; is exploded into an array before it's used to overwrite the property.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
@lrdn, would you be able to refresh your memory about this issue and test the patch?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Marking this as a potential small fix to get into 5.4 if it can be tested.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43113.diff attached to Ticket #43113</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Sun, 01 Dec 2019 23:33:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43113/43113.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43113/43113.diff/1575243183145862</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39487 (Default to 'transport'=&gt;'postMessage' for a setting associated with a ...) updated</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Sun, 01 Dec 2019 22:56:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39487#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39487#comment:3/1575240974573130</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39487/39487.2.diff" title="Attachment '39487.2.diff' in Ticket #39487"&gt;39487.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39487/39487.2.diff" title="Download"&gt;​&lt;/a&gt; adds tests.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39487.2.diff attached to Ticket #39487</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Sun, 01 Dec 2019 22:55:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39487/39487.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39487/39487.2.diff/1575240947860945</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #48785 (REST API: WP_REST_Controller::get_public_item_schema() assumes that ...) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Sun, 01 Dec 2019 21:52:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48785#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48785#comment:4/1575237173598561</guid>
      <description>&lt;p&gt;
Thanks for working on a patch for this @dhavalkasvala! Do you want to try tackling a &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/testing/automated-testing/writing-phpunit-tests/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;unit test&lt;/a&gt; for this? Coding standards wise, we should also have &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/coding-standards/php/#space-usage"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;spaces around the parentheses&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42961 (REST API: Cannot pass empty object url encoded data) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Sun, 01 Dec 2019 21:39:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42961#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42961#comment:8/1575236375198465</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for providing that context @steffanhalv! A couple of things to untangle here.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The REST API does send CORS headers. As far as I know, the intention is that any WordPress with the REST API enabled would be able to accept JSON by default: &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/blob/bf3295d10f066ef6bf670bb272aae9db400e8be5/src/wp-includes/rest-api/class-wp-rest-server.php#L239"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/wordpress-develop/blob/bf3295d10f066ef6bf670bb272aae9db400e8be5/src/wp-includes/rest-api/class-wp-rest-server.php#L239&lt;/a&gt; Is there a specific deficiency you noticed in the CORS setup that WordPress Core could address?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If you were not aware, the REST API accepts form url encoded data as post data.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For the actual issue, I'm not able to replicate if the schema is setup properly. Given the following REST API route:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'rest_api_init'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;register_rest_route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="s1"&gt;'my-ns'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;'my-route'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="p"&gt;[&lt;/span&gt;
                        &lt;span class="s1"&gt;'methods'&lt;/span&gt;  &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;WP_REST_Server&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="na"&gt;EDITABLE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="s1"&gt;'args'&lt;/span&gt;     &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
                                &lt;span class="s1"&gt;'array'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
                                        &lt;span class="s1"&gt;'type'&lt;/span&gt;              &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'array'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                        &lt;span class="s1"&gt;'items'&lt;/span&gt;             &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                                                &lt;span class="s1"&gt;'type'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'string'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                        &lt;span class="p"&gt;),&lt;/span&gt;
                                        &lt;span class="s1"&gt;'validate_callback'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'rest_validate_request_arg'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                        &lt;span class="s1"&gt;'sanitize_callback'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'rest_sanitize_request_arg'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="p"&gt;],&lt;/span&gt;
                        &lt;span class="p"&gt;],&lt;/span&gt;
                        &lt;span class="s1"&gt;'callback'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;WP_REST_Request&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WP_REST_Response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get_params&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                        &lt;span class="p"&gt;},&lt;/span&gt;
                &lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
And the given request:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;curl --request POST \
  --url http://trunk.test/wp-json/my-ns/my-route \
  --header 'accept: application/json' \
  --header 'content-type: application/x-www-form-urlencoded' \
  --data array=
&lt;/pre&gt;&lt;p&gt;
I receive the following response:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;{
  "array": []
}
&lt;/pre&gt;&lt;p&gt;
If there is not items schema set, then &lt;code&gt;rest_sanitize_value_from_schema()&lt;/code&gt; will bail by just casting the value to an array and you'll get an array of a single string.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Taking a look at your error message, though, it looks like you are trying to set an empty &lt;em&gt;object&lt;/em&gt; not an &lt;em&gt;array&lt;/em&gt;. Doing a bit of research, it doesn't look like there is an RFC about how this should work, if anyone knows of one, please mention it. Languages also aren't consistent about it. For example, in nodejs.&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;gt; const qs = require( 'querystring' );
&amp;gt; qs.stringify( { obj: {} } );
'obj='
&amp;gt; qs.parse( 'obj=' );
{ obj: '' }
&lt;/pre&gt;&lt;p&gt;
In the REST API currently, &lt;code&gt;obj=&lt;/code&gt; fails because it is not an object. And given that you can create an empty array with &lt;code&gt;arr=&lt;/code&gt;. I think we can allow &lt;code&gt;obj=&lt;/code&gt; as an empty object. There shouldn't be any BC concerns because that value is currently blocked by &lt;code&gt;rest_validate_value_from_schema&lt;/code&gt;, so we wouldn't be transforming a previously valid value into a different value. &lt;code&gt;rest_sanitize_value_from_schema&lt;/code&gt; will already convert anything invalid into an empty array so we should be good on that side as well.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I've uploaded a patch that does that for review. I'm provisionally marking this for 5.4, but again this needs review before being committed.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>42961.diff attached to Ticket #42961</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Sun, 01 Dec 2019 21:37:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42961/42961.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42961/42961.diff/1575236262287462</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Screenshot 2019-12-01 at 19.51.06.png attached to Ticket #48847</title>
      
        <dc:creator>jaapmarcus</dc:creator>

      <pubDate>Sun, 01 Dec 2019 19:09:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/48847/Screenshot%202019-12-01%20at%2019.51.06.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/48847/Screenshot%202019-12-01%20at%2019.51.06.png/1575227344986783</guid>
      <description>&lt;p&gt;
mov is selectable how ever the other file not.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #48847 (Gutenberg Editor Safari/OSX Unable to upload video files) created</title>
      
        <dc:creator>jaapmarcus</dc:creator>

      <pubDate>Sun, 01 Dec 2019 19:08:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48847</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48847/1575227299319523</guid>
      <description>&lt;p&gt;
In Safari 13.0.3 OSX 10.15.1 when uploading a new file I am only allowed to select mov files. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I know from the past probally WordPress limits Video by video/* due to a bug in this get only allowed *.mov instead any type else. The default / normal upload function works fine.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://paste.pics/3c9ed32bc2fe09063ffe9a5da7908cee"&gt;&lt;img src="https://paste.pics/3c9ed32bc2fe09063ffe9a5da7908cee" alt="https://paste.pics/3c9ed32bc2fe09063ffe9a5da7908cee" crossorigin="anonymous" title="https://paste.pics/3c9ed32bc2fe09063ffe9a5da7908cee" /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #48736 (Exclude PNG images from scaling after upload) reopened</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 01 Dec 2019 18:25:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48736#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48736#comment:11/1575224724633368</guid>
      <description>&lt;p&gt;
Reopen for 5.3.1.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #48736 (Exclude PNG images from scaling after upload) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 01 Dec 2019 18:24:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48736#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48736#comment:10/1575224672007905</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/46809" title="Upload: Exclude PNG images from scaling after uploading. Fixes a case ..."&gt;46809&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Upload: Exclude PNG images from scaling after uploading. Fixes a case where resizing a very large PNG may create a scaled image that has smaller dimensions but larger file size than the original.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/48736" title="#48736: defect (bug): Exclude PNG images from scaling after upload (closed: fixed)"&gt;#48736&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [46809]: Upload: Exclude PNG images from scaling after uploading. Fixes a case ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 01 Dec 2019 18:24:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/46809</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/46809/1575224670913043</guid>
      <description>&lt;p&gt;
Upload: Exclude PNG images from scaling after uploading. Fixes a case where resizing a very large PNG may create a scaled image that has smaller dimensions but larger file size than the original.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/48736" title="#48736: defect (bug): Exclude PNG images from scaling after upload (closed: fixed)"&gt;#48736&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #48736 (Exclude PNG images from scaling after upload) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 01 Dec 2019 17:54:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48736#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48736#comment:9/1575222891395265</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/48736#comment:7" title="Comment 7"&gt;rmens&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
On the front-end cluster the CPU load did not increase. This seems to be directly related to post-processing uploaded images. I wonder about the impact on large shared hosting platforms.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
IMHO it is a good idea to open another ticket with these concerns. True, in 5.3 there are two or three new large image sub-sizes being generated when the user uploads a (very) large image. This is done to prepare the image for "web use", and to better support large and high-density screens. Frankly I don't see a good workaround for now, the images need to be generated if we want the websites to look good.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It may be possible to use other command-line tools (on the server) to post-process images that are somewhat more efficient, but image processing is always very CPU and memory intense. It may eventually be possible to use js in the browser to "pre-process" images. That still needs better support and is in the planning stages.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In any case, having a place to explore more options and "compare notes" is a good idea :)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48736 (Exclude PNG images from scaling after upload) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 01 Dec 2019 17:41:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48736#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48736#comment:8/1575222092205460</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/48736#comment:7" title="Comment 7"&gt;rmens&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Disabling this for PNG seems like the right move. I however don't see a path ahead to ever make this work reliably for PNG.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right. Disabling the scaling of big PNGs is about all we can do in 5.3.1.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Apart from trying to enhance the actual post-processing, a possible enhancement in the future may be to further extend the context of how an image is going to be used when the user uploads it. This is currently done for "custom backgrounds" and "custom header", but perhaps a more general UI would be better.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48845 (unittest for wp_remote_fopen()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 01 Dec 2019 17:27:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48845#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48845#comment:1/1575221225769476</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48844 (Unit test for wp()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 01 Dec 2019 17:26:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48844#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48844#comment:1/1575221180290857</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #47430,​48843 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 01 Dec 2019 17:25:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=47430%2C48843</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=47430%2C48843/1575221110611830</guid>
      <description>duplicate: &lt;p&gt;
Thanks for the report, this was fixed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/45707" title="Database: Use a strict comparison for `has_filter()` check in ..."&gt;[45707]&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/47430" title="#47430: defect (bug): wp-db: Always adds a filter on every query (closed: fixed)"&gt;#47430&lt;/a&gt; for WordPress 5.3.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Tickets #26577,​48846 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 01 Dec 2019 17:23:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=26577%2C48846</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=26577%2C48846/1575220997285184</guid>
      <description>duplicate: &lt;p&gt;
Hi there, welcome to WordPress Trac!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks for the report, we're already tracking this issue in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26577" title="#26577: defect (bug): Unable to compare post with single revision (closed: wontfix)"&gt;#26577&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #48841 (Add missing doc and refactor code for REST API: ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 01 Dec 2019 17:20:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48841#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48841#comment:1/1575220824330878</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48074 (Remove work-arounds for unsupported PHP versions) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 01 Dec 2019 12:11:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48074#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48074#comment:17/1575202319088835</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/46808" title="Widgets: Remove `WP_Widget_Factory::$hashed_class_counts` property, ..."&gt;46808&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Widgets: Remove &lt;code&gt;WP_Widget_Factory::$hashed_class_counts&lt;/code&gt; property, unused since &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/46220" title="Code Modernization: Remove workarounds for `spl_object_hash()`.
The ..."&gt;[46220]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;spl_object_hash()&lt;/code&gt; function was introduced in PHP 5.2.0. As of PHP 5.3, the PHP SPL extension can no longer be disabled, so the &lt;code&gt;WP_Widget_Factory::hash_object()&lt;/code&gt; workaround was removed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/46220" title="Code Modernization: Remove workarounds for `spl_object_hash()`.
The ..."&gt;[46220]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/48074" title="#48074: task (blessed): Remove work-arounds for unsupported PHP versions (closed: fixed)"&gt;#48074&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [46808]: Widgets: Remove `WP_Widget_Factory::$hashed_class_counts` property, ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 01 Dec 2019 12:11:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/46808</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/46808/1575202317907844</guid>
      <description>&lt;p&gt;
Widgets: Remove &lt;code&gt;WP_Widget_Factory::$hashed_class_counts&lt;/code&gt; property, unused since &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/46220" title="Code Modernization: Remove workarounds for `spl_object_hash()`.
The ..."&gt;[46220]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;spl_object_hash()&lt;/code&gt; function was introduced in PHP 5.2.0. As of PHP 5.3, the PHP SPL extension can no longer be disabled, so the &lt;code&gt;WP_Widget_Factory::hash_object()&lt;/code&gt; workaround was removed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/46220" title="Code Modernization: Remove workarounds for `spl_object_hash()`.
The ..."&gt;[46220]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/48074" title="#48074: task (blessed): Remove work-arounds for unsupported PHP versions (closed: fixed)"&gt;#48074&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #40694 (dbDelta uses suppressed errors to detect table absence) updated</title>
      
        <dc:creator>gaupoit</dc:creator>

      <pubDate>Sun, 01 Dec 2019 08:38:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40694#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40694#comment:5/1575189494894270</guid>
      <description>&lt;p&gt;
Query Monitor tool will collect this errors and showing them while the plugin creates custom tables using dbDelta function. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48846 (Revision meta box is hidden when one revision) created</title>
      
        <dc:creator>ecairol</dc:creator>

      <pubDate>Sun, 01 Dec 2019 04:57:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48846</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48846/1575176275818841</guid>
      <description>&lt;p&gt;
When editing a post, if there's only 1 revision associated with the post, the meta box will be hidden. The cause of this is the condition being &amp;gt; instead of &amp;gt;=&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
On file: wp-admin/includes/meta-boxes.php&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="c1"&gt;// We should aim to show the revisions meta box only when there are revisions.
&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$revisions&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
If the aim is to show the box when there are revisions, even one, then the condition should have been $revisions &amp;gt;= 1.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If you set your wp-config to store only 1 single revision per post, the meta-box won't display.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I read the first step is opening this ticket, however I'm more than happy to open a PR with a fix. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>48845.patch attached to Ticket #48845</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Sun, 01 Dec 2019 01:43:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/48845/48845.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/48845/48845.patch/1575164588222104</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #48845 (unittest for wp_remote_fopen()) created</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Sun, 01 Dec 2019 01:42:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48845</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48845/1575164534400718</guid>
      <description>&lt;p&gt;
just a missing unii test&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>48844.patch attached to Ticket #48844</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Sun, 01 Dec 2019 00:41:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/48844/48844.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/48844/48844.patch/1575160912843723</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #48844 (Unit test for wp()) created</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Sun, 01 Dec 2019 00:41:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48844</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48844/1575160879392383</guid>
      <description>&lt;p&gt;
Just a simple test for the wp() function in functions.php&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It not posable to test fully as the WP object has already been created by the test framework &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item>
   </channel>
</rss>