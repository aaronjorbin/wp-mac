<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #37498 (WYSIWYG Error?) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 10 Oct 2016 23:56:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37498#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37498#comment:9/1476143786304776</guid>
      <description>&lt;p&gt;
This sounds like a possible autop bug, however I still cannot reproduce it in the "main" editor on the Edit Post page. Inserting the above example in the Text editor:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;hr /&amp;gt;
&amp;lt;a class="link--download" href="http://....pdf"&amp;gt;Bericht: Packaging&amp;lt;/a&amp;gt; (Quelle)
&amp;lt;a class="link--download" href="http://....pdf"&amp;gt;Empfehlung: Packaging&amp;lt;/a&amp;gt; (Quelle)
&lt;/pre&gt;&lt;p&gt;
and publishing the post (with or without switching to the Visual editor first). I get this on the front-end:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;div class="entry-content"&amp;gt;
&amp;lt;hr /&amp;gt;
&amp;lt;p&amp;gt;&amp;lt;a class="link--download" href="http://....pdf"&amp;gt;Bericht: Packaging&amp;lt;/a&amp;gt; (Quelle)&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;&amp;lt;a class="link--download" href="http://....pdf"&amp;gt;Empfehlung: Packaging&amp;lt;/a&amp;gt; (Quelle)&amp;lt;/p&amp;gt;
	&amp;lt;/div&amp;gt;&amp;lt;!-- .entry-content --&amp;gt;
&lt;/pre&gt;&lt;p&gt;
All is working as expected. This will need more detailed steps on how to reproduce. Also, where do you insert the example content; where do you see the output; does still happen in WordPress 4.6?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37936 (TinyMCE special character button does not insert non-breaking spaces) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 23:32:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37936#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37936#comment:3/1476142332649130</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-tinymce by azaozz. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-tinymce/p1476142330000031"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38185 (Improve the post "locked indicator" accessibility) updated</title>
      
        <dc:creator>mariovalney</dc:creator>

      <pubDate>Mon, 10 Oct 2016 22:42:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38185#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38185#comment:15/1476139344296327</guid>
      <description>&lt;p&gt;
@mariusvetrici
&lt;/p&gt;
&lt;p&gt;
It's OK here &lt;a class="ext-link" href="https://s21.postimg.org/wc7aumufr/display_none.png"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://s21.postimg.org/wc7aumufr/display_none.png&lt;/a&gt; .
Maybe you should use &lt;strong&gt;SCRIPT_DEBUG&lt;/strong&gt; to &lt;code&gt;wp-admin/css/list-tables.css&lt;/code&gt; be used.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38271 (`wp-remove-post-lock` Ajax request generates notice in ...) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 10 Oct 2016 22:41:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38271#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38271#comment:4/1476139286693077</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38772" title="Editor: do not send the request for releasing the post lock on unload ..."&gt;38772&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Editor: do not send the request for releasing the post lock on unload when post_ID or active_post_lock is missing.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props dlh, adamsilverstein.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38271" title="#38271: defect (bug): `wp-remove-post-lock` Ajax request generates notice in ... (closed: fixed)"&gt;#38271&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38772]: Editor: do not send the request for releasing the post lock on unload ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 10 Oct 2016 22:41:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38772</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38772/1476139286213588</guid>
      <description>&lt;p&gt;
Editor: do not send the request for releasing the post lock on unload when post_ID or active_post_lock is missing.
&lt;/p&gt;
&lt;p&gt;
Props dlh, adamsilverstein.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38271" title="#38271: defect (bug): `wp-remove-post-lock` Ajax request generates notice in ... (closed: fixed)"&gt;#38271&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38271 (`wp-remove-post-lock` Ajax request generates notice in ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 10 Oct 2016 22:35:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38271#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38271#comment:3/1476138914590659</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
The attached patch would return before the Ajax request occurs in post.js
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right, the first thing &lt;code&gt;wp_ajax_wp_remove_post_lock()&lt;/code&gt; does is to return early when either post_ID or active_post_lock is empty. Can do the same in JS and not send the request.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38276 ("Is thing public/accessible" API) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Mon, 10 Oct 2016 22:08:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38276#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38276#comment:2/1476137301960641</guid>
      <description>&lt;p&gt;
One way to prevent duplication between query classes (&lt;code&gt;WP_Query&lt;/code&gt;, for example), and this API, would be to break each visibility restriction rule out into its own class. This class would have one method that could modify the query, and another one that could analyze a given object and tell whether it was publicly accessible (for the &lt;code&gt;is_thing_accessible()&lt;/code&gt; function/API).
&lt;/p&gt;
&lt;p&gt;
Well, OK, I guess that doesn't necessarily reduce duplication, but it does centralize that duplication of logic that has to be applied differently in different circumstances. So when updating the logic for one of the circumstances (like a query), we'd be hard-pressed to forget to update the logic for the other scenario (object check) accordingly.
&lt;/p&gt;
&lt;p&gt;
There are then other cool possibilities, like having each rule provide a human-readable description of itself (another method on the rule object). Then we could tell a user why they couldn't view a particular post using this information. (If a plugin added an additional rule, that would automatically be incorporated.) Another use-case would be telling an admin that even though they can view a particular object, not everybody can, only users who this, this, and this. Though with that example, I guess I'm talking about this not being a user-agnostic boolean check again.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38280.diff attached to Ticket #38280</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Mon, 10 Oct 2016 21:58:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38280/38280.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38280/38280.diff/1476136704280801</guid>
      <description>&lt;p&gt;
Stores object type specific counts in term meta when term counts are updated. Adds &lt;code&gt;wp_get_term_count_for_object_type()&lt;/code&gt; to retrieve term counts.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38280 (Make term count for a specific object type available) created</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Mon, 10 Oct 2016 21:54:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38280</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38280/1476136455836160</guid>
      <description>&lt;p&gt;
Term count is the total number of relationships with no context of the object types the relationships belong to.
&lt;/p&gt;
&lt;p&gt;
Currently, the best way to determine the count of a term for a specific object type is to run a &lt;code&gt;WP_Query&lt;/code&gt; with a &lt;code&gt;WP_Tax_Query&lt;/code&gt; for that term.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$term_count_query = new WP_Query( array(
        'post_type' =&amp;gt; 'some-post-type',
        'tax_query' =&amp;gt; array(
                array(
                        'taxonomy' =&amp;gt; 'some-taxonomy',
                        'field' =&amp;gt; 'slug',
                        'terms' =&amp;gt; array( 'term-slug' )
                ),
        ),
        'posts_per_page' =&amp;gt; 1,
) );
$term_count_for_post_type = $term_count_query-&amp;gt;found_posts;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Now that term meta is in core, it would be great if these counts were stored in term meta for easy access.
&lt;/p&gt;
&lt;p&gt;
To start, these counts could be available through a function. To go a step further, an argument could be added to &lt;code&gt;get_terms()&lt;/code&gt; and other functions to filter the term counts and reflect the object types terms are being grabbed for.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Mon, 10 Oct 2016 21:48:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:101</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:101/1476136113661895</guid>
      <description>&lt;p&gt;
@bradyvercher that last patch has UI - woohoo! I checked back and it seems to be the previous patch. All good as it's really cool to see where we are at now. Thanks so much for all your work on this.
&lt;/p&gt;
&lt;p&gt;
Here's a record visually for those following along:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/bvLVW-YdTF.gif"&gt;&lt;img src="https://cldup.com/bvLVW-YdTF.gif" alt="https://cldup.com/bvLVW-YdTF.gif" crossorigin="anonymous" title="https://cldup.com/bvLVW-YdTF.gif" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
A few questions:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Delete seemed to be missing, now if I'm correct this should show on opening the search panel. Is there any way to get the 'x' like mock? Or at least to find some middle option?
&lt;/li&gt;&lt;li&gt;Are we fixed to the page having to be top element? Or can that iterate?
&lt;/li&gt;&lt;li&gt;Can the 'add sections' button be disabled when the panel is out?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
There are some adjustments we can work on beyond that, but those hitches would be great to get done.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38279 (REST API Unit Test Docs: Remove reference to the plugin) closed</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Mon, 10 Oct 2016 21:48:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38279#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38279#comment:2/1476136087386010</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38771" title="REST API: Remove reference to the plugin in infrastructure activation ..."&gt;38771&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Remove reference to the plugin in infrastructure activation test.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also adds class exists checks for WP_REST_Request and WP_REST_Response.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props kraftbj.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38279" title="#38279: defect (bug): REST API Unit Test Docs: Remove reference to the plugin (closed: fixed)"&gt;#38279&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38771]: REST API: Remove reference to the plugin in infrastructure activation ...</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Mon, 10 Oct 2016 21:48:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38771</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38771/1476136082842519</guid>
      <description>&lt;p&gt;
REST API: Remove reference to the plugin in infrastructure activation test.
&lt;/p&gt;
&lt;p&gt;
Also adds class exists checks for WP_REST_Request and WP_REST_Response.
&lt;/p&gt;
&lt;p&gt;
Props kraftbj.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38279" title="#38279: defect (bug): REST API Unit Test Docs: Remove reference to the plugin (closed: fixed)"&gt;#38279&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>38279.2.diff attached to Ticket #38279</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Mon, 10 Oct 2016 21:47:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38279/38279.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38279/38279.2.diff/1476136031888651</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38279 (REST API Unit Test Docs: Remove reference to the plugin) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Mon, 10 Oct 2016 21:46:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38279#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38279#comment:1/1476136007249114</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22363 (Accents in attachment filenames should be sanitized) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Mon, 10 Oct 2016 21:38:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22363#comment:95</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22363#comment:95/1476135485821639</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22363#comment:92" title="Comment 92"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The latest patch does what it says it does, but I'm actually having a hard time reproducing this on Safari 10 (macOS Sierra), so I can't tell for sure. Images with diacritics are displayed just fine in the media library and the front end. The only problem Safari has is with the permalinks, i.e.. &lt;code&gt;example.com/aaâãäåçeeêëiiîïñooôõöuuûüyÿ/&lt;/code&gt; works in Safari, but in the other browsers it's &lt;code&gt;example.com/aaa%CC%82a%CC%83a%CC%88a%CC%8Ac%CC%A7eee%CC%82e%CC%88iii%CC%82i%CC%88n%CC%83ooo%CC%82o%CC%83o%CC%88uuu%CC%82u%CC%88yy%CC%88/&lt;/code&gt;, which is still a problem with the current patch.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I also had a hard time reproducing it until I realized that the upload had to happen with a browser other than Safari, as a believe @gitlost is referencing above. Once I uploaded with Chrome, then followed up with a test on Safari, I saw the bug.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20973 (date_i18n() produces invalid output for shorthand formats) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 10 Oct 2016 21:32:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20973#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20973#comment:40/1476135150597106</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
See also &lt;a class="ext-link" href="https://github.com/WordPress/twentyseventeen/issues/127"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/twentyseventeen/issues/127&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/20973/Unpack_shorthand_date_formats1.patch" title="Attachment 'Unpack_shorthand_date_formats1.patch' in Ticket #20973"&gt;Unpack_shorthand_date_formats1.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/20973/Unpack_shorthand_date_formats1.patch" title="Download"&gt;​&lt;/a&gt; looks like a simple fix for this. But I think we should replace it with &lt;code&gt;'Y-m-d\TH:i:sP'&lt;/code&gt; and not with the value of the constants.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27555 (Make tag post meta box more accessible) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 10 Oct 2016 21:22:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27555#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27555#comment:24/1476134568047009</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Refreshed patch. As per today's discussion during the accessibility weekly meeting on Slack, changes the term "Item" used in the new strings in "Term". Also, some renaming to better reflect the terms are not "deleted" and instead they're "removed". Looks good to me and any testing (also on Press This) is very welcome!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27555.3.diff attached to Ticket #27555</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 10 Oct 2016 21:11:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27555/27555.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27555/27555.3.diff/1476133914746848</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>bradyvercher</dc:creator>

      <pubDate>Mon, 10 Oct 2016 21:05:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:100</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:100/1476133547305236</guid>
      <description>&lt;p&gt;
@pento Thanks! The change in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37974/37974.2.diff" title="Attachment '37974.2.diff' in Ticket #37974"&gt;37974.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37974/37974.2.diff" title="Download"&gt;​&lt;/a&gt; is pretty dang cool. Handling sections like that hadn't even crossed my mind, but I really like that approach.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think it's worth investigating having &lt;a class="ext-link" href="http://example.com/about/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com/about/&lt;/a&gt; redirected to &lt;a class="ext-link" href="http://example.com/#about"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com/#about&lt;/a&gt;, rather than #post-65. This is a bit trickier, of course, but much nicer.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I waffled on that myself. I prefer the more readable format, but I see the post ID used as the anchor more often. The only thing that comes to mind is to introduce something like &lt;code&gt;the_anchor()&lt;/code&gt; or &lt;code&gt;the_html_id()&lt;/code&gt; to let core control the output for the HTML &lt;code&gt;id&lt;/code&gt; attribute.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37974#comment:97" title="Comment 97"&gt;@karmatosed&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
It looks like you might be missing some of the styles. Those move up/down arrows should definitely be showing up as well as a button to remove pages. I could have botched the patch, but it looks like everything should be there. Depending on your setup, you might need to run the Grunt task?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It seems that the page template always has to be the top content. Is that the case?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right now that's the way it's set up since sections are appended to the front page, which is consistent with the way the front page currently works.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There also is a little odd behaviour where if I don't search I can click 'x' on search and loose all pages shown.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I fixed that up in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37974/37974.3.diff" title="Attachment '37974.3.diff' in Ticket #37974"&gt;37974.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37974/37974.3.diff" title="Download"&gt;​&lt;/a&gt;, which also includes these updates based on the feedback from &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37974#comment:99" title="Comment 99"&gt;@davidakennedy&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A divider between existing front page controls and the new section control
&lt;/li&gt;&lt;li&gt;The front page and page for posts are excluded from search results
&lt;/li&gt;&lt;li&gt;Added a &lt;code&gt;front-page-section&lt;/code&gt; class in &lt;code&gt;post_class()&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Aside from further tightening up the UI, I think that leaves pretty anchors, comments, and potentially making the preview instantly update when reordering sections instead of doing a refresh.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38279.diff attached to Ticket #38279</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Mon, 10 Oct 2016 21:03:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38279/38279.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38279/38279.diff/1476133382651091</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38279 (REST API Unit Test Docs: Remove reference to the plugin) created</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Mon, 10 Oct 2016 21:02:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38279</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38279/1476133321167317</guid>
      <description>&lt;p&gt;
In the unit tests for the REST API infrastructure, a mention the "the plugin should be installed and activated", referring to when the infrastructure was in the feature plugin. Since that is merged to Core, the reference is outdated.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>37974.3.diff attached to Ticket #37974</title>
      
        <dc:creator>bradyvercher</dc:creator>

      <pubDate>Mon, 10 Oct 2016 20:50:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37974/37974.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37974/37974.3.diff/1476132656981113</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #30937 (Add Customizer state persistence in changesets (formerly “transactions”)) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 10 Oct 2016 20:49:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30937#comment:71</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30937#comment:71/1476132569837039</guid>
      <description>&lt;p&gt;
Latest updates: &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/161/files/b582a43..6bf949b"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/161/files/b582a43..6bf949b&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/161/commits/0c1b241"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;0c1b241&lt;/a&gt; Fix phpdoc in \WP_Customize_Manager::validate_setting_values()
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/161/commits/645d4df"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;645d4df&lt;/a&gt; Ensure changeset context (UUID, post ID, data) are properly set during publishing
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/161/commits/b4d5fd4"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;b4d5fd4&lt;/a&gt; Add comment explaining why JSON_UNESCAPED_SLASHES is used
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/161/commits/0a5c943"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;0a5c943&lt;/a&gt; Ensure core settings are registered before do_action(customize_register)
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/161/commits/cf9e605"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;cf9e605&lt;/a&gt; Use refresh transport instead of postMessage if previewer no longer alive; remove keep-alive failure from causing navigation to previous URL and instead set new previewerAlive state; move interval magic numbers to settings.timeouts
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/161/commits/6bf949b"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;6bf949b&lt;/a&gt; Preserve history state when calling replaceState to update customize_changeset_uuid param; improve logic for detecting URL changes by comparing query params objects
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38276 ("Is thing public/accessible" API) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Mon, 10 Oct 2016 20:44:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38276#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38276#comment:1/1476132298069971</guid>
      <description>&lt;p&gt;
Another thing that I'm &lt;em&gt;not&lt;/em&gt; proposing we do here is change the blacklist-style philosophy of WordPress where everything is public by default, unless restricted. I'd just like to see us centralize the code that restricts things from being visible, so that plugins can more easily check that.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
I should note that the &lt;code&gt;read&lt;/code&gt; capability is sort of an outlier in the caps API. All of the other core capabilities, as far as I can tell, are related create/update/delete user actions. It is only with posts that the capability API intersects with object visibility.
&lt;/p&gt;
&lt;p&gt;
Again, I'm not trying to change that with this ticket, but I do wonder whether long-term we should reconsider whether the &lt;code&gt;read&lt;/code&gt; capability should be a capability at all. Of course, an API like the one proposed here would have to exist before the &lt;code&gt;read&lt;/code&gt; capability could ever be deprecated or anything like that, much less removed. This ticket &lt;em&gt;could&lt;/em&gt; be a first step in that direction. But again, it doesn't have to be, I guess.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
To fill in some more detail about what I envision in the &lt;code&gt;is_thing_accessible()&lt;/code&gt; function, when I first created this ticket I was envisioning it as accepting an object ID (and I guess what type of object it was, though I left that out of the example function signatures given). Possibly then it would just wrap a filter, passing it these arguments and filtering whether the object was accessible, which would be &lt;code&gt;true&lt;/code&gt; by default. Then the restrictions for each object type would be provided by hooking into this filter.
&lt;/p&gt;
&lt;p&gt;
Now, when I created the ticket, I was kind of envisioning the &lt;code&gt;is_thing_accessible()&lt;/code&gt; function automatically working based on the current user, kind of as a direct complement to &lt;code&gt;current_user_can()&lt;/code&gt;. So it would also grab the current user and also pass that in to the filter. The &lt;code&gt;is_thing_accessible_for_user()&lt;/code&gt; would then compliment the &lt;code&gt;user_can()&lt;/code&gt; function, as it were, and allow you to pass the user ID in.
&lt;/p&gt;
&lt;p&gt;
Just now though, I was wondering whether that is the correct approach. I suppose that really the user is irrelevant if we are just checking whether the object is public. If the object is public, then that means anyone can view it. It doesn't matter who the user is. So if we limit the API to only check if the object is totally public, the current user shouldn't be taken into account.
&lt;/p&gt;
&lt;p&gt;
In that case the API would compliment the capability API by providing a way to check if something is publicly visible to non-logged-in users, but might not actually replace the &lt;code&gt;read&lt;/code&gt; capability, because it wouldn't provide granular checks for different roles/capabilities of logged-in users. And I suppose that maybe that is only right.
&lt;/p&gt;
&lt;p&gt;
So in other words, this would be practical logic:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$can_view = (
    is_thing_public( 'post', $post_id )
    || ( is_user_logged_in() &amp;amp;&amp;amp; current_user_can( 'read_post', $post_id ) )
);
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>31383.diff attached to Ticket #31383</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Mon, 10 Oct 2016 20:33:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31383/31383.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31383/31383.diff/1476131631342031</guid>
      <description>&lt;p&gt;
Applies WP_Tax_Query support to WP_User_Query, no UX.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #31383 (Add WP_Tax_Query support to WP_User_Query) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Mon, 10 Oct 2016 20:33:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31383#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31383#comment:11/1476131590038672</guid>
      <description>&lt;p&gt;
Incoming updated patch that will apply cleanly to trunk. This patch adds taxonomy query support to user queries with no UX. It includes a few new unit tests, but since this is the first time writing unit tests, I probably missed a bunch.
&lt;/p&gt;
&lt;p&gt;
While refreshing the patch, I realized that there is one main issue we will need to solve in order to make this feature work. Term relationships are based on object IDs. But currently, the object ID is always assumed to be a post. This is an issue because users can have the same ID as posts since they are stored in separate tables. Without addressing this issue, taxonomy support for users can not be added for taxonomies that are not exclusive to users.
&lt;/p&gt;
&lt;p&gt;
Example: if there is a post with an ID of 3, and a user with an ID of 3, calling &lt;code&gt;wp_set_object_terms()&lt;/code&gt; will assign the term to both, regardless of the intent.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/38265" title="#38265: feature request: Add term_relationship_id column to wp_term_relationships (new)"&gt;#38265&lt;/a&gt; was recently opened, and this could be one potential way to fix the issue. Not sure if there are any other ideas how to accomplish this without altering tables.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38278 (Only query taxonomies assigned to the post types being queried) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Mon, 10 Oct 2016 20:32:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38278#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38278#comment:2/1476131521521422</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38268 (WP_Comment_Query Pagination) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Mon, 10 Oct 2016 20:31:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38268#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38268#comment:2/1476131508015488</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38268 (WP_Comment_Query Pagination) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Mon, 10 Oct 2016 20:31:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38268#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38268#comment:1/1476131499629529</guid>
      <description>&lt;p&gt;
@wordpresssites Howdy! &lt;code&gt;WP_Comment_Query&lt;/code&gt; does have the &lt;code&gt;number&lt;/code&gt; and &lt;code&gt;offset&lt;/code&gt; parameters, and the &lt;code&gt;$max_num_pages&lt;/code&gt; property which should give you what you need to build custom pagination functions.  Would that fit your use case?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38278 (Only query taxonomies assigned to the post types being queried) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Mon, 10 Oct 2016 20:31:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38278#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38278#comment:1/1476131493127597</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38278 (Only query taxonomies assigned to the post types being queried) created</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Mon, 10 Oct 2016 20:28:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38278</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38278/1476131333282558</guid>
      <description>&lt;p&gt;
While working on &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/31383" title="#31383: feature request: Add WP_Tax_Query support to WP_User_Query (new)"&gt;#31383&lt;/a&gt; (Add &lt;code&gt;WP_Tax_Query&lt;/code&gt; support to &lt;code&gt;WP_User_Query&lt;/code&gt;), it was brought up that taxonomy queries do not check to see whether the requested taxonomies are registered to the requested post type.
&lt;/p&gt;
&lt;p&gt;
Opening this ticket to discuss further. Should taxonomies always match the queried &lt;code&gt;post_type&lt;/code&gt;?
&lt;/p&gt;
&lt;p&gt;
From @boonebgorges on the other ticket:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Here's a way to frame the issue: are we likely to confuse developers if we allow (ie, don't throw errors for) queries like &lt;code&gt;get_users( ... 'tax_query' =&amp;gt; ... 'taxonomy=post_tag' )&lt;/code&gt;? Or &lt;code&gt;get_posts( ... 'tax_query' =&amp;gt; ... 'taxonomy=some_user_taxonomy' )&lt;/code&gt;? Or maybe these queries will just always end up empty? We should think through the possible confusions (or, maybe, lack thereof).
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>25239.4.patch attached to Ticket #25239</title>
      
        <dc:creator>desmith</dc:creator>

      <pubDate>Mon, 10 Oct 2016 20:17:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/25239/25239.4.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/25239/25239.4.patch/1476130665338632</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #25239 ($_SERVER['SERVER_NAME'] not a reliable when generating email host names) updated</title>
      
        <dc:creator>desmith</dc:creator>

      <pubDate>Mon, 10 Oct 2016 20:16:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25239#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25239#comment:45/1476130609954256</guid>
      <description>&lt;p&gt;
Okay, let's try this again.
&lt;/p&gt;
&lt;p&gt;
This patch adds a new function in pluggable.php, &lt;code&gt;get_current_domain()&lt;/code&gt;. Does what it says on the tin, returns the current blog domain name, with leading 'www.' stripped. It also modifies a few places where emails are sent, to use that function instead of &lt;code&gt;$_SERVER['SERVER_NAME']&lt;/code&gt;, notably in the password reset email-send, which fixes the issue with wp-cli password reset emails.
&lt;/p&gt;
&lt;p&gt;
There is a possible side effect. Since I replaced &lt;code&gt;$_SERVER['SERVER_NAME']&lt;/code&gt; in several email-related places, anyone that's depending on their emails' From: headers looking like support@… instead of support@theirsite will be disappointed. I could un-patch those instances, of course, but I think this behavior is cleaner overall.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25239 ($_SERVER['SERVER_NAME'] not a reliable when generating email host names) updated</title>
      
        <dc:creator>desmith</dc:creator>

      <pubDate>Mon, 10 Oct 2016 19:59:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25239#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25239#comment:44/1476129558578862</guid>
      <description>&lt;p&gt;
Please ignore the above patch (which doesn't fix all the cases of this that I've encountered), in lieu of another one coming shortly. Apologies.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20491 (Introduce some JavaScript i18n functions) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Mon, 10 Oct 2016 19:55:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20491#comment:53</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20491#comment:53/1476129352970990</guid>
      <description>&lt;p&gt;
I'm not sure that the escaping functions really make sense in JS. They don't really have a practical use, as far as I can see. Unless you are building HTML from strings via concatenation, which is generally considered a bad practice, I think, due to the greater potential for security issues.
&lt;/p&gt;
&lt;p&gt;
In other words, I'd never do this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="nx"&gt;$el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;div title='&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;wp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;i18n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;esc_attr__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Hello World'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;'"&amp;gt;&amp;lt;/div&amp;gt;'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Instead I'd do this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="nx"&gt;$el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;'&lt;/span&gt; &lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'title'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;wp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;i18n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Hello World'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
No need to use &lt;code&gt;esc_attr__()&lt;/code&gt;. Of course, the other way is just as safe if the escaping function is used, but it encourages developers to follow a pattern that in other circumstances could be very bad. (Especially considering that there isn't a generic &lt;code&gt;esc_html()&lt;/code&gt; or &lt;code&gt;esc_attr()&lt;/code&gt;.)
&lt;/p&gt;
&lt;p&gt;
Otherwise, really looking forward to this. :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #37291,​38277 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 10 Oct 2016 19:40:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=37291%2C38277</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=37291%2C38277/1476128444500202</guid>
      <description>duplicate: &lt;p&gt;
Hello @claudiulodro, welcome to Trac!
&lt;/p&gt;
&lt;p&gt;
Thanks for your report, we're already tracking this issue in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37291" title="#37291: defect (bug): Check for WP_Error before echo in the_tags() (closed: fixed)"&gt;#37291&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #38277 (the_tags() will fatal error if get_the_tag_list() fails) created</title>
      
        <dc:creator>claudiulodro</dc:creator>

      <pubDate>Mon, 10 Oct 2016 19:37:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38277</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38277/1476128263578584</guid>
      <description>&lt;p&gt;
On failure, get_the_tag_list (used by the_tags() ) will return a WP_Error object. the_tags() has no checking for this WP_Error object, so it will throw a fatal error when it tries to echo the WP_Error object that get_the_tag_list returned. My proposed solution is as follows:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;the_tags&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$before&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$sep&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;', '&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$after&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nv"&gt;$before&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="nv"&gt;$before&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Tags: '&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$tag_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_the_tag_list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$before&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$sep&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$after&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;is_wp_error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$tag_list&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$tag_list&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
I will attach a formal patch for this soon as I have a chance.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #25239 ($_SERVER['SERVER_NAME'] not a reliable when generating email host names) updated</title>
      
        <dc:creator>desmith</dc:creator>

      <pubDate>Mon, 10 Oct 2016 19:19:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25239#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25239#comment:43/1476127149126180</guid>
      <description>&lt;p&gt;
This patch combines @jesin's "replace it in a bunch of spots" and @mensmaximus's "add a new function for this" techniques. I omitted the parameters for get_current_domain() because there's only one current domain at any given time. First patch, probably did everything wrong, et cetera.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>25239.3.patch attached to Ticket #25239</title>
      
        <dc:creator>desmith</dc:creator>

      <pubDate>Mon, 10 Oct 2016 19:18:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/25239/25239.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/25239/25239.3.patch/1476127134828571</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38275 (Single wildcard character in .htaccess requests any page) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Mon, 10 Oct 2016 19:17:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38275#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38275#comment:2/1476127062429134</guid>
      <description>&lt;p&gt;
An opportunity to populate a related, disregarded ticket: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36420" title="#36420: enhancement: A more forgiving redirect guesser (new)"&gt;#36420&lt;/a&gt; (A more forgiving redirect guesser)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38275 (Single wildcard character in .htaccess requests any page) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 10 Oct 2016 19:13:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38275#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38275#comment:1/1476126799838125</guid>
      <description>&lt;p&gt;
Hi @martinthehorrible, welcome to Trac! Thanks for the report.
&lt;/p&gt;
&lt;p&gt;
This is actually a feature introduced a long time ago, WordPress is trying to guess the correct permalink:
&lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/redirect_guess_404_permalink/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/reference/functions/redirect_guess_404_permalink/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
If you're looking for a way to disable it, there's a ticket for that: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/16557" title="#16557: enhancement: Ability to disable redirect_guess_404_permalink() (new)"&gt;#16557&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38182 (rest_url does not support index permalinks) updated</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Mon, 10 Oct 2016 19:05:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38182#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38182#comment:7/1476126337277368</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I added/reworked the unit tests to use the phpunit helper function for setting permalinks to ensure the various pieces of the $wp_rewrite class are refreshed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38182.2.diff attached to Ticket #38182</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Mon, 10 Oct 2016 19:04:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38182/38182.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38182/38182.2.diff/1476126271201442</guid>
      <description>&lt;p&gt;
same as previous, adding unit tests
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>davidakennedy</dc:creator>

      <pubDate>Mon, 10 Oct 2016 19:03:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:99</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:99/1476126218565187</guid>
      <description>&lt;p&gt;
First up, thank you @bradyvercher for creating this patch. It's really neat to play with and provides a real foundation to move forward on in a more confident way. And thanks to @pento for helping improve it.
&lt;/p&gt;
&lt;p&gt;
I'm going to put the code feedback aside for now, because I think the biggest reason a prototype was needed was to see how this felt when using it. Here's some feedback along those lines:
&lt;/p&gt;
&lt;p&gt;
I really like all of this being in the Static Front Page section rather than a separate panel. I know that potentially locks this into less flexibility and less space on screen, but I do like seeing it all there in one shot. Like @karmatosed, I'd like to see some better visual separation between the old UI and the new sections UI, plus her other feedback mentioned.
&lt;/p&gt;
&lt;p&gt;
From a themer's perspective:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;My favorite thing about this is the fact that it doesn't need anything beyond the &lt;code&gt;add_theme_support&lt;/code&gt; line. It's as easy for themers as it could be for users, I think.
&lt;/li&gt;&lt;li&gt;We'd probably want to filter out the pages being used for the front page and posts page so they can't be added as a section.
&lt;/li&gt;&lt;li&gt;From a styling perspective, it might be a good thing to add a class to &lt;code&gt;post_class&lt;/code&gt; for pages displayed in the loop as a section on the front page. That way, hooking in stylistically becomes one CSS class versus two.
&lt;/li&gt;&lt;li&gt;How should comments be handled? It's a bit weird for the comment form to be allowed on pages used as sections because then you'd have multiple comment forms on the front page.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I feel like this is headed in the right direction, and I'm excited to see the iterations of it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23870 (Filter Glyph for Comment Required Fields) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 10 Oct 2016 19:02:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23870#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23870#comment:20/1476126142136739</guid>
      <description>&lt;p&gt;
Related: &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/16206" title="#16206: defect (bug): Comment text not marked as required (assigned)"&gt;#16206&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16206 (Comment text not marked as required) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 10 Oct 2016 19:01:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16206#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16206#comment:39/1476126093102580</guid>
      <description>&lt;p&gt;
Related: &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/23870" title="#23870: enhancement: Filter Glyph for Comment Required Fields (assigned)"&gt;#23870&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27555 (Make tag post meta box more accessible) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 18:31:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27555#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27555#comment:23/1476124298337015</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1476124295002020"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26601 (Inappropriate content in headings on admin screens) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 18:25:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26601#comment:94</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26601#comment:94/1476123920203062</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1476123918002005"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38156 (Customizer Previously uploaded header images disappear on focus) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 18:00:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38156#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38156#comment:3/1476122410312558</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1476122405001933"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37727 (Allow for customize control notifications to have extensible templates) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:58:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37727#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37727#comment:8/1476122312807655</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Per today's customize chat, we can safely switch to unescaped notification output, eliminating the immediate need for this. However, extensible templates might still be useful in some cases, so we'll reconsider in a future release.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38185 (Improve the post "locked indicator" accessibility) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:54:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38185#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38185#comment:14/1476122056141826</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1476122054001918"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27403 (Improve UI for linking areas of Customizer preview to corresponding ...) updated</title>
      
        <dc:creator>sirbrillig</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:51:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27403#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27403#comment:36/1476121904382026</guid>
      <description>&lt;p&gt;
Status update for the patch:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Trying to figure out how to get &lt;code&gt;partial.showControl()&lt;/code&gt; to work with a menu (currently does nothing).
&lt;/li&gt;&lt;li&gt;Also noticed a bug (actually noticed by @westonruter in the plugin repo &lt;a class="ext-link" href="https://github.com/Automattic/customize-direct-manipulation/issues/23#issuecomment-251543800"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/Automattic/customize-direct-manipulation/issues/23#issuecomment-251543800&lt;/a&gt; ) where partials do not call their &lt;code&gt;ready()&lt;/code&gt; method when first added.
&lt;/li&gt;&lt;li&gt;Experimenting with injecting the icons directly to the elements in the DOM (mostly working!).
&lt;/li&gt;&lt;li&gt;Need to find/make an event that is triggered when a partial is removed so the associated icon can be removed.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Sorry for my slowness here. I'm not super-familiar with the selective refresh code and the panel focusing code. If anyone has any help to offer on the above, please let me know.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37727 (Allow for customize control notifications to have extensible templates) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:44:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37727#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37727#comment:7/1476121459851351</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1476121457001930"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35210 (Add notification area to Customizer) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:42:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35210#comment:94</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35210#comment:94/1476121322630228</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1476121320001924"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37335 (Standardized API for themes to add info/links to the customizer) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:41:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37335#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37335#comment:15/1476121274266201</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1476121271001921"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38263 (Color picker: add a hue-only mode) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:39:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38263#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38263#comment:1/1476121173139906</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1476121170001917"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38172 (Enable Video Headers in Custom Headers) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:38:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38172#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38172#comment:21/1476121104307095</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1476121102001915"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:38:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:98</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:98/1476121091411454</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1476121088001913"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27403 (Improve UI for linking areas of Customizer preview to corresponding ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:37:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27403#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27403#comment:35/1476121052872066</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by jeffpaul. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1476121049001910"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23870 (Filter Glyph for Comment Required Fields) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:34:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23870#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23870#comment:19/1476120873895624</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Attached a version with the argument, just in case, so we could choose from both options :)
&lt;/p&gt;
&lt;p&gt;
I'm ambivalent at the moment. Most themes only have one comment form, so the argument seems cleaner.
&lt;/p&gt;
&lt;p&gt;
On the other hand, if a theme has more than one form, and/or utilizes other &lt;code&gt;comment_form_*&lt;/code&gt; filters, the filter would probably make more sense.
&lt;/p&gt;
&lt;p&gt;
Moving to the milestone to make a decision. I18N is not the main part of the ticket though, so moving back to the Comments component.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:31:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:82</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:82/1476120716158243</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1476120714001866"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28536 (Add browser history and deep linking for navigation in Customizer preview) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:29:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28536#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28536#comment:39/1476120573940485</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1476120571001887"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38164 (Customize: assign static front page and posts page to new pages) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:26:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38164#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38164#comment:5/1476120372273209</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1476120369001879"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37331 (New site form has non-required fields that have to be filled in) updated</title>
      
        <dc:creator>rianrietveld</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:16:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37331#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37331#comment:11/1476119806044875</guid>
      <description>&lt;p&gt;
Discussion about how to indicate the required field at:
&lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1476119464001821"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/accessibility/p1476119464001821&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23870.5.alt.patch attached to Ticket #23870</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:15:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23870/23870.5.alt.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23870/23870.5.alt.patch/1476119726777514</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37331 (New site form has non-required fields that have to be filled in) updated</title>
      
        <dc:creator>rianrietveld</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:14:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37331#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37331#comment:10/1476119642384181</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35395 (Provide a better gateway for code-based theme customizations with the ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:12:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35395#comment:63</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35395#comment:63/1476119533909576</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1476119531001819"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:09:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:81</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:81/1476119345557112</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1476119343001813"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37331 (New site form has non-required fields that have to be filled in) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:03:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37331#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37331#comment:9/1476119025484759</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1476119022001797"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16206 (Comment text not marked as required) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:03:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16206#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16206#comment:38/1476119025355759</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1476119022001797"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30937 (Add Customizer state persistence in changesets (formerly “transactions”)) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 17:02:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30937#comment:70</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30937#comment:70/1476118948515383</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1476118946001793"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38256 (Make use of PHPUnit's @requires notation) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 10 Oct 2016 16:31:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38256#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38256#comment:5/1476117116272379</guid>
      <description>&lt;i&gt;Resolution&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23870 (Filter Glyph for Comment Required Fields) updated</title>
      
        <dc:creator>cais</dc:creator>

      <pubDate>Mon, 10 Oct 2016 16:29:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23870#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23870#comment:18/1476116986190062</guid>
      <description>&lt;p&gt;
Adding the required mark as an argument does work, and the patch in general is obviously more to current standards (mea culpa, mea culpa). It seems the ticket has become more tightening up the comment form than just adding a way to easily change the required mark used ... I'm good with that, too!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35578 (Improve the Menus screen "move" links) closed</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 10 Oct 2016 16:23:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35578#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35578#comment:12/1476116611004047</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38770" title="Accessibility: Improve the UI controls to move the Menu items.
On the ..."&gt;38770&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Accessibility: Improve the UI controls to move the Menu items.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
On the Menus screen, the links to move menu items behave like buttons: they&lt;br /&gt;
perform an action so they should be real buttons to be correctly reported to&lt;br /&gt;
assistive technologies. Since they're logically grouped controls, they should&lt;br /&gt;
also be wrapped in a &lt;code&gt;&amp;lt;fieldset&amp;gt;&lt;/code&gt; element for better semantics and accessibility.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props Cheffheid.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35578" title="#35578: defect (bug): Improve the Menus screen &amp;#34;move&amp;#34; links (closed: fixed)"&gt;#35578&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38770]: Accessibility: Improve the UI controls to move the Menu items.  On the ...</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 10 Oct 2016 16:23:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38770</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38770/1476116603681030</guid>
      <description>&lt;p&gt;
Accessibility: Improve the UI controls to move the Menu items.
&lt;/p&gt;
&lt;p&gt;
On the Menus screen, the links to move menu items behave like buttons: they
perform an action so they should be real buttons to be correctly reported to
assistive technologies. Since they're logically grouped controls, they should
also be wrapped in a &lt;code&gt;&amp;lt;fieldset&amp;gt;&lt;/code&gt; element for better semantics and accessibility.
&lt;/p&gt;
&lt;p&gt;
Props Cheffheid.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35578" title="#35578: defect (bug): Improve the Menus screen &amp;#34;move&amp;#34; links (closed: fixed)"&gt;#35578&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38276 ("Is thing public/accessible" API) created</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Mon, 10 Oct 2016 16:13:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38276</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38276/1476115996944490</guid>
      <description>&lt;p&gt;
&lt;strong&gt;Question:&lt;/strong&gt; How do you check if a non-logged-in user is allowed to view something in WordPress? (Posts specifically, and also in general?)
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Answer:&lt;/strong&gt; Within WordPress there is no API for checking whether a non-logged-in user is allowed to view a post or other object.
&lt;/p&gt;
&lt;h2 id="CapabilitiesAPI"&gt;Capabilities API&lt;/h2&gt;
&lt;p&gt;
There is the role and capabilities API, but only logged-in users will have a role or any capabilities. A visitor to the site who is not logged-in will thus not have even the &lt;code&gt;read&lt;/code&gt; capability. &lt;code&gt;WP_User::has_cap( 'read' )&lt;/code&gt;, and thus &lt;code&gt;current_user_can( 'read' )&lt;/code&gt;, will return &lt;code&gt;false&lt;/code&gt;, while &lt;code&gt;user_can()&lt;/code&gt; will peremptorily return &lt;code&gt;false&lt;/code&gt; if the user ID passed does not exist before even calling &lt;code&gt;WP_User::has_cap()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;Thus, while we can check if a logged-in/existing user can view a post via the capability API, we cannot use it to check whether a non-logged-in user can view the post.&lt;/em&gt;
&lt;/p&gt;
&lt;h2 id="UnderlyingPhilosophy"&gt;Underlying Philosophy&lt;/h2&gt;
&lt;p&gt;
The underlying philosophy that is used within WordPress is that objects such as posts are public by default. &lt;strong&gt;Everything is accessible to everyone unless specifically restricted.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
This is, in a word, a blacklist-style approach. The object is public, unless it blacklists/restricts itself in some way.
&lt;/p&gt;
&lt;p&gt;
When an object is public, the capabilities API, and the concept of capabilities in general, no longer applies as to whether that object is accessible. The object is accessible by default.
&lt;/p&gt;
&lt;p&gt;
The question becomes “is this post publicly visible?” rather than “does this user have the ability to view this post?"
&lt;/p&gt;
&lt;p&gt;
The capabilities API, on the other hand, operates on a whitelist philosophy—nobody is allowed to do anything (and thus nobody has any capabilities), unless specifically granted permission.
&lt;/p&gt;
&lt;p&gt;
These two different approaches make sense in different scenarios. However, it starts to get sticky when the two intersect. And that is exactly what happens with the &lt;code&gt;read&lt;/code&gt; capability: we're now checking the whitelist to check a blacklist. And when the user isn't logged in, the capability isn't in the whitelist, which causes everything to get blacklisted—they don't have the capabilities to read any posts at all.
&lt;/p&gt;
&lt;h2 id="Whydoesntthisexplode"&gt;Why doesn't this explode?&lt;/h2&gt;
&lt;p&gt;
Obviously, WordPress has gotten along quite well up to this point without everything flying apart though. Non-logged-in users &lt;em&gt;can&lt;/em&gt; view public posts—otherwise you and I wouldn't be able to see about 25% of the web right now. So yes, of course non-logged-in users do get to view those posts. They are public, they aren't restricted. But they get to view them despite not having the &lt;code&gt;read&lt;/code&gt; capability.
&lt;/p&gt;
&lt;p&gt;
In other words, usually this doesn't cause any issues. That's why nobody has brought it up before (that I know of—probably they have). Why? Because usually posts are retrieved for display via &lt;code&gt;WP_Query&lt;/code&gt;, and it bypasses the &lt;code&gt;read&lt;/code&gt; capability. Instead, it works from the philosophy of public by default discussed above, and internally handles all of the logic for checking if the post is publicly visible or restricted from the current user. So, any time that you are using &lt;code&gt;WP_Query&lt;/code&gt;, you will automatically get all of the posts, minus those that were restricted in some way (blacklisting, as it were).
&lt;/p&gt;
&lt;h2 id="Okaysothenwhocares"&gt;Okay, so then who cares?&lt;/h2&gt;
&lt;p&gt;
Good question. After all, shouldn't we always be using &lt;code&gt;WP_Query&lt;/code&gt; to retrieve posts?
&lt;/p&gt;
&lt;h3 id="PeoplenotusingWP_Query"&gt;People not using &lt;code&gt;WP_Query&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;
Well, yes. But, what if we aren't retrieving a post? What if we have a plugin where we are storing some information that relates to a post in a separate table, and we want to display that information publicly on the site. But because that information references the post in a potentially identifying manner, we can't show it to users who can't view the post. I'd say that's a perfectly valid use-case.
&lt;/p&gt;
&lt;p&gt;
So how would we check if the current user can see the information for a particular post? I know what you were about to suggest: "Use &lt;code&gt;current_user_can()&lt;/code&gt;!" But yeah, now you know why that won't work: that's a capability check, and non-logged-in users will not have any capabilities. So non-logged-in users wouldn't be able to view the information for any of the posts, even those that they can view publicly on the site.
&lt;/p&gt;
&lt;p&gt;
Now, you might say, "Just check if the post is public." Yes, and thanks for telling my how to do that. Should I use the &lt;code&gt;just_check_if_the_post_is_public()&lt;/code&gt; function? :-) That's what this ticket is about.
&lt;/p&gt;
&lt;h3 id="Peopleaddingaccessibilityrestrictions"&gt;People adding accessibility restrictions&lt;/h3&gt;
&lt;p&gt;
Another reason to care about this is that it means that when somebody wants to restrict the visibility of posts they have to hook-in multiple places: in the capabilities API for the &lt;code&gt;read&lt;/code&gt; cap, and for the post retrieval logic in &lt;code&gt;WP_Query&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
That is not the main focus of this ticket, and it may not really be practical to solve at all. However, I'm not sure how many developers realize that they need to consider both of these things.
&lt;/p&gt;
&lt;h2 id="Sowhatdoyoupropose"&gt;So what do you propose?&lt;/h2&gt;
&lt;p&gt;
In this ticket, I'm &lt;strong&gt;not&lt;/strong&gt; really suggesting that we:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;throw out the &lt;code&gt;read&lt;/code&gt; capability. (Back-compat nightmare.)
&lt;/li&gt;&lt;li&gt;modify the caps API to handle non-logged-in users differently. (Fundamental change in an API, probably not practical.)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I &lt;em&gt;am&lt;/em&gt; suggesting that there is a need for a new API, to formally provide a means of determining whether a post (or any object) is publicly accessible. This API would include a function like &lt;code&gt;is_thing_accessible( $thing_id )&lt;/code&gt; (and perhaps &lt;code&gt;is_thing_accessible_for_user( $user_id, $thing_id )&lt;/code&gt;).
&lt;/p&gt;
&lt;h2 id="Isthatreallyneeded"&gt;Is that &lt;em&gt;really&lt;/em&gt; needed?&lt;/h2&gt;
&lt;p&gt;
Now, I know that some might suggest that this really isn't needed, because you can just check if the post has a public status. That is true in theory, but in practice things are more complex.
&lt;/p&gt;
&lt;p&gt;
First, let me reiterate that what I'm proposing isn't just for posts, it is for any objects, of which posts are one, comments another, users another.
&lt;/p&gt;
&lt;p&gt;
Secondly, using posts as an example,a plugin can add extra restrictions that cause posts with otherwise public stati to not be publicly accessible to all users. So it isn't a viable solution to just duplicate each core check that would normally apply to posts—others might be added by plugins.
&lt;/p&gt;
&lt;p&gt;
For capability checks I don't have to worry about that. I just check for a particular cap and anything that affects that cap will just hook into &lt;code&gt;map_meta_cap&lt;/code&gt; and I never have to know. But if the user is logged out I can't use the capability API, and suddenly the onus is on me to know about every possible restriction that could ever apply to a post, in order to check if the post is public. I should be able to check &lt;code&gt;is_thing_accessible( $post_id )&lt;/code&gt; and just forget it, same as I can do with &lt;code&gt;current_user_can( 'read_post', $post_id )&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
We are talking about non-logged-in users here after all. If a restriction isn't taken into account, it doesn't just mean that some less privileged users can view the object, it means that everybody can.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
I &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1476106801005182"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;brought this up&lt;/a&gt; and &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1476107282005192"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;discussed it with @johnbillion&lt;/a&gt; in the &lt;code&gt;#core&lt;/code&gt; channel on Slack before creating this (admittedly long-winded) ticket.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29462 (comment pagination in reverse order should display a full number of ...) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Mon, 10 Oct 2016 15:22:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29462#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29462#comment:23/1476112928348651</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38275 (Single wildcard character in .htaccess requests any page) created</title>
      
        <dc:creator>martinthehorrible</dc:creator>

      <pubDate>Mon, 10 Oct 2016 15:09:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38275</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38275/1476112194488505</guid>
      <description>&lt;p&gt;
For example, if the site is &lt;a class="ext-link" href="http://www.mysite.com"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.mysite.com&lt;/a&gt;, requesting &lt;a class="ext-link" href="http://www.mysite.com/s"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.mysite.com/s&lt;/a&gt; will redirect to a permalink beginning with 's'.  This sends the user to an unexpected page.
&lt;/p&gt;
&lt;p&gt;
This request should redirect to 404 when the page '&lt;a class="ext-link" href="http://www.mysite.com/s"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.mysite.com/s&lt;/a&gt;' doesn't exist.
&lt;/p&gt;
&lt;p&gt;
In the WP installation folder, the following .htaccess rewrite rule causes this problem:
RewriteRule . /index.php [L]
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38234 (wp_get_users_with_no_role() generates query based on role display ...) updated</title>
      
        <dc:creator>procodewp</dc:creator>

      <pubDate>Mon, 10 Oct 2016 15:07:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38234#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38234#comment:2/1476112043904846</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>38234.patch attached to Ticket #38234</title>
      
        <dc:creator>procodewp</dc:creator>

      <pubDate>Mon, 10 Oct 2016 15:06:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38234/38234.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38234/38234.patch/1476111994707728</guid>
      <description>&lt;p&gt;
Patch to use role name instead of role display name in wp_get_users_with_no_role()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35685 (Default HTTP schema when adding a custom link) updated</title>
      
        <dc:creator>christophherr</dc:creator>

      <pubDate>Mon, 10 Oct 2016 14:51:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35685#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35685#comment:7/1476111087763424</guid>
      <description>&lt;p&gt;
Sorry about that.
I only tested with svn patch not with grunt patch.
I uploaded a new patch through grunt upload_patch.
It applies for me now with svn patch and grunt patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35685.2.diff attached to Ticket #35685</title>
      
        <dc:creator>christophherr</dc:creator>

      <pubDate>Mon, 10 Oct 2016 14:42:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35685/35685.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35685/35685.2.diff/1476110562450018</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38191 (Further hardening of the role and capability tests) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 10 Oct 2016 14:39:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38191#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38191#comment:7/1476110375523726</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38769" title="Role/Capability: Add tests for all user roles that check custom ..."&gt;38769&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Role/Capability: Add tests for all user roles that check custom capabilities that do not have any form of handling (eg. in a &lt;code&gt;map_meta_cap&lt;/code&gt; filter).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38191" title="#38191: defect (bug): Further hardening of the role and capability tests (closed: fixed)"&gt;#38191&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38769]: Role/Capability: Add tests for all user roles that check custom ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 10 Oct 2016 14:39:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38769</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38769/1476110375060244</guid>
      <description>&lt;p&gt;
Role/Capability: Add tests for all user roles that check custom capabilities that do not have any form of handling (eg. in a &lt;code&gt;map_meta_cap&lt;/code&gt; filter).
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38191" title="#38191: defect (bug): Further hardening of the role and capability tests (closed: fixed)"&gt;#38191&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #22363 (Accents in attachment filenames should be sanitized) updated</title>
      
        <dc:creator>gitlost</dc:creator>

      <pubDate>Mon, 10 Oct 2016 14:17:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22363#comment:94</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22363#comment:94/1476109063338971</guid>
      <description>&lt;p&gt;
Just tried it on Safari version 10.0 on macOS Sierra (TechReviews' VirtualBox) and the behaviour's the same.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38274 (wp_set_auth_cookie and FileSystem relation) created</title>
      
        <dc:creator>rezamarandi</dc:creator>

      <pubDate>Mon, 10 Oct 2016 14:14:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38274</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38274/1476108873888286</guid>
      <description>&lt;p&gt;
guys i have a new fresh installed on digital ocean server
my theme do wordpress reseting and then create new auth cookie with bottom code :
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;wp_clear_auth_cookie&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;wp_set_current_user&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$user_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;user_login&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$session_tokens&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;delete_user_meta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'session_tokens'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;update_user_meta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'session_tokens'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$session_tokens&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;wp_set_auth_cookie&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$user_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;do_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'wp_login'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;user_login&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
its interesting because this piece of code will not work when the ownership of wordpress directory is not apache user for example :
someuser:www-data
but it will works when we change ownership of server to : www-data:www-data
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37492 (Unifying translation strings in wp_die()) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 14:06:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37492#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37492#comment:11/1476108402629853</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-i18n by ramiy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-i18n/p1476108399000029"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37940 (WordPress email subject update) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 14:06:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37940#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37940#comment:4/1476108402532299</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-i18n by ramiy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-i18n/p1476108399000029"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34848 (Add support for updating post meta in bulk) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 10 Oct 2016 13:46:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34848#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34848#comment:21/1476107163461427</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by swissspidy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1476107160005190"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38271 (`wp-remove-post-lock` Ajax request generates notice in ...) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Mon, 10 Oct 2016 13:14:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38271#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38271#comment:2/1476105251735064</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>38271.2.diff attached to Ticket #38271</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Mon, 10 Oct 2016 13:00:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38271/38271.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38271/38271.2.diff/1476104433992314</guid>
      <description>&lt;p&gt;
use yoda conditional
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38271 (`wp-remove-post-lock` Ajax request generates notice in ...) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Mon, 10 Oct 2016 13:00:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38271#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38271#comment:1/1476104410372106</guid>
      <description>&lt;p&gt;
@dlh thanks for the patch! This looks reasonable, I tested before and after, verified the error you mentioned and see it is solved by the patch. I am attaching a slightly updated version switching to a Yoda conditional.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29606 (Reorder images via drag and drop is not working in WP 4) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Mon, 10 Oct 2016 12:39:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29606#comment:54</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29606#comment:54/1476103165153649</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31652" title="#31652: defect (bug): Drag/Drop Ordering of Media Does Not Work in Chrome on touch enabled ... (closed: fixed)"&gt;#31652&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
@gsarig @madis @programmin @snowboardmommy @earnjam @andru.bonus - I believe I tracked down the issue here to a general flaw in the way we enqueue "Touch Punch" - the jQuery library we use to make jQuery UI draggable/sortable work on touch devices. Our logic was flawed and was only enqueueing the script correctly on certain devices and definitely not on browsers like chrome on desktop windows with touch screen.
&lt;/p&gt;
&lt;p&gt;
Can you please test the final patch on that ticket - &lt;a href="https://core.trac.wordpress.org/attachment/ticket/31652/31652.2.diff"&gt;https://core.trac.wordpress.org/attachment/ticket/31652/31652.2.diff&lt;/a&gt; and let me know if it resolves the sortable functionality on your devices? Also can you please mention the physical device your are testing on and specifically whether it is a touch screen device as this seems to be the root of the issue.
&lt;/p&gt;
&lt;p&gt;
Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37817 (Emoji code not loaded responsibly) updated</title>
      
        <dc:creator>superpoincare</dc:creator>

      <pubDate>Mon, 10 Oct 2016 12:30:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37817#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37817#comment:21/1476102625401451</guid>
      <description>&lt;p&gt;
Good points, pento.
&lt;/p&gt;
&lt;p&gt;
Peter, good idea about creating canvas once. I think adding defer won't do anything because from what I see in the code, the script is added after DOMContentLoaded. I think defer just executes before the DOMContentLoaded event. So by the time a script element has been created, the DOMContentLoaded is already past. So the behaviour should be the same either way (with or without defer).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26511 (Introduce a locale-switching function) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 10 Oct 2016 12:05:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26511#comment:73</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26511#comment:73/1476101152702821</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/26511/26511.8.diff" title="Attachment '26511.8.diff' in Ticket #26511"&gt;26511.8.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/26511/26511.8.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Introduces &lt;code&gt;is_locale_switched()&lt;/code&gt; including tests.
&lt;/li&gt;&lt;li&gt;Switch locale in the files / functions mentioned above. Exceptions: &lt;code&gt;wpmu_signup_blog_notification()&lt;/code&gt; and &lt;code&gt;wpmu_signup_user_notification()&lt;/code&gt; (no user exists yet) as well as &lt;code&gt;wp_notify_postauthor()&lt;/code&gt;, &lt;code&gt;wp_notify_moderator()&lt;/code&gt; (need to be refactored). No tests included yet.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>26511.8.diff attached to Ticket #26511</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 10 Oct 2016 12:00:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26511/26511.8.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26511/26511.8.diff/1476100807983282</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37188 (Add New Media button does not give aria feedback) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Mon, 10 Oct 2016 11:11:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37188#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37188#comment:5/1476097887957029</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think moving the dropzone up makes a lot of sense. You are clicking 'add' and having it appear below another UI element is a weird experience. For reference here is what we currently have and shows the UX hitch.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/0iudSZn_RT.gif"&gt;&lt;img src="https://cldup.com/0iudSZn_RT.gif" alt="https://cldup.com/0iudSZn_RT.gif" crossorigin="anonymous" title="https://cldup.com/0iudSZn_RT.gif" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22363 (Accents in attachment filenames should be sanitized) updated</title>
      
        <dc:creator>gitlost</dc:creator>

      <pubDate>Mon, 10 Oct 2016 11:09:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22363#comment:93</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22363#comment:93/1476097759369657</guid>
      <description>&lt;p&gt;
Note in order for the OP to be fixed, &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/24661" title="#24661: defect (bug): remove_accents is not removing combining accents (new)"&gt;#24661&lt;/a&gt; needs to be fixed also, using eg patch &lt;a href="https://core.trac.wordpress.org/attachment/ticket/24661/24661.5.patch"&gt;24661.5.patch&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Maybe Safari's behaviour has changed in version 10 but I can reproduce it with the latest nightly (4.7-alpha-38766) running on Ubuntu 16.04 using Safari (version 6) and Firefox (48.0.1) or Chrome (49.0.2623.112) on OS X 10.8 Mountain Lion (VirtualBox Hackintosh).
&lt;/p&gt;
&lt;p&gt;
Upload a file with diacritics eg "forêt.png" using Firefox or Chrome on OS X. The file will be uploaded as "2016/10/fore\xcc\x82t.png" (NFD). Then view the uploaded file in Safari ("wp-admin/upload.php"). Safari converts the filename to "2016/10/for\xc3\xaat.png" (NFC) and it doesn't display. If the two patches &lt;a href="https://core.trac.wordpress.org/attachment/ticket/22363/22363.12.patch"&gt;22363.12.patch&lt;/a&gt; and &lt;a href="https://core.trac.wordpress.org/attachment/ticket/24661/24661.5.patch"&gt;24661.5.patch&lt;/a&gt; are applied then the file is uploaded as "2016/10/foret.png" so the issue doesn't arise.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Mon, 10 Oct 2016 11:07:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:97</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:97/1476097678845792</guid>
      <description>&lt;p&gt;
Thanks firstly to @pento and @bradyvercher for getting us to a working prototype - so cool to interact with. I am still putting the UI adjustments to one side as want to focus on actually how this works - we can easily go back to mock from there.
&lt;/p&gt;
&lt;p&gt;
For those following along, here is what we have currently:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/HnrxNkFRRB.gif"&gt;&lt;img src="https://cldup.com/HnrxNkFRRB.gif" alt="https://cldup.com/HnrxNkFRRB.gif" crossorigin="anonymous" title="https://cldup.com/HnrxNkFRRB.gif" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It seems that the page template always has to be the top content. Is that the case? I found this by using 2 menu items - one being the front page itself that was assigned as template.
&lt;/p&gt;
&lt;p&gt;
There also is a little odd behaviour where if I don't search I can click 'x' on search and loose all pages shown. This could be just be something to do with reusing UI I guess?
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/AKntRiQsd6.gif"&gt;&lt;img src="https://cldup.com/AKntRiQsd6.gif" alt="https://cldup.com/AKntRiQsd6.gif" crossorigin="anonymous" title="https://cldup.com/AKntRiQsd6.gif" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Incase we do move onto UI adjustments there are a few I would like to see brought in sooner to allow easy judgement:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The up and down arrows
&lt;/li&gt;&lt;li&gt;Remove 'page' from the page listing when searching / adding
&lt;/li&gt;&lt;li&gt;Line breaks in the panel to reduce the panel clutter
&lt;/li&gt;&lt;li&gt;Add ability to remove pages
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38216 (Plugin details modal tabs) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Mon, 10 Oct 2016 10:47:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38216#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38216#comment:2/1476096426160615</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@butterflymedia I can not replicate this issue. As a result I am thinking this either has to do with another plugin you are using or the browser you are. This is what I see in Chrome and also in Firefox:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/aXnr1EiNG0.png"&gt;&lt;img width="50%" alt="https://cldup.com/aXnr1EiNG0.png" title="https://cldup.com/aXnr1EiNG0.png" crossorigin="anonymous" src="https://cldup.com/aXnr1EiNG0.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Could you please expand on what browser and OS you are using? Maybe even the device if not a desktop, thanks. If you could also try without having any other plugins incase that is something implicating this. Also maybe using a default theme - unlikely to interfere but worth testing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19711 (Posts edit list window display no information about filtering) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Mon, 10 Oct 2016 10:43:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19711#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19711#comment:17/1476096213215940</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@chriscct7 that seems to make sense to use the search format then, thanks for giving the UI context.
&lt;/p&gt;
&lt;p&gt;
I found one thing that made me wonder in testing. I didn't see category showing but I do author:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/nw4boMBUdE.gif"&gt;&lt;img src="https://cldup.com/nw4boMBUdE.gif" alt="https://cldup.com/nw4boMBUdE.gif" crossorigin="anonymous" title="https://cldup.com/nw4boMBUdE.gif" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Is that a bug? I expected to see it even for 'Uncategorized'. I think if we fix that up then I would say the UI is ready to merge and thanks for keeping going with this one.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>folletto</dc:creator>

      <pubDate>Mon, 10 Oct 2016 10:43:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:96</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:96/1476096205375855</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
filter the permalinks for pages registered as sections to point to the home URL with the post ID as a hash
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not sure about this. Why do we want to restrict the pages to be accessible exclusively from the homepage? It seem a decision up to the site owner. Some links in the homepage might point to the same page, that will also act as a perfect landing page, or being entirely disconnected from the menu and not indexed.
&lt;/p&gt;
&lt;p&gt;
I find also not ideal in general to force rewrite the URL in that way to the homepage, as the resource is simply not available at that location, so that URL either never existed, or changed shape in such a form that is not relevant having a redirect, but it's better handled by a 404 page.
&lt;/p&gt;
&lt;p&gt;
So: what's the rationale behind that decision?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29606 (Reorder images via drag and drop is not working in WP 4) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Mon, 10 Oct 2016 10:32:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29606#comment:53</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29606#comment:53/1476095562705887</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
As this is a bug, not sure it needs ui-feedback, so for now removing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35496 (Quick Edit error messages UI improvements) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Mon, 10 Oct 2016 10:26:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35496#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35496#comment:6/1476095206432699</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35496 (Quick Edit error messages UI improvements) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Mon, 10 Oct 2016 10:26:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35496#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35496#comment:5/1476095193024049</guid>
      <description>&lt;p&gt;
+1 to that @melchoyce - looks so much better with a box and error message that way.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35685 (Default HTTP schema when adding a custom link) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Mon, 10 Oct 2016 09:59:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35685#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35685#comment:6/1476093599656452</guid>
      <description>&lt;p&gt;
@christophherr unfortunately I don't seem to be able to get the patch to work. Could you check the patch again, please?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>22355.1.php attached to Ticket #13239</title>
      
        <dc:creator>tifosi</dc:creator>

      <pubDate>Mon, 10 Oct 2016 08:53:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13239/22355.1.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13239/22355.1.php/1476089615484775</guid>
      <description>&lt;p&gt;
Update of 22355. Loop issue, extra filter, parenthesis tweaks.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Mon, 10 Oct 2016 08:31:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:99</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:99/1476088314390812</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:94" title="Comment 94"&gt;ramiy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Yes, I know. Using those functions we can't remove all the globals, but we can replace the vast majority.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
My point was that in order to be able to deprecate the globals we need more than functions that can access them, we'd also need to add functions/functionality than can update them too.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:97" title="Comment 97"&gt;schlessera&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
However, I'd like to point out that the goal is not to improve first-time readability (or to even maintain it), but to improve maintainability.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That presumes there is only one applicable goal and/or that optimizing for maintainability would &lt;em&gt;not&lt;/em&gt; have a negative effect on any other goals.  Better &lt;strong&gt;to verify that there are no other goals the core team thinks are of higher priority&lt;/strong&gt; than assume that maintainability is the only goal worth optimizing for.
&lt;/p&gt;
&lt;p&gt;
Further, it would be great if you could give some specific use-case examples where the fact that &lt;code&gt;$wpdb&lt;/code&gt; is a global variable actually caused real world harm vs. discussing as a theoretical concern.
&lt;/p&gt;
&lt;p&gt;
Personally, while I complete understand and agree with the theoretical concern when discussing an abstract use of global variables I cannot remember one (1) single time that I have run into a problem in my working professionally with WordPress when I had wish for practical reasons that $wpdb was not a global variable. &lt;em&gt;(Okay, there has been one reason and that is for convenience of not having to first declare it &lt;code&gt;global&lt;/code&gt;. But that's syntatical sugar, not a maintenance concern, and in our own libraries we have solved that with &lt;code&gt;WPLib::wpdb()&lt;/code&gt;.)&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
That said, I would even argue that in WordPress core that most of the well-known globals are not a serious maintainability concern because they are in-fact well-known and there is an army of developers willing and able to maintain any code that contains globals.  Sure, it may &lt;em&gt;feel&lt;/em&gt; dirty to work with &lt;code&gt;global&lt;/code&gt; variables, but what is practical and effective does feel dirty. &lt;code&gt;$wpdb&lt;/code&gt; fits into this category.
&lt;/p&gt;
&lt;p&gt;
If for example we deprecating &lt;code&gt;$wpdb&lt;/code&gt; and doing so were to harm backward compatibility or even harm understandability among a significant number of the many people who implement WordPress sites but do not understand most of the syntax and semantics of classes and methods then optimizing for maintainability here could be more harmful than not. &lt;em&gt;(I'm not taking a side on this one, I am pointing about that pursuing maintainability should not be viewed without question as the quest for the holy grail.)&lt;/em&gt;
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
OTOH, it would likely make little sense to introduce new globals as WordPress' code base evolves because these potential new globals are not yet well-known.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>dnaber-de</dc:creator>

      <pubDate>Mon, 10 Oct 2016 07:52:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:98</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:98/1476085930149396</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:95" title="Comment 95"&gt;pento&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hiding the &lt;code&gt;$wpdb&lt;/code&gt; global behind a property decreases the readability of the code, as well as causing irrelevant output when dumping an object.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Increasing responsibilities of each methods increases readability? How? The advantage of having a dependency (like &lt;code&gt;wpdb&lt;/code&gt;) in a property is, that you can rely on its type and existence when you use it. You don't need to care about whether it's in place or even how it came to place.
&lt;/p&gt;
&lt;p&gt;
What you actually do is implementing a shorthand variable. But that could have been done also like that:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
   &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="nv"&gt;$wpdb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;db&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
       &lt;span class="c1"&gt;//...
&lt;/span&gt;   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
But instead you import a global variable (which could be of any type, or even not set) to the local scope &lt;em&gt;in every single&lt;/em&gt; method. That's actually decreases readability.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38273 (HTTPS install is broken) updated</title>
      
        <dc:creator>yohgaki</dc:creator>

      <pubDate>Mon, 10 Oct 2016 07:39:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38273#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38273#comment:4/1476085169286058</guid>
      <description>&lt;p&gt;
Thank you for your comment!!
It turned out my wp-config.php was wrong. Apologies for confusion. It seems I messed up /etc/hosts.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://codex.wordpress.org/Administration_Over_SSL"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Administration_Over_SSL&lt;/a&gt;
It says "Note: FORCE_SSL_ADMIN should be set before wp-settings.php is required.", but it does not state any other SSL related constant/vars must be defined before wp-settings.php.
&lt;/p&gt;
&lt;p&gt;
BAD - This only fixes redirect loop!
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="sd"&gt;/** Sets up WordPress vars and included files. */&lt;/span&gt;
&lt;span class="k"&gt;require_once&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ABSPATH&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'wp-settings.php'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'HTTPS'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'on'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// &amp;lt;&amp;lt;== Fix redirect loop, but it does NOT work.
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
GOOD
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'HTTPS'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'on'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="sd"&gt;/** Sets up WordPress vars and included files. */&lt;/span&gt;
&lt;span class="k"&gt;require_once&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ABSPATH&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'wp-settings.php'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
I append additional config at the end of config file mostly. If BAD config didn't fix redirect loop, I might have noticed my mistake earlier. I think it may be good to mention this explicitly in the document, or better yet add comment that "wp-settings.php" should be included after additional var/constant definitions.
&lt;/p&gt;
&lt;p&gt;
For the record, working wp-config.php &lt;code&gt;# tail -n 30 wp-config.php&lt;/code&gt; is:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;
/**
 * For developers: WordPress debugging mode.
 *
 * Change this to true to enable the display of notices during development.
 * It is strongly recommended that plugin and theme developers use WP_DEBUG
 * in their development environments.
 */
define('WP_DEBUG', false);
/* That's all, stop editing! Happy blogging. */
/** Absolute path to the WordPress directory. */
if ( !defined('ABSPATH') )
        define('ABSPATH', dirname(__FILE__) . '/');
/** SSL Support **/
function isSecure() {
  if (!empty($_SERVER['HTTP_X_FORWARDED_PROTO']) &amp;amp;&amp;amp; $_SERVER['HTTP_X_FORWARDED_PROTO'] == 'https') {
    $_SERVER['HTTPS'] = 'on';
    return TRUE;
  }
  return FALSE;
}
$web_site     = 'blog.ohgaki.net';
$schema       = isSecure() ? 'https://' : 'http://';
$web_site_url = $schema . $web_site;
define('WP_HOME',    $web_site_url);
define('WP_SITEURL', $web_site_url);
/** Sets up WordPress vars and included files. */
require_once(ABSPATH . 'wp-settings.php'); // &amp;lt;&amp;lt;== THIS MUST BE AT THE END OF wp-config.php
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22363 (Accents in attachment filenames should be sanitized) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 10 Oct 2016 07:13:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22363#comment:92</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22363#comment:92/1476083581330995</guid>
      <description>&lt;p&gt;
The latest patch does what it says it does, but I'm actually having a hard time reproducing this on Safari 10 (macOS Sierra), so I can't tell for sure. Images with diacritics are displayed just fine in the media library and the front end. The only problem Safari has is with the permalinks, i.e.. &lt;code&gt;example.com/aaâãäåçeeêëiiîïñooôõöuuûüyÿ/&lt;/code&gt; works in Safari, but in the other browsers it's &lt;code&gt;example.com/aaa%CC%82a%CC%83a%CC%88a%CC%8Ac%CC%A7eee%CC%82e%CC%88iii%CC%82i%CC%88n%CC%83ooo%CC%82o%CC%83o%CC%88uuu%CC%82u%CC%88yy%CC%88/&lt;/code&gt;, which is still a problem with the current patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Mon, 10 Oct 2016 07:01:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:97</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:97/1476082902088800</guid>
      <description>&lt;p&gt;
I totally get that such changes should be properly evaluated, and the Core-to-be-released is probably not the best place to run experiments...
&lt;/p&gt;
&lt;p&gt;
However, I'd like to point out that the goal is not to improve first-time readability (or to even maintain it), but to improve maintainability. Globals like this are technical debt, and I agree that it might be easier to read the code once when you just have them openly accessible like this. It also means that you'll need to read that code in dozens of locations, dozens of times, to get a clearer idea of whether you can make a change or not.
&lt;/p&gt;
&lt;p&gt;
Improving maintainability means that the code might be more complicated to read the first time around. But you won't have to ponder over it for hours to muster up the courage to make a change...
&lt;/p&gt;
&lt;p&gt;
So, yes, I'm all for reverting and discussing how best to tackle this. But we just needn't bother if "first-time readability" is seen as an absolute priority...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22249 (Add ability to set or remove attributes on enqueued scripts and styles.) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 10 Oct 2016 06:54:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22249#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22249#comment:42/1476082487566201</guid>
      <description>&lt;p&gt;
Subresource integrity is an official W3C recommendation and as such more browsers will add support for it. +1 for supporting it in WordPress.
&lt;/p&gt;
&lt;p&gt;
See also &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/33948" title="#33948: enhancement: Implement subresource integrity (SRI) (new)"&gt;#33948&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37817 (Emoji code not loaded responsibly) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Mon, 10 Oct 2016 06:53:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37817#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37817#comment:20/1476082402348261</guid>
      <description>&lt;p&gt;
For &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37817/37817.diff" title="Attachment '37817.diff' in Ticket #37817"&gt;37817.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37817/37817.diff" title="Download"&gt;​&lt;/a&gt;, I'm inclined to change the AU flag test to UN, so it's a flag from emoji4. That's probably going to give us the best result for "does this client render all flags?".
&lt;/p&gt;
&lt;p&gt;
As @superpoincare points out, rainbow flag is emoji4, so that would make the test two flags from emoji4. I'm inclined to keep the two tests, though, until we see that clients implement both. (Tech companies have historically been fairly awful at implementing anything considered "controversial" (see: middle finger emoji), so I wouldn't be surprised if some of them "forget" to implement the rainbow flag.)
&lt;/p&gt;
&lt;p&gt;
We still need to keep the separate flag and emoji4 tests, however. Historically, clients have not been particularly vigorous about implementing flags, so it's good for us to maintain the three states of replacing emoji characters: replace nothing, replace only flags, and replace everything.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33948 (Implement subresource integrity (SRI)) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 10 Oct 2016 06:52:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33948#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33948#comment:5/1476082378112176</guid>
      <description>&lt;p&gt;
Sounds like a duplicate of &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/22249" title="#22249: enhancement: Add ability to set or remove attributes on enqueued scripts and styles. (assigned)"&gt;#22249&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Mon, 10 Oct 2016 06:41:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:96</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:96/1476081701084359</guid>
      <description>&lt;p&gt;
A side note to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38768" title="General: Restore usage of `$wpdb`, instead of `$this-&amp;gt;db`.
Hiding the ..."&gt;[38768]&lt;/a&gt; - I'm cool with removing globals, but the idea needs to be explored further before it's ready for Core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Mon, 10 Oct 2016 06:37:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:95</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:95/1476081423529502</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38768" title="General: Restore usage of `$wpdb`, instead of `$this-&amp;gt;db`.
Hiding the ..."&gt;38768&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
General: Restore usage of &lt;code&gt;$wpdb&lt;/code&gt;, instead of &lt;code&gt;$this-&amp;gt;db&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Hiding the &lt;code&gt;$wpdb&lt;/code&gt; global behind a property decreases the readability of the code, as well as causing irrelevant output when dumping an object.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Reverts &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38275" title="Query: add a `protected` field, `$db`, (composition, as it were) to ..."&gt;[38275]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38278" title="Unit Tests: skip checking the value in ..."&gt;[38278]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38279" title="Query: use composition for `$db` in `WP_Query`, removes need to import ..."&gt;[38279]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38280" title="Query: use composition for `$db` in `WP_Date_Query`, removes need to ..."&gt;[38280]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38387" title="Roles: set a property, `$db`, on `WP_Roles` to reduce global imports.
 ..."&gt;[38387]&lt;/a&gt;.&lt;br /&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38768]: General: Restore usage of `$wpdb`, instead of `$this-&gt;db`.  Hiding the ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Mon, 10 Oct 2016 06:37:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38768</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38768/1476081422951448</guid>
      <description>&lt;p&gt;
General: Restore usage of &lt;code&gt;$wpdb&lt;/code&gt;, instead of &lt;code&gt;$this-&amp;gt;db&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Hiding the &lt;code&gt;$wpdb&lt;/code&gt; global behind a property decreases the readability of the code, as well as causing irrelevant output when dumping an object.
&lt;/p&gt;
&lt;p&gt;
Reverts &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38275" title="Query: add a `protected` field, `$db`, (composition, as it were) to ..."&gt;[38275]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38278" title="Unit Tests: skip checking the value in ..."&gt;[38278]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38279" title="Query: use composition for `$db` in `WP_Query`, removes need to import ..."&gt;[38279]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38280" title="Query: use composition for `$db` in `WP_Date_Query`, removes need to ..."&gt;[38280]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38387" title="Roles: set a property, `$db`, on `WP_Roles` to reduce global imports.
 ..."&gt;[38387]&lt;/a&gt;.
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Mon, 10 Oct 2016 05:49:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:95</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:95/1476078569572983</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37974/37974.2.diff" title="Attachment '37974.2.diff' in Ticket #37974"&gt;37974.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37974/37974.2.diff" title="Download"&gt;​&lt;/a&gt; adds support for &lt;code&gt;front_page_sections&lt;/code&gt; to &lt;code&gt;WP_Query&lt;/code&gt;, so that sections now show on the front page, and live-ish previews happen.
&lt;/p&gt;
&lt;p&gt;
@bradyvercher: I quite like the direction you went with redirecting permalinks, it's a neat solution with forwards and backwards compatibility.
&lt;/p&gt;
&lt;p&gt;
I think it's worth investigating having &lt;code&gt;http://example.com/about/&lt;/code&gt; redirected to &lt;code&gt;http://example.com/#about&lt;/code&gt;, rather than &lt;code&gt;#post-65&lt;/code&gt;. This is a bit trickier, of course, but much nicer.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37974.2.diff attached to Ticket #37974</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Mon, 10 Oct 2016 05:36:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37974/37974.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37974/37974.2.diff/1476077800592325</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38273 (HTTPS install is broken) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 10 Oct 2016 04:28:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38273#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38273#comment:3/1476073694113515</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
All HTTP traffic is redirected to HTTPS by nginx reverse proxy, backend web server is apache that only waits HTTP
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I missed this when reading the ticket.
&lt;/p&gt;
&lt;p&gt;
In short: you should consider configuring your nginx/apache configuration better. Apache (And therefor PHP &amp;amp; WordPress) has no idea that it's running in a SSL environment, which is the root cause of your bad experience.
&lt;/p&gt;
&lt;p&gt;
The standard method would be using &lt;code&gt;X-Real-IP&lt;/code&gt; and &lt;code&gt;X-Forwarded-Proto&lt;/code&gt; to pass the end-users IP and the SSL status through to Apache, when combined with the appropriate Apache configs would allow everything to work transparently.
&lt;/p&gt;
&lt;p&gt;
In longer form..
WordPress is unable to detect that it's running on a SSL service, it see's HTTP requests, attempts to redirect to HTTPS requests and ends up in a loop.
During install, WordPress attempts to determine it's own URL, and not seeing the HTTPS protocol, sets to a &lt;code&gt;http://&lt;/code&gt; url.
&lt;/p&gt;
&lt;p&gt;
In the event your server is not configured to pass through the HTTPS status, then it's up to you to setup WordPress correctly.
That involves either a) creating the &lt;code&gt;wp-config.php&lt;/code&gt; file manually, and adding &lt;code&gt;$_SERVER['HTTPS']='on';&lt;/code&gt; to it prior to install or b) Installing WordPress, and correcting the &lt;code&gt;siteurl&lt;/code&gt; and &lt;code&gt;home&lt;/code&gt; options in the database to &lt;code&gt;https://&lt;/code&gt; (or using the constants in wp-config.php).
&lt;/p&gt;
&lt;p&gt;
In that case, WordPress has no idea that it's being installed on a HTTPS service until you add &lt;code&gt;$_SERVER['HTTPS']='on';&lt;/code&gt; to your wp-config.php file, as a result, it's up to you to configure the service correctly (both at the nginx &amp;amp; apache layers) and/or set the URLs for WordPress correctly.
&lt;/p&gt;
&lt;p&gt;
I'm going to close this as a duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15733" title="#15733: defect (bug): Wordpress Installation behind reverse-proxy ssl redirect loop (closed: wontfix)"&gt;#15733&lt;/a&gt; and the many many many other tickets about SSL and bad server configs.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37291 (Check for WP_Error before echo in the_tags()) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 10 Oct 2016 03:41:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37291#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37291#comment:2/1476070905314569</guid>
      <description>&lt;p&gt;
After debugging this on WordPress.com, I believe this deserves fixing much deeper than this as well.
&lt;/p&gt;
&lt;p&gt;
In my case, it seems the issue is that &lt;code&gt;get_the_terms()&lt;/code&gt; is returning &lt;code&gt; array( WP_Term, WP_Error, WP_Term ) &lt;/code&gt; - note the WP_Error in the middle, which trips up &lt;code&gt;get_term_link()&lt;/code&gt; and returns that &lt;code&gt;WP_Error&lt;/code&gt; there.
&lt;/p&gt;
&lt;p&gt;
The WP_Error is a &lt;code&gt;invalid_term =&amp;gt; Empty Term&lt;/code&gt; error, which appears to be caused by &lt;code&gt;get_object_term_cache()&lt;/code&gt; calling &lt;code&gt;get_term()&lt;/code&gt; on the failure of a &lt;code&gt;wp_cache_get()&lt;/code&gt; (which should exist, as it was just set by &lt;code&gt;_prime_term_caches()&lt;/code&gt;).
&lt;/p&gt;
&lt;p&gt;
I suspect this is caused by out-of-sync term caches.. but not sure exactly how that's happening.
It does look like &lt;code&gt;get_object_term_cache()&lt;/code&gt; isn't designed to handle cases where &lt;code&gt;_prime_term_caches()&lt;/code&gt; doesn't cache all the terms.
Based on the code in &lt;code&gt;get_object_term_cache()&lt;/code&gt; I'd suggest that maybe &lt;code&gt;get_term()&lt;/code&gt; should be called directly rather than &lt;code&gt;wp_cache_get( $term_id, 'terms' )&lt;/code&gt; - and &lt;code&gt;WP_Error&lt;/code&gt; instances from that should be floated up the call chain.
&lt;/p&gt;
&lt;p&gt;
cc @boonebgorges  re &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37573" title="Store only term IDs in object term relationships caches.
Previously, ..."&gt;[37573]&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38273 (HTTPS install is broken) updated</title>
      
        <dc:creator>yohgaki</dc:creator>

      <pubDate>Mon, 10 Oct 2016 03:38:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38273#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38273#comment:2/1476070718188509</guid>
      <description>&lt;p&gt;
I've tried with standalone https server. You can reproduce this with local self signed certificate https server also. (Just ignore TLS warnings/errors)
&lt;/p&gt;
&lt;p&gt;
Install with "&lt;a class="ext-link" href="https://"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://&lt;/a&gt;" URL or change site URL from "&lt;a class="ext-link" href="http://"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://&lt;/a&gt;" to "&lt;a class="ext-link" href="https://"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://&lt;/a&gt;" after install.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22976 (Remove reference to category to tag converter from the tools page) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 10 Oct 2016 01:36:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22976#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22976#comment:8/1476063372793929</guid>
      <description>&lt;p&gt;
I see nothing wrong with leaving it in the Importer list, or at least until the importer list gets a makeover..
&lt;/p&gt;
&lt;p&gt;
I see no reason to keep it in the Tools section though, so +1 for removal from me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38255 (inclusion of javascript script) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 10 Oct 2016 01:34:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38255#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38255#comment:1/1476063295355368</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @nmoral and welcome to Trac.
&lt;/p&gt;
&lt;p&gt;
I'll be honest - I'm not 100% sure on what you're asking for here.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
When I was working on my themes. I tried to include scripts with Javascript src wp but always include scripts with href.
I find class.wp-scripts.php always add base url to my src.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This has to be the expected behaviour, since all assets need to be referenced by absolute URL's, can you explain it with a example perhaps?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
1 - just do not replace the data from themes
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It simply builds a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag based on the data a theme provides, once again, and example of what you get, and what you expect would greatly help
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
2 - allow possibility for developer to choose to add automaticly base_url for javascript.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The base_url for Javascript is always going to be the sites home_url, there's no really any way around that..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38273 (HTTPS install is broken) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 10 Oct 2016 00:15:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38273#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38273#comment:1/1476058544381319</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;code&gt;add_header Content-Security-Policy upgrade-insecure-requests;&lt;/code&gt; is needed for nice installation page, but this is minor issue
Add &lt;code&gt;$_SERVER['HTTPS']='on';&lt;/code&gt; to wp-config.php to avoid redirect loop.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This part sounds like the HTTPS status from nginx isn't being passed through to PHP correctly.
Can you provide example contents of &lt;code&gt;$_SERVER&lt;/code&gt; on your install before WordPress loads?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36984 (Customizer Menus: Show Pages at the top of the list, expanded) reopened</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 10 Oct 2016 00:10:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36984#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36984#comment:6/1476058254103768</guid>
      <description>&lt;p&gt;
Sorry, this is the first time I've seen this ticket.
&lt;/p&gt;
&lt;p&gt;
Pages should not be separated from the other post type sections by custom links - links probably need to remain above pages for that reason. In other words, all available menu item types should be grouped by object type - custom, post types, and taxonomies. Custom links is functionality different, so it shouldn't be placed in the middle of the other sections.
&lt;/p&gt;
&lt;p&gt;
I'm okay with auto-expanding pages, but we should probably user test this. We have quite a lot of "before" testing, most recently when users played with menus during the customize themes testing, and there is always confusion here. We should verify that this either helps or doesn't make things worse.
&lt;/p&gt;
&lt;p&gt;
We should also add before/after screenshots to the ticket for desktop and mobile. Does auto-expanding make sense on small screens as well?
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #19709 (Add 'before_sidebar' and 'after_sidebar' attributes to register_sidebar()) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 09 Oct 2016 23:52:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19709#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19709#comment:11/1476057177769557</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #docs by christophherr. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/docs/p1476057175000681"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19709 (Add 'before_sidebar' and 'after_sidebar' attributes to register_sidebar()) updated</title>
      
        <dc:creator>christophherr</dc:creator>

      <pubDate>Sun, 09 Oct 2016 23:42:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19709#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19709#comment:10/1476056544176976</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Attached a refreshed patch and added docs
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19709-2.diff attached to Ticket #19709</title>
      
        <dc:creator>christophherr</dc:creator>

      <pubDate>Sun, 09 Oct 2016 23:41:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19709/19709-2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19709/19709-2.diff/1476056467475106</guid>
      <description>&lt;p&gt;
Refreshes the patch and adds docs
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36984 (Customizer Menus: Show Pages at the top of the list, expanded) closed</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 09 Oct 2016 23:40:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36984#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36984#comment:5/1476056453970175</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38767" title="Customize: Show Pages section first and pre-expanded in list of ..."&gt;38767&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Customize: Show Pages section first and pre-expanded in list of available nav menu items.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props ryankienstra, westonruter.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36984" title="#36984: enhancement: Customizer Menus: Show Pages at the top of the list, expanded (closed: fixed)"&gt;#36984&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38767]: Customize: Show Pages section first and pre-expanded in list of ...</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 09 Oct 2016 23:40:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38767</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38767/1476056453470293</guid>
      <description>&lt;p&gt;
Customize: Show Pages section first and pre-expanded in list of available nav menu items.
&lt;/p&gt;
&lt;p&gt;
Props ryankienstra, westonruter.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36984" title="#36984: enhancement: Customizer Menus: Show Pages at the top of the list, expanded (closed: fixed)"&gt;#36984&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36984 (Customizer Menus: Show Pages at the top of the list, expanded) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 09 Oct 2016 23:25:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36984#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36984#comment:4/1476055505478063</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
See &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/158"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/158&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>bradyvercher</dc:creator>

      <pubDate>Sun, 09 Oct 2016 22:56:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:94</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:94/1476053797273027</guid>
      <description>&lt;p&gt;
@karmatosed Thanks for the feedback!
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I had a play around with the patch and if I'm right the live preview is missing?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's correct. This doesn't include anything on the front end. That part really needs more discussion, but the live preview will happen automatically with this solution.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
An indication through arrows of reordering over the 'reorder' text. I strongly feel that isn't a good text option and an extra click we can do without.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I carried that over from widgets and menus, but removed it in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37974/37974.1.diff" title="Attachment '37974.1.diff' in Ticket #37974"&gt;37974.1.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37974/37974.1.diff" title="Download"&gt;​&lt;/a&gt;, which reduces the amount of code a bit.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Padding and lines in the actual panel. It feels super cluttered. Maybe a reason we should explore this as a new panel? I'd be keen to see that as an experience.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The Static Front Page area is currently a "section" and the Customizer doesn't allow for embedding sections within sections. We could convert it to a panel, but that would require reorganizing the current controls a bit. I think doing it exactly like the mockup would break backward compatibility if anyone is using the current static front page section.
&lt;/p&gt;
&lt;p&gt;
I did remove the padding in the fly-out panel to more closely mimic the mockup. Dividers between controls aren't really used anywhere else, so I was wary of introducing those here.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Remove word 'page' beside the page as it's that when you are picking. I understanding this and other things may be legacy of using menus perhaps?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The patch is flexible enough to allow themes to register additional post types as sections or even reuse the "post collection" control for other purposes, which is why I left that label.
&lt;/p&gt;
&lt;p&gt;
Any feedback to tighten up the UI is much appreciated.
&lt;/p&gt;
&lt;h2 id="Permalinks"&gt;Permalinks&lt;/h2&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37974/37974.1.diff" title="Attachment '37974.1.diff' in Ticket #37974"&gt;37974.1.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37974/37974.1.diff" title="Download"&gt;​&lt;/a&gt; also includes a preliminary attempt to filter the permalinks for pages registered as sections to point to the home URL with the post ID as a hash. For instance, instead of &lt;code&gt;http://example.com/about/&lt;/code&gt;, the link would be converted to &lt;code&gt;http://example.com/#post-65&lt;/code&gt;. There could be some weirdness with this approach, so it'll need some testing.
&lt;/p&gt;
&lt;p&gt;
An alternative would be to add a new accordion section to the Menus panel so that users could explicitly add a link to the anchor on the front page instead of relying on the page permalink.
&lt;/p&gt;
&lt;p&gt;
In either case, if someone tries to access the permalink directly (&lt;code&gt;http://example.com/about/&lt;/code&gt;), it'll redirect to the section on the homepage. When switching to a theme without support, the links would automatically revert to the permalink format and the redirect would no longer happen.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37974.1.diff attached to Ticket #37974</title>
      
        <dc:creator>bradyvercher</dc:creator>

      <pubDate>Sun, 09 Oct 2016 22:52:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37974/37974.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37974/37974.1.diff/1476053576443441</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #13743 (Ability to choose a network default theme) updated</title>
      
        <dc:creator>Mista-Flo</dc:creator>

      <pubDate>Sun, 09 Oct 2016 22:36:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13743#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13743#comment:15/1476052605552966</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Here's my second patch which is more solid, I handle backward compat with WP_DEFAULT_THEME const if it's defined on wp-config.php. If the new default theme network option is empty, default to the actual default core theme. But I don't check if the default core theme is enabled on network, don't know if it can cause troubles.
&lt;/p&gt;
&lt;p&gt;
I tested the both situations (with the option, and with the constant in wp config), and it works well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35685 (Default HTTP schema when adding a custom link) updated</title>
      
        <dc:creator>christophherr</dc:creator>

      <pubDate>Sun, 09 Oct 2016 22:33:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35685#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35685#comment:5/1476052418238972</guid>
      <description>&lt;p&gt;
Thank you, @karmatosed.
&lt;/p&gt;
&lt;p&gt;
I attached an updated patch that removes the default value from the Customizer menu interactions as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35685-2.diff attached to Ticket #35685</title>
      
        <dc:creator>christophherr</dc:creator>

      <pubDate>Sun, 09 Oct 2016 22:31:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35685/35685-2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35685/35685-2.diff/1476052274183746</guid>
      <description>&lt;p&gt;
Updated patch removes the default value from the Custom Links URL input field from Appearance - Menus and Appearance - Customize - Menus interactions
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38273 (HTTPS install is broken) created</title>
      
        <dc:creator>yohgaki</dc:creator>

      <pubDate>Sun, 09 Oct 2016 22:18:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38273</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38273/1476051496103387</guid>
      <description>&lt;p&gt;
HTTPS install results in no admin access.
&lt;/p&gt;
&lt;h2 id="ENV"&gt;ENV&lt;/h2&gt;
&lt;p&gt;
OS: CentOS7 (Both reverse proxy and apache server)
Nginx: 1.10.1 (Default package)
Apache: 2.4.6 (Default package)
PHP: 7.1RC3 (remi-php71 repository)
&lt;/p&gt;
&lt;h2 id="STEP"&gt;STEP&lt;/h2&gt;
&lt;ol&gt;&lt;li&gt;Set up web system so that only HTTPS is used. All HTTP traffic is redirected to HTTPS by nginx reverse proxy, backend web server is apache that only waits HTTP.
("&lt;code&gt; add_header Content-Security-Policy upgrade-insecure-requests; &lt;/code&gt;" is needed for nice installation page, but this is minor issue)
&lt;/li&gt;&lt;li&gt;Add &lt;code&gt; $_SERVER['HTTPS']='on'; &lt;/code&gt; to wp-config.php to avoid redirect loop.
&lt;/li&gt;&lt;li&gt;Install new wordpress to the server.
&lt;/li&gt;&lt;li&gt;Login with the new account created.
&lt;/li&gt;&lt;li&gt;Login succeeds, but the account does not have any admin page permission.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Since the first admin account cannot do anything, system is completely unusable.
&lt;/p&gt;
&lt;h3 id="NOTES"&gt;NOTES&lt;/h3&gt;
&lt;p&gt;
Install with HTTP then switching to HTTPS results in the same. i.e. Change site url config to &lt;a class="ext-link" href="https://"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://&lt;/a&gt; from &lt;a class="ext-link" href="http://"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
This could be 7.1 bug. I don't see any PHP errors in log.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>13743.2.patch attached to Ticket #13743</title>
      
        <dc:creator>Mista-Flo</dc:creator>

      <pubDate>Sun, 09 Oct 2016 22:11:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13743/13743.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13743/13743.2.patch/1476051119404653</guid>
      <description>&lt;p&gt;
Code refactoring, handle case if WP_DEFAULT_THEME is set in wp-config.php
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>19711.4.patch attached to Ticket #19711</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Sun, 09 Oct 2016 22:07:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19711/19711.4.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19711/19711.4.patch/1476050823231720</guid>
      <description>&lt;p&gt;
Fixes last patch. Also strtolower label name
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19711 (Posts edit list window display no information about filtering) updated</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Sun, 09 Oct 2016 22:05:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19711#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19711#comment:16/1476050731768049</guid>
      <description>&lt;p&gt;
Broke last patch. Reuploading
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19711.3.patch attached to Ticket #19711</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Sun, 09 Oct 2016 22:04:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19711/19711.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19711/19711.3.patch/1476050664372306</guid>
      <description>&lt;p&gt;
Changes to use post type label
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19711 (Posts edit list window display no information about filtering) updated</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Sun, 09 Oct 2016 22:04:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19711#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19711#comment:15/1476050647721479</guid>
      <description>&lt;p&gt;
I agree it's a bit weird styling but that's what we currently style the search term feedback: &lt;a class="ext-link" href="http://screencloud.net/v/43j"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://screencloud.net/v/43j&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Styling this + search term (since that will be there regardless of the merge of this or not) would probably be best handled on another ticket.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I like the visual feedback, it makes sense. I do wonder though if it's weird it appears and isn't there from the start.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Again, that's sorta how we do the search term thing. I think it makes enough sense that it appears and isn't really jarring. Also re:defaults this is again where we'd bump into the existing search functionality. A different ticket would probably better handle what to show if none of the filters or search is used OR if search isn't used, so that that can be done independent of this ticket.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
On the pages list it says 'showing posts' - it should be pages I think there.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Updated!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27555 (Make tag post meta box more accessible) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 09 Oct 2016 22:03:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27555#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27555#comment:22/1476050637858288</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Refreshed patch. Please notice the tags box should be tested also in Press This.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;the remove tag links are now buttons
&lt;/li&gt;&lt;li&gt;they use the circular focus style (see screenshot below)
&lt;/li&gt;&lt;li&gt;they use a screen reader text "Remove item:" + tagname
&lt;/li&gt;&lt;li&gt;&lt;code&gt;wp.a11y.speak()&lt;/code&gt; is used to give feedback to screen reader users when adding/removing tags
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Note: tags can be also custom taxonomies terms so the strings can't refer to "tags" but they should use a generic wording. Alternatively, new taxonomy labels should be introduced and there should be a way to pass them to the JS part. I've opted to keep things simple and use "item". Any feedback welcome.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/mVfcSAZ-hL.png"&gt;&lt;img src="https://cldup.com/mVfcSAZ-hL.png" alt="https://cldup.com/mVfcSAZ-hL.png" crossorigin="anonymous" title="https://cldup.com/mVfcSAZ-hL.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>quick-edit-error-mobile.jpg attached to Ticket #35496</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Sun, 09 Oct 2016 21:58:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35496/quick-edit-error-mobile.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35496/quick-edit-error-mobile.jpg/1476050306393935</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>quick-edit-error-desktop.jpg attached to Ticket #35496</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Sun, 09 Oct 2016 21:58:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35496/quick-edit-error-desktop.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35496/quick-edit-error-desktop.jpg/1476050298726474</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35496 (Quick Edit error messages UI improvements) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Sun, 09 Oct 2016 21:58:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35496#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35496#comment:4/1476050280103463</guid>
      <description>&lt;p&gt;
+1 for a regularly styled error message, even if it does feel a little overkill. Attaching some ideas.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27555.2.diff attached to Ticket #27555</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 09 Oct 2016 21:56:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27555/27555.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27555/27555.2.diff/1476050178537727</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19711 (Posts edit list window display no information about filtering) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 09 Oct 2016 21:56:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19711#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19711#comment:14/1476050176851617</guid>
      <description>&lt;p&gt;
@chriscct7 thanks for that. I'm wondering a few things on looking at this:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Is there an existing style that works better for this? I ask as it feels a little stuck there. Maybe there is an existing pattern we can use that fits this more? I will note, after a tiny bit of looking one didn't strike me as better.
&lt;/li&gt;&lt;li&gt;I like the visual feedback, it makes sense. I do wonder though if it's weird it appears and isn't there from the start.
&lt;/li&gt;&lt;li&gt;On the pages list it says 'showing posts' - it should be pages I think there.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19711 (Posts edit list window display no information about filtering) updated</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Sun, 09 Oct 2016 21:54:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19711#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19711#comment:13/1476050060855656</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19711 (Posts edit list window display no information about filtering) updated</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Sun, 09 Oct 2016 21:53:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19711#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19711#comment:12/1476050015231390</guid>
      <description>&lt;p&gt;
The output for the indicators is in the same place as where the output for the search term indicator goes for reference.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19711.2.patch attached to Ticket #19711</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Sun, 09 Oct 2016 21:51:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19711/19711.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19711/19711.2.patch/1476049874889832</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19711 (Posts edit list window display no information about filtering) updated</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Sun, 09 Oct 2016 21:50:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19711#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19711#comment:11/1476049856697145</guid>
      <description>&lt;p&gt;
@karmatosed Patch indeed in need of refresh. Uploading refresh now.
&lt;/p&gt;
&lt;p&gt;
With author (for example) selected:
&lt;/p&gt;
&lt;p&gt;
Before:
Url: wp-admin/edit.php?post_type=post&amp;amp;author=1
Screenshot: &lt;a class="ext-link" href="http://screencloud.net/v/6Y0B"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://screencloud.net/v/6Y0B&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
After:
Url: wp-admin/edit.php?post_type=post&amp;amp;author=1
Screenshot: &lt;a class="ext-link" href="http://screencloud.net/v/sK0s"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://screencloud.net/v/sK0s&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34891 (get_submit_button uses incorrect check for delete class) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 09 Oct 2016 21:43:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34891#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34891#comment:3/1476049404662948</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Seems the relevant changeset is &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/21789" title="New button styles.
Using the new buttons:
* Button classes are now ..."&gt;[21789]&lt;/a&gt;: there was a &lt;code&gt;switch&lt;/code&gt; before the change and as far as I see the &lt;code&gt;delete&lt;/code&gt; case was there just to ensure the &lt;code&gt;delete&lt;/code&gt; class was always paired with &lt;code&gt;button-secondary&lt;/code&gt;. Maybe those two lines could be removed now since &lt;code&gt;button-secondary&lt;/code&gt; should not be used (it's not responsive and doesn't reset the outline property on focus) and the default behaviour is to always have the base &lt;code&gt;button&lt;/code&gt; class so the result is &lt;code&gt;button delete&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35685 (Default HTTP schema when adding a custom link) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 09 Oct 2016 21:42:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35685#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35685#comment:4/1476049335863055</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@christophherr I agree that removing the default all together works. However, I notice it's only been removed through Appearance &amp;gt; Menus. It should also be removed in the Customizer menu interactions. If that can happen, I would agree this is ready to consider for commit, thanks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29932 (There is no error reporting in the Customizer (for upload failures)) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 09 Oct 2016 21:40:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29932#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29932#comment:18/1476049253686444</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I believe that his is now irrelevant because the upload control now extends the media control as of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29215" title="#29215: feature request: WP_Customize_Media_Control (closed: fixed)"&gt;#29215&lt;/a&gt; (in 4.2) and the media library will show an error message when an upload fails in the modal. @Fab1en can you confirm?
&lt;/p&gt;
&lt;p&gt;
Otherwise, the notifications API added in 4.6 as part of the setting validation improvements (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34893" title="#34893: enhancement: Improve Customizer setting validation model (closed: fixed)"&gt;#34893&lt;/a&gt;) provides the framework for controls to add notifications for errors, warnings, and informational messages.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35241 (NetworkError in firebug error console) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 09 Oct 2016 21:36:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35241#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35241#comment:12/1476049012003169</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm not at all sure this needs ui-feedback so removing that keyword for now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35288 (Search Engines Discouraged message improvements) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 09 Oct 2016 21:35:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35288#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35288#comment:17/1476048938613529</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36081 (Activity dashboard widget is not using word-wrap: break-word) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 09 Oct 2016 21:21:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36081#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36081#comment:15/1476048095914025</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Visually this looks a good patch, @DrewAPicture do you think you can comment as you were walking through this ticket from a code view? It would rock to get this into 4.7.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36922 (Customizer message when not showing widget area needs refinement) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 09 Oct 2016 21:17:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36922#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36922#comment:16/1476047871337109</guid>
      <description>&lt;p&gt;
@westonruter thanks for that! So good to get that little bit better an experience in :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26523 (Quick action links on 2 rows for tags and categories) closed</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 09 Oct 2016 21:17:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26523#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26523#comment:6/1476047820411692</guid>
      <description>wontfix</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #35497 (List tables: Post format links improvements) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 09 Oct 2016 21:12:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35497#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35497#comment:15/1476047572472306</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36922 (Customizer message when not showing widget area needs refinement) closed</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 09 Oct 2016 21:08:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36922#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36922#comment:15/1476047314512280</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38766" title="Customize: Improve message displayed in widgets panel when there are ..."&gt;38766&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Customize: Improve message displayed in widgets panel when there are no widget areas currently displayed in the preview.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props karmatosed, westonruter.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36922" title="#36922: enhancement: Customizer message when not showing widget area needs refinement (closed: fixed)"&gt;#36922&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38766]: Customize: Improve message displayed in widgets panel when there are ...</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 09 Oct 2016 21:08:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38766</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38766/1476047314029520</guid>
      <description>&lt;p&gt;
Customize: Improve message displayed in widgets panel when there are no widget areas currently displayed in the preview.
&lt;/p&gt;
&lt;p&gt;
Props karmatosed, westonruter.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36922" title="#36922: enhancement: Customizer message when not showing widget area needs refinement (closed: fixed)"&gt;#36922&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #33049 (Media Library toolbar: spinner position on small screens) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 09 Oct 2016 21:07:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33049#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33049#comment:3/1476047241950561</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I would +1 to giving a transparent overlay and being the left option. To me having a consistent play for the eye makes a lot of sense to users. I am also all for unifying any interaction or feedback like this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35496 (Quick Edit error messages UI improvements) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 09 Oct 2016 21:03:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35496#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35496#comment:3/1476047024129053</guid>
      <description>&lt;p&gt;
I think having them red is good. I almost want full on error messages though with boxes and everything. They merge a little too much for me just as text. However, I do wonder if making them an error box will be overkill.
&lt;/p&gt;
&lt;p&gt;
I wonder a little on positioning, the message seems to float without connecting to an action in a few of those screenshots. Could we use this as a chance to bring the message to the action also?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23477 (r21789 creates a breaking change in behavior for get_submit_button) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 09 Oct 2016 20:59:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23477#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23477#comment:13/1476046743008393</guid>
      <description>&lt;p&gt;
For reference, the core usage of &lt;code&gt;secondary&lt;/code&gt; and &lt;code&gt;button-secondary&lt;/code&gt; was cleaned up (as suggested in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23477/allow-secondary-button-class.patch" title="Attachment 'allow-secondary-button-class.patch' in Ticket #23477"&gt;allow-secondary-button-class.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23477/allow-secondary-button-class.patch" title="Download"&gt;​&lt;/a&gt;) in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/35182" title="Make some primary action buttons look primary.
* User ..."&gt;[35182]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38672" title="Administration: Improve the usage of the button CSS classes.
 ..."&gt;[38672]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The docs, however, still mention &lt;code&gt;secondary&lt;/code&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;submit_button()&lt;/code&gt;:
&lt;pre class="wiki"&gt; * @param string       $type             Optional. The type and CSS class(es) of the button. Core values
 *                                       include 'primary', 'secondary', 'delete'. Default 'primary'
&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_submit_button()&lt;/code&gt;:
&lt;pre class="wiki"&gt; * @param string       $type             Optional. The type of button. Accepts 'primary', 'secondary',
 *                                       or 'delete'. Default 'primary large'.
&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
It might be a good idea to remove it from here too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35395 (Provide a better gateway for code-based theme customizations with the ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 09 Oct 2016 20:58:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35395#comment:62</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35395#comment:62/1476046733608475</guid>
      <description>&lt;p&gt;
I also left a several comments as well. A few highlights:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I think we should just re-use the core &lt;code&gt;textarea&lt;/code&gt; control and skip trying to add line numbers. A line number gutter reduces the overall width in precious horizontal real estate. We can let an eventual CodeMirror or some other real editor library provide that UI instead.
&lt;/li&gt;&lt;li&gt;The &lt;code&gt;validate_balanced_characters&lt;/code&gt; method is going to need to be more robust to account for the characters appearing in string literals (&lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/154#discussion_r82528441"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;comment&lt;/a&gt;).
&lt;/li&gt;&lt;li&gt;Switch to only create the &lt;code&gt;custom_css&lt;/code&gt; posts when there is actually data being saved. No need to create these posts if there is no custom CSS
&lt;/li&gt;&lt;li&gt;Move the registration of the custom post type to &lt;code&gt;create_initial_post_types()&lt;/code&gt; instead of from the &lt;code&gt;WP_Custom_CSS&lt;/code&gt; class. Actually, I'm not sure about the best place to add CPT registration and also the filters that customize its behavior. In the past I think the norm for CPTs has been to add new global functions and add the filters in &lt;code&gt;default-filters.php&lt;/code&gt;. But is a practice we should continue?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
See full review: &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/154#pullrequestreview-3430614"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/154#pullrequestreview-3430614&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26523 (Quick action links on 2 rows for tags and categories) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 09 Oct 2016 20:57:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26523#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26523#comment:5/1476046644862813</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm not totally sold on widening that one column for some languages when on different devices that column scales anyway - no matter what language. My recommendation would be to not fix this. Does anyone object to that? To me, it wraps like it should and having things not all one line is just something happens not only in different languages but also in different screen resolutions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19711 (Posts edit list window display no information about filtering) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 09 Oct 2016 20:54:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19711#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19711#comment:10/1476046451681093</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@chriscct7 I was testing this and wanted to confirm what I should see different. If there could be some steps to test this that would be great. I did check the posts table but couldn't see anything visually changing.
&lt;/p&gt;
&lt;p&gt;
There was an error running the patch so perhaps we just need a refresh? I want to run the patch to give some feedback UI wise.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30937 (Add Customizer state persistence in changesets (formerly “transactions”)) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 09 Oct 2016 20:46:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30937#comment:69</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30937#comment:69/1476046011061347</guid>
      <description>&lt;p&gt;
For how changesets facilitate the scheduling of changes, see &lt;a href="https://core.trac.wordpress.org/ticket/28721#comment:12"&gt;comment&lt;/a&gt; on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28721" title="#28721: enhancement: Scheduled changes for the customizer (closed: fixed)"&gt;#28721&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The infrastructure for this has been implemented in the patch for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30937" title="#30937: feature request: Add Customizer state persistence in changesets (formerly “transactions”) (closed: fixed)"&gt;#30937&lt;/a&gt;.  […] There is no UI as part of the patch, so to test scheduling a change to the site title in 5 minutes:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Change the &lt;code&gt;blogname&lt;/code&gt; in the customizer to “Scheduled Title” and note that that a &lt;code&gt;changeset_uuid&lt;/code&gt; query param is added to the URL.
&lt;/li&gt;&lt;li&gt;Open the console and (assuming your browser timezone is the same as the blog's &lt;code&gt;timezone_string&lt;/code&gt;):
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="nx"&gt;inOneMinute&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;valueOf&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt; &lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nx"&gt;changesetDate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;inOneMinute&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getFullYear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;'-'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'00'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;inOneMinute&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getMonth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;'-'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'00'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;inOneMinute&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getDate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;' '&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'00'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;inOneMinute&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getHours&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;':'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'00'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;inOneMinute&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getMinutes&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;':'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'00'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;inOneMinute&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getSeconds&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;wp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;customize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;previewer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'future'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;changesetDate&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
&lt;strong&gt;Update:&lt;/strong&gt; As of WordPress 4.9 the &lt;code&gt;save&lt;/code&gt; call should be changed to the following so that the UI reflects the new state:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="nx"&gt;wp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;customize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'selectedChangesetStatus'&lt;/span&gt; &lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'future'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;wp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;customize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'selectedChangesetDate'&lt;/span&gt; &lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;changesetDate&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;wp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;customize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;previewer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// Reads from state for default values.
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;ol start="3"&gt;&lt;li&gt;Assuming that WP Cron is running properly your environment, you should see the new site title “Scheduled Title” at the designated time.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Alternatively, here is how you can schedule a change using WP-CLI without going into the customizer at all:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp post create \
    --post_type=customize_changeset \
    --post_name=$( uuidgen ) \
    --post_status=future \
    --post_date="$( wp eval "echo get_date_from_gmt( gmdate( 'Y-m-d H:i:s', time() + 5 * 60 ) );" )" \
    --post_content='{"blogname":{"value":"Scheduled Title"}}'
&lt;/pre&gt;&lt;p&gt;
If WP Cron isn't firing, you can always &lt;code&gt;wp cron event run publish_future_post&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 09 Oct 2016 20:39:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:80</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:80/1476045589800586</guid>
      <description>&lt;p&gt;
Ah, I think I see what you're talking about. &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37661/37661.8.diff" title="Attachment '37661.8.diff' in Ticket #37661"&gt;37661.8.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37661/37661.8.diff" title="Download"&gt;​&lt;/a&gt; fixes a bug in the code that hides the loading indicator and shows the error if an install times out/fails. As for why it's timing out, I'm not sure, but that's a server side issue with shiny updates that may be related to factors beyond our control (could also be on the .org side, the themes API has been having issues there the past couple of days).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37661.8.diff attached to Ticket #37661</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 09 Oct 2016 20:38:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37661/37661.8.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37661/37661.8.diff/1476045519364652</guid>
      <description>&lt;p&gt;
Fix hiding loader when an installation fails on an install &amp;amp; preview.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36922 (Customizer message when not showing widget area needs refinement) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 09 Oct 2016 20:30:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36922#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36922#comment:14/1476045046395926</guid>
      <description>&lt;p&gt;
@westonruter thanks - great suggestion. I've updated with a new patch to reflect that, thanks. Looking forward to getting this little UX improvement in this release. Thanks for helping do that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>369222-2.diff attached to Ticket #36922</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 09 Oct 2016 20:29:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36922/369222-2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36922/369222-2.diff/1476044984485964</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36922 (Customizer message when not showing widget area needs refinement) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 09 Oct 2016 20:11:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36922#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36922#comment:13/1476043916722672</guid>
      <description>&lt;p&gt;
@karmatosed Suggested refinement to the changed text:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="gd"&gt;- There are no widget areas on this page shown, however other sections in this theme have them.
&lt;/span&gt;&lt;span class="gi"&gt;+ There are no widget areas on the page shown, however other pages in this theme have them.
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37638 (Allow plugins to do comprehensive late validation of settings) closed</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 09 Oct 2016 20:07:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37638#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37638#comment:11/1476043636992237</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38765" title="Customize: Ensure `customize_validate_{$setting-&amp;gt;id}` filters apply on ..."&gt;38765&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Customize: Ensure &lt;code&gt;customize_validate_{$setting-&amp;gt;id}&lt;/code&gt; filters apply on input post values for &lt;code&gt;WP_Customize_Setting&lt;/code&gt; subclasses that neglect to apply the filter themselves.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37638" title="#37638: enhancement: Allow plugins to do comprehensive late validation of settings (closed: fixed)"&gt;#37638&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38765]: Customize: Ensure `customize_validate_{$setting-&gt;id}` filters apply on ...</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 09 Oct 2016 20:07:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38765</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38765/1476043636460611</guid>
      <description>&lt;p&gt;
Customize: Ensure &lt;code&gt;customize_validate_{$setting-&amp;gt;id}&lt;/code&gt; filters apply on input post values for &lt;code&gt;WP_Customize_Setting&lt;/code&gt; subclasses that neglect to apply the filter themselves.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37638" title="#37638: enhancement: Allow plugins to do comprehensive late validation of settings (closed: fixed)"&gt;#37638&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #23477 (r21789 creates a breaking change in behavior for get_submit_button) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 09 Oct 2016 20:06:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23477#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23477#comment:12/1476043616444840</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'd be in favor of closing this ticket. The CSS class &lt;code&gt;button-secondary&lt;/code&gt; should simply not be used, because buttons using it:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;they would be not responsive
&lt;/li&gt;&lt;li&gt;the focus style is wrong
&lt;/li&gt;&lt;li&gt;the &lt;code&gt;button&lt;/code&gt; base class looks exactly the same (and responsiveness and focus are OK)
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37914 (Taxonomy: Allow terms to be previewed before publishing) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sun, 09 Oct 2016 19:37:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37914#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37914#comment:9/1476041848842951</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37915 (Customize: allow terms to be created in nav menus) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sun, 09 Oct 2016 19:37:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37915#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37915#comment:11/1476041823223995</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Yes, I'm afraid this won't happen for 4.7. More to come after our upcoming meeting.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11895 (Allow more specific image size editing) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 09 Oct 2016 18:35:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11895#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11895#comment:25/1476038132722621</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
With responsive images in core I also feel this probably removes the need for this patch. I'm interested though in feedback from @frankgroeneveld as the original reporter.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22976 (Remove reference to category to tag converter from the tools page) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 09 Oct 2016 18:33:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22976#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22976#comment:7/1476037997057042</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I would +1 the idea of removing it due to it not being an importer and also removing the reference in wp-admin. In saying that though, I'd be interested in the use cases that still need it. It feels like a very small/ not that large if any group?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23227 (Properly reflect date and time formats throughout admin area) closed</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 09 Oct 2016 18:31:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23227#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23227#comment:5/1476037882295158</guid>
      <description>wontfix: &lt;p&gt;
I feel the point about context is right here, I'd be keen to maybe see this closed unless we want to iterate on the context. To me, this feels like a 'won't fix'. That's not saying the discussion in general can't have more conversation though. I'm doing some ui-feedback tag cleanup so marking as that for now. If wrong, please reopen.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #38270 (Better handling of widget errors) updated</title>
      
        <dc:creator>dustwolf</dc:creator>

      <pubDate>Sun, 09 Oct 2016 18:26:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38270#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38270#comment:2/1476037573252650</guid>
      <description>&lt;p&gt;
With the original code, if there is an error, the page comes up blank and there is no indication what the problem may be. With my patch, the page loads, but the functionality of the offending widget is conspicuously missing. The solution is not perfect, but it doesn't take much to determine the lesser of two evils.
&lt;/p&gt;
&lt;p&gt;
Furthermore with the existing code, if an end-user installs a widget with broken code, they get a blank page and cannot so much as uninstall the offending widget (without tweaking the database directly) because the interface is not accessible. If on the other hand they install a broken widget and it does not show up, they can understand that it doesn't work and remove it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 09 Oct 2016 18:25:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:79</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:79/1476037529399434</guid>
      <description>&lt;p&gt;
@celloexpressions do you think somehow I'm getting a timeout issue then on the bug where it never stops 'installing'? It's weird as happens no matter what theme. I did try smaller themes just incase.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23870 (Filter Glyph for Comment Required Fields) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 09 Oct 2016 18:15:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23870#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23870#comment:17/1476036933327136</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;ul&gt;&lt;li&gt;Are we sure it should be a filter rather than a &lt;code&gt;comment_form()&lt;/code&gt; argument?
&lt;/li&gt;&lt;li&gt;The filter name should start with &lt;code&gt;comment_form&lt;/code&gt; rather than &lt;code&gt;comment_fields&lt;/code&gt;, for consistency with other &lt;code&gt;comment_form()&lt;/code&gt; filters.
&lt;/li&gt;&lt;li&gt;The new filter needs to be documented as per the &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/inline-documentation-standards/php/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress PHP documentation standards&lt;/a&gt;.
&lt;/li&gt;&lt;li&gt;I agree the default string can be translatable, I don't see a reason to alter other strings here though.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23870#comment:15" title="Comment 15"&gt;cais&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I also added a couple more conditional checks to insure required related items are only used if actually required. For example, if (for whatever reason) the &lt;code&gt;get_option( 'require_name_email' )&lt;/code&gt; is false then there is no reason to have any value for &lt;code&gt;$required_text&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This makes the check below redundant: &lt;code&gt;( $req ? $required_text : '' )&lt;/code&gt;, but I agree it's better to consolidate these checks in one place. &lt;code&gt;$required_text&lt;/code&gt; should also be an empty string if &lt;code&gt;$req&lt;/code&gt; is set, but &lt;code&gt;$req_mark&lt;/code&gt; is empty.
&lt;/p&gt;
&lt;p&gt;
Any objections to &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23870/23870.5.patch" title="Attachment '23870.5.patch' in Ticket #23870"&gt;23870.5.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23870/23870.5.patch" title="Download"&gt;​&lt;/a&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23870.5.patch attached to Ticket #23870</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 09 Oct 2016 18:15:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23870/23870.5.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23870/23870.5.patch/1476036917082800</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 09 Oct 2016 18:14:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:93</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:93/1476036882546382</guid>
      <description>&lt;p&gt;
I stand by my significant concerns with the size of the patch and the lack of thorough integration with the customizer API. Especially considering that it is only for the UI in the customizer currently. If we want this UI, some additional specific technical guidelines for doing it in core are below.
&lt;/p&gt;
&lt;p&gt;
As I have stated previously, I do not have time to work on this patch, but I will provide feedback to make sure that we get to something that's appropriate for core. Once it's ready, I'll do a line-by-line code review, but we're not there yet.
&lt;/p&gt;
&lt;p&gt;
The UX feels pretty good. There is a significant lack of consensus on what problem we're trying to solve and whether this is the right solution, but this approach has been selected as the solution for now. The code needs work.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Large self-contained control objects work against the principles of the API. In the API, complex UI is structured with multiple control, section, and panel objects and each object provides (the ability for) a hierarchy of children objects than can extend base functionality to do more specific things. This approach results in much less code being required to build things with the API, whether they're in core or in themes and plugins. For this feature, it might actually mean more code initially, but it would provide functionality that can be built on much more easily.
&lt;/p&gt;
&lt;p&gt;
The current patch reminds me of the header image control implementation, which has proven extremely difficult to maintain and has a completely separate codebase from the other media controls (for historical reasons), with a lot of the logic existing outside of the control object. If this can't be properly maintained moving forward within the structure of the customize API, we should not add it to core.
&lt;/p&gt;
&lt;p&gt;
The customize JS API integrates a lot of backbone functionality internally. It shouldn't (but might) be necessary to use Backbone directly (menus and widgets kind of do, but not really, and need to be updated to remove that). All of the Backbone pieces, and really all of the JS, needs to be contained within section or control objects at a minimum.
&lt;/p&gt;
&lt;p&gt;
Menus and widgets &lt;em&gt;introduced&lt;/em&gt; the flyout panel UI and due to the massive scope of those projects, it was infeasible to abstract it in a meaningful way. Here, though, there is no reason to build yet another copy of it in a siloed way. And in fact, building it in a reusable way would drastically improve the overall quality of the solution to the API as a good chunk of the code will go toward something that is reusable in plugins. It should not be particularly difficult to extract that in the current patch as either a distinct control or a section, with a child control or a control within the section adding the pages UI to it.
&lt;/p&gt;
&lt;p&gt;
One UI adjustment that would provide a bit of simplification - since it's only up and down and the items aren't expandable, the reorder toggle should be removed in favor of showing the up/down icons directly. Users almost never notice the reorder button in testing, so it's better for discoverability and accessibility for that to always be on since there's room for the buttons here.
&lt;/p&gt;
&lt;p&gt;
A tight deadline isn't an excuse for rushing something into core that is not ready. Especially for a (theoretically) smaller feature in terms of UI, that is asking for trouble down the line. I'd love to see this happen, but it does take time to get it right. Deadlines are not arbitrary.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38272 (Media Library - Featured image is marked as Unattached) created</title>
      
        <dc:creator>mikehaceman</dc:creator>

      <pubDate>Sun, 09 Oct 2016 18:06:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38272</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38272/1476036410159545</guid>
      <description>&lt;p&gt;
Ive been struggling with this for quite some time. But with more images and posts, it started to bother me A LOT.
&lt;/p&gt;
&lt;p&gt;
So I noticed that when selecting a post Featured image that is already loaded into the Media Library, that image show "Unattached" in the "Uploaded to" column in the Media Library.
&lt;/p&gt;
&lt;p&gt;
I have 1000 pictures uploaded to Media Library and now one by one Im attaching it to the post using featured image option. The problem ... I have no clue which image i have already used. I found quite few posts about this issue but there is no real solution.
&lt;/p&gt;
&lt;p&gt;
I hope someone can finally look into it and fix it once and for all - its been years.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 09 Oct 2016 17:47:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:78</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:78/1476035274661301</guid>
      <description>&lt;p&gt;
The checks are used only to show the current selected item. And for search, the icon is not intended to be clickable, but clicking on it does focus the search field. Clearing the search field clears the results. I expressed concern about this with the presence of the search icon when this design was originally proposed; I think @folletto would need to go back and look at alternative approaches for the search icon to explore after an initial commit, but it can be addressed in 4.7 if there is a design solution. Maybe a warning when the search is empty, although it's no longer possible to see that unless you clear your search.
&lt;/p&gt;
&lt;p&gt;
The biggest problem with installation time is the size of the theme. Not much we can do there unfortunately, other than encouraging themes to strive for simplicity and minimize bundled resources.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38270 (Better handling of widget errors) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 09 Oct 2016 17:30:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38270#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38270#comment:1/1476034220292507</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the suggestion. However, I don't think this is an improvement because if the class doesn't exist then there will be no error at all, no indication that there is a problem other than the widget not showing up. On the other hand, if attempting to create a new instance of a class that doesn't exist, then the developer will know right away that they forgot to add the necessary &lt;code&gt;require_once&lt;/code&gt; statement.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23870 (Filter Glyph for Comment Required Fields) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 09 Oct 2016 16:11:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23870#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23870#comment:16/1476029464511131</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #docs by cais. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/docs/p1476029462000678"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23870.4.patch attached to Ticket #23870</title>
      
        <dc:creator>cais</dc:creator>

      <pubDate>Sun, 09 Oct 2016 16:07:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23870/23870.4.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23870/23870.4.patch/1476029252935355</guid>
      <description>&lt;p&gt;
refreshed patch including i18n changes
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38269 (WordPress 4.6.1 editor causes loss of content) closed</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Sun, 09 Oct 2016 16:06:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38269#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38269#comment:1/1476029209388526</guid>
      <description>worksforme: &lt;p&gt;
Hi there,
&lt;/p&gt;
&lt;p&gt;
The post editor looks perfectly fine with no plugins and a default theme on my end.
&lt;/p&gt;
&lt;p&gt;
This does sounds like a plugin or theme conflict causing issues for you though, and I would urge you to follow the default troubleshooting steps of disabling any plugins (I know this isn't a simple step with W3Total Cache, but is a necessity) and also testing with a default theme such as Twenty Sixteen.
&lt;/p&gt;
&lt;p&gt;
I'll leave this ticket as &lt;code&gt;worksforme&lt;/code&gt;, as vanilla WordPress doesn't behave like this. For help with troubleshooting I'd recommend opening a topic on the &lt;a class="ext-link" href="https://wordpress.org/support"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Support Forums&lt;/a&gt;, and if you do discover a bug in core I welcome you to open the ticket back up at that time.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #23870 (Filter Glyph for Comment Required Fields) updated</title>
      
        <dc:creator>cais</dc:creator>

      <pubDate>Sun, 09 Oct 2016 16:06:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23870#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23870#comment:15/1476029202555187</guid>
      <description>&lt;p&gt;
I've refreshed and adjusted the patch to include i18n relevant changes as well.
&lt;/p&gt;
&lt;p&gt;
I also added a couple more conditional checks to insure required related items are only used if actually required. For example, if (for whatever reason) the &lt;code&gt;get_option( 'require_name_email' )&lt;/code&gt; is false then there is no reason to have any value for &lt;code&gt;$required_text&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38271.diff attached to Ticket #38271</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Sun, 09 Oct 2016 15:59:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38271/38271.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38271/38271.diff/1476028747605974</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38271 (`wp-remove-post-lock` Ajax request generates notice in ...) created</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Sun, 09 Oct 2016 15:58:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38271</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38271/1476028738214206</guid>
      <description>&lt;p&gt;
Before &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38425" title="Editor: Use Beacon API over sync request
See ..."&gt;[38425]&lt;/a&gt;, when no &lt;code&gt;#active_post_lock&lt;/code&gt; was in the DOM, the POST request from &lt;code&gt;post.js&lt;/code&gt; with the &lt;code&gt;wp-remove-post-lock&lt;/code&gt; action would not include an &lt;code&gt;active_post_lock&lt;/code&gt; key, and &lt;code&gt;wp_ajax_wp_remove_post_lock()&lt;/code&gt; would return immediately.
&lt;/p&gt;
&lt;p&gt;
After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38425" title="Editor: Use Beacon API over sync request
See ..."&gt;[38425]&lt;/a&gt;, when no &lt;code&gt;#active_post_lock&lt;/code&gt; is in the DOM, &lt;code&gt;active_post_lock&lt;/code&gt; is converted to the string "undefined" when &lt;code&gt;formData&lt;/code&gt; is supported (I'm using Chrome 53.0.2785.143).
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp_ajax_wp_remove_post_lock()&lt;/code&gt; tries to process that value, leading to &lt;code&gt;Undefined offset: 1&lt;/code&gt; after &lt;code&gt;array_map( 'absint', explode( ':', $_POST['active_post_lock'] ) )&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
To replicate, visit &lt;code&gt;post-new.php&lt;/code&gt; and refresh the page after it loads.
&lt;/p&gt;
&lt;p&gt;
The attached patch would return before the Ajax request occurs in &lt;code&gt;post.js&lt;/code&gt; if &lt;code&gt;data.active_post_lock&lt;/code&gt; is undefined.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>134043eb91d1d6a560130a5d06237af5b1173c39.patch attached to Ticket #38270</title>
      
        <dc:creator>dustwolf</dc:creator>

      <pubDate>Sun, 09 Oct 2016 15:34:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38270/134043eb91d1d6a560130a5d06237af5b1173c39.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38270/134043eb91d1d6a560130a5d06237af5b1173c39.patch/1476027293259313</guid>
      <description>&lt;p&gt;
Patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38270 (Better handling of widget errors) created</title>
      
        <dc:creator>dustwolf</dc:creator>

      <pubDate>Sun, 09 Oct 2016 15:34:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38270</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38270/1476027273977934</guid>
      <description>&lt;p&gt;
This change makes debugging broken widgets a lot less painful -- in case of errors in widgets this will allow the site to load and the developer to see the error messages instead of just blowing up with the ambiguous error message "Class not defined".
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/pull/207#issuecomment-252338814"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/pull/207#issuecomment-252338814&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 09 Oct 2016 15:31:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:77</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:77/1476027116588803</guid>
      <description>&lt;p&gt;
I did some testing on the latest patch and found a few things that feel hitches flow wise and potentially bugs.
&lt;/p&gt;
&lt;p&gt;
I still find the clicking and search icon to be a weird behaviour. I also feel it is either having a bug or issue with the flow. See this screencast:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/P676JRR533.gif"&gt;&lt;img src="https://cldup.com/P676JRR533.gif" alt="https://cldup.com/P676JRR533.gif" crossorigin="anonymous" title="https://cldup.com/P676JRR533.gif" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
@celloexpressions the above I feel needs some work before we merge as it feels like a bug. Perhaps there is one, I was unsure as it felt weird to experience in the searching.
&lt;/p&gt;
&lt;p&gt;
I do really find the checkmarks weird used in so many different contexts. They seem to be used (I've brought this up a few times):
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;To show current item
&lt;/li&gt;&lt;li&gt;To show success
&lt;/li&gt;&lt;li&gt;To show a completed search
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
All of this makes for a weird experience. I'd almost suggest removing some and limiting it to one context.
&lt;/p&gt;
&lt;p&gt;
@celloexpressions I still have a bug which you can see here where the endless install loop happens. Here is a gif showing both experiences and the endless loop install at end. I can only get out by clicking outside or refresh. This is on Sierra and Chrome.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/igRPQWt5SN.gif"&gt;&lt;img src="https://cldup.com/igRPQWt5SN.gif" alt="https://cldup.com/igRPQWt5SN.gif" crossorigin="anonymous" title="https://cldup.com/igRPQWt5SN.gif" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I worry a lot about times it takes for things to happen on install / preview and the experience. This may be something we can't fix in this iteration, but it's a real issue as shown in above gif.
&lt;/p&gt;
&lt;p&gt;
I do strongly feel we need to remove a button, this is a confusing UI with both. Beyond the double spinners, the install/install/preview text soup is hard to navigate.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37407 (Filter button should not appear when no posts are available in list) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 09 Oct 2016 15:06:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37407#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37407#comment:8/1476025615791840</guid>
      <description>&lt;p&gt;
@swissspidy are you cool about committing this then? Would be great to see this get in from the good work @juhise has done.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36497 (Merge Twenty Sixteen with the rest of WordPress Core) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 09 Oct 2016 15:03:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36497#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36497#comment:15/1476025437308468</guid>
      <description>&lt;p&gt;
@DrewAPicture are we still waiting on documentation?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36183 (Twenty Fourteen: Incompatibility with Right-To-Left (RTL) webpages AND ...) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 09 Oct 2016 15:03:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36183#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36183#comment:10/1476025407451799</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37926 (Twenty Eleven &amp; Twenty Twelve: Dropdown category widget exceeds parent ...) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 09 Oct 2016 15:02:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37926#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37926#comment:4/1476025377037552</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37536 (Twenty Fifteen: Improve sticky sidebar logic.) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 09 Oct 2016 15:02:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37536#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37536#comment:4/1476025352562079</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37926 (Twenty Eleven &amp; Twenty Twelve: Dropdown category widget exceeds parent ...) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 09 Oct 2016 15:00:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37926#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37926#comment:3/1476025243758669</guid>
      <description>&lt;p&gt;
@gma992 how are you looking for a patch for this? I'd love to see your patch, if not just let me know on this ticket and we can explore one for this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36922 (Customizer message when not showing widget area needs refinement) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 09 Oct 2016 14:56:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36922#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36922#comment:12/1476025015571836</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think getting at least a text change in this release makes sense and is a good low hanging UX improvement. I've added a patch for that &lt;a href="https://core.trac.wordpress.org/attachment/ticket/36922/369222.patch"&gt;here&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
@westonruter and/or @celloexpressions could we see about getting this added for 4.7 as it does provide a better context and aids an issue I've seen in user testing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>369222.patch attached to Ticket #36922</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 09 Oct 2016 14:53:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36922/369222.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36922/369222.patch/1476024801437845</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 09 Oct 2016 14:43:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:92</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:92/1476024184370726</guid>
      <description>&lt;p&gt;
@bradyvercher I had a play around with the patch and if I'm right the live preview is missing? I ignored there are some mockup elements missing that are pure UI - those can be brought in once we have a working patch.
&lt;/p&gt;
&lt;p&gt;
If I put the live preview to the side, the flow of this feels right. It makes sense and I have created a little movie here to show people:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/RTYI60iZQO.gif"&gt;&lt;img src="https://cldup.com/RTYI60iZQO.gif" alt="https://cldup.com/RTYI60iZQO.gif" crossorigin="anonymous" title="https://cldup.com/RTYI60iZQO.gif" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I really appreciate you creating this as it gives a really good sense of some of the flow. It makes me also feel some of the differences are important for us to have. I'll note before listing these I see as iterations not reasons to reject this patch at all, it's a great groundwork in a fast time:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;An indication through arrows of reordering over the 'reorder' text. I strongly feel that isn't a good text option and an extra click we can do without.
&lt;/li&gt;&lt;li&gt;Padding and lines in the actual panel. It feels super cluttered. Maybe a reason we should explore this as a new panel? I'd be keen to see that as an experience.
&lt;/li&gt;&lt;li&gt;Remove word 'page' beside the page as it's that when you are picking. I understanding this and other things may be legacy of using menus perhaps?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
As far as the code goes, I am unable to comment but I also think we have to support and help each other in this patch because it's a tight time frame. I think @bradyvercher what you've created is amazing and gets us to the point of feeling this - something we have been unable to. Thanks for that, it's really good to feel this flow.
&lt;/p&gt;
&lt;p&gt;
For next steps, I would like to see outlined what we can do to make this more aligned both to the coding practices want - if needed - and then to the mocks for some of the UI.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37889 ("Add post" overwriting a previous post in 4.6) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 09 Oct 2016 14:05:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37889#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37889#comment:10/1476021932388868</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38185 (Improve the post "locked indicator" accessibility) updated</title>
      
        <dc:creator>mariusvetrici</dc:creator>

      <pubDate>Sun, 09 Oct 2016 11:44:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38185#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38185#comment:13/1476013493249686</guid>
      <description>&lt;p&gt;
I've installed and tested 38185.3.patch and it adds the Span with the text notification.
&lt;/p&gt;
&lt;p&gt;
However, when the indicator is hidden, it is not set to display: none
&lt;a class="ext-link" href="http://screencast.com/t/IBl4RhEU"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://screencast.com/t/IBl4RhEU&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
rather the height is set to 0:
&lt;a class="ext-link" href="http://screencast.com/t/lkCRAcbUp5ei"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://screencast.com/t/lkCRAcbUp5ei&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I didn't test this with a screen reader, but as per the comments from above looks like we need to have it display: none to prevent screen readers from reading this text.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sun, 09 Oct 2016 11:28:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:94</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:94/1476012499263954</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:93" title="Comment 93"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:92" title="Comment 92"&gt;ramiy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Few more globals that can be replaced with functions:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Those that return arrays allow access but not modification of the arrays.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, I know. Using those functions we can't remove all the globals, but we can replace the vast majority.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38269 (WordPress 4.6.1 editor causes loss of content) created</title>
      
        <dc:creator>rsspanic</dc:creator>

      <pubDate>Sun, 09 Oct 2016 11:13:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38269</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38269/1476011591577048</guid>
      <description>&lt;p&gt;
Hi, since the upgrade to 4.6 (or perhaps it is 4.6.1) our editorial staff have been experiencing strange issues – sometimes they write posts in text mode, and the editing screen opens up the post split into two vertical windows (like trying to edit in two windows in MS Word) without them wanting this; each with its own save button and if they save the top half, the bottom of the post gets erased. Another strange thing that happens occasionally is that all the links in the post get pushed to its bottom.
&lt;/p&gt;
&lt;p&gt;
What’s going on and what can we do? our editors already had to spend hours of work recreating content because of this.
&lt;/p&gt;
&lt;p&gt;
Our site does have dozens of other plugins and we have a custom theme based on Designwall DW Focus. But those troubles started only after updating to 4.6. Before that we’ve been working for years with essentially the same setup and never had these problems. I'm sure they are not connected to plugins because I have not installe a new plugin in months. We only did a few updates to existing plugins in the last few weeks.
&lt;/p&gt;
&lt;p&gt;
Oue editor has been updated to version 1.2.6.3 and we also have W3 Total cache 0.9.5.1. It has been reporting this error in the last month or so- see below - but the problem started way after this error message.
&lt;/p&gt;
&lt;p&gt;
many thanks for any help.
&lt;/p&gt;
&lt;p&gt;
W3 Total Cache error: It appears Page Cache URL rewriting is not working. Please verify that the server configuration allows .htaccess
Unfortunately disk enhanced page caching will not function without custom rewrite rules. Please ask your server administrator for assistance. Also refer to the install page for the rules for your server.
&lt;/p&gt;
&lt;p&gt;
Many thanks...
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #32306 (wp-cron throws 500 errors for SSL enabled sites) updated</title>
      
        <dc:creator>omriamos</dc:creator>

      <pubDate>Sun, 09 Oct 2016 11:09:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32306#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32306#comment:8/1476011384102944</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I have the same issue.
Is there a fix for this?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 09 Oct 2016 10:27:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:91</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:91/1476008874866767</guid>
      <description>&lt;p&gt;
@bradyvercher I for one am grateful of your patch as you say it's a starting point and well we didn't have one before. I will test today fully again and see if can get it working.
&lt;/p&gt;
&lt;p&gt;
@celloexpressions maybe we can take the iteration approach and work with @bradyvercher to get a solution that is more streamlined? I also worry about stating this ticket has to have certain things in it to be put into core, that's come up before and been said to not be case, so I'd like to consider if we can work around that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37817 (Emoji code not loaded responsibly) updated</title>
      
        <dc:creator>superpoincare</dc:creator>

      <pubDate>Sun, 09 Oct 2016 09:46:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37817#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37817#comment:19/1476006394926010</guid>
      <description>&lt;p&gt;
I think there's still a chance that a browser has emoji4 support and not unicode9 support. Rainbow flag is emoji4, not unicode 9. Apple already has limited emoji4 support and no unicode9 support, although the latest diff should work.
&lt;/p&gt;
&lt;p&gt;
I was thinking in the other ticket about Woman shrugging, Type 4 &lt;a class="ext-link" href="http://emojipedia.org/woman-shrugging-type-4/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://emojipedia.org/woman-shrugging-type-4/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Shrug is in unicode9 but has no skin tones there. Emoji4 has shrug with skin tones. Any browser which can display this emoji4 emoji would automatically include rainbow flag and also unicode9. So detecting this will detect both unicode9, emoji4. In effect only one detection might be needed. (My analysis might be a bit speculative).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26511 (Introduce a locale-switching function) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 09 Oct 2016 09:41:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26511#comment:72</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26511#comment:72/1476006085474986</guid>
      <description>&lt;p&gt;
An &lt;code&gt;is_locale_switched()&lt;/code&gt; function analog to &lt;code&gt;ms_is_switched()&lt;/code&gt; might be worth adding.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26511 (Introduce a locale-switching function) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 09 Oct 2016 09:36:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26511#comment:71</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26511#comment:71/1476005808797807</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18375 (Post type templates) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 09 Oct 2016 09:36:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18375#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18375#comment:38/1476005783237073</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36802 (wp_editor doesn't display "Add Media" button in Firefox, Safari or Chrome) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 09 Oct 2016 09:34:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36802#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36802#comment:11/1476005670063163</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38208 (Get total number of paged comments not working anymore) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 09 Oct 2016 09:33:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38208#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38208#comment:6/1476005626770389</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38206 (Comments going into Feedback) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 09 Oct 2016 09:33:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38206#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38206#comment:2/1476005585716743</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38184 (with post formats enabled previewing pages gives an error 404 with ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 09 Oct 2016 09:32:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38184#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38184#comment:2/1476005574294569</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35889 (Default themes backwards compatibility message) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 09 Oct 2016 09:32:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35889#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35889#comment:4/1476005558902038</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38129 (Rename `dynamic_sidebar` to something more understandable) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 09 Oct 2016 09:32:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38129#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38129#comment:3/1476005542869548</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Resolution&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30258 (Infinite loop in wp_mkdir_p in combination with open_basedir) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 09 Oct 2016 09:31:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30258#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30258#comment:13/1476005507804424</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38191 (Further hardening of the role and capability tests) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 09 Oct 2016 09:31:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38191#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38191#comment:6/1476005498025695</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #14752,​38267 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 09 Oct 2016 09:31:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=14752%2C38267</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=14752%2C38267/1476005460255419</guid>
      <description>duplicate: &lt;p&gt;
Hey there,
&lt;/p&gt;
&lt;p&gt;
Thanks for your report and welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
I'm closing this one as a duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14752" title="#14752: feature request: Warn after theme activation if wp_head/footer is missing (closed: wontfix)"&gt;#14752&lt;/a&gt; where we're already tracking this issue. Even if that ticket is closed, discussion can continue there.
&lt;/p&gt;
&lt;p&gt;
Also, I want to let you know that using such language (my code was…) is really inappropriate.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #38268 (WP_Comment_Query Pagination) created</title>
      
        <dc:creator>wordpresssites</dc:creator>

      <pubDate>Sun, 09 Oct 2016 09:21:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38268</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38268/1476004878644858</guid>
      <description>&lt;p&gt;
Is it possible to build pagination into WP_Comment_Query so previous &amp;amp; next page of comments can be easily added when listing comments using this function &amp;amp; get_comments?
&lt;/p&gt;
&lt;p&gt;
Something like paged and comments per page parameters?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #30937 (Add Customizer state persistence in changesets (formerly “transactions”)) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 09 Oct 2016 07:08:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30937#comment:68</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30937#comment:68/1475996903332919</guid>
      <description>&lt;p&gt;
Latest refinements: &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/161/files/8090d71..b582a43"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/161/files/8090d71..b582a43&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/161/commits/c3254d4"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;c3254d4&lt;/a&gt; Prevent intercepting link clicks and form submissions if not in preview iframe; also skip widgets and nav menu integrations if not in iframe
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/161/commits/1edf58e"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;1edf58e&lt;/a&gt; Abort ajax requests using POST method, and prevent default forms using POST method
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/161/commits/185a354"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;185a354&lt;/a&gt; Revert aborting POST ajax requests since breaks selective refresh
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/161/commits/f5d81e4"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;f5d81e4&lt;/a&gt; Add excludeCustomized option to wp.customize.previewer.query()
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/161/commits/9de3a51"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;9de3a51&lt;/a&gt; Refine the how query vars are assembled for requests
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/161/commits/ec779ad"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;ec779ad&lt;/a&gt; Ignore preparing internal jump links. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34142" title="#34142: defect (bug): Links with preventDefault() don't have action prevented in Customizer (closed: fixed)"&gt;#34142&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/161/commits/b7018bb"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;b7018bb&lt;/a&gt; Fix populating post values when publishing a changeset post
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/161/commits/d2526fa"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;d2526fa&lt;/a&gt; Use setting._dirty flag to find settings to include in changeset; clear _dirty upon succssful save
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/161/commits/710deac"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;710deac&lt;/a&gt; Fix publishing changeset asynchronously in WP Cron
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/161/commits/b582a43"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;b582a43&lt;/a&gt; Also remove AYS dialog when clicking on Live Preview button in theme modal
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37817 (Emoji code not loaded responsibly) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Sun, 09 Oct 2016 07:02:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37817#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37817#comment:18/1475996528269513</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37817/37817.diff" title="Attachment '37817.diff' in Ticket #37817"&gt;37817.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37817/37817.diff" title="Download"&gt;​&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;add defer attribute to inserted scripts
&lt;/li&gt;&lt;li&gt;retain only flag, pride flag and emoji4 tests (@pento, correct me if I misunderstood &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37817#comment:17" title="Comment 17"&gt;comment:17&lt;/a&gt;)
&lt;/li&gt;&lt;li&gt;creates canvas element once only
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I'm in two minds as to whether the parsing event should be delayed until the window.onload event runs.
&lt;/p&gt;
&lt;p&gt;
I agree re: delaying the tests until render.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37817.diff attached to Ticket #37817</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Sun, 09 Oct 2016 06:51:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37817/37817.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37817/37817.diff/1475995882958135</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #28721 (Scheduled changes for the customizer) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 09 Oct 2016 06:45:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28721#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28721#comment:12/1475995504591718</guid>
      <description>&lt;p&gt;
The infrastructure for this has been implemented in the patch for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30937" title="#30937: feature request: Add Customizer state persistence in changesets (formerly “transactions”) (closed: fixed)"&gt;#30937&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
To test, first do &lt;code&gt;grunt patch:https://github.com/xwp/wordpress-develop/pull/161&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
There is no UI as part of the patch, so to test scheduling a change to the site title in 5 minutes:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Change the &lt;code&gt;blogname&lt;/code&gt; in the customizer to “Scheduled Title” and note that that a &lt;code&gt;changeset_uuid&lt;/code&gt; query param is added to the URL.
&lt;/li&gt;&lt;li&gt;Open the console and (assuming your browser timezone is the same as the blog's &lt;code&gt;timezone_string&lt;/code&gt;):
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="nx"&gt;inOneMinute&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;valueOf&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt; &lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nx"&gt;changesetDate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;inOneMinute&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getFullYear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;'-'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'00'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;inOneMinute&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getMonth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;'-'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'00'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;inOneMinute&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getDate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;' '&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'00'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;inOneMinute&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getHours&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;':'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'00'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;inOneMinute&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getMinutes&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;':'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'00'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;inOneMinute&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getSeconds&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;wp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;customize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;previewer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'future'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;changesetDate&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
&lt;strong&gt;Update:&lt;/strong&gt; As of WordPress 4.9 the &lt;code&gt;save&lt;/code&gt; call should be changed to the following so that the UI reflects the new state:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="nx"&gt;wp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;customize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'selectedChangesetStatus'&lt;/span&gt; &lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'future'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;wp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;customize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'selectedChangesetDate'&lt;/span&gt; &lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;changesetDate&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;wp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;customize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;previewer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// Reads from state for default values.
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;ol start="3"&gt;&lt;li&gt;Assuming that WP Cron is running properly your environment, you should see the new site title “Scheduled Title” at the designated time.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Alternatively, here is how you can schedule a change using WP-CLI without going into the customizer at all:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp post create \
    --post_type=customize_changeset \
    --post_name=$( uuidgen ) \
    --post_status=future \
    --post_date="$( wp eval "echo get_date_from_gmt( gmdate( 'Y-m-d H:i:s', time() + 5 * 60 ) );" )" \
    --post_content='{"blogname":{ "value":"Scheduled Title"}}'
&lt;/pre&gt;&lt;p&gt;
If WP Cron isn't firing, you can always &lt;code&gt;wp cron event run publish_future_post&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38121 (Crossorigin and other attributes for wp_resource_hints) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Sun, 09 Oct 2016 05:50:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38121#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38121#comment:9/1475992249208566</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38121/38121.3.diff" title="Attachment '38121.3.diff' in Ticket #38121"&gt;38121.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38121/38121.3.diff" title="Download"&gt;​&lt;/a&gt; uses the second format from &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38121#comment:3" title="Comment 3"&gt;comment:3&lt;/a&gt;. No url alias for href as it's not done elsewhere.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38121.3.diff attached to Ticket #38121</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Sun, 09 Oct 2016 05:47:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38121/38121.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38121/38121.3.diff/1475992044084360</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38267 (debug not reporting wp_footer() missing) created</title>
      
        <dc:creator>Brandora</dc:creator>

      <pubDate>Sun, 09 Oct 2016 05:41:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38267</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38267/1475991663993281</guid>
      <description>&lt;p&gt;
hi i recently came across a problem (my fault) because i accidentally deleted wp_footer() out of the code before the ending &amp;lt;/body&amp;gt; tag and one of my plugins did not function. the developer of the plugin (mihai from wpbruiser which rules btw) is the one that pointed this out to me.
&lt;/p&gt;
&lt;p&gt;
i feel like if i have set wp_debug to true in the config and our theme or setup is missing the function wp_footer() in the code the debug should alert the user about this. from my perspective, i had 0 errors and thought my code was solid. however, i am new to wordpress development but i am not new to web development...coming from asp/asp.net background. if the debug mode had reported this it seems it wouldve saved me a lot of time/communication with the plugin developer which had literally nothing to do with this issue. this isnt a bug report but something i think is very important to developers working in your platform as something as simple as having the wp_footer missing seems like it would throw some errors. something to consider.
&lt;/p&gt;
&lt;p&gt;
thanks,
brandon
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38121 (Crossorigin and other attributes for wp_resource_hints) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Sun, 09 Oct 2016 05:27:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38121#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38121#comment:8/1475990830069312</guid>
      <description>&lt;p&gt;
The once change I'd make to your patch is to replace a number if &lt;code&gt;else if&lt;/code&gt;s with &lt;code&gt;elseif&lt;/code&gt;, see &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38121/38121.2.diff" title="Attachment '38121.2.diff' in Ticket #38121"&gt;38121.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38121/38121.2.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Seeing it code, I'm not sure my first suggestion above is a good idea afterall. It seems a bit error prone. I'll work on something seperate.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>bradyvercher</dc:creator>

      <pubDate>Sun, 09 Oct 2016 05:25:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:90</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:90/1475990710343632</guid>
      <description>&lt;p&gt;
@karmatosed Yes, it should include the Customizer UI. You need to add support to your theme with this snippet:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action( 'after_setup_theme', function() {
	add_theme_support( 'front-page-sections' );
} );
&lt;/pre&gt;&lt;p&gt;
Once you've added that, it works like the mockup. The UI will show in the Static Front Page section when a page is set to show on front.
&lt;/p&gt;
&lt;p&gt;
@celloexpressions I'm not really sure where to start and it's a bit disappointing, but there's a lot of misinformation in your comment.
&lt;/p&gt;
&lt;p&gt;
This is implemented as a self-contained Customizer control, so it doesn't need embedded sections or a fly-out panel API. It integrates with the Customizer API where necessary and uses Backbone.js views to manage the UI, which I would argue is better understood by more developers and prevalent throughout the WordPress codebase. This part is pretty straightforward and is hardly unmaintainable.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As a general rule, we need to try to improve on existing API functionality when introducing new functionality rather than working around it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This doesn't work around the Customizer API. It integrates with the API where necessary and takes advantage of the structure Backbone.js provides to implement the UI. New features require new code. I'm all for improving existing APIs, but that's outside the scope at the moment. Menus and widgets both use Backbone.js, but weren't built in such a way that their functionality could be reused and the code in the patch is closer to creating reusable components than what's currently available.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The dropdown-pages control is the current way to add post object selector UI...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't really think that control is even close to being usable for this feature in any meaningful way.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Building out a solution to &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36733" title="#36733: enhancement: Use a custom customizer section for add-widgets and add-menu-items ... (new)"&gt;#36733&lt;/a&gt; would be a requirement if we want to use that UI here, with the option to update widgets and menus to use it later.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That wasn't a requirement for getting widgets or menus into core and shouldn't be a requirement here.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If we can get something similar to what is mocked up here with less extreme technical debt...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It's a little concerning that a new control can't be introduced to core without adding "extreme technical debt" to a feature that's already 40K+ lines of code. If you'd like to take more than a "glance" and make actionable suggestions that actually reduce the amount of code, I'm happy to iterate, but I'm disinclined to spend any more effort with this kind of feedback.
&lt;/p&gt;
&lt;p&gt;
It may be worth reducing the public surface by making much of the JavaScript in the patch private so that it could be refactored in the future. The AJAX callback could also be removed if the REST API endpoints make it into core this cycle -- at the moment it's modeled on &lt;code&gt;wp_ajax_find_posts()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Like I mentioned in my initial comment, this is a solid start. It's not perfect and needs some iteration, but I'm confident in the approach.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38121.2.diff attached to Ticket #38121</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Sun, 09 Oct 2016 05:19:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38121/38121.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38121/38121.2.diff/1475990359139199</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21627 (Filter for custom-background CSS selector) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Sun, 09 Oct 2016 04:50:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21627#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21627#comment:25/1475988631953117</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I will bump this for a future release, the old patch is missing a bunch of escaping. The timeline for getting that in and unit tests seems a little tight.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/21627/21627.2.diff" title="Attachment '21627.2.diff' in Ticket #21627"&gt;21627.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/21627/21627.2.diff" title="Download"&gt;​&lt;/a&gt; includes some escaping but I'm after some advice on escaping the selector.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>21627.2.diff attached to Ticket #21627</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Sun, 09 Oct 2016 04:45:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21627/21627.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21627/21627.2.diff/1475988350407433</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Sun, 09 Oct 2016 04:40:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:93</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:93/1475988057741477</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:92" title="Comment 92"&gt;ramiy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Few more globals that can be replaced with functions:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Those that return arrays allow access but not modification of the arrays.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38261 (A FORCE_SSL_SCRIPTS constant) updated</title>
      
        <dc:creator>mark-k</dc:creator>

      <pubDate>Sun, 09 Oct 2016 04:29:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38261#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38261#comment:1/1475987345758472</guid>
      <description>&lt;p&gt;
The external urls part is problematic, not everybody serves the same content from urls in which the only difference is the protocol. vimeo is a notable offender, but might not be the only one.
&lt;/p&gt;
&lt;p&gt;
hmmm can't find the documentation right now but I remember I ran into it about a year ago.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38764]: Emoji: Update Emoji CDN filter default for resource hints.  Updates ...</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Sun, 09 Oct 2016 04:23:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38764</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38764/1475987023498712</guid>
      <description>&lt;p&gt;
Emoji: Update Emoji CDN filter default for resource hints.
&lt;/p&gt;
&lt;p&gt;
Updates the default value for the filter &lt;code&gt;emoji_svg_url&lt;/code&gt; used in &lt;code&gt;wp_resource_hints()&lt;/code&gt; to match the default used for the filter in &lt;code&gt;_print_emoji_detection_script()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38717" title="Emoji: Add support for the upcoming Emoji 4 release.
Emoji 4 adds 32 ..."&gt;[38717]&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38724" title="#38724: defect (bug): Add &amp;#34;apply&amp;#34; as alias for &amp;#34;patch&amp;#34; in Grunt tools (closed: fixed)"&gt;#38724&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36664 (Input lag in text editor) reopened</title>
      
        <dc:creator>MarioKnight</dc:creator>

      <pubDate>Sun, 09 Oct 2016 03:51:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36664#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36664#comment:4/1475985060774214</guid>
      <description>&lt;p&gt;
Interestingly, though my issue submission to the Chrome dev team hasn't been updated in some time, the POC page I made to show them this is no longer showing the lag.  So I decided to check on the page that was originally reported to me if this was no longer present there as well.  Sadly, this is not the case.  Similar to what @azaozz mentioned, the text editor tab still shows the lag.  The visual editor tab seems to work with no issues.  I only worked with the text editor tab myself, I would have to ask my friend if he noticed it there initially or at all.  The lag exists regardless on if the full-height editor is enabled or disabled.  I do not have any auto-correct extension in place.
&lt;/p&gt;
&lt;p&gt;
I am currently using Chrome 53.0.2785.143 m on Windows 7, WordPress 4.6.1.  I checked on Firefox 49.0.1 as well, and the behavior is the same (POC page tests seemingly fine, text editor tab shows lag).  It appears that we failed to check Firefox back in April, likely because the first issue report was a Chrome-only issue, so I don't know how "new" this issue might be to Firefox.
&lt;/p&gt;
&lt;p&gt;
Since this is still present and no longer seems to be browser-specific, I'll re-open this with a new summary label.  Please let me know if there's anything else you would need from my end or have anything you'd like me to test out.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #38266 (Tests: Use assertSame() when the type of the value in the assertion is ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 09 Oct 2016 01:57:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38266#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38266#comment:1/1475978235931046</guid>
      <description>&lt;p&gt;
Looks like two of the assertions in &lt;code&gt;Tests_Cache&lt;/code&gt; are incorrect.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;code&gt;test_miss()&lt;/code&gt; - &lt;code&gt;false&lt;/code&gt; is returned from a cache miss, not &lt;code&gt;null&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;test_add_get_null()&lt;/code&gt; - a &lt;code&gt;null&lt;/code&gt; value is retained, not converted to an empty string.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
These will need more investigation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34843 (Customizer: allow themes in the Customizer to be disabled by plugins) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 09 Oct 2016 01:56:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34843#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34843#comment:5/1475978208002776</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This will be fixed in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37661" title="#37661: feature request: A New Experience for Discovering, Installing, and Previewing Themes in ... (closed: fixed)"&gt;#37661&lt;/a&gt;, since all theme information is loaded via Ajax. Removing the panel via &lt;code&gt;remove_panel( 'themes' )&lt;/code&gt; will allow the feature to be disabled without causing any significant performance impacts.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38266 (Tests: Use assertSame() when the type of the value in the assertion is ...) created</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 09 Oct 2016 01:38:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38266</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38266/1475977116659299</guid>
      <description>&lt;p&gt;
Several tests use &lt;code&gt;assertEquals()&lt;/code&gt; on a falsey value where the type is important to the accuracy of the test.
&lt;/p&gt;
&lt;p&gt;
For example, in &lt;code&gt;Tests_Cache::test_miss()&lt;/code&gt;, a value is tested against an expected &lt;code&gt;NULL&lt;/code&gt; value using  &lt;code&gt;assertEquals()&lt;/code&gt; which will produce a false positive if another falsey value such as &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, or an empty string is passed. These means these such assertions are actually buggy.
&lt;/p&gt;
&lt;p&gt;
Using &lt;code&gt;assertSame()&lt;/code&gt; instead of &lt;code&gt;assertEquals()&lt;/code&gt; will cause the type to be checked in addition to its value.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36786 (Can't pass filter names to `MockAction::get_call_count()`) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 09 Oct 2016 01:30:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36786#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36786#comment:2/1475976657801808</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37371 (Reduce reliance on randomness in tests) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 09 Oct 2016 01:29:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37371#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37371#comment:8/1475976545300140</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38763" title="Build/Test Tools: Continue eliminating randomness in tests.
See ..."&gt;38763&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Build/Test Tools: Continue eliminating randomness in tests.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38762" title="Build/Test Tools: Begin eliminating unnecessary randomness in tests.
 ..."&gt;[38762]&lt;/a&gt;&lt;br /&gt;
See &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/37371" title="#37371: enhancement: Reduce reliance on randomness in tests (accepted)"&gt;#37371&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38763]: Build/Test Tools: Continue eliminating randomness in tests.  See ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 09 Oct 2016 01:29:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38763</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38763/1475976544805610</guid>
      <description>&lt;p&gt;
Build/Test Tools: Continue eliminating randomness in tests.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38762" title="Build/Test Tools: Begin eliminating unnecessary randomness in tests.
 ..."&gt;[38762]&lt;/a&gt;
See &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/37371" title="#37371: enhancement: Reduce reliance on randomness in tests (accepted)"&gt;#37371&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37371 (Reduce reliance on randomness in tests) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 09 Oct 2016 01:11:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37371#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37371#comment:7/1475975474962383</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38762" title="Build/Test Tools: Begin eliminating unnecessary randomness in tests.
 ..."&gt;38762&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Build/Test Tools: Begin eliminating unnecessary randomness in tests.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Although unlikely, clashes in randomly generated strings could cause unexpected failures. In addition, most randomness is entirely unnecessary, is bad practice, and increases test time (however small it may be).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/37371" title="#37371: enhancement: Reduce reliance on randomness in tests (accepted)"&gt;#37371&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38762]: Build/Test Tools: Begin eliminating unnecessary randomness in tests.  ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 09 Oct 2016 01:11:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38762</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38762/1475975474464209</guid>
      <description>&lt;p&gt;
Build/Test Tools: Begin eliminating unnecessary randomness in tests.
&lt;/p&gt;
&lt;p&gt;
Although unlikely, clashes in randomly generated strings could cause unexpected failures. In addition, most randomness is entirely unnecessary, is bad practice, and increases test time (however small it may be).
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/37371" title="#37371: enhancement: Reduce reliance on randomness in tests (accepted)"&gt;#37371&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38265 (Add term_relationship_id column to wp_term_relationships) created</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Sun, 09 Oct 2016 01:11:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38265</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38265/1475975461443500</guid>
      <description>&lt;p&gt;
I have a need to attach additional information to the post/term relationships themselves. I'd prefer not to stash this data in postmeta or termmeta, as this data is strictly about the connection between the two, and not about either object.
&lt;/p&gt;
&lt;p&gt;
Naturally, my solution for this is to create a metadata database table (like we did with comments years ago, and taxonomy terms recently.) The first of many steps towards a &lt;code&gt;term_relationshipmeta&lt;/code&gt; database table is that &lt;code&gt;wp_term_relationships&lt;/code&gt; lacks a &lt;code&gt;term_relationship_id&lt;/code&gt; primary column in the database.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
On the extreme end of this idea, probably lives a &lt;code&gt;WP_Term_Relationship&lt;/code&gt; object, with methods for adding/editing/removing relationships, which the &lt;code&gt;wp_*_object_terms&lt;/code&gt; functions would become wrappers for.
&lt;/p&gt;
&lt;p&gt;
Before any of that is really feasible, or for very much work to continue even in private as a plugin first, term relationships need a unique identifier.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>34093-7.diff attached to Ticket #34093</title>
      
        <dc:creator>dwainm</dc:creator>

      <pubDate>Sun, 09 Oct 2016 00:55:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34093/34093-7.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34093/34093-7.diff/1475974536889450</guid>
      <description>&lt;p&gt;
Adding basic tests
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37371 (Reduce reliance on randomness in tests) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 09 Oct 2016 00:25:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37371#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37371#comment:6/1475972711769719</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
There's also a bunch of instances of &lt;code&gt;rand()&lt;/code&gt; in tests which are just as unnecessary.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>