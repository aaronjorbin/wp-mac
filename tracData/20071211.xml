<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>cache_suspend.diff attached to Ticket #5389</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 11 Dec 2007 23:53:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5389/cache_suspend.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5389/cache_suspend.diff/1197417206000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #3614 (Scaling issue with hundreds of pages) updated</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Tue, 11 Dec 2007 23:47:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3614#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3614#comment:29/1197416838000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/3614#comment:28" title="Comment 28"&gt;skydrak&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I only get the php error: Fatal error: Call to undefined method wpdb::insert() in /var/www/&lt;strong&gt;*/html/wp-includes/post.php on line 730 when i upload the new post.php. :(
&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What version of WordPress are you using? AFAIK wpdb::insert() is only available on trunk(2.4), and nothing in this ticket uses the insert() function.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3614 (Scaling issue with hundreds of pages) updated</title>
      
        <dc:creator>skydrak</dc:creator>

      <pubDate>Tue, 11 Dec 2007 21:11:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3614#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3614#comment:28/1197407476000000</guid>
      <description>&lt;p&gt;
I only get the php error: Fatal error: Call to undefined method wpdb::insert() in /var/www/&lt;strong&gt;*/html/wp-includes/post.php on line 730 when i upload the new post.php. :(
&lt;/strong&gt;&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5303 ("Manage &gt; Pages"  becomes very slow with hundreds of pages) updated</title>
      
        <dc:creator>hailin</dc:creator>

      <pubDate>Tue, 11 Dec 2007 21:06:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5303#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5303#comment:9/1197407218000000</guid>
      <description>&lt;p&gt;
The new patch does not depend on pages being sorted by post_parent,ID.
It is a little slower, but still within O(N) complexity.
Reviewed by Ryan, Matt.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5359 (Auto save doesn't save tags) closed</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Tue, 11 Dec 2007 20:30:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5359#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5359#comment:3/1197405023000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6373" title="Autosave tags as well. Fixes #5359 props sembee "&gt;[6373]&lt;/a&gt;) Autosave tags as well. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5359" title="#5359: defect (bug): Auto save doesn't save tags (closed: fixed)"&gt;#5359&lt;/a&gt; props sembee
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [6373]: Autosave tags as well. Fixes #5359 props sembee </title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Tue, 11 Dec 2007 20:30:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/6373</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/6373/1197405022154089</guid>
      <description>&lt;p&gt;
Autosave tags as well. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5359" title="#5359: defect (bug): Auto save doesn't save tags (closed: fixed)"&gt;#5359&lt;/a&gt; props sembee
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #5313 (no user checking if the "post_type" is set to page) updated</title>
      
        <dc:creator>cbdilger</dc:creator>

      <pubDate>Tue, 11 Dec 2007 20:15:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5313#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5313#comment:4/1197404147000000</guid>
      <description>&lt;p&gt;
I don't have access to MySQL logs (shared hosting) but I found this in my webserver logs--there are 30 nearly identical entries over two days.
&lt;/p&gt;
&lt;p&gt;
access.log.2007-11-29.gz:77.70.106.72 - - &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29/Nov/2007%3A05%3A37%3A16%20-0800" title="Branding.
"&gt;[29/Nov/2007:05:37:16 -0800]&lt;/a&gt; "POST /cbd/wp-admin/admin-ajax.php HTTP/1.1" 200 14 "-" "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727)"
&lt;/p&gt;
&lt;p&gt;
this is in the right time frame---three days after the post I wrote which was hit with the iframe.
&lt;/p&gt;
&lt;p&gt;
I'll keep looking for other funny stuff. Any pointers appreciated. And I can provide logs for WordPressers to work with.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5367 (Wordpress cookie authentication vulnerability) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 11 Dec 2007 19:27:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5367#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5367#comment:44/1197401241000000</guid>
      <description>&lt;p&gt;
If SECRET_KEY is not set to something unique, use the DB connect info in the secret key?  Good enough?  Does that balance paranoia and practicality well enough?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5367 (Wordpress cookie authentication vulnerability) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 11 Dec 2007 19:19:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5367#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5367#comment:43/1197400741000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5367#comment:42" title="Comment 42"&gt;sjmurdoch&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5367#comment:41" title="Comment 41"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Even with a block cipher we still have to worry about someone getting the key if it is stored in the DB, yes?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The rough idea I was thinking of is storing the encrypted hash of the password in the cookie, and the double hash in the database. Then if an attacker can read the key and double-hash, they can still not generate a valid cookie.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Double hashing the password stored in the DB makes it hard to interop with things like mod_auth_mysql, yes? I'm not sure if portable phpass hashes are supported as is.  wp_hash_password() and wp_check_password() could be replaced with something that mod_auth_mysql can handle, but requiring a double hash in the DB could foil that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5457 (deleting a nested page from Manage =&gt; Pages causes query inconsistency) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 11 Dec 2007 17:39:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5457#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5457#comment:3/1197394765000000</guid>
      <description>&lt;p&gt;
In wp_delete_post() where we update children of the deleted page to point to the parent, we need to get the IDs of all affected pages and do a clean_page_cache() for each.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5457 (deleting a nested page from Manage =&gt; Pages causes query inconsistency) updated</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Tue, 11 Dec 2007 16:23:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5457#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5457#comment:2/1197390211000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5457 (deleting a nested page from Manage =&gt; Pages causes query inconsistency) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Tue, 11 Dec 2007 16:21:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5457#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5457#comment:1/1197390075000000</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5303 ("Manage &gt; Pages"  becomes very slow with hundreds of pages) updated</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Tue, 11 Dec 2007 16:15:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5303#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5303#comment:8/1197389724000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5457 (deleting a nested page from Manage =&gt; Pages causes query inconsistency) created</title>
      
        <dc:creator>hailin</dc:creator>

      <pubDate>Tue, 11 Dec 2007 16:08:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5457</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5457/1197389299000000</guid>
      <description>&lt;p&gt;
Given the following pages:
&lt;/p&gt;
&lt;pre class="wiki"&gt;ID  Title        post_parent
4   sunpage     0
5   -moonpage   4
6   --starpage  5
7  rainpage     0
&lt;/pre&gt;&lt;p&gt;
if we remove moonpage, and do page refresh, starpage is not displayed.
The root cause is that, after removing moonpage, the internal db state and cache may be out of sync. ie, querying phpmyadmin reveals the starpage has post_parent=4; yet
print_r(pages) within page_rows() reveals starpage has post_parent=5.
&lt;/p&gt;
&lt;p&gt;
This can cause all sorts of perplexing problems if not fixed.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5303 ("Manage &gt; Pages"  becomes very slow with hundreds of pages) reopened</title>
      
        <dc:creator>hailin</dc:creator>

      <pubDate>Tue, 11 Dec 2007 15:58:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5303#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5303#comment:7/1197388734000000</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #5303 ("Manage &gt; Pages"  becomes very slow with hundreds of pages) closed</title>
      
        <dc:creator>hailin</dc:creator>

      <pubDate>Tue, 11 Dec 2007 15:57:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5303#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5303#comment:6/1197388678000000</guid>
      <description>fixed: &lt;p&gt;
Let N = number of pages
The original algorithm takes O(N&lt;sup&gt;x) where x&amp;gt;=2. That is why it is very slow to display pages when N is large (over 200)
&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;
The proposed new algorithm accepts as input pages array sorted by post_parent, ID ASC.
&lt;/p&gt;
&lt;p&gt;
Then splice the array into two trunks:
trunk&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/1" title="#1: defect (bug): Handle https:// when manipulating 'home' (closed: fixed)"&gt;#1&lt;/a&gt; contains pages whose post_parent is 0
turnk&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2" title="#2: defect (bug):  posting per xmlrpc - works, but gives errmsgs ala &amp;#34;invalid xml&amp;#34; (closed: fixed)"&gt;#2&lt;/a&gt; contains pages whose post_parent &amp;gt; 0
&lt;/p&gt;
&lt;p&gt;
For every page is trunk&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/1" title="#1: defect (bug): Handle https:// when manipulating 'home' (closed: fixed)"&gt;#1&lt;/a&gt;, we look into trunk&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2" title="#2: defect (bug):  posting per xmlrpc - works, but gives errmsgs ala &amp;#34;invalid xml&amp;#34; (closed: fixed)"&gt;#2&lt;/a&gt; to see if there is a child.
If yes, we display the child page, remove the child page, then recursively examine trunk&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2" title="#2: defect (bug):  posting per xmlrpc - works, but gives errmsgs ala &amp;#34;invalid xml&amp;#34; (closed: fixed)"&gt;#2&lt;/a&gt; again to see if there are nested pages to be displayed.
&lt;/p&gt;
&lt;p&gt;
We take advantage of the fact that child pages in trunk&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2" title="#2: defect (bug):  posting per xmlrpc - works, but gives errmsgs ala &amp;#34;invalid xml&amp;#34; (closed: fixed)"&gt;#2&lt;/a&gt; is sorted by post_parent,
And use heuristics to enable us to do minimal lookups needed.
&lt;/p&gt;
&lt;p&gt;
The time complexity is optimal for this problem – it is O(N).
&lt;/p&gt;
&lt;p&gt;
Note that this algorithm depends on the assumption that input pages are sorted  on post_parent, ID.  I just discovered that current wporg core has another bug which can cause cached pages in query results out of order.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #5367 (Wordpress cookie authentication vulnerability) updated</title>
      
        <dc:creator>sjmurdoch</dc:creator>

      <pubDate>Tue, 11 Dec 2007 12:42:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5367#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5367#comment:42/1197376936000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5367#comment:41" title="Comment 41"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Even with a block cipher we still have to worry about someone getting the key if it is stored in the DB, yes?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The rough idea I was thinking of is storing the encrypted hash of the password in the cookie, and the double hash in the database. Then if an attacker can read the key and double-hash, they can still not generate a valid cookie.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Don't know if it's any good.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.jonasjohn.de/snippets/php/md5-based-block-cipher.htm"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.jonasjohn.de/snippets/php/md5-based-block-cipher.htm&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It looks a bit weird (it's not CFB, like it says and it's not quite OFB either). Maybe it works though, but it needs more thought.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>5449.wp-app.content-type.diff attached to Ticket #5449</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Tue, 11 Dec 2007 12:19:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5449/5449.wp-app.content-type.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5449/5449.wp-app.content-type.diff/1197375570000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5449 (Uploading video/3gpp content-type via wp-app.php fails) updated</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Tue, 11 Dec 2007 12:19:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5449#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5449#comment:2/1197375559000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
While i cant test this patch(Dont have a Atom client handy), I tested the line with test inputs.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>import_backfill_parents-r6367-a.patch attached to Ticket #5456</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Tue, 11 Dec 2007 11:32:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5456/import_backfill_parents-r6367-a.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5456/import_backfill_parents-r6367-a.patch/1197372762000000</guid>
      <description>&lt;p&gt;
Revised patch fixes a problem with categories
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5455 (Charset SQL Injection Vulnerability) updated</title>
      
        <dc:creator>pishmishy</dc:creator>

      <pubDate>Tue, 11 Dec 2007 10:41:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5455#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5455#comment:6/1197369707000000</guid>
      <description>&lt;p&gt;
See escape_string_for_mysql() in mysys/charset.c of the MySQL 5.0.51 source for how multibyte characters are handled.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5455 (Charset SQL Injection Vulnerability) updated</title>
      
        <dc:creator>pishmishy</dc:creator>

      <pubDate>Tue, 11 Dec 2007 10:35:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5455#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5455#comment:5/1197369316000000</guid>
      <description>&lt;p&gt;
See also &lt;a class="ext-link" href="http://dev.mysql.com/doc/refman/5.0/en/mysql-real-escape-string.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://dev.mysql.com/doc/refman/5.0/en/mysql-real-escape-string.html&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>import_backfill_parents-r6367.patch attached to Ticket #5456</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Tue, 11 Dec 2007 10:29:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5456/import_backfill_parents-r6367.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5456/import_backfill_parents-r6367.patch/1197368944000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5456 (wxr import: post_parent is handled incorrectly in some circumstances) created</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Tue, 11 Dec 2007 10:28:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5456</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5456/1197368928000000</guid>
      <description>&lt;p&gt;
The patch in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5357" title="#5357: enhancement: wxr import: don't load the whole file at once (closed: fixed)"&gt;#5357&lt;/a&gt; handles parent/child pages incorrectly in some cases, when there are multiple levels of nesting and the posts are included in the least optimal order in the import file.  The Level 1 / Level 2 / Level 3 pages in this export file reproduce the problem:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://svn.automattic.com/wordpress-tests/wp-testdata/export/asdftestblog1.2007-12-11.xml"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://svn.automattic.com/wordpress-tests/wp-testdata/export/asdftestblog1.2007-12-11.xml&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The enclosed patch replaces the two pass processing from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5357" title="#5357: enhancement: wxr import: don't load the whole file at once (closed: fixed)"&gt;#5357&lt;/a&gt; with a simpler method.  Posts are imported in a single pass, then the post_parent of child pages are updated in backfill_parents() later, once the local post ID's of all parents are known.  I also removed a little cruft and split the import() function in two for easier testing.
&lt;/p&gt;
&lt;p&gt;
This passes the updated unit tests here:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://svn.automattic.com/wordpress-tests/wp-testcase/test_import_wp.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://svn.automattic.com/wordpress-tests/wp-testcase/test_import_wp.php&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Changeset in tests [135]: import tests: fix parents, children</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Tue, 11 Dec 2007 10:15:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/135/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/135/tests/1197368149203834</guid>
      <description>&lt;p&gt;
import tests: fix parents, children
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #5455 (Charset SQL Injection Vulnerability) updated</title>
      
        <dc:creator>pishmishy</dc:creator>

      <pubDate>Tue, 11 Dec 2007 10:14:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5455#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5455#comment:4/1197368056000000</guid>
      <description>&lt;p&gt;
It appears that mysql_real_escape_string() ignores any change of character set during an established mysql session and continues to use the first character set.
(See &lt;a class="ext-link" href="http://ilia.ws/archives/103-mysql_real_escape_string-versus-Prepared-Statements.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://ilia.ws/archives/103-mysql_real_escape_string-versus-Prepared-Statements.html&lt;/a&gt;)
The general fix to this problem appears to be prepared statements.
Or perhaps someone can code a better escaping function?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5455 (Charset SQL Injection Vulnerability) updated</title>
      
        <dc:creator>pishmishy</dc:creator>

      <pubDate>Tue, 11 Dec 2007 09:26:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5455#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5455#comment:3/1197365219000000</guid>
      <description>&lt;p&gt;
I'd have thought that switching escape() to use mysql_real_escape_string() would fix this but it doesn't appear to do so (perhaps I'm doing something wrong), I still get the error.
&lt;/p&gt;
&lt;p&gt;
/index.php?exact=1&amp;amp;sentence=1&amp;amp;s=%b3%27 gets me
&lt;/p&gt;
&lt;p&gt;
WordPress database error: [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '�\&lt;em&gt;))) AND post_type = 'post' AND (post_status = 'publish') ORDER BY post_dat' at line 1]
&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
SELECT SQL_CALC_FOUND_ROWS wp_posts.* FROM wp_posts WHERE 1=1 AND (((post_title LIKE '�\&lt;em&gt;) OR (post_content LIKE '�\&lt;/em&gt;))) AND post_type = 'post' AND (post_status = 'publish') ORDER BY post_date DESC LIMIT 0, 10
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
See also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/3286" title="#3286: defect (bug): Handling of escape sequences is muddled and non-compatible (closed: duplicate)"&gt;#3286&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3614 (Scaling issue with hundreds of pages) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 11 Dec 2007 08:58:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3614#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3614#comment:27/1197363501000000</guid>
      <description>&lt;p&gt;
Patch attached that allows querying both pages and page attachments from a pagename request. This is needed to support page attachments with the non-verbose rules.
&lt;/p&gt;
&lt;p&gt;
kicksonfire, your permalink structure complicates things.  We'd probably have to add a new query var that queries against post, page, and attachment post_types for a given post_name.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>page_attachment_query.diff attached to Ticket #3614</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 11 Dec 2007 08:43:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/3614/page_attachment_query.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/3614/page_attachment_query.diff/1197362590000000</guid>
      <description>&lt;p&gt;
Query page attachments from page requests
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5455 (Charset SQL Injection Vulnerability) updated</title>
      
        <dc:creator>pishmishy</dc:creator>

      <pubDate>Tue, 11 Dec 2007 08:42:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5455#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5455#comment:2/1197362549000000</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="http://www.abelcheung.org/advisory/20071210-wordpress-charset.txt"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.abelcheung.org/advisory/20071210-wordpress-charset.txt&lt;/a&gt; is a better description of the vulnerability.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5455 (Charset SQL Injection Vulnerability) updated</title>
      
        <dc:creator>pishmishy</dc:creator>

      <pubDate>Tue, 11 Dec 2007 08:38:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5455#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5455#comment:1/1197362305000000</guid>
      <description>&lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5455 (Charset SQL Injection Vulnerability) created</title>
      
        <dc:creator>pishmishy</dc:creator>

      <pubDate>Tue, 11 Dec 2007 08:38:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5455</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5455/1197362297000000</guid>
      <description>&lt;p&gt;
Mis-escaping of queries in a non-utf8 encoding, can cause an opportunity for SQL injection attacks. I believe the problem is supposed to be in escape().
(See &lt;a class="ext-link" href="http://packetstormsecurity.org/0712-exploits/wordpresscharset-sql.txt"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://packetstormsecurity.org/0712-exploits/wordpresscharset-sql.txt&lt;/a&gt;)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Changeset in tests [134]: update import tests to reproduce a problem with parent ordering</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Tue, 11 Dec 2007 08:34:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/134/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/134/tests/1197362048921483</guid>
      <description>&lt;p&gt;
update import tests to reproduce a problem with parent ordering
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #4742 (phpdoc for taxonomy API) updated</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Tue, 11 Dec 2007 07:59:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4742#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4742#comment:17/1197359991000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch completely documents all of the Taxonomy API.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>taxonomy.6372.phpdoc.diff attached to Ticket #4742</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Tue, 11 Dec 2007 07:58:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/4742/taxonomy.6372.phpdoc.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/4742/taxonomy.6372.phpdoc.diff/1197359901000000</guid>
      <description>&lt;p&gt;
Finishes documentation for the Taxonomy API, based off of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6372" title="Revert [6368]. Fixes #5448, fixes #5247 by adding a new filter to hook ..."&gt;r6372&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5454 (Additional metadata in wxr export format) updated</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Tue, 11 Dec 2007 05:18:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5454#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5454#comment:2/1197350306000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5452 (modifying # of editor lines fails) updated</title>
      
        <dc:creator>trenta</dc:creator>

      <pubDate>Tue, 11 Dec 2007 04:13:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5452#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5452#comment:4/1197346420000000</guid>
      <description>&lt;p&gt;
Sorry about that, I should have read the error output.  Yeah, I copied that plugin to disable the redirect that wordpress does.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5454 (Additional metadata in wxr export format) updated</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Tue, 11 Dec 2007 04:13:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5454#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5454#comment:1/1197346380000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5453 (sign-out fails) closed</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Tue, 11 Dec 2007 03:53:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5453#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5453#comment:1/1197345237000000</guid>
      <description>invalid: &lt;p&gt;
Caused by Plugin, not WP, See comment on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5452" title="#5452: defect (bug): modifying # of editor lines fails (closed: invalid)"&gt;#5452&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #5450 (infinite redirect) updated</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Tue, 11 Dec 2007 03:52:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5450#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5450#comment:1/1197345120000000</guid>
      <description>&lt;p&gt;
While i notice the Canonical redirects are designed to not affect the Admin pages, Something else redirects the admin pages to the "proper" hostname, Perhaps WordPress should accept whatever the URL is that the user accesses the Admin pages via?
&lt;/p&gt;
&lt;p&gt;
The redirection settings can be setup so that WP works as intended, However, i'm not too sure on how you're supposed to do that, The Site and Blog URL's in the admin need to be set properly for the proxy setup, I think you need to set them up to the external address, and make sure that the proxy is behaving and sending its proxy headers along.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>export-minor-additions-r6367.patch attached to Ticket #5454</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Tue, 11 Dec 2007 03:45:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5454/export-minor-additions-r6367.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5454/export-minor-additions-r6367.patch/1197344752000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5454 (Additional metadata in wxr export format) created</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Tue, 11 Dec 2007 03:45:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5454</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5454/1197344723000000</guid>
      <description>&lt;p&gt;
The enclosed patch adds some extra metadata to the wxr xml export file to help support future enhancements and fixes for the importer.  The changes should be backwards compatible with previous versions of the importer code.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;There's a new &amp;lt;&lt;a href="https://core.trac.wordpress.org//intertrac/wxr_version" title="wxr_version in WordPress Trac"&gt;wp:wxr_version&lt;/a&gt;&amp;gt; tag in the channel element that contains a version number indicating the wxr format version (currently 1.0).  The same number is in the xmlns:wp attribute but I included it here for easier access using the importer's get_tag() method; and also so we can distinguish between this version (which has the new tags listed below) and previous versions.  We should bump the version number iff there is a change that might affect backwards compatibility.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Two new tags &amp;lt;&lt;a href="https://core.trac.wordpress.org//intertrac/base_site_url" title="base_site_url in WordPress Trac"&gt;wp:base_site_url&lt;/a&gt;&amp;gt; and &amp;lt;&lt;a href="https://core.trac.wordpress.org//intertrac/base_blog_url" title="base_blog_url in WordPress Trac"&gt;wp:base_blog_url&lt;/a&gt;&amp;gt; are there to help the importer know whether it is importing from a different site or the same site.  In a normal WP install both tags contain the same URL (i.e. siteurl).  In MU, base_site_url will show the main url of the MU install, base_blog_url is the individual blog's url.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&amp;lt;category&amp;gt; tags now include a nicename attribute so it's possible to fix bug &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5447" title="#5447: defect (bug): wxr importer uses wrong category when duplicate name exists (closed: fixed)"&gt;#5447&lt;/a&gt;.  Each category/tag element is duplicated because the old and existing importer code won't parse the new elements.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;A new &amp;lt;&lt;a href="https://core.trac.wordpress.org//intertrac/attachment_url" title="attachment_url in WordPress Trac"&gt;wp:attachment_url&lt;/a&gt;&amp;gt; element is added when post_type is 'attachment'.  Normally it's the same as the guid but that is not necessarily a reliable assumption for the importer to make.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;A new &amp;lt;&lt;a href="https://core.trac.wordpress.org//intertrac/comment_user_id" title="comment_user_id in WordPress Trac"&gt;wp:comment_user_id&lt;/a&gt;&amp;gt; is included in comments.  The importer could check the &amp;lt;&lt;a href="https://core.trac.wordpress.org//intertrac/base_site_url" title="base_site_url in WordPress Trac"&gt;wp:base_site_url&lt;/a&gt;&amp;gt; and preserve this value when importing a wxr file from the same site.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5453 (sign-out fails) created</title>
      
        <dc:creator>trenta</dc:creator>

      <pubDate>Tue, 11 Dec 2007 03:42:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5453</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5453/1197344556000000</guid>
      <description>&lt;p&gt;
Tried to sign out of the admin section.
&lt;/p&gt;
&lt;p&gt;
Warning: Cannot modify header information - headers already sent by (output started at /var/www/wordpress/htdocs/wp-content/plugins/disableredirect.php:14) in /var/www/wordpress/htdocs/wp-login.php on line 12
&lt;/p&gt;
&lt;p&gt;
Warning: Cannot modify header information - headers already sent by (output started at /var/www/wordpress/htdocs/wp-content/plugins/disableredirect.php:14) in /var/www/wordpress/htdocs/wp-login.php on line 24
&lt;/p&gt;
&lt;p&gt;
Warning: Cannot modify header information - headers already sent by (output started at /var/www/wordpress/htdocs/wp-content/plugins/disableredirect.php:14) in /var/www/wordpress/htdocs/wp-includes/pluggable.php on line 492
&lt;/p&gt;
&lt;p&gt;
Warning: Cannot modify header information - headers already sent by (output started at /var/www/wordpress/htdocs/wp-content/plugins/disableredirect.php:14) in /var/www/wordpress/htdocs/wp-includes/pluggable.php on line 493
&lt;/p&gt;
&lt;p&gt;
Warning: Cannot modify header information - headers already sent by (output started at /var/www/wordpress/htdocs/wp-content/plugins/disableredirect.php:14) in /var/www/wordpress/htdocs/wp-includes/pluggable.php on line 494
&lt;/p&gt;
&lt;p&gt;
Warning: Cannot modify header information - headers already sent by (output started at /var/www/wordpress/htdocs/wp-content/plugins/disableredirect.php:14) in /var/www/wordpress/htdocs/wp-includes/pluggable.php on line 495
&lt;/p&gt;
&lt;p&gt;
Warning: Cannot modify header information - headers already sent by (output started at /var/www/wordpress/htdocs/wp-content/plugins/disableredirect.php:14) in /var/www/wordpress/htdocs/wp-includes/pluggable.php on line 391
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5451 (html editor gone) updated</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Tue, 11 Dec 2007 03:42:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5451#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5451#comment:1/1197344525000000</guid>
      <description>&lt;p&gt;
The Visual Editor is included in WP 2.3.1, Make sure that the "Use Visual Editor" is enabled on your profile page, And that any out-of-date plugins are not loaded which might be interfering (I suspect the one mentioned in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5452" title="#5452: defect (bug): modifying # of editor lines fails (closed: invalid)"&gt;#5452&lt;/a&gt; might be causing it).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5452 (modifying # of editor lines fails) closed</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Tue, 11 Dec 2007 03:39:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5452#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5452#comment:3/1197344383000000</guid>
      <description>invalid: &lt;p&gt;
That error is caused by a plugin you have loaded &lt;code&gt;disableredirect.php&lt;/code&gt;, On line 14 its creating some output which it shouldnt be doing.
&lt;/p&gt;
&lt;p&gt;
As its a Plugin issue, and not WP's, I'll close this as invalid, You should check to see if an updated version of the plugin is available, Failing that you might want to take the issue up in either the Support Forums, or contact the Plugins author directly to resolve the issue.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #5452 (modifying # of editor lines fails) updated</title>
      
        <dc:creator>trenta</dc:creator>

      <pubDate>Tue, 11 Dec 2007 03:36:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5452#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5452#comment:2/1197344171000000</guid>
      <description>&lt;p&gt;
In addition, I do not have to actually update my options.  All I have to do is click "Update Options" to get this to occur.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5452 (modifying # of editor lines fails) updated</title>
      
        <dc:creator>trenta</dc:creator>

      <pubDate>Tue, 11 Dec 2007 03:34:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5452#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5452#comment:1/1197344046000000</guid>
      <description>&lt;p&gt;
FYI: The edit did save, and the HTML editor has been reduce to 15 lines as I requested.  But, that error is kind of annoying.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5452 (modifying # of editor lines fails) created</title>
      
        <dc:creator>trenta</dc:creator>

      <pubDate>Tue, 11 Dec 2007 03:33:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5452</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5452/1197343991000000</guid>
      <description>&lt;p&gt;
After trying to modify the number of editor lines, I get the following error.
&lt;/p&gt;
&lt;p&gt;
Warning: Cannot modify header information - headers already sent by (output started at /var/www/wordpress/htdocs/wp-content/plugins/disableredirect.php:14) in /var/www/wordpress/htdocs/wp-includes/pluggable.php on line 391
&lt;/p&gt;
&lt;p&gt;
Thank you for creating with WordPress | Documentation | Feedback | Version 2.3.1
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5451 (html editor gone) created</title>
      
        <dc:creator>trenta</dc:creator>

      <pubDate>Tue, 11 Dec 2007 03:31:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5451</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5451/1197343895000000</guid>
      <description>&lt;p&gt;
There is no HTML editor in 2.3.1, or is there?  It sure isn't showing up.  All I get is an HTML edit window, which I have to edit the HTML manually with.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5450 (infinite redirect) created</title>
      
        <dc:creator>trenta</dc:creator>

      <pubDate>Tue, 11 Dec 2007 03:28:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5450</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5450/1197343680000000</guid>
      <description>&lt;p&gt;
I would imagine that this infinite redirect problem occurs when you access a host that wordpress is not configured for, so it redirects you to the one that it is configured for, correct?
&lt;/p&gt;
&lt;p&gt;
If so, it should be disabled by default.  Seeing that wordpress has had a long line of security vulnerabilities, I have mine running inside of a VM.  That VM is accessed through a proxy, by the host name of "wordpress".  So, I would imagine that the redirect is occuring because it thinks that "wordpress" does not match my host, and therefore it should redirect to the one that I have configured.
&lt;/p&gt;
&lt;p&gt;
The problem with all of that though, is that it is forcing the user into something they may not want.  What if they made a typo in the configuration?  Then, they are toast, and cannot access their wordpress blog, unless they are a savvy user.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5367 (Wordpress cookie authentication vulnerability) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 10 Dec 2007 22:12:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5367#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5367#comment:41/1197324755000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5367#comment:40" title="Comment 40"&gt;sjmurdoch&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5367#comment:39" title="Comment 39"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We could incorporate your session key stuff into the currently unused data field of the cookie.  Store a random key in the cookie and store the hash of that key in the DB.  But, that brings us back to allowing only one session at at time and requiring a DB write for every successful login attempt.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think it is possible to do better, but it could involve a bit of tricky cryptography. With only MD5 it will take more work, but it is possible to turn any hash function into a block cipher. I'm not sure if I'll have enough time this week to write it up properly though.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Even with a block cipher we still have to worry about someone getting the key if it is stored in the DB, yes?
&lt;/p&gt;
&lt;p&gt;
If a block cipher would indeed help prevent cookies being created from DB information, we could always make it an optional bit of extra security we add if mcrypt is available.  If mcrypt is not available, the cookie doesn't get that extra bit of security.  If we do want to provide a fall back for when mcrypt is not available, I found this.  Don't know if it's any good.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.jonasjohn.de/snippets/php/md5-based-block-cipher.htm"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.jonasjohn.de/snippets/php/md5-based-block-cipher.htm&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What are the timeouts on the cookies it looks like 2 days or 14 days if I do my maths right - would we not do better with a shorter expiry time and resetting the cookie on every admin page access with a new expiry.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Wouldn't that allow replaying an old cookie to get a new cookie with a fresh expiry?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
A variant is to only allow auto-extension of valid cookies, so it means that really old ones won't work. That still means that if someone steals a cookie and uses it promptly, it will be possible to keep renewing it. I still think it is better to have a hard limit on cookie expiration, so someone with a cookie and no password will eventually get locked out.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'd rather have a hard limit too.  A reasonable timeout coupled with a grace period to allow POSTs to complete seems user friendly enough.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5303 ("Manage &gt; Pages"  becomes very slow with hundreds of pages) updated</title>
      
        <dc:creator>mdawaffe</dc:creator>

      <pubDate>Mon, 10 Dec 2007 21:25:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5303#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5303#comment:5/1197321900000000</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="http://bitsinashortbit.wordpress.com/2007/09/03/first-showcase-of-page-sorting-in-wordpress/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://bitsinashortbit.wordpress.com/2007/09/03/first-showcase-of-page-sorting-in-wordpress/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
A GSoC student looked at paginating hierarchical content with this problem in mind.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5445 (Add function to count number of functions hooked to an action) updated</title>
      
        <dc:creator>santosj</dc:creator>

      <pubDate>Mon, 10 Dec 2007 21:16:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5445#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5445#comment:6/1197321387000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [6372]: Revert [6368]. Fixes #5448, fixes #5247 by adding a new filter to hook ...</title>
      
        <dc:creator>matt</dc:creator>

      <pubDate>Mon, 10 Dec 2007 20:49:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/6372</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/6372/1197319786323149</guid>
      <description>&lt;p&gt;
Revert &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6368" title="comments_popup_link filter from joostdevalk.  fixes #5247"&gt;[6368]&lt;/a&gt;. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5448" title="#5448: defect (bug): Comments-template echoes strange comment link (closed: fixed)"&gt;#5448&lt;/a&gt;, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5247" title="#5247: enhancement: comments_popup_link needs a filter (closed: fixed)"&gt;#5247&lt;/a&gt; by adding a new filter to hook in specifically to add attributes, rather than filtering the whole thing. Minor formatting cleanup of comments_popup_link.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Tickets #5247,​5448 batch updated</title>
      
        <dc:creator>matt</dc:creator>

      <pubDate>Mon, 10 Dec 2007 20:49:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=5247%2C5448</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=5247%2C5448/1197319786000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6372" title="Revert [6368]. Fixes #5448, fixes #5247 by adding a new filter to hook ..."&gt;[6372]&lt;/a&gt;) Revert &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6368" title="comments_popup_link filter from joostdevalk.  fixes #5247"&gt;[6368]&lt;/a&gt;. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5448" title="#5448: defect (bug): Comments-template echoes strange comment link (closed: fixed)"&gt;#5448&lt;/a&gt;, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5247" title="#5247: enhancement: comments_popup_link needs a filter (closed: fixed)"&gt;#5247&lt;/a&gt; by adding a new filter to hook in specifically to add attributes, rather than filtering the whole thing. Minor formatting cleanup of comments_popup_link.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #5247 (comments_popup_link needs a filter) reopened</title>
      
        <dc:creator>matt</dc:creator>

      <pubDate>Mon, 10 Dec 2007 20:48:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5247#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5247#comment:3/1197319711000000</guid>
      <description>&lt;p&gt;
joostdevalk, please check your patches more carefully. This causes visible brokenness on the front page of anyone who uses it.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Changeset [6371]: Switch error messages to have a footer instead of use wp_die, so they ...</title>
      
        <dc:creator>matt</dc:creator>

      <pubDate>Mon, 10 Dec 2007 20:42:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/6371</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/6371/1197319323797733</guid>
      <description>&lt;p&gt;
Switch error messages to have a footer instead of use wp_die, so they don't look busted. Use absint where appropiate. Formatting cleanup. Clearer styling and messaging on buttons.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #5367 (Wordpress cookie authentication vulnerability) updated</title>
      
        <dc:creator>sjmurdoch</dc:creator>

      <pubDate>Mon, 10 Dec 2007 20:01:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5367#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5367#comment:40/1197316893000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5367#comment:39" title="Comment 39"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We could incorporate your session key stuff into the currently unused data field of the cookie.  Store a random key in the cookie and store the hash of that key in the DB.  But, that brings us back to allowing only one session at at time and requiring a DB write for every successful login attempt.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think it is possible to do better, but it could involve a bit of tricky cryptography. With only MD5 it will take more work, but it is possible to turn any hash function into a block cipher. I'm not sure if I'll have enough time this week to write it up properly though.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What are the timeouts on the cookies it looks like 2 days or 14 days if I do my maths right - would we not do better with a shorter expiry time and resetting the cookie on every admin page access with a new expiry.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Wouldn't that allow replaying an old cookie to get a new cookie with a fresh expiry?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
A variant is to only allow auto-extension of valid cookies, so it means that really old ones won't work. That still means that if someone steals a cookie and uses it promptly, it will be possible to keep renewing it. I still think it is better to have a hard limit on cookie expiration, so someone with a cookie and no password will eventually get locked out.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5448 (Comments-template echoes strange comment link) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 10 Dec 2007 19:29:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5448#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5448#comment:3/1197314946000000</guid>
      <description>&lt;p&gt;
comments_number() can't be changed to always return since that could break some templates.  We could hijack $deprecated and turn it into an $echo boolean, however.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [6370]: phpdoc for deprecated funcs. Props darkdragon. fixes #5444</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 10 Dec 2007 18:52:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/6370</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/6370/1197312744345201</guid>
      <description>&lt;p&gt;
phpdoc for deprecated funcs. Props darkdragon. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5444" title="#5444: enhancement: PHPdoc effort for deprecated.php (closed: fixed)"&gt;#5444&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #5444 (PHPdoc effort for deprecated.php) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 10 Dec 2007 18:52:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5444#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5444#comment:2/1197312744000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6370" title="phpdoc for deprecated funcs. Props darkdragon. fixes #5444"&gt;[6370]&lt;/a&gt;) phpdoc for deprecated funcs. Props darkdragon. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5444" title="#5444: enhancement: PHPdoc effort for deprecated.php (closed: fixed)"&gt;#5444&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #5446 (Return error when requesting invalid feed format) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 10 Dec 2007 18:35:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5446#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5446#comment:3/1197311738000000</guid>
      <description>&lt;p&gt;
$feed needs to be escaped to avoid XSS.  The message also need to be marked for translation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5440 (Add filter to disable email box on profile page) updated</title>
      
        <dc:creator>santosj</dc:creator>

      <pubDate>Mon, 10 Dec 2007 18:08:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5440#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5440#comment:2/1197310095000000</guid>
      <description>&lt;p&gt;
I wonder if people realize that you can undisable disabled fields using the Web Developer Firefox Extension. Never really understood why the username field wasn't just plain text.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5440 (Add filter to disable email box on profile page) updated</title>
      
        <dc:creator>axelseaa</dc:creator>

      <pubDate>Mon, 10 Dec 2007 17:47:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5440#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5440#comment:1/1197308875000000</guid>
      <description>&lt;p&gt;
More simple is always better!  Hopefully it'll get committed
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5449 (Uploading video/3gpp content-type via wp-app.php fails) updated</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Mon, 10 Dec 2007 16:05:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5449#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5449#comment:1/1197302726000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5449 (Uploading video/3gpp content-type via wp-app.php fails) created</title>
      
        <dc:creator>meledin</dc:creator>

      <pubDate>Mon, 10 Dec 2007 15:46:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5449</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5449/1197301566000000</guid>
      <description>&lt;p&gt;
I'm trying to upload 3gp files through wp-app.php, using rome-propono. This fails in a quite awkward manner. Namely, to store the file, wp-app does the following (cf &lt;a class="ext-link" href="http://trac.wordpress.org/browser/trunk/wp-app.php#L406"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://trac.wordpress.org/browser/trunk/wp-app.php#L406&lt;/a&gt; ):
&lt;/p&gt;
&lt;pre class="wiki"&gt;$ext = preg_replace( '|.*/([a-z]+)|', '$1', $_SERVER['CONTENT_TYPE'] );
$slug = "$slug.$ext";
$file = wp_upload_bits( $slug, NULL, $bits);
&lt;/pre&gt;&lt;p&gt;
In other words, it takes the second part of content type (e.g. image/jpeg -&amp;gt; jpeg), but only does so for content types with the letters a-z. On the 3gp content type video/3gpp, it manages to create a file with a slash in its name, and thus fails to save it. I have not investigated the ramifications for doing nasty stuff this way; I'd imagine they shouldn't do anything serious. Regardless...
&lt;/p&gt;
&lt;p&gt;
If nothing else, this regexp should include content-types with numbers (and capitals?) to conform with the different content types available. Preferably, it should make note of the whitelist of mime types, instead of trusting the server. That seems consistent with the actions taken elsewhere, since not doing so would make later code fail for file formats with different extensions than content types.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5448 (Comments-template echoes strange comment link) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Mon, 10 Dec 2007 14:13:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5448#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5448#comment:2/1197296008000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5445 (Add function to count number of functions hooked to an action) updated</title>
      
        <dc:creator>pishmishy</dc:creator>

      <pubDate>Mon, 10 Dec 2007 14:12:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5445#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5445#comment:5/1197295950000000</guid>
      <description>&lt;p&gt;
I'm afraid that I've got no real interest in pushing this function beyond my use in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5446" title="#5446: defect (bug): Return error when requesting invalid feed format (closed: fixed)"&gt;#5446&lt;/a&gt;. Thanks for pointing out has_action() :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5446 (Return error when requesting invalid feed format) updated</title>
      
        <dc:creator>pishmishy</dc:creator>

      <pubDate>Mon, 10 Dec 2007 14:11:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5446#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5446#comment:2/1197295905000000</guid>
      <description>&lt;p&gt;
Revised patch using feedback from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5445" title="#5445: defect (bug): Add function to count number of functions hooked to an action (closed: invalid)"&gt;#5445&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5445 (Add function to count number of functions hooked to an action) updated</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Mon, 10 Dec 2007 14:05:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5445#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5445#comment:4/1197295555000000</guid>
      <description>&lt;p&gt;
There are some issues with the patch
&lt;/p&gt;
&lt;pre class="wiki"&gt;function count_filter($filter) {
    global $wp_filter;
    $i = 0;
    if( isset($wp_filter[$filter]) } {
        foreach($wp_filter[$filter] as $priority) $i += count($priority);
    }
    return $i;
}
function count_action($action) {
    return count_filter($action);
}
&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;The global $wp_actions stores how many times an action was called.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
And that is all. Really, for optimization, if it is not set, then it is better to return 0, like your patch. Not have an else condition. Then have the loop afterwards.
&lt;/p&gt;
&lt;p&gt;
It would also be better to have some sort of caching once the number has been found.
&lt;/p&gt;
&lt;p&gt;
You misunderstand. It would be useful to have this function, but just not for your second point. A guy (one guy) thought it would be useful. However, I'm not quite sure it would be useful for everyone else.
&lt;/p&gt;
&lt;p&gt;
One practical application would be for debugging, "Did my hook actually add itself?"
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5445 (Add function to count number of functions hooked to an action) closed</title>
      
        <dc:creator>pishmishy</dc:creator>

      <pubDate>Mon, 10 Dec 2007 13:56:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5445#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5445#comment:3/1197294983000000</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #5445 (Add function to count number of functions hooked to an action) updated</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Mon, 10 Dec 2007 13:54:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5445#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5445#comment:2/1197294873000000</guid>
      <description>&lt;p&gt;
There is already &lt;code&gt;has_filter()&lt;/code&gt; and &lt;code&gt;has_action()&lt;/code&gt; for testing whether or not a action or filter exists.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5448 (Comments-template echoes strange comment link) updated</title>
      
        <dc:creator>pishmishy</dc:creator>

      <pubDate>Mon, 10 Dec 2007 12:59:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5448#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5448#comment:1/1197291596000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Confirmed. Tested patch, fixes issue. Needs to go into next release.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>diff.txt attached to Ticket #5448</title>
      
        <dc:creator>reinkim</dc:creator>

      <pubDate>Mon, 10 Dec 2007 12:43:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5448/diff.txt</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5448/diff.txt/1197290613000000</guid>
      <description>&lt;p&gt;
source diff
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5448 (Comments-template echoes strange comment link) created</title>
      
        <dc:creator>reinkim</dc:creator>

      <pubDate>Mon, 10 Dec 2007 12:43:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5448</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5448/1197290602000000</guid>
      <description>&lt;p&gt;
After applying changeset &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6368" title="comments_popup_link filter from joostdevalk.  fixes #5247"&gt;[6368]&lt;/a&gt; comments_popup_link function in wp-includes/comments-template.php behalves differently from previous versions.
&lt;/p&gt;
&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6368" title="comments_popup_link filter from joostdevalk.  fixes #5247"&gt;[6368]&lt;/a&gt; comments_popup_link assembles $comments_popup_link variable, but in some execution path there are codes which &lt;em&gt;echo&lt;/em&gt; the output, which should be appended to $comments_popup_link variable.
&lt;/p&gt;
&lt;p&gt;
Problematic codes (all source lines from wp-includes/comments-template)
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;function comments_number echoes its result
&lt;/li&gt;&lt;li&gt;function comments_link echoes its output
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I made fix to the source (attached diff. file) which may need some tests.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5447 (wxr importer uses wrong category when duplicate name exists) updated</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Mon, 10 Dec 2007 10:32:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5447#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5447#comment:1/1197282722000000</guid>
      <description>&lt;p&gt;
The exporter is part of the problem here - it lists post categories by name rather than by a unique identifier.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5447 (wxr importer uses wrong category when duplicate name exists) created</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Mon, 10 Dec 2007 10:29:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5447</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5447/1197282589000000</guid>
      <description>&lt;p&gt;
It's legit for two categories to have the same name when they're in different parts of a hierarchy:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Foo A
Foo Parent - Foo A
&lt;/pre&gt;&lt;p&gt;
The importer gets this wrong however.  It inserts both categories with the correct names and parents, but posts in the second cat will incorrectly be assigned to the first on import.
&lt;/p&gt;
&lt;p&gt;
The 'Category name clash' post in this import file reproduces the problem.  It should be in the Foo Parent - Foo A category, not the top level Foo A category.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://svn.automattic.com/wordpress-tests/wp-testdata/export/asdftestblog1.2007-12-10.xml"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://svn.automattic.com/wordpress-tests/wp-testdata/export/asdftestblog1.2007-12-10.xml&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Changeset in tests [133]: update dataset1</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Mon, 10 Dec 2007 10:23:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/133/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/133/tests/1197282226483307</guid>
      <description>&lt;p&gt;
update dataset1
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #5446 (Return error when requesting invalid feed format) updated</title>
      
        <dc:creator>pishmishy</dc:creator>

      <pubDate>Mon, 10 Dec 2007 10:17:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5446#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5446#comment:1/1197281862000000</guid>
      <description>&lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5446 (Return error when requesting invalid feed format) created</title>
      
        <dc:creator>pishmishy</dc:creator>

      <pubDate>Mon, 10 Dec 2007 10:16:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5446</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5446/1197281807000000</guid>
      <description>&lt;p&gt;
Requesting an invalid feed format (say &lt;a class="ext-link" href="http://www.myblog.com/?feed=foo"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.myblog.com/?feed=foo&lt;/a&gt;) results in a blank page. This is due to do_feed() in functions.php calling hooked actions without any feedback on whether the appropriate action actually exists. Depends on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5445" title="#5445: defect (bug): Add function to count number of functions hooked to an action (closed: invalid)"&gt;#5445&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5445 (Add function to count number of functions hooked to an action) updated</title>
      
        <dc:creator>pishmishy</dc:creator>

      <pubDate>Mon, 10 Dec 2007 10:14:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5445#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5445#comment:1/1197281683000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>count_action.patch attached to Ticket #5445</title>
      
        <dc:creator>pishmishy</dc:creator>

      <pubDate>Mon, 10 Dec 2007 10:14:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5445/count_action.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5445/count_action.patch/1197281651000000</guid>
      <description>&lt;p&gt;
Adds count_action()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5445 (Add function to count number of functions hooked to an action) created</title>
      
        <dc:creator>pishmishy</dc:creator>

      <pubDate>Mon, 10 Dec 2007 10:12:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5445</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5445/1197281557000000</guid>
      <description>&lt;p&gt;
Add a function to count the number of functions hooked to a particular action. Useful to test if an action exists at all.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Changeset in tests [132]: add comments, cat slugs to generate-post-test</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Mon, 10 Dec 2007 08:31:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/132/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/132/tests/1197275475644870</guid>
      <description>&lt;p&gt;
add comments, cat slugs to generate-post-test
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #4753 (Simplify get_userdatabylogin) updated</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Mon, 10 Dec 2007 07:48:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4753#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4753#comment:1/1197272936000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Relates to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5392" title="#5392: defect (bug): get_user_by_email() and get_user* cleanup (closed: fixed)"&gt;#5392&lt;/a&gt;. The get_userby... functions still have a lot of overlap though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4206 (Publish button overrides Private post status) updated</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Mon, 10 Dec 2007 07:38:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4206#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4206#comment:16/1197272282000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
4206b.diff
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
To me that still doesnt help.
&lt;/p&gt;
&lt;p&gt;
While i've never used a private post, my thoughts are that you'd "Publish it as a private post", The wording in the patch suggests to me that thats what happens, NOT that it'll be a published post rather than a private post.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5397 (exif_read_data() called for non-jpeg/tiff image files, resulting in error) updated</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Mon, 10 Dec 2007 07:27:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5397#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5397#comment:7/1197271648000000</guid>
      <description>&lt;p&gt;
That is one fine patch then.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5397 (exif_read_data() called for non-jpeg/tiff image files, resulting in error) updated</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Mon, 10 Dec 2007 07:25:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5397#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5397#comment:6/1197271529000000</guid>
      <description>&lt;p&gt;
Yep, Its intentional, The first function(iptcparse()) is not called unless there is data for it to parse( $info&lt;a class="missing wiki"&gt;APP13?&lt;/a&gt; from getimagesize() ).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5397 (exif_read_data() called for non-jpeg/tiff image files, resulting in error) updated</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Mon, 10 Dec 2007 07:22:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5397#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5397#comment:5/1197271363000000</guid>
      <description>&lt;p&gt;
Your first patch covered two areas or functions. Your second, while sexier, only covers one of the areas/functions. Is this intentional?
&lt;/p&gt;
&lt;pre class="wiki"&gt;Line 273 - iptcparse() (not covered)
Line 291 - exif_read_data() (covered)
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset in tests [131]: import test: check category slugs</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Mon, 10 Dec 2007 07:14:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/131/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/131/tests/1197270896211977</guid>
      <description>&lt;p&gt;
import test: check category slugs
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #5444 (PHPdoc effort for deprecated.php) updated</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Mon, 10 Dec 2007 07:14:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5444#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5444#comment:1/1197270865000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>deprecated.phpdoc.diff attached to Ticket #5444</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Mon, 10 Dec 2007 07:11:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5444/deprecated.phpdoc.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5444/deprecated.phpdoc.diff/1197270697000000</guid>
      <description>&lt;p&gt;
Documentation for deprecated.php based off of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6367" title="Remove triming from string options fixes #4781 props hakre"&gt;r6367&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5444 (PHPdoc effort for deprecated.php) created</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Mon, 10 Dec 2007 07:11:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5444</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5444/1197270666000000</guid>
      <description>&lt;p&gt;
Over the discussion in WP-Hackers and the lack of alternatives in the &lt;code&gt;wp-includes/deprecated.php&lt;/code&gt;. I went ahead and documented all of the globals and functions in that file.
&lt;/p&gt;
&lt;p&gt;
The patch also cleans up some coding standard violations in the file. Not a lot of time was spent obtaining or adding parameter information (that didn't already exist) and adding long and short descriptions if they didn't exist before. This is intentional.
&lt;/p&gt;
&lt;p&gt;
There is no point spending more time than needed to document functions that probably won't be used any longer. However, &lt;code&gt;@since&lt;/code&gt; tags and alternatives has been added to every function.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #3982 (PHPdoc effort for post.php) updated</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Mon, 10 Dec 2007 06:59:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3982#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3982#comment:7/1197269943000000</guid>
      <description>&lt;p&gt;
Bump.
&lt;/p&gt;
&lt;p&gt;
Can this patch still go in? Let me know if it won't commit and I'll submit an updated patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>5397.exif.the-proper-way.diff attached to Ticket #5397</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Mon, 10 Dec 2007 06:58:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5397/5397.exif.the-proper-way.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5397/5397.exif.the-proper-way.diff/1197269893000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5397 (exif_read_data() called for non-jpeg/tiff image files, resulting in error) updated</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Mon, 10 Dec 2007 06:58:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5397#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5397#comment:4/1197269882000000</guid>
      <description>&lt;p&gt;
I agree that error suppressing is never sexy, So i'll attach another patch without it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [6369]: Support atom threading.  Props rubys. fixes #5434</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 10 Dec 2007 06:57:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/6369</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/6369/1197269878306518</guid>
      <description>&lt;p&gt;
Support atom threading.  Props rubys. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5434" title="#5434: enhancement: Supporting the Atom Threading Extensions (closed: fixed)"&gt;#5434&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #5434 (Supporting the Atom Threading Extensions) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 10 Dec 2007 06:57:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5434#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5434#comment:5/1197269878000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6369" title="Support atom threading.  Props rubys. fixes #5434"&gt;[6369]&lt;/a&gt;) Support atom threading.  Props rubys. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5434" title="#5434: enhancement: Supporting the Atom Threading Extensions (closed: fixed)"&gt;#5434&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #5247 (comments_popup_link needs a filter) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 10 Dec 2007 06:53:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5247#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5247#comment:2/1197269639000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6368" title="comments_popup_link filter from joostdevalk.  fixes #5247"&gt;[6368]&lt;/a&gt;) comments_popup_link filter from joostdevalk.  fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5247" title="#5247: enhancement: comments_popup_link needs a filter (closed: fixed)"&gt;#5247&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [6368]: comments_popup_link filter from joostdevalk.  fixes #5247</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 10 Dec 2007 06:53:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/6368</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/6368/1197269638896078</guid>
      <description>&lt;p&gt;
comments_popup_link filter from joostdevalk.  fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5247" title="#5247: enhancement: comments_popup_link needs a filter (closed: fixed)"&gt;#5247&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #5397 (exif_read_data() called for non-jpeg/tiff image files, resulting in error) updated</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Mon, 10 Dec 2007 06:38:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5397#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5397#comment:3/1197268692000000</guid>
      <description>&lt;p&gt;
Suppressing errors is never sexy.
&lt;/p&gt;
&lt;p&gt;
If I was going to make a patch, I would explicitly check for either GIF and TIFF and run that through a filter.
&lt;/p&gt;
&lt;p&gt;
However, since I'm not going to make a patch to counter yours, then I think yours is sexy... enough.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5397 (exif_read_data() called for non-jpeg/tiff image files, resulting in error) updated</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Mon, 10 Dec 2007 06:23:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5397#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5397#comment:2/1197267789000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>5397.exif.suppress-errors.diff attached to Ticket #5397</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Mon, 10 Dec 2007 06:22:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5397/5397.exif.suppress-errors.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5397/5397.exif.suppress-errors.diff/1197267770000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5397 (exif_read_data() called for non-jpeg/tiff image files, resulting in error) updated</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Mon, 10 Dec 2007 06:21:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5397#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5397#comment:1/1197267682000000</guid>
      <description>&lt;p&gt;
Confirmed with a .bmp on PHP5.2.4 + Apache/win32
&lt;/p&gt;
&lt;p&gt;
Given that the filetypes that the exif functions accept might change between installs/versions (i'm honestly not sure), I think the best method might to suppress the errors, That works fine here and allows the upload to go ahead as usual.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3451 (Page URI canonization) updated</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Mon, 10 Dec 2007 06:11:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3451#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3451#comment:9/1197267067000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/3451#comment:8" title="Comment 8"&gt;Viper007Bond&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Another possible solution for multiple destinations possible is to pull up the search template and list out all the post/pages for the user to pick from.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thats a much nicer option IMO.
&lt;/p&gt;
&lt;p&gt;
The present redirect code(in trunk) just redirects it to the first item it comes accross(unordered) that fits the criteria that its managed to find. On second thoughts, that $order statement could probably be hard coded for the query if its to select only one item.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5093 (Foldable boxes in post new page have various bugs in different browsers) updated</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Mon, 10 Dec 2007 06:08:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5093#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5093#comment:2/1197266889000000</guid>
      <description>&lt;p&gt;
With Opera when dragging under Opera 9.5.alpha, The box is moved to near the top of the page, if you have a low resolution and move them, you will probably not notice where the boxes have disapeared to, which makes you think they're hidden. Just so someone doesnt attempt to fix it and not be able to find out why they're hidden.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3451 (Page URI canonization) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Mon, 10 Dec 2007 06:08:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3451#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3451#comment:8/1197266884000000</guid>
      <description>&lt;p&gt;
Another possible solution for multiple destinations possible is to pull up the search template and list out all the post/pages for the user to pick from.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>3451.canonical.redirect-pages.diff attached to Ticket #3451</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Mon, 10 Dec 2007 05:55:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/3451/3451.canonical.redirect-pages.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/3451/3451.canonical.redirect-pages.diff/1197266145000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #3451 (Page URI canonization) updated</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Mon, 10 Dec 2007 05:54:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3451#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3451#comment:7/1197266077000000</guid>
      <description>&lt;p&gt;
the canonical code redirects ?page_id=43 to the correct page allready.
&lt;/p&gt;
&lt;p&gt;
I've just made a patch up which attempts to redirect pages, However, it may be too greedy for the likes of some.
&lt;/p&gt;
&lt;p&gt;
Lets say i have a page structure like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Sub-marine
About Me
   Sub about me
      sub-sub about me
&lt;/pre&gt;&lt;p&gt;
The attached patch will redirect:
&lt;/p&gt;
&lt;pre class="wiki"&gt;hostname/wordpress/abOUT-me/ =&amp;gt; hostname/wordpress/about-me/
hostname/wordpress/abOUT-me/sub- =&amp;gt; hostname/wordpress/about-me/sub-about-me/
hostname/wordpress/abOUT-me/sub-sub =&amp;gt; hostname/wordpress/about-me/sub-about-me/sub-sub-about-me/
hostname/wordpress/sub- =&amp;gt; hostname/wordpress/sub-marine/
hostname/wordpress/sub-sub =&amp;gt; hostname/wordpress/about-me/sub-about-me/sub-sub-about-me/
&lt;/pre&gt;&lt;p&gt;
Now, getting to the greedy part:&lt;br /&gt;
It also has the effect of redirecting things like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;hostname/wordpress/a =&amp;gt; hostname/wordpress/about-me/
hostname/wordpress/su =&amp;gt; hostname/wordpress/sub-marine/
hostname/wordpress/hta =&amp;gt; hostname/wordpress/2007/11/05/htaccess/
&lt;/pre&gt;&lt;p&gt;
In the case where there's multiple destinations possible, It selects the uppermost item alphabetically.&lt;br /&gt;
So hostname/wordpress/a will choose 'about-me' over 'azzes', and 'about-me' over 'parent/aaaa-sub-page'
&lt;/p&gt;
&lt;p&gt;
If it comes accross a semi-permalink:&lt;br /&gt;
&lt;code&gt;hostname/wordpress/perma/structure/post-na&lt;/code&gt; it'll still redirect it to that post: &lt;code&gt;hostname/wordpress/perma/structure/post-name/&lt;/code&gt; rather than sending it to &lt;code&gt;hostname/wordpress/post-nam/&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5265 (current_user_can() can run before wp_get_current_user() is defined) closed</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Mon, 10 Dec 2007 04:19:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5265#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5265#comment:11/1197260351000000</guid>
      <description>invalid: &lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5265#comment:10" title="Comment 10"&gt;darkdragon&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
For what it is worth, I agree with DD32. It is unacceptable to assume that functions will exist without hooking into init hook first. So naturally, anything plugin that doesn't follow this principle has a bug in the plugin and not in WordPress. It is a limitation of the language and therefore seems illogical to assume that functions will be available before PHP knows about it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't think there's any disagreement there.
&lt;/p&gt;
&lt;p&gt;
My point though is that I'm not calling a function that doesn't exist, I'm calling one that does and that's causing all of WordPress to break and that there should be some error handling there. One would think that any function defined at the time custom code is run would be expected to work or that otherwise it'd be undefined, but maybe that's just me...
&lt;/p&gt;
&lt;p&gt;
But anyway, I'll re-mark as invalid since the proper practice is to not run anything at plugin load.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;strong&gt;WTF?&lt;/strong&gt; Returning null in a constructor, that is plain bad practice right there. You should know better than that!
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Heh, I wasn't actually putting that forward that exact solution, just that perhaps it'd be best for the function to fail gracefully. ;)
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #5265 (current_user_can() can run before wp_get_current_user() is defined) updated</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Mon, 10 Dec 2007 03:52:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5265#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5265#comment:10/1197258726000000</guid>
      <description>&lt;p&gt;
For what it is worth, I agree with DD32. It is unacceptable to assume that functions will exist without hooking into init hook first. So naturally, anything plugin that doesn't follow this principle has a bug in the plugin and not in WordPress. It is a limitation of the language and therefore seems illogical to assume that functions will be available before PHP knows about it.
&lt;/p&gt;
&lt;p&gt;
Just because a function makes reference to a function that may not exist at that time, doesn't mean it will break anything until the function is called that contains the function in question.
&lt;/p&gt;
&lt;p&gt;
As for fixing the pluggables, there is a pattern that would be useful. I forget what the name is. Hmm, related to Dependency Interjection, but I don't think that is the correct name for the pattern. No matter.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;WTF?&lt;/strong&gt; Returning null in a constructor, that is plain bad practice right there. You should know better than that!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5265 (current_user_can() can run before wp_get_current_user() is defined) updated</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Mon, 10 Dec 2007 03:34:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5265#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5265#comment:9/1197257668000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5265#comment:8" title="Comment 8"&gt;Viper007Bond&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Load &lt;code&gt;pluggable.php&lt;/code&gt; before any user script is able to run so that &lt;code&gt;current_user_can()&lt;/code&gt; won't throw a PHP error&lt;br /&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Well that option is useless, It needs to be loaded after plugins to allow plugins to override them.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Put a &lt;code&gt;function_exists()&lt;/code&gt; check inside of &lt;code&gt;current_user_can()&lt;/code&gt; so that it can't run until everything it needs to operate is loaded&lt;br /&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
That could work, If function doesnt exist, then user cannot perform operation, Which would backfire on anything requesting the action anyway, the function doesnt know yet if a user can or cant perform the action, returning null instead might be an option, But will still be interprated as a negitive response to most code.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Move &lt;code&gt;capabilities.php&lt;/code&gt; to after plugins are loaded (seems like a bad idea)
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
That could work, But what about functions in the other set of files loaded before the plugins? What if they require a function in &lt;code&gt;capabilities.php&lt;/code&gt;?, or a function in &lt;code&gt;pluggable.php&lt;/code&gt;, Should we move those after plugins are loaded too?
&lt;/p&gt;
&lt;p&gt;
At least some of the files need to be loaded before plugins (database/get_option/sanitize_option/etc), All which require another function, which requires another.. Eitherway, You'll find another function which will need a function which is undefined at that stage.
&lt;/p&gt;
&lt;p&gt;
Thats why plugin_loaded/init hooks are provided, To allow for code to be run once WP has loaded all its files, and is ready to work as intended, Until that time comes, Any code in any file(be it WP's or a Plugins) cant expect all functions to behave as intended.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I hate to get in an open/close war
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
And for that reason, I'll not touch the status of it
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5265 (current_user_can() can run before wp_get_current_user() is defined) reopened</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Mon, 10 Dec 2007 03:17:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5265#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5265#comment:8/1197256671000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5265#comment:7" title="Comment 7"&gt;DD32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I meant in normal operation, &lt;code&gt;current_user_can()&lt;/code&gt; wouldnt be called until after plugins and &lt;code&gt;pluggable.php&lt;/code&gt; had been loaded.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Correct, and I fixed my plugin to do that, but you shouldn't be able to call a &lt;strong&gt;defined function properly&lt;/strong&gt; and get WordPress to make a fatal PHP error as a result. It's bad coding practice in my book. Having the function not work as intended (like returning a null result) is one thing, but literally breaking is another.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;current_user_can()&lt;/code&gt; should either be defined later (and therefore be an undefined function at the time of plugin loading) or better yet, should not use functions not loaded yet.
&lt;/p&gt;
&lt;p&gt;
So three possible solutions:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Load &lt;code&gt;pluggable.php&lt;/code&gt; before any user script is able to run so that &lt;code&gt;current_user_can()&lt;/code&gt; won't throw a PHP error&lt;br /&gt;
&lt;/li&gt;&lt;li&gt;Put a &lt;code&gt;function_exists()&lt;/code&gt; check inside of &lt;code&gt;current_user_can()&lt;/code&gt; so that it can't run until everything it needs to operate is loaded&lt;br /&gt;
&lt;/li&gt;&lt;li&gt;Move &lt;code&gt;capabilities.php&lt;/code&gt; to after plugins are loaded (seems like a bad idea)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I hate to get in an open/close war, but WordPress shouldn't throw PHP errors if a plugin calls a defined function correctly, no matter what. It needs abort gracefully.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Changeset in tests [130]: update the main import test to include comments</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Mon, 10 Dec 2007 02:59:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/130/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/130/tests/1197255583944585</guid>
      <description>&lt;p&gt;
update the main import test to include comments
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #5265 (current_user_can() can run before wp_get_current_user() is defined) updated</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Mon, 10 Dec 2007 02:48:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5265#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5265#comment:7/1197254921000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5265#comment:6" title="Comment 6"&gt;Viper007Bond&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5265#comment:5" title="Comment 5"&gt;DD32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I cant see any reason for pluggable.php to be loaded before capabilities.php,
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Because &lt;code&gt;capabilities.php&lt;/code&gt; is calling a function defined in &lt;code&gt;pluggable.php&lt;/code&gt; ?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I meant in normal operation, &lt;code&gt;current_user_can()&lt;/code&gt; wouldnt be called until after plugins and &lt;code&gt;pluggable.php&lt;/code&gt; had been loaded.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5265 (current_user_can() can run before wp_get_current_user() is defined) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Mon, 10 Dec 2007 01:12:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5265#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5265#comment:6/1197249175000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5265#comment:5" title="Comment 5"&gt;DD32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I cant see any reason for pluggable.php to be loaded before capabilities.php,
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Because &lt;code&gt;capabilities.php&lt;/code&gt; is calling a function defined in &lt;code&gt;pluggable.php&lt;/code&gt; ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>