<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #2697 (Hacking URLs under certain formats allows you to see drafts) closed</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Thu, 27 Apr 2006 19:34:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2697</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2697/1146166477000000</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #2689 (get_links() does not order properly) closed</title>
      
        <dc:creator>davidhouse</dc:creator>

      <pubDate>Thu, 27 Apr 2006 17:50:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2689</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2689/1146160254000000</guid>
      <description>worksforme: &lt;p&gt;
Seems to work here. Anyone reopen if they can replicate.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #2678 (Nonces instead of referers) updated</title>
      
        <dc:creator>SilverPaladin</dc:creator>

      <pubDate>Thu, 27 Apr 2006 15:25:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2678</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2678/1146151518000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
43200/720 minutes minutes is much better than your accused 30 days.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Oh, you're right.  Brainfreeze. I recognized the 720 number and forgot there was an extra /60 to do.  30 days = 720 hours.  A 12-24 hour range is MUCH better.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
By my calculations, $i would change every 12 hours, not every 30 days.
That makes the window 24 hours
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, anywhere from 24 hours down to 12 hours and 1 second. I guess that long of a period is good if this figure can't be customizable. If you get smaller than that, people will expect a more precise logout time. They'll want 10 minutes to mean 10 minutes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2697 (Hacking URLs under certain formats allows you to see drafts) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Thu, 27 Apr 2006 14:59:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2697</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2697/1146149957000000</guid>
      <description>&lt;p&gt;
Ahh.. Okay, yes, you do have to be logged in.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2678 (Nonces instead of referers) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 27 Apr 2006 08:32:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2678</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2678/1146126766000000</guid>
      <description>&lt;p&gt;
Patch adds nonces for categories and bookmarks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>nonce.5.diff attached to Ticket #2678</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 27 Apr 2006 08:32:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2678/nonce.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2678/nonce.5.diff/1146126732000000</guid>
      <description>&lt;p&gt;
More noncification.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2678 (Nonces instead of referers) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 27 Apr 2006 07:14:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2678</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2678/1146122086000000</guid>
      <description>&lt;p&gt;
The functions are pluggable.  Plugins can replace them as they see fit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2678 (Nonces instead of referers) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Thu, 27 Apr 2006 06:17:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2678</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2678/1146118679000000</guid>
      <description>&lt;p&gt;
If you can only control the 43200 number, you're stuck with accepting a range of X to 2X.  How about making the code so that if can decrement $i a specified number of times, as well as being able to set the 43200 number?  That way, you could decrease the denominator, but increase the number of decrementats, so you could set up a nonce that expires in 30 to 31 minutes (denominator of 60, 30 decrements).  Obviously this would make it slower, but it'd be nice to give people the option.  I'm fine with the default 12-24 as the standard.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2697 (Hacking URLs under certain formats allows you to see drafts) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 27 Apr 2006 06:11:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2697</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2697/1146118314000000</guid>
      <description>&lt;p&gt;
If you are logged in, you can see draft posts for which you have edit privileges in this manner.  Make sure aren't logged in.  I can't see your drafts using those links.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2696 (add_menu_page doesn't respect "access level".) updated</title>
      
        <dc:creator>denney</dc:creator>

      <pubDate>Thu, 27 Apr 2006 05:23:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2696</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2696/1146115430000000</guid>
      <description>&lt;p&gt;
Unless I'm using sloppy code, I cannot figure out why my test (I don't use classes) reproduces the problem.
&lt;/p&gt;
&lt;p&gt;
It seems that if you use a class, it works, if not, it doesn't. I don't understand that.
&lt;/p&gt;
&lt;p&gt;
I'm using trunk. I have uploaded a snippet of my code that does reproduce the problem.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>menu-test2.php attached to Ticket #2696</title>
      
        <dc:creator>denney</dc:creator>

      <pubDate>Thu, 27 Apr 2006 05:22:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2696/menu-test2.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2696/menu-test2.php/1146115336000000</guid>
      <description>&lt;p&gt;
Menu test that does reproduce the results.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2697 (Hacking URLs under certain formats allows you to see drafts) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Thu, 27 Apr 2006 05:19:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2697</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2697/1146115158000000</guid>
      <description>&lt;p&gt;
Confirmed, this works regardless of permalink structure.
&lt;/p&gt;
&lt;p&gt;
Example: &lt;a class="ext-link" href="http://ottodestruct.com/blog/?p=76"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://ottodestruct.com/blog/?p=76&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I don't use the p=xx format for my permalinks, but they still appear to work. If you intelligently guess numbers, you can get any draft you like via this method.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2683 (rss-functions.php incorrectly handles multiple links in atom format) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Thu, 27 Apr 2006 05:07:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2683</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2683/1146114456000000</guid>
      <description>&lt;p&gt;
Magpie has been updated significantly since it was used to make rss-functions.php. I sorta hacked a new rss-functions.php file together for my google calendar widget here: &lt;a class="ext-link" href="http://ottodestruct.com/blog/2006/04/18/google-calendar-widget/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://ottodestruct.com/blog/2006/04/18/google-calendar-widget/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
But I wouldn't recommend using that code in wordpress. What really should happen is that rss-functions.php needs to be reworked to use the MagpieRSS code directly, using the unaltered files from here: &lt;a class="ext-link" href="http://magpierss.sourceforge.net/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://magpierss.sourceforge.net/&lt;/a&gt; That way, updating Magpie would be simply dropping the new files into place from the Magpie project. Shouldn't be too hard to do.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [3753]: Return user ID if email exists.</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 27 Apr 2006 04:24:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/3753</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/3753/1146111854989365</guid>
      <description>&lt;p&gt;
Return user ID if email exists.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #2697 (Hacking URLs under certain formats allows you to see drafts) created</title>
      
        <dc:creator>Resiny</dc:creator>

      <pubDate>Thu, 27 Apr 2006 04:09:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2697</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2697/1146110993000000</guid>
      <description>&lt;p&gt;
Just something I noticed, when using URL styles like site.com/%post_id% and the default category settings, you can hack URLs to view posts that have been saved as a draft.
&lt;/p&gt;
&lt;p&gt;
For instance, say you write and publish post number one. Readers see it at site.com/1 or in the default setting site.com/?p=1. Then you write the second post and save it as a draft. If you were to publish it it would show up at the permalink site.com/2 or site.com/?p=2. But it's saved as a draft, so it's not visible in the blog. You then write a third entry and publish it. On the homepage visitors see site.com/1, and site.com/3 (or site.com/?p=1 and site.com/?p=3).
&lt;/p&gt;
&lt;p&gt;
The second entry that was saved as a draft will show up and be at url site.com/2 or site.com/?p=2. However, hacking the URL still allows people to see the draft.
&lt;/p&gt;
&lt;p&gt;
You can see an example at my test site.
&lt;/p&gt;
&lt;p&gt;
Entry number 4 was published- &lt;a class="ext-link" href="http://resiny.org/beta/?p=4"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://resiny.org/beta/?p=4&lt;/a&gt;
Entry number 5 was deleted, thus you get a 404 trying to see it- &lt;a class="ext-link" href="http://resiny.org/beta/?p=5"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://resiny.org/beta/?p=5&lt;/a&gt;
Entry number 6 was written, but saved and not published, so you don't see it on the home page- &lt;a class="ext-link" href="http://resiny.org/beta/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://resiny.org/beta/&lt;/a&gt;, but hacking the URL allows you to see a draft, not good &lt;a class="ext-link" href="http://resiny.org/beta/?p=6"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://resiny.org/beta/?p=6&lt;/a&gt;
The next entry was published and shows up normally &lt;a class="ext-link" href="http://resiny.org/beta/?p=7"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://resiny.org/beta/?p=7&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Not a massive security threat or anything, but you definitely don't want readers to be able to see drafts. As far as I can tell, this works with the default permalink structure as well as /%post_id%
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #2233 (wpdb constructor should create a new connection) updated</title>
      
        <dc:creator>masquerade</dc:creator>

      <pubDate>Thu, 27 Apr 2006 02:31:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2233</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2233/1146105103000000</guid>
      <description>&lt;p&gt;
While partially correct, creating a new object will not do exactly what you think. Both instances of wpdb will use the same database link either way, because $this-&amp;gt;dbh is not used in the calls to mysql_*, so either way, both are needed, thomasq's patch is insufficient.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2233 (wpdb constructor should create a new connection) updated</title>
      
        <dc:creator>Libertus</dc:creator>

      <pubDate>Wed, 26 Apr 2006 23:37:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2233</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2233/1146094631000000</guid>
      <description>&lt;p&gt;
masquerade, abhay,
&lt;/p&gt;
&lt;p&gt;
The original patch from thomasq is correct. wpdb constructor must force a new database connection, otherwise imports from different databases on the same host with the same username and password as the main WP database will fail.
&lt;/p&gt;
&lt;p&gt;
The problem is not where $this-&amp;gt;dbh is used. The problem is that $this-&amp;gt;dbh on two supposedly independent wpdb objects are references to the same underlying database connection object, making wpdb::select() change the active database for all of them, including the global $wpdb, which side-effect causes the failure.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2678 (Nonces instead of referers) updated</title>
      
        <dc:creator>ringmaster</dc:creator>

      <pubDate>Wed, 26 Apr 2006 20:00:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2678</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2678/1146081656000000</guid>
      <description>&lt;p&gt;
By my calculations, $i would change every 12 hours, not every 30 days.  That makes the window 24 hours when checking "this nonce" and "the one before this one".
&lt;/p&gt;
&lt;p&gt;
For example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$t = strtotime('2006-04-24 12:00:00');
$i = ceil($t / 43200);
echo "$i\n";
$t = strtotime('2006-04-25 00:00:00');
$i = ceil($t / 43200);
echo "$i\n";
&lt;/pre&gt;&lt;p&gt;
Output:
&lt;/p&gt;
&lt;pre class="wiki"&gt;26526
26527
&lt;/pre&gt;&lt;p&gt;
We can (should) make 43200 into a constant and then you would be able to change the window as preferred.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2678 (Nonces instead of referers) updated</title>
      
        <dc:creator>masquerade</dc:creator>

      <pubDate>Wed, 26 Apr 2006 19:53:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2678</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2678/1146081191000000</guid>
      <description>&lt;p&gt;
&lt;code&gt;This solution tries to use a time check, but the logic doesn't work.&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Sure it does
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;This code here is the problem: &amp;gt;$i = ceil(time() / 43200);&lt;/code&gt;
Not quite, keep reading
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;That takes the number of seconds since January 1 1970 00:00:00 GMT and counts how many 30 day chunks there have been.&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
No, since when was 43200 seconds 30 days? Last I checked, 43200 / 60 (seconds) / 60 (minutes) = 12 hours.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;The nonce evaluation simply checks to see if you are in the same 30 day chunk of time. It does not say "this nonce is valid for 30 days." In fact, if you visit this site with only one second left in the 30 day chunk, you will have 1 second in which to do all of your work.&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
You didn't look at the logic which checks, which also checks $i-1 against the hash, making the lifetime of the hash 12 hours to 24 hours.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;Additionally, all days within that thirty day chunk evaluate as being the same chunk. So, as salt, $i really does nothing right now. So I don't think a solution of "just check the next chunk too" is a good one. A nonce that can be valid for two months is not really time based, imho.&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Months are far too long, which is why no nonces last more than a day.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;Generally speaking when used for security purposes in applications, Nonces should be valid for as short a time as possible. When used as a session key, this normally means a nonce is valid for minutes, not days.&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
43200/120 minutes is much better than your accused 30 days.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>menu-test.php attached to Ticket #2696</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 26 Apr 2006 18:21:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2696/menu-test.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2696/menu-test.php/1146075680000000</guid>
      <description>&lt;p&gt;
Simple menu testing plugin
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2696 (add_menu_page doesn't respect "access level".) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 26 Apr 2006 18:20:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2696</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2696/1146075645000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Ok sorry you are correct the right place to build admin menus is on the admin_menu hook.
&lt;/p&gt;
&lt;p&gt;
However I can't reproduce your bug.
&lt;/p&gt;
&lt;p&gt;
I am uploading my menu testing plugin and the menus I have set to have level_10 capability or a userlevel of 10 are only viewable by the admin user.
&lt;/p&gt;
&lt;p&gt;
What version of WP are you testing - I have tested with 2.0.2 and trunk
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2678 (Nonces instead of referers) updated</title>
      
        <dc:creator>SilverPaladin</dc:creator>

      <pubDate>Wed, 26 Apr 2006 17:55:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2678</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2678/1146074155000000</guid>
      <description>&lt;p&gt;
This solution tries to use a time check, but the logic doesn't work.
&lt;/p&gt;
&lt;p&gt;
This code here is the problem:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
$i = ceil(time() / 43200);
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That takes the number of seconds since January 1 1970 00:00:00 GMT and counts how many 30 day chunks there have been.
&lt;/p&gt;
&lt;p&gt;
The nonce evaluation simply checks to see if you are in the same 30 day chunk of time. It does not say "this nonce is valid for 30 days."  In fact, if you visit this site with only one second left in the 30 day chunk, you will have 1 second in which to do all of your work.
&lt;/p&gt;
&lt;p&gt;
Additionally, all days within that thirty day chunk evaluate as being the same chunk.  So, as salt, $i really does nothing right now.  So I don't think a solution of "just check the next chunk too" is a good one. A nonce that can be valid for two months is not really time based, imho.
&lt;/p&gt;
&lt;p&gt;
Generally speaking when used for security purposes in applications, Nonces should be valid for as short a time as possible.  When used as a session key, this normally means a nonce is valid for minutes, not days.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2678 (Nonces instead of referers) updated</title>
      
        <dc:creator>SilverPaladin</dc:creator>

      <pubDate>Wed, 26 Apr 2006 17:50:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2678</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2678/1146073801000000</guid>
      <description>&lt;p&gt;
This solution tries to use a time check, but the logic doesn't work.
&lt;/p&gt;
&lt;p&gt;
This code here is the problem:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
$i = ceil(time() / 43200);
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That takes the number of seconds since January 1 1970 00:00:00 GMT and counts how many 30 day chunks there have been.  The nonce evaluation simply checks to see if you are in the same 30 day chunk of time.
&lt;/p&gt;
&lt;p&gt;
It does not say "this nonce is valid for 30 days."  In fact, if you visit this site with only one second left in the 30 day chunk, you will have 1 second in which to do all of your work.
&lt;/p&gt;
&lt;p&gt;
Additionally, all days within that thirty day chunk evaluate as being the same chunk.  So, as salt, $i really does nothing.
&lt;/p&gt;
&lt;p&gt;
In security applications, Nonces should be valid for as short a time as possible.  When used as a session key, this normally means a nonce is valid for minutes, not days.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2682 (Paths should be relative for images and uploads) updated</title>
      
        <dc:creator>ryanscheuermann</dc:creator>

      <pubDate>Wed, 26 Apr 2006 15:12:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2682</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2682/1146064368000000</guid>
      <description>&lt;p&gt;
You know, you're right and I did not know that.  I was taught to always use double quotes and I guess over the years I started to assume it was the standard.  Thanks for teaching me something new.
&lt;/p&gt;
&lt;p&gt;
And actually, the 'hwstring_small' meta attribute (that has the single quoted attributes) isn't even used by any WP core code.  (inline_uploading.php: line 80)  The height and width attributes for thumbnails are recreated upon display anyway.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2696 (add_menu_page doesn't respect "access level".) updated</title>
      
        <dc:creator>denney</dc:creator>

      <pubDate>Wed, 26 Apr 2006 13:51:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2696</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2696/1146059466000000</guid>
      <description>&lt;ol&gt;&lt;li&gt;The patch I posted doesn't work with other plugins that use add_submenu_page(). It keeps trying to redeclare the function. Not good. So don't use my patch.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;I am using the "admin_menu()" hook to call "add_menu_page()" because that's what the Codex says to do. I tried just calling it when it's first included AND running it through init but I get an error about "add_menu_page() function doesn't exist".
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2696 (add_menu_page doesn't respect "access level".) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 26 Apr 2006 13:18:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2696</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2696/1146057517000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Are you using the admin_menu hook to call add_menu_page?
&lt;/p&gt;
&lt;p&gt;
I'm not sure you should - you should do it when you plugin is first included or on the init hook instead.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2688 (plugin order is wrong) closed</title>
      
        <dc:creator>leftjustified</dc:creator>

      <pubDate>Wed, 26 Apr 2006 13:07:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2688</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2688/1146056877000000</guid>
      <description>duplicate: &lt;p&gt;
that's some good thinking!
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #2696 (add_menu_page doesn't respect "access level".) updated</title>
      
        <dc:creator>denney</dc:creator>

      <pubDate>Wed, 26 Apr 2006 12:55:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2696</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2696/1146056150000000</guid>
      <description>&lt;p&gt;
I don't think the patch I've submitted weakens security but it fixes the problem so it's a possible solution?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>menu.diff attached to Ticket #2696</title>
      
        <dc:creator>denney</dc:creator>

      <pubDate>Wed, 26 Apr 2006 12:54:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2696/menu.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2696/menu.diff/1146056085000000</guid>
      <description>&lt;p&gt;
Patch to fix the problem.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2696 (add_menu_page doesn't respect "access level".) created</title>
      
        <dc:creator>denney</dc:creator>

      <pubDate>Wed, 26 Apr 2006 12:38:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2696</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2696/1146055089000000</guid>
      <description>&lt;p&gt;
I'm having the problem of my plugin toplevel menu being displayed regardless of the users access level.
&lt;/p&gt;
&lt;p&gt;
I have the access level set to 10 in the "add_menu_page()" call but logging in as a standard subscriber still displays the menu and clicking on it shows the content of the menu item.
&lt;/p&gt;
&lt;p&gt;
Any submenu's of the new toplevel menu aren't being displayed which is correct but to me, not even the menu should be displayed.
&lt;/p&gt;
&lt;p&gt;
My function call is as follows:
&lt;/p&gt;
&lt;p&gt;
"add_menu_page('Kavelier', 'Kavelier', 10, &lt;span class="underline"&gt;FILE&lt;/span&gt;, 'kav_plugin_options');"
&lt;/p&gt;
&lt;p&gt;
This is using revision 3751.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #2387 (Caching makes activate/deactivate plugin hooks unusable) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 26 Apr 2006 07:34:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2387</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2387/1146036866000000</guid>
      <description>&lt;p&gt;
Can we be sure that the shutdown func is always called on exit for all supported php types?
&lt;/p&gt;
&lt;p&gt;
Afterall calling &lt;a class="ext-link" href="http://uk.php.net/manual/en/function.register-shutdown-function.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;exit itself within a shutdown func&lt;/a&gt; will stop all the others from running.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2531 (Functions for registering additional capabilities and getting a list ...) updated</title>
      
        <dc:creator>ringmaster</dc:creator>

      <pubDate>Wed, 26 Apr 2006 04:04:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2531</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2531/1146024261000000</guid>
      <description>&lt;p&gt;
What we have now is pretty simple.  I'm not sure how current_user_can('do_something') can be much more clear.  In what way are you suggesting that it's not simple?  Nevermind that most ACL systems work just like WP roles and capabilities, so the knowledge of the workings of similar systems ports to WordPress.
&lt;/p&gt;
&lt;p&gt;
What is currently lacking in the core is a good way to let users manually set capabilities as required by plugins.  Also, features to allow access to plugins for setting these capabilities are not as apparent as they might be.  Remember though, the capabilities system was designed and implemented knowing that none of those things would exist in that release.  We should now address those issues.
&lt;/p&gt;
&lt;p&gt;
There are several plugins that were not written by core hackers that make use of the caps system.  I'm not sure what would give the impression that the caps system is a barrier to developers.
&lt;/p&gt;
&lt;p&gt;
The proposed 1-6 system seems less understandable than the caps system.  How do you permit a single user access to something that is typically not permitted to users of their assigned role?  How does the number mean anything to what functions you are allowed to access?  The inability to answer this question is the exact reason why we ditched the userlevel nonsense in the first place.
&lt;/p&gt;
&lt;p&gt;
WordPress is not WordPress MU.  If the capabilities system is incompatible with MU (it isn't), then perhaps MU devs should consider using something that works better for them.  Providing for discrete capabilities for WordPress when used as a CMS is something that we would be remiss to remove just to gain speed improvements in some other projects, which would likely not be used as a CMS.
&lt;/p&gt;
&lt;p&gt;
This is the first complaint I've heard about the capabilities system other than from folks who were used to having arbitrarily defined hierarchical levels, and I'm shocked.  I'm curious what code you've attempted to write with permissions that has been so difficult that would lead you to this severely regressive suggestion.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2695 (dbdelta duplicates indices instead of overwriting them.) created</title>
      
        <dc:creator>majelbstoat</dc:creator>

      <pubDate>Wed, 26 Apr 2006 03:47:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2695</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2695/1146023262000000</guid>
      <description>&lt;p&gt;
When using dbdelta to upgrade a plugin's tables, any UNIQUE keys on that table are duplicated, because they are added without being removed first.  This seems to occur when the table structure is changed in some way, even when the SQL is identical to that outputted by phpMyAdmin.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://comox.textdrive.com/pipermail/wp-hackers/2006-April/006046.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://comox.textdrive.com/pipermail/wp-hackers/2006-April/006046.html&lt;/a&gt; for the original discussion.
&lt;/p&gt;
&lt;p&gt;
I also had a problem where dbdelta tries to duplicate multiple primary keys as well.  I'll do some more testing on this and see if I can narrow down the cause.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #2694 (search query variable could use some filtering) created</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 26 Apr 2006 02:47:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2694</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2694/1146019674000000</guid>
      <description>&lt;p&gt;
At the moment, you can search for:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;a href=http://www.spammer.com&amp;gt;keyword&amp;lt;/a&amp;gt;
&lt;/pre&gt;&lt;p&gt;
And the html goes in and out of the search query.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #2531 (Functions for registering additional capabilities and getting a list ...) updated</title>
      
        <dc:creator>matt</dc:creator>

      <pubDate>Wed, 26 Apr 2006 00:54:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2531</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2531/1146012849000000</guid>
      <description>&lt;p&gt;
I think caps should move out of the DB entirely. At the end of the day, we basically have a boolean value for a number of different actions. Plugins should be able to create and check against a darn boolean value without modifying the DB. Defaults should be hardcoded into vars.php and plugins can modify them at will. Right now the system is far more complex than it needs to be, and it's extremely challenging to grasp. (The lack of documentation doesn't help either, but if the system was clearer it wouldn't need documentation, so I see that as a symptom not a cause.)
&lt;/p&gt;
&lt;p&gt;
I think the fact that no one but extremely core hackers have even attempted to put anything on top of roles/caps speaks to that fact.
&lt;/p&gt;
&lt;p&gt;
What if...
&lt;/p&gt;
&lt;p&gt;
We had an indexed array of roles in a file in WP. Roles 0-6, which match the roles we currently have.
&lt;/p&gt;
&lt;p&gt;
Each of these roles statically maps in an array by role_id to a set of caps.
&lt;/p&gt;
&lt;p&gt;
Roles and caps both pass through filters, so plugins can edit current ones or add new ones at runtime. This would match how we allow plugins to modify similar systems throughout the rest of WP.
&lt;/p&gt;
&lt;p&gt;
The role_id is stored in usermeta, but only in the key. If I'm Administrator (role_id = 6) I have a usermeta row which looks like: user_id 1, meta_key role_6, value $table_prefix.
&lt;/p&gt;
&lt;p&gt;
For MU for a fast way to get all the users of a blog, set a meta_key = $table_prefix and meta_value = 1, which is set if someone is attached to a blog. Again, this would be a key lookup.
&lt;/p&gt;
&lt;p&gt;
This would allow indexed lookups of people in different roles (scanning values is a full table scan) and we already have usermeta set for users so we could just check the user object, making everything ultra-fast as well.
&lt;/p&gt;
&lt;p&gt;
I'm just throwing this out there, it might not be the best system but I'm sure between us we can think of something infinitely simpler than what we have now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>