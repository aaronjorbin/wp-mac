<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>29954.patch attached to Ticket #29954</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 13 Oct 2014 23:55:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29954/29954.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29954/29954.patch/1413244557207010</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21506 (Standard Theme Hooks) updated</title>
      
        <dc:creator>ryno267</dc:creator>

      <pubDate>Mon, 13 Oct 2014 23:53:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21506#comment:80</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21506#comment:80/1413244406336479</guid>
      <description>&lt;p&gt;
Jumping in... still need to drop in, say, Google Tag Manager code immediately after the opening &amp;lt;body&amp;gt; tag.
Seems that even in older themes, having a get_header_after wouldn't solve the problem as tons of themes still have header and nav code after the &amp;lt;body&amp;gt; tag in header.php.
&lt;/p&gt;
&lt;p&gt;
The 'wp_body_top' up in  &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21506#comment:59" title="Comment 59"&gt;chipbennett&lt;/a&gt; patch sounds like that would work however.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29954 (Improve calculation of the caret position in editor-expand) created</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 13 Oct 2014 23:50:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29954</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29954/1413244211313176</guid>
      <description>&lt;p&gt;
Currently we use &lt;code&gt;node.getBoundingClientRect()&lt;/code&gt; to get the approximate position of the caret in TinyMCE. This works well except it gets the position of the parent block. We should use &lt;code&gt;range.getClientRects()&lt;/code&gt; when available to get the exact position of the caret.
&lt;/p&gt;
&lt;p&gt;
This will fix scrolling into view when the current block element is taller than the visible part of the editor.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29908 (date_query inclusive logic still not quite right) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 13 Oct 2014 23:31:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29908#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29908#comment:8/1413243098076907</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29908#comment:5" title="Comment 5"&gt;boonebgorges&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The real challenge here is figuring out what date formats to accept. &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/29908/29908.patch" title="Attachment '29908.patch' in Ticket #29908"&gt;29908.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/29908/29908.patch" title="Download"&gt;â€‹&lt;/a&gt; adds inclusive support for &lt;code&gt;Y&lt;/code&gt;, &lt;code&gt;Y-m&lt;/code&gt;, &lt;code&gt;Y-m-d&lt;/code&gt;, &lt;code&gt;Y-m-d H:i&lt;/code&gt;, and &lt;code&gt;Y-m-d H:i:s&lt;/code&gt;, as well as the same formats with &lt;code&gt;/&lt;/code&gt; instead of &lt;code&gt;-&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'd question the inclusion of &lt;code&gt;/&lt;/code&gt; personally, It's not a date format used within code very often (IMHO) and could increase confusion of it supporting &lt;code&gt;Y/d/m&lt;/code&gt;. Is there any harm in only supporting the standard &lt;code&gt;Y-m-d H:i:s&lt;/code&gt; (or part of) mysql format?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29950 (Open_basedir issue Plugin installer modal) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 13 Oct 2014 22:51:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29950#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29950#comment:1/1413240695583915</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi!,
&lt;/p&gt;
&lt;p&gt;
As far as I can tell, this is most likely being caused by a plugin, can you reproduce it with all plugins disabled, or on a fresh separate WordPress install on the same server?
&lt;/p&gt;
&lt;p&gt;
Perhaps further clarification is needed, are you seeing this on the import page, or when using a specific importer? Do you have any of the importers already installed?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12668 (Better support for custom comment types) updated</title>
      
        <dc:creator>mordauk</dc:creator>

      <pubDate>Mon, 13 Oct 2014 22:29:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12668#comment:52</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12668#comment:52/1413239394536029</guid>
      <description>&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/attachment/ticket/12668/12668-comments-query.patch"&gt;12668-comments-query.patch&lt;/a&gt; is an updated version of patch-1,2, and 3 that properly accounts for the fact that default comments don't have an explicit comment type.
&lt;/p&gt;
&lt;p&gt;
I also went ahead and separated each modified file into separate patches. Not sure if that makes it easier or more difficult to review :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>12668-comments-query.patch attached to Ticket #12668</title>
      
        <dc:creator>mordauk</dc:creator>

      <pubDate>Mon, 13 Oct 2014 22:28:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12668/12668-comments-query.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12668/12668-comments-query.patch/1413239310756524</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>12668-comments-list-table.patch attached to Ticket #12668</title>
      
        <dc:creator>mordauk</dc:creator>

      <pubDate>Mon, 13 Oct 2014 22:23:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12668/12668-comments-list-table.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12668/12668-comments-list-table.patch/1413239031041687</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12668 (Better support for custom comment types) updated</title>
      
        <dc:creator>mordauk</dc:creator>

      <pubDate>Mon, 13 Oct 2014 22:21:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12668#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12668#comment:51/1413238893954175</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/attachment/ticket/12668/12668-dashboard.patch"&gt;12668-dashboard.patch&lt;/a&gt; makes the recent comments widget on the dashboard display default types only.
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/attachment/ticket/12668/12668-widgets.patch"&gt;12668-widgets.patch&lt;/a&gt; makes the Recent Comments widget display default types only.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>12668-widgets.patch attached to Ticket #12668</title>
      
        <dc:creator>mordauk</dc:creator>

      <pubDate>Mon, 13 Oct 2014 22:20:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12668/12668-widgets.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12668/12668-widgets.patch/1413238843400356</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>12668-dashboard.patch attached to Ticket #12668</title>
      
        <dc:creator>mordauk</dc:creator>

      <pubDate>Mon, 13 Oct 2014 22:20:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12668/12668-dashboard.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12668/12668-dashboard.patch/1413238834619153</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>12668-3.patch attached to Ticket #12668</title>
      
        <dc:creator>mordauk</dc:creator>

      <pubDate>Mon, 13 Oct 2014 22:15:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12668/12668-3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12668/12668-3.patch/1413238517450405</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12668 (Better support for custom comment types) updated</title>
      
        <dc:creator>mordauk</dc:creator>

      <pubDate>Mon, 13 Oct 2014 22:05:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12668#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12668#comment:50/1413237945491116</guid>
      <description>&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/attachment/ticket/12668/12668-2.patch"&gt;12668-2.patch&lt;/a&gt; is a first pass at adding some preliminary support. It has two changes:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Adds a &lt;code&gt;$comment_type&lt;/code&gt; parameter to &lt;code&gt;get_approved_comments()&lt;/code&gt; (an old function not really used any more but there for backwards compatibility).
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;Adds support for passing an array of comment types to &lt;code&gt;WP_Comment_Query&lt;/code&gt; instead of just a single type.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>12668-2.patch attached to Ticket #12668</title>
      
        <dc:creator>mordauk</dc:creator>

      <pubDate>Mon, 13 Oct 2014 22:03:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12668/12668-2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12668/12668-2.patch/1413237827848634</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29642 (Support complex (nested, multiple relation) queries in WP_Meta_Query) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 13 Oct 2014 22:02:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29642#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29642#comment:15/1413237739406784</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29887" title="Introduce support for nested queries in WP_Meta_Query.
Previously, ..."&gt;29887&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Introduce support for nested queries in WP_Meta_Query.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Previously, meta query arguments could be joined by a single AND or OR relation.&lt;br /&gt;
Now, these queries can be arbitrarily nested, allowing clauses to be linked&lt;br /&gt;
together with multiple relations.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Adds unit tests for the new nesting syntax. Modifies a few existing unit tests&lt;br /&gt;
that were overly specific for the old SQL syntax. Backward compatibility with&lt;br /&gt;
existing syntax is fully maintained.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props boonebgorges, DrewAPicture.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29642" title="#29642: enhancement: Support complex (nested, multiple relation) queries in WP_Meta_Query (closed: fixed)"&gt;#29642&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [29887]: Introduce support for nested queries in WP_Meta_Query.  Previously, ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 13 Oct 2014 22:02:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/29887</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/29887/1413237738493631</guid>
      <description>&lt;p&gt;
Introduce support for nested queries in WP_Meta_Query.
&lt;/p&gt;
&lt;p&gt;
Previously, meta query arguments could be joined by a single AND or OR relation.
Now, these queries can be arbitrarily nested, allowing clauses to be linked
together with multiple relations.
&lt;/p&gt;
&lt;p&gt;
Adds unit tests for the new nesting syntax. Modifies a few existing unit tests
that were overly specific for the old SQL syntax. Backward compatibility with
existing syntax is fully maintained.
&lt;/p&gt;
&lt;p&gt;
Props boonebgorges, DrewAPicture.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29642" title="#29642: enhancement: Support complex (nested, multiple relation) queries in WP_Meta_Query (closed: fixed)"&gt;#29642&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>12668.patch attached to Ticket #12668</title>
      
        <dc:creator>mordauk</dc:creator>

      <pubDate>Mon, 13 Oct 2014 21:55:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12668/12668.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12668/12668.patch/1413237303502873</guid>
      <description>&lt;p&gt;
Add comment_type support to get_approved_comments()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #24940 (wp_link_pages() adds separator before pagination links) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Mon, 13 Oct 2014 21:49:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24940#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24940#comment:9/1413236975450310</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I obviously tested it with the wrong theme. Thanks for your feedback!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12668 (Better support for custom comment types) updated</title>
      
        <dc:creator>norcross</dc:creator>

      <pubDate>Mon, 13 Oct 2014 21:36:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12668#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12668#comment:49/1413236178447859</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12668#comment:48" title="Comment 48"&gt;mordauk&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It would make sense to me if WP core only ever displayed pingbacks, tracbacks, and default comments, then plugins can handle the rest of the display for custom types.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
agree 100%. sorry I wasn't clear on that, I just wanted to show another instance of comments being used outside of the vanilla "blog post comments" model.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24940 (wp_link_pages() adds separator before pagination links) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 13 Oct 2014 21:34:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24940#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24940#comment:8/1413236061496195</guid>
      <description>&lt;p&gt;
The issue is that themes rely on that initial separator. With the patch, there's no space between "Pages:" and the first number in both &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/24940/24940.twentyten.png" title="Attachment '24940.twentyten.png' in Ticket #24940"&gt;Twenty Ten&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/24940/24940.twentyten.png" title="Download"&gt;â€‹&lt;/a&gt; and &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/24940/24940.twentytwelve.png" title="Attachment '24940.twentytwelve.png' in Ticket #24940"&gt;Twenty Twelve&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/24940/24940.twentytwelve.png" title="Download"&gt;â€‹&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
If two of our bundled themes rely on it, I guess there are much more in the repository that do the same.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>24940.twentytwelve.png attached to Ticket #24940</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 13 Oct 2014 21:33:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/24940/24940.twentytwelve.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/24940/24940.twentytwelve.png/1413236018776773</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>24940.twentyten.png attached to Ticket #24940</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 13 Oct 2014 21:33:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/24940/24940.twentyten.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/24940/24940.twentyten.png/1413236010233102</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12668 (Better support for custom comment types) updated</title>
      
        <dc:creator>mordauk</dc:creator>

      <pubDate>Mon, 13 Oct 2014 21:33:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12668#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12668#comment:48/1413236004528872</guid>
      <description>&lt;p&gt;
It would make sense to me if WP core only ever displayed pingbacks, tracbacks, and default comments, then plugins can handle the rest of the display for custom types.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12668 (Better support for custom comment types) updated</title>
      
        <dc:creator>norcross</dc:creator>

      <pubDate>Mon, 13 Oct 2014 21:31:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12668#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12668#comment:47/1413235880381745</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12668#comment:46" title="Comment 46"&gt;mordauk&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'll work with you on it @dancameron
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
FWIW I also have a real-world example of this in use right now. A site uses a CPT for companies in a particular business sector, and I used comments to handle user-driven reviews. the &lt;code&gt;comment_type&lt;/code&gt; was set to &lt;code&gt;review&lt;/code&gt; and works as expected, however, takes a lot of mashing and workarounds as @mordauk has outlined above to get any sort of aggregate data.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12668 (Better support for custom comment types) updated</title>
      
        <dc:creator>mordauk</dc:creator>

      <pubDate>Mon, 13 Oct 2014 21:28:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12668#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12668#comment:46/1413235696133634</guid>
      <description>&lt;p&gt;
I'll work with you on it @dancameron
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12668 (Better support for custom comment types) updated</title>
      
        <dc:creator>dancameron</dc:creator>

      <pubDate>Mon, 13 Oct 2014 21:25:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12668#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12668#comment:45/1413235557327491</guid>
      <description>&lt;p&gt;
If a real world example of using comments outside of e-commerce and in a traditional post &lt;em&gt;comment&lt;/em&gt; scope is necessary:
&lt;/p&gt;
&lt;p&gt;
I'm in a situation were I'd like to have clients comment on a document (CPT). My users (of my plugin) won't necessarily require that these &lt;em&gt;comments&lt;/em&gt; be filtered from the management screen but I'd expect it to be a support and UX issue because WordPress doesn't allow for the comments to be distinguished by there type, let alone a custom status. Instead I'd like to handle management on my own gracefully, with the help of a WP API to filter these comments from the default comments admin, then build my own comment management UI within the CPT edit screen  (or some other mngt screen that I develop). ATM this isn't supported, as many have already address, and IMO I'm using comments within a traditional sense.
&lt;/p&gt;
&lt;p&gt;
â€”
&lt;/p&gt;
&lt;p&gt;
I'm interested in working with someone (or a group) to get a patch going on this. I'm not a fan of developing a patch before it's clear that the contribution will be accepted but at this point I think a patch would be more productive and put more weight behind our attempts to validate the improvement to core. I agree that a two phase approach would be best where phase one includes the filtering out of CCTs and the ability to set a custom comment status).
&lt;/p&gt;
&lt;p&gt;
As far as approach for custom comment statuses, I think @nacin was right to associate &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10856" title="#10856: enhancement: Move unessential comment fields to the comment meta table (closed: maybelater)"&gt;#10856&lt;/a&gt; to this issue since the current comment status column is "comment_approved" and creating a true comment status implementation would be warranted (aside from this enhancement).
&lt;/p&gt;
&lt;p&gt;
Hope this helps!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29806 (Focus (continued)) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 13 Oct 2014 21:24:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29806#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29806#comment:48/1413235485958967</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29806#comment:17" title="Comment 17"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29835" title="Pin the admin menu on scrolling similarly to how the side metaboxes ..."&gt;[29835]&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Pin the admin menu on scrolling similarly to how the side metaboxes are pinned on the Edit Post screen, first run.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Looks like the pinned admin menu works fine on hover
&lt;a style="padding:0; border:none" href="https://cldup.com/0dWY7xn5fF.png"&gt;&lt;img src="https://cldup.com/0dWY7xn5fF.png" alt="https://cldup.com/0dWY7xn5fF.png" crossorigin="anonymous" title="https://cldup.com/0dWY7xn5fF.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
but not so fine on focus (notice focus is on the "Permalinks" settings link):
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/8l0q-brPVP.png"&gt;&lt;img src="https://cldup.com/8l0q-brPVP.png" alt="https://cldup.com/8l0q-brPVP.png" crossorigin="anonymous" title="https://cldup.com/8l0q-brPVP.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
When shrinking/resizing the browser window height, it gets a little crazy:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/WtTSPl3BUt.png"&gt;&lt;img src="https://cldup.com/WtTSPl3BUt.png" alt="https://cldup.com/WtTSPl3BUt.png" crossorigin="anonymous" title="https://cldup.com/WtTSPl3BUt.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29952 (When editor-expand is active and the window is resized, the end of a ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 13 Oct 2014 21:16:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29952#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29952#comment:2/1413234970853710</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29886" title="Editor-expand: reset the editor height after the window is resized. ..."&gt;[29886]&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Editor-expand: reset the editor height after the window is resized. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29952" title="#29952: defect (bug): When editor-expand is active and the window is resized, the end of a ... (closed: fixed)"&gt;#29952&lt;/a&gt; for trunk.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24940 (wp_link_pages() adds separator before pagination links) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Mon, 13 Oct 2014 21:15:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24940#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24940#comment:7/1413234902153806</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by obenland. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-10-13&amp;amp;sort=asc#m939505"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [29886]: Editor-expand: reset the editor height after the window is resized. ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 13 Oct 2014 21:14:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/29886</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/29886/1413234890178337</guid>
      <description>&lt;p&gt;
Editor-expand: reset the editor height after the window is resized. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29952" title="#29952: defect (bug): When editor-expand is active and the window is resized, the end of a ... (closed: fixed)"&gt;#29952&lt;/a&gt; for trunk.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #29952 (When editor-expand is active and the window is resized, the end of a ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 13 Oct 2014 21:11:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29952#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29952#comment:1/1413234697312093</guid>
      <description>&lt;p&gt;
Running another &lt;code&gt;editor.execCommand( 'wpAutoResize' );&lt;/code&gt; after resizing fixes it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29952 (When editor-expand is active and the window is resized, the end of a ...) created</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 13 Oct 2014 21:10:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29952</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29952/1413234608992103</guid>
      <description>&lt;p&gt;
Can happen when the window is resized so that the editor body is narrower than the max-width set by the theme.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29951 (Document wp.media.view.EditorUploader) updated</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Mon, 13 Oct 2014 21:07:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29951#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29951#comment:1/1413234449636225</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>29951.diff attached to Ticket #29951</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Mon, 13 Oct 2014 21:07:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29951/29951.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29951/29951.diff/1413234437821104</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29951 (Document wp.media.view.EditorUploader) created</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Mon, 13 Oct 2014 21:06:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29951</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29951/1413234414412128</guid>
      <description>&lt;p&gt;
See diff
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29062 (WP_Meta_Query with NOT EXISTS fails during multiple conditions) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 13 Oct 2014 21:06:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29062#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29062#comment:2/1413234400777416</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;blockquote&gt;
&lt;p&gt;
I think whenever a NOT EXISTS statement exists, all joins should be LEFT
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think this is probably right. Somewhat related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29447" title="#29447: enhancement: Multiple options for 'orderby' =&amp;gt;  'meta_value_num' or making it optional (closed: duplicate)"&gt;#29447&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>29642.6.patch attached to Ticket #29642</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Mon, 13 Oct 2014 21:01:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29642/29642.6.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29642/29642.6.patch/1413234114271330</guid>
      <description>&lt;p&gt;
docs typo
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29644 (query_posts doesn't support -1 value for posts_per_page if argument is ...) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 13 Oct 2014 20:59:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29644#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29644#comment:6/1413233994469241</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Can we get some more detailed instructions on how to reproduce? I'm having a hard time replicating the issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29642 (Support complex (nested, multiple relation) queries in WP_Meta_Query) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Mon, 13 Oct 2014 20:58:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29642#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29642#comment:14/1413233906948907</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>29642.5.patch attached to Ticket #29642</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Mon, 13 Oct 2014 20:57:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29642/29642.5.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29642/29642.5.patch/1413233857097025</guid>
      <description>&lt;p&gt;
Docs adjustments
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29642 (Support complex (nested, multiple relation) queries in WP_Meta_Query) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Mon, 13 Oct 2014 20:55:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29642#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29642#comment:13/1413233751213251</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/29642/29642.5.patch" title="Attachment '29642.5.patch' in Ticket #29642"&gt;29642.5.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/29642/29642.5.patch" title="Download"&gt;â€‹&lt;/a&gt; makes some adjustments to the inline docs in various places. Notable changes include:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Replacing the piped accepted values with a comma-delimited list
&lt;/li&gt;&lt;li&gt;Removed the large block of explanatory text from the class block in favor of including that information directly in the reference article
&lt;/li&gt;&lt;li&gt;Add missing &lt;code&gt;@since&lt;/code&gt; tags for new functionality and properties
&lt;/li&gt;&lt;li&gt;Add hash descriptions to array return blocks
&lt;/li&gt;&lt;li&gt;Other minor tweaks.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12668 (Better support for custom comment types) updated</title>
      
        <dc:creator>mordauk</dc:creator>

      <pubDate>Mon, 13 Oct 2014 20:29:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12668#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12668#comment:44/1413232177135905</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12668#comment:43" title="Comment 43"&gt;mark-k&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I fail to see any real disagreement. If it works for WC and EDD to store logs as comments then why should anyone object, but the more interesting aspects of having actual different comment types is by supporting also questions, answers, reviews, likes/dislikes, etc... mixed for the same content.
For example there might be a post type of "test" used to publish online test. You might be able to ask a question to clarify the test, submit an answer, and after the test is over review or comment on it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think that's a perfect example of where custom comment types would be useful :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12668 (Better support for custom comment types) updated</title>
      
        <dc:creator>mark-k</dc:creator>

      <pubDate>Mon, 13 Oct 2014 20:26:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12668#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12668#comment:43/1413231969550529</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12668#comment:41" title="Comment 41"&gt;judgej&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
the easiest way to achieve that is not to call "comments" things which are not comments.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Quite often they *are* comments, just not specifically "user comments on blog posts". Status changes on a shop order are logically comments on that shop order, a copy of which may be emailed to customer, or may be kept for administrator reference only. Some of those comments may be visible to the customer (but not any other customer) and some may not be.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I took a look now at what EDD does. AFAICT all you can do is create a note and delete it. This is more of a log then a collection of comments.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Now, if the official line from WP were that "comments" are ONLY "public user-provided comments on just the "post" post type", then fine, we can see there is no scope to use it for anything else and can move on. But I think for now there is some disagreement on exactly what a comment is, so different developers expect to be able to use comments for a range of different purposes. So is there an official statement or documentation about the scope of "comments" beyond what we can see in the code? Should this FR start with an agreement on the scope first? It's been tossed around for five years now, so a different approach is needed to either move it forward, or release us hopefuls so we can create an alternative as a plugin.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I fail to see any real disagreement. If it works for WC and EDD to store logs as comments then why should anyone object, but the more interesting aspects of having actual different comment types is by supporting also questions, answers, reviews, likes/dislikes, etc... mixed for the same content.
For example there might be a post type of "test" used to publish online test. You might be able to ask a question to clarify the test, submit an answer, and after the test is over review or comment on it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28399 (Allow WP_Query to query by comment_count column of CPT/posts table) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 13 Oct 2014 20:21:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28399#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28399#comment:5/1413231708557665</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I this this is a pretty good idea. A couple of comments (no pun intended):
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Let's not add two new params ('comment' and 'comment_count'). This seems unnecessary and confusing to me. I suggest having one: 'comment_count'. You can pass an array of 'count' and 'compare', or you can pass it a number, which gets parsed into &lt;code&gt;array( 'count' =&amp;gt; $number, 'compare' =&amp;gt; '=' )&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;The unit tests look really comprehensive - thanks so much for that. Let's move them to &lt;code&gt;tests/phpunit/tests/query/commentCount.php&lt;/code&gt;, since this is a new feature for WP_Query.
&lt;/li&gt;&lt;li&gt;In the unit tests: no need to do &lt;code&gt;http_build_query()&lt;/code&gt; - just pass an array. No need to set dummy 'post_content' or 'post_type' on the factory posts - just use the defaults (&lt;code&gt;$p1 = $this-&amp;gt;factory-&amp;gt;post-&amp;gt;create()&lt;/code&gt;, with no arguments). Testing &lt;code&gt;found_posts&lt;/code&gt; is not precise enough - please get the found post IDs and use &lt;code&gt;assertEqualSets&lt;/code&gt; to compare with &lt;code&gt;$this-&amp;gt;q-&amp;gt;posts&lt;/code&gt;. I recommend using the following arguments for &lt;code&gt;WP_Query&lt;/code&gt;, to minimize overhead:
&lt;/li&gt;&lt;/ul&gt;&lt;pre class="wiki"&gt;$this-&amp;gt;q-&amp;gt;query( array(
    'fields' =&amp;gt; 'ids',
    'update_post_meta_cache' =&amp;gt; false,
    'update_post_term_cache' =&amp;gt; false,
    'comment_count' =&amp;gt; array(
        'count' =&amp;gt; 5,
        'compare' =&amp;gt; '&amp;gt;',
    ),
) );
$expected = array( $p1, $p2 );
$this-&amp;gt;assertEqualSets( $expected, $this-&amp;gt;q-&amp;gt;posts );
&lt;/pre&gt;&lt;p&gt;
The functionality itself looks pretty nice, so with some of these changes I think we can put this in. Thanks for the contribution!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15926 (Add alt attribute support for Custom Header functionality) updated</title>
      
        <dc:creator>sharonaustin</dc:creator>

      <pubDate>Mon, 13 Oct 2014 20:12:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15926#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15926#comment:44/1413231139770786</guid>
      <description>&lt;p&gt;
As I understand it then, there are "two" functions that require attention:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;The link
&lt;/li&gt;&lt;li&gt;The description
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Is it possible to handle the "link" component by adding aria-label in conjunction with handling the "description" by adding aria-describedby?
&lt;/p&gt;
&lt;p&gt;
e.g.  array('aria-label' =&amp;gt; "link to home" , 'aria-describedby' =&amp;gt; "$image-description" );
&lt;/p&gt;
&lt;p&gt;
Source I consulted on use of aria-label versus aria-labeledby: &lt;a class="ext-link" href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-label"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://www.w3.org/TR/wai-aria/states_and_properties#aria-label&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29950 (Open_basedir issue Plugin installer modal) created</title>
      
        <dc:creator>Allan Moraes</dc:creator>

      <pubDate>Mon, 13 Oct 2014 20:09:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29950</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29950/1413230941036632</guid>
      <description>&lt;p&gt;
Hi.
When I try to use the import option (Tools&amp;gt;Import) in Wordpress, this error occurs.
&lt;/p&gt;
&lt;pre class="wiki"&gt;PHP Warning:  realpath() [&amp;lt;a href='function.realpath'&amp;gt;function.realpath&amp;lt;/a&amp;gt;]: open_basedir restriction in effect. File(\\PROFILES.WORDPRESS.ORG\CHMARS) is not within the allowed path(s): (E:\Domains\domain.com) in E:\Domains\domain.com\wwwroot\testejorge\wp-includes\functions.php on line 1542
&lt;/pre&gt;&lt;p&gt;
In my server linux, it's works! But when I try in my Windows Server, IIS7.5 and PHP same version of linux server, i have this error. The windows server and linux server have the same php.ini. Older versions of Wordpress, work.
&lt;/p&gt;
&lt;p&gt;
Sorry my english.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>29736.patch attached to Ticket #29736</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 13 Oct 2014 19:57:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29736/29736.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29736/29736.patch/1413230253634919</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29736 (Proposal to check for is_scalar() in WP_Query::fill_query_vars()) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 13 Oct 2014 19:56:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29736#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29736#comment:2/1413230207866543</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Yes, the change looks good. &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/29736/29736.patch" title="Attachment '29736.patch' in Ticket #29736"&gt;29736.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/29736/29736.patch" title="Download"&gt;â€‹&lt;/a&gt; makes it more concise and adds unit tests.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote&gt;
&lt;p&gt;
Of course, isset or ! empty should be checked before is_scalar,
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This shouldn't be necessary. By the time we've gotten to this point in &lt;code&gt;parse_query()&lt;/code&gt;, the query vars have either been run through &lt;code&gt;fill_query_vars()&lt;/code&gt;, which guarantees that 's' will be &lt;code&gt;isset()&lt;/code&gt;. An equivalent &lt;code&gt;! empty()&lt;/code&gt; check is done later on: &lt;a href="https://core.trac.wordpress.org/browser/tags/4.0/src/wp-includes/query.php#L2655"&gt;https://core.trac.wordpress.org/browser/tags/4.0/src/wp-includes/query.php#L2655&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23225 (Customizer is Incompatible with jQuery UI Tabs.) updated</title>
      
        <dc:creator>deltafactory</dc:creator>

      <pubDate>Mon, 13 Oct 2014 19:47:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23225#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23225#comment:26/1413229653317144</guid>
      <description>&lt;p&gt;
It's not the most elegant solution but I think it fixes more than it breaks. To your point, as I said once upon a time in comment &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23225#comment:19" title="Comment 19"&gt;19&lt;/a&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I believe it will break regular hash URLs, though no more than the initial use of the &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; tag.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Until such time as the Customizer &lt;code&gt;iframe&lt;/code&gt; implementation is replaced, it seems like there are a number of issues that can't be fixed.
&lt;/p&gt;
&lt;p&gt;
Since the ticket was marked &lt;code&gt;has-patch&lt;/code&gt;, &lt;code&gt;needs-testing&lt;/code&gt; with some positive feedback, I'd be happy to receive feedback on failed tests in lieu of a reimplementation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29552 (Slight tweak to no_found_rows logic in WP_Query) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 13 Oct 2014 19:32:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29552#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29552#comment:1/1413228739586895</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the patch, dmchale.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It seems that edge cases could introduce times when a query WOULD have limits but NOT want them (when the query was passed nopaging=true or post_per_page=-1)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I can't reproduce this. Check out the last two tests in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/29552/29552.tests.patch" title="Attachment '29552.tests.patch' in Ticket #29552"&gt;29552.tests.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/29552/29552.tests.patch" title="Download"&gt;â€‹&lt;/a&gt;. They declare &lt;code&gt;nopaging=true&lt;/code&gt; and &lt;code&gt;posts_per_page=-1&lt;/code&gt;, and in each case, you can see that the request query does *not* contain &lt;code&gt;SQL_CALC_FOUND_ROWS&lt;/code&gt;. When you have &lt;code&gt;LIMIT&lt;/code&gt; clauses, WP_Query does not append the SQL_CALC_FOUND_ROWS keyword. See &lt;a href="https://core.trac.wordpress.org/browser/tags/4.0/src/wp-includes/query.php?annotate=blame#L3376"&gt;https://core.trac.wordpress.org/browser/tags/4.0/src/wp-includes/query.php?annotate=blame#L3376&lt;/a&gt;. See also &lt;a href="https://core.trac.wordpress.org/browser/tags/4.0/src/wp-includes/query.php?annotate=blame#L3611"&gt;https://core.trac.wordpress.org/browser/tags/4.0/src/wp-includes/query.php?annotate=blame#L3611&lt;/a&gt; to see how &lt;code&gt;found_posts&lt;/code&gt; is set in these cases.
&lt;/p&gt;
&lt;p&gt;
Can you say more about your "edge cases"?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>29552.tests.patch attached to Ticket #29552</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 13 Oct 2014 19:25:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29552/29552.tests.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29552/29552.tests.patch/1413228351934558</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29949 (Customizer collapsed mode is barely usable) updated</title>
      
        <dc:creator>dancameron</dc:creator>

      <pubDate>Mon, 13 Oct 2014 19:22:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29949#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29949#comment:1/1413228126608297</guid>
      <description>&lt;p&gt;
Thanks Nick.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28784 (Improve the Customize experience on mobile) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 13 Oct 2014 19:18:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28784#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28784#comment:13/1413227881852186</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've moved @dancameron's work to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29949" title="#29949: enhancement: Customizer collapsed mode is barely usable (closed: maybelater)"&gt;#29949&lt;/a&gt;, and converted the relevant part of his plugin code into a patch. That should be able to get into 4.1 without issues, and will make the mobile stuff a bit easier to implement. The collapsed view with icons is not displayed before 600px width in the patch there.
&lt;/p&gt;
&lt;p&gt;
While the two-mode mobile approach is essentially what some of the earlier concepts posted on this ticket do, it needs refinement and a patch, so I'm going to move this off of 4.1 for now. With a patch within the next week or so, it could probably be back in 4.1.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28504 (Icons for Customizer Sections) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 13 Oct 2014 19:16:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28504#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28504#comment:14/1413227795215964</guid>
      <description>&lt;p&gt;
This is now a dependency for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29949" title="#29949: enhancement: Customizer collapsed mode is barely usable (closed: maybelater)"&gt;#29949&lt;/a&gt;, which leverages the icons in a re-designed collapsed mode for the Customizer, and is a huge UI improvement there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>29949.diff attached to Ticket #29949</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 13 Oct 2014 19:13:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29949/29949.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29949/29949.diff/1413227589116105</guid>
      <description>&lt;p&gt;
Better collapsed mode for the Customizer. Requires 28504.2.diff, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28504" title="#28504: enhancement: Icons for Customizer Sections (closed: maybelater)"&gt;#28504&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23225 (Customizer is Incompatible with jQuery UI Tabs.) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 13 Oct 2014 19:11:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23225#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23225#comment:25/1413227506260049</guid>
      <description>&lt;p&gt;
Humm, then I'm not sure patching Core to supply a &lt;code&gt;wp-admin&lt;/code&gt; URL as the base URL for links inside the preview is desirable. It seems like this hack to fix one script's problem could cause unintended side-effects elsewhere in other scripts.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29949 (Customizer collapsed mode is barely usable) created</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 13 Oct 2014 19:10:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29949</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29949/1413227454971853</guid>
      <description>&lt;p&gt;
When we were working on improving the Customization experience on mobile (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28784" title="#28784: task (blessed): Improve the Customize experience on mobile (closed: fixed)"&gt;#28784&lt;/a&gt;), @dancameron proposed displaying top-level section icons in the collapsed/preview mode for quicker access from that mode. We ended up going in a different direction with mobile, but his proposal remains a significant improvement for larger-screen users, where the Customizer's "collapsed" mode is barely usable. Once the customizer is collapsed, it can be nearly impossible to locate the tiny icon to expand it, and it is hard to tell that you're still in the Customizer. This mode is important, especially as we begin to emphasize the ability to navigate around on the site within the Customizer more.
&lt;/p&gt;
&lt;p&gt;
I've converted Dan's &lt;a class="ext-link" href="https://github.com/dancameron/mobile-customizer/tree/master"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;plugin&lt;/a&gt; (done that way for easier iteration, testing, and collaboration) to a core patch and ironed out the remaining bugs. Once &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28504" title="#28504: enhancement: Icons for Customizer Sections (closed: maybelater)"&gt;#28504&lt;/a&gt; is in, this is ready to go (shouldn't need a refresh after that).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #20717 (Filter For Requiring Post Password) updated</title>
      
        <dc:creator>McGuive7</dc:creator>

      <pubDate>Mon, 13 Oct 2014 18:59:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20717#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20717#comment:3/1413226748332307</guid>
      <description>&lt;p&gt;
Any update on this making it into core? I could use this too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23225 (Customizer is Incompatible with jQuery UI Tabs.) updated</title>
      
        <dc:creator>deltafactory</dc:creator>

      <pubDate>Mon, 13 Oct 2014 18:57:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23225#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23225#comment:24/1413226670759279</guid>
      <description>&lt;p&gt;
Based on jQuery UI's &lt;code&gt;isLocal()&lt;/code&gt; declaration, now refactored to &lt;code&gt;_isLocal()&lt;/code&gt; here: &lt;a class="ext-link" href="https://github.com/jquery/jquery-ui/blob/master/ui/tabs.js#L45"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/jquery/jquery-ui/blob/master/ui/tabs.js#L45&lt;/a&gt; ... they define a local URL as one that is the same as location.href, up to the hash.
&lt;/p&gt;
&lt;p&gt;
It's this definition of local that is the root of the jQuery UI tab incompatibility and the resulting remote request causes the recursive glitches.
&lt;/p&gt;
&lt;p&gt;
To actually answer your question: yes. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29806 (Focus (continued)) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Mon, 13 Oct 2014 18:54:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29806#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29806#comment:47/1413226489528818</guid>
      <description>&lt;p&gt;
So can this? It can be toggled on and off. Yes, if it's on, it's not always faded, we do it automatically. I see this as an improvement to DFW, which is gentle enough that we can *consider* turning it on by default.
&lt;/p&gt;
&lt;p&gt;
I'm totally up for user tests! How can we make that happen?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29806 (Focus (continued)) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Mon, 13 Oct 2014 18:50:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29806#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29806#comment:46/1413226240150333</guid>
      <description>&lt;p&gt;
I like shiny features as much as the next person, but I think we need to consider whether this will actually improve the editing experience for 80% of the users. Doing user tests or showing user test data that this improves the experience would go a long way to convincing me and others that this serves a purpose other than consolidating one editing experience into another -- the former being something that's not the default editing experience in the first place.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29806 (Focus (continued)) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Mon, 13 Oct 2014 18:45:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29806#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29806#comment:45/1413225938970830</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29806#comment:44" title="Comment 44"&gt;avryl&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It's been said before that if the inclination is to disable a new feature by default, perhaps it's not worth the effort of adding that feature in the first place.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It's more about not setting it to "auto" by default. This is a replacement for DFW too, which is off by default.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
DFW itself is not disabled, it can be toggled on with all of the features that come along with it, so that's really not a fair comparison.
&lt;/p&gt;
&lt;p&gt;
This really comes down to decisions not options, IMO. Doing something "automatically" inherently implies that it will be enabled by default with an option to disable it. So if we're inclined to add the feature but disable its automatic-ness, then I question whether this is something we should be adding.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29948 (Use contextual controls (active_callback) API for ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 13 Oct 2014 18:45:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29948#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29948#comment:3/1413225924201877</guid>
      <description>&lt;p&gt;
That being said, it wouldn't be instant based on the current methods, so maybe that isn't the best approach. We may need an improved API for conditional controls that is all-js, but doesn't require as much custom code for individual controls implementing it themselves.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18548 (Add a better option for &lt;title&gt; tags) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Mon, 13 Oct 2014 18:42:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18548#comment:96</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18548#comment:96/1413225744168170</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Submitted a simplified patch that could serve as a v1 in lieu of a title tag builder in the admin.
&lt;/p&gt;
&lt;p&gt;
I agree with nacin that it shouldn't be for themes to decide what kind of separator to use or in what order to display the title bits, so in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/18548/18548.2.diff" title="Attachment '18548.2.diff' in Ticket #18548"&gt;18548.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/18548/18548.2.diff" title="Download"&gt;â€‹&lt;/a&gt; it doesn't accept an args array anymore.
&lt;/p&gt;
&lt;p&gt;
I'm hesitant to move in 4.1 without a mature patch, but it would be great if we could agree on a v1, get it in with 4.1, and promote its usage with Twenty Fifteen. Heck, it could even be as rudimentary as &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/18548/18548.3.diff" title="Attachment '18548.3.diff' in Ticket #18548"&gt;18548.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/18548/18548.3.diff" title="Download"&gt;â€‹&lt;/a&gt;, it would still give us the freedom to do what ever we want with the output at a later point in time.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29948 (Use contextual controls (active_callback) API for ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 13 Oct 2014 18:40:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29948#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29948#comment:2/1413225604072670</guid>
      <description>&lt;p&gt;
Yes, although I didn't look at it particularly closely. Maybe it makes more sense to keep it separate, but it seemed like it would be better to move it (and also to make those controls less tightly coupled with core, so that they can be understood as examples for themes and plugins).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>18548.3.diff attached to Ticket #18548</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Mon, 13 Oct 2014 18:39:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18548/18548.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18548/18548.3.diff/1413225554710514</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>24940.3.patch attached to Ticket #24940</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Mon, 13 Oct 2014 18:39:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/24940/24940.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/24940/24940.3.patch/1413225545648638</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29806 (Focus (continued)) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Mon, 13 Oct 2014 18:33:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29806#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29806#comment:44/1413225231236213</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
... but to be completely honest I feel there's too much movement as compared to the current implementation of DFW. At minimum everything should fade out in one fluid motion.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't think the current transition from the default editor to DFW is fluid. :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It's been said before that if the inclination is to disable a new feature by default, perhaps it's not worth the effort of adding that feature in the first place.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It's more about not setting it to "auto" by default. This is a replacement for DFW too, which is off by default.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27402 (Add aria-describedby to image gallery output) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Mon, 13 Oct 2014 18:33:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27402#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27402#comment:19/1413225187507346</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29806 (Focus (continued)) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Mon, 13 Oct 2014 18:28:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29806#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29806#comment:43/1413224881239602</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29806#comment:40" title="Comment 40"&gt;avryl&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Turning it off by default would make it much harder to discover than turning it off when it's on auto, imho.
&lt;/p&gt;
&lt;p&gt;
So you're okay with this as long as it's not on by default? I mean, you're not strongly opposing the idea in general (and as a replacement for DFW)?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It's been said before that if the inclination is to disable a new feature by default, perhaps it's not worth the effort of adding that feature in the first place. I think Scott (@wonderboymusic) raises a valid concern about a degraded experience in the editor should the fading be included.
&lt;/p&gt;
&lt;p&gt;
I tend to agree with that sentiment. I've never been a fan of the fading in DFW, and would not like to see it come to the default editor either.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23225 (Customizer is Incompatible with jQuery UI Tabs.) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 13 Oct 2014 18:27:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23225#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23225#comment:23/1413224823745305</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23225#comment:22" title="Comment 22"&gt;deltafactory&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The behavior you were seeing from document.location.href is "correct" (the source of the entire bug/dispute with jQuery UI) and directly related to the issue my patch resolved.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not sure I understand. So it was intended that &lt;code&gt;document.location.href&lt;/code&gt; should be &lt;code&gt;â€¦/wp-admin/customize.php&lt;/code&gt; and not the actual base URL for the URL being previewed?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>18548.2.diff attached to Ticket #18548</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Mon, 13 Oct 2014 18:25:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18548/18548.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18548/18548.2.diff/1413224750655382</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29948 (Use contextual controls (active_callback) API for ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 13 Oct 2014 18:24:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29948#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29948#comment:1/1413224666250060</guid>
      <description>&lt;p&gt;
You're referring to this code?
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;                &lt;span class="c1"&gt;// Control visibility for default controls
&lt;/span&gt;                &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;each&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
                        &lt;span class="s1"&gt;'background_image'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                                &lt;span class="nx"&gt;controls&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s1"&gt;'background_repeat'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'background_position_x'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'background_attachment'&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;
                                &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;!!&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
                        &lt;span class="p"&gt;},&lt;/span&gt;
                        &lt;span class="s1"&gt;'show_on_front'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                                &lt;span class="nx"&gt;controls&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s1"&gt;'page_on_front'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'page_for_posts'&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;
                                &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;'page'&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
                        &lt;span class="p"&gt;},&lt;/span&gt;
                        &lt;span class="s1"&gt;'header_textcolor'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                                &lt;span class="nx"&gt;controls&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s1"&gt;'header_textcolor'&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;
                                &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;'blank'&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;settingId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;o&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;settingId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;setting&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                                &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;each&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;controls&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;controlId&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                                        &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;control&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;controlId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;control&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                                                &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;visibility&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                                                        &lt;span class="nx"&gt;control&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                                                &lt;span class="p"&gt;};&lt;/span&gt;
                                                &lt;span class="nx"&gt;visibility&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;setting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                                                &lt;span class="nx"&gt;setting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;visibility&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                                        &lt;span class="p"&gt;});&lt;/span&gt;
                                &lt;span class="p"&gt;});&lt;/span&gt;
                        &lt;span class="p"&gt;});&lt;/span&gt;
                &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29948 (Use contextual controls (active_callback) API for ...) created</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 13 Oct 2014 18:18:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29948</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29948/1413224308413796</guid>
      <description>&lt;p&gt;
See &lt;code&gt;wp-admin/js/customize-controls.js&lt;/code&gt;, near the bottom. Rather than doing some unstructured JS to show/hide controls based on the values of other settings, this should use custom callbacks for the active_callback argument when adding the control (in php).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23225 (Customizer is Incompatible with jQuery UI Tabs.) updated</title>
      
        <dc:creator>deltafactory</dc:creator>

      <pubDate>Mon, 13 Oct 2014 18:18:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23225#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23225#comment:22/1413224297948841</guid>
      <description>&lt;p&gt;
The behavior you were seeing from document.location.href is "correct" (the source of the entire bug/dispute with jQuery UI) and directly related to the issue my patch resolved.
&lt;/p&gt;
&lt;p&gt;
I agree with your concerns about the use of &lt;code&gt;base&lt;/code&gt;, &lt;code&gt;document.write()&lt;/code&gt; etc. though I intentionally avoided using jQuery as a dependency for the same reason.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24940 (wp_link_pages() adds separator before pagination links) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Mon, 13 Oct 2014 18:10:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24940#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24940#comment:6/1413223838508265</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Tested and ready to go.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15926 (Add alt attribute support for Custom Header functionality) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Mon, 13 Oct 2014 17:55:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15926#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15926#comment:43/1413222903201590</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-ui by RianRietveld. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-ui&amp;amp;day=2014-10-13&amp;amp;sort=asc#m203622"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27402 (Add aria-describedby to image gallery output) updated</title>
      
        <dc:creator>rianrietveld</dc:creator>

      <pubDate>Mon, 13 Oct 2014 17:52:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27402#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27402#comment:18/1413222758719959</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27402 (Add aria-describedby to image gallery output) updated</title>
      
        <dc:creator>arush</dc:creator>

      <pubDate>Mon, 13 Oct 2014 17:50:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27402#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27402#comment:17/1413222615326402</guid>
      <description>&lt;p&gt;
Tested with Jaws, see comment above concerning screen reader expected behavior
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27402 (Add aria-describedby to image gallery output) updated</title>
      
        <dc:creator>arush</dc:creator>

      <pubDate>Mon, 13 Oct 2014 17:49:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27402#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27402#comment:16/1413222567938493</guid>
      <description>&lt;p&gt;
Tested with VoiceOver and it works.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23225 (Customizer is Incompatible with jQuery UI Tabs.) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 13 Oct 2014 17:44:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23225#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23225#comment:21/1413222247222917</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23225/class-wp-customize-manager.php.patch" title="Attachment 'class-wp-customize-manager.php.patch' in Ticket #23225"&gt;class-wp-customize-manager.php.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23225/class-wp-customize-manager.php.patch" title="Download"&gt;â€‹&lt;/a&gt;, I'm seeing that &lt;code&gt;document.location.href&lt;/code&gt; is not returning the URL of the Customizer preview even though a &lt;code&gt;base[href]&lt;/code&gt; is being set (e.g. I'm seeing &lt;code&gt;http://src.wordpress-develop.dev/wp-admin/customize.php&lt;/code&gt; instead of &lt;code&gt;http://src.wordpress-develop.dev/&lt;/code&gt;). This is probably due to the fact that the preview &lt;code&gt;iframe&lt;/code&gt; is getting populated dynamically via a&lt;code&gt;document.write()&lt;/code&gt; call and not by actually being navigated to, so the preview window is inheriting the parent window's &lt;code&gt;document.location.href&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
So It seems way for preview to determine its own URL is to instead look at the &lt;code&gt;base&lt;/code&gt; DOM element's &lt;code&gt;href&lt;/code&gt; property. In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23225/23225.2.patch" title="Attachment '23225.2.patch' in Ticket #23225"&gt;23225.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23225/23225.2.patch" title="Download"&gt;â€‹&lt;/a&gt; I've made this change. It's also now using jQuery to update the link &lt;code&gt;href&lt;/code&gt; attributes, and it is outputting a &lt;code&gt;base[href]&lt;/code&gt; containing the &lt;code&gt;REQUEST_URI&lt;/code&gt; not just the &lt;code&gt;home&lt;/code&gt;, to address your concern @helen.
&lt;/p&gt;
&lt;p&gt;
Nevertheless, the Customizer hasn't been taking into account that a theme may be outputting a &lt;code&gt;base&lt;/code&gt; element of its own. Also, if the Customizer preview dynamically adds new &lt;code&gt;#&lt;/code&gt; links they're not going to be rewritten to have the right &lt;code&gt;base&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Patches for this ticket are added to a PR on GitHub: &lt;a class="ext-link" href="https://github.com/xwpco/wordpress-develop/pull/30"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/xwpco/wordpress-develop/pull/30&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
As an aside, all of this leads me to think that the current method for populating the Customizer preview &lt;code&gt;iframe&lt;/code&gt; introduces fundamental limitations, and some things that just aren't going to work in the way it is currently designed. It would be better if we could use the &lt;code&gt;iframe&lt;/code&gt; in a more traditional way, setting the &lt;code&gt;src&lt;/code&gt; attribute to the URL being previewed (doing a GET request) and not doing &lt;code&gt;document.write()&lt;/code&gt; on an &lt;code&gt;about:blank&lt;/code&gt; iframe (writing the response to an Ajax &lt;code&gt;POST&lt;/code&gt;); this would require an alternative back-channel for passing the settings data to the preview.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27402 (Add aria-describedby to image gallery output) updated</title>
      
        <dc:creator>arush</dc:creator>

      <pubDate>Mon, 13 Oct 2014 17:42:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27402#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27402#comment:15/1413222141625594</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Expected behavior by screen reader users is that links are accessible in the tab order while captions are generally read using the arrow keys. Browsers are not passing the figcaption info correctly to the DOM yet, so this info isn't getting passed to screen readers. Nonetheless this is the correct way to use the standard and browsers/screen readers will catch up so I recommend this patch be passes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27402 (Add aria-describedby to image gallery output) updated</title>
      
        <dc:creator>bramd</dc:creator>

      <pubDate>Mon, 13 Oct 2014 17:40:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27402#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27402#comment:14/1413222052284083</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Tested with NVDA + Firefox, works fine. However, be aware most users will read the page line by line (e.g. in virtual mode) en miss the semantic relation.
We can't fix that and just have to wait until fig and figcaption improves in user agents and assistive tech.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23225.2.patch attached to Ticket #23225</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 13 Oct 2014 17:33:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23225/23225.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23225/23225.2.patch/1413221607854034</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/xwpco/wordpress-develop/commit/1c972d16bd3a50f6a64161bcbacc535447aaee74"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/xwpco/wordpress-develop/commit/1c972d16bd3a50f6a64161bcbacc535447aaee74&lt;/a&gt; &lt;a class="ext-link" href="https://github.com/xwpco/wordpress-develop/pull/30"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/xwpco/wordpress-develop/pull/30&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29689 (Drag-and-drop media upload fails if the Media Library has already been ...) updated</title>
      
        <dc:creator>danielpataki</dc:creator>

      <pubDate>Mon, 13 Oct 2014 17:22:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29689#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29689#comment:3/1413220940007613</guid>
      <description>&lt;p&gt;
I've figured out where the issue is but I am less of a Javascript ninja than I should be so if someone would lend a hand that would be great!
&lt;/p&gt;
&lt;p&gt;
In wp-includes/js/media-views.js, in the drop function in media.view.EditorUploader if there is no workflow set the workflow is created. Once created the image is added like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;this.workflow.on( 'uploader:ready', this.addFiles, this );
&lt;/pre&gt;&lt;p&gt;
If this is replaced by the following it works just fine:
&lt;/p&gt;
&lt;pre class="wiki"&gt;this.addFiles.apply( this );
&lt;/pre&gt;&lt;p&gt;
Since I am not too familiar with these parts of WordPress I am worried that the listener is there for a reason. Some debugging suggests that there is no need for this listener but I am definitely not sure.
&lt;/p&gt;
&lt;p&gt;
In addition, I don't know if the other workflow methods need to be used. If yes, the whole section could be simplified like so:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( ! this.workflow ) {
	this.workflow = wp.media.editor.open( 'content', {
		frame:    'post',
		state:    'insert',
		title:    wp.media.view.l10n.addMedia,
		multiple: true
	});
this.workflow.state().reset();
this.addFiles.apply( this );
this.workflow.open();
&lt;/pre&gt;&lt;p&gt;
I am not submitting a patch at the moment since I'm not sure which route is correct. Perhaps somewhere the ready event isn't being triggered even though it should?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27402 (Add aria-describedby to image gallery output) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Mon, 13 Oct 2014 17:08:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27402#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27402#comment:13/1413220081700257</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-ui by RianRietveld. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-ui&amp;amp;day=2014-10-13&amp;amp;sort=asc#m203549"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29806 (Focus (continued)) updated</title>
      
        <dc:creator>nphaskins</dc:creator>

      <pubDate>Mon, 13 Oct 2014 16:52:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29806#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29806#comment:42/1413219128743820</guid>
      <description>&lt;p&gt;
I like the direction that this is headed, but to be completely honest I feel there's too much movement as compared to the current implementation of DFW. At minimum everything should fade out in one fluid motion. I'd also like to find a way to do this sans user actions. I think "clicking into the editor which triggers this"  would be considered unexpected behavior to new WordPress users.
&lt;/p&gt;
&lt;p&gt;
That is unless DFW was the default view when the edit post screen is loaded.
&lt;/p&gt;
&lt;p&gt;
I realize that's a bit of a drastic departure from the traditional edit-post screen, but I don't think it would be such unexpected behavior, and also wouldn't be tied to a specific user action.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29806 (Focus (continued)) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Mon, 13 Oct 2014 16:35:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29806#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29806#comment:41/1413218104695061</guid>
      <description>&lt;p&gt;
It'd be great if others could raise their concerns/thoughts here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29806 (Focus (continued)) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Mon, 13 Oct 2014 16:33:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29806#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29806#comment:40/1413217981655662</guid>
      <description>&lt;p&gt;
Turning it off by default would make it much harder to discover than turning it off when it's on auto, imho.
&lt;/p&gt;
&lt;p&gt;
So you're okay with this as long as it's not on by default? I mean, you're not strongly opposing the idea in general (and as a replacement for DFW)?
Is there any way you can think of that could improve it?
&lt;/p&gt;
&lt;p&gt;
Thanks a lot for the feedback! :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29947 (Reference to "Theme Customizer" in Customizer screen reader text) created</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 13 Oct 2014 16:16:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29947</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29947/1413216985458750</guid>
      <description>&lt;p&gt;
We're &lt;a class="ext-link" href="https://make.wordpress.org/core/2014/07/08/customizer-improvements-in-4-0/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;moving away from the term "Theme Customizer" in favor of just "Customizer"&lt;/a&gt;. We missed an instance of "Theme Customizer" in the &lt;code&gt;aria-label&lt;/code&gt; attribute of the &lt;code&gt;#customize-info&lt;/code&gt; section at the top of the Customizer (which says "you are customizing..."); the "Theme" part should be removed.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>29946.png attached to Ticket #29946</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 13 Oct 2014 16:11:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29946/29946.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29946/29946.png/1413216676228026</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29946 (Wrong panel-back icon in Customizer in RTL) created</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 13 Oct 2014 16:09:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29946</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29946/1413216573020205</guid>
      <description>&lt;p&gt;
We forgot to switch it to the arrow without a center line when we did that for all of the arrows in modals, etc. in the admin. The &lt;code&gt;f344&lt;/code&gt; dashicon should be &lt;code&gt;f345&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23225 (Customizer is Incompatible with jQuery UI Tabs.) updated</title>
      
        <dc:creator>deltafactory</dc:creator>

      <pubDate>Mon, 13 Oct 2014 15:41:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23225#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23225#comment:20/1413214911579193</guid>
      <description>&lt;p&gt;
Not sure if this is still relevant given ongoing improvements to Customizer, but would be interested in feedback/inclusion in 4.1.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29444 (Create new dashicons (4.1)) updated</title>
      
        <dc:creator>geminorum</dc:creator>

      <pubDate>Mon, 13 Oct 2014 15:40:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29444#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29444#comment:10/1413214849486648</guid>
      <description>&lt;p&gt;
Please consider adding helper classes for rotation and flipping, mainly for RTL purposes.
Also, I've just posted an issue for Genericons with example classes here : &lt;a class="ext-link" href="https://github.com/Automattic/Genericons/issues/52"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/Automattic/Genericons/issues/52&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29890 (Make menu descriptions available to be displayed on the front-end) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Mon, 13 Oct 2014 15:37:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29890#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29890#comment:15/1413214621702657</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by obenland. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-10-13&amp;amp;sort=asc#m939421"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29806 (Focus (continued)) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 13 Oct 2014 15:00:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29806#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29806#comment:39/1413212418864170</guid>
      <description>&lt;p&gt;
I am going to strongly object to this being on ("auto") by default - while I'm sure some bloggers *might* like it, I can guarantee that no one who produces Dealbook is going to want anything to do with it.
&lt;/p&gt;
&lt;p&gt;
I have love and respect for everyone who is working on this - I still severely dislike the fading.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29806 (Focus (continued)) updated</title>
      
        <dc:creator>johnrom</dc:creator>

      <pubDate>Mon, 13 Oct 2014 13:31:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29806#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29806#comment:38/1413207090964561</guid>
      <description>&lt;p&gt;
My thought was centered around the ability to manually enter DF mode, as that is how some would ideally use this feature. Sublime Text, for example, doesn't go into DF mode every time you start typing, but you can enter into it. The current method would leave me with only one other option -- off. Especially since I typically move the cursor out of a textarea in order for the cursor itself not to be a distraction while I'm typing. However, in this automatic mode it would appear that would exit DF mode. In the manual way, it would be the same button, replacing Enter with Exit.
&lt;/p&gt;
&lt;p&gt;
Something like
&lt;/p&gt;
&lt;p&gt;
Auto | Manual
[Enter Distraction-Free Mode] (button, visible when Manual is selected)
&lt;/p&gt;
&lt;p&gt;
Maybe there's a better way, but I'd love to see an on-demand mode incorporated.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29908 (date_query inclusive logic still not quite right) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 13 Oct 2014 12:56:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29908#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29908#comment:7/1413204971245392</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29908#comment:6" title="Comment 6"&gt;magicroundabout&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Why don't we &lt;code&gt;date_parse()&lt;/code&gt;?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, I tried that too :) &lt;code&gt;date_parse()&lt;/code&gt; does some rounding down. &lt;code&gt;date_parse( '2014-05' )&lt;/code&gt; returns &lt;code&gt;day=1&lt;/code&gt;. So there's no way to know, just by looking at the results of &lt;code&gt;date_parse()&lt;/code&gt;, whether the intended value was '2014-05-01' or just '2014-05'. It would be possible to use &lt;code&gt;date_parse()&lt;/code&gt; for some formats (it's reliable for Y-m-d, for example), but relying on this somewhat odd behavior for certain cases seemed odd.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote&gt;
&lt;p&gt;
Is there some info somewhere on the best way to create and test out patches? Would love to contribute (finally!).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Absolutely - we'd love to have your contributions. Check out the Contributor Handbook: &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/the-wordpress-codebase/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://make.wordpress.org/core/handbook/the-wordpress-codebase/&lt;/a&gt; You'll see links along the left-hand menu for using Trac and SVN for generating and applying patches.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12668 (Better support for custom comment types) updated</title>
      
        <dc:creator>mordauk</dc:creator>

      <pubDate>Mon, 13 Oct 2014 12:45:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12668#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12668#comment:42/1413204329548180</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12668#comment:41" title="Comment 41"&gt;judgej&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
the easiest way to achieve that is not to call "comments" things which are not comments.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Quite often they *are* comments, just not specifically "user comments on blog posts". Status changes on a shop order are logically comments on that shop order, a copy of which may be emailed to customer, or may be kept for administrator reference only. Some of those comments may be visible to the customer (but not any other customer) and some may not be.
&lt;/p&gt;
&lt;p&gt;
Now, if the official line from WP were that "comments" are ONLY "public user-provided comments on just the "post" post type", then fine, we can see there is no scope to use it for anything else and can move on. But I think for now there is some disagreement on exactly what a comment is, so different developers expect to be able to use comments for a range of different purposes. So is there an official statement or documentation about the scope of "comments" beyond what we can see in the code? Should this FR start with an agreement on the scope first? It's been tossed around for five years now, so a different approach is needed to either move it forward, or release us hopefuls so we can create an alternative as a plugin.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
For EDD and Woo, they are most definitely comments. While there are automated changes, such as payment statuses, logged, they are also used for manually entered admin and customer notes/comments on order.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29908 (date_query inclusive logic still not quite right) updated</title>
      
        <dc:creator>magicroundabout</dc:creator>

      <pubDate>Mon, 13 Oct 2014 12:27:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29908#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29908#comment:6/1413203232015386</guid>
      <description>&lt;p&gt;
Why don't we &lt;code&gt;date_parse()&lt;/code&gt;?
&lt;/p&gt;
&lt;p&gt;
The only issue that I can see with using &lt;code&gt;date_parse()&lt;/code&gt; is that it would be breaking if, say, someone had sent a date AND time string in &lt;code&gt;before&lt;/code&gt; or &lt;code&gt;after&lt;/code&gt; (e.g. &lt;code&gt;'before' =&amp;gt; '2013-01-13 12:00:00')&lt;/code&gt;. Arguably, the documentation doesn't say that that will work. It says "&lt;strong&gt;Date&lt;/strong&gt; to retrieve posts after. Accepts &lt;code&gt;strtotime()&lt;/code&gt;-compatible string"
&lt;/p&gt;
&lt;p&gt;
I'm happy to code up a new patch and/or test Boone's work.
&lt;/p&gt;
&lt;p&gt;
Is there some info somewhere on the best way to create and test out patches?  Would love to contribute (finally!). It's just not something I've done before.  I'm an experienced dev with multiple local and remote test installs, so happy to talk as technical as you like, but just not worked with trac and patches much.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24975 (Scheduled Page on Menu showing before Schedule time) updated</title>
      
        <dc:creator>mattheu</dc:creator>

      <pubDate>Mon, 13 Oct 2014 12:05:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24975#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24975#comment:9/1413201901464533</guid>
      <description>&lt;p&gt;
Yeah I did think about this but it just doesn't seem quite right. My main concerns are:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Inconsistency - if you should be allowed to add scheduled posts to a menu - they why not include in 'most recent'?
&lt;/li&gt;&lt;li&gt;Ability to create a broken menu. The case of someone building the menu in advance is a good one - but equally someone building a menu that includes broken links is highly possible too and I don't like the idea that you can create a broken menu link.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
rhyswynne patch added labelling the scheduled posts - this would be a solution that worked with the current functionali this to make things clear to the user.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24975 (Scheduled Page on Menu showing before Schedule time) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 13 Oct 2014 11:52:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24975#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24975#comment:8/1413201148282384</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm tempted to wontfix this.
&lt;/p&gt;
&lt;p&gt;
While it's odd that a scheduled post appears when performing a search, I can imagine a situation where someone schedules a group of posts or pages, adds them to a menu, and then only adds that menu to a menu position after the posts or pages have published, for expediency.
&lt;/p&gt;
&lt;p&gt;
Or maybe that's a made-up edge case. Thoughts?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27402 (Add aria-describedby to image gallery output) updated</title>
      
        <dc:creator>rianrietveld</dc:creator>

      <pubDate>Mon, 13 Oct 2014 10:50:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27402#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27402#comment:12/1413197400063903</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27402 (Add aria-describedby to image gallery output) updated</title>
      
        <dc:creator>rianrietveld</dc:creator>

      <pubDate>Mon, 13 Oct 2014 10:42:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27402#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27402#comment:11/1413196979513592</guid>
      <description>&lt;p&gt;
Added a refresh of 27402.3.patch (meaning version 3.patch in stead of 4.patch as I mentioned in the description with the patch)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27402.4.patch attached to Ticket #27402</title>
      
        <dc:creator>rianrietveld</dc:creator>

      <pubDate>Mon, 13 Oct 2014 10:42:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27402/27402.4.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27402/27402.4.patch/1413196929766249</guid>
      <description>&lt;p&gt;
Refresh of 27402.4.patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29641 (Password protected posts not working - secure cookie flag) updated</title>
      
        <dc:creator>bajro</dc:creator>

      <pubDate>Mon, 13 Oct 2014 09:52:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29641#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29641#comment:7/1413193930380050</guid>
      <description>&lt;p&gt;
Yes sorry, should have mentioned that the first time. We are running domain mapping also. So what happens is in case:
&lt;/p&gt;
&lt;p&gt;
www.our-wp.com/someweb/hidden/
&lt;/p&gt;
&lt;p&gt;
This works and sets cookie.
&lt;/p&gt;
&lt;p&gt;
If user has domain, and domain mapping is set than
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;www.hisdomain.com/hidden&lt;/strong&gt; will redirect to &lt;strong&gt;www.our-wp.com/someotherweb/hidden/&lt;/strong&gt; and than back to &lt;strong&gt;www.hisdomain.com/hidden&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
And this is the case when setting cookie fails. This worked without problem in version 3.9.2.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12668 (Better support for custom comment types) updated</title>
      
        <dc:creator>judgej</dc:creator>

      <pubDate>Mon, 13 Oct 2014 09:36:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12668#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12668#comment:41/1413193015486825</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
the easiest way to achieve that is not to call "comments" things which are not comments.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Quite often they *are* comments, just not specifically "user comments on blog posts". Status changes on a shop order are logically comments on that shop order, a copy of which may be emailed to customer, or may be kept for administrator reference only. Some of those comments may be visible to the customer (but not any other customer) and some may not be.
&lt;/p&gt;
&lt;p&gt;
Now, if the official line from WP were that "comments" are ONLY "public user-provided comments on just the "post" post type", then fine, we can see there is no scope to use it for anything else and can move on. But I think for now there is some disagreement on exactly what a comment is, so different developers expect to be able to use comments for a range of different purposes. So is there an official statement or documentation about the scope of "comments" beyond what we can see in the code? Should this FR start with an agreement on the scope first? It's been tossed around for five years now, so a different approach is needed to either move it forward, or release us hopefuls so we can create an alternative as a plugin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29045 (Warning when installing/updating themes and plugins) updated</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Mon, 13 Oct 2014 08:28:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29045#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29045#comment:3/1413188930544213</guid>
      <description>&lt;p&gt;
It has to be related to some kind of server issue. We moved website to another hoster and everything works well now. I am not sure what was wrong, maybe problem with secure connection...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12668 (Better support for custom comment types) updated</title>
      
        <dc:creator>mark-k</dc:creator>

      <pubDate>Mon, 13 Oct 2014 05:31:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12668#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12668#comment:40/1413178278983336</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12668#comment:39" title="Comment 39"&gt;mordauk&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
I fully agree with anything that will improve on the current situation even if it will end up in just introducing new filters to be able to better customize the admin side. Whatever I write below is not that important to me
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Regardless of whether storing things like payment notes in comments is "proper", I still think better support for custom comment types has a lot of merit.
&lt;/p&gt;
&lt;p&gt;
Pingbacks and trackbacks are custom comment types. Why not make it easier to support more comment types like that?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&amp;lt;pedantic&amp;gt; semantically Pingback === trackback, they are both remote mentions and the underlying way by which they were discovered doesn't make any semantical difference nor is there any point in presenting them differently &amp;lt;/pedantic&amp;gt;
&lt;/p&gt;
&lt;p&gt;
comments are just content type that represent content that might have been submitted by users with no publishing permission. EDD and WC use them for content that implicitly is always generated by authorized user, it doesn't need to go through a spam detection, doesn't need to be displayed in threads, doesn't need avatar.... it is not a comment in any semantical way.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The issue right now isn't so much that we don't have support for custom comment types, it's that we don't have support for separating comment types out from one another.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
and the easiest way to achieve that is not to call "comments" things which are not comments. Why doesn't EDD use CPT for that? maybe it will be easier to fix that limitation than having better support for custom comment types.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Anyone can go and create a custom comment type right now, but any comment inserted with a custom type will still be included in the default comment tables and lists, and removing a comment type from those queries is rather expensive, as shown above.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What about theme support? I can't right now think of any example (which might mean that the whole argument is invalid ;) ) but all the comment related code I have seen assumes that if it is not pingback or trackback it is a comment therefor it is very likely that all comment types will be displayed as part of the comment stream.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29937 (Ever since updating to WP4.0, thumbnails have not been generating.) updated</title>
      
        <dc:creator>dpanych</dc:creator>

      <pubDate>Mon, 13 Oct 2014 04:26:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29937#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29937#comment:2/1413174375071530</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29937#comment:1" title="Comment 1"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Does it still happen with all plugins disabled and a default theme (Twenty Fourteen or Twenty Thirteen) activated?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes I tried disabling all plugins, setting default theme, and clearing cache. It is still like that. Does mean anything if I have two WP sites running on the same godaddy hosting account. Site A has main root directory and Site B is within Site A directory.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12668 (Better support for custom comment types) updated</title>
      
        <dc:creator>mordauk</dc:creator>

      <pubDate>Mon, 13 Oct 2014 03:12:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12668#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12668#comment:39/1413169950160884</guid>
      <description>&lt;p&gt;
Regardless of whether storing things like payment notes in comments is "proper", I still think better support for custom comment types has a lot of merit.
&lt;/p&gt;
&lt;p&gt;
Pingbacks and trackbacks are custom comment types. Why not make it easier to support more comment types like that?
&lt;/p&gt;
&lt;p&gt;
The issue right now isn't so much that we don't have support for custom comment types, it's that we don't have support for separating comment types out from one another.
&lt;/p&gt;
&lt;p&gt;
Anyone can go and create a custom comment type right now, but any comment inserted with a custom type will still be included in the default comment tables and lists, and removing a comment type from those queries is rather expensive, as shown above.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29940 (Ã…Ã„Ã– Sorting) updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Mon, 13 Oct 2014 03:07:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29940#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29940#comment:2/1413169677067525</guid>
      <description>&lt;p&gt;
For Swedish sites I set the collation for certain, or all, columns to &lt;code&gt;utf8_swedish_ci&lt;/code&gt;. The essential columns to change are &lt;code&gt;terms.name&lt;/code&gt;, &lt;code&gt;posts.post_title&lt;/code&gt; and &lt;code&gt;users.display_name&lt;/code&gt;, using phpMyAdmin. For Norwegian and Danish sites I use &lt;code&gt;utf8_danish_ci&lt;/code&gt;. When available, I use utf8mb4_* collations.
&lt;/p&gt;
&lt;p&gt;
The easiest way is to set the default collation for the database before WordPress is installed.
&lt;/p&gt;
&lt;p&gt;
Ideally WordPress should use proper collations according to selected WPLANG at install time. Do we need a new ticket for this?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28208 (in wp_handle_upload setting the overwrite `test_upload` to false won't ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 13 Oct 2014 02:32:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28208#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28208#comment:1/1413167561122115</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>29908.patch attached to Ticket #29908</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 13 Oct 2014 01:54:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29908/29908.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29908/29908.patch/1413165261845122</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29908 (date_query inclusive logic still not quite right) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 13 Oct 2014 01:52:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29908#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29908#comment:5/1413165173835466</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29908#comment:3" title="Comment 3"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It would probably be easier if it generated this instead:
&lt;/p&gt;
&lt;pre class="wiki"&gt;AND ( ( post_date &amp;gt;= '2013-04-07 00:00:00'
AND post_date &amp;lt; '2013-10-14 00:00:00' ) )
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
If I were building this from scratch, I might agree with you. But the rounding-up logic is already in WP_Date_Query, for when an incomplete array value like &lt;code&gt;array( 'year' =&amp;gt; 2013, 'month' =&amp;gt; 04 )&lt;/code&gt; is passed. So it makes sense to use it.
&lt;/p&gt;
&lt;p&gt;
The real challenge here is figuring out what date formats to accept. &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/29908/29908.patch" title="Attachment '29908.patch' in Ticket #29908"&gt;29908.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/29908/29908.patch" title="Download"&gt;â€‹&lt;/a&gt; adds inclusive support for &lt;code&gt;Y&lt;/code&gt;, &lt;code&gt;Y-m&lt;/code&gt;, &lt;code&gt;Y-m-d&lt;/code&gt;, &lt;code&gt;Y-m-d H:i&lt;/code&gt;, and &lt;code&gt;Y-m-d H:i:s&lt;/code&gt;, as well as the same formats with &lt;code&gt;/&lt;/code&gt; instead of &lt;code&gt;-&lt;/code&gt;. (If there is PHP tool for computing the date format from a string - _without_ rounding it down, like &lt;code&gt;strtotime()&lt;/code&gt; - I couldn't find it. Obviously they have the internals....) I figure this is better than nothing, and the first three in particular will probably cover many use cases.
&lt;/p&gt;
&lt;p&gt;
magicroundabout, you want to have a look and see if it's working for you?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29890 (Make menu descriptions available to be displayed on the front-end) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 13 Oct 2014 01:49:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29890#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29890#comment:14/1413164996835345</guid>
      <description>&lt;p&gt;
The menus system goes to horrific lengths to support menu item descriptions (and there's some history with them always storing something like the original post's excerpt there by default, which caused even bigger issues), so I'm really surprised there isn't a good way to implement them in themes currently.
&lt;/p&gt;
&lt;p&gt;
+1 for &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/29890/29890.5.diff" title="Attachment '29890.5.diff' in Ticket #29890"&gt;29890.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/29890/29890.5.diff" title="Download"&gt;â€‹&lt;/a&gt;. While I &lt;em&gt;think&lt;/em&gt; descriptions support html, they really shouldn't as there are enough problems with trying to save too much data in menu items anyway. I'm fine with &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; for now, then we can change it if needed once we see what people might want to do with them once it's in Twenty Fifteen in trunk.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28682 (Live-update the site title in the admin bar when changing the ...) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Mon, 13 Oct 2014 01:48:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28682#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28682#comment:5/1413164892597298</guid>
      <description>&lt;p&gt;
Should probably cache the queries a bit (you can use &lt;code&gt;this&lt;/code&gt;). Refreshed the patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>28682.patch attached to Ticket #28682</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Mon, 13 Oct 2014 01:44:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28682/28682.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28682/28682.patch/1413164668091982</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15633 (Add class to custom menu item when menu url is found in current page) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 13 Oct 2014 01:39:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15633#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15633#comment:4/1413164342638512</guid>
      <description>&lt;p&gt;
Either &lt;code&gt;current-menu-item&lt;/code&gt; or &lt;code&gt;current-page-item&lt;/code&gt; checks based on the URL I think, so if someone can confirm that we can close this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12900 (Enhance Nav_Menu to use the older menu functions) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 13 Oct 2014 01:35:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12900#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12900#comment:13/1413164128753174</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
If &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12900#comment:8" title="Comment 8"&gt;8&lt;/a&gt; is all that is left for this ticket, this is a duplicate of another more updated (possibly patched) ticket somewhere (although I can't find it).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28682 (Live-update the site title in the admin bar when changing the ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 13 Oct 2014 01:25:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28682#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28682#comment:4/1413163501659664</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Should be ready for commit unless anyone has other considerations to bring up. We're doing similar things in the Customizer and in Menus now too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #18289,â€‹29935 batch updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Mon, 13 Oct 2014 01:21:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=18289%2C29935</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=18289%2C29935/1413163315485071</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/18289" title="#18289: task (blessed): Direct link to plugin installation should have admin chrome (reviewing)"&gt;#18289&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Not necessarily a better URL. Just a way to link to the modal.
Sounds like that's what I want too. :)
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #29935 (There should be a better way to link to a specific plugin) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 13 Oct 2014 01:15:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29935#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29935#comment:1/1413162928537121</guid>
      <description>&lt;p&gt;
I'm not entirely sure what you're asking for - a better URL? A Better direct UI?
&lt;/p&gt;
&lt;p&gt;
If the latter, &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/18289" title="#18289: task (blessed): Direct link to plugin installation should have admin chrome (reviewing)"&gt;#18289&lt;/a&gt; maybe?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29806 (Focus (continued)) updated</title>
      
        <dc:creator>khromov</dc:creator>

      <pubDate>Mon, 13 Oct 2014 01:12:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29806#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29806#comment:37/1413162775632373</guid>
      <description>&lt;p&gt;
Happy to see this discussion!
&lt;/p&gt;
&lt;p&gt;
I maintain a plugin called "Distraction Free Writing Mode Themes" which themes the DFWM.
Being able to scale away everything and being able to use dark color schemes like Monokai is much better than the default "burns your eyes"-white background of the current DFWM.
&lt;/p&gt;
&lt;p&gt;
With my plugin, these kinds of DFWM looks are possible:
&lt;a class="ext-link" href="https://wordpress.org/plugins/distraction-free-writing-mode-themes/screenshots/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://wordpress.org/plugins/distraction-free-writing-mode-themes/screenshots/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I feel you would possibly alienate quite a few people by radically changing the DFWM look.
&lt;/p&gt;
&lt;p&gt;
This mockup below is probably the best, because we would still be able to change the background color, but I would really like to have seen the tinymce bar disappear as standard behaviour (it could be enabled by pressing a button next to Add Media.) and making the admin bar visible only when user hovers at the top of the page.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://dl.dropboxusercontent.com/u/2758854/ODhD_BFeHY.gif"&gt;&lt;img src="https://dl.dropboxusercontent.com/u/2758854/ODhD_BFeHY.gif" alt="https://dl.dropboxusercontent.com/u/2758854/ODhD_BFeHY.gif" crossorigin="anonymous" title="https://dl.dropboxusercontent.com/u/2758854/ODhD_BFeHY.gif" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I'd love to hear your thoughts on this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29781 (Unit tests for WP_Date_Query) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 13 Oct 2014 00:17:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29781#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29781#comment:6/1413159433132484</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29885" title="Don't create dummy data for each date query test.
The integration ..."&gt;29885&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Don't create dummy data for each date query test.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The integration tests for using date_query in WP_Query require the creation of&lt;br /&gt;
dummy post data, much of which is common between a number of tests. However,&lt;br /&gt;
newer tests do not require as much data, so to reduce overhead we create the&lt;br /&gt;
data explicitly only when we need it, instead of in the setUp() method.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29781" title="#29781: enhancement: Unit tests for WP_Date_Query (closed: fixed)"&gt;#29781&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [29885]: Don't create dummy data for each date query test.  The integration ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 13 Oct 2014 00:17:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/29885</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/29885/1413159432468233</guid>
      <description>&lt;p&gt;
Don't create dummy data for each date query test.
&lt;/p&gt;
&lt;p&gt;
The integration tests for using date_query in WP_Query require the creation of
dummy post data, much of which is common between a number of tests. However,
newer tests do not require as much data, so to reduce overhead we create the
data explicitly only when we need it, instead of in the setUp() method.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29781" title="#29781: enhancement: Unit tests for WP_Date_Query (closed: fixed)"&gt;#29781&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #29945 (Network setup rules should have a line break at the end) updated</title>
      
        <dc:creator>jenmylo</dc:creator>

      <pubDate>Sun, 12 Oct 2014 23:18:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29945#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29945#comment:1/1413155889628037</guid>
      <description>&lt;p&gt;
Yep. This broke my multisite install. Thanks for finding the issue, @sergeybiryukov!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29944 (When editing a long post in Text mode, clicking on any of the ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 12 Oct 2014 23:18:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29944#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29944#comment:5/1413155887103681</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29944 (When editing a long post in Text mode, clicking on any of the ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 12 Oct 2014 23:12:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29944#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29944#comment:4/1413155559948727</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29884" title="Quicktags: move focusing the editor after inserting content to the end ..."&gt;[29884]&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Quicktags: move focusing the editor after inserting content to the end of the code blocks. Fixes a bug in Chrome where both the textarea and the window may auto-scroll to unexpected position on clicking a Quicktags button. Part props avryl, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29944" title="#29944: defect (bug): When editing a long post in Text mode, clicking on any of the ... (closed: fixed)"&gt;#29944&lt;/a&gt; for trunk.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [29884]: Quicktags: move focusing the editor after inserting content to the end ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 12 Oct 2014 23:11:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/29884</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/29884/1413155493624771</guid>
      <description>&lt;p&gt;
Quicktags: move focusing the editor after inserting content to the end of the code blocks. Fixes a bug in Chrome where both the textarea and the window may auto-scroll to unexpected position on clicking a Quicktags button. Part props avryl, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29944" title="#29944: defect (bug): When editing a long post in Text mode, clicking on any of the ... (closed: fixed)"&gt;#29944&lt;/a&gt; for trunk.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #29945 (Network setup rules should have a line break at the end) created</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 12 Oct 2014 23:10:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29945</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29945/1413155422898152</guid>
      <description>&lt;p&gt;
The standard WordPress &lt;code&gt;.htaccess&lt;/code&gt; rules look like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;# BEGIN WordPress
&amp;lt;IfModule mod_rewrite.c&amp;gt;
RewriteEngine On
RewriteBase /
RewriteRule ^index\.php$ - [L]
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule . /index.php [L]
&amp;lt;/IfModule&amp;gt;
# END WordPress
&lt;/pre&gt;&lt;p&gt;
When creating a network, the suggested rules are:
&lt;/p&gt;
&lt;pre class="wiki"&gt;RewriteEngine On
RewriteBase /
RewriteRule ^index\.php$ - [L]
# add a trailing slash to /wp-admin
RewriteRule ^([_0-9a-zA-Z-]+/)?wp-admin$ $1wp-admin/ [R=301,L]
RewriteCond %{REQUEST_FILENAME} -f [OR]
RewriteCond %{REQUEST_FILENAME} -d
RewriteRule ^ - [L]
RewriteRule ^([_0-9a-zA-Z-]+/)?(wp-(content|admin|includes).*) $2 [L]
RewriteRule ^([_0-9a-zA-Z-]+/)?(.*\.php)$ $2 [L]
RewriteRule . index.php [L]
&lt;/pre&gt;&lt;p&gt;
Before pasting them into &lt;code&gt;.htaccess&lt;/code&gt;, I generally remove all existing rules, including the &lt;code&gt;BEGIN/END&lt;/code&gt; comments and the &lt;code&gt;&amp;lt;IfModule&amp;gt;&lt;/code&gt; tag.
&lt;/p&gt;
&lt;p&gt;
However, if you keep those, it's too easy to make an error:
&lt;/p&gt;
&lt;pre class="wiki"&gt;# BEGIN WordPress
&amp;lt;IfModule mod_rewrite.c&amp;gt;
RewriteEngine On
RewriteBase /
RewriteRule ^index\.php$ - [L]
# add a trailing slash to /wp-admin
RewriteRule ^([_0-9a-zA-Z-]+/)?wp-admin$ $1wp-admin/ [R=301,L]
RewriteCond %{REQUEST_FILENAME} -f [OR]
RewriteCond %{REQUEST_FILENAME} -d
RewriteRule ^ - [L]
RewriteRule ^([_0-9a-zA-Z-]+/)?(wp-(content|admin|includes).*) $2 [L]
RewriteRule ^([_0-9a-zA-Z-]+/)?(.*\.php)$ $2 [L]
RewriteRule . index.php [L]&amp;lt;/IfModule&amp;gt;
# END WordPress
&lt;/pre&gt;&lt;p&gt;
Note the problematic line at the end:
&lt;/p&gt;
&lt;pre class="wiki"&gt;RewriteRule . index.php [L]&amp;lt;/IfModule&amp;gt;
&lt;/pre&gt;&lt;p&gt;
It leads to a 500 Internal Server Error on some installs and to 404 Not Found errors on others.
&lt;/p&gt;
&lt;p&gt;
It should be two separate lines:
&lt;/p&gt;
&lt;pre class="wiki"&gt;RewriteRule . index.php [L]
&amp;lt;/IfModule&amp;gt;
&lt;/pre&gt;&lt;p&gt;
We should add a line break to the end of the network setup rules to reduce the chance of this issue.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29944 (When editing a long post in Text mode, clicking on any of the ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 12 Oct 2014 23:06:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29944#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29944#comment:3/1413155195028334</guid>
      <description>&lt;p&gt;
After some quick debugging with @avryl, caused by &lt;code&gt;canvas.focus();&lt;/code&gt; before setting the new caret position (canvas.selectionStart and canvas.selectionEnd).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29944 (When editing a long post in Text mode, clicking on any of the ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 12 Oct 2014 22:39:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29944#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29944#comment:2/1413153557626096</guid>
      <description>&lt;p&gt;
Yeah, can reproduce it without editor expand too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29944 (When editing a long post in Text mode, clicking on any of the ...) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Sun, 12 Oct 2014 22:22:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29944#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29944#comment:1/1413152550674193</guid>
      <description>&lt;p&gt;
Looks like this is a Chrome bug. Happens too with editor expand disabled, if you make the textarea a bit longer.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29362 (More development for wp_dropdown_languages()) updated</title>
      
        <dc:creator>gputignano</dc:creator>

      <pubDate>Sun, 12 Oct 2014 22:20:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29362#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29362#comment:6/1413152416365729</guid>
      <description>&lt;p&gt;
Who don't add value for en_US option?
&amp;lt;option value"en_US"&amp;gt;en_US&amp;lt;/option&amp;gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29447 (Multiple options for 'orderby' =&gt;  'meta_value_num' or making it optional) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sun, 12 Oct 2014 22:03:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29447#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29447#comment:1/1413151392335653</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
WP does support multiple orderby and order params, since WP 4.0. See &lt;a class="ext-link" href="https://make.wordpress.org/core/2014/08/29/a-more-powerful-order-by-in-wordpress-4-0/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://make.wordpress.org/core/2014/08/29/a-more-powerful-order-by-in-wordpress-4-0/&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
But your case is different. The root problem has to do with ordering by *meta*, and the way that orderby=meta_value and orderby=meta_value_num work. These params generate SQL that looks like this: &lt;code&gt;SELECT ... FROM wptests_posts INNER JOIN wptests_postmeta ON wptests_posts.ID = wptests_postmeta.post_id WHERE ... wptests_postmeta.meta_key = 'foo'&lt;/code&gt;. In other words: the JOIN that enables the ORDER BY clause also excludes posts that don't have meta_key=foo at all. Multiple sort order criteria for meta, while cool, would not solve this.
&lt;/p&gt;
&lt;p&gt;
So, the first enhancement that might come out of this ticket is: the ability to sort by meta_value without requiring that all the items returned have the meta_value. In theory, it's possible to do most of this with a LEFT JOIN. Take the following data:
&lt;/p&gt;
&lt;p&gt;
Posts:
&lt;/p&gt;
&lt;pre class="wiki"&gt;---------   ------------
| Posts |   | Postmeta |
---------   ------------
   ID         post_id  meta_key  meta_value
   --         -------  --------  ----------
   1            2        foo       55
   2            3        foo       75
   3
   4
&lt;/pre&gt;&lt;p&gt;
You can run the following query to get a list of posts that is ordered by meta_value without requiring it:
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT wp_posts.ID FROM wp_posts LEFT JOIN wp_postmeta ON (wp_posts.ID = wp_postmeta.post_id AND wp_postmeta.meta_key) ORDER BY wp_postmeta.meta_value DESC, wp_posts.ID ASC;
&lt;/pre&gt;&lt;p&gt;
This does return all posts, and 2 and 3 will be correctly ordered by meta_value. But the IDs that do not join against any rows in the postmeta table will always show up at the top of the list:
&lt;/p&gt;
&lt;pre class="wiki"&gt;1
4
3
2
&lt;/pre&gt;&lt;p&gt;
As far as I can see, there's no way to get around this in a single SQL query (without doing a further subquery or two to determine an exact order, or creating a temporary table). Though I might be wrong about this. It would probably be possible to write something in PHP that would first run a query against wp_postmeta, and then if necessary, would pad out the results with a query against wp_posts. But this is pretty clunky and will require some fairly broad changes to WP_Query.
&lt;/p&gt;
&lt;p&gt;
As for the issue of multiple sort orders and meta_value: That being said, I would also like to have it too, though it wouldn't help with your specific issue (that you want to return results that don't have any value for your key). I brought this up myself a few weeks ago, and sketched a solution &lt;a href="https://core.trac.wordpress.org/ticket/25538#comment:26"&gt;https://core.trac.wordpress.org/ticket/25538#comment:26&lt;/a&gt; I'll paste the relevant bits here for posterity's sake:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In the future, I think a better strategy for handling order + meta_query would involve the following:
&lt;/p&gt;
&lt;p&gt;
As WP_Meta_Query transforms meta_query clauses into SQL, it should store an array of the table aliases it creates, and they should get passed back to WP_Query
When WP_Query builds ORDER BY out of orderby=meta_value, it should do some logic like this:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;meta_value corresponding to which column? For this, look at the meta_key query var
&lt;/li&gt;&lt;li&gt;Then look up the table alias for that meta_key in the array passed from WP_Meta_Query::get_sql()
&lt;/li&gt;&lt;li&gt;Use that table alias when building the ORDER BY clause ("ORDER BY mt2.meta_value")
&lt;/li&gt;&lt;li&gt;Maybe build in support for multiple orderby, for tie-breaking etc ("ORDER BY mt2.meta_value ASC, mt1.meta_value DESC")
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
It's really this last bullet point that addresses your request, but the first couple bullet points are sorta prerequisites.
&lt;/p&gt;
&lt;p&gt;
I'm going to leave this ticket open in Future Release as a placeholder for some of this latter work that I'd like to take up at some point in the not-too-distant future. If you have any thoughts on the above, I'm all ears :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29944 (When editing a long post in Text mode, clicking on any of the ...) created</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 12 Oct 2014 22:00:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29944</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29944/1413151233281092</guid>
      <description>&lt;p&gt;
Happens only in Chrome 38 (recently released) when editor expand is enabled, and only when the caret is somewhere in the middle of the post.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29045 (Warning when installing/updating themes and plugins) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 12 Oct 2014 21:33:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29045#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29045#comment:2/1413149588712999</guid>
      <description>worksforme: &lt;p&gt;
pavelevap, are you still seeing this?
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #29941 (dbDelta() can't process lower-case SQL Keywords) updated</title>
      
        <dc:creator>extendwings</dc:creator>

      <pubDate>Sun, 12 Oct 2014 21:15:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29941#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29941#comment:1/1413148528367417</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29362 (More development for wp_dropdown_languages()) updated</title>
      
        <dc:creator>khromov</dc:creator>

      <pubDate>Sun, 12 Oct 2014 21:11:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29362#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29362#comment:5/1413148294340085</guid>
      <description>&lt;p&gt;
I'd like to second a filter. I author the "English WordPress Admin"* plugin and the introduction of wp_dropdown_languages() has made it so that if you hook on the locale filter to change locale to "en_US", the dropdown will have English selected when the user visits options-general.php, so when the user saves the options, he will have changed his site language by mistake.
&lt;/p&gt;
&lt;p&gt;
It may not actually be right to filter the locale when using wp_dropdown_languages() at all, due to aformentioned issues with the settings form.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://wordpress.org/plugins/english-wp-admin/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://wordpress.org/plugins/english-wp-admin/&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29908 (date_query inclusive logic still not quite right) updated</title>
      
        <dc:creator>magicroundabout</dc:creator>

      <pubDate>Sun, 12 Oct 2014 21:05:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29908#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29908#comment:4/1413147916321947</guid>
      <description>&lt;p&gt;
Presumably the inverse is also true. If I pass a string-formatted date (with no time) and set inclusive to false, the string is converted to, say, &lt;code&gt;2013-04-07 00:00:00&lt;/code&gt; and is therefore, counter-intuitively, inclusive?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29031 (Wp Query multiple tax_query results in unexpected behavior under ...) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sun, 12 Oct 2014 21:03:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29031#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29031#comment:4/1413147817748890</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
dunar21 - Glad to hear it's working now. Thanks for reporting back, and again, sorry about the delay.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29908 (date_query inclusive logic still not quite right) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 12 Oct 2014 21:00:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29908#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29908#comment:3/1413147634512438</guid>
      <description>&lt;p&gt;
It would probably be easier if it generated this instead:
&lt;/p&gt;
&lt;pre class="wiki"&gt;AND ( ( post_date &amp;gt;= '2013-04-07 00:00:00'
AND post_date &amp;lt; '2013-10-14 00:00:00' ) )
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29908 (date_query inclusive logic still not quite right) updated</title>
      
        <dc:creator>magicroundabout</dc:creator>

      <pubDate>Sun, 12 Oct 2014 20:58:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29908#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29908#comment:2/1413147510957824</guid>
      <description>&lt;p&gt;
Ah. Yes. Of course. Thanks @boonebgorges (P.S. Love that you're doing advanced query improvements for 4.1)
&lt;/p&gt;
&lt;p&gt;
The strtotime() means that this is correct and, to be fair, documented (if slightly unexpected) behaviour. I should have got that.
&lt;/p&gt;
&lt;p&gt;
I'm happy not to patch this if the documentation is made a bit clearer. I've added a note to the codex example to clarify to others!
&lt;/p&gt;
&lt;p&gt;
Do you think that this needs fixing by doing the string-to-array conversion that you suggest?  If we do, we'll have to remember to remove the note from the codex.
&lt;/p&gt;
&lt;p&gt;
Thanks
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29463 (Add filter in WP_Nav_Menu_Widget) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 12 Oct 2014 20:48:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29463#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29463#comment:9/1413146921837572</guid>
      <description>&lt;p&gt;
Sure.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29463 (Add filter in WP_Nav_Menu_Widget) updated</title>
      
        <dc:creator>cyman</dc:creator>

      <pubDate>Sun, 12 Oct 2014 20:32:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29463#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29463#comment:8/1413145936772034</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29463#comment:7" title="Comment 7"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The filter needs to be documented as per the &lt;a class="ext-link" href="http://make.wordpress.org/core/handbook/inline-documentation-standards/php-documentation-standards/#4-hooks-actions-and-filters"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;documentation standards&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I will handle the docs this week, ok?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29031 (Wp Query multiple tax_query results in unexpected behavior under ...) closed</title>
      
        <dc:creator>dunar21</dc:creator>

      <pubDate>Sun, 12 Oct 2014 20:25:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29031#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29031#comment:3/1413145545163027</guid>
      <description>worksforme: &lt;p&gt;
I just tested the query and it works perfectly well now.  Maybe it was an issue with the older version of WP. If you were testing against 3.9.1 and had no issues, then maybe it was an error on my part, however, I went through the code meticulously in order to solve the problem.  Still, I make mistakes all the time and it is very possible.  Thanks for looking into it for me.  Again, testing against 4.0, I cannot replicate the error myself and I no longer have the original code base I was working on when I encountered this issue.  This topic can be marked closed.  Thanks again.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>leewillis77</dc:creator>

      <pubDate>Sun, 12 Oct 2014 20:08:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:79</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:79/1413144514957061</guid>
      <description>&lt;p&gt;
OK, so sounds like that's not worth adding - 17817.9.patch looking good to me - cheers Jonathan.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28756 (wp_editor issues when used in frontend (TinyMCE)) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 12 Oct 2014 18:12:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28756#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28756#comment:4/1413137579498157</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29883" title="TinyMCE: fix the 'wpgallery' plugin to use a placeholder for galleries ..."&gt;29883&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
TinyMCE: fix the 'wpgallery' plugin to use a placeholder for galleries when either the 'wpview' plugin or wp.mce is not loaded. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28756" title="#28756: defect (bug): wp_editor issues when used in frontend (TinyMCE) (closed: fixed)"&gt;#28756&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [29883]: TinyMCE: fix the 'wpgallery' plugin to use a placeholder for galleries ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 12 Oct 2014 18:12:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/29883</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/29883/1413137578385309</guid>
      <description>&lt;p&gt;
TinyMCE: fix the 'wpgallery' plugin to use a placeholder for galleries when either the 'wpview' plugin or wp.mce is not loaded. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28756" title="#28756: defect (bug): wp_editor issues when used in frontend (TinyMCE) (closed: fixed)"&gt;#28756&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #28756 (wp_editor issues when used in frontend (TinyMCE)) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 12 Oct 2014 18:08:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28756#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28756#comment:3/1413137327432008</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Setting to 4.1 to fix point 2 above.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28756 (wp_editor issues when used in frontend (TinyMCE)) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 12 Oct 2014 17:59:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28756#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28756#comment:2/1413136780226988</guid>
      <description>&lt;ol&gt;&lt;li&gt;To see gallery previews when wp_editor() is used on the front-end, you'll need to &lt;code&gt;wp_enqueue_script('mce-view');&lt;/code&gt; separately as this is still experimental and will probably change in 4.1. Testing it and fixing any edge cases on the front-end welcome :)
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;When the &lt;code&gt;'wpview'&lt;/code&gt; TinyMCE plugin is not loaded, the &lt;code&gt;'wpgallery'&lt;/code&gt; plugin uses a gallery placeholder (as before). To edit a gallery that was replaced by a placeholder the media components will have to be loaded (as editing uses the media modal), then double-click on the placeholder. We can improve this a bit: need to confirm that both &lt;code&gt;'wpview'&lt;/code&gt; and &lt;code&gt;wp.mce.views&lt;/code&gt; exist or use a placeholder.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="3"&gt;&lt;li&gt;The problem here is: &lt;code&gt;rel="prettyPhoto&amp;lt;img src=" href="http://localhost/wordpress/wp-content/uploads/2014/07/19.jpg"&amp;gt;"&lt;/code&gt;. Not sure how this (broken) attribute got there, nothing in WordPress would add it.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29942 (wp_get_object_terms - no caching mechanism in place - results in ...) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sun, 12 Oct 2014 17:57:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29942#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29942#comment:1/1413136636315920</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the patch! As in &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/29894" title="#29894: defect (bug): get_terms() isn't caching - duplicate queries generated (accepted)"&gt;#29894&lt;/a&gt;, I like the consolidation of cache keys. And as in &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/29894" title="#29894: defect (bug): get_terms() isn't caching - duplicate queries generated (accepted)"&gt;#29894&lt;/a&gt;, I have a couple questions and concerns:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;It looks at a glance like the second query (2332 right hand side in &lt;a href="https://core.trac.wordpress.org/attachment/ticket/29942/taxonomy.php.patch"&gt;https://core.trac.wordpress.org/attachment/ticket/29942/taxonomy.php.patch&lt;/a&gt;) is pulling up information that is available in the main query being fired earlier. No need for a second query, and no need for a separate cache. This needs testing.
&lt;/li&gt;&lt;li&gt;Unit test coverage for &lt;code&gt;wp_get_object_terms()&lt;/code&gt; is pretty lackluster. I'm very wary of making these sorts of changes until we at least get basic coverage.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29894 (get_terms() isn't caching - duplicate queries generated) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sun, 12 Oct 2014 17:51:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29894#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29894#comment:14/1413136285361343</guid>
      <description>&lt;p&gt;
webgeekconsulting - Thanks for the patch. This is the kind of thing I had in mind, too. A couple thoughts and concerns:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Doing &lt;code&gt;SELECT *&lt;/code&gt; is going to increase the overhead of calling &lt;code&gt;get_terms()&lt;/code&gt; with 'fields' values of 'count', and possibly some of the others that currently query just two or three columns. The numbers may be small, but I'd like to see some benchmarks before moving forward with these kinds of changes. Maybe seed a database with a certain number of tax items, then run a script that runs &lt;code&gt;get_terms()&lt;/code&gt; a bunch of times, clearing the cache between each call. Over a couple thousand runs, this'll give a reasonable average of the overhead introduced by the broader &lt;code&gt;SELECT&lt;/code&gt; statement.
&lt;/li&gt;&lt;li&gt;I'd feel much more comfortable making these changes if we had better unit test coverage for the various values of 'fields' with respect to the object cache. &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/tests/phpunit/tests/term/getTerms.php"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://core.trac.wordpress.org/browser/trunk/tests/phpunit/tests/term/getTerms.php&lt;/a&gt; has some tests for 'fields' and some for cache, but none that combine the two. What's needed is tests that (a) call &lt;code&gt;get_terms()&lt;/code&gt; to prime the cache, then (b) call &lt;code&gt;get_terms()&lt;/code&gt; again to fetch items from the cache, and then (c) verify that the values returned are correct and that the number of database queries has not been incremented.
&lt;/li&gt;&lt;li&gt;The changes you've proposed here, and the ones I proposed here &lt;a href="https://core.trac.wordpress.org/ticket/29894#comment:10"&gt;https://core.trac.wordpress.org/ticket/29894#comment:10&lt;/a&gt; (stricter typecasting for arguments) are not mutually exclusive. It might be possible to do my suggestions for now (which would address your original issue) and then rework the cache internals as you've suggested for a later release, if it seems like the items I've suggested above are too much work to do right now.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
If you're able to work on some of these tests and benchmarks, it'll make it much more likely that this stuff'll get in sooner rather than later. :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29943 (Add Search for Plugin Favourites) created</title>
      
        <dc:creator>kidsguide</dc:creator>

      <pubDate>Sun, 12 Oct 2014 17:46:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29943</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29943/1413136006945242</guid>
      <description>&lt;p&gt;
I think you should add a search bar to the Favourites in the Plugin section. If you have a lot of favourites (like me) it is a pain to flip through the pages to find a favourite plugin.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29159 (user-agent checking is removing visual editor in function user_can_richedit) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 12 Oct 2014 17:01:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29159#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29159#comment:3/1413133298720279</guid>
      <description>&lt;p&gt;
From the post linked in the ticket:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
"This usually wonâ€™t be a problem, but if you have your frontend servers behind a proxy or load balancer that strips the user agent..."
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
WordPress has to detect the user agent to properly output the textarea content depending on which editor is loaded first. It also doesn't make sense to load TinyMCE in browsers that don't support it.
&lt;/p&gt;
&lt;p&gt;
It is possible to add an exception in &lt;code&gt;user_can_richedit()&lt;/code&gt; for this particular case. However the user agent is used in several other places to adjust the output, most notably in &lt;code&gt;wp_is_mobile()&lt;/code&gt;. It is not possible to make the right assumption in these cases.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>taxonomy.php.patch attached to Ticket #29942</title>
      
        <dc:creator>webgeekconsulting</dc:creator>

      <pubDate>Sun, 12 Oct 2014 16:47:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29942/taxonomy.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29942/taxonomy.php.patch/1413132452465568</guid>
      <description>&lt;p&gt;
taxonomy.php patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29942 (wp_get_object_terms - no caching mechanism in place - results in ...) created</title>
      
        <dc:creator>webgeekconsulting</dc:creator>

      <pubDate>Sun, 12 Oct 2014 16:47:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29942</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29942/1413132432332764</guid>
      <description>&lt;p&gt;
wp_get_object_terms() isn't caching queries which results in duplicate queries against the database. See the following debug info:
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT t.term_id FROM hf9v_terms AS t INNER JOIN hf9v_term_taxonomy AS tt ON tt.term_id = t.term_id INNER JOIN hf9v_term_relationships AS tr ON tr.term_taxonomy_id = tt.term_taxonomy_id WHERE tt.taxonomy IN ('product_category') AND tr.object_id IN (229) ORDER BY t.name ASC
include('wp-admin/edit-form-advanced.php'), do_meta_boxes, call_user_func, post_categories_meta_box, wp_popular_terms_checklist, wp_get_object_terms
&lt;/pre&gt;&lt;pre class="wiki"&gt;SELECT t.term_id FROM hf9v_terms AS t INNER JOIN hf9v_term_taxonomy AS tt ON tt.term_id = t.term_id INNER JOIN hf9v_term_relationships AS tr ON tr.term_taxonomy_id = tt.term_taxonomy_id WHERE tt.taxonomy IN ('product_category') AND tr.object_id IN (229) ORDER BY t.name ASC
include('wp-admin/edit-form-advanced.php'), do_meta_boxes, call_user_func, post_categories_meta_box, wp_terms_checklist, wp_get_object_terms
&lt;/pre&gt;&lt;p&gt;
I've attached a patch that creates a cache of the database query - similar to what is being suggested in ticket &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/29894" title="#29894: defect (bug): get_terms() isn't caching - duplicate queries generated (accepted)"&gt;#29894&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29692 (Multisite create new site return fatal error) updated</title>
      
        <dc:creator>mr.seejee</dc:creator>

      <pubDate>Sun, 12 Oct 2014 16:45:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29692#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29692#comment:29/1413132346292318</guid>
      <description>&lt;p&gt;
Same problem im facing on local (127.0.0.1). I have PHP 5.2.8. Kindly help in it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18254 (Preserve image aspect ratio when editing dimensions manually in post editor) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 12 Oct 2014 16:22:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18254#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18254#comment:3/1413130974489648</guid>
      <description>worksforme: &lt;p&gt;
Thanks @asdasDan for the patch but we went in a different direction. This is fixed in the new Edit Image modal we added when upgrading to TinyMCE 4.0. The image dimensions auto-adjust there.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #13327 (Post editor puts content through wpautop() before displaying it to ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 12 Oct 2014 15:55:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13327#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13327#comment:9/1413129347608202</guid>
      <description>&lt;p&gt;
Looking at this again: the best way to fix it would be to scrap &lt;code&gt;wp_richedit_pre()&lt;/code&gt; and use only &lt;code&gt;wp_htmledit_pre()&lt;/code&gt;, then run the textarea content through the JS wpautop before initializing TinyMCE (same as switching from Text to Visual).
&lt;/p&gt;
&lt;p&gt;
That would make the textarea content consistent and would fix other bugs. For example the browser restores the "last seen" textarea content on using the Back or Forward buttons. Currently on the Edit Post screen we have to set &lt;code&gt;autocomplete="off"&lt;/code&gt; on the whole form in Chrome, as it doesn't respect it on the textarea.
&lt;/p&gt;
&lt;p&gt;
However this could potentially introduce bugs in plugins that use TinyMCE and don't use wp_richedit_pre/wp_htmledit_pre to prepare the textarea content. We would need to ensure that arbitrary HTML that has &amp;lt;p&amp;gt; tags can pass through the JS wpautop() safely.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28155 (mysqli flush issues) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 12 Oct 2014 15:30:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28155#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28155#comment:4/1413127834329557</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>29941.diff attached to Ticket #29941</title>
      
        <dc:creator>extendwings</dc:creator>

      <pubDate>Sun, 12 Oct 2014 15:26:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29941/29941.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29941/29941.diff/1413127589763798</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29941 (dbDelta() can't process lower-case SQL Keywords) created</title>
      
        <dc:creator>extendwings</dc:creator>

      <pubDate>Sun, 12 Oct 2014 15:24:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29941</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29941/1413127475168304</guid>
      <description>&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="k"&gt;Create&lt;/span&gt; &lt;span class="k"&gt;Table&lt;/span&gt; &lt;span class="o"&gt;~~~&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
and
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="k"&gt;create&lt;/span&gt; &lt;span class="k"&gt;table&lt;/span&gt; &lt;span class="o"&gt;~~~&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
is not processed well by dbDelta().
&lt;/p&gt;
&lt;p&gt;
SQL keywords in both of upper-case and lower-case is valid.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29031 (Wp Query multiple tax_query results in unexpected behavior under ...) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sun, 12 Oct 2014 15:10:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29031#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29031#comment:2/1413126634370748</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
dunar21 - Thanks for the report, and sorry for the delay in getting around to looking at it.
&lt;/p&gt;
&lt;p&gt;
I've attempted to reproduce your issue in a unit test, but I've been unsuccessful. In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/29031/29031.test.patch" title="Attachment '29031.test.patch' in Ticket #29031"&gt;29031.test.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/29031/29031.test.patch" title="Download"&gt;â€‹&lt;/a&gt;, I've tried to match your query, but the tests are passing as you'd expect.
&lt;/p&gt;
&lt;p&gt;
Looking at the code that parses 'tax_query', I'm at somewhat of a loss to understand how the order of the 'terms' argument could matter. Your description of the problem suggests that the fact that the 25 actor doesn't have posts is causing the tax query to short circuit, but I don't see how this could happen - the two terms are processed together, in a SQL &lt;code&gt;IN&lt;/code&gt; clause, not serially. See &lt;code&gt;WP_Tax_Query::transform_query()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Can you share the SQL clauses that are being generated by &lt;code&gt;WP_Tax_Query::get_sql()&lt;/code&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>29031.test.patch attached to Ticket #29031</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sun, 12 Oct 2014 15:07:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29031/29031.test.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29031/29031.test.patch/1413126459779110</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21212 (MySQL tables should use utf8mb4 character set) updated</title>
      
        <dc:creator>extendwings</dc:creator>

      <pubDate>Sun, 12 Oct 2014 13:55:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21212#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21212#comment:27/1413122112959354</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@pento, any updates on this?
&lt;/p&gt;
&lt;p&gt;
A number of people, especially in Japan, wants to use Emoji in WordPress!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29936 (PHP notices when 'plugin' is not set for tab=plugin-information) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 12 Oct 2014 13:06:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29936#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29936#comment:3/1413119207584389</guid>
      <description>fixed: &lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29882" title="Avoid PHP notices if 'plugin' is not set for tab=plugin-information.
 ..."&gt;[29882]&lt;/a&gt; missed the ticket.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [29882]: Avoid PHP notices if 'plugin' is not set for tab=plugin-information.  ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 12 Oct 2014 13:05:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/29882</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/29882/1413119155073053</guid>
      <description>&lt;p&gt;
Avoid PHP notices if 'plugin' is not set for tab=plugin-information.
&lt;/p&gt;
&lt;p&gt;
props avryl.
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29936" title="#29936: defect (bug): PHP notices when 'plugin' is not set for tab=plugin-information (closed: fixed)"&gt;#29936&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #29936 (PHP notices when 'plugin' is not set for tab=plugin-information) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 12 Oct 2014 13:05:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29936#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29936#comment:2/1413119146184280</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #11740,â€‹29940 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 12 Oct 2014 12:40:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=11740%2C29940</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=11740%2C29940/1413117648635101</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/11740" title="#11740: defect (bug): Sorting tags and towns does not work well for utf-8 (new)"&gt;#11740&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15652" title="#15652: enhancement: Tags with Accents are Incorrectly Sorted in Cloud (closed: duplicate)"&gt;#15652&lt;/a&gt;. See also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18625" title="#18625: defect (bug): term_exists() doesn't make a difference between z and áº“ (closed: invalid)"&gt;#18625&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>ScreenShot002.jpg attached to Ticket #29940</title>
      
        <dc:creator>3dpc</dc:creator>

      <pubDate>Sun, 12 Oct 2014 12:30:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29940/ScreenShot002.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29940/ScreenShot002.jpg/1413117052815467</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29940 (Ã…Ã„Ã– Sorting) created</title>
      
        <dc:creator>3dpc</dc:creator>

      <pubDate>Sun, 12 Oct 2014 12:30:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29940</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29940/1413117032470027</guid>
      <description>&lt;p&gt;
I've noticed that Ã…Ã„Ã– (last three letters in the Swedish alphabet) aren't sorted corrected, e.g. in category lists which sorts the categories based on the first letter.
&lt;/p&gt;
&lt;p&gt;
Here is an example:
&lt;a style="padding:0; border:none" href="http://i.imgur.com/iS8iALo.png"&gt;&lt;img src="http://i.imgur.com/iS8iALo.png" alt="http://i.imgur.com/iS8iALo.png" crossorigin="anonymous" title="http://i.imgur.com/iS8iALo.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Same things happens if I output a list of the categories in a widget.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29939 (Centre Alignment function not working since few days) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 12 Oct 2014 12:29:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29939#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29939#comment:1/1413116991807802</guid>
      <description>invalid: &lt;p&gt;
Please try the support forums: &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://wordpress.org/support/&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #29939 (Centre Alignment function not working since few days) created</title>
      
        <dc:creator>girlxplorer18</dc:creator>

      <pubDate>Sun, 12 Oct 2014 12:16:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29939</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29939/1413116163179264</guid>
      <description>&lt;p&gt;
Hi Wordspress,
&lt;/p&gt;
&lt;p&gt;
I can see the ticket that "Text or images alignment is not working for authors" which is fixed but Let me inform you that centre alignment for text is not working since many days..iTS SHOWS the centered alignment when you are writing but when you publish it... it gets on the default "left alignment"
&lt;/p&gt;
&lt;p&gt;
And wordpress "Insights" plugin not working tooo! Please fix it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29938 (mysqli_query and multiple resultsets) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 12 Oct 2014 11:37:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29938#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29938#comment:1/1413113828618983</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>28155.2.diff attached to Ticket #28155</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sun, 12 Oct 2014 11:04:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28155/28155.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28155/28155.2.diff/1413111895077541</guid>
      <description>&lt;p&gt;
patch and unit tests
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #28155 (mysqli flush issues) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sun, 12 Oct 2014 11:04:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28155#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28155#comment:3/1413111861359010</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;code&gt;is_resource&lt;/code&gt; issues apart, since those are evident, here are some further thoughts on &lt;code&gt;mysqli_free_result&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;MYSQLI_STORE_RESULT&lt;/code&gt; is the default mode when using &lt;code&gt;mysqli_query&lt;/code&gt; without the &lt;code&gt;resultmode&lt;/code&gt; set. This is currently the way it's being done in WordPress.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;mysqli_free_result&lt;/code&gt; must be called when &lt;code&gt;resultmode&lt;/code&gt; is &lt;code&gt;MYSQLI_USE_RESULT&lt;/code&gt;, but judging by the source code for the mysqlnd freeing a stored result is not useless. So we can call &lt;code&gt;mysqli_free_result&lt;/code&gt; either way on the current result.
&lt;/p&gt;
&lt;p&gt;
Moving on to calling procedures using &lt;code&gt;mysqli_query&lt;/code&gt; (which is what WordPress will gladly do.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
For non-DML queries (not INSERT, UPDATE or DELETE), this function is similar to calling mysqli_real_query() followed by either mysqli_use_result() or mysqli_store_result().
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://ru2.php.net/manual/en/mysqli.query.php"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://ru2.php.net/manual/en/mysqli.query.php&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Do a search for "stored procedure" to read more comments.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://bugs.php.net/bug.php?id=35203"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://bugs.php.net/bug.php?id=35203&lt;/a&gt;
&lt;a class="ext-link" href="https://bugs.php.net/bug.php?id=32882"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://bugs.php.net/bug.php?id=32882&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Since procedures can return more than one resultset (and in many cases do, especially the additional 'OK' or 'ERR' resultset) it is strongly recommended to use &lt;code&gt;mysqli_multi_query&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
So as it stands, in order to properly call a procedure we can't use the WordPress Database API (not without the suggested hacks of iterating over the resultsets). So this is partially a misuse of mysqli by &lt;code&gt;$wpdb&lt;/code&gt; on at least CALL procedure queries. This is not critical, since multiple resultsets can still be fetched using &lt;code&gt;next_result&lt;/code&gt; and &lt;code&gt;use/store_result&lt;/code&gt; without any apparent issues.
&lt;/p&gt;
&lt;p&gt;
However, since the WordPress Database API does not currently expose the aforementioned functions it is impossible to retrieve multiple resultsets by using it. This is, however, a separate issue that I have created a new ticket for: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/29938" title="#29938: enhancement: mysqli_query and multiple resultsets (new)"&gt;#29938&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Note that &lt;code&gt;more_results&lt;/code&gt; will only return true inside of &lt;code&gt;$wpdb-&amp;gt;flush&lt;/code&gt; if there are indeed more resultsets waiting to be used or stored, resulting in sync errors unless looped over.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29938 (mysqli_query and multiple resultsets) created</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sun, 12 Oct 2014 10:24:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29938</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29938/1413109460501858</guid>
      <description>&lt;p&gt;
The WordPress Database API does not expose a way to work with multiple resultsets.
&lt;/p&gt;
&lt;p&gt;
Multiple resultsets are returned by queries that have several sets of results available and this is often the case with stored procedures and the usual way is to call &lt;code&gt;next_result&lt;/code&gt; and &lt;code&gt;use/store_result&lt;/code&gt; on the mysqli connection, however the connection is abstracted away behind the undocumented &lt;code&gt;$wpdb-&amp;gt;dbh&lt;/code&gt; field.
&lt;/p&gt;
&lt;pre class="wiki"&gt;-- Test procedure for out of sync mysqli commands
DROP PROCEDURE IF EXISTS `mysqli_procedure_test`;
DELIMITER ;;
CREATE PROCEDURE `mysqli_procedure_test`()
BEGIN
    SELECT * FROM `wp_posts` LIMIT 1;
    SELECT * FROM `wp_posts` LIMIT 1;
END;;
DELIMITER ;
&lt;/pre&gt;&lt;p&gt;
When calling this procedure (apart from the issues outlined in ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28155" title="#28155: defect (bug): mysqli flush issues (closed: fixed)"&gt;#28155&lt;/a&gt;) you can only access the first resultset using the documented APIs. To fetch the second one one would have to use the mysqli API directly.
&lt;/p&gt;
&lt;p&gt;
Need to come up with additional public methods to work with these via the Database API instead. There must be a way for a user to fetch the next resultset if there's one, or make this transparent somehow, perhaps using a &lt;code&gt;$wpdb-&amp;gt;call( $procedure, $arguments )&lt;/code&gt; invocation in the case of procedures? And something like &lt;code&gt;$wpdb-&amp;gt;next_results&lt;/code&gt; for everything else?
&lt;/p&gt;
&lt;p&gt;
Needs brainstorming.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29909 (Scrolling beneath modals bad experience on mobile) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 12 Oct 2014 10:19:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29909#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29909#comment:5/1413109183451093</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29909#comment:3" title="Comment 3"&gt;avryl&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We should add the &lt;code&gt;modal-open&lt;/code&gt; class for all other modals.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29074" title="#29074: defect (bug): Disable background page scrolling when modals are open (closed: fixed)"&gt;#29074&lt;/a&gt; it was closed but I'd suggest to reopen that ticket to manage all the modals there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29937 (Ever since updating to WP4.0, thumbnails have not been generating.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 12 Oct 2014 08:40:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29937#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29937#comment:1/1413103226208934</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Does it still happen with all plugins disabled and a default theme (Twenty Fourteen or Twenty Thirteen) activated?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>28703-1.diff attached to Ticket #28703</title>
      
        <dc:creator>slobodanmanic</dc:creator>

      <pubDate>Sun, 12 Oct 2014 07:21:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28703/28703-1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28703/28703-1.diff/1413098512113732</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #28703 (Table class in Twenty Fourteen editor-style.css need to be updated) updated</title>
      
        <dc:creator>slobodanmanic</dc:creator>

      <pubDate>Sun, 12 Oct 2014 06:41:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28703#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28703#comment:5/1413096078942364</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28703#comment:4" title="Comment 4"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Should we keep the old class for backwards compatibility with 3.8.x?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Good point. I'll update new patch in about an hour.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29896 (Organize Multisite Unit Tests) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 12 Oct 2014 05:49:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29896#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29896#comment:5/1413092989048945</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29896#comment:4" title="Comment 4"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Thought: should these instead be user/multisite.php?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes.
&lt;/p&gt;
&lt;p&gt;
I think if we have multisite specific tests for other components (users, options, media, taxonomy), we should use a &lt;code&gt;multisite.php&lt;/code&gt; in that directory. (i.e. similar to focuses and components in Trac)
&lt;/p&gt;
&lt;p&gt;
For the "networks and sites" component as well as the multisite boot process, I think we're good with a &lt;code&gt;multisite/&lt;/code&gt; directory.
&lt;/p&gt;
&lt;p&gt;
We go this direction in &lt;a href="https://core.trac.wordpress.org/attachment/ticket/29896/29896.3.diff"&gt;29896.3.diff&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;ms.php&lt;/code&gt; becomes &lt;code&gt;multisite.php&lt;/code&gt; and retains a couple registration related tests. We can move these out over time once we start testing that process.
&lt;/li&gt;&lt;li&gt;Tests specific to options move from &lt;code&gt;option/blogOption.php&lt;/code&gt; to &lt;code&gt;option/multisite.php&lt;/code&gt;. This also brings one multisite specific test from &lt;code&gt;option/siteOption.php&lt;/code&gt;. Really, &lt;code&gt;*_site_option()&lt;/code&gt; is &lt;code&gt;*_option()&lt;/code&gt; in single site, so the naming here can get confusing.
&lt;/li&gt;&lt;li&gt;Tests specific to users are in &lt;code&gt;user/multisite.php&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Tests specific to sites on a network are in &lt;code&gt;multisite/site.php&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Tests specific to networks are in &lt;code&gt;multisite/network.php&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Tests specific to the bootstrap / load process are in &lt;code&gt;multisite/bootstrap.php&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
We can now run tests with &lt;code&gt;ms-site&lt;/code&gt;, &lt;code&gt;ms-user&lt;/code&gt;, &lt;code&gt;ms-option&lt;/code&gt;, &lt;code&gt;ms-network&lt;/code&gt;, and &lt;code&gt;ms-bootstrap&lt;/code&gt; groups, which is nice.
&lt;/p&gt;
&lt;p&gt;
I'm going to sleep on it, but it's feeling good and everything is still passing. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>29896.3.diff attached to Ticket #29896</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 12 Oct 2014 05:42:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29896/29896.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29896/29896.3.diff/1413092550695378</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29894 (get_terms() isn't caching - duplicate queries generated) updated</title>
      
        <dc:creator>webgeekconsulting</dc:creator>

      <pubDate>Sun, 12 Oct 2014 05:26:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29894#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29894#comment:13/1413091606833864</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29894#comment:12" title="Comment 12"&gt;boonebgorges&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Yeah, I was thinking of something similar while looking at this. It's pretty poor caching strategy to store the same data in the cache 5 or 6 separate times (for different values of 'fields'). If we can fix that, it'd be a bonus.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Take a peek at the latest patch &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/29894/taxonomy.php.update4.patch" title="Attachment 'taxonomy.php.update4.patch' in Ticket #29894"&gt;taxonomy.php.update4.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/29894/taxonomy.php.update4.patch" title="Download"&gt;â€‹&lt;/a&gt;. Instead of caching the terms, we can create a cache of the query object. Then when the query gets executed, select all possible columns allowing the code later on to filter out the fields returned (this is already being done anyways). I think this actually simplifies things quite a bit. :)
&lt;/p&gt;
&lt;p&gt;
What do you think?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>29896.2.diff attached to Ticket #29896</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 12 Oct 2014 05:24:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29896/29896.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29896/29896.2.diff/1413091470284841</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>taxonomy.php.update4.patch attached to Ticket #29894</title>
      
        <dc:creator>webgeekconsulting</dc:creator>

      <pubDate>Sun, 12 Oct 2014 05:13:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29894/taxonomy.php.update4.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29894/taxonomy.php.update4.patch/1413090795031568</guid>
      <description>&lt;p&gt;
taxonomy.php patch 4
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29937 (Ever since updating to WP4.0, thumbnails have not been generating.) created</title>
      
        <dc:creator>dpanych</dc:creator>

      <pubDate>Sun, 12 Oct 2014 04:53:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29937</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29937/1413089622704488</guid>
      <description>&lt;p&gt;
In the Media section, all photos have the blank thumbnail with the gray icon.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29936 (PHP notices when 'plugin' is not set for tab=plugin-information) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Sun, 12 Oct 2014 04:44:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29936#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29936#comment:1/1413089096710091</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>29936.patch attached to Ticket #29936</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Sun, 12 Oct 2014 04:44:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29936/29936.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29936/29936.patch/1413089064181492</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29936 (PHP notices when 'plugin' is not set for tab=plugin-information) created</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Sun, 12 Oct 2014 04:43:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29936</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29936/1413089017466704</guid>
      <description></description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29935 (There should be a better way to link to a specific plugin) created</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Sun, 12 Oct 2014 04:29:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29935</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29935/1413088154426242</guid>
      <description>&lt;p&gt;
Currently the only way you can link to a plugin is this:
&lt;/p&gt;
&lt;p&gt;
/wp-admin/plugin-install.php?tab=plugin-information&amp;amp;plugin=x
&lt;/p&gt;
&lt;p&gt;
Which you really don't want to do since it completely disorientates the user. :)
&lt;/p&gt;
&lt;p&gt;
There should be a way to link directly to the plugin information modal. This is useful when want to require or recommend another plugin.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29418 (Taxonomy archive query not including all of its post types.) updated</title>
      
        <dc:creator>msaggiorato</dc:creator>

      <pubDate>Sun, 12 Oct 2014 03:53:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29418#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29418#comment:3/1413086026892198</guid>
      <description>&lt;p&gt;
I like the "show in archives" approach, could be a good "fix" for this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29930 (Polluted globals break Tests_Option_BlogOption) closed</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 12 Oct 2014 01:41:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29930#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29930#comment:1/1413078104236548</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29881" title="Reset multisite unit tests global stack to original host after testing ..."&gt;29881&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Reset multisite unit tests global stack to original host after testing bootstrap&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
After using &lt;code&gt;_setup_host_request()&lt;/code&gt; to test multiple domain and path combinations, use the same to set the global stack back to a domain of &lt;code&gt;WP_TESTS_DOMAIN&lt;/code&gt; and path of &lt;code&gt;/&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29930" title="#29930: defect (bug): Polluted globals break Tests_Option_BlogOption (closed: fixed)"&gt;#29930&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [29881]: Reset multisite unit tests global stack to original host after testing ...</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 12 Oct 2014 01:41:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/29881</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/29881/1413078103136704</guid>
      <description>&lt;p&gt;
Reset multisite unit tests global stack to original host after testing bootstrap
&lt;/p&gt;
&lt;p&gt;
After using &lt;code&gt;_setup_host_request()&lt;/code&gt; to test multiple domain and path combinations, use the same to set the global stack back to a domain of &lt;code&gt;WP_TESTS_DOMAIN&lt;/code&gt; and path of &lt;code&gt;/&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29930" title="#29930: defect (bug): Polluted globals break Tests_Option_BlogOption (closed: fixed)"&gt;#29930&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #29806 (Focus (continued)) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 12 Oct 2014 01:21:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29806#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29806#comment:36/1413076891587917</guid>
      <description>&lt;p&gt;
Yeah, a toggle button that "remembers" state and a new-feature pointer are a good combination. Thinking that the checkbox for disabling editor scrolling (in Screen Options) should disable this too and hide the toggle button.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16235 (Site Welcome Email sent without regard to noconfirmation flag) closed</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 12 Oct 2014 01:10:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16235#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16235#comment:13/1413076222526265</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29880" title="Do not send a welcome notification when noconfirmation has been ..."&gt;29880&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Do not send a welcome notification when noconfirmation has been flagged&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When adding a new user to a site on the network, 2 emails are sent out - one for confirmation and one as a welcome. If the option for no confirmation is selected, neither should send.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
props transom&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16235" title="#16235: enhancement: Site Welcome Email sent without regard to noconfirmation flag (closed: fixed)"&gt;#16235&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [29880]: Do not send a welcome notification when noconfirmation has been ...</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 12 Oct 2014 01:10:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/29880</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/29880/1413076221813253</guid>
      <description>&lt;p&gt;
Do not send a welcome notification when noconfirmation has been flagged
&lt;/p&gt;
&lt;p&gt;
When adding a new user to a site on the network, 2 emails are sent out - one for confirmation and one as a welcome. If the option for no confirmation is selected, neither should send.
&lt;/p&gt;
&lt;p&gt;
props transom
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16235" title="#16235: enhancement: Site Welcome Email sent without regard to noconfirmation flag (closed: fixed)"&gt;#16235&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #29806 (Focus (continued)) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Sun, 12 Oct 2014 01:09:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29806#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29806#comment:35/1413076185071177</guid>
      <description>&lt;p&gt;
There wouldn't be a setting anywhere, just a button to switch between auto and off. The same button that is now used for DFW/fullscreen mode. It would be auto by default (but you can turn it off and it will stay off, based on the user), and we'll add a "new feature" pointer that can be dismissed next to the button.
&lt;/p&gt;
&lt;p&gt;
The setting for editor scrolling that is now under screen settings could merge with this, but I can see why you would want this but not the other thing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29806 (Focus (continued)) updated</title>
      
        <dc:creator>johnrom</dc:creator>

      <pubDate>Sun, 12 Oct 2014 01:02:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29806#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29806#comment:34/1413075733306027</guid>
      <description>&lt;p&gt;
As long as it is an option in the Writing settings, I'm happy. It's a cool concept, and I'm definitely on board.
&lt;/p&gt;
&lt;p&gt;
Alternatively, maybe add an admin notice when a user edits a post, "Would you like to enter Distraction Free mode / Focus mode when using the Editor? Yes / No", that saves user meta through an AJAX call, and goes away and never comes back once the user meta is saved. In this case, the checkbox should probably fall under the user's profile.
&lt;/p&gt;
&lt;p&gt;
Again, this is all just my opinion, but for every UI feature there are those who like it, those who do not like it, and those who like it sometimes. I'm trying to appeal to those who will like it sometimes.
&lt;/p&gt;
&lt;p&gt;
I'm not available to write anything this weekend, but if you'd like I can throw together the admin notices portion this week sometime.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29806 (Focus (continued)) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 12 Oct 2014 01:01:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29806#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29806#comment:33/1413075705948343</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29806#comment:30" title="Comment 30"&gt;johnbillion&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Can we get a body class added when the menu gets pinned, similar to the &lt;code&gt;sticky-menu&lt;/code&gt; body class?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sure but what would that be used for? There are some differences when the top or the bottom is pinned, so we probably will need two, perhaps: &lt;code&gt;pinned-menu-top&lt;/code&gt; and &lt;code&gt;pinned-menu-bottom&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29632 (wpColorPicker does not respect `hide` option) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 12 Oct 2014 00:50:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29632#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29632#comment:7/1413075055504288</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29879" title="Fix support for the `hide` option in wpColorPicker, props tollmanz, ..."&gt;29879&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Fix support for the &lt;code&gt;hide&lt;/code&gt; option in wpColorPicker, props tollmanz, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29632" title="#29632: defect (bug): wpColorPicker does not respect `hide` option (closed: fixed)"&gt;#29632&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [29879]: Fix support for the `hide` option in wpColorPicker, props tollmanz, ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 12 Oct 2014 00:50:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/29879</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/29879/1413075054798564</guid>
      <description>&lt;p&gt;
Fix support for the &lt;code&gt;hide&lt;/code&gt; option in wpColorPicker, props tollmanz, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29632" title="#29632: defect (bug): wpColorPicker does not respect `hide` option (closed: fixed)"&gt;#29632&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #29632 (wpColorPicker does not respect `hide` option) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 12 Oct 2014 00:50:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29632#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29632#comment:6/1413075029703637</guid>
      <description>&lt;p&gt;
This looks like a typo, the &lt;code&gt;hide&lt;/code&gt; option is set in the defaults but never used.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29358 (Remove the 'accesskey` attributes from Quicktags buttons) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 12 Oct 2014 00:46:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29358#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29358#comment:5/1413074787258996</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29878" title="Quicktags: remove `accesskey` attributes the buttons and don't add ..."&gt;29878&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Quicktags: remove &lt;code&gt;accesskey&lt;/code&gt; attributes the buttons and don't add empty &lt;code&gt;title&lt;/code&gt; attributes, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29358" title="#29358: defect (bug): Remove the 'accesskey` attributes from Quicktags buttons (closed: fixed)"&gt;#29358&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [29878]: Quicktags: remove `accesskey` attributes the buttons and don't add ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 12 Oct 2014 00:46:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/29878</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/29878/1413074786489431</guid>
      <description>&lt;p&gt;
Quicktags: remove &lt;code&gt;accesskey&lt;/code&gt; attributes the buttons and don't add empty &lt;code&gt;title&lt;/code&gt; attributes, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29358" title="#29358: defect (bug): Remove the 'accesskey` attributes from Quicktags buttons (closed: fixed)"&gt;#29358&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>wp-css-check.patch attached to Ticket #29792</title>
      
        <dc:creator>x2048</dc:creator>

      <pubDate>Sun, 12 Oct 2014 00:39:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29792/wp-css-check.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29792/wp-css-check.patch/1413074365334600</guid>
      <description>&lt;p&gt;
A new version of the wp-css-check tool. Now also checks for CSS property syntax (e.g. mistakes like "width :100px"). Also checks for !imporant properties without comments.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29806 (Focus (continued)) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Sun, 12 Oct 2014 00:39:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29806#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29806#comment:32/1413074342070078</guid>
      <description>&lt;p&gt;
It is a button now. But it's turned 'on' by default. 'on' is the wrong word really, it more like auto/off. We'll probably merge this with the editor scrolling setting.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I've often found myself needing to click "Pages" in the middle of typing content, and having to click out of focus mode and wait for the animation to finish would be a bit much work for a UI feature that I did not request at that moment.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It doesn't require a click to fade out (unless you're talking about touch?), just moving your mouse outside of the editor should trigger the fade in. And by the time you mouse reaches the button you want to click, the animation should be mostly done. Even if it's not 100% done, everything is clickable again form the moment the animation starts.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29792 (Grunt: Add a precommit task to check for CSS syntax errors) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Sun, 12 Oct 2014 00:36:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29792#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29792#comment:17/1413074187619836</guid>
      <description>&lt;p&gt;
In &lt;a href="https://core.trac.wordpress.org/attachment/ticket/29792/29792.patch"&gt;29792.patch&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Adds &lt;code&gt;.csslintrc&lt;/code&gt; file with the rules per Nacin's suggested settings in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29792#comment:11" title="Comment 11"&gt;comment 11&lt;/a&gt;, also explicitly declares the other available &lt;a class="ext-link" href="https://github.com/CSSLint/csslint/wiki/Rules"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;rules&lt;/a&gt; as &lt;code&gt;true&lt;/code&gt; for completeness/verbosity
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Adds &lt;code&gt;grunt-contrib-csslint&lt;/code&gt; to &lt;code&gt;package.json&lt;/code&gt; &lt;a class="ext-link" href="https://github.com/gruntjs/grunt-contrib-csslint"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/gruntjs/grunt-contrib-csslint&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;New Grunt task &lt;code&gt;grunt csslint&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Grunt sub tasks &lt;code&gt;grunt csslint:core&lt;/code&gt; and &lt;code&gt;grunt csslint:build&lt;/code&gt; to lint CSS files in respective &lt;code&gt;/src&lt;/code&gt; and &lt;code&gt;/build&lt;/code&gt; folders
&lt;ul&gt;&lt;li&gt;&lt;code&gt;wp-admin/css/*.css&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;wp-content/themes/twenty{ten,eleven,twelve,thirteen,fourteen,fifteen}/**/*.css&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;wp-includes/css/*.css&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Adds &lt;code&gt;grunt csslint:core&lt;/code&gt; to precommit task &lt;code&gt;grunt precommit&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Adds &lt;code&gt;grunt csslint:build&lt;/code&gt; to both &lt;code&gt;grunt rtl&lt;/code&gt; and &lt;code&gt;grunt colors&lt;/code&gt; tasks as a psuedo CSS validator after CSSJanus, SASS, and AutoPrefixer compilers have parsed existing CSS/SASS files.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Adds &lt;code&gt;grunt csslint:core&lt;/code&gt; to Grunt build task &lt;code&gt;grunt&lt;/code&gt;/&lt;code&gt;grunt build&lt;/code&gt; before other CSS tasks are run
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Adds &lt;code&gt;grunt csslint:build&lt;/code&gt; to Grunt build task &lt;code&gt;grunt&lt;/code&gt;/&lt;code&gt;grunt build&lt;/code&gt; after other CSS tasks have ran
&lt;/li&gt;&lt;/ul&gt;&lt;hr /&gt;
&lt;p&gt;
Notes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If testing this patch in your workflow you may need to add &lt;code&gt;--force&lt;/code&gt; to the task &lt;code&gt;grunt precommit&lt;/code&gt; to get past any current errors until Core patches existing CSS issues per the CSS Lint rules here
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;A few tweaks are needed to existing Grunt watch tasks to include support for this, including it in this &lt;code&gt;29792.patch&lt;/code&gt; kind of made things rather funky as most of the existing CSS tasks need updating also to accommodate this.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Included in the patch are all WordPress Core themes, Twenty Ten, Eleven, Twelve, Thirteen, Fourteen, and Fifteen
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29908 (date_query inclusive logic still not quite right) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sun, 12 Oct 2014 00:35:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29908#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29908#comment:1/1413074153714586</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Confirmed. See &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/29908/29908.test.patch" title="Attachment '29908.test.patch' in Ticket #29908"&gt;29908.test.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/29908/29908.test.patch" title="Download"&gt;â€‹&lt;/a&gt; for an automated test that illustrates the issue.
&lt;/p&gt;
&lt;p&gt;
The root of the problem is that when you pass a string value as 'before' or 'after', no "inclusive" logic is run: it's converted to 'Y-m-d H:i:s' and passed back to the SQL generator. See line 349.
&lt;/p&gt;
&lt;p&gt;
There are a couple ways to fix this for WP. Probably the most thorough is to convert string values into year/month/day/hour/minute/second arrays, and then run it through the rest of the logic of &lt;code&gt;build_mysql_datetime()&lt;/code&gt; to convert it back to MySQL format.
&lt;/p&gt;
&lt;p&gt;
magicroundabout - For your specific case, you can workaround this issue by either (a) using an array &lt;code&gt;'before' =&amp;gt; array( 'year' =&amp;gt; 2013, 'month' =&amp;gt; 10, 'day' =&amp;gt; 13 )&lt;/code&gt;, or (b) creating a more precise date string &lt;code&gt;'before' =&amp;gt; '2013-01-13 23:59:59'&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>29792.patch attached to Ticket #29792</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Sun, 12 Oct 2014 00:33:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29792/29792.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29792/29792.patch/1413073998011740</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>29908.test.patch attached to Ticket #29908</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sun, 12 Oct 2014 00:29:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29908/29908.test.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29908/29908.test.patch/1413073791472237</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29149 (3.9.2: multiple update notification e-mails) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Sun, 12 Oct 2014 00:25:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29149#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29149#comment:3/1413073547183641</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28167 (Intermittent hanging of scripts when loading plugins.php or update-core.php) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 12 Oct 2014 00:25:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28167#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28167#comment:4/1413073508205000</guid>
      <description>invalid: &lt;p&gt;
Unfortunately this doesn't really provide much of an insight into the issue, and doesn't appear to be a WordPress issue, rather it's a server configuration or PHP incompatibility (as the reporter noted).
&lt;/p&gt;
&lt;p&gt;
I don't think there's anything we can do here, other than agree that this instance of PHP is having problems, most likely during HTTP requests, it could be a PHP bug, a ubuntu bug, or anything else.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #29931 (Broken attachment page links for files attached to "Auto Draft" posts) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Sun, 12 Oct 2014 00:22:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29931#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29931#comment:2/1413073323329617</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17890 ("Add New Site" screen reports invalid email addresses as missing) closed</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 12 Oct 2014 00:21:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17890#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17890#comment:8/1413073262844897</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29877" title="Differentiate between invalid and missing admin emails when adding a ..."&gt;29877&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Differentiate between invalid and missing admin emails when adding a new site&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Check the emptiness of the admin email before using &lt;code&gt;sanitize_email()&lt;/code&gt; and &lt;code&gt;is_email()&lt;/code&gt; to determine if the address is valid.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17890" title="#17890: defect (bug): &amp;#34;Add New Site&amp;#34; screen reports invalid email addresses as missing (closed: fixed)"&gt;#17890&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [29877]: Differentiate between invalid and missing admin emails when adding a ...</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 12 Oct 2014 00:21:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/29877</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/29877/1413073262225497</guid>
      <description>&lt;p&gt;
Differentiate between invalid and missing admin emails when adding a new site
&lt;/p&gt;
&lt;p&gt;
Check the emptiness of the admin email before using &lt;code&gt;sanitize_email()&lt;/code&gt; and &lt;code&gt;is_email()&lt;/code&gt; to determine if the address is valid.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17890" title="#17890: defect (bug): &amp;#34;Add New Site&amp;#34; screen reports invalid email addresses as missing (closed: fixed)"&gt;#17890&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #29931 (Broken attachment page links for files attached to "Auto Draft" posts) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Sun, 12 Oct 2014 00:20:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29931#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29931#comment:1/1413073223655490</guid>
      <description>&lt;p&gt;
This was wontfix'd at &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22671" title="#22671: defect (bug): Attachment pages 404 for media attached to an &amp;#34;Auto Draft&amp;#34; (closed: wontfix)"&gt;#22671&lt;/a&gt; but I would support another review.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17254 (Contributors should be able to upload) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sun, 12 Oct 2014 00:18:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17254#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17254#comment:7/1413073109535905</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hiding the Featured Image metabox from contributors in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29402" title="Don't show the Featured Image metabox for users with the `contributor` ..."&gt;[29402]&lt;/a&gt; really just further shielded this issue. Do we want to pursue this or table it for consideration later?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29933 (Undefined index: hook_suffix on WP_List_Table) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 12 Oct 2014 00:12:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29933#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29933#comment:1/1413072723059588</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Could you provide a piece of code to reproduce the issue?
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;$hook_suffix&lt;/code&gt; is only set after &lt;code&gt;admin_init&lt;/code&gt;, you're probably calling &lt;code&gt;WP_Screen::get()&lt;/code&gt; too early.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27353 (My Sites Menu shows Main Site Twice rather than showing sub site) closed</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sun, 12 Oct 2014 00:09:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27353#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27353#comment:2/1413072581962522</guid>
      <description>invalid: &lt;p&gt;
I'm also unable to reproduce this problem. Feel free to reopen if you continue to have problems.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #23951 (Add filter to all sidebar widget content) closed</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sun, 12 Oct 2014 00:08:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23951#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23951#comment:3/1413072487274077</guid>
      <description>wontfix: &lt;p&gt;
No activity in 7 months, and the &lt;code&gt;widget_display_callback&lt;/code&gt; filter should suffice here.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #28063 ('dayofweek' deviates from ISO-8601) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sun, 12 Oct 2014 00:06:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28063#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28063#comment:2/1413072399096608</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the patches, and ugh. :)
&lt;/p&gt;
&lt;p&gt;
You are correct that we can't change the behavior of the existing parameter. 'dayofweek' has to stay the way it is.
&lt;/p&gt;
&lt;p&gt;
I lean toward adding a new parameter, and at the same time not deprecating 'dayofweek'. I don't think there's anything wrong with having formal support for both the MySQL standard and the ISO standard. So I definitely would not remove the documentation or unit test for 'dayofweek' as you've done in your patches. If anything, I would expand the relevant documentation to make it clearer what the param does. We should do this regardless of whether we add another param.
&lt;/p&gt;
&lt;p&gt;
I'm not thrilled with the choice of 'weekday' for the name of the ISO-compliant param. One, it's got a connotation of M-F. Two, as noted in your patch, MySQL's &lt;code&gt;WEEKDAY&lt;/code&gt; sets Monday to index 0 and Tuesday to 1. (Like I said, ugh.) How about something like 'dayofweek_iso'?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27568 (WordPress automatic updates are breaking unix rights) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sun, 12 Oct 2014 00:06:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27568#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27568#comment:5/1413072367742215</guid>
      <description>&lt;p&gt;
@zigooo: Care to followup here following the steps in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27568#comment:4" title="Comment 4"&gt;comment:4&lt;/a&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16858 (Usage of HTTP_HOST in the administration) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sun, 12 Oct 2014 00:03:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16858#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16858#comment:17/1413072225803231</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@dd32: Care to followup here?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>