<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #14545 (move wp-settings from wp-config to wp-load) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 05 Aug 2010 23:56:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14545#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14545#comment:2/1281052610000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14545#comment:1" title="Comment 1"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Additionally, this is more of an education thing. The line says don't add anything past it. What else can we do?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Break a few sites that use hopelessly obsolete plugins? The suggested approach seems right in terms of backwards compat IMO. I'd suggest using a slightly better metric, like a function or class exists call. Something that we're sure won't get overridden by a plugin, or an API change, basically. But it's really nit picking.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14545 (move wp-settings from wp-config to wp-load) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 05 Aug 2010 23:44:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14545#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14545#comment:1/1281051883000000</guid>
      <description>&lt;p&gt;
This isn't backwards compatible... More than a few plugins call wp-config.php directly, hence the additional conditional ABSPATH define. This used to be the proper way to deeply integrate, now you should use either wp-load or wp-blog-header depending on your objective, or in most cases admin-ajax or admin-post. wp-load was created specifically so wp-config can be moved up one directory, so WP can be used as an SVN external.
&lt;/p&gt;
&lt;p&gt;
The only way to handle this is to deliberately define certain constants as false where defining the constant will not produce incompatibilities with plugins. For example, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/14000" title="Prevent half-baked loading of MS that would happen when constants are ..."&gt;[14000]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Additionally, this is more of an education thing. The line says don't add anything past it. What else can we do?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>14545.diff attached to Ticket #14545</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Thu, 05 Aug 2010 23:34:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14545/14545.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14545/14545.diff/1281051277000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14545 (move wp-settings from wp-config to wp-load) created</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Thu, 05 Aug 2010 23:33:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14545</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14545/1281051205000000</guid>
      <description>&lt;p&gt;
In 3.0 we added a number of constants which are manually added to wp-config.php. Some people are adding these to the bottom of the file after the stop editing &amp;amp; load of wp-settings.
&lt;/p&gt;
&lt;p&gt;
This causes unpredictable behavior with some constants (ex. SUNRISE is defined in the admin area but sunrise.php isn't executed because SUNRISE was defined after loading wp-settings.
&lt;/p&gt;
&lt;p&gt;
Attached is a patch that moves wp-settings.php to wp-load.php.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14540 (Should be able to reply to a comment which is in the maximal possible nest) reopened</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 05 Aug 2010 23:28:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14540#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14540#comment:6/1281050890000000</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 05 Aug 2010 23:04:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:29/1281049459000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14513#comment:18" title="Comment 18"&gt;mikeschinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Denis, another idea besides a specific table could be to simply add a &lt;code&gt;parent_id&lt;/code&gt; to &lt;code&gt;wp_term_taxonomy&lt;/code&gt; and overload it to allow for post relationships?  I don't know if doing so will have unintended consequences with normal usage of the taxonomy system as the &lt;code&gt;nav_menu_item&lt;/code&gt; post type did for plugin queries and such, but it might be manageable?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well, if you "must" know, the reasoning behind the suggested table set above breaks down to my own research, years back, in semantic indexing algorithms. In essence, the most generic set of tables you can have amount to a nodes (id, parent, type) table and a meta table on the same. It breaks down to the fact that at some point you need to store data in a relationship (say, how much merchandise was moved from a premise to the next), and it follows that a relationship is a node in it's own right (or vice versa).
&lt;/p&gt;
&lt;p&gt;
However, the same research (never published, sorry) also showed that it didn't scale well, and that two tables (plus the obvious meta) As described further up scaled a lot better for data designed to be displayed on a screen (in that particular case, the base case was a bookstore db for web use), because in web use cases it's rare to store data in a relationship (besides the relationship itself).
&lt;/p&gt;
&lt;p&gt;
Fwiw, I've been periodically reinvestigating the topic as a hobby since then, until I came to a final (and dismissive, I'll confess) conclusion that it's a lot better to have multitudes of tables, with a generic API that knows which table to hit. At this point, however, you need to take into account the assumptions behind WP, ie that a db is a huge array that stores generic information to be processed by php, rather than some relational database management system that, low and behold, might contain an sql trigger.
&lt;/p&gt;
&lt;p&gt;
It thus seems, to me, that things point towards using two tables, nodes and relationships (whatever they're called then, plus two meta tables), for storage at some point. Maybe in a year, maybe in five, but I trust we'll eventually get there. And when we get there, posts and terms will be merged at the same time or shortly after because it'll make little sense to some that we've duplicate code all over the place.
&lt;/p&gt;
&lt;p&gt;
Based on the replies I don't sense the slightest interest for 3.1 though. Or 3.2, for that matter. Maybe this should get revisited when php6 returns a fatal error when checking for magic quotes? It might be a good time to break absolutely everything...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14508 (Always require wp-db.php) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 05 Aug 2010 22:40:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14508#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14508#comment:11/1281048039000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14508#comment:10" title="Comment 10"&gt;wpmuguru&lt;/a&gt;:
Switching this around so DB plugins can inherit the default wpdb class should make it so that DB plugins won't need to be updated with every release of WordPress.
&lt;/p&gt;
&lt;p&gt;
That's actually doable now, though HyperDB demonstrates how it is a cheap hack. (It sets $wpdb to true, then includes wp-db.php.) The performance benefit here would be for opcode caches, by taking the include of wp-db out from behind a conditional. And, of course, it makes it a lot easier to extend wpdb, which as the hack indicates isn't really supported well at the moment.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14508 (Always require wp-db.php) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Thu, 05 Aug 2010 22:34:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14508#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14508#comment:10/1281047647000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14508#comment:7" title="Comment 7"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
These DB drop-ins break with almost every release anyway. It's tempting to add a wpdb API revision and die if db.php doesn't declare compat with that revision.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think 2.8 was the first major release in quite a while where the DB wasn't changed. Switching this around so DB plugins can inherit the default wpdb class should make it so that DB plugins won't need to be updated with every release of WordPress.
&lt;/p&gt;
&lt;p&gt;
+1 from this DB plugin dev :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 05 Aug 2010 21:03:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:28/1281042202000000</guid>
      <description>&lt;p&gt;
Oh, and yeah, I looked at your code on gist and it's NOT similar to what I'm doing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 05 Aug 2010 21:01:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:27/1281042099000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14513#comment:26" title="Comment 26"&gt;mikeschinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
you are still ignoring the problem of posts getting renamed by users that have mirrored terms that are shared by other taxonomies.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I thought we covered that. Why do you keep bringing up an argument that has already been addressed?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14540 (Should be able to reply to a comment which is in the maximal possible nest) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Thu, 05 Aug 2010 21:00:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14540#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14540#comment:5/1281042050000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14540#comment:2" title="Comment 2"&gt;jane&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That would completely undermine the meaning of the reply to link. The choice on allowing replies is up to the site owner. If they've state they don't want replies nested past a certain level, it would be completely irresponsible for us to make core 'override' that setting by still showing a reply link. People are smart enough to see that there is no reply link on one message but that there is one a level up, and just use that.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It might be worth pointing out that aside from the "reply" link, this is current behavior.  I mean if you reply to a comment too deep and manually change the submitted parent comment ID, it does what mark-k describes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 05 Aug 2010 20:23:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:26/1281039780000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14513#comment:25" title="Comment 25"&gt;westi&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Even with all the examples above I still don't see why the current taxonomy system can't be used (along with custom post types) to provide what you need.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Because it doesn't.  With complete respect please try and implement a few real world sites that need this functionality and then let us know if you still feel the same, please.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If you want to store extra data about a particular term within a taxonomy the use a custom post type to store that information and have it linked to the term.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's not a primary concern of the use-case this proposal addresses.  That part was a tangent; the core here is needing a robust and performant way to related two different post records in a many-to-many scenario.  Linking them through a system that requires 6 levels of indirection (&lt;em&gt;post-&amp;gt;term_relationship-&amp;gt;term_taxonomy-&amp;gt;term-&amp;gt;term-&amp;gt;term_taxonomy-&amp;gt;term_relationship-&amp;gt;post&lt;/em&gt;) rather than one level (&lt;em&gt;post-&amp;gt;post_relationship-&amp;gt;post&lt;/em&gt;) is just asking for the downsides that come with too much complexity.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If you implement the ui correctly the user can't break these links i.e. you only give them one way to edit things.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not so concerned about the users as I am about other plugins.  You are suggesting we build a house of cards.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Taking one of these examples:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;A conference website...&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
You hide the creation ability of the two taxonomies from the users and just let them put the existing ones on to relevant posts using a selection ui on the post edit page.
&lt;/p&gt;
&lt;p&gt;
They add new entries to the Taxonomies by creating custom posts of the matched types.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Although the conference example is the least compelling of all them (hence it shouldn't surprise me you picked on it :) you are still ignoring the problem of posts getting renamed by users that have mirrored terms that are shared by other taxonomies.  It's all a mess. What I struggle with is why I can see the problem yet (most) others cannot.  Maybe I'm wrong, or maybe my specific experience in these use-cases has given me insight that your (potential lack of?) experience in these use-cases has not?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 05 Aug 2010 20:08:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:25/1281038884000000</guid>
      <description>&lt;p&gt;
Even with all the examples above I still don't see why the current taxonomy system can't be used (along with custom post types) to provide what you need.
&lt;/p&gt;
&lt;p&gt;
If you want to store extra data about a particular term within a taxonomy the use a custom post type to store that information and have it linked to the term.
&lt;/p&gt;
&lt;p&gt;
If you implement the ui correctly the user can't break these links i.e. you only give them one way to edit things.
&lt;/p&gt;
&lt;p&gt;
Taking one of these examples:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;A conference website can have sessions, sponsors, presenters, time slots and rooms. A session can have one or more presenters and be presented in one or more time slots and one room per time slot ,and a presenter can represent a sponsor or not.&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Post types: Sessions, Sponsors, Presenters, ( maybe Rooms)
Taxonomies: Presenters (on Sessions), Sponsors (on Presenters).
&lt;/p&gt;
&lt;p&gt;
You hide the creation ability of the two taxonomies from the users and just let them put the existing ones on to relevant posts using a selection ui on the post edit page.
&lt;/p&gt;
&lt;p&gt;
They add new entries to the Taxonomies by creating custom posts of the matched types.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>vteixeira</dc:creator>

      <pubDate>Thu, 05 Aug 2010 20:00:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:24/1281038435000000</guid>
      <description>&lt;p&gt;
I just want to add some considerations:
&lt;/p&gt;
&lt;p&gt;
1- New proposed functions that would really get wordpress to the next level always face difficulties for getting into core.
&lt;/p&gt;
&lt;p&gt;
2- Instead of just adding one table to the database some people prefer to hack with the way taxonomies and post types work... not the best approach.
&lt;/p&gt;
&lt;p&gt;
3- Maybe it's time to think of Canonical plugins more seriously. If the functionality is not considered as a 'must have stuff' as Jane said, then this could be a canonical plugin, which could be implemented faster and without all the restrictions faced when something is trying to get into Core. And then developers could rely on that plugin and build custom functionality and other plugins on top of it.
&lt;/p&gt;
&lt;p&gt;
4- I really think that right now all this Custom Post Type and Custom Taxonomy stuff are incomplete. I'm building two sites right now with not so complicated architecture and I'm having a hard time to get it to work the way I want with custom post types and taxonomies. We don't have different types of columns on the database to store different types of data, everything is stored on a text column - come on this is not a real world cms usage, we should have columns for at list some different data types - text, integer, double, datetime.
&lt;/p&gt;
&lt;p&gt;
5- I also proposed some way to filter taxonomies by post types on the permalink structure (yes, it's not possible right now). See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14497" title="#14497: enhancement: Relate a taxonomy to a post type on menus (closed: wontfix)"&gt;#14497&lt;/a&gt; and &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/14502" title="#14502: enhancement: Enable /post-type/taxonomy/term/ permalinks (new)"&gt;#14502&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
6- another thing missing that I didn't see anybody talking about yet is taxonomy relationship. Imagine I have a taxonomy called Country, another called States and then Cities. There's no way to relate them so one can depend on another. Not advanced stuff.
&lt;/p&gt;
&lt;p&gt;
If wordpress is going on the CMS way, then it must be a complete and full featured cms without imposing restrictions to the site builder. People should not prefer wordpress over other cms just because of the better UI, but because of the features and flexibility also.
&lt;/p&gt;
&lt;p&gt;
Just my thoughts...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14544 (Add action to post_comment_status_meta_box()) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 05 Aug 2010 19:21:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14544#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14544#comment:2/1281036098000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14544 (Add action to post_comment_status_meta_box()) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 05 Aug 2010 19:21:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14544#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14544#comment:1/1281036065000000</guid>
      <description>&lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>14544.diff attached to Ticket #14544</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 05 Aug 2010 19:18:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14544/14544.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14544/14544.diff/1281035926000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14544 (Add action to post_comment_status_meta_box()) created</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 05 Aug 2010 19:18:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14544</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14544/1281035908000000</guid>
      <description>&lt;p&gt;
Add action to post_comment_status_meta_box() so that more options can be added via plugin.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 05 Aug 2010 18:35:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:23/1281033338000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14513#comment:21" title="Comment 21"&gt;matt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Could you describe some use cases for this besides manually-curated related posts?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Absolutely, thanks for asking. Here is what I posted to wp-hackers on the same subject. Not everything mentioned would be a post of need to be related in the manner proposed but each example has at least two pairs of post types that need to be related and the first 3 are actual projects I've worked on since v3.0 went to beta:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;em&gt;1. A law firm website has attorneys, practice areas, articles, case studies, and events/presentations.  Each attorney is in one or more practice areas.  Each article and each case study can be attached to one or more attorneys and relevant to one or more practice areas.  Each event/presentation can have one or more attorneys presenting and can be represented one one or more practice areas' calendars.&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;em&gt;2.) A conference website can have sessions, sponsors, presenters, time slots and rooms. A session can have one or more presenters and be presented in one or more time slots and one room per time slot ,and a presenter can represent a sponsor or not.&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;em&gt;3.) A website listing restaurant menus can have restaurants, locations, menus. A restaurant can have one or more locations and one or more menus (breakfast, lunch, dinner, catering, etc.) A menu can apply to all locations for a restaurant or only a specific location.&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;em&gt;4.) A movie website could have movies and person-roles where a person-role could be an actor, producer, cinematographer, casting, film editing, costumer, set designer, composer, etc.&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;em&gt;5.) A hospital website has doctors and departments.  Each department can have multiple doctors and each doctor can work in multiple departments.&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;em&gt;6.) A radio station website could have stations and disc jockey's where a station could have multiple disc jockeys and each disc jockey could appear on multiple stations (given how radio works these days.)&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I can give you many other examples if you need it. I've advocated with many business owners about using WordPress for their websites (often at Meetups) and I've identified obvious use-case for post relationships for every single prospective business person I've spoken to. This functionality would fill in one of the remaining few missing pieces businesses need without having to hire a developer to use WordPress for their entire website instead of just for their blog. And I expect the businesses I've spoken with are far from unique.
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;(For developers who may fear adding this will reduce their ability to find clients to pay for enhancements consider that the more businesses that start to use WordPress the more of them will identify functionality specific to their business they need that does require a developer. So let's give them the low value generic things that are not "for free" and they'll have more money to spend on the higher value business specific things.)
&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
Actually, if there were only two (2) things left that we could ever add to WordPress I'd vote for 1.) something to address post relationships (which I will contribute code if given the agreed direction) and 2.) &lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/12935"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;improved URL routing&lt;/a&gt; (which I plan to work on in the near future.)  Beyond that, WordPress is pretty much baked, IMO. :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 05 Aug 2010 18:10:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:22/1281031828000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14513#comment:17" title="Comment 17"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Storing the post_meta table. It won't scale much and, as a cursory look at support threads of scribu's plugin reveal, this results in poor reciprocal relationship management.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
"Cursory looks" very weak base for arguments make.
&lt;/p&gt;
&lt;p&gt;
The issues you saw were either completely UI related or I was using my own API incorrectly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>matt</dc:creator>

      <pubDate>Thu, 05 Aug 2010 18:07:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:21/1281031670000000</guid>
      <description>&lt;p&gt;
Could you describe some use cases for this besides manually-curated related posts?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 05 Aug 2010 17:39:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:20/1281029950000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14513#comment:19" title="Comment 19"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The problem I have been running into is ensuring that adding of a
term doesn't fail because of a pre-existing slug that has been added for a
post tag.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
While not exactly intuitive via the existing APIs, it's entirely possible to add a term_taxonomy relationship that uses the term object as a post tag, thus the same slug, etc. Terms (as defined by the schema) can exist in more than one taxonomy.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, but then if I edit the mirrored post's title and automatically update the term's name and slug it modifies the term for the post tag too (the user requirement is, by definition that the two remain in-sync.) Clearly changing the post_tag would be an undesirable side effect, no?
&lt;/p&gt;
&lt;p&gt;
I guess we could run code to create a new term and update all &lt;code&gt;wp_term_taxonomy&lt;/code&gt; records that use the term as a tag but that's starting to feel more and more kludgy; what if that update fails for some reason?  Yes we can code referential integrity in PHP but the more we do it in increasingly complex ways the more we are asking for corrupted user data and yes, disenchanted users.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14212 (Hide more meta boxes by default) updated</title>
      
        <dc:creator>mdawaffe</dc:creator>

      <pubDate>Thu, 05 Aug 2010 17:36:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14212#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14212#comment:2/1281029771000000</guid>
      <description>&lt;p&gt;
+1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 05 Aug 2010 17:26:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:19/1281029197000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
The problem I have been running into is ensuring that adding of a
term doesn't fail because of a pre-existing slug that has been added for a
post tag.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
While not exactly intuitive via the existing APIs, it's entirely possible to add a term_taxonomy relationship that uses the term object as a post tag, thus the same slug, etc. Terms (as defined by the schema) can exist in more than one taxonomy.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 05 Aug 2010 17:20:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:18/1281028825000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14513#comment:14" title="Comment 14"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
You mention that using a taxonomy would be hard because you have to keep post slugs syncronized. I have tried that approach in the past and, indeed, data got corrupted pretty fast.
&lt;/p&gt;
&lt;p&gt;
That's why I use the post ID instead. Since the ID never changes, keeping things consistent is a lot easier. You just have to delete the term when the post is deleted.
&lt;/p&gt;
&lt;p&gt;
Take a look at the most recent version of my plugin to see what I mean:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://plugins.trac.wordpress.org/browser/posts-to-posts/trunk/core.php?rev=271772"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://plugins.trac.wordpress.org/browser/posts-to-posts/trunk/core.php?rev=271772&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's what I'm already doing (using a post ID) as seen in &lt;a class="ext-link" href="http://gist.github.com/507345"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the code I posted yesterday to gist&lt;/a&gt; for Lox. The problem I have been running into is ensuring that adding of a term doesn't fail because of a pre-existing slug that has been added for a post tag. Sure I can just add a "-2" or whatever, but the client is very anal (as most clients are, and just like me :) and they want the taxonomy slugs to match (if we are using taxonomy then we should be using the taxonomy system URLs, etc.)  It's basically a rock and a hard place. So while I agree using taxonomy is useful in lieu of having a better method, it is non-optimal.
&lt;/p&gt;
&lt;p&gt;
Using taxonomy for this requires telling your client "&lt;em&gt;No, sorry, we just can't do that&lt;/em&gt;" and I'd rather have a system where I can always say "Y&lt;em&gt;es, of course we can do that (it might cost more, but we can do it if it is important to you.)&lt;/em&gt;"  BTW, I think this is the same reason prettyboymp became disenchanted with using the taxonomy system to relate posts.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14513#comment:15" title="Comment 15"&gt;jane&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@Mike. We don't put everything in core. It's meant to be the must-have stuff, and extensible for specific use cases. A use case that is growing is not the same as one that is applicable to all. Get a good plugin out there that makes the table you want, see how many people adopt it. If it's an overwhelming number that would make the case. Adding tables that most of the 20 million+ users probably don't need doesn't make sense. When it gets to a point that it looks like a majority of them really do need that, as shown by plugin stats, that would be a good time to consider it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What Denis-de-Bernardy said. :)
&lt;/p&gt;
&lt;p&gt;
Seriously, using that same argument we would not have gotten custom post types because most of the 20 million+ users don't (realize they) need them. (Precedent set. :) Future, post relationships are infrastructure not a feature.  Features are plugin territory, infrastructure is not. Actually, this is simply rounding out missing functionality from the evolution of post types, not as a feature in-and-of itself.  Honestly I think maybe you have an automat&lt;strong&gt;&lt;em&gt;T&lt;/em&gt;&lt;/strong&gt;ic (pun intended?) Pavlovian response to any new features: &lt;strong&gt;First&lt;/strong&gt; say "&lt;em&gt;No, make it a plugin&lt;/em&gt;" &lt;em&gt;Then&lt;/em&gt; actually understand the proposal. (I say that in good natured jest, please take it that way. :-)
&lt;/p&gt;
&lt;p&gt;
By analogy, consider &lt;a class="ext-link" href="http://wordpress.org/extend/ideas/topic/threaded-comments"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the idea for threaded comments&lt;/a&gt;. Mark Jaquith's &lt;a class="ext-link" href="http://wordpress.org/extend/ideas/topic/threaded-comments#post-165"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;suggestion of 3 years ago&lt;/a&gt; was for people to roll their and he points out that the field "&lt;code&gt;comment_parent&lt;/code&gt;" was there for them to be able to do so. Had &lt;code&gt;comment_parent&lt;/code&gt; not been there, his answer would have needed to be "&lt;em&gt;Add your own table&lt;/em&gt;" which I think most of us agree is not something to encourage, right? This is much the same, we need a robust place to store post-to-post relationships. Adding a table may not be the right solution, but a solution is needed even though not all 20 million people will benefit.
&lt;/p&gt;
&lt;p&gt;
Another analogy would be if I asked for the state to build a road between Macon and Columbus and you petitioned against it on the grounds that few people not traveling by car between the two cities. Clearly that's a chicken &amp;amp; egg problem; people don't travel by car between the two as frequently as say between Macon and Savannah or Macon and Valdosta because there simply isn't an easy way to get there. If there were a road there you can be certain more people would travel between the two. That doesn't mean it makes sense to build the road just that the justification for not doing so would have been faulty, same as in this case.
&lt;/p&gt;
&lt;p&gt;
OTOH if WordPress had a built-in system to allow a plugin dev to "require" other plugins and then automatically and transparently have them downloaded and activated maybe I'd be able to agree with you but right now: "&lt;em&gt;What Denis said&lt;/em&gt;."
&lt;/p&gt;
&lt;p&gt;
Now, can we get on to discussing an optimal implementation for post relationship and also when (and even if) it makes sense to add to core? :)
&lt;/p&gt;
&lt;p&gt;
Denis, another idea besides a specific table could be to simply add a &lt;code&gt;parent_id&lt;/code&gt; to &lt;code&gt;wp_term_taxonomy&lt;/code&gt; and overload it to allow for post relationships?  I don't know if doing so will have unintended consequences with normal usage of the taxonomy system as the &lt;code&gt;nav_menu_item&lt;/code&gt; post type did for plugin queries and such, but it might be manageable?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10940 (Default timezone should be set for PHP5) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Thu, 05 Aug 2010 16:31:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10940#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10940#comment:22/1281025888000000</guid>
      <description>&lt;p&gt;
eitch: Be patient with this one. WP 3.2 is going to drop support for PHP 4. Since the only reason for this odd fix is PHP 4 compatibility, it'll be possible to fix it properly after we're PHP 5 only.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14543 (Recent Posts Widget post count setting/display discrepancy) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 05 Aug 2010 16:20:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14543#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14543#comment:1/1281025246000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think the dashboard widgets properly adjust for the limit upon save. We should be doing the same here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14543 (Recent Posts Widget post count setting/display discrepancy) created</title>
      
        <dc:creator>Nao</dc:creator>

      <pubDate>Thu, 05 Aug 2010 16:18:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14543</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14543/1281025091000000</guid>
      <description>&lt;p&gt;
Recent Posts Widget can only display 1-15 posts.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-includes/default-widgets.php#L537"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/browser/trunk/wp-includes/default-widgets.php#L537&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
However, you can save any negative/positive integer from the widget setting field.
The number you can use there should be limited to the min (1) and max (15, if this remains so).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 05 Aug 2010 16:10:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:17/1281024618000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14513#comment:15" title="Comment 15"&gt;jane&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@Mike. Get a good plugin out there that makes the table you want, see how many people adopt it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Doing so is somewhat nonsensical in this particular instance. No plugin dev in his right mind would use (let alone search for) a plugin that adds an extra table to WP in order to write his own plugin.
&lt;/p&gt;
&lt;p&gt;
What he'll do instead is use dbDelta and create the table himself. (If only to spare his user base the hassle of needing to install two plugins in order to implement whatever he's coding.)
&lt;/p&gt;
&lt;p&gt;
FWIW, I can vaguely picture two approaches for n-n post2post relationships in WP:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Storing the post_meta table. It won't scale much and, as a cursory look at support threads of scribu's plugin reveal, this results in poor reciprocal relationship management.
&lt;/li&gt;&lt;li&gt;The taxonomy API, as in mapping each post to a term and then creating term2post relationships (a bit like we do with menus). But I've my doubts that the menus API can handle more than a hundred dozen menu items.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10940 (Default timezone should be set for PHP5) updated</title>
      
        <dc:creator>eitch</dc:creator>

      <pubDate>Thu, 05 Aug 2010 16:00:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10940#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10940#comment:21/1281024004000000</guid>
      <description>&lt;p&gt;
Since I didn't get any feedback, I'm going to be stuck with setting gmt_offset everytime I create a new blog. IMHO it's better than changing wp-settings.php directly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 05 Aug 2010 15:57:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:16/1281023876000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14481 (Shortcode Enhancements) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Thu, 05 Aug 2010 15:53:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14481#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14481#comment:18/1281023612000000</guid>
      <description>&lt;p&gt;
I'm assuming we'd still need to keep a stack of registered shortcodes so we can use those names in the regex? I've not a regular expressions guru by any means (I'm fine at writing them to meet my needs, but it ends there), so how advantageous is it to create the regex using the list of registered shortcode names?  Also, at what point (if any) does it become a problem (what if there are 1,000 shortcodes? 10,000?)? I know that the problems it may create are probably edge cases, but I'm curious.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14212 (Hide more meta boxes by default) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 05 Aug 2010 15:30:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14212#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14212#comment:1/1281022205000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14540 (Should be able to reply to a comment which is in the maximal possible nest) updated</title>
      
        <dc:creator>jane</dc:creator>

      <pubDate>Thu, 05 Aug 2010 15:03:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14540#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14540#comment:4/1281020606000000</guid>
      <description>&lt;p&gt;
@mark-k: Yes, it can be a PITA, but it the blog owner's choice, not ours. We should not try to make core override the blog owner's choice. It's their site; WP is just the underlying platform.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14540 (Should be able to reply to a comment which is in the maximal possible nest) updated</title>
      
        <dc:creator>mark-k</dc:creator>

      <pubDate>Thu, 05 Aug 2010 15:00:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14540#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14540#comment:3/1281020418000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14540#comment:2" title="Comment 2"&gt;jane&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That would completely undermine the meaning of the reply to link. The choice on allowing replies is up to the site owner. If they've state they don't want replies nested past a certain level, it would be completely irresponsible for us to make core 'override' that setting by still showing a reply link. People are smart enough to see that there is no reply link on one message but that there is one a level up, and just use that.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Jane, after there are several comments at the maximal nest it becomes a PITA to find the original comment, and reply to it, and while all of us might understand what is going behind the scene and act in appropriate way, for the common commenter it is totally not obvious.
If the semantics should be different than a "reply to", thats ok, but it will be nice if this problem will get some kind of solution.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14540 (Should be able to reply to a comment which is in the maximal possible nest) closed</title>
      
        <dc:creator>jane</dc:creator>

      <pubDate>Thu, 05 Aug 2010 14:45:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14540#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14540#comment:2/1281019519000000</guid>
      <description>wontfix: &lt;p&gt;
That would completely undermine the meaning of the reply to link. The choice on allowing replies is up to the site owner. If they've state they don't want replies nested past a certain level, it would be completely irresponsible for us to make core 'override' that setting by still showing a reply link. People are smart enough to see that there is no reply link on one message but that there is one a level up, and just use that.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>jane</dc:creator>

      <pubDate>Thu, 05 Aug 2010 14:42:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:15/1281019332000000</guid>
      <description>&lt;p&gt;
@Mike. We don't put everything in core. It's meant to be the must-have stuff, and extensible for specific use cases. A use case that is growing is not the same as one that is applicable to all. Get a good plugin out there that makes the table you want, see how many people adopt it. If it's an overwhelming number that would make the case. Adding tables that most of the 20 million+ users probably don't need doesn't make sense. When it gets to a point that it looks like a majority of them really do need that, as shown by plugin stats, that would be a good time to consider it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14353 (editor cuts off text at first german umlaut) updated</title>
      
        <dc:creator>christian_gnoth</dc:creator>

      <pubDate>Thu, 05 Aug 2010 14:04:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14353#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14353#comment:9/1281017065000000</guid>
      <description>&lt;p&gt;
for me any time after 16:00 o'clock germany time is ok.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14353 (editor cuts off text at first german umlaut) updated</title>
      
        <dc:creator>christian_gnoth</dc:creator>

      <pubDate>Thu, 05 Aug 2010 14:04:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14353#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14353#comment:8/1281017041000000</guid>
      <description>&lt;p&gt;
please log in to the blog above and test it by yourself - please tell at which time you would test, then I can give you a admin user. it happens with a admin user only, the other user types are working well!!!
as it is a wordpress mu installation, migrated to wp 3.0 you have access with a admin user to all blogs. so i would give you the access only for the time you test it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14542 (WordPress doesn't recognize my custom taxonomy) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 05 Aug 2010 13:38:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14542#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14542#comment:2/1281015499000000</guid>
      <description>invalid: &lt;p&gt;
This is a support question, not a bug. Your order of operations is likely wrong. I have posted in the thread.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14542 (WordPress doesn't recognize my custom taxonomy) updated</title>
      
        <dc:creator>drika.santos.sp</dc:creator>

      <pubDate>Thu, 05 Aug 2010 13:36:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14542#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14542#comment:1/1281015383000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14542 (WordPress doesn't recognize my custom taxonomy) created</title>
      
        <dc:creator>drika.santos.sp</dc:creator>

      <pubDate>Thu, 05 Aug 2010 13:35:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14542</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14542/1281015313000000</guid>
      <description>&lt;p&gt;
Please, I need some help to solve this:
&lt;a class="ext-link" href="http://wordpress.org/support/topic/wordpress-doesnt-recognize-my-custom-taxonomy?replies=2"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/wordpress-doesnt-recognize-my-custom-taxonomy?replies=2&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14540 (Should be able to reply to a comment which is in the maximal possible nest) updated</title>
      
        <dc:creator>markmcwilliams</dc:creator>

      <pubDate>Thu, 05 Aug 2010 11:46:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14540#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14540#comment:1/1281008765000000</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I can see some logic behind that, I'm sure there have been a few other Trac Tickets mention this too (don't have any #'s to hand though!)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14541 (Add boolean at remove_meta_box action) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 05 Aug 2010 11:44:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14541#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14541#comment:1/1281008644000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 05 Aug 2010 10:11:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:14/1281003101000000</guid>
      <description>&lt;p&gt;
@Mike and @Denis:
&lt;/p&gt;
&lt;p&gt;
You mention that using a taxonomy would be hard because you have to keep post slugs syncronized. I have tried that approach in the past and, indeed, data got corrupted pretty fast.
&lt;/p&gt;
&lt;p&gt;
That's why I use the post ID instead. Since the ID never changes, keeping things consistent is a lot easier. You just have to delete the term when the post is deleted.
&lt;/p&gt;
&lt;p&gt;
Take a look at the most recent version of my plugin to see what I mean:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://plugins.trac.wordpress.org/browser/posts-to-posts/trunk/core.php?rev=271772"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://plugins.trac.wordpress.org/browser/posts-to-posts/trunk/core.php?rev=271772&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>metabox.diff attached to Ticket #14541</title>
      
        <dc:creator>Rahe</dc:creator>

      <pubDate>Thu, 05 Aug 2010 09:10:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14541/metabox.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14541/metabox.diff/1280999408000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14541 (Add boolean at remove_meta_box action) created</title>
      
        <dc:creator>Rahe</dc:creator>

      <pubDate>Thu, 05 Aug 2010 09:09:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14541</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14541/1280999391000000</guid>
      <description>&lt;p&gt;
Add the possibility of getting the status of the remove_meta_box action by boolean.
Can be useful if you want to add/remove other metaboxes if one other is present or not.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 05 Aug 2010 08:49:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:13/1280998199000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14513#comment:10" title="Comment 10"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14513#comment:8" title="Comment 8"&gt;mikeschinkel&lt;/a&gt;:
I certainly agree that using taxonomies is unrealistic -- things are then broken, slow, awkward, etc. Then again, any generic posts relationship table I can think of would end up looking like:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;nodes (id, type)
&lt;/li&gt;&lt;li&gt;node2node (parent, child, type)
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Definitely another consideration.  I had hoped to others would propose alternate and possibly better implementations, as you just did. (I was actually surprised when some of the first response was "it's not needed.") So thanks.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14513#comment:12" title="Comment 12"&gt;Otto42&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Let's focus on getting terms (and comments) integrated with posts first. As that happens, then it might just turn out that we really need this along the way.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, that sounds like a great plan. Thanks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Thu, 05 Aug 2010 06:56:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:12/1280991373000000</guid>
      <description>&lt;p&gt;
I say to not close this, but to let it sit and stew for a while. I'm not convinced of a need for it, but I'm not convinced it's a bad idea either.
&lt;/p&gt;
&lt;p&gt;
Let's focus on getting terms (and comments) integrated with posts first. As that happens, then it might just turn out that we really need this along the way.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 05 Aug 2010 06:53:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:11/1280991238000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14513#comment:6" title="Comment 6"&gt;jane&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I can't see this as a real candidate for addition to core, given that the bulk of users would probably never need this. If I'm wrong, someone creating a plugin for it and showing wide adoption stats would convince me to reconsider.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Am I correct in assuming that this rigorous process led to introducing the capital P feature? :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14540 (Should be able to reply to a comment which is in the maximal possible nest) created</title>
      
        <dc:creator>mark-k</dc:creator>

      <pubDate>Thu, 05 Aug 2010 06:39:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14540</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14540/1280990393000000</guid>
      <description>&lt;p&gt;
When comments reach the maximal nesting, it is confusing for users which got used to having the ability to "reply to" as to how can they reply to those comments.
My suggestion is to keep the "reply to", but instead of creating a new level, to just append the new comment after the latest comment at the same level.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 05 Aug 2010 06:30:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:10/1280989858000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14513#comment:8" title="Comment 8"&gt;mikeschinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Does anyone else thinks post-to-post relationships are fairly niche? Surely not scribu, he wrote a plugin to address the use-case. Nacin points out that it is an "increasingly used case." Denis seems to imply that he believes it would be a viable use case (true?)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I certainly agree that using taxonomies is unrealistic -- things are then broken, slow, awkward, etc. Then again, any generic posts relationship table I can think of would end up looking like:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;nodes (id, type)
&lt;/li&gt;&lt;li&gt;node2node (parent, child, type)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
To me, things ought to look like the above in WP, with terms and posts getting merged at some point.
&lt;/p&gt;
&lt;p&gt;
In some respects, it's a horrible idea. But it's also the most generic and flexible. And considering the implicit assumption in WP that a DB is a gigantic array, I'd say we're heading in that direction anyway.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 05 Aug 2010 05:21:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:9/1280985669000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) reopened</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 05 Aug 2010 05:20:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:8/1280985603000000</guid>
      <description>&lt;p&gt;
I guess I forgot to check "cc" because I didn't get any emails about discussion ticket.  Even though it was closed I'm reopening it so I can respond.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14513#comment:1" title="Comment 1"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
You don't really need an extra table, as demonstrated by my plugin:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/posts-to-posts/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Posts 2 Posts&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sure you can do it that way.  But it's not a great, general purpose solution for reasons discussed on wp-hackers and below.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14513#comment:2" title="Comment 2"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Wondering if we can create a viable API for this increasingly used case by internally leveraging postmeta.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As Denis said, using postmeta would require either doing lookups on a 768 byte key field or storing the relation twice in two different meta fields and thus increasing likelyhood that one of them will get updated by a plugin but not the other and "corrupting" user data.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14513#comment:3" title="Comment 3"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The above table could be a first step to merging posts and taxonomies, however.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
By "above table" I assume you mean the one proposed?  If yes, +1. :)
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14513#comment:4" title="Comment 4"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There's no point in creating the table if we don't provide UI and APIs to go with it. So the feature request should actually be "Enable many-to-many relationships between posts".
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I completely agree.  Sorry I didn't mention that explicitly; at the time it seemed obviously implied but now seems like not mentioning it was an oversight on my part.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14513#comment:5" title="Comment 5"&gt;Otto42&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We already have many-to-many relationships between posts. You can relate a bunch of posts to other posts by simply giving them all the same term in a taxonomy.
&lt;/p&gt;
&lt;p&gt;
I say put this on hold while the discussion happens on wp-hackers. Maybe we can come up with a better solution.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We don't already have many-to-many relationships in a manner that reasonable people agree on the implementation.  Taxonomy requires either to much overhead to do lookups and/or to many joins and it requires maintaining many records in a consistent state across many tables. Too many places where data can get changed a corrupt the data at the user level (and I'm referring to both post_title/name and post_name/slug.)
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14513#comment:6" title="Comment 6"&gt;jane&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This seems to be straightforward plugin territory to me. Fairly niche use, etc. I would support whatever is needed in terms of hooks to make it easy, but I can't see this as a real candidate for addition to core, given that the bulk of users would probably never need this. If I'm wrong, someone creating a plugin for it and showing wide adoption stats would convince me to reconsider.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think you may be unaware how widespread the need for post-to-post relationships really are. Yes for the blogging use-case most people are not going to use it (though I believe many of them would if the benefits were explained to them).
&lt;/p&gt;
&lt;p&gt;
But when using WordPress as a CMS I would be hard pressed to envision a site that would not explicitly need post-to-post relationships. Let me give you an example. You blog a lot about WordCamps. You could add a WordCamp post type where you have city, dates, venue, photo of venue, etc as custom fields. In addition, you could add a post type of "Featured Presenters" to your blog which would include their photo, their bio, their session topic(s), their company, their twitter name, etc. These features presenters could be keynoters or others that are "notable" in a Wikipedia kind of way. Then you could relate all your featured presenters to each WordCamp and have a generic post relationships widget that displays upcoming WordCamps and their Featured Presenters. The widget would be plugin territory but the table that stores that data and the "Related Featured Presenters" metabox in the admin UI (aka "Related %post_types%") that allows you to relate the two would be generic and triggered by a "supports" arg of the register_post_type() function and they should IMO be in core.
&lt;/p&gt;
&lt;p&gt;
Also your mention of offering hooks implies you may not understand the scenario.  The hooks to support this are already in WordPress; I've already implemented a plugin to relate posts. What we need are not hooks but instead a table to store the data. My plugin could add its own table but I loathe writing plugins that add tables to WordPress because that means WordPress doesn't have what we need for common use-cases. And if I add a table it's almost certain nobody else will write functionality for my table but if it was added to core there is 100% certainty that many other people will (which is one reason I'm advocating for it.)
&lt;/p&gt;
&lt;p&gt;
Of course Otto42 and scribu claim that the taxonomy system is sufficient but I and at least prettyboymp disagree. However I had to explain the use-case to Ott42 and (thus it's clear to me) he hasn't actually implemented any sites that use taxonomy for this use-case and so his advocacy for taxonomy hasn't been tested by the rigors of real-world experience. prettyboymp has deployed a large site and came to the conclusion that using taxonomy for related posts was not workable and I'm coming to the same conclusion on a large plugin for CMS use-cases I'm trying to finalize. scribu just yesterday changed his plugin to use taxonomy from postmeta so it seems he hasn't tested it "in the field" either.
&lt;/p&gt;
&lt;p&gt;
Does anyone else thinks post-to-post relationships are fairly niche?  Surely not scribu, he wrote a plugin to address the use-case.  Nacin points out that it is an "increasingly used case." Denis seems to imply that he believes it would be a viable use case (true?)
&lt;/p&gt;
&lt;p&gt;
Unless a reasonable number disagree the point of this debate is not whether it is "fairly niche" (it's not) but instead:
&lt;/p&gt;
&lt;p&gt;
1.) Should a table to relate posts as well as basic supporting UI functionality be added to core? (I think so, prettyboymp thinks it's useful but that we should wait to include in core, and others may agree or disagree with including in core) and
&lt;/p&gt;
&lt;p&gt;
2.) If it will be in core how should it be implemented? (Otto42 and scribu this taxonomy is fine, prettyboymp and I disagree.)
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;Postscript:&lt;/em&gt; Yes I'll be disappointed but otherwise I'll be fine to learn that the majority decide not to include the proposed table or anything similar in core. However I will be upset if the decision is made based on false assumptions.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #14539 (Cache-Control / Expires headers not applied to files in Multisite ...) created</title>
      
        <dc:creator>spherical</dc:creator>

      <pubDate>Thu, 05 Aug 2010 04:21:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14539</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14539/1280982093000000</guid>
      <description>&lt;p&gt;
First reported in Multisite forum and detailed there:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://wordpress.org/support/topic/cache-control-headers-and-uploaded-files-not?replies=5"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/cache-control-headers-and-uploaded-files-not?replies=5&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
These file type accesses should return 304s according to the rules in .htaccess but consistently return 200, showing an incorrect Cache-Control header specification, instead of no specification at all--which is still undesired.
&lt;/p&gt;
&lt;p&gt;
This occurs in two 3.0.1 Multisite installs on all blogs, domain mapped or not, but does not occur on any other domains on the server or in any other file locations in the WP tree (themes, etc.).
&lt;/p&gt;
&lt;p&gt;
Initially, it was image files that I had identified this on but a subsequent check of a CSS file in the files/ location returned the same header that is set for (.php|.pl|.cgi) files; same as the image files do.
&lt;/p&gt;
&lt;p&gt;
Apache 2.2.15, PHP 5.2.13, FreeBSD 7.2-STABLE, MySQL 5.0.90
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14538 (Add option to have WP Nav Menu auto-add pages regardless of hierarchy) created</title>
      
        <dc:creator>bergius</dc:creator>

      <pubDate>Thu, 05 Aug 2010 01:31:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14538</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14538/1280971860000000</guid>
      <description>&lt;p&gt;
The new Navigation Menu should really allow automatic inclusion of pages regardless of whether they are top-level pages or not.
&lt;/p&gt;
&lt;p&gt;
It wouldn't make sense creating a primary navigation if not every page could be automatically added. And sure, you can use wp_list_pages() or whatever for that, but this feature is still great for managing order and possibly adding links that are not directly connected to pages.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14481 (Shortcode Enhancements) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 05 Aug 2010 00:41:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14481#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14481#comment:17/1280968879000000</guid>
      <description>&lt;p&gt;
Yeah, that's what I meant. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14481 (Shortcode Enhancements) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Thu, 05 Aug 2010 00:36:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14481#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14481#comment:16/1280968595000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14481#comment:15" title="Comment 15"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Ok, so why not use do_action() and add_action() internally?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think I agree with Scribu (assuming I'm understanding what he's saying).  It would be nice to be able to use filters, but it would require that the parameters be changed so the content parameter comes first...which REALLY messes with backwards compatibility.  The only way I see to be able to rearrange parameters would be to create new functions (like wp_add_shortcode, or something similar) and use a function with the old functions that rearranges the parameters before calling their handler.  It would be messy, but the end result would be pretty nice:
&lt;/p&gt;
&lt;p&gt;
Basically, when someone did &lt;code&gt;add_shortcode('myshortcode', 'myhandler', 10);&lt;/code&gt; internally it would do something like &lt;code&gt;add_filter('shortcode-myshortcode', 'myhandler', 10, 3);&lt;/code&gt; and then when it processed shortcodes it would simply use &lt;code&gt;apply_filters('shortcode-myshortcode', $content, $attributes, $tag);&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
You would obviously also be able to use has_filter, remove_filter, and even remove_all_filters.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13816 (There should be built-in index pages for taxonomies) updated</title>
      
        <dc:creator>louyx</dc:creator>

      <pubDate>Thu, 05 Aug 2010 00:06:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13816#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13816#comment:7/1280966761000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14537 (Support Google Chrome Frame) created</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 04 Aug 2010 23:58:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14537</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14537/1280966316000000</guid>
      <description>&lt;p&gt;
This was something that came out of the core development days after WordCamp SF, but I realized we never created a ticket for it: support Google Chrome Frame in the admin.
&lt;/p&gt;
&lt;p&gt;
I think we should just add the meta tag, versus also prompting for installation, etc.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14481 (Shortcode Enhancements) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 04 Aug 2010 23:55:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14481#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14481#comment:15/1280966158000000</guid>
      <description>&lt;p&gt;
Ok, so why not use do_action() and add_action() internally?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14481 (Shortcode Enhancements) updated</title>
      
        <dc:creator>deadowl</dc:creator>

      <pubDate>Wed, 04 Aug 2010 23:53:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14481#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14481#comment:14/1280966010000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14481#comment:8" title="Comment 8"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Can register multiple hooks to single shortcode, uses priority (default: 10)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Why do you need that? Please provide a usage example.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I am going to distribute a plugin that provides a set of shortcodes. There will be different variations in the needs of the users who use my plugin. Instead of maintaining one monolithic plugin that meets all of my users needs, I can provide a basic framework that the users can extend to meet their needs. They can further distribute their own extensions that apply to existing posts without requiring edits to a large backlog of posts to implement in full.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="ext-link" href="http://en.wikipedia.org/wiki/Extensibility"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://en.wikipedia.org/wiki/Extensibility&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Additionally, the add/remove/has/etc functions are consistent with the filter and action core functions of Wordpress.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13818 (There should be index pages for custom post types) updated</title>
      
        <dc:creator>louyx</dc:creator>

      <pubDate>Wed, 04 Aug 2010 23:50:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13818#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13818#comment:14/1280965839000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14536 (VHOST both deprecated and required for upgraded MU installs) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 04 Aug 2010 23:09:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14536#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14536#comment:1/1280963390000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>14536.diff attached to Ticket #14536</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Wed, 04 Aug 2010 22:59:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14536/14536.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14536/14536.diff/1280962751000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14536 (VHOST both deprecated and required for upgraded MU installs) created</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Wed, 04 Aug 2010 22:58:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14536</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14536/1280962721000000</guid>
      <description>&lt;p&gt;
If the &lt;code&gt;VHOST&lt;/code&gt; constant is replaced with the &lt;code&gt;SUBDOMAIN_INSTALL&lt;/code&gt; constant in the wp-config.php of an upgraded MU install, it takes the install down.
&lt;/p&gt;
&lt;p&gt;
The is_multisite() function returns false unless MULTISITE, VHOST or SUNRISE is defined.
&lt;/p&gt;
&lt;p&gt;
patch is attached.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10535 (_wp_filter_build_unique_id issues with the first time a filter is ...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 04 Aug 2010 21:09:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10535#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10535#comment:13/1280956188000000</guid>
      <description>&lt;p&gt;
If I may chime in on a slightly orthogonal, albeit related issue, this won't work either:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function foo() {
remove_action('bar', 'foo');
}
function foo2() {
echo 'test';
}
add_action('bar', 'foo', 10);
add_action('bar', 'foo2', 11);
do_action('bar'); // no output
&lt;/pre&gt;&lt;p&gt;
Or at least it didn't last I checked (writing from an iPad... Can't test.).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14353 (editor cuts off text at first german umlaut) updated</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Wed, 04 Aug 2010 20:59:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14353#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14353#comment:7/1280955591000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Unable to reproduce either with current trunk or .de 3.0.1 e.g. with new post and text section as mentioned above.
&lt;/p&gt;
&lt;p&gt;
Are you running any plugins?  At which point is the post content removed, is it when a post is saved, or published?
&lt;/p&gt;
&lt;p&gt;
Does the host run mod security or anything that might interfere with posted content?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10588 (Use WP HTTP API in IXR_Client) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 04 Aug 2010 20:46:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10588#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10588#comment:8/1280954797000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10535 (_wp_filter_build_unique_id issues with the first time a filter is ...) updated</title>
      
        <dc:creator>mdawaffe</dc:creator>

      <pubDate>Wed, 04 Aug 2010 20:05:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10535#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10535#comment:12/1280952354000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>10535.3.diff attached to Ticket #10535</title>
      
        <dc:creator>mdawaffe</dc:creator>

      <pubDate>Wed, 04 Aug 2010 20:05:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10535/10535.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10535/10535.3.diff/1280952308000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10535 (_wp_filter_build_unique_id issues with the first time a filter is ...) reopened</title>
      
        <dc:creator>mdawaffe</dc:creator>

      <pubDate>Wed, 04 Aug 2010 20:04:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10535#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10535#comment:11/1280952286000000</guid>
      <description>&lt;p&gt;
The patched code only works if the filter didn't have anything attached to it already.
&lt;/p&gt;
&lt;p&gt;
Test case in PHP4 (and maybe PHP5 &amp;lt; 5.2)
&lt;/p&gt;
&lt;pre class="wiki"&gt;require 'wp-load.php';
class Kill_It {
        function dead( $i ) {
                return 'DEAD';
        }
}
$kill = new Kill_It; // or $kill =&amp;amp; new Kill_It;  // Doesn't matter
var_dump( get_bloginfo( 'name', 'display' ) );
add_filter( 'bloginfo', array( &amp;amp;$kill, 'dead' ) );
var_dump( get_bloginfo( 'name', 'display' ) );
remove_filter( 'bloginfo', array( &amp;amp;$kill, 'dead' ) );
var_dump( get_bloginfo( 'name', 'display' ) );
&lt;/pre&gt;&lt;p&gt;
Output:
&lt;/p&gt;
&lt;pre class="wiki"&gt;string(6) "My WordPress Site"
string(4) "DEAD"
string(4) "DEAD"
&lt;/pre&gt;&lt;p&gt;
Calling &lt;code&gt;remove_all_filters( 'bloginfo' )&lt;/code&gt; prior to the &lt;code&gt;add_filter()&lt;/code&gt; results in:
&lt;/p&gt;
&lt;pre class="wiki"&gt;string(6) "My WordPress Site"
string(4) "DEAD"
string(4) "My WordPress Site"
&lt;/pre&gt;&lt;p&gt;
Confirming the problem is with filters already having attached callbacks.
&lt;/p&gt;
&lt;p&gt;
Attached fixes.
&lt;/p&gt;
&lt;p&gt;
For 3.1, we can simplify the function greatly since &lt;code&gt;spl_object_hash()&lt;/code&gt; is always available in PHP &amp;gt;= 5.2.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #9091 (Creating a bulleted list in a new post causes text area to lose focus) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 04 Aug 2010 20:03:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9091#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9091#comment:13/1280952197000000</guid>
      <description>fixed: &lt;p&gt;
Please don't re-open old tickets that have been closed on a milestone. In this case, there are a few tickets referring to incompatibilities with the latest Chrome and the latest WordPress, which will be handled in 3.1 when we upgrade TinyMCE.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14535 (TinyMCE inserts font-size and line-height spans on Google Chrome when ...) updated</title>
      
        <dc:creator>duckpuppy</dc:creator>

      <pubDate>Wed, 04 Aug 2010 20:00:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14535#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14535#comment:3/1280952015000000</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14535 (TinyMCE inserts font-size and line-height spans on Google Chrome when ...) updated</title>
      
        <dc:creator>duckpuppy</dc:creator>

      <pubDate>Wed, 04 Aug 2010 19:59:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14535#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14535#comment:2/1280951961000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9091 (Creating a bulleted list in a new post causes text area to lose focus) updated</title>
      
        <dc:creator>duckpuppy</dc:creator>

      <pubDate>Wed, 04 Aug 2010 19:58:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9091#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9091#comment:12/1280951930000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9091 (Creating a bulleted list in a new post causes text area to lose focus) reopened</title>
      
        <dc:creator>duckpuppy</dc:creator>

      <pubDate>Wed, 04 Aug 2010 19:48:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9091#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9091#comment:11/1280951332000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9091#comment:10" title="Comment 10"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Yes, this has been fixed in the latest TinyMCE (curently in trunk).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is still a problem in Wordpress 3.0.1 and Chrome 6.0.472.14 on Windows.  I've not seen this problem go away since I first reported it.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #14535 (TinyMCE inserts font-size and line-height spans on Google Chrome when ...) updated</title>
      
        <dc:creator>duckpuppy</dc:creator>

      <pubDate>Wed, 04 Aug 2010 19:45:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14535#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14535#comment:1/1280951132000000</guid>
      <description>&lt;p&gt;
This is similar to Ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14218" title="#14218: defect (bug): TinyMCE inserts font-size style attribute on webkit browsers (i.e. ... (closed: fixed)"&gt;#14218&lt;/a&gt;, maybe the root cause is the same.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14533 (Image uploader UI glitch in Opera) updated</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Wed, 04 Aug 2010 19:45:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14533#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14533#comment:2/1280951113000000</guid>
      <description>&lt;p&gt;
I’m using Opera too. No problem. Disable all plugins, maybe one of them adds an incompatible stylesheet.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14535 (TinyMCE inserts font-size and line-height spans on Google Chrome when ...) created</title>
      
        <dc:creator>duckpuppy</dc:creator>

      <pubDate>Wed, 04 Aug 2010 19:44:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14535</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14535/1280951069000000</guid>
      <description>&lt;p&gt;
Steps to reproduce:&lt;br /&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Create a new post.  Make sure that you are using the default TwentyTen theme (will explain why at the end).
&lt;/li&gt;&lt;li&gt;Click the "Unordered List" button.  Add one or more list items
&lt;/li&gt;&lt;li&gt;Click the "Unordered List" button again.  Look at the code in HTML view.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
A sample of the result is below:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Testing
&amp;lt;ul&amp;gt;
	&amp;lt;li&amp;gt;This is a test&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;span style="font-size: medium;"&amp;gt;&amp;lt;span style="line-height: 24px;"&amp;gt;
&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;
&lt;/pre&gt;&lt;p&gt;
The reason using the default theme is important is because then you can be sure that the new editor styles feature is being used.  In the 2010functions.php file, if I comment out the call to add_editor_style() in the twentyten_setup() function, then the problem goes away.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #13818 (There should be index pages for custom post types) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Wed, 04 Aug 2010 19:05:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13818#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13818#comment:13/1280948733000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13818#comment:5" title="Comment 5"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Developers will use post types differently. And, yes, '"developers."' Custom post types are not for people copy-pasting code without really understanding what is going on. &lt;em&gt;Custom post types are not for them.&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Does it really have to be that way?  Custom post types are not just something developer can understand; people with real world use-cases can easily understand the value of custom post types.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13818#comment:6" title="Comment 6"&gt;yeswework&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
All I'm saying is that, as developers working constantly on many different kinds of WP implementation, we're convinced that a very large proportion of uses of custom post types will want to make use of an automatically-populated, corresponding template (or part-template) for each type. To us this just seems like a no brainer: not least because the automatic distribution of relevant queries to template files, as already fully implemented with taxonomies, is one of WP's most helpful, nay indispensable, features.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14530 ("Cheatin', uh?" is not helpful feedback for users or developers) updated</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Wed, 04 Aug 2010 19:00:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14530#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14530#comment:3/1280948418000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Having checked this out, it's more difficult than I imagine to actually get one of these warnings.  Nevertheless, on the off-chance that it's accessed by a valid user typing in a URL for a random page they don't have access to, attached patch with a more explanatory error.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>chaetin.patch attached to Ticket #14530</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Wed, 04 Aug 2010 19:00:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14530/chaetin.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14530/chaetin.patch/1280948400000000</guid>
      <description>&lt;p&gt;
Replace the cheatin message with a login message
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14530 ("Cheatin', uh?" is not helpful feedback for users or developers) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 04 Aug 2010 18:22:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14530#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14530#comment:2/1280946126000000</guid>
      <description>&lt;p&gt;
This warning should never be accessible via the UI. These are nothing more than sanity checks. If they can be accessed in a normal setup via the UI then that is a bug.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14530 ("Cheatin', uh?" is not helpful feedback for users or developers) updated</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Wed, 04 Aug 2010 18:16:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14530#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14530#comment:1/1280945812000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Not a problem I've come across, but I agree with the sentiment.  I'll see if I can put something together for it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13352 (get_children() displays drafts by default) updated</title>
      
        <dc:creator>layotte</dc:creator>

      <pubDate>Wed, 04 Aug 2010 18:08:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13352#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13352#comment:3/1280945333000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14534 (Hang saving a post with certain words) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 04 Aug 2010 18:05:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14534#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14534#comment:1/1280945149000000</guid>
      <description>invalid: &lt;p&gt;
This isn't a problem with WordPress. You probably have mod_security enabled on the server.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Post2.txt attached to Ticket #14534</title>
      
        <dc:creator>ckaczor</dc:creator>

      <pubDate>Wed, 04 Aug 2010 18:03:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14534/Post2.txt</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14534/Post2.txt/1280944997000000</guid>
      <description>&lt;p&gt;
Here is the HTML of the entire post that I narrowed down to that test case.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14534 (Hang saving a post with certain words) created</title>
      
        <dc:creator>ckaczor</dc:creator>

      <pubDate>Wed, 04 Aug 2010 17:58:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14534</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14534/1280944715000000</guid>
      <description>&lt;p&gt;
Every so often I run into a problem where WordPress suddenly starts hanging when I try to save a post.  I've managed to narrow this down to certain wording in the post.
&lt;/p&gt;
&lt;p&gt;
For example a post with this will hang:
&lt;/p&gt;
&lt;pre class="wiki"&gt;But to insert foo into the bar is not acceptable.
&lt;/pre&gt;&lt;p&gt;
If I change "insert" to "add" the problem will go away.  One other time if I changed the word "settlement" to something else the problem went away.
&lt;/p&gt;
&lt;p&gt;
I'm guessing this is related to the protection for SQL injection (insert, into, etc.) but it seems broken.  Ideally this would be detected as not being a SQL statement and allowed.  At minimum it would be great if WordPress could say what the problem was so it could be fixed in the post a lot easier.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14472 (get_categories - child_of) updated</title>
      
        <dc:creator>christian_gnoth</dc:creator>

      <pubDate>Wed, 04 Aug 2010 17:46:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14472#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14472#comment:6/1280943978000000</guid>
      <description>&lt;p&gt;
???
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14471 (wp_create_category not working properly) updated</title>
      
        <dc:creator>christian_gnoth</dc:creator>

      <pubDate>Wed, 04 Aug 2010 17:46:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14471#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14471#comment:5/1280943967000000</guid>
      <description>&lt;p&gt;
???
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14353 (editor cuts off text at first german umlaut) updated</title>
      
        <dc:creator>christian_gnoth</dc:creator>

      <pubDate>Wed, 04 Aug 2010 17:44:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14353#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14353#comment:6/1280943895000000</guid>
      <description>&lt;p&gt;
????
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14469 (get_categories( $args ); - hide_empty true not hide) closed</title>
      
        <dc:creator>christian_gnoth</dc:creator>

      <pubDate>Wed, 04 Aug 2010 17:44:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14469#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14469#comment:4/1280943864000000</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #13818 (There should be index pages for custom post types) updated</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Wed, 04 Aug 2010 16:43:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13818#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13818#comment:12/1280940201000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14533 (Image uploader UI glitch in Opera) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 04 Aug 2010 16:32:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14533#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14533#comment:1/1280939579000000</guid>
      <description>&lt;p&gt;
One of the other core devs uses Opera exclusively. What version of Opera and what was the previous version of WP?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>glitchscreenshot.jpg attached to Ticket #14533</title>
      
        <dc:creator>kytri</dc:creator>

      <pubDate>Wed, 04 Aug 2010 16:30:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14533/glitchscreenshot.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14533/glitchscreenshot.jpg/1280939434000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14533 (Image uploader UI glitch in Opera) created</title>
      
        <dc:creator>kytri</dc:creator>

      <pubDate>Wed, 04 Aug 2010 16:30:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14533</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14533/1280939415000000</guid>
      <description>&lt;p&gt;
This appears to be a relatively minor glitch, but it's kind of annoying.
I recently upgraded to 3.0.1 and since then I haven't been able to upload media using Opera. The uploader itself works fine from what I can tell, but when it opens it displays in the bottom right hand corner of the window, causing most of it to be cut off and inaccessible. I.E. I cannot use any functionality that is located on the right or bottom of the uploader. It works fine in Firefox, so it's not a major problem, but it'd be nice if I could use it without having to switch browsers.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14372 (Option to load comments asynchronously, for speed) updated</title>
      
        <dc:creator>hanifb</dc:creator>

      <pubDate>Wed, 04 Aug 2010 16:00:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14372#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14372#comment:8/1280937652000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14372#comment:7" title="Comment 7"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
is_robots() is for dynamically serving a robots.txt file, not for HTTP requests by robots.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I see, but maybe an is_crawler() function that recognizes the biggest crawlers could do it and some options for custom UA´s that isnt included.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14532 (Conditional Widget Container) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 04 Aug 2010 15:51:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14532#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14532#comment:2/1280937103000000</guid>
      <description>wontfix: &lt;p&gt;
Aside from that, this is something better suited for the ideas forum.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14372 (Option to load comments asynchronously, for speed) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 04 Aug 2010 15:51:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14372#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14372#comment:7/1280937072000000</guid>
      <description>&lt;p&gt;
is_robots() is for dynamically serving a robots.txt file, not for HTTP requests by robots.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14532 (Conditional Widget Container) updated</title>
      
        <dc:creator>dangayle</dc:creator>

      <pubDate>Wed, 04 Aug 2010 15:50:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14532#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14532#comment:1/1280937044000000</guid>
      <description>&lt;p&gt;
That plugin exists:
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/widget-logic/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/widget-logic/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14372 (Option to load comments asynchronously, for speed) updated</title>
      
        <dc:creator>hanifb</dc:creator>

      <pubDate>Wed, 04 Aug 2010 15:47:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14372#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14372#comment:6/1280936827000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14372#comment:3" title="Comment 3"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think everyone prefers to have indexed comments rather than to have posts that load a little faster.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Why not disable the async when is_robot() == true ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14532 (Conditional Widget Container) created</title>
      
        <dc:creator>hanifb</dc:creator>

      <pubDate>Wed, 04 Aug 2010 15:42:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14532</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14532/1280936550000000</guid>
      <description>&lt;p&gt;
A good enhacement would be a widget that you drag into the sidebar that you could drag other widgets into.
&lt;/p&gt;
&lt;p&gt;
This container lets you select conditional settings like:
&lt;/p&gt;
&lt;p&gt;
Display/ Dont display WHEN is_single or is_home or is_archive etc etc.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>14531.diff attached to Ticket #14531</title>
      
        <dc:creator>mtdewvirus</dc:creator>

      <pubDate>Wed, 04 Aug 2010 15:28:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14531/14531.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14531/14531.diff/1280935735000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14531 (Only show custom header preview when an image is set) created</title>
      
        <dc:creator>mtdewvirus</dc:creator>

      <pubDate>Wed, 04 Aug 2010 15:28:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14531</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14531/1280935721000000</guid>
      <description>&lt;p&gt;
If a custom header is removed the preview shows an empty box. We should remove the Preview section in this case. Could also display a message "No header image set" or similar.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14486 (Twenty Ten: Removed header image renders an empty img tag) updated</title>
      
        <dc:creator>mtdewvirus</dc:creator>

      <pubDate>Wed, 04 Aug 2010 15:11:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14486#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14486#comment:1/1280934704000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14518 (The class 'current-category-ancestor' shows on the current category ...) updated</title>
      
        <dc:creator>juggledad</dc:creator>

      <pubDate>Wed, 04 Aug 2010 14:20:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14518#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14518#comment:10/1280931614000000</guid>
      <description>&lt;p&gt;
ok, that could work. as long as there is some way to address it. thanks
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14518 (The class 'current-category-ancestor' shows on the current category ...) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Wed, 04 Aug 2010 13:44:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14518#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14518#comment:9/1280929469000000</guid>
      <description>&lt;p&gt;
Well, the point is that for the &lt;em&gt;current&lt;/em&gt; menu item it's less important to know what kind of item it's associated with.  Basically all conceivable styling issues can already be handled.  So, for example, if you wanted to style---in particular---current menu items that are categories, the following CSS selector would work:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;body.category current-menu-item&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
In contrast, because non-current menu items can have an indefinite number of relationships to the currently-queried page (category ancestor, post ancestor, etc.), it's more helpful to specify those more particularly.
&lt;/p&gt;
&lt;p&gt;
Anyways, I'm not saying we shouldn't have &lt;code&gt;current-category&lt;/code&gt; class; I'm just suggesting that it might be better if they were on separate tickets.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14526 (If object cache is enabled then plugin list does not get updated after ...) updated</title>
      
        <dc:creator>peaceablewhale</dc:creator>

      <pubDate>Wed, 04 Aug 2010 13:34:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14526#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14526#comment:1/1280928859000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14518 (The class 'current-category-ancestor' shows on the current category ...) updated</title>
      
        <dc:creator>juggledad</dc:creator>

      <pubDate>Wed, 04 Aug 2010 13:33:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14518#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14518#comment:8/1280928812000000</guid>
      <description>&lt;p&gt;
Defect: an incorrect class assigned to a menu item - it should be 'current-category' or 'current-category-item' when it is showing as 'current-category-ancestor'
&lt;/p&gt;
&lt;p&gt;
all depends on how you look at it. If I select the CAT-CHILD, with this patch, the CAT-CHILD classes don't indicate that it is a category at all, BUT now the CAT-PARENT shows a class 'current-category-ancestor'. having a menu item showing that it is an 'current-category-ancestor' but the child doesn't specify a class that shows it is a category seems to be a defect to me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14530 ("Cheatin', uh?" is not helpful feedback for users or developers) created</title>
      
        <dc:creator>shidouhikari</dc:creator>

      <pubDate>Wed, 04 Aug 2010 13:20:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14530</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14530/1280928056000000</guid>
      <description>&lt;p&gt;
I've sen this infamous error msg more times than I wanted, in my own site where I'm admin.
&lt;/p&gt;
&lt;p&gt;
That happens with more frequency when adding a new comment, but some times also inside admin pages.
&lt;/p&gt;
&lt;p&gt;
I understand it's generally capability and permission tests that fail, and that happens in pages that ppl without permission to access them shouldn't see links to them, therefore they probably tried direct access to somewhere they shouldn't be going.
&lt;/p&gt;
&lt;p&gt;
But also it happens when session expires or due to some bug. In this cases, the user is effectively not doing anything wrong, it may even be WP fault, and when that's the case the message is rude, even offensive to more emotional ppl.
&lt;/p&gt;
&lt;p&gt;
Even worse, it gives no hint on what went wrong, so that user can try to fix it.
&lt;/p&gt;
&lt;p&gt;
Then I suggest these messages to be changed, to more meaningful and also polite messages. Real cheaters and hackers will already have any info a message may provide, so a better explanation of what went wrong won't help them succeed in their attempt to hack a site, and will help a lot the victims of these errors.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14529 (wp_nav_menu() gives different results when called multiple times - ...) closed</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Wed, 04 Aug 2010 13:09:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14529#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14529#comment:1/1280927386000000</guid>
      <description>invalid: &lt;p&gt;
Please see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13976" title="#13976: defect (bug): wp_nav_menu() uses IDs for menu-items preventing re-use on the same page (closed: fixed)"&gt;#13976&lt;/a&gt; for the relevant discussion as to why this feature was added.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14529 (wp_nav_menu() gives different results when called multiple times - ...) created</title>
      
        <dc:creator>juggledad</dc:creator>

      <pubDate>Wed, 04 Aug 2010 13:05:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14529</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14529/1280927149000000</guid>
      <description>&lt;p&gt;
If you call wp_nav_menu() with the same parameters twice, you get different results.
&lt;/p&gt;
&lt;p&gt;
To reproduce
1) use the TwentyTen theme
2) add two categories: CAT-PARENT and CAT-CHILD
3) add two pages: PAGE-PARENT and PAGE-CHILD
4) add a menu, add the two categories and two pages and adjust them so the children are under the parents
5) edit the header.php from twentyten and after line 67 (which should be
'                        &amp;lt;/div&amp;gt;&amp;lt;!-- #branding --&amp;gt;'
add
&amp;lt;?php
echo '&amp;lt;strong&amp;gt;wp_nav_menu=&amp;lt;br&amp;gt;&amp;lt;/strong&amp;gt;';
wp_nav_menu( array( 'container_class' =&amp;gt; 'menu-xxx', 'theme_location' =&amp;gt; 'primary' ) );
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
echo '&amp;lt;strong&amp;gt;END wp_nav_menu&amp;lt;br&amp;gt;&amp;lt;/strong&amp;gt;';
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
?&amp;gt;
&amp;lt;?php
echo '&amp;lt;strong&amp;gt;wp_nav_menu=&amp;lt;br&amp;gt;&amp;lt;/strong&amp;gt;';
wp_nav_menu( array( 'container_class' =&amp;gt; 'menu-xxx', 'theme_location' =&amp;gt; 'primary' ) );
echo '&amp;lt;strong&amp;gt;END wp_nav_menu&amp;lt;br&amp;gt;&amp;lt;/strong&amp;gt;';
?&amp;gt;
6) view the site and the generated source
This is the output of the two calls to wp_nav_menu():
&lt;/p&gt;
&lt;p&gt;
First call results
&lt;/p&gt;
&lt;p&gt;
&amp;lt;strong&amp;gt;wp_nav_menu=&amp;lt;br&amp;gt;&amp;lt;/strong&amp;gt;
&amp;lt;div class="menu-xxx"&amp;gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;ul id="menu-cat_test" class="menu"&amp;gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;li id="menu-item-1408" class="menu-item menu-item-type-taxonomy menu-item-1408"&amp;gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;a href="&lt;a class="ext-link" href="http://wp301/?cat=3"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wp301/?cat=3&lt;/a&gt;"&amp;gt;CAT-PARENT&amp;lt;/a&amp;gt;
&amp;lt;ul class="sub-menu"&amp;gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;li id="menu-item-1409" class="menu-item menu-item-type-taxonomy menu-item-1409"&amp;gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;a href="&lt;a class="ext-link" href="http://wp301/?cat=8"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wp301/?cat=8&lt;/a&gt;"&amp;gt;CAT-CHILD&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&amp;lt;/ul&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&amp;lt;/li&amp;gt;
&amp;lt;li id="menu-item-1413" class="menu-item menu-item-type-post_type menu-item-1413"&amp;gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;a href="&lt;a class="ext-link" href="http://wp301/?page_id=3"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wp301/?page_id=3&lt;/a&gt;"&amp;gt;PAGE-PARENT&amp;lt;/a&amp;gt;
&amp;lt;ul class="sub-menu"&amp;gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;li id="menu-item-1411" class="menu-item menu-item-type-post_type menu-item-1411"&amp;gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;a href="&lt;a class="ext-link" href="http://wp301/?page_id=7"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wp301/?page_id=7&lt;/a&gt;"&amp;gt;PAGE-CHILD&amp;lt;/a&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&amp;lt;/li&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&amp;lt;/ul&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&amp;lt;/li&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&amp;lt;/ul&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&amp;lt;/div&amp;gt;
&amp;lt;strong&amp;gt;END wp_nav_menu=&amp;lt;br&amp;gt;&amp;lt;/strong&amp;gt;
&lt;/p&gt;
&lt;p&gt;
second call result
&lt;/p&gt;
&lt;p&gt;
&amp;lt;strong&amp;gt;wp_nav_menu=&amp;lt;br&amp;gt;&amp;lt;/strong&amp;gt;
&amp;lt;div class="menu-xxx"&amp;gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;ul id="menu-cat_test-1" class="menu"&amp;gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;li class="menu-item menu-item-type-taxonomy menu-item-1408"&amp;gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;a href="&lt;a class="ext-link" href="http://wp301/?cat=3"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wp301/?cat=3&lt;/a&gt;"&amp;gt;CAT-PARENT&amp;lt;/a&amp;gt;
&amp;lt;ul class="sub-menu"&amp;gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;li class="menu-item menu-item-type-taxonomy menu-item-1409"&amp;gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;a href="&lt;a class="ext-link" href="http://wp301/?cat=8"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wp301/?cat=8&lt;/a&gt;"&amp;gt;CAT-CHILD&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&amp;lt;/ul&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&amp;lt;/li&amp;gt;
&amp;lt;li class="menu-item menu-item-type-post_type menu-item-1413"&amp;gt;&amp;lt;a href="&lt;a class="ext-link" href="http://wp301/?page_id=3"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wp301/?page_id=3&lt;/a&gt;"&amp;gt;PAGE-PARENT&amp;lt;/a&amp;gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;ul class="sub-menu"&amp;gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;li class="menu-item menu-item-type-post_type menu-item-1411"&amp;gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;a href="&lt;a class="ext-link" href="http://wp301/?page_id=7"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wp301/?page_id=7&lt;/a&gt;"&amp;gt;PAGE-CHILD&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&amp;lt;/ul&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&amp;lt;/li&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&amp;lt;/ul&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&amp;lt;/div&amp;gt;
&amp;lt;strong&amp;gt;END wp_nav_menu=&amp;lt;br&amp;gt;&amp;lt;/strong&amp;gt;
&lt;/p&gt;
&lt;p&gt;
notice that the &amp;lt;li&amp;gt; in the first call have an id="menu-item-nnnn" and the second call doesn't have that. I know that an ID can only happen once in a page, but since there is a class with the same value, it would seem that neithor call should have an id="..." returned to be consistant.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14528 (Set no_found_rows = true in get_posts()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 04 Aug 2010 12:39:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14528#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14528#comment:1/1280925561000000</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>no_found_rows.diff attached to Ticket #14528</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 04 Aug 2010 12:38:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14528/no_found_rows.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14528/no_found_rows.diff/1280925489000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14528 (Set no_found_rows = true in get_posts()) created</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 04 Aug 2010 12:38:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14528</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14528/1280925481000000</guid>
      <description>&lt;p&gt;
When using get_posts(), you have no way of accesing $wp_query-&amp;gt;found_posts, making the SELECT FOUND_ROWS() query useless.
&lt;/p&gt;
&lt;p&gt;
So, the no_found_rows flag should always be set.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14518 (The class 'current-category-ancestor' shows on the current category ...) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Wed, 04 Aug 2010 10:45:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14518#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14518#comment:7/1280918719000000</guid>
      <description>&lt;p&gt;
There are two issues you're discussing:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Defect: an incorrect class indicating a menu item is an ancestor, when it isn't
&lt;/li&gt;&lt;li&gt;Feature Request: a class name to indicate when a menu item corresponds to a category
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The first warrants being included in a bugfix release, like 3.0.2, because it's a bug.
&lt;/p&gt;
&lt;p&gt;
The second probably should wait until the next major release, 3.1, if done at all.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14518 (The class 'current-category-ancestor' shows on the current category ...) updated</title>
      
        <dc:creator>juggledad</dc:creator>

      <pubDate>Wed, 04 Aug 2010 10:41:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14518#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14518#comment:6/1280918466000000</guid>
      <description>&lt;p&gt;
The patch, while fixing one issue, now causes NO category class to show up on a menu item that is a category. Therefore, this patch does not solve it reported bug (which is that the current category does not have a class of 'current-category' or 'current-category-item'.)
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14518#comment:5" title="Comment 5"&gt;filosofo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14518#comment:3" title="Comment 3"&gt;juggledad&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
While this patch does remove the 'current-category-ancestor' it now has no class to indicate that this is a category at all.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That sounds like a separate feature request, unrelated to the reported bug in this ticket.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11328 (Issue with double click on comment's text when quick edit is used) updated</title>
      
        <dc:creator>digitaltoast</dc:creator>

      <pubDate>Wed, 04 Aug 2010 10:31:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11328#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11328#comment:23/1280917906000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11328#comment:21" title="Comment 21"&gt;westi&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11328#comment:20" title="Comment 20"&gt;digitaltoast&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This just happened to me, too - this is a serious bug that needs squashing urgently. It's been SEVEN MONTHS now - I'll up the severity.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Firstly, please don't change the reported in version to a newer version - you are hiding the age of the ticket then
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sorry, I did that because it still exists in the current version. I would suspect more people are on 3.x than 2.x (possibly). Didn't know that it hid the date.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Secondly, there is not yet a suitable solution to this issue available - if you have the time and the skills we would welcome an improved patch.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I have to agree with Richard, it works absolutely fine for me, doesn't appear to affect anything else, squashes the bug nicely. In fact, a quick google around reveals quite a few others frustrated by losing long replies like this.
&lt;/p&gt;
&lt;p&gt;
As Richard says, it works, it doesn't appear to break anything... why is such an easy fix "not suitable"?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14519 (Random Twenty Ten Default Header) updated</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Wed, 04 Aug 2010 09:55:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14519#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14519#comment:10/1280915745000000</guid>
      <description>&lt;p&gt;
-1 to changing pre-existing headers without warning.  I forsee a raft  of support topics asking why their header has suddenly changed, and worrying that they've been hacked.
To add to that, there's the set of folk who would see it as invasive. The last thing needed now is another capital P fiasco.
So i'd say either new installs only, or publicise the change widely in advance, with info on how to keep the same header.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11328 (Issue with double click on comment's text when quick edit is used) updated</title>
      
        <dc:creator>richards1052</dc:creator>

      <pubDate>Wed, 04 Aug 2010 08:59:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11328#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11328#comment:22/1280912361000000</guid>
      <description>&lt;p&gt;
Can you be more specific about why the current patch isn't "suitable?"  I installed the patch &amp;amp; it works perfectly.  Others have installed it as well saying the same.  If there's something the patch doesn't do that you think it should could you communicate that the person who wrote it so they can attempt to either rewrite it or answer your concerns.
&lt;/p&gt;
&lt;p&gt;
If the patch hasn't been included in any upgrade because someone feels the patch isn't suitable but hasn't communicated what isn't suitable about it, then I think there's a communication gap here.
&lt;/p&gt;
&lt;p&gt;
The solution is suitable as far as I'm concerned.  This bug is a real disaster for someone who writes many comments in their blog as I do &amp;amp; invariably wipes out hours worth of comments over time as I've done due to this issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14519 (Random Twenty Ten Default Header) updated</title>
      
        <dc:creator>RanYanivHartstein</dc:creator>

      <pubDate>Wed, 04 Aug 2010 08:56:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14519#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14519#comment:9/1280912204000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14519#comment:8" title="Comment 8"&gt;westi&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Patch looks great.
&lt;/p&gt;
&lt;p&gt;
Is there a specific reason we don't do this on activation and just set the setting to a random value?
&lt;/p&gt;
&lt;p&gt;
Won't this affect all existing unconfigured sites and randomise there headers after all?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Changing headers on already installed sites sounds like a bad idea. Many users may not necessarily like the default header image, but just by leaving the default they still made a choice there. Having their header image change all of a sudden will feel intrusive.
&lt;/p&gt;
&lt;p&gt;
I think doing this for all new installs from now on should be good enough - no need to force it on pepole who already installed and gotten used to path.jpg. Even if they didn't pick it themselves, it was still their choice not to change it. We will be effectively going over their heads and reaching in to their sites to change something they like, just because we don't.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11328 (Issue with double click on comment's text when quick edit is used) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 04 Aug 2010 08:44:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11328#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11328#comment:21/1280911462000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11328#comment:20" title="Comment 20"&gt;digitaltoast&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This just happened to me, too - this is a serious bug that needs squashing urgently. It's been SEVEN MONTHS now - I'll up the severity.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Firstly, please don't change the reported in version to a newer version - you are hiding the age of the ticket then
&lt;/p&gt;
&lt;p&gt;
Secondly, there is not yet a suitable solution to this issue available - if you have the time and the skills we would welcome an improved patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11328 (Issue with double click on comment's text when quick edit is used) updated</title>
      
        <dc:creator>digitaltoast</dc:creator>

      <pubDate>Wed, 04 Aug 2010 08:23:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11328#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11328#comment:20/1280910190000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This just happened to me, too - this is a serious bug that needs squashing urgently. It's been SEVEN MONTHS now - I'll up the severity.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14519 (Random Twenty Ten Default Header) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 04 Aug 2010 08:01:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14519#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14519#comment:8/1280908886000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch looks great.
&lt;/p&gt;
&lt;p&gt;
Is there a specific reason we don't do this on activation and just set the setting to a random value?
&lt;/p&gt;
&lt;p&gt;
Won't this affect all existing unconfigured sites and randomise there headers after all?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14414 (Add an action hook to add fields to nav_menu items form) updated</title>
      
        <dc:creator>wonderslug</dc:creator>

      <pubDate>Wed, 04 Aug 2010 05:28:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14414#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14414#comment:1/1280899697000000</guid>
      <description>&lt;p&gt;
I think this should really be an alternative to the wp_edit_nav_menu_walker filter, which replaces the walker classname.   This filter will cause clashes if multiple plugins change the classname of the walker.   Only the last filter run will win.
&lt;/p&gt;
&lt;p&gt;
This action would be a way for multiple plugins to add fields to the menu items (like is done with widget fields right now) and not have conflicts.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>walker_nav_menu_edit-ajax.patch attached to Ticket #14527</title>
      
        <dc:creator>wonderslug</dc:creator>

      <pubDate>Wed, 04 Aug 2010 04:48:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14527/walker_nav_menu_edit-ajax.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14527/walker_nav_menu_edit-ajax.patch/1280897309000000</guid>
      <description>&lt;p&gt;
Patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14527 (ajax call for add-menu-item doesnt supprot  wp_edit_nav_menu_walker filter) created</title>
      
        <dc:creator>wonderslug</dc:creator>

      <pubDate>Wed, 04 Aug 2010 04:48:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14527</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14527/1280897282000000</guid>
      <description>&lt;p&gt;
The wp_get_nav_menu_to_edit function (wp-admin/includes/nav-menu.php) supports a filter on the wp_edit_nav_menu_walker in order for plugins to pass a different walker class to the menu item admin.
&lt;/p&gt;
&lt;p&gt;
The ajax call (add-menu-item) supporting the creation of a new menu-item that uses this same walker is not supporting the filter.
&lt;/p&gt;
&lt;p&gt;
In order to make it so that both and and existing menu items support are calling the same walker to get the html for menu items this filter need to be added to the ajax.
&lt;/p&gt;
&lt;p&gt;
I am attaching a patch that works.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>14519-2.diff attached to Ticket #14519</title>
      
        <dc:creator>nickmomrik</dc:creator>

      <pubDate>Wed, 04 Aug 2010 01:37:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14519/14519-2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14519/14519-2.diff/1280885853000000</guid>
      <description>&lt;p&gt;
Set the scheme to 'http' so there aren't different headers for http and https
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14519 (Random Twenty Ten Default Header) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 04 Aug 2010 01:01:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14519#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14519#comment:7/1280883672000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14519#comment:6" title="Comment 6"&gt;mdawaffe&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Other way around.  crc32 is an old school hashing algorithm, not a random number generator.  The code hashes the site_url(), then grabs a header image based on the hash.  Same header for every page load.
&lt;/p&gt;
&lt;p&gt;
Caveat: the current patch doesn't set a scheme in the site_url() call so you'll have a different (but consistent) header for each scheme (http, https).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Clever. Didn't notice that. +1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14519 (Random Twenty Ten Default Header) updated</title>
      
        <dc:creator>mdawaffe</dc:creator>

      <pubDate>Wed, 04 Aug 2010 00:57:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14519#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14519#comment:6/1280883434000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14519#comment:5" title="Comment 5"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think this code would rotate the image on every page load until a header is chosen from the admin, versus simply provide the install with a single default header chosen at random from the 8 images?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Other way around.  crc32 is an old school hashing algorithm, not a random number generator.  The code hashes the site_url(), then grabs a header image based on the hash.  Same header for every page load.
&lt;/p&gt;
&lt;p&gt;
Caveat: the current patch doesn't set a scheme in the site_url() call so you'll have a different (but consistent) header for each scheme (http, https).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14519 (Random Twenty Ten Default Header) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 04 Aug 2010 00:42:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14519#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14519#comment:5/1280882522000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14519#comment:3" title="Comment 3"&gt;matt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think it's worthwhile -- the whole point of having 700k+ of bundled headers is so every time someone does a WP install it doesn't look 100% the same. I had assumed that we were rotating, but recently realized we always defaulted to the road one.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree, but it isn't really feasible without hacking in a theme activation hook, or at least not without avoiding the database by checking if there's a header image defined, and if not, set one at random.
&lt;/p&gt;
&lt;p&gt;
I think this code would rotate the image on every page load until a header is chosen from the admin, versus simply provide the install with a single default header chosen at random from the 8 images? I first interpreted the intent of the ticket as the former, but now I'm unsure.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14519 (Random Twenty Ten Default Header) updated</title>
      
        <dc:creator>markmcwilliams</dc:creator>

      <pubDate>Wed, 04 Aug 2010 00:23:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14519#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14519#comment:4/1280881381000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
To a point I agree, and at the end of the day, the user can change the image if they don't like it, so a win-win situation for everyone right? :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14518 (The class 'current-category-ancestor' shows on the current category ...) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Wed, 04 Aug 2010 00:12:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14518#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14518#comment:5/1280880761000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14518#comment:3" title="Comment 3"&gt;juggledad&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
While this patch does remove the 'current-category-ancestor' it now has no class to indicate that this is a category at all.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That sounds like a separate feature request, unrelated to the reported bug in this ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14519 (Random Twenty Ten Default Header) reopened</title>
      
        <dc:creator>matt</dc:creator>

      <pubDate>Wed, 04 Aug 2010 00:09:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14519#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14519#comment:3/1280880566000000</guid>
      <description>&lt;p&gt;
I think it's worthwhile -- the whole point of having 700k+ of bundled headers is so every time someone does a WP install it doesn't look 100% the same. I had assumed that we were rotating, but recently realized we always defaulted to the road one. This is in line with the original intention of 2010.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item>
   </channel>
</rss>