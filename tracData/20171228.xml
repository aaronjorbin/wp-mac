<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #42995 (Wordpress XML-RPC editComment return error 500 changing date_created_gmt) updated</title>
      
        <dc:creator>fpilee</dc:creator>

      <pubDate>Thu, 28 Dec 2017 19:03:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42995#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42995#comment:1/1514487805810750</guid>
      <description>&lt;p&gt;
I believe you have to create first a &lt;a class="ext-link" href="https://developer.wordpress.org/reference/classes/ixr_date/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/reference/classes/ixr_date/&lt;/a&gt;
object with date_created_gmt string before to call getIso.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42995 (Wordpress XML-RPC editComment return error 500 changing date_created_gmt) created</title>
      
        <dc:creator>fpilee</dc:creator>

      <pubDate>Thu, 28 Dec 2017 19:01:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42995</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42995/1514487685421544</guid>
      <description>&lt;p&gt;
Grettings,
&lt;/p&gt;
&lt;p&gt;
This:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;em&gt; Do some timestamp voodoo
if (!empty($content_struct&lt;a class="missing wiki"&gt;date_created_gmt?&lt;/a&gt;)) {
&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;em&gt; We know this is supposed to be GMT, so we're going to slap that Z on there by force
$dateCreated = rtrim($content_struct&lt;a class="missing wiki"&gt;date_created_gmt?&lt;/a&gt;-&amp;gt;getIso(), 'Z') . 'Z';
$comment_date = get_date_from_gmt(iso8601_to_datetime($dateCreated));
$comment_date_gmt = iso8601_to_datetime($dateCreated, 'GMT');
&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
[Thu Dec 28 15:52:34.123148 2017] [php7:notice] [pid 5507] [client 127.0.0.1:39464] PHP Fatal error:  Uncaught Error: Call to a member function getIso() on string in wp-includes/class-wp-xmlrpc-server.php:3533
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42006 (Safari + VoiceOver sometimes read out the screen-reader-text not ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 28 Dec 2017 18:57:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42006#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42006#comment:7/1514487427945073</guid>
      <description>&lt;p&gt;
Still an issue on latest macOS High Sierra, Safari 11.0.2, VoiceOver Utility 8 (562.13).
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/jPbs9qeZ6Z.png"&gt;&lt;img src="https://cldup.com/jPbs9qeZ6Z.png" alt="https://cldup.com/jPbs9qeZ6Z.png" crossorigin="anonymous" title="https://cldup.com/jPbs9qeZ6Z.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41451 (Use pretty permalinks by default in the test suite) updated</title>
      
        <dc:creator>Frank Klein</dc:creator>

      <pubDate>Thu, 28 Dec 2017 18:46:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41451#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41451#comment:5/1514486815669811</guid>
      <description>&lt;p&gt;
The patch above contains the code that makes all the tests, except three multisite tests, pass with pretty permalinks enabled. I was unable to fix these, so I'd be happy if somebody else could look into this.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://travis-ci.org/fklein-lu/wordpress-develop/jobs/322620789"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;This Travis CI log&lt;/a&gt; contains the failing tests:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;Tests_Query_VerbosePageRules&lt;/code&gt;: This keeps failing no matter what I try. The way &lt;code&gt;WP_UnitTestCase::goto&lt;/code&gt; behaves is not very transparent, and I can't figure it out.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;Tests_Rewrite_OldSlugRedirect&lt;/code&gt; and &lt;code&gt;Tests_Feeds_RSS2&lt;/code&gt; pass on local, but fail on Travis.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
A few notes about the patch:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I did not account for non-Core test runs at this point. We could add a bunch of &lt;code&gt;WP_RUN_CORE_TESTS&lt;/code&gt; checks, but I feel like a more elegant solution would be welcome.
&lt;/li&gt;&lt;li&gt;I introduced helper functions for permalink handling. I'm not a fan of stuffing everything into &lt;code&gt;WP_UnitTestCase&lt;/code&gt; if it doesn't need to be part of the class. The helper functions are also more efficient, as &lt;code&gt;UnitTestCase::set_permalink_structure&lt;/code&gt; calls &lt;code&gt;WP_Rewrite::init&lt;/code&gt; twice.
&lt;/li&gt;&lt;li&gt;I did only adapt the existing tests so that they pass. This might not always be the past way for the thing being tested.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>41451.patch attached to Ticket #41451</title>
      
        <dc:creator>Frank Klein</dc:creator>

      <pubDate>Thu, 28 Dec 2017 18:34:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41451/41451.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41451/41451.patch/1514486056978374</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42989 (REST API: Using array type when defining fields in ...) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Thu, 28 Dec 2017 18:00:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42989#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42989#comment:2/1514484023343644</guid>
      <description>&lt;p&gt;
@sarukuku what happens if you set the &lt;code&gt;items&lt;/code&gt; key for the &lt;code&gt;test&lt;/code&gt; arg?  It looks like you haven't set what type of values expect from the array.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="nx"&gt;register_rest_route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'test/v1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'array_test'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="s1"&gt;'methods'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;WP_REST_Server&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="na"&gt;READABLE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;'callback'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;WP_REST_Request&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="c1"&gt;// Just reflect back the value of the test parameter
&lt;/span&gt;               &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;rest_ensure_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get_param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'test'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
             &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s1"&gt;'args'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="s1"&gt;'test'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="s1"&gt;'type'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'array'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;'items'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'string'&lt;/span&gt;
                &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="p"&gt;));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Your debugging output is telling you exactly where to look in the code to see what is wrong.  &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-includes/rest-api.php#L1092"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-includes/rest-api.php#L1092&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Is your bug report that &lt;code&gt;items&lt;/code&gt; should not be required for &lt;code&gt;array&lt;/code&gt; type params?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42992 (Menu Customizer - Inconsistent use of Tags and Format Menu Items) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 28 Dec 2017 16:49:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42992#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42992#comment:1/1514479759812723</guid>
      <description>&lt;p&gt;
@monikarao you may want to check the Screen Options in &lt;code&gt;wp-admin/nav-menus.php&lt;/code&gt;, and see if Tags and Format are checked.
@westonruter shouldn't these Screen Options be synced in the Customizer?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>tags-standard-administration.png attached to Ticket #42994</title>
      
        <dc:creator>monikarao</dc:creator>

      <pubDate>Thu, 28 Dec 2017 16:04:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42994/tags-standard-administration.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42994/tags-standard-administration.png/1514477085212787</guid>
      <description>&lt;p&gt;
Tag - In Standard administration
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42993 (WordPress Multisite: Allow for different ports) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 28 Dec 2017 16:04:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42993#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42993#comment:1/1514477056864408</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>format.png attached to Ticket #42994</title>
      
        <dc:creator>monikarao</dc:creator>

      <pubDate>Thu, 28 Dec 2017 16:04:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42994/format.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42994/format.png/1514477049034695</guid>
      <description>&lt;p&gt;
Format
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>tags.png attached to Ticket #42994</title>
      
        <dc:creator>monikarao</dc:creator>

      <pubDate>Thu, 28 Dec 2017 16:03:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42994/tags.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42994/tags.png/1514477023042797</guid>
      <description>&lt;p&gt;
Tags
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42994 (Menu Customizer - Add "Add" option for Tags and Format Taxonomy) created</title>
      
        <dc:creator>monikarao</dc:creator>

      <pubDate>Thu, 28 Dec 2017 15:13:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42994</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42994/1514473985264756</guid>
      <description>&lt;p&gt;
In Menu Customizer there is no option to add new tags and format taxonomy. There should be option to add new tags and format like "Post" taxonomy in administration.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42993 (WordPress Multisite: Allow for different ports) created</title>
      
        <dc:creator>Blackbam</dc:creator>

      <pubDate>Thu, 28 Dec 2017 15:09:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42993</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42993/1514473790722446</guid>
      <description>&lt;p&gt;
The WordPress Codex says it is not possible to run WordPress on a different Port than Port 80 or Port 443. In times of Docker and complex development environment setups this is a real pain in the ass. Furthermore there are some common ports like 8080 which are not unusual for a webserver to use.
&lt;/p&gt;
&lt;p&gt;
Please lets get rid of this completely unnecessary restriction on WordPress network installations. The following solutions seems to describe which parts of the Core have to be adapted:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://benohead.com/wordpress-running-multisite-different-port/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://benohead.com/wordpress-running-multisite-different-port/&lt;/a&gt;
&lt;a class="ext-link" href="https://wordpress.stackexchange.com/questions/212978/multisite-network-port-num-issues"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.stackexchange.com/questions/212978/multisite-network-port-num-issues&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Maybe there are one or to more things which must be changed, in order to get it to work properly.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>customizer-menu.png attached to Ticket #42992</title>
      
        <dc:creator>monikarao</dc:creator>

      <pubDate>Thu, 28 Dec 2017 15:06:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42992/customizer-menu.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42992/customizer-menu.png/1514473560556676</guid>
      <description>&lt;p&gt;
Customizer Menu - Tag, Format Options displayed
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>standard-menu.png attached to Ticket #42992</title>
      
        <dc:creator>monikarao</dc:creator>

      <pubDate>Thu, 28 Dec 2017 15:05:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42992/standard-menu.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42992/standard-menu.png/1514473521913400</guid>
      <description>&lt;p&gt;
Standard Menu in administration (No Tag, Format Option)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42992 (Menu Customizer - Inconsistent use of Tags and Format Menu Items) created</title>
      
        <dc:creator>monikarao</dc:creator>

      <pubDate>Thu, 28 Dec 2017 15:03:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42992</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42992/1514473430074676</guid>
      <description>&lt;p&gt;
When using the standard menu administration it does not display "Tags" and "Format" to add into menu items.
When using the menu controls in the customizer, it display "Tags" and "Format" options to appear as menu-items.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>No-Result-Found.png attached to Ticket #42991</title>
      
        <dc:creator>monikarao</dc:creator>

      <pubDate>Thu, 28 Dec 2017 14:54:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42991/No-Result-Found.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42991/No-Result-Found.png/1514472857489175</guid>
      <description>&lt;p&gt;
On Searching "Home" - No Result Found Message
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Home-Custom-Link.png attached to Ticket #42991</title>
      
        <dc:creator>monikarao</dc:creator>

      <pubDate>Thu, 28 Dec 2017 14:53:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42991/Home-Custom-Link.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42991/Home-Custom-Link.png/1514472830031680</guid>
      <description>&lt;p&gt;
Created Home Custom Link
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42991 (Customizer: Search Menu item not working on Custom Link) created</title>
      
        <dc:creator>monikarao</dc:creator>

      <pubDate>Thu, 28 Dec 2017 14:52:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42991</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42991/1514472750915380</guid>
      <description>&lt;p&gt;
In Customizer "Search Menu Item Field" is present to search all menu items but it's not working on Custom Links.
Ex. Added "Home" as Custom Link but when searching this "Home" it displayed message "no-result-found".
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41973 (HTTP Error when uploading images on PHP 7.1.7) updated</title>
      
        <dc:creator>mbeerli</dc:creator>

      <pubDate>Thu, 28 Dec 2017 14:40:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41973#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41973#comment:31/1514472044924456</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Create file called .user.ini in root firectory of wp installation (if it doesn’t already exist.)
memory_limit = 128M
max_execution_time = 300
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This does not solve the issue. The issue is resolved by unticking the option in php option of hosting provider called "imagick". see screenshot here &lt;a href="https://core.trac.wordpress.org/ticket/42843"&gt;https://core.trac.wordpress.org/ticket/42843&lt;/a&gt;
and what you are referencing is in php.ini
Which I already have:
max_execution_time    = 600;  Maximum execution time of each script, in seconds
max_input_time        = 600;  Maximum amount of time each script may spend parsing request
memory_limit          = 128M; Maximum amount of memory a script may consume (8MB) default
upload_max_filesize   = 64M;  The maximum size of an uploaded file.
post_max_size         = 64M;
mysql.connect_timeout = 120;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42990 (Deprecate WP_UnitTestCase::_make_attachment) updated</title>
      
        <dc:creator>Frank Klein</dc:creator>

      <pubDate>Thu, 28 Dec 2017 13:10:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42990#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42990#comment:1/1514466646004973</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>42990.patch attached to Ticket #42990</title>
      
        <dc:creator>Frank Klein</dc:creator>

      <pubDate>Thu, 28 Dec 2017 13:10:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42990/42990.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42990/42990.patch/1514466616137561</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42990 (Deprecate WP_UnitTestCase::_make_attachment) created</title>
      
        <dc:creator>Frank Klein</dc:creator>

      <pubDate>Thu, 28 Dec 2017 13:07:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42990</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42990/1514466456867068</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/35309" title="Unit Tests: consolidate the many separate implementations of ..."&gt;r35309&lt;/a&gt;, several ways of creating an attachment for an uploaded media file were consolidated into a single method, &lt;code&gt;WP_UnitTestCase::_make_attachment&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
As part of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34855" title="Merge the Responsive Images feature plugin into core, initial commit. ..."&gt;r34855&lt;/a&gt;, a new method, &lt;code&gt;create_upload_object&lt;/code&gt;, was added to &lt;code&gt;WP_UnitTest_Factory_For_Attachment&lt;/code&gt;. It contains all of the code from &lt;code&gt;_make_attachment&lt;/code&gt;, but additionally it also handles the upload of the media file.
&lt;/p&gt;
&lt;p&gt;
We should deprecate the &lt;code&gt;_make_attachment&lt;/code&gt; helper method, and use the factory method instead. This reduces duplicate code, and makes the interface of &lt;code&gt;WP_UnitTestCase&lt;/code&gt; cleaner.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41973 (HTTP Error when uploading images on PHP 7.1.7) updated</title>
      
        <dc:creator>cmb42</dc:creator>

      <pubDate>Thu, 28 Dec 2017 12:23:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41973#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41973#comment:30/1514463826741588</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;
SOLUTION FOUND for my similar issue:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Create file called .user.ini in root firectory of wp installation (if it doesn’t already exist.)
Add the following lines. The FIRST cured my issue, the second may solve others(optional):
&lt;/p&gt;
&lt;p&gt;
memory_limit = 128M
max_execution_time = 300
&lt;/p&gt;
&lt;p&gt;
You can adjust the number as needed.
Place the file in the root dir for the website (same dir as wp_config.php).
&lt;/p&gt;
&lt;p&gt;
Since this seems so closely tied to plugins, and, at least WordFence adds the .user.ini file to the env., maybe this is a big clue to the underlying cause?  I added &lt;code&gt;define( 'WP_MEMORY_LIMIT', '256M' );&lt;/code&gt; to wp-config.php, but it did nothing for this problem. Adding/changing .user.ini did fix it.
&lt;/p&gt;
&lt;p&gt;
Maybe this will help others.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28407 (You are unable to override the attachment name in wp_mail() when ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 28 Dec 2017 11:58:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28407#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28407#comment:9/1514462308248181</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I just uploaded &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/28407/28407.2.diff" title="Attachment '28407.2.diff' in Ticket #28407"&gt;28407.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/28407/28407.2.diff" title="Download"&gt;​&lt;/a&gt; as a refreshed patch of the original idea, along with unit tests.
&lt;/p&gt;
&lt;p&gt;
While I was at it, I also created &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/28407/28407-alternative.diff" title="Attachment '28407-alternative.diff' in Ticket #28407"&gt;28407-alternative.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/28407/28407-alternative.diff" title="Download"&gt;​&lt;/a&gt;, which would allow developers to override every argument for an attachment. An example from the unit test:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;wp_mail( 'user@example.org', 'Subject', 'Hello World', '', array(
        array(
                'path' =&amp;gt; DIR_TESTDATA . '/images/canola.jpg',
                'name' =&amp;gt; 'myawesomeimage.jpg',
                'encoding' =&amp;gt; '8bit',
                'type' =&amp;gt; 'image/jpeg',
                'disposition' =&amp;gt; 'attachment',
        ),
        array(
                'path' =&amp;gt; DIR_TESTDATA . '/images/waffles.jpg',
                'name' =&amp;gt; 'foobar.jpg',
                'encoding' =&amp;gt; 'base64',
                'type' =&amp;gt; 'image/png',
                'disposition' =&amp;gt; 'inline',
        ),
) );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
I'm not 100% this is a good idea, since it makes it very easy to mess something up. But it would certainly be more future-proof than using an associative array.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>28407-alternative.diff attached to Ticket #28407</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 28 Dec 2017 11:55:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28407/28407-alternative.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28407/28407-alternative.diff/1514462113027620</guid>
      <description>&lt;p&gt;
Alternative patch that allows changing every argument of addAttachment()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>28407.2.diff attached to Ticket #28407</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 28 Dec 2017 11:38:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28407/28407.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28407/28407.2.diff/1514461097234751</guid>
      <description>&lt;p&gt;
Refreshed patch with unit tests
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42989 (REST API: Using array type when defining fields in ...) updated</title>
      
        <dc:creator>sarukuku</dc:creator>

      <pubDate>Thu, 28 Dec 2017 11:13:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42989#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42989#comment:1/1514459605860661</guid>
      <description>&lt;p&gt;
These might be related but I'm not sure:
&lt;a href="https://core.trac.wordpress.org/ticket/42875"&gt;https://core.trac.wordpress.org/ticket/42875&lt;/a&gt;
&lt;a href="https://core.trac.wordpress.org/ticket/42961"&gt;https://core.trac.wordpress.org/ticket/42961&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42989 (REST API: Using array type when defining fields in ...) created</title>
      
        <dc:creator>sarukuku</dc:creator>

      <pubDate>Thu, 28 Dec 2017 11:07:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42989</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42989/1514459249862992</guid>
      <description>&lt;p&gt;
I have error reporting turned on in dev. Then I register a route like this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;register_rest_route( 'test/v1', 'array_test', array(
  array(
    'methods' =&amp;gt; WP_REST_Server::READABLE,
    'callback' =&amp;gt; function ( WP_REST_Request $request ) {
      // Just reflect back the value of the test parameter
      return rest_ensure_response( $request-&amp;gt;get_param( 'test' ) );
    },
    'args' =&amp;gt; array(
      'test' =&amp;gt; array(
        'type' =&amp;gt; 'array'
      )
    )
  )
));
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Then I call it like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;your-dev-domain&amp;gt;/wp-json/test/v1/array_test/?test[]=value1&amp;amp;test[]=value2
&lt;/pre&gt;&lt;p&gt;
I expect to get back a JSON response where the content looks like this: ["value1","value2"]. Instead I get Notice: Undefined index: items in /var/www/html/wp-includes/rest-api.php on line 1092 twice and then Warning: Cannot modify header information - headers already sent by (output started at /var/www/html/wp-includes/rest-api.php:1092) in /var/www/html/wp-includes/rest-api/class-wp-rest-server.php on line 1248.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://www.dropbox.com/s/2ftpv08md3eofsw/Screen%20Shot%202017-12-28%20at%2013.02.00.png?dl=1"&gt;&lt;img src="https://www.dropbox.com/s/2ftpv08md3eofsw/Screen%20Shot%202017-12-28%20at%2013.02.00.png?dl=1" alt="https://www.dropbox.com/s/2ftpv08md3eofsw/Screen%20Shot%202017-12-28%20at%2013.02.00.png" crossorigin="anonymous" title="https://www.dropbox.com/s/2ftpv08md3eofsw/Screen%20Shot%202017-12-28%20at%2013.02.00.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42987 (is_active_sidebar returns true on after plugin deactivation) updated</title>
      
        <dc:creator>tpaksu</dc:creator>

      <pubDate>Thu, 28 Dec 2017 10:54:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42987#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42987#comment:2/1514458493716833</guid>
      <description>&lt;p&gt;
I solved it on my theme by using &lt;code&gt;retrieve_widgets&lt;/code&gt; function which internally calls &lt;code&gt;_wp_remove_unregistered_widgets&lt;/code&gt; that I think clears the inactive and disabled widgets from the database. But I don't feel comfortable with that solution that runs on every page render.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42166 (Bundle fonts used by default themes) updated</title>
      
        <dc:creator>stefannagy</dc:creator>

      <pubDate>Thu, 28 Dec 2017 10:35:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42166#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42166#comment:2/1514457318024527</guid>
      <description>&lt;p&gt;
Hi @dd32,
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We also used to use OpenSans in WordPress admin itself, however we dropped that in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36753" title="#36753: task (blessed): Use system fonts for a faster, more native-feeling admin (closed: fixed)"&gt;#36753&lt;/a&gt; in favour of system fonts.
&lt;/p&gt;
&lt;p&gt;
While I can't promise you that future default themes won't use Google Fonts if it provides the best user experience, know that it's always taken into consideration during the theme design process, and if anything, the fact we no longer need to use OpenSans in the admin should be a good sign for the future.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm really glad you dropped OpenSans in the admin panel in favour of system fonts. But in my view theme fonts are a different problem – that's why I don't think that this ticket is a duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26072" title="#26072: task (blessed): Bundle the Open Sans font (closed: wontfix)"&gt;#26072&lt;/a&gt;. When we talk about fonts in themes it's not a real option to drop them in favour of system fonts.
&lt;/p&gt;
&lt;p&gt;
The WP default themes seem to be designed for users with latin languages; in case of greek, cyrillic… charsets system fonts are used instead of the careful chosen ones. I'm quite sure that the reason for this is not because fonts are not so important for designers after all but because default themes are something like 'showcase themes' and it's just impossible to create a beautiful design that works for / with all different writing systems / charsets.
&lt;/p&gt;
&lt;p&gt;
In case of OpenSans you were talking about a font that supports many charsets (cyrillic, cyrillic-ext, greek, greek-ext, latin, latin-ext, viatnamese) while in case of Libre Franklin and most other fonts used in default themes we're talking about fonts that support only two charsets (latin and latin-ext). Apart from that as I understand it today most browsers support WOFF2 and unicode-range subsetting.
&lt;/p&gt;
&lt;p&gt;
So I opened this ticket because 1. default themes are different use cases – with different alternative options (dropping carefully chosen fonts in favour of system fonts is not one of them) and 2. in the last four years the basis for decision-making changed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42814 (PHP 7.2 Warning: ...wp-includes/post-template.php on line 284) updated</title>
      
        <dc:creator>Theolobias</dc:creator>

      <pubDate>Thu, 28 Dec 2017 09:36:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42814#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42814#comment:12/1514453784296405</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/42814#comment:11" title="Comment 11"&gt;kenwood31&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hey,
&lt;/p&gt;
&lt;p&gt;
Yes, it happens when Jetpack plugin is activated.
After checking several settings on this plugin, I noticed this is due to the feature "publicize".
&lt;/p&gt;
&lt;p&gt;
In my case, I didn't use it so I just switched it off (in Jetpack &amp;gt; Settings &amp;gt; Sharing) and the error is not displayed anymore.
Hope it will help you to fix it before a real fix on this ;)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I can't confirm this - deactivating the Pubilcize-feature doesn't change anything. (Maybe in your case it's due to another PHP-version?)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42983 (HTML Form to open links no longer working) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Thu, 28 Dec 2017 06:21:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42983#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42983#comment:2/1514442072856392</guid>
      <description>&lt;i&gt;Description&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42987 (is_active_sidebar returns true on after plugin deactivation) updated</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Thu, 28 Dec 2017 01:06:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42987#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42987#comment:1/1514423192902948</guid>
      <description>&lt;p&gt;
I think it is by design, so it checks in database if it has something inside, so that widget should get removed before or after plugin deactivation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28407 (You are unable to override the attachment name in wp_mail() when ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 27 Dec 2017 22:02:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28407#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28407#comment:8/1514412122538472</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42988 (HTML Code Checking Feature (V4.9) Has Bugs) updated</title>
      
        <dc:creator>jeremyescott</dc:creator>

      <pubDate>Wed, 27 Dec 2017 21:43:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42988#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42988#comment:1/1514410996233651</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
So, I'm not a "team" member, unless you count all of us as being on the team, but I follow tickets to both look for opportunities to submit patches and also keep a pulse on the community.
&lt;/p&gt;
&lt;p&gt;
This ticket--and the linked forum post--are both sorely lacking in information.
&lt;/p&gt;
&lt;p&gt;
For example, the initial post (and most follow-up comments) in the linked forum thread complain about things that the HTML widget isn't designed for, including PHP in the widget. It makes sense that the &lt;em&gt;HTML Widget&lt;/em&gt; doesn't accept PHP. Keep in mind that WP Core is built to protect its users, a huge chunk of which aren't as savy as us skilled devs, and giving anyone with widget access the ability to inject potentially bad PHP code into widgets is a very bad idea. A plugin author and/or a theme developer could easily register a custom widget that allows PHP entry via a widget (if that is even safe to put PHP in the db, another discussion), but any security holes would be a consequence of that plugin/theme and not core.
&lt;/p&gt;
&lt;p&gt;
Further, can you provide an example of your code that you say should work but doesn't? WordPress carefully sanitizes what it allows to put into the database in raw HTML and some things aren't allowed. Again, this may be for your safety, but you need to show an example of the code so that others can help you understand if what you're seeing is a bug that can/should be fixed or just a case of a user trying to use something that the widget isn't designed for.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42814 (PHP 7.2 Warning: ...wp-includes/post-template.php on line 284) updated</title>
      
        <dc:creator>kenwood31</dc:creator>

      <pubDate>Wed, 27 Dec 2017 17:36:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42814#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42814#comment:11/1514396173812089</guid>
      <description>&lt;p&gt;
Hey,
&lt;/p&gt;
&lt;p&gt;
Yes, it happens when Jetpack plugin is activated.
After checking several settings on this plugin, I noticed this is due to the feature "publicize".
&lt;/p&gt;
&lt;p&gt;
In my case, I didn't use it so I just switched it off (in Jetpack &amp;gt; Settings &amp;gt; Sharing) and the error is not displayed anymore.
Hope it will help you to fix it before a real fix on this ;)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42988 (HTML Code Checking Feature (V4.9) Has Bugs) created</title>
      
        <dc:creator>akaim</dc:creator>

      <pubDate>Wed, 27 Dec 2017 17:17:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42988</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42988/1514395032735122</guid>
      <description>&lt;p&gt;
Hi Team,
&lt;/p&gt;
&lt;p&gt;
Ever since version 4.9 went live, the "code checking" feature is rendering many custom HTML snippets inoperable. There is a thread here with a few complaints which I found after having similar issues.
&lt;/p&gt;
&lt;p&gt;
Our code works unless it is in a widget (which is had to be on the pages that it is on). Ever since the update, we now get an error saying we need "double quotes" (and we don't) and just for fun I added them and the code does not work with the double quotes (because it isn't meant to).
&lt;/p&gt;
&lt;p&gt;
Here is the thread - &lt;a class="ext-link" href="https://wordpress.org/support/topic/html-check-option-in-wordpress-4-9/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/html-check-option-in-wordpress-4-9/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Is there a way that we can disable this feature via wp-config?
&lt;/p&gt;
&lt;p&gt;
I just sold my company on using WordPress now this is holding us up. The question I now have to address is "so how often will this happen as updates occur?" And know that I am a huge WP fan, so I am so frustrated to see this.
&lt;/p&gt;
&lt;p&gt;
Thanks in advance.
&lt;/p&gt;
&lt;p&gt;
Anthony
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42987 (is_active_sidebar returns true on after plugin deactivation) created</title>
      
        <dc:creator>tpaksu</dc:creator>

      <pubDate>Wed, 27 Dec 2017 12:44:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42987</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42987/1514378685041416</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
Steps to reproduce:
&lt;/p&gt;
&lt;p&gt;
code:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;is_active_sidebar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"custom-sidebar"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;
    Sidebar is active, and it contains widget(s).
&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;
    Sidebar doesn't contain any widget.
&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;ol&gt;&lt;li&gt;Add a widget plugin to the &lt;code&gt;custom-sidebar&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Disable the widget plugin
&lt;/li&gt;&lt;li&gt;Reload the page
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
The page is still showing sidebar is active. and &lt;code&gt;wp_get_sidebars_widgets()&lt;/code&gt; still contains the disabled plugin's widget info.
&lt;/p&gt;
&lt;p&gt;
Is this something intended? Or is it a bug?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42986 (Insert default filters to wp_delete_file to don't delete core files.) created</title>
      
        <dc:creator>lenon</dc:creator>

      <pubDate>Wed, 27 Dec 2017 11:57:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42986</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42986/1514375871653874</guid>
      <description>&lt;p&gt;
I am see many plugins that don't use wordpress method to delete files ( are using unink ) and exist wp_delete_file. Really you can insert filter, but I think that if didn't have filter by default you can use method to remove anything, including core files.
&lt;/p&gt;
&lt;p&gt;
If all agree and approve this ticket I can implement.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42985 (No error message returned by empty wp-login.php form) updated</title>
      
        <dc:creator>ajayghaghretiya1</dc:creator>

      <pubDate>Wed, 27 Dec 2017 11:18:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42985#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42985#comment:1/1514373536956483</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42982 (media player issue in wordpress 4.9.x) updated</title>
      
        <dc:creator>bhargavbhandari90</dc:creator>

      <pubDate>Wed, 27 Dec 2017 11:08:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42982#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42982#comment:3/1514372915552524</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42982 (media player issue in wordpress 4.9.x) updated</title>
      
        <dc:creator>bhargavbhandari90</dc:creator>

      <pubDate>Wed, 27 Dec 2017 11:07:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42982#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42982#comment:2/1514372852337980</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Same thing is happening with the playlist.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42904 (Speed up unit tests by disabling password hashing) updated</title>
      
        <dc:creator>Frank Klein</dc:creator>

      <pubDate>Wed, 27 Dec 2017 10:41:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42904#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42904#comment:4/1514371287469905</guid>
      <description>&lt;p&gt;
Thanks for the feedback @boonebgorges, I adapted the patch as proposed.
&lt;/p&gt;
&lt;p&gt;
I also added a unit test for this functionality of the user fixtures factory. It is excluded by default, as I don't see the need to test the factory every time the suite runs.
&lt;/p&gt;
&lt;p&gt;
I did not add the new argument to the inline documentation of the user fixtures factory, as it is not a straightforward change to make. Something for another ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>42904-2.patch attached to Ticket #42904</title>
      
        <dc:creator>Frank Klein</dc:creator>

      <pubDate>Wed, 27 Dec 2017 10:32:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42904/42904-2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42904/42904-2.patch/1514370765220269</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15397 (redirect_guess_404_permalink() doesn't guess posts with updated dates) updated</title>
      
        <dc:creator>Frank Klein</dc:creator>

      <pubDate>Wed, 27 Dec 2017 10:19:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15397#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15397#comment:22/1514369966959405</guid>
      <description>&lt;p&gt;
The tests could be improved:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Use shared fixtures, which makes the tests faster.
&lt;/li&gt;&lt;li&gt;Use &lt;code&gt;assertSame()&lt;/code&gt;, which checks types (not necessary here, but a good best practice nonetheless).
&lt;/li&gt;&lt;li&gt;Avoid using legacy method arguments when creating the attachment fixture (existing tests are often reused when writing others, so let's do it right the first time).
&lt;/li&gt;&lt;li&gt;Do not remove the added filter on &lt;code&gt;tearDown()&lt;/code&gt;, as this is handled by the &lt;code&gt;WP_UnitTestCase&lt;/code&gt; class (hooks are saved in &lt;code&gt;setUp()&lt;/code&gt; and restored in &lt;code&gt;tearDown()&lt;/code&gt;).
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42973 (REST endpoint points to root installation always) closed</title>
      
        <dc:creator>dingo_bastard</dc:creator>

      <pubDate>Wed, 27 Dec 2017 10:15:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42973#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42973#comment:1/1514369724571514</guid>
      <description>invalid: &lt;p&gt;
Ok so this is not a bug. Theme sniffer had a wrong value hardcoded in the ajax call.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>15397-tests.patch attached to Ticket #15397</title>
      
        <dc:creator>Frank Klein</dc:creator>

      <pubDate>Wed, 27 Dec 2017 10:13:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/15397/15397-tests.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/15397/15397-tests.patch/1514369595372472</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41973 (HTTP Error when uploading images on PHP 7.1.7) updated</title>
      
        <dc:creator>cmb42</dc:creator>

      <pubDate>Wed, 27 Dec 2017 09:04:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41973#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41973#comment:29/1514365454640509</guid>
      <description>&lt;p&gt;
I have a very similar problem, except different env:
WP 4.1.9
PHP Version 5.6.28
Detailed explanation: &lt;a class="ext-link" href="https://wordpress.org/support/topic/upload-http-error-file-uploads-wp-breaks/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/upload-http-error-file-uploads-wp-breaks/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Summary:
JPG Files larger than error threshold of about 537 kb (+/- about 10 kb, actual threshold unknown) will not display or create thumbnails or other sized files in media library. These “large files” get loaded correctly on server, but display only default grey thumbnail of sheet of paper with folded corner. Also displays “HTTP error” message at time of upload.
&lt;/p&gt;
&lt;p&gt;
Large photos can be deleted correctly from media lib. Metadata can be edited.
&lt;/p&gt;
&lt;p&gt;
Large photos can be used to build pages and will display in editor when selected from media lib.
&lt;/p&gt;
&lt;p&gt;
Page Editing: When resizing in the page editor, photo immediately returns to previous size in editor, but will display as resized in preview. Same behavior when resized using direct number input of pixel size.
&lt;/p&gt;
&lt;p&gt;
Had another wp installation on this server previously (ver 3.x) without these problems.
&lt;/p&gt;
&lt;p&gt;
Any help would be appreciated and welcome.
&lt;/p&gt;
&lt;p&gt;
Cliff B.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42797 (Add missing parameter description in wp_get_post_parent_id function ...) reopened</title>
      
        <dc:creator>Frank Klein</dc:creator>

      <pubDate>Wed, 27 Dec 2017 08:34:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42797#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42797#comment:5/1514363649471024</guid>
      <description>&lt;p&gt;
Reopening this because the unit tests are not of an acceptable quality:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Shared fixtures should be used whenever possible. The test suite is already slow, and we should keep it from getting slower unnecessarily.
&lt;/li&gt;&lt;li&gt;The global &lt;code&gt;$post&lt;/code&gt; is an instance of &lt;code&gt;WP_Post&lt;/code&gt;, and not an integer (post id).
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Two smaller improvements:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;code&gt;assertSame()&lt;/code&gt; should be preferred, because the checks are stricter.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;assertInstanceOf()&lt;/code&gt; is a shorter way to determine the type of an object.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Also the global &lt;code&gt;$post&lt;/code&gt; gets reset after every test, so no need to do it manually.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>42797-tests.patch attached to Ticket #42797</title>
      
        <dc:creator>Frank Klein</dc:creator>

      <pubDate>Wed, 27 Dec 2017 08:32:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42797/42797-tests.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42797/42797-tests.patch/1514363564627159</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42985 (No error message returned by empty wp-login.php form) created</title>
      
        <dc:creator>zergling81</dc:creator>

      <pubDate>Wed, 27 Dec 2017 03:26:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42985</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42985/1514345181210290</guid>
      <description>&lt;p&gt;
If the wp-login.php login form is submitted empty, the page refreshes and no error message is displayed. Expected behavior would be a shake and an appropriate error message.
&lt;/p&gt;
&lt;p&gt;
(This is also needed to satisfy WACG 3.3.1 if we care about that... &lt;a class="ext-link" href="https://www.w3.org/TR/UNDERSTANDING-WCAG20/minimize-error-identified.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.w3.org/TR/UNDERSTANDING-WCAG20/minimize-error-identified.html&lt;/a&gt;)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item>
   </channel>
</rss>