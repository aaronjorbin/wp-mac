<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #52790 (Reusable blocks disappeared) updated</title>
      
        <dc:creator>mrschaal</dc:creator>

      <pubDate>Fri, 23 Apr 2021 22:01:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52790#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52790#comment:37/1619215302469063</guid>
      <description>&lt;p&gt;
I've also been experiencing the same issues on WordPress 5.7.1 using the Virtue Premium Theme. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Additionally, adding new reusable blocks via clicking on "Add to reusable blocks" at the context menu of a block within the Gutenberg Editor while editing a page has not been working anymore either. It seemed that the click has been registered, but the block won't change at all and also has not been added to the list of reusable blocks.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
By deactivating all plugins and re-activating them one by one again, I've found out that the plugin "Autooptimize" causes this issue. As soon as I have deactived it, the issues were gone!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Now I can at least create new blocks, but can't reference them within any other page than the page on which they have been created. The widget for adding reusable blocks won't find the newly created one. Therefore I have no chance to find and embed the reusable block while editing another page anymore.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52909 (git repo README.md should include instructions to install svn) updated</title>
      
        <dc:creator>alexstine</dc:creator>

      <pubDate>Fri, 23 Apr 2021 20:35:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52909#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52909#comment:5/1619210124286616</guid>
      <description>&lt;p&gt;
I experienced an error where svn returned command not found killing npm run env:install. I've attached my debug.log.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Hope it helps.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>debug.log attached to Ticket #52909</title>
      
        <dc:creator>alexstine</dc:creator>

      <pubDate>Fri, 23 Apr 2021 20:35:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/52909/debug.log</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/52909/debug.log/1619210107351766</guid>
      <description>&lt;p&gt;
debug.log from my local repo.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #52909 (git repo README.md should include instructions to install svn) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 23 Apr 2021 20:25:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52909#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52909#comment:4/1619209558897693</guid>
      <description>&lt;p&gt;
Just noting, this was introduced in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49720" title="#49720: defect (bug): The Docker-based local environment should install the WordPress ... (closed: fixed)"&gt;#49720&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52909 (git repo README.md should include instructions to install svn) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 23 Apr 2021 20:25:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52909#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52909#comment:3/1619209511520769</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by desrosj. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1619209507234600"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52849 (Accessibility/Application passwords: Keyboard navigation issue on user ...) updated</title>
      
        <dc:creator>alexstine</dc:creator>

      <pubDate>Fri, 23 Apr 2021 20:22:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52849#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52849#comment:6/1619209334747432</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I just tested the patch and it seems that it is still not working great. Here's what happened while testing in Firefox.&lt;br /&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Focus in a profile field, First Name.
&lt;/li&gt;&lt;li&gt;Type some text.
&lt;/li&gt;&lt;li&gt;Press Enter.
&lt;/li&gt;&lt;li&gt;Focus is moved to Application Passwords name field.
&lt;/li&gt;&lt;li&gt;Profile changes saved.
&lt;/li&gt;&lt;li&gt;Focus is placed back at the Application Passwords form.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
We need to figure out how to disable the focus bounce to the Application Passwords section when form submit event occurs on main profile form.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It's getting better, but not quite there yet.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also the patch needs refresh, there is a merge conflict.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53081 (Duplicate email entry) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 23 Apr 2021 19:54:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53081#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53081#comment:2/1619207648398647</guid>
      <description>&lt;p&gt;
@jorbin beat me to it, but I had the same thoughts earlier when I first read this ticket.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'd also add that there are some benefits to having emails recognized as unique when adding additional &lt;code&gt;.&lt;/code&gt;s. For example, when creating test accounts.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If viewing emails with periods as unique is important for the site you are managing, a plugin is the best bet.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39163 (Use REQUEST_TIME_FLOAT for timing) closed</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 23 Apr 2021 19:47:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39163#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39163#comment:5/1619207264637923</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50786" title="Bootstrap/Load: Add Function for reliable timing data
Adds ..."&gt;50786&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Bootstrap/Load: Add Function for reliable timing data&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Adds timer_float which can be used to get the time elapsed so far during the PHP script. Should make it easier to display the page generation time in the footer of admin.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
WordPress should expose timing data as a float in the most accurate manner possible. timer_stop() has two problems: it uses an initial timestamp generated later than it needs to be and its formatted return value can not reliably be used as a number (some locales swap commas and periods, for example).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props andy, matt, jorbin.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39163" title="#39163: enhancement: Use REQUEST_TIME_FLOAT for timing (closed: fixed)"&gt;#39163&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [50786]: Bootstrap/Load: Add Function for reliable timing data  Adds ...</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 23 Apr 2021 19:47:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/50786</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/50786/1619207263658061</guid>
      <description>&lt;p&gt;
Bootstrap/Load: Add Function for reliable timing data
&lt;/p&gt;
&lt;p&gt;
Adds timer_float which can be used to get the time elapsed so far during the PHP script. Should make it easier to display the page generation time in the footer of admin.
&lt;/p&gt;
&lt;p&gt;
WordPress should expose timing data as a float in the most accurate manner possible. timer_stop() has two problems: it uses an initial timestamp generated later than it needs to be and its formatted return value can not reliably be used as a number (some locales swap commas and periods, for example).
&lt;/p&gt;
&lt;p&gt;
Props andy, matt, jorbin.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39163" title="#39163: enhancement: Use REQUEST_TIME_FLOAT for timing (closed: fixed)"&gt;#39163&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39163 (Use REQUEST_TIME_FLOAT for timing) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 23 Apr 2021 19:32:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39163#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39163#comment:4/1619206367610547</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
small.diff looks good except now that WordPress dropped support for PHP 5.4, we don't need the compat code&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53077 (Remove IE11 from the list of supported browsers) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 23 Apr 2021 17:49:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53077#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53077#comment:6/1619200150858550</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/53077#comment:3" title="Comment 3"&gt;gziolo&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There is also &lt;code&gt;@wordpress/browserslist-config&lt;/code&gt; package that @netweb created. Should we align those two configs and make the npm package a source of truth for consistency?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Having a source of truth sounds great. But a disadvantage is that the browser list for Core is now buried in a separate repo on GitHub several folders deep. I am not up to date on best practices for maintaining &lt;code&gt;browserslist&lt;/code&gt;s for projects, but in my opinion, explicitly including it within the &lt;code&gt;package.json&lt;/code&gt; file could potentially make for a better contributor experience, mostly because it's easier to find and more apparent.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53077 (Remove IE11 from the list of supported browsers) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 23 Apr 2021 16:55:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53077#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53077#comment:5/1619196925714393</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/53077#comment:4" title="Comment 4"&gt;netweb&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I just removed IE 11 for the browser support handbook page (And added a changelog note)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/browser-support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/handbook/best-practices/browser-support/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks! Expanded the changelog a bit to also mention removing support for IE 6 to 10.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #50105 (Remove infinite scrolling behavior from the Media grid) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 23 Apr 2021 16:54:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50105#comment:64</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50105#comment:64/1619196870966676</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by joedolson. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1619196867365100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51809 (What happens to the about page with major auto-updates?) updated</title>
      
        <dc:creator>francina</dc:creator>

      <pubDate>Fri, 23 Apr 2021 16:43:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51809#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51809#comment:11/1619196180126479</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I am assigning this ticket to myself and I will get the discovery rolling during 5.8&lt;br /&gt;
Thanks!&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52728 (Widgets: Uncaught TypeError in PHP 8 when using objects for settings) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Fri, 23 Apr 2021 16:42:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52728#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52728#comment:4/1619196126750713</guid>
      <description>&lt;p&gt;
Just looked at the patch again and started wondering why the extra method is needed when changing the &lt;code&gt;array_key_exists()&lt;/code&gt; to &lt;code&gt;isset()&lt;/code&gt; would solve this just as easily and would make for a much simpler patch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I've read the complete discussion in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33442" title="#33442: defect (bug): Widgets not displayed if no $instance data is set (closed: fixed)"&gt;#33442&lt;/a&gt; and my take away from that discussion is basically that there are plugins/themes out there &lt;em&gt;doing it wrong&lt;/em&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
At the time, the change from &lt;code&gt;array_key_exists()&lt;/code&gt; to &lt;code&gt;isset()&lt;/code&gt; got reverted back to &lt;code&gt;array_key_exists()&lt;/code&gt; as &lt;em&gt;"it doesn't have any downside"&lt;/em&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This ticket now, correctly calls out that as of PHP 8.0, &lt;em&gt;it does have a downside&lt;/em&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
So, I've dived in to try and understand how this error can ever really happen in the first place.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;$instances&lt;/code&gt; is set via a call to &lt;code&gt;$this-&amp;gt;get_settings()&lt;/code&gt; and that method already does a check for &lt;code&gt;$settings&lt;/code&gt; being an array or instance of one of the supported classes.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This error then, can &lt;em&gt;only ever&lt;/em&gt; occur if a plugin/theme would overload the &lt;code&gt;Widget::get_settings()&lt;/code&gt; method and doesn't have the same safeguards in place, or, as was the case in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33442" title="#33442: defect (bug): Widgets not displayed if no $instance data is set (closed: fixed)"&gt;#33442&lt;/a&gt;, people overload the &lt;code&gt;Widget::update()&lt;/code&gt; method but &lt;em&gt;do not return the &lt;code&gt;$new_instance&lt;/code&gt; (or &lt;code&gt;false&lt;/code&gt;)&lt;/em&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In both those cases, IMO, this is very much a case of plugins &lt;em&gt;doing it wrong&lt;/em&gt; and not something WordPress should "fix" in the WordPress Core code - other than possibly adding a &lt;code&gt;_doing_it_wrong()&lt;/code&gt; notice, but to be fair, that would be overkill, as the &lt;code&gt;Widget::get_settings()&lt;/code&gt; method basically already does the validation and if people overload methods, they should at least comply with the expected return type.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
WordPress should not cater or facilitate unlimitedly to &lt;em&gt;plugins doing it wrong&lt;/em&gt;. IMO with this now being a fatal error in PHP 8.0, there is now a good argument to change it back to &lt;code&gt;isset()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Refs:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href="https://core.trac.wordpress.org/ticket/33442#comment:3"&gt;https://core.trac.wordpress.org/ticket/33442#comment:3&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a href="https://core.trac.wordpress.org/ticket/33442#comment:4"&gt;https://core.trac.wordpress.org/ticket/33442#comment:4&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
So, having said that, a much simpler patch would suffice, preferably accompanied by some tests, but other than that, I don't think we should bend over backwards for people doing it wrong.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51809 (What happens to the about page with major auto-updates?) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 23 Apr 2021 16:39:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51809#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51809#comment:10/1619195952900155</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by francina. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1619195950345200"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52790 (Reusable blocks disappeared) updated</title>
      
        <dc:creator>travisburch</dc:creator>

      <pubDate>Fri, 23 Apr 2021 16:23:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52790#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52790#comment:36/1619195001904567</guid>
      <description>&lt;p&gt;
I'm having similar issues. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Reusable blocks have become unusable.  Lose all integrity when edited/added/modified from a post. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Deleting themselves, lots of stuff.  I've also had links delete themselves, and trouble Saving/Updating posts.  &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
All of these issues are occurring even on fresh installs w/o any plugins.  &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Hosting techs (WPEngine) can't seem to replicate it -- though I'm seeing it on multiple (clean) browsers, and on multiple computers, on fresh WP installs. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fwiw, I've never used the Autoptimize plugin.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53079 (Rest API Json Schema is invalid) updated</title>
      
        <dc:creator>bukowa</dc:creator>

      <pubDate>Fri, 23 Apr 2021 16:18:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53079#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53079#comment:2/1619194734466034</guid>
      <description>&lt;p&gt;
I found out the OPTIONS is actually in the documenation at: &lt;a class="ext-link" href="https://developer.wordpress.org/rest-api/reference/#a-distributed-api"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/rest-api/reference/#a-distributed-api&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It says:&lt;br /&gt;
&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
or via an OPTIONS request to any endpoint, allowing human- or machine-discovery of endpoint capabilities.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;code&gt;&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Is the format returned by that request following any standard beside the "schema" which is json-schema v4 ?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53081 (Duplicate email entry) closed</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 23 Apr 2021 16:18:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53081#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53081#comment:1/1619194710477979</guid>
      <description>wontfix: &lt;p&gt;
@amireshoon Welcome to trac. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
While it's true that some email providors (most notibly gmail) ignore dots in the name portion of an email address, It's not true for all email providers. &lt;a class="ext-link" href="https://answers.microsoft.com/en-us/outlook_com/forum/oaccount-omyinfo/does-the-dot-period-matter-in-outlook-emails/4bc7cd8c-55a0-4ad1-9819-9a19cf82a27d"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;For example, when using a period in a Microsoft (outlook 365) email, it is treated as a different account.&lt;/a&gt; An analays from &lt;a class="ext-link" href="https://slate.com/technology/2013/08/dots-in-gmail-addresses-what-happens-if-you-leave-out-the-period.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;slate&lt;/a&gt; and usernames found:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;DOTS MATTER: Microsoft Outlook, Yahoo Mail, Apple iCloud
DOTS DON’T MATTER: Gmail, Facebook
DOTS STRICTLY PROHIBITED: Twitter
&lt;/pre&gt;&lt;p&gt;
I, therefore, don't think we can ignore periods in email addresses and am closing this request. Feel free to comment even though it's closed, especially if you have different information that shows it is in fact safe for us to ignore periods and this decision can always be reconsidered.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #52849 (Accessibility/Application passwords: Keyboard navigation issue on user ...) updated</title>
      
        <dc:creator>alexstine</dc:creator>

      <pubDate>Fri, 23 Apr 2021 16:05:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52849#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52849#comment:5/1619193955266078</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52938 (Twenty Twenty-One: H1 is misplaced for a page set as blogpost container) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 23 Apr 2021 16:00:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52938#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52938#comment:9/1619193628540610</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by ryokuhi. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1619193624295500"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #50703 (WordPress classic editor accessibility issues for insert/edit links list) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Fri, 23 Apr 2021 15:49:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50703#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50703#comment:11/1619192987453494</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #50703 (WordPress classic editor accessibility issues for insert/edit links list) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Fri, 23 Apr 2021 15:49:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50703#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50703#comment:10/1619192973970225</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think that this could be easily fixed by changing the UI for the inserter slightly. Right now, the link inserter uses a hidden input to set the selected item and a pair of span elements to describe the link title and post type. If this was changed to an input that's focusable - like a submit, for example, and a label to wrap everything, then native keyboard operation would be a viable path to make this work. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52728 (Widgets: Uncaught TypeError in PHP 8 when using objects for settings) updated</title>
      
        <dc:creator>hellofromTonya</dc:creator>

      <pubDate>Fri, 23 Apr 2021 15:48:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52728#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52728#comment:3/1619192937201348</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
... I wonder if this isn't actually a bug/missing feature in PHP itself.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Looking bugs.php.net, there is already a bug report that &lt;code&gt;array_key_exists&lt;/code&gt; does not support &lt;code&gt;ArrayAccess&lt;/code&gt;: &lt;a class="ext-link" href="https://bugs.php.net/bug.php?id=80162"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://bugs.php.net/bug.php?id=80162&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Note: &lt;br /&gt;
&lt;code&gt;ArrayIterator&lt;/code&gt; implements &lt;code&gt;ArrayAccess&lt;/code&gt; &lt;a class="ext-link" href="https://www.php.net/manual/en/class.arrayiterator.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.php.net/manual/en/class.arrayiterator.php&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52849 (Accessibility/Application passwords: Keyboard navigation issue on user ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 23 Apr 2021 15:47:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52849#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52849#comment:4/1619192855009375</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by ryokuhi. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1619192852284700"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53081 (Duplicate email entry) created</title>
      
        <dc:creator>amireshoon</dc:creator>

      <pubDate>Fri, 23 Apr 2021 15:30:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53081</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53081/1619191846333343</guid>
      <description>&lt;p&gt;
As we know email@… and e.mail@… is the same email, but in wordpress we act like they are different. So same person with the same email address can create multiple accounts(e.g email@…, e.mail@…, e.m.ail@…...)&lt;br /&gt;
In this patch I normalised email adresses and fixed this problem.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #50703 (WordPress classic editor accessibility issues for insert/edit links list) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 23 Apr 2021 15:28:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50703#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50703#comment:9/1619191712831101</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by ryokuhi. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1619191710268300"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51189 (comments_pagination_base missing in get_comment_reply_link() function) updated</title>
      
        <dc:creator>ryokuhi</dc:creator>

      <pubDate>Fri, 23 Apr 2021 15:27:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51189#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51189#comment:7/1619191660832024</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The ticket was reviewed today during the accessibility team's bug-scrub. For the moment, we'll move the ticket to 5.8 to try to include it in next release and eventually punt it later.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51189 (comments_pagination_base missing in get_comment_reply_link() function) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 23 Apr 2021 15:22:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51189#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51189#comment:6/1619191335868113</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by ryokuhi. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1619191333264800"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52903 (Consent Management within WordPress Core) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 23 Apr 2021 15:21:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52903#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52903#comment:5/1619191303880843</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by ryokuhi. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1619191301264500"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52957 (Categories dropdown overlapping on admin block-patterns area) closed</title>
      
        <dc:creator>ryokuhi</dc:creator>

      <pubDate>Fri, 23 Apr 2021 15:20:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52957#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52957#comment:10/1619191247795216</guid>
      <description>reported-upstream: &lt;p&gt;
As a related issue was opened on Gutenberg's Repository, I'm closing this issue as reported upstream.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #47381 (Remove the Composer lock file from version control) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Fri, 23 Apr 2021 15:11:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47381#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47381#comment:4/1619190669097769</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'd very much like to revive this ticket as the existence of the committed &lt;code&gt;composer.lock&lt;/code&gt; file is - as @johnbillion states quite eloquently above - a blocker for easily testing cross-version PHP.&lt;br /&gt;
&lt;/p&gt;
&lt;h2 id="Reasontohaveacommittedcomposer.lockfile"&gt;Reason to have a committed &lt;code&gt;composer.lock&lt;/code&gt; file&lt;/h2&gt;
&lt;p&gt;
Let's look at the (valid) reasons for projects to have a committed &lt;code&gt;composer.lock&lt;/code&gt; file:&lt;br /&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Runtime dependencies - i.e. things in &lt;code&gt;require&lt;/code&gt; - which need to be locked to a specific version with which the software has been tested.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
This reason does &lt;strong&gt;NOT&lt;/strong&gt; apply to WordPress.&lt;br /&gt;
Yes, WordPress has runtime dependencies like Sodium Compat, PHPMailer, Requests and more. However, 1) those are not (currently) managed via Composer and 2) if that would change in the future, those could be locked at a fixed version constraint instead of allowing for a version range.&lt;br /&gt;
&lt;/p&gt;
&lt;ol start="2"&gt;&lt;li&gt;Contributors only need to worry about their contribution working with one particular set of dependencies.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
This reason again does &lt;strong&gt;NOT&lt;/strong&gt; apply to WordPress as all WordPress code needs to work cross-version, so only, for instance running the tests against PHP 7.4 using PHPUnit 7 and sending in a pull request/patch and expecting it to be accepted, even though the tests don't pass on other PHP versions, is not acceptable.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
So, having said that, I don't see a valid reason for having a committed &lt;code&gt;composer.lock&lt;/code&gt; file.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Consistency with the NPM side of the project, to me, is not an argument as NPM and Composer/PHP are very different beasts and the use of a &lt;code&gt;lock&lt;/code&gt; file for either should be evaluated on their own merits in each situation.&lt;br /&gt;
&lt;/p&gt;
&lt;h2 id="Reasonstoremoveitthecommittedcomposer.lockfile"&gt;Reasons to remove it the committed &lt;code&gt;composer.lock&lt;/code&gt; file&lt;/h2&gt;
&lt;ol&gt;&lt;li&gt;Make it easier for contributors to test against multiple different PHP versions locally.
&lt;/li&gt;&lt;li&gt;Make it easier to reproduce the builds run on GH Actions locally without having to check in the GH Actions script what hacks are needed to get the builds to run.
&lt;/li&gt;&lt;/ol&gt;&lt;h2 id="Otherconsiderations"&gt;Other considerations&lt;/h2&gt;
&lt;p&gt;
You may say, but what about managing things like WordPressCS ? We don't want builds to start failing randomly because WPCS released a new version....&lt;br /&gt;
And yes, you are right to bring that up. Tools like WPCS should be fixed to a specific version when we remove the &lt;code&gt;composer.lock&lt;/code&gt; file to prevent random build failures on a new release.&lt;br /&gt;
We should probably also add a fixed dependency to a specific PHP_CodeSniffer version as otherwise - with WPCS allowing for a wider range of PHPCS versions -, a new PHPCS release may have a similar effect.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In other words, that is something which can be managed via the &lt;code&gt;composer.json&lt;/code&gt; file instead of via a &lt;code&gt;lock&lt;/code&gt; file and tickets should be opened on a new release of those type of dependencies to do a managed update.&lt;br /&gt;
&lt;/p&gt;
&lt;h2 id="Movingforward"&gt;Moving forward&lt;/h2&gt;
&lt;p&gt;
All in all, I'm very much in favour of removing the &lt;code&gt;composer.lock&lt;/code&gt; file.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
To do this, as far as I can see, a patch would be needed which covers the following:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;[ ] Remove the &lt;code&gt;composer.lock&lt;/code&gt; file.
&lt;/li&gt;&lt;li&gt;[ ] Add the &lt;code&gt;composer.lock&lt;/code&gt; file to &lt;code&gt;.gitignore&lt;/code&gt; and &lt;code&gt;svn:ignore&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;[ ] Fix the version constraints for a subset of the &lt;code&gt;dev&lt;/code&gt; dependencies - in particularly WPCS and PHPCS - in the &lt;code&gt;composer.json&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;[ ] Remove all "hacks" currently in place in the GH Actions workflow scripts to allow for running things cross-versions.
&lt;/li&gt;&lt;li&gt;[ ] Make sure there is still a passing build after that 😁
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52957 (Categories dropdown overlapping on admin block-patterns area) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 23 Apr 2021 15:09:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52957#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52957#comment:9/1619190590826789</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by ryokuhi. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1619190588255800"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53057 (Added AJAX_DEBUG Constant for better ajax debugging) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Fri, 23 Apr 2021 15:09:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53057#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53057#comment:3/1619190556771545</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53057 (Added AJAX_DEBUG Constant for better ajax debugging) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 23 Apr 2021 15:07:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53057#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53057#comment:2/1619190472207023</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by ryokuhi. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1619190468253400"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52627 (Coding Standards fixes for WP 5.8) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 23 Apr 2021 14:49:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52627#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52627#comment:36/1619189393264798</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50785" title="Coding Standards: Use strict comparison in ..."&gt;50785&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Coding Standards: Use strict comparison in &lt;code&gt;wp-admin/includes/update-core.php&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Includes minor code layout fixes for better readability.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52627" title="#52627: task (blessed): Coding Standards fixes for WP 5.8 (closed: fixed)"&gt;#52627&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [50785]: Coding Standards: Use strict comparison in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 23 Apr 2021 14:49:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/50785</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/50785/1619189391992748</guid>
      <description>&lt;p&gt;
Coding Standards: Use strict comparison in &lt;code&gt;wp-admin/includes/update-core.php&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Includes minor code layout fixes for better readability.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52627" title="#52627: task (blessed): Coding Standards fixes for WP 5.8 (closed: fixed)"&gt;#52627&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #53080 (Use the `concurrency` option in GitHub Actions workflows.) created</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 23 Apr 2021 14:38:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53080</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53080/1619188732951296</guid>
      <description>&lt;p&gt;
GitHub has recently announced a new &lt;code&gt;concurrency&lt;/code&gt; key for use at the workflow and job level to ensure only a single workflow run or job is in progress. When used in combination with the &lt;code&gt;cancel-in-progress&lt;/code&gt; key, incomplete workflow runs can be cancelled automatically to prevent running workflows unnecessarily.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The feature is currently in beta. However, once it's stable enough, this can replace the need to rely on the 3rd party &lt;code&gt;styfle/cancel-workflow-action&lt;/code&gt; action.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Related information:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.blog/changelog/2021-04-19-github-actions-limit-workflow-run-or-job-concurrency/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Announcement post&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#concurrency"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Updated GitHub Actions documentation&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/styfle/cancel-workflow-action/issues/76"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/styfle/cancel-workflow-action/issues/76&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Some outstanding bug reports:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.community/t/concurrency-cancel-in-progress-at-top-level-doesnt-seem-to-cancel-running-workflows/175801"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.community/t/concurrency-cancel-in-progress-at-top-level-doesnt-seem-to-cancel-running-workflows/175801&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.community/t/actions-concurrency-bug-report/175695"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.community/t/actions-concurrency-bug-report/175695&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39108 (Media: can't leave an image "untitled" from the "Edit Media" menu) updated</title>
      
        <dc:creator>francina</dc:creator>

      <pubDate>Fri, 23 Apr 2021 14:36:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39108#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39108#comment:9/1619188612072060</guid>
      <description>&lt;p&gt;
Is the expected behavior to get the file to be Untitled in both cases or to be renamed in both cases?&lt;br /&gt;
Thanks&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40570 (Quicktags Toolbar hide if nojs) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 23 Apr 2021 14:07:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40570#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40570#comment:12/1619186838773164</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-test by boniu91. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-test/p1619186836070500"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52662 (Classic Editor: word count not hidden by `hide-if-no-js`) updated</title>
      
        <dc:creator>Boniu91</dc:creator>

      <pubDate>Fri, 23 Apr 2021 14:05:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52662#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52662#comment:6/1619186732287936</guid>
      <description>&lt;p&gt;
Tested on Chrome, working well.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52226 (PHP 8 issue: Fatal error when error_reporting is disabled) updated</title>
      
        <dc:creator>justinahinon</dc:creator>

      <pubDate>Fri, 23 Apr 2021 14:02:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52226#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52226#comment:10/1619186558813698</guid>
      <description>&lt;p&gt;
Tested with WordPress 5.8-alpha-50427-src and PHP 8.0.0.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Disabled error_reporting .&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I get no fatal error.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39108 (Media: can't leave an image "untitled" from the "Edit Media" menu) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 23 Apr 2021 13:59:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39108#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39108#comment:8/1619186397220408</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-test by boniu91. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-test/p1619186395068900"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40570 (Quicktags Toolbar hide if nojs) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 23 Apr 2021 13:59:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40570#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40570#comment:11/1619186397189501</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-test by boniu91. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-test/p1619186395068900"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52226 (PHP 8 issue: Fatal error when error_reporting is disabled) updated</title>
      
        <dc:creator>Boniu91</dc:creator>

      <pubDate>Fri, 23 Apr 2021 13:58:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52226#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52226#comment:9/1619186305226229</guid>
      <description>&lt;p&gt;
Confirmed with PHP Version 8.0.0 and WP 5.8-alpha-50784&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32579 (Admin menu: color schemes fly-out menu background when focused) updated</title>
      
        <dc:creator>justinahinon</dc:creator>

      <pubDate>Fri, 23 Apr 2021 13:54:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32579#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32579#comment:11/1619186067504822</guid>
      <description>&lt;p&gt;
Tested with &lt;strong&gt;Ocean&lt;/strong&gt; and &lt;strong&gt;Modern&lt;/strong&gt; color schemes on fresh WordPress 5.8-alpha-50427-src.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The styles were the admin menu icon (collapsed) has focus are consistent with those when the icon is hovered.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
So, I’d say this one is good&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52972 (WordPress background report jQuery error) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 23 Apr 2021 13:48:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52972#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52972#comment:5/1619185718647416</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the follow-up!&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52662 (Classic Editor: word count not hidden by `hide-if-no-js`) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 23 Apr 2021 13:43:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52662#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52662#comment:5/1619185392650324</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-test by boniu91. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-test/p1619185390063000"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52521 (Site Health: If there is only one recommendation, use singular) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 23 Apr 2021 13:42:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52521#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52521#comment:6/1619185375416658</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-test by boniu91. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-test/p1619185373062700"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52226 (PHP 8 issue: Fatal error when error_reporting is disabled) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 23 Apr 2021 13:42:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52226#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52226#comment:8/1619185366656625</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-test by boniu91. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-test/p1619185364062400"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32579 (Admin menu: color schemes fly-out menu background when focused) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 23 Apr 2021 13:42:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32579#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32579#comment:10/1619185359824201</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-test by boniu91. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-test/p1619185357062100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52438 (Theme translations in WP_LANG_DIR are loaded twice, no (logical) way ...) updated</title>
      
        <dc:creator>captain.crash</dc:creator>

      <pubDate>Fri, 23 Apr 2021 12:41:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52438#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52438#comment:1/1619181706560285</guid>
      <description>&lt;p&gt;
Gently bumping this after three months... Anyone?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #50539 (Explore a larger icon less WP Admin menu) updated</title>
      
        <dc:creator>jameskoster</dc:creator>

      <pubDate>Fri, 23 Apr 2021 11:52:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50539#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50539#comment:9/1619178745370204</guid>
      <description>&lt;p&gt;
Could this be an opportunity to utilise the visual design of the navigation components in the Site Editor, and create some alignment between wp-admin and Gutenberg? (See rough concept above).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Figma prototype: &lt;a class="ext-link" href="https://www.figma.com/proto/7jWcW1Ofv6dQLsGPEkQoii/Navigation-alignment?page-id=0%3A1&amp;amp;node-id=1%3A213&amp;amp;viewport=727%2C443%2C0.17424878478050232&amp;amp;scaling=scale-down"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.figma.com/proto/7jWcW1Ofv6dQLsGPEkQoii/Navigation-alignment?page-id=0%3A1&amp;amp;node-id=1%3A213&amp;amp;viewport=727%2C443%2C0.17424878478050232&amp;amp;scaling=scale-down&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>navigation.gif attached to Ticket #50539</title>
      
        <dc:creator>jameskoster</dc:creator>

      <pubDate>Fri, 23 Apr 2021 11:50:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/50539/navigation.gif</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/50539/navigation.gif/1619178634002148</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #52972 (WordPress background report jQuery error) closed</title>
      
        <dc:creator>jack960330</dc:creator>

      <pubDate>Fri, 23 Apr 2021 09:34:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52972#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52972#comment:4/1619170497637050</guid>
      <description>invalid: &lt;p&gt;
I reviewed my problem and although it was fixed by this method at the time, in the latest test, the problem disappeared, perhaps because of configuration issues that caused jQuery to not be loaded in a particular order. Sorry, this PR will be turned off&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #52790 (Reusable blocks disappeared) updated</title>
      
        <dc:creator>jagenda</dc:creator>

      <pubDate>Fri, 23 Apr 2021 09:18:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52790#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52790#comment:35/1619169486346279</guid>
      <description>&lt;p&gt;
Not sure if this is related but I've noticed a couple of changes that allow users to accidentally break their Reusable Blocks.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The block validation now strips content from Reusable Blocks that have other Reusable Blocks inside them. This is fine, but I find it odd that you're still allowed to add those nested blocks instead of preventing users from doing so in the first place.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Not only that but previously Reusable Blocks were not editable in the page editor, which meant that you were relatively safe from mistakes. What happens now though, is that the Add New Block (+) button inside Reusable Blocks is indistinguishable from the page content's Add New Block buttons and users keep adding nested Reusable Blocks by accident. The previous heading for Reusable Blocks is also missing, which would make it clearer, along with a clear outline, where a Reusable Block begins and where it ends.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
My suggestion would be to disable the ability to add nested Reusable Blocks altogether, and to prevent Reusable Block edits inside pages. If not the latter then at least clarify which content belongs inside the Reusable Block and which is current page content. Adding a clear heading and border that does not require selecting the block and in fact makes it easier to click on. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Again, these may be separate issues but the outcome is definitely the same and has caused grief among clients who do not know how to check if a block is Reusable before adding more Reusable blocks into it. I understand there is a new Post Update system to select which content you want to save but it's been poorly documented (no mention of it anywhere in the patch notes) and this does not help less tech savvy end-users from adding content in the wrong place and having to fix it later, wasting valuable time.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52972 (WordPress background report jQuery error) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Fri, 23 Apr 2021 08:08:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52972#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52972#comment:3/1619165336283114</guid>
      <description>&lt;p&gt;
Hiya,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Looking at your original issue, something appears to have modified the load order on your site, as jQuery is a dependency of the jQuery UI library (that those files causing errors originate with).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If you need help troubleshooting or resolving this, I would recommend creating a &lt;a class="ext-link" href="https://wordpress.org/support/forums"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;support forum post&lt;/a&gt;, where our support volunteers can help you out.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As for your followup on &lt;code&gt;noConflict&lt;/code&gt;; this problem would not be resolved by not using &lt;code&gt;noConflict&lt;/code&gt;, as that is a feature that makes jQuery not automatically bind to the &lt;code&gt;$&lt;/code&gt; shortcut.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The reason for core explicitly declaring &lt;code&gt;noConflict&lt;/code&gt; is that multiple libraries use the &lt;code&gt;$&lt;/code&gt; shortcut, and binding it to WordPress directly has the potential to break plugins or themes.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Related &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16494" title="#16494: enhancement: Remove &amp;#34;no conflict&amp;#34; mode from bundled jquery (closed: maybelater)"&gt;#16494&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #50615 (Editor: Create standalone JSON schema for block type definition) updated</title>
      
        <dc:creator>gziolo</dc:creator>

      <pubDate>Fri, 23 Apr 2021 07:48:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50615#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50615#comment:9/1619164084738042</guid>
      <description>&lt;p&gt;
It looks like we settled on the i18n schema for both &lt;code&gt;block.json&lt;/code&gt; and &lt;code&gt;theme.json&lt;/code&gt;. The most recent work for &lt;code&gt;block.json&lt;/code&gt;:&lt;br /&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/30293"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/30293&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It looks this way:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;{
	"title": "block title",
	"description": "block description",
	"keywords": [ "block keyword" ],
	"styles": [
		{
			"label": "block style label"
		}
	],
	"variations": [
		{
			"title": "block variation title",
			"description": "block variation description",
			"keywords": [ "block variation keyword" ]
		}
	]
}
&lt;/pre&gt;&lt;p&gt;
It should be enough to use it as a shared schema for WP-CLI and WP core. The question is how would it be consumed? In WP Core we could copy the file with webpack from the published npm module. What would be the preference for WP CLI?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53077 (Remove IE11 from the list of supported browsers) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Fri, 23 Apr 2021 07:13:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53077#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53077#comment:4/1619161983751041</guid>
      <description>&lt;p&gt;
Using and aligning these would be great :)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I just removed IE 11 for the browser support handbook page (And added a changelog note)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/browser-support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/handbook/best-practices/browser-support/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52867 (Add capability to set default format for image sub-sizes.) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Fri, 23 Apr 2021 06:53:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52867#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52867#comment:18/1619160820135711</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/52867#comment:16" title="Comment 16"&gt;mikeschroder&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;I noticed that the default image editor on my environment, Imagick, did not support WebP. GD on the same system did support WebP, but it wasn't used because the editor is chosen on whether it supports the format being loaded.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
As a follow-up on this, we could probably add support for checking more than one mime-type, and include the filter here as well, which would fix the problem:&lt;br /&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/blob/master/src/wp-includes/media.php#L3752"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/wordpress-develop/blob/master/src/wp-includes/media.php#L3752&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52972 (WordPress background report jQuery error) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 23 Apr 2021 06:47:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52972#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52972#comment:2/1619160454140977</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jack960330. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1619160450220200"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53077 (Remove IE11 from the list of supported browsers) updated</title>
      
        <dc:creator>gziolo</dc:creator>

      <pubDate>Fri, 23 Apr 2021 06:23:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53077#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53077#comment:3/1619158990885241</guid>
      <description>&lt;p&gt;
There is also &lt;code&gt;@wordpress/browserslist-config&lt;/code&gt; package that @netweb created. Should we align those two configs and make the npm package a source of truth for consistency?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/blob/trunk/packages/browserslist-config/index.js"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/blob/trunk/packages/browserslist-config/index.js&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52900 (Instantly index WordPress web sites content in Search Engines) updated</title>
      
        <dc:creator>fabricecanel</dc:creator>

      <pubDate>Fri, 23 Apr 2021 05:28:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52900#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52900#comment:19/1619155689116144</guid>
      <description>&lt;p&gt;
On this Earth Day 🌎, I want to share an update related to this feature proposal. That's early but we should be able to share a proposal/Request For Comments supported by key actors in the industry in the following weeks. Endgame is not only to streamline indexing for all search engines; this is also to remove useless crawl footprint at trillions of URLs scale each year.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53066 (Trigger errors when non-existent methods are called on objects.) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Fri, 23 Apr 2021 04:27:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53066#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53066#comment:8/1619152065504068</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/jrfnl"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;jrfnl&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1202#issuecomment-825376623"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1202&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm strongly against introducing Exceptions for a PHP behaviour.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Why ? PHP itself has done so for all PHP native errors by now...&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm also against introducing Exceptions in WordPress for this specific case, where Exceptions are not used within WordPress at all anywhere else (aside from third party libraries, whose exceptions we hide from Developers behind API wrappers).&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Help me out. Isn't the reason for this historic ? I.e. Basically WP needed Exceptions, but also still needed to support PHP 4.x, so to get round the limitations of PHP 4.x, &lt;code&gt;WP_Error&lt;/code&gt; was introduced as a sort-of "poor man's Exception" ?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
To me, the fact that Exceptions _couldn't_ be introduced in the past does not sound like a valid reason why they _shouldn't_ be introduced now.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49278 (Improve meta query) updated</title>
      
        <dc:creator>markparnell</dc:creator>

      <pubDate>Fri, 23 Apr 2021 03:13:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49278#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49278#comment:2/1619147636100185</guid>
      <description>&lt;p&gt;
I've independently come to the same conclusion here. Particularly on large sites (i.e. millions of rows in the meta table), this makes a massive difference to performance. I've run some quick tests and got similar results to @jillebehm - with the additional clause in the &lt;code&gt;JOIN&lt;/code&gt; the returned data is the same, but the query runs several orders of magnitude quicker.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Would love for someone with more SQL (and &lt;code&gt;WP_Meta_Query&lt;/code&gt;) knowledge than me to take a look, but from where I'm sitting this appears to be a simple change that could drastically improve performance for a lot of sites.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28020 (get_userdata and wp_get_current_user do not share WP_User instance) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Fri, 23 Apr 2021 00:41:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28020#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28020#comment:20/1619138468859132</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/880"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;linked pull request&lt;/a&gt; makes the following changes from &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/28020/28020.2.diff" title="Attachment '28020.2.diff' in Ticket #28020"&gt;28020.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/28020/28020.2.diff" title="Download"&gt;​&lt;/a&gt; :&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;reverted the new &lt;code&gt;$force&lt;/code&gt; parameter in the original patch on &lt;code&gt;wp_set_current_user()&lt;/code&gt; to avoid changing the signature of a pluggable function
&lt;/li&gt;&lt;li&gt;force refresh the current user's object as part of &lt;code&gt;clean_user_cache()&lt;/code&gt; per original patch but using a different technique
&lt;/li&gt;&lt;li&gt;&lt;code&gt;clean_user_cache()&lt;/code&gt; immediately rewarms the current user's cache as a result of above. Strictly speaking the function is meant to clean rather than clear but it is a backward compatibility change
&lt;/li&gt;&lt;li&gt;switched to strict comparisons in a few places
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I think this is good to go in but given I've made a few changes it would be good to get another set of eyes on it.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53079 (Rest API Json Schema is invalid) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 23 Apr 2021 00:35:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53079#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53079#comment:1/1619138126366040</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28020 (get_userdata and wp_get_current_user do not share WP_User instance) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Fri, 23 Apr 2021 00:22:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28020#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28020#comment:19/1619137366519742</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/peterwilsoncc"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;peterwilsoncc&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/880#issuecomment-825284985"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #880&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I've made a change along the lines of my suggestion above in 20e1d684e510652b35da8f2d60e9cc42197a84f6 &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Using &lt;code&gt;unset()&lt;/code&gt; broke a bunch of things (such as authentication for one) so I set the current user to &lt;code&gt;null&lt;/code&gt; to force a refresh instead. &lt;code&gt;isset( null ) === false&lt;/code&gt; so the effect is the same. &lt;a class="ext-link" href="https://3v4l.org/BZau4"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://3v4l.org/BZau4&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53079 (Rest API Json Schema is invalid) created</title>
      
        <dc:creator>bukowa</dc:creator>

      <pubDate>Fri, 23 Apr 2021 00:10:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53079</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53079/1619136648679553</guid>
      <description>&lt;p&gt;
Hello i tried to validate JSON SCHEMA using online validators from &lt;a class="ext-link" href="https://json-schema.org/implementations.html#validators"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://json-schema.org/implementations.html#validators&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Looks like the schema does not pass any validator. I would like to generate some client code in different languages but all of them says schema is invalid.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Overall i couldn't find a way to get the schema directly from wordpress documentation. After some googling i found out i have to call &lt;code&gt;curl -X OPTIONS https://mydomain.com/wp-json/wp/v2/posts&lt;/code&gt; and then there's a nested 'schema' property.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also the docs at &lt;a class="ext-link" href="https://developer.wordpress.org/rest-api/reference/posts/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/rest-api/reference/posts/&lt;/a&gt; are kinda missleading because for the 'content' it says 'object' - so that can be actually anything?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I would really like to work with wordpress and the REST API it provides but overall i find it pretty difficult.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #53066 (Trigger errors when non-existent methods are called on objects.) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Thu, 22 Apr 2021 23:16:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53066#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53066#comment:7/1619133406895752</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/dd32"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;dd32&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1202#issuecomment-825255712"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1202&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Consider that there'd be a inconsistent approach needed to catch it between different classes, eg:&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's actually untrue.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You're right that it would work either way, but that's not the inconsistent approach I'm pointing out, That introducing exceptions for these classes would result in some classes would be try-catch'able, and most others wouldn't.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm strongly against introducing Exceptions for a PHP behaviour. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm also against introducing Exceptions in WordPress for this specific case, where Exceptions are not used within WordPress at all anywhere else (aside from third party libraries, whose exceptions we hide from Developers behind API wrappers).&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41206 (Add embed handler for GitHub gists) closed</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 22 Apr 2021 23:11:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41206#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41206#comment:12/1619133104038689</guid>
      <description>maybelater: &lt;p&gt;
@desrosj it seems the answer to your question is no.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm going to close this off as &lt;code&gt;maybelater&lt;/code&gt; in the hope a documented oEmbed endpoint gets added to Gists sometime in the next five years.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #53077 (Remove IE11 from the list of supported browsers) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 22 Apr 2021 23:02:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53077#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53077#comment:2/1619132557977476</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53077 (Remove IE11 from the list of supported browsers) closed</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 22 Apr 2021 22:56:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53077#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53077#comment:1/1619132201882583</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50784" title="Build/Test Tools: Remove Internet Explorer 11 from the `browserslist`. ..."&gt;50784&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Build/Test Tools: Remove Internet Explorer 11 from the &lt;code&gt;browserslist&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This officially removes support for Internet Explorer 11 in the CSS files run through the build process in Core.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Individual tickets should be opened for removing each manually maintained area of the code base targeting IE11.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The resulting changes to CSS files are included in this commit.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/53077" title="#53077: defect (bug): Remove IE11 from the list of supported browsers (closed: fixed)"&gt;#53077&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [50784]: Build/Test Tools: Remove Internet Explorer 11 from the `browserslist`. ...</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 22 Apr 2021 22:56:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/50784</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/50784/1619132200908349</guid>
      <description>&lt;p&gt;
Build/Test Tools: Remove Internet Explorer 11 from the &lt;code&gt;browserslist&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This officially removes support for Internet Explorer 11 in the CSS files run through the build process in Core.
&lt;/p&gt;
&lt;p&gt;
Individual tickets should be opened for removing each manually maintained area of the code base targeting IE11.
&lt;/p&gt;
&lt;p&gt;
The resulting changes to CSS files are included in this commit.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/53077" title="#53077: defect (bug): Remove IE11 from the list of supported browsers (closed: fixed)"&gt;#53077&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #53078 (Stop loading polyfills specific to Internet Explorer) created</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 22 Apr 2021 22:54:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53078</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53078/1619132044708806</guid>
      <description>&lt;p&gt;
There are several polyfills included in Core that are loaded specifically for supporting Internet Explorer.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Now that IE11 support has been dropped, these polyfills are no longer necessary. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This ticket is for discussing when Core should stop loading them.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Regardless of when Core stops enqueuing them, they will need to remain in Core in case plugins and themes are declaring them as dependencies for their own scripts.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For context, see:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://make.wordpress.org/core/2021/03/04/discussion-dropping-support-for-ie11/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2021/03/04/discussion-dropping-support-for-ie11/&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://make.wordpress.org/core/2021/03/25/discussion-summary-dropping-support-for-ie11/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2021/03/25/discussion-summary-dropping-support-for-ie11/&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://make.wordpress.org/core/2021/04/22/ie-11-support-phase-out-plan/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2021/04/22/ie-11-support-phase-out-plan/&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/53077" title="#53077: defect (bug): Remove IE11 from the list of supported browsers (closed: fixed)"&gt;#53077&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #28020 (get_userdata and wp_get_current_user do not share WP_User instance) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Thu, 22 Apr 2021 22:51:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28020#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28020#comment:18/1619131872159393</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/peterwilsoncc"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;peterwilsoncc&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/880#issuecomment-825231700"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #880&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks, that's a great help.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I need to test the code but I am wondering if something like this could work when clearing the cache instead.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
if ( get_current_user_id() === (int) $user-&amp;gt;ID ) {&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
global $current_user;&lt;br /&gt;
unset( $current_user );&lt;br /&gt;
wp_set_current_user( $user-&amp;gt;ID );&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As the function is pluggable, it would be good to avoid the new parameter to avoid the need for third party developers to update it if they have replaced the function.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53077 (Remove IE11 from the list of supported browsers) created</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 22 Apr 2021 22:40:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53077</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53077/1619131200878635</guid>
      <description>&lt;p&gt;
IE11 will no longer be supported by WordPress starting in version 5.8.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;browserslist&lt;/code&gt; array needs to be updated to reflect this.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For context, see:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://make.wordpress.org/core/2021/03/04/discussion-dropping-support-for-ie11/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2021/03/04/discussion-dropping-support-for-ie11/&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://make.wordpress.org/core/2021/03/25/discussion-summary-dropping-support-for-ie11/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2021/03/25/discussion-summary-dropping-support-for-ie11/&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://make.wordpress.org/core/2021/04/22/ie-11-support-phase-out-plan/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2021/04/22/ie-11-support-phase-out-plan/&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #53070 (Establish a Core CSS deprecation path) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 22 Apr 2021 21:50:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53070#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53070#comment:1/1619128219527507</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-css by isabelbrison. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-css/p1619128216482100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #444 (wp_list_cats does not support 2 instances) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 22 Apr 2021 21:29:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/444#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/444#comment:8/1619126985283745</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-css by notlaura. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-css/p1619126982455800"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49999 (Iterating on Admin Color Schemes) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 22 Apr 2021 21:15:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49999#comment:127</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49999#comment:127/1619126130151520</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-css by notlaura. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-css/p1619126128440500"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49582 (wp-admin CSS audit) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 22 Apr 2021 21:09:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49582#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49582#comment:46/1619125788700122</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-css by notlaura. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-css/p1619125786433900"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53075 (Cannot paste content in my blog) closed</title>
      
        <dc:creator>5vlast</dc:creator>

      <pubDate>Thu, 22 Apr 2021 20:28:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53075#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53075#comment:1/1619123285303440</guid>
      <description>invalid: &lt;p&gt;
Dear Lynne miller, &lt;br /&gt;
Seems from the error message you share in your post. The problem you are facing's you can't upload media files more than you can't publish a new post. It can happen because of Media folder permission(~root/wp-content/uploads), and you need to contact your hosting company to fix such an issue.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #53076 (Press This: Add filters to allow custom Press This plugins) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Thu, 22 Apr 2021 19:39:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53076#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53076#comment:1/1619120353444898</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1207"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1207&lt;/a&gt; on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/wordpress-develop&lt;/a&gt; by &lt;a class="ext-link" href="https://github.com/kraftbj"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;kraftbj&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
Adds filters to &lt;code&gt;wp-admin/press-this.php&lt;/code&gt; to allow for custom Press This plugins to be used without special hacks.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Trac ticket: &lt;a href="https://core.trac.wordpress.org/ticket/53076"&gt;https://core.trac.wordpress.org/ticket/53076&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53076 (Press This: Add filters to allow custom Press This plugins) created</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Thu, 22 Apr 2021 19:38:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53076</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53076/1619120283142538</guid>
      <description>&lt;p&gt;
The Press This feature of WordPress was spun out of Core in 4.9 as into a "canonical plugin". The Core side code presumes the canonical plugin is the only implementation.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If a site owner wants a custom version of Press This, they are required to hack the plugin in some way (set the version super high and edit the files, replace it with something of a high version, etc to ensure the plugin is updated back to stock by WordPress).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This also limits what site owners can do—selective versions of Press This based on who is logged in, A/B tests of different Press This's, etc.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Request a few filters added to wp-admin/press-this.php to allow for alternative implementations. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #52627 (Coding Standards fixes for WP 5.8) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 22 Apr 2021 19:16:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52627#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52627#comment:35/1619119003390671</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50783" title="Coding Standards: Remove loose comparison in ..."&gt;50783&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Coding Standards: Remove loose comparison in &lt;code&gt;wp-admin/includes/plugin-install.php&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This more closely represents how the active installations count is displayed in the Plugin Directory.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52627" title="#52627: task (blessed): Coding Standards fixes for WP 5.8 (closed: fixed)"&gt;#52627&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [50783]: Coding Standards: Remove loose comparison in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 22 Apr 2021 19:16:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/50783</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/50783/1619119002437888</guid>
      <description>&lt;p&gt;
Coding Standards: Remove loose comparison in &lt;code&gt;wp-admin/includes/plugin-install.php&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This more closely represents how the active installations count is displayed in the Plugin Directory.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52627" title="#52627: task (blessed): Coding Standards fixes for WP 5.8 (closed: fixed)"&gt;#52627&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #53069 (Consider implications of FLoC and any actions to be taken on the ...) updated</title>
      
        <dc:creator>vimes1984</dc:creator>

      <pubDate>Thu, 22 Apr 2021 19:11:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53069#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53069#comment:7/1619118679380035</guid>
      <description>&lt;p&gt;
As per this: &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;When making decisions these are the users we consider first. A great example of this consideration is software options. Every time you give a user an option, you are asking them to make a decision. When a user doesn’t care or understand the option this ultimately leads to frustration. As developers we sometimes feel that providing options for everything is a good thing, you can never have too many choices, right? Ultimately these choices end up being technical ones, choices that the average end user has no interest in. It’s our duty as developers to make smart design decisions and avoid putting the weight of technical choices on our end users.&lt;/code&gt;&lt;br /&gt;
from here: &lt;a class="ext-link" href="https://wordpress.org/about/philosophy/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/about/philosophy/&lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;
I'd agree with Robin here this isn't a technical decision it's a question of privacy, so by offering an option we aren't "putting the weight of technical choices on our end users" we ARE and should put the weight of privacy choices on our end users though... Whether we choose to opt-in OR opt-out is a different discussion but the user SHOULD be made aware this isn't a technical decision. How that option then represents itself is a technical decision we shouldn't be asking them, do you want to opt out via Javascript or HTTP headers.... &lt;br /&gt;
&lt;br /&gt;
But I'd strongly advocate for giving the user the ability to opt in or out on the end user not us... &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53075 (Cannot paste content in my blog) created</title>
      
        <dc:creator>lynneamiller</dc:creator>

      <pubDate>Thu, 22 Apr 2021 18:26:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53075</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53075/1619115993577107</guid>
      <description>&lt;p&gt;
Hi, I'm unable to paste content for a new post on www.adopteerevelations.com.&lt;br /&gt;
When I try to paste text, little red lines appear in the text box. In the lower&lt;br /&gt;
right-hand corner, there's a message saying 'The site is experiencing technical&lt;br /&gt;
difficulties. Please check your site admin email inbox for instructions.' The&lt;br /&gt;
Add Media button is also not working. The last time I published a post was in&lt;br /&gt;
August 2020 and there were no problems. I don't know what to do and hope you can&lt;br /&gt;
resolve this issue. Thanks!&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #53069 (Consider implications of FLoC and any actions to be taken on the ...) updated</title>
      
        <dc:creator>robscott</dc:creator>

      <pubDate>Thu, 22 Apr 2021 17:58:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53069#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53069#comment:6/1619114315827258</guid>
      <description>&lt;p&gt;
Yes I get it - I'm saying it's not a technical question - it's a Privacy Control. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
"Would you like to opt your site out of FLoC?" - we're designing software for the majority... aren't we?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53069 (Consider implications of FLoC and any actions to be taken on the ...) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 22 Apr 2021 17:51:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53069#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53069#comment:5/1619113913382597</guid>
      <description>&lt;p&gt;
Yes, the point of this philosophy is so that site owners shouldn't need to make decisions, especially around technical concepts that they won't fully understand.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53069 (Consider implications of FLoC and any actions to be taken on the ...) updated</title>
      
        <dc:creator>robscott</dc:creator>

      <pubDate>Thu, 22 Apr 2021 17:48:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53069#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53069#comment:4/1619113703327799</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/53069#comment:3" title="Comment 3"&gt;jorbin&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@robscott In general, WordPress is very hesitant to add new options. It's a part of the &lt;a class="ext-link" href="https://wordpress.org/about/philosophy/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress Philosophies&lt;/a&gt; which specifically state "Decisions not Options".&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
When making decisions these are the users we consider first. A great example of this consideration is software options. Every time you give a user an option, you are asking them to make a decision. When a user doesn’t care or understand the option this ultimately leads to frustration. As developers we sometimes feel that providing options for everything is a good thing, you can never have too many choices, right? Ultimately these choices end up being technical ones, choices that the average end user has no interest in. It’s our duty as developers to make smart design decisions and avoid putting the weight of technical choices on our end users.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This philosophy point is fairly influenced by the writing of Havoc Pennington, the two essays of value here are &lt;a class="ext-link" href="https://ometer.com/preferences.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://ometer.com/preferences.html&lt;/a&gt; and &lt;a class="ext-link" href="https://ometer.com/free-software-ui.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://ometer.com/free-software-ui.html&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Understood, hence my use of the word decision in this statement:  "empowering webmaster to make decision for themselves" - adding a filter to add an HTTP header to the website is not a decision most people who run WP sites can make (without a developer) and hence, it's valid privacy control; adding the header (or not adding the header) would seem to be taking the decision away from the majority of website owners?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53069 (Consider implications of FLoC and any actions to be taken on the ...) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 22 Apr 2021 17:44:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53069#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53069#comment:3/1619113473052225</guid>
      <description>&lt;p&gt;
@robscott In general, WordPress is very hesitant to add new options. It's a part of the &lt;a class="ext-link" href="https://wordpress.org/about/philosophy/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress Philosophies&lt;/a&gt; which specifically state "Decisions not Options".&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
When making decisions these are the users we consider first. A great example of this consideration is software options. Every time you give a user an option, you are asking them to make a decision. When a user doesn’t care or understand the option this ultimately leads to frustration. As developers we sometimes feel that providing options for everything is a good thing, you can never have too many choices, right? Ultimately these choices end up being technical ones, choices that the average end user has no interest in. It’s our duty as developers to make smart design decisions and avoid putting the weight of technical choices on our end users.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This philosophy point is fairly influenced by the writing of Havoc Pennington, the two essays of value here are &lt;a class="ext-link" href="https://ometer.com/preferences.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://ometer.com/preferences.html&lt;/a&gt; and &lt;a class="ext-link" href="https://ometer.com/free-software-ui.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://ometer.com/free-software-ui.html&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53069 (Consider implications of FLoC and any actions to be taken on the ...) updated</title>
      
        <dc:creator>robscott</dc:creator>

      <pubDate>Thu, 22 Apr 2021 17:18:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53069#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53069#comment:2/1619111922332238</guid>
      <description>&lt;p&gt;
Thanks for listing this here @helen - I was sorry I couldn't make the core dev chat, but caught up with it on Slack.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This statement:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
"If WordPress were to send the explicit opt-out header by default, what sort of impact would this have on individual users (both providers and consumers) and ad/targeting technology at large?"&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I think we don't need to consider this to be a be-all and end-all "we've opted everyone in WordPress in or out!" Situation. A core setting, similar in nature to the robots meta opt-out, would be an enhancement, empowering webmaster to make decision for themselves?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The question then would be if we would opt out by default - but I don't see why (should the experiment move to production) we shouldn't empower WP website owners to make this decision without having to use a filter to add the header.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Is it plugin territory? Well, for me it fits with Privacy settings, regardless of political stance, we don't need to take a view: some people want to disable it, we should enable them to make this decision.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53072 (Enable revisions for the reusable block custom post type) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 22 Apr 2021 15:32:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53072#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53072#comment:9/1619105520408398</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
To clarify my concern, I just wanted to confirm that there were no autosaves of reusable blocks happening that were triggering many revisions.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Looks like the tests are good now! Feel free to commit, @matveb.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53072 (Enable revisions for the reusable block custom post type) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Thu, 22 Apr 2021 15:30:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53072#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53072#comment:8/1619105414231347</guid>
      <description>&lt;p&gt;
Ah yes, indeed thanks @desrosj good catch. I directly tested the code, I didn't try to apply the PR.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/53072#comment:7" title="Comment 7"&gt;matveb&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
To test, also go to edit the reusable block directly via "manage reusable blocks" and the selecting it from the list. Both saving flows should work.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Or go directly to &lt;code&gt;/wp-admin/edit.php?post_type=wp_block&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28020 (get_userdata and wp_get_current_user do not share WP_User instance) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Thu, 22 Apr 2021 15:04:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28020#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28020#comment:17/1619103861861047</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/donmhico"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;donmhico&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/880#issuecomment-824922350"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #880&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
@peterwilsoncc - First, thank you for looking into this and doing improvements. Really appreciate it!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Regarding the addition of &lt;code&gt;$force&lt;/code&gt; param in &lt;code&gt;wp_set_current_user()&lt;/code&gt;. First we if omit the changes related to &lt;code&gt;$force&lt;/code&gt; parameter and just have this changes&lt;br /&gt;
{{{php&lt;br /&gt;
function get_user_by( $field, $value ) {&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
global $current_user;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
$userdata = WP_User::get_data_by( $field, $value );&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
if ( ! $userdata ) {&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
return false;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
if ( $current_user instanceof WP_User &amp;amp;&amp;amp; $current_user-&amp;gt;ID === (int) $userdata-&amp;gt;ID ) {&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
return $current_user;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}}}&lt;br /&gt;
Running the full test suite will result to &lt;strong&gt;8 failures&lt;/strong&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;There were 8 failures:
1) Tests_Auth::test_password_trimming
Failed asserting that WP_Error Object (...) is an instance of class "WP_User".
/var/www/tests/phpunit/tests/auth.php:98
2) Tests_Auth::test_password_length_limit
Failed asserting that WP_Error Object (...) is an instance of class "WP_User".
/var/www/tests/phpunit/tests/auth.php:217
3) Tests_Auth::test_user_activation_key_is_saved
Invalid key.
Failed asserting that WP_Error Object (...) is not an instance of class "WP_Error".
/var/www/tests/phpunit/includes/abstract-testcase.php:609
/var/www/tests/phpunit/tests/auth.php:261
4) Tests_Auth::test_user_activation_key_is_checked
Invalid key.
Failed asserting that WP_Error Object (...) is not an instance of class "WP_Error".
/var/www/tests/phpunit/includes/abstract-testcase.php:609
/var/www/tests/phpunit/tests/auth.php:286
5) WP_Test_REST_Users_Controller::test_update_item_existing_email_case
Failed asserting that two strings are identical.
--- Expected
+++ Actual
@@ @@
-'Editor@example.com'
+'editor@example.com'
/var/www/tests/phpunit/tests/rest-api/rest-users-controller.php:1600
6) WP_Test_REST_Users_Controller::test_user_roundtrip_as_editor
Failed asserting that two strings are identical.
--- Expected
+++ Actual
@@ @@
-'\o/ ¯\_(ツ)_/¯'
+'User 0007480'
/var/www/tests/phpunit/tests/rest-api/rest-users-controller.php:2122
/var/www/tests/phpunit/tests/rest-api/rest-users-controller.php:2159
7) WP_Test_REST_Users_Controller::test_user_roundtrip_as_editor_html
Failed asserting that two strings are identical.
--- Expected
+++ Actual
@@ @@
-'div strong'
+'User 0007480'
/var/www/tests/phpunit/tests/rest-api/rest-users-controller.php:2122
/var/www/tests/phpunit/tests/rest-api/rest-users-controller.php:2210
8) Tests_XMLRPC_wp_editProfile::test_subscriber_profile
Failed asserting that two strings are identical.
--- Expected
+++ Actual
@@ @@
-'http://www.example.org/subscriber'
+''
/var/www/tests/phpunit/tests/xmlrpc/wp/editProfile.php:35
&lt;/pre&gt;&lt;p&gt;
Tracing what's common to these errors is &lt;code&gt;clean_user_cache()&lt;/code&gt;. What we want when &lt;code&gt;clean_user_cache( $user )&lt;/code&gt; is invoked, is if the passed &lt;code&gt;$user&lt;/code&gt; is the &lt;code&gt;global $current_user&lt;/code&gt;, we reset / refresh the $current_user so it will reflect the latest changes.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Now doing just something like this won't work &lt;strong&gt;(without &lt;code&gt;$force&lt;/code&gt;)&lt;/strong&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
function clean_user_cache( $user ) {&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
if ( is_numeric( $user ) ) {&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
$user = new WP_User( $user );&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
if ( ! $user-&amp;gt;exists() ) {&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
return;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
wp_cache_delete( $user-&amp;gt;ID, 'users' );&lt;br /&gt;
wp_cache_delete( $user-&amp;gt;user_login, 'userlogins' );&lt;br /&gt;
wp_cache_delete( $user-&amp;gt;user_email, 'useremail' );&lt;br /&gt;
wp_cache_delete( $user-&amp;gt;user_nicename, 'userslugs' );&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
/&lt;strong&gt;&lt;br /&gt;
&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;Fires immediately after the given user's cache is cleaned.
*
&lt;/li&gt;&lt;li&gt;@since 4.4.0
*
&lt;/li&gt;&lt;li&gt;@param int     $user_id User ID.
&lt;/li&gt;&lt;li&gt;@param WP_User $user    User object.
*/
&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;
&lt;p&gt;
do_action( 'clean_user_cache', $user-&amp;gt;ID, $user );&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
if ( get_current_user_id() === (int) $user-&amp;gt;ID ) {&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
wp_set_current_user( $user-&amp;gt;ID );&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The code block above won't work because &lt;code&gt;wp_set_current_user( $id )&lt;/code&gt; is returning early the &lt;code&gt;global $current_user&lt;/code&gt; without doing anything else if the passed &lt;code&gt;$id&lt;/code&gt; is the same as the &lt;code&gt;$current_user&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
function wp_set_current_user( $id, $name = &lt;em&gt; ) {&lt;br /&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
global $current_user;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;em&gt; If &lt;code&gt;$id&lt;/code&gt; matches the current user, there is nothing to do.&lt;br /&gt;
if ( isset( $current_user )&lt;br /&gt;
&amp;amp;&amp;amp; ( $current_user instanceof WP_User )&lt;br /&gt;
&amp;amp;&amp;amp; ( $id == $current_user-&amp;gt;ID )&lt;br /&gt;
&amp;amp;&amp;amp; ( null !== $id )&lt;br /&gt;
) {&lt;br /&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
return $current_user;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}}}&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Hence I added &lt;code&gt;$force&lt;/code&gt; param to force the &lt;strong&gt;re-&lt;/strong&gt;&lt;code&gt;setup_userdata()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
function wp_set_current_user( $id, $name = &lt;em&gt;, $force = false ) {&lt;br /&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
global $current_user;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;em&gt; If &lt;code&gt;$id&lt;/code&gt; matches the current user, there is nothing to do.&lt;br /&gt;
if ( isset( $current_user )&lt;br /&gt;
&amp;amp;&amp;amp; ( $current_user instanceof WP_User )&lt;br /&gt;
&amp;amp;&amp;amp; ( $id == $current_user-&amp;gt;ID )&lt;br /&gt;
&amp;amp;&amp;amp; ( null !== $id )&lt;br /&gt;
&amp;amp;&amp;amp; ( ! $force )&lt;br /&gt;
) {&lt;br /&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
return $current_user;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
$current_user = new WP_User( $id, $name );&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
setup_userdata( $current_user-&amp;gt;ID );&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
/&lt;strong&gt;&lt;br /&gt;
&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;Fires after the current user is set.
*
&lt;/li&gt;&lt;li&gt;@since 2.0.1
*/
&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;
&lt;p&gt;
do_action( 'set_current_user' );&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
return $current_user;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm not sure if I explained my mind clearly and I hope this clarifies my reasoning why I added &lt;code&gt;$force&lt;/code&gt;. Let me know if you have any other inquiries.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53074 (Branding Foot) closed</title>
      
        <dc:creator>davidbaumwald</dc:creator>

      <pubDate>Thu, 22 Apr 2021 14:59:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53074#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53074#comment:1/1619103548769171</guid>
      <description>invalid: &lt;p&gt;
Hello, @itemz, and welcome to WordPress Core Trac!  This system is for reporting of bugs in WordPress Core only, and the question you have pertains to a third-party plugin, WooCommerce.  Try their support forums at &lt;a class="ext-link" href="https://wordpress.org/support/plugin/woocommerce/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/plugin/woocommerce/&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #53074 (Branding Foot) created</title>
      
        <dc:creator>itemz</dc:creator>

      <pubDate>Thu, 22 Apr 2021 14:34:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53074</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53074/1619102045101116</guid>
      <description>&lt;p&gt;
Hello everyone, I want to remove the „creat with storefront &amp;amp; woocommerce“&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As woocommerce support confirm is this allowed? It’s this correct? And how I can remove &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #50539 (Explore a larger icon less WP Admin menu) updated</title>
      
        <dc:creator>hedgefield</dc:creator>

      <pubDate>Thu, 22 Apr 2021 14:26:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50539#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50539#comment:8/1619101601214809</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Nice! I kinda miss the flavor of the icons too but I'm not sure if that's because they were always there. I'd say more breathing room is more important than the icons, though maybe we can make the sidebar a little wider too? The FSE sidebar is a bit wider and I quite like that. That could give just enough space to experiment with some lighter icons, as @chrisvanpatten suggested. But if only this change shipped it'd be pretty nice already.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
One thing I would do either way is lower the 'collapse' option a bit more and make the icon just the triangle, without the circle. Because it's the only icon left the eye is drawn to it more now.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53072 (Enable revisions for the reusable block custom post type) updated</title>
      
        <dc:creator>matveb</dc:creator>

      <pubDate>Thu, 22 Apr 2021 14:24:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53072#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53072#comment:7/1619101482602536</guid>
      <description>&lt;p&gt;
@desrosj Ah, good to know! I was trying that flow since I've never used it before for patches :)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Yes, it should only commit revisions upon saving, and the saving flow for reusable blocks is not dependant on the post that may harbor it.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
To test, also go to edit the reusable block directly via "manage reusable blocks" and the selecting it from the list. Both saving flows should work.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53072 (Enable revisions for the reusable block custom post type) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 22 Apr 2021 13:36:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53072#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53072#comment:6/1619098596730197</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Did not mean to remove &lt;code&gt;has-unit-tests&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53072 (Enable revisions for the reusable block custom post type) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 22 Apr 2021 13:35:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53072#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53072#comment:5/1619098528173335</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It looks like the &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/actions/runs/773843603"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR has a unit test failure&lt;/a&gt; that needs to just be fixed before this can be committed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also, it looks like the branch was pushed directly to the mirror repository. @matveb for future reference, because &lt;code&gt;wordpress-develop&lt;/code&gt; is a mirror, any changes to that repo not found in SVN get overwritten when the repo syncs (I believe this happens every few minutes), so looks like while your PR is still open, your branch is now gone. It's best to open a PR from your fork to prevent that.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I've created a fresh PR on my fork with an update that should make the unit tests pass.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
One question I had was when a revision would actually be created for a reusable block. I did some testing and it seems a revision is only created when the block is actually saved (which is good).&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53072 (Enable revisions for the reusable block custom post type) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Thu, 22 Apr 2021 13:33:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53072#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53072#comment:4/1619098421529495</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1206"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1206&lt;/a&gt; on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/wordpress-develop&lt;/a&gt; by &lt;a class="ext-link" href="https://github.com/desrosj"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;desrosj&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
Supersedes &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1205/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/wordpress-develop/pull/1205/&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Trac ticket: &lt;a href="https://core.trac.wordpress.org/ticket/53072"&gt;https://core.trac.wordpress.org/ticket/53072&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53071 (Website Recovery) closed</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Thu, 22 Apr 2021 11:52:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53071#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53071#comment:1/1619092374823499</guid>
      <description>invalid: &lt;p&gt;
Hi and welcome to WordPress Core Trac!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Sorry to hear you are having issues with your website. Please note that this Trac is used for enhancements and bug reporting for the WordPress core software, not for individual support questions.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
You can use the WordPress support forums: &lt;a class="ext-link" href="https://wordpress.org/support/forums/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/forums/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thank you for understanding :)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #53072 (Enable revisions for the reusable block custom post type) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Thu, 22 Apr 2021 11:48:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53072#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53072#comment:3/1619092112988080</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Ah! Thank you for opening this ticket, I completely support this proposal.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The pull request works great on my side.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Marking for &lt;code&gt;commit&lt;/code&gt; action.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52790 (Reusable blocks disappeared) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Thu, 22 Apr 2021 11:41:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52790#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52790#comment:34/1619091702532499</guid>
      <description>&lt;p&gt;
@edragonxx I tried to follow the steps you described in your comment and I'm not able to reproduce the issue on a fresh install.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Here is a video of the steps I followed: &lt;a class="ext-link" href="https://i.gyazo.com/7ea9ae3696ad89550a051fcb563865aa.mp4"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://i.gyazo.com/7ea9ae3696ad89550a051fcb563865aa.mp4&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Could you please provide more details about the issue? Does it occurs with both existing and new reusable blocks? Are you creating the reusable blocks on the same page you're converting them to regular ones? Any detail may help to reproduce the issue.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;ps: please watch your language, the last sentence of your comment is not appropriate. Thank you :)&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53073 (Custom Block Issue in 5.7.1) closed</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Thu, 22 Apr 2021 11:28:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53073#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53073#comment:1/1619090897657922</guid>
      <description>invalid: &lt;p&gt;
Hello and welcome to WordPress Trac @deepusurana,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Sorry to hear you have issues with your WordPress installation.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It looks like a support question, as the issue is not reproductible on a fresh install.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
You should rather open a ticket on the WordPress support forums: &lt;a class="ext-link" href="https://wordpress.org/support/forum/how-to-and-troubleshooting/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/forum/how-to-and-troubleshooting/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks,&lt;br /&gt;
Jb&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #53073 (Custom Block Issue in 5.7.1) created</title>
      
        <dc:creator>deepusurana</dc:creator>

      <pubDate>Thu, 22 Apr 2021 11:21:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53073</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53073/1619090490809851</guid>
      <description>&lt;p&gt;
Hi,&lt;br /&gt;
All custom blocks were working fine before 5.7.1 update. &lt;br /&gt;
Now the custom block is saving the data and continuously asking for recovery.&lt;br /&gt;
It is also now difficult to save and have to publish a post with a future date.&lt;br /&gt;
 &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>reusable-block-with-revisions.png attached to Ticket #53072</title>
      
        <dc:creator>matveb</dc:creator>

      <pubDate>Thu, 22 Apr 2021 10:27:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/53072/reusable-block-with-revisions.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/53072/reusable-block-with-revisions.png/1619087251832103</guid>
      <description>&lt;p&gt;
Sidebar with revisions enabled
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #53072 (Enable revisions for the reusable block custom post type) updated</title>
      
        <dc:creator>youknowriad</dc:creator>

      <pubDate>Thu, 22 Apr 2021 10:25:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53072#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53072#comment:2/1619087143827781</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53072 (Enable revisions for the reusable block custom post type) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Thu, 22 Apr 2021 10:22:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53072#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53072#comment:1/1619086964164161</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1205"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1205&lt;/a&gt; on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/wordpress-develop&lt;/a&gt; by &lt;a class="ext-link" href="https://github.com/mtias"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;mtias&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
Trac ticket: &lt;a href="https://core.trac.wordpress.org/ticket/53072"&gt;https://core.trac.wordpress.org/ticket/53072&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53072 (Enable revisions for the reusable block custom post type) created</title>
      
        <dc:creator>matveb</dc:creator>

      <pubDate>Thu, 22 Apr 2021 10:08:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53072</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53072/1619086128501167</guid>
      <description>&lt;p&gt;
Let's enable post revisions for the &lt;code&gt;wp_block&lt;/code&gt; custom post type.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This has not been pursued yet in suspense of broader improvements to block management, reusable blocks, and editorial flows. However, there's really no reason to lock this functionality out in the meantime, which can be very useful today for people.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also reported &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/issues/19149"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/issues/19149&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #53071 (Website Recovery) created</title>
      
        <dc:creator>chanelrapallini</dc:creator>

      <pubDate>Thu, 22 Apr 2021 08:30:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53071</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53071/1619080244665767</guid>
      <description>&lt;p&gt;
Hi there,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I was hosting my site with HeartInternet, I moved it over to Siteground.  In the process I've lost access to my www.rapallini.co.uk website which was created on WordPress.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Neither hosts can help me retrieve my website, please can you help?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thank you,&lt;br /&gt;
Chanel &lt;br /&gt;
0796 020 7829&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #52790 (Reusable blocks disappeared) updated</title>
      
        <dc:creator>edragonxx</dc:creator>

      <pubDate>Thu, 22 Apr 2021 08:25:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52790#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52790#comment:33/1619079914726695</guid>
      <description>&lt;p&gt;
Same here, updated wordpress and voila reusable blocks are useless now!!!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
How to reproduce that bug? Simple, make a reusable block, now add it to your posts. Next time add it to new post, press "covert regular block" because sometimes you just want use it as template, like have block styles and stuff put in place but you want change text there, so you will use reusable blocks convert them to regular block and author was able to add their own text without changing text every other post too, worked perfectly. Not anymore, once you press convert regular block it will empty reusable block. Every fucking single time!&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52920 (Editor: Abstract block editor configuration) updated</title>
      
        <dc:creator>gziolo</dc:creator>

      <pubDate>Thu, 22 Apr 2021 07:19:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52920#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52920#comment:25/1619075969446068</guid>
      <description>&lt;p&gt;
@jeremyfelt, that would be ideal to go with the approach you outlined. We are discussing the same issue in &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/31027"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/31027&lt;/a&gt;. Let me share the part that worries me the most if we go this route:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;block_categories&lt;/code&gt; and other filters involved here, they have the &lt;code&gt;$post&lt;/code&gt; object as a param which is not set outside of the edit post page. More importantly, we provide examples for this filter that depend on unguarded &lt;code&gt;$post&lt;/code&gt; usage at &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/blob/trunk/docs/reference-guides/filters/block-filters.md#managing-block-categories"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/blob/trunk/docs/reference-guides/filters/block-filters.md#managing-block-categories&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="c1"&gt;// my-plugin.php
&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;my_plugin_block_categories&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$categories&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;post_type&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="s1"&gt;'post'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$categories&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;array_merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="nv"&gt;$categories&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                        &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                                &lt;span class="s1"&gt;'slug'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'my-category'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="s1"&gt;'title'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'My category'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'my-plugin'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
                                &lt;span class="s1"&gt;'icon'&lt;/span&gt;  &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'wordpress'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'block_categories'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'my_plugin_block_categories'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
If you have some ideas on how to address it safely then we should do it.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51750 (Update webpack to version 5.x) updated</title>
      
        <dc:creator>gziolo</dc:creator>

      <pubDate>Thu, 22 Apr 2021 05:55:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51750#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51750#comment:3/1619070908909514</guid>
      <description>&lt;p&gt;
I wanted to cross-reference the first failed attempt to updated webpack in Gutenberg: &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/26382"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/26382&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Gutenberg build was working correctly, but some tools like Storybook and &lt;code&gt;@wordpress/scripts&lt;/code&gt; stopped working because of some compatibility issues. We should give it another try in the next weeks.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Just a note that any update to Webpack needs to be a coordinated effort with the block editor team in the Gutenberg repository to ensure both spots use the same version.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@desrosj, do you anticipate any issues if we would start using different versions of webpack? As far as I can tell, Jarda landed all necessary changes to make v4 and v5 compatible in separate PRs, including changes to &lt;code&gt;@wordpress/dependency-extraction-webpack-plugin&lt;/code&gt; that Calypso uses already with webpack 5. If you look at the PR I shared the number of changes is fairly minimal.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39309 (Secure WordPress Against Infrastructure Attacks) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 22 Apr 2021 05:05:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39309#comment:109</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39309#comment:109/1619067955660802</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #forums by peterwilsoncc. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/forums/p1619067952002200"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35725 (Add WebP support.) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Thu, 22 Apr 2021 03:49:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35725#comment:163</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35725#comment:163/1619063366029110</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35725#comment:162" title="Comment 162"&gt;spacedmonkey&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
One question, in my testing, it seems like thumbnails are not generated on animated webp. Is this an expected behaviour? What is the reasoning behind this? Can we document this well in release notes. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Note for the future, I would solve to solve generating thumbnails for animated webp. I would love to convert animated gifs to animated webp and generate thumbnails for this webp. &lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree! I'll note that animated GIFs are currently not supported by WP for resizing either, unfortunately (See: &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/28474" title="#28474: defect (bug): WordPress destroys animation in animated GIF when it resizes (assigned)"&gt;#28474&lt;/a&gt;).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm not sure about GD support (I saw in &lt;a href="https://core.trac.wordpress.org/ticket/52867#comment:11"&gt;another comment&lt;/a&gt; that Adam noted GD doesn't support resizing animated files) -- but with Imagick for GIFs, this is because WP grabs the first frame, and resizes that, rather than iterating through and resizing all of the frames. I don't know if WebP handles this in a different fashion that might make it easier.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Regardless, I think it'd be a nice feature to support.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53070 (Establish a Core CSS deprecation path) created</title>
      
        <dc:creator>isabel_brison</dc:creator>

      <pubDate>Thu, 22 Apr 2021 03:31:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53070</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53070/1619062307958300</guid>
      <description>&lt;p&gt;
Problem: Core CSS is a public API, and gets used as such by plugins. This means that when a selector is no longer used in wp-admin, deleting any related CSS rules can still break third party code. However, the cautious approach of not deleting any CSS leads to bloated files, with a negative impact on performance.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Solution: define a clear deprecation path for Core CSS, announcing in advance when any selector and related rules are being deprecated. This allows third parties to update their code in a timely manner.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
What will this look like in practice? As discussed in the CSS meeting: &lt;a class="ext-link" href="https://make.wordpress.org/core/2021/04/13/css-chat-summary-08-april-2021/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2021/04/13/css-chat-summary-08-april-2021/&lt;/a&gt;,&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;When a selector is no longer used in Core, move related CSS to a &lt;code&gt;deprecated.css&lt;/code&gt; file.
&lt;/li&gt;&lt;li&gt;This file can be optionally enqueued by plugins that require any of its CSS.
&lt;/li&gt;&lt;li&gt;Deprecation is announced in the release dev notes.
&lt;/li&gt;&lt;li&gt;Linters and other automated tools can help enforce non-use of deprecated selectors.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #48369 (Uploaded media files created with incorrect permissions if directory ...) updated</title>
      
        <dc:creator>jjsmithson</dc:creator>

      <pubDate>Thu, 22 Apr 2021 02:23:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48369#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48369#comment:3/1619058224196145</guid>
      <description>&lt;p&gt;
@SergeyBiryukov can you please change the version to 5.7.1? Thank you!&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48369 (Uploaded media files created with incorrect permissions if directory ...) updated</title>
      
        <dc:creator>jjsmithson</dc:creator>

      <pubDate>Thu, 22 Apr 2021 02:22:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48369#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48369#comment:2/1619058177641907</guid>
      <description>&lt;p&gt;
Can confirm this issue is still present (April 2021, version 5.7.1). It entirely prevented me from viewing uploaded files. I worked around this by manually setting the correct permissions on a folder and disabling year/month folders.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53066 (Trigger errors when non-existent methods are called on objects.) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Thu, 22 Apr 2021 02:05:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53066#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53066#comment:6/1619057122295616</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/jrfnl"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;jrfnl&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1202#issuecomment-824483379"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1202&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Consider that there'd be a inconsistent approach needed to catch it between different classes, eg:&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's actually untrue.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When this would be an Exception, both ways of calling the method - surrounded by defensive coding or using &lt;code&gt;try-catch&lt;/code&gt; - would work, so people wouldn't need to change their coding style, but they now have a _choice_, while when using &lt;code&gt;trigger_error()&lt;/code&gt;, only defensive coding will work and &lt;code&gt;try-catch&lt;/code&gt; is made impossible.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The whole point of having catchable Exceptions is that they will behave the same as Fatal errors when _uncaught_, but give a developer the freedom to catch them and handle them appropriately if so desired.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
unless it's something that we're going to apply to every WP class &amp;amp; object&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'd be very much in favour of such a project, though that is outside of the scope of this ticket.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53066 (Trigger errors when non-existent methods are called on objects.) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Thu, 22 Apr 2021 01:30:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53066#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53066#comment:5/1619055054747089</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/dd32"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;dd32&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1202#issuecomment-824470406"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1202&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
All together, it is my opinion that using an Exception will allow plugin developers more freedom in their choice of how to code, as well as allowing for them to write cleaner code.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right, it does.&lt;br /&gt;
But I don't see any need to vary from the expected PHP behaviour, unless it's something that we're going to apply to every WP class &amp;amp; object.&lt;br /&gt;
I personally see it as over-engineering to alter the PHP behaviour just because it could make it easier for someone at some future date when a method will be added (despite the lack of similar methods having being added in a long time).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Consider that there'd be a inconsistent approach needed to catch it between different classes, eg:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( is_callable( [ $wp, 'method' ] ) ) {
    echo $wp-&amp;gt;method();
} else {
    fallback_code();
}
try {
    echo $wp_query-&amp;gt;method();
} catch( Exception $e ) {
    fallback_code();
}
// Or something out of left field, more in line with WordPress coding:
$result = $wp_user-&amp;gt;method(); //  __call(..) { return new WP_Error( 'method_does_not_exist', __( 'The called method %s does not exist on WP_User' ) ); }
if ( is_wp_error( $result ) ) {
   fallback_code();
}
&lt;/pre&gt;&lt;p&gt;
tl;dr: I believe &lt;code&gt;trigger_error()&lt;/code&gt; is appropriate in magic methods to mimic PHP behaviour, as it provides a consistent approach between classes. Exceptions are good and all, but I believe they should be used appropriately and not just because they can be used - just like you wouldn't use &lt;code&gt;WP_Error&lt;/code&gt; in this case although it's more inline with current WordPress error handling.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53066 (Trigger errors when non-existent methods are called on objects.) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Thu, 22 Apr 2021 01:01:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53066#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53066#comment:4/1619053303889604</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/jrfnl"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;jrfnl&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1202#issuecomment-824461076"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1202&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Have you considered throwing an Exception instead of using trigger_error() ? What were the arguments to settle on trigger_error() anyway ?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I copied it verbatim from Simplepie in core.&lt;br /&gt;
It appears to mimic what the PHP behaviour would be without the &lt;span class="underline"&gt;call() method existing. If you'd like to suggest an exception instead, I can change to that no problem.&lt;br /&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well, yes, I would like to suggest that, but with reason. If I read the ticket correctly, adding the error is intended to prevent developer error by informing them when they are _doing it wrong_, i.e. calling a non-existent method.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Consider then the situation where a new method would be introduced in one of these classes, say in WP 6.2 and a plugin wants to use this new method, but also still needs to (wants to) support WP 5.8-6.1.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In WP 5.8-6.1, the method doesn't exist yet, so will fall back to &lt;code&gt;__call()&lt;/code&gt; and receive the fatal error, so to prevent this, some checking needs to be done before the call to the method can be made and as the method may only be available via &lt;code&gt;__call()&lt;/code&gt;, not all typical ways to check will work.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If it was an &lt;code&gt;Exception&lt;/code&gt;, however, the plugin dev could have used a &lt;code&gt;try-catch&lt;/code&gt; without a second thought, or even the &lt;code&gt;try-catch-finally&lt;/code&gt; trifecta.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Demo:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;trigger_error()&lt;/code&gt;: &lt;a class="ext-link" href="https://3v4l.org/PQvYp"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://3v4l.org/PQvYp&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;throw new [BadMethodCall]Exception&lt;/code&gt;: &lt;a class="ext-link" href="https://3v4l.org/XtmLn"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://3v4l.org/XtmLn&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
All together, it is my opinion that using an &lt;code&gt;Exception&lt;/code&gt; will allow plugin developers more freedom in their choice of how to code, as well as allowing for them to write cleaner code.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
@dd32 What do you think ?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If you agree, we may need to discuss what Exception to use for this and/or whether to define a custom exception in WP Core.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52624 (Update/Audit npm Dependencies for 5.8) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 22 Apr 2021 00:54:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52624#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52624#comment:29/1619052885221809</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50782" title="Build/Test Tools: Update the `caniuse-lite` database.
This updates ..."&gt;50782&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Build/Test Tools: Update the &lt;code&gt;caniuse-lite&lt;/code&gt; database.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This updates the &lt;code&gt;caniuse-lite&lt;/code&gt; database to the most recent version (&lt;code&gt;1.0.30001214&lt;/code&gt;) by running &lt;code&gt;npx browserslist@latest --update-db&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The resulting changes after running &lt;code&gt;grunt precommit:css&lt;/code&gt; are also included in this commit.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52624" title="#52624: task (blessed): Update/Audit npm Dependencies for 5.8 (closed: fixed)"&gt;#52624&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [50782]: Build/Test Tools: Update the `caniuse-lite` database.  This updates ...</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 22 Apr 2021 00:54:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/50782</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/50782/1619052884198570</guid>
      <description>&lt;p&gt;
Build/Test Tools: Update the &lt;code&gt;caniuse-lite&lt;/code&gt; database.
&lt;/p&gt;
&lt;p&gt;
This updates the &lt;code&gt;caniuse-lite&lt;/code&gt; database to the most recent version (&lt;code&gt;1.0.30001214&lt;/code&gt;) by running &lt;code&gt;npx browserslist@latest --update-db&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
The resulting changes after running &lt;code&gt;grunt precommit:css&lt;/code&gt; are also included in this commit.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52624" title="#52624: task (blessed): Update/Audit npm Dependencies for 5.8 (closed: fixed)"&gt;#52624&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #53066 (Trigger errors when non-existent methods are called on objects.) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Thu, 22 Apr 2021 00:09:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53066#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53066#comment:3/1619050188526976</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/dd32"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;dd32&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1202#issuecomment-824443792"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1202&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks for your reply @jrfnl &lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol&gt;&lt;li&gt;The &lt;code&gt;return false&lt;/code&gt; after the &lt;code&gt;trigger_error()&lt;/code&gt; calls can be removed as it is dead code and will never be executed.
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
I agree, but I was considering that technically the error could be short circuited. I guess I should've just removed it.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol start="2"&gt;&lt;li&gt;Have you considered throwing an &lt;code&gt;Exception&lt;/code&gt; instead of using &lt;code&gt;trigger_error()&lt;/code&gt; ? What were the arguments to settle on &lt;code&gt;trigger_error()&lt;/code&gt; anyway ?
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
I copied it verbatim from Simplepie in core.&lt;br /&gt;
It appears to mimic what the PHP behaviour would be without the &lt;code&gt;__call()&lt;/code&gt; method existing. If you'd like to suggest an exception instead, I can change to that no problem.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>