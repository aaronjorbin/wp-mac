<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #11680 (wp_load_image() out of memory) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 31 Dec 2009 21:52:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11680#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11680#comment:3/1262296334000000</guid>
      <description>&lt;p&gt;
that's 32MB, btw. the host must be ignoring your 128MB value.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11680 (wp_load_image() out of memory) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 31 Dec 2009 21:51:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11680#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11680#comment:2/1262296295000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Thu, 31 Dec 2009 21:39:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:95</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:95/1262295568000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9674#comment:94" title="Comment 94"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Seriously, though. It's like to be frank... whoever tries to store anything in that table but data that is very similar to a post is bound to get experience huge problems.
&lt;br /&gt;
If that doesn't strike whoever, just give it a shot and try to store a product, with all of the necessary extra fields. Sounds simple? Great. Now create a dozen products, 10k users, and 15k orders spread on those various products. Try to make it scale. And good luck. (Tip: you're wasting your time.)
&lt;br /&gt;
The point I'd like to make is, keep this as post_type, not object_type or inanity_type. That table is for posts, or things very similar to posts. The name should NOT suggest that it's for generic types of data.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Your example seems unnecessarily extreme.  I've used custom post types already to make, for example, calendar events and restaurant listings without great difficulty. Events and restaurants are not posts.
&lt;/p&gt;
&lt;p&gt;
However, I wonder (since you haven't elaborated) if the issues that make a "dozen products, 10k users, and 15k orders" problematic wouldn't also afflict a blog with multiple posts, 10k users, and 15k comments (or maybe instead 15k comment subscriptions or something).  In other words, wouldn't the refactoring necessarily to make wp_posts work for generic objects also benefit its use for posts?  (I'm curious about your answer even though it's obviously beyond the scope of this ticket).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11679 (Mark 2nd param of load_plugin_textdomain() as deprecated) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 31 Dec 2009 21:38:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11679#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11679#comment:2/1262295499000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
We normally check for empty() but since the function is very particular about checking for &lt;code&gt;$abs_rel_path !== false&lt;/code&gt;, I patched it on !== false.
&lt;/p&gt;
&lt;p&gt;
Commit candidate.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>11679.diff attached to Ticket #11679</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 31 Dec 2009 21:36:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11679/11679.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11679/11679.diff/1262295397000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11678 (wpautop() fails on uppercase closing tags) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 31 Dec 2009 21:28:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11678#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11678#comment:3/1262294924000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11678#comment:2" title="Comment 2"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Upper case tags haven't been in use for 6-7 years I think. They are also invalid with most current doctypes
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sadly, in (non-X)HTML 5, tag names are case insensitive and uppercase is valid.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 31 Dec 2009 21:17:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:94</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:94/1262294255000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9674#comment:91" title="Comment 91"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Heh.
&lt;/p&gt;
&lt;p&gt;
Somewhat more seriously, I actually like "thing" better than "object". A "thing" API would be refreshing. :-) My more cynical side, however, wants to call it as it is and use "contrivance".
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'd suggest calling it "mess" or "garbage", myself, rather than "thing", "thingy" or "object". ;-)
&lt;/p&gt;
&lt;p&gt;
Seriously, though. It's like to be frank... whoever tries to store anything in that table but data that is very similar to a post is bound to get experience huge problems.
&lt;/p&gt;
&lt;p&gt;
If that doesn't strike whoever, just give it a shot and try to store a product, with all of the necessary extra fields. Sounds simple? Great. Now create a dozen products, 10k users, and 15k orders spread on those various products. Try to make it scale. And good luck. (Tip: you're wasting your time.)
&lt;/p&gt;
&lt;p&gt;
The point I'd like to make is, keep this as post_type, not object_type or inanity_type. That table is for posts, or things very similar to posts. The name should NOT suggest that it's for generic types of data.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11678 (wpautop() fails on uppercase closing tags) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 31 Dec 2009 21:17:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11678#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11678#comment:2/1262294222000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Upper case tags haven't been in use for 6-7 years I think. They are also invalid with most current doctypes and the visual editor would always convert them to lower case.
&lt;/p&gt;
&lt;p&gt;
In that terms adding support to wpautop() for upper case tags would only introduce unneeded overhead. It seems the best solution for this is to replace all upper case tags while importing or directly in the database after importing. That would make your content futureproof too.
&lt;/p&gt;
&lt;p&gt;
Did you use one of the build-in importers? If this is a common problem we need to fix the importer or perhaps can make a small plugin to do that automatically after import.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 31 Dec 2009 20:45:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:93</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:93/1262292324000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9674#comment:89" title="Comment 89"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm going to take a cue from my sample plugin and use "thingy" everywhere. get_thingy_type().  Who's with me? ;-)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1. Hmm, so we will have "thingy", thingies", "thingomery"? :-)
&lt;/p&gt;
&lt;p&gt;
Seriously though, don't forget we are talking about an API that is seen only by developers and each function has phpdoc description. It's nice to have descriptive names but it's imperative to have a well thought and well written API.
&lt;/p&gt;
&lt;p&gt;
IMHO all of these would work well: "post" (current), "object" (a bit too generic), "content" (yes, content_type is also a HTTP header but that's completely different scope).
&lt;/p&gt;
&lt;p&gt;
From a non-developer's point of view "content" seems to make the most sense. It is the content of the web site. From developer's point of view, it doesn't really matter that much as long as it works well and is documented.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>jeremyclarke</dc:creator>

      <pubDate>Thu, 31 Dec 2009 19:58:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:92</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:92/1262289538000000</guid>
      <description>&lt;p&gt;
I think the argument that it should be &lt;strong&gt;object&lt;/strong&gt; because of the use of &lt;strong&gt;object_id&lt;/strong&gt; in the term_relationships table is pretty solid. When I first saw that in the db I thought it was a good move, and that it was just a shame that the wp_posts table couldn't be switched to wp_objects, and the post_type field changed to object_type. While I'd hate for WP to become Drupal, I don't see any reason why the database would hurt by being abstracted in that way (beyond the obvious backwards-compatibility nightmare). Considering saved content items as 'objects' is very functional if our goal is to have it make sense that on a fundamental level 'posts', 'pages', 'links', and 'revisions' are all the same kind of information, just with a different 'type'.
&lt;/p&gt;
&lt;p&gt;
That said, the use of 'object' is &lt;em&gt;only&lt;/em&gt; important if we want to maintain the current, specific meaning of &lt;strong&gt;post&lt;/strong&gt;, as a time-sensitive "story" with an author, categorization and a url based on the primary permalinks settings. This IMHO is a very important question and the vital one for assessing Mike's question about the status quo.
&lt;/p&gt;
&lt;p&gt;
Using 'post_*' as the general catch-all term for stuff saved to the db has a LOT of benefits if we are willing to do it.
&lt;/p&gt;
&lt;p&gt;
For one thing it makes a ton of sense semantically: On some level all the core content types and most potential 3rd party ones (tickets, players, stores) are things that get posted to the site and are thus posts. 'Post' defines the action by which the content is saved rather than the content itself, as well as aligning directly with _POST in http which happens to be how WP gets that shit done.
&lt;/p&gt;
&lt;p&gt;
Another huge benefit, albeit one tinged with problems, is that using 'post_*' will mostly fit in with the current code. Unlike 'object_*' which makes sense but leaves the wp_posts table and various fields misnamed. 'post_*' is back-compatible with almost everything out there. For the most part this is accidental, based on the (understandable) shortsightedness of the past where the specific content type of 'post' was given undue prominence and other types were effectively shoehorned into the existing database. That doesn't mean it can't be a benefit. If we are willing to shift our paradigm slightly to have 'post' mean all content types then we will reap the rewards of our past laziness in that the new content typing system can be semantically meaningful and internally consistent, while also avoiding huge deprecation conversions.
&lt;/p&gt;
&lt;p&gt;
The problem, of course, is the naming conflict created with the old 'posts' when 'post' is used for all content. What are these 'posts' in the new system?
&lt;/p&gt;
&lt;p&gt;
A 'post' (in the old sense) is a post (new sense) with a post_type of 'post', which on some level equates with being a post with post_type DEFAULT. This is awkward but we can easily imagine the historical explanation: Until very recently WP was a blogging tool, and it definitely was only a blogging tool when the db was first designed. In that frame of mind there was only one content type 'BLOG POST', since the software was the 'blog' the content were 'posts', and they had 'blog post' properties like time-sensitivity, categories and an author.
&lt;/p&gt;
&lt;p&gt;
As WP matured other content types were added, specifically 'pages', along with the post_type field to define them. IMHO the logical thing to do at this point would be to say that both types were posts, as implied by the DB structure and because they are both content that gets POSTed. At that point we could have &lt;strong&gt;specifically defined all existing 'posts' as post_type = blog&lt;/strong&gt;. In effect that is what they are, posts logged in time, blogged. This would have left everything beautiful and today we wouldn't be debating at all. There are reasons that this would be a bad idea of course, not the least of which is that WP, even with just the 'blog'/'post' content type, can be used for just about anything if you think creatively and know how to hack a theme. "Blog" has social connotations that go beyond its technical definition and as such WP has done well  to focus on posts rather than blog posts as their core content type.
&lt;/p&gt;
&lt;p&gt;
Thinking of the generic content in WP as posts instead of blog articles has a way of helping developers and especially users get over their worries that WP is "just a blog" so they can start building their awesome website. Going back at this point and changing either the UI or the DB for posts to have post_type=blog is almost defintiely a terrible idea, but I think accepting the fact that what we call posts are actuall blog-content is vital to understanding how 'posts' is a useful generic description of all content in the wp_posts table. Consider that &lt;strong&gt;article&lt;/strong&gt; is another useful description of the default content in WP. If we had been using post_type=article for them since pages were added then the 'posts' metaphor would be perfectly suited to adding more content types.
&lt;/p&gt;
&lt;p&gt;
When post_type=post we can consider the content to be 'default' post type, though keeping the db the same is definitely a good idea. IMHO for 95% of projects the blog/article/default post_type and creative theming is all anyone needs, so treating it as default makes sense. A post type of post basically means 'a post with all the features', which is true except for a few page-specific features like custom templates. For people who want content with different settings or fields (i.e. different metaboxes in the editing UI) then adding new 'post types' is a meaningful and understandable concept
&lt;/p&gt;
&lt;p&gt;
I really like the idea and simplicity of keeping 'post_type' as the name and committing to it conceptually going forward.  If anything, I think that if we can really commit to 'post type' then changing the taxonomy api to use post_id instead of object_id might make sense as well, though its certainly not a prerequisite.
&lt;/p&gt;
&lt;p&gt;
That said I'm still not sure that object wouldn't be a better name for general content to avoid confusion. Both ideas are fraught with peril, but something has to be chosen so we can work on making its implementation excellent.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10789 (Add plugin information to XML-RPC) updated</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Thu, 31 Dec 2009 18:43:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10789#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10789#comment:8/1262285039000000</guid>
      <description>&lt;p&gt;
My general goal is to expose all of the same features, data and abilities via external APIs (XML-RPC and AtomPub, though mostly XML-RPC) that you can do via wp-admin.  Some of these might be tricky (or not reasonably possible), but we are a fair ways away from having to worry about those.
&lt;/p&gt;
&lt;p&gt;
I'd consider this a first step in providing a plugin management feature via XML-RPC.  Perhaps this ticket should be changed to cover providing some plugin management abilities via XML-RPC then.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11681 (Erratic Behavior When wp-includes/pomo Missing) created</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Thu, 31 Dec 2009 18:36:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11681</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11681/1262284597000000</guid>
      <description>&lt;p&gt;
WordPress throws
&lt;/p&gt;
&lt;pre class="wiki"&gt;Fatal error: Class 'NOOP_Translations' not found in /wp-includes/l10n.php on line 437
&lt;/pre&gt;&lt;p&gt;
I believe this is caused by erroneous use of "include_once" in wp-settings.php, where "require_once" was intended.
&lt;/p&gt;
&lt;p&gt;
See it in the wild at &lt;a class="ext-link" href="http://wordpress.org/support/topic/344708"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/344708&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11673 (Need confirmation/undo/something for media delete) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 31 Dec 2009 18:06:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11673#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11673#comment:14/1262282791000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11673#comment:13" title="Comment 13"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11673#comment:10" title="Comment 10"&gt;rob1n&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
On a side note, the CC feature didn't do jack for me.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I read somewhere it needs to be an email address, but maybe it's broken? I've never used it, since I get wp-trac emails, I just star the ticket in Gmail.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You need to put the email address in your trac profile - &lt;a class="ext-link" href="http://core.trac.wordpress.org/wiki#Notification"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/wiki#Notification&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11680 (wp_load_image() out of memory) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 31 Dec 2009 18:00:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11680#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11680#comment:1/1262282435000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11680 (wp_load_image() out of memory) created</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 31 Dec 2009 18:00:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11680</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11680/1262282422000000</guid>
      <description>&lt;p&gt;
On a host with 128M, I get:
&lt;/p&gt;
&lt;p&gt;
Fatal error: Out of memory (allocated 39321600) (tried to allocate 1232 bytes) in .../wp/wp-admin/includes/image.php on line 163
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10789 (Add plugin information to XML-RPC) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 31 Dec 2009 17:59:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10789#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10789#comment:7/1262282380000000</guid>
      <description>&lt;p&gt;
I'm 50/50 on including this in core.
&lt;/p&gt;
&lt;p&gt;
I am trying to understand how it fits in with the use of XML-RPC as a publishing interface and what use it has for the majority of end-users.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Is something like this already provided by one or more plugins?
&lt;/li&gt;&lt;li&gt;What would a consumer of the XML-RPC interface use this for?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I am wary of adding things like this piecemeal - for example if we want to make something like plugin upgrade management available over XML-RPC then we should do the whole thing.
&lt;/p&gt;
&lt;p&gt;
What is the reason this code should be in core and not in a plugin?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11517 (Make Admin more MVC-like) updated</title>
      
        <dc:creator>jeremyclarke</dc:creator>

      <pubDate>Thu, 31 Dec 2009 17:28:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11517#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11517#comment:6/1262280518000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I really like this idea in general and think its the right direction for the admin going forward. It would have the effect of forcing core devs to clean up their act when they add stuff, using/augmenting existing output functions as needed and adding new ones when they are missing. Having the core devs think of plugin authors when creating UI is good both so they can be leaders in all WP UI development and so that the value of their work can be multiplied when used by people extending WP. Lets face it: Most people don't have the time/skill/enthusiasm for UI that leads to beautiful useful easy-to-use tools. Making a beautiful table just a function and a few paremeters away greatly increases the likelihood of plugins having a good tabular interface.
&lt;/p&gt;
&lt;p&gt;
I'm not sure I understand the backwards-compatibility problems except for the obvious hump of initial pickup. All existing plugins that duplicate admin functionality would continue to work with the current setup. Of course as the admin changes those old plugins that don't use the proposed API would slowly get uglier and less useful, but that would happen anyway. If this API is available the authors will convert to the new system and hopefully their problems will go away from there on. The net difference of switching to a system like this is that &lt;strong&gt;some&lt;/strong&gt; people will be able to avoid UI rot while those who enjoy reverse-engineering HTML using Firebug will still be able to do so. The only difference for the reverse-engineers, whethey they do it cause they dont' know any better or because they have special needs, will be that the tables/lists etc they copy will be more consistent with each other than ever.
&lt;/p&gt;
&lt;p&gt;
Also this example of switching from a table to a list seems like it might be off-base. If the display of some particular kind of data by core changed then it would just use the display function for the new display type without affecting plugin uses of the old display function.
&lt;/p&gt;
&lt;p&gt;
If you were showing a list of link categories as a table :
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_admin_table($link_categories, $args);
&lt;/pre&gt;&lt;p&gt;
Then you'd switch it to the list function instead (while also modifying the $args to be whatever the list function requires to display the link_categories to your satisfaction):
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_admin_list($link_categories, $args);
&lt;/pre&gt;&lt;p&gt;
It seems to me this wouldn't break any existing uses of wp_admin_table() by plugins.
&lt;/p&gt;
&lt;p&gt;
If a plugin is writing js/css targeted at core uses of these functions (like the table that lists posts) then the current system is certainly no better for them than the proposed API. Either way if the system changes the css/js will need to be updated.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 31 Dec 2009 16:38:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:91</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:91/1262277507000000</guid>
      <description>&lt;p&gt;
Heh.
&lt;/p&gt;
&lt;p&gt;
Somewhat more seriously, I actually like "thing" better than "object". A "thing" API would be refreshing. :-) My more cynical side, however, wants to call it as it is and use "contrivance".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11679 (Mark 2nd param of load_plugin_textdomain() as deprecated) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 31 Dec 2009 16:37:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11679#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11679#comment:1/1262277430000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Thu, 31 Dec 2009 16:34:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:90</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:90/1262277262000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9674#comment:89" title="Comment 89"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm going to take a cue from my sample plugin and use "thingy" everywhere. get_thingy_type().  Who's with me? ;-)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
"type" is too confusing (why would you want the thingy to be typing?).  Instead, it should be get_thingy_doohickey().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 31 Dec 2009 16:30:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:89</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:89/1262277012000000</guid>
      <description>&lt;p&gt;
I'm going to take a cue from my sample plugin and use "thingy" everywhere. get_thingy_type().  Who's with me? ;-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 31 Dec 2009 16:18:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:88</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:88/1262276298000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9674#comment:74" title="Comment 74"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;get_object_type_object() ?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Maybe we should call it get_object_type_properties() instead.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The only reason _object is appended is because get_post_type() was already taken. The name would probably just be get_object_type().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11669 (There's a problem to show one letter, and it cuts taxonomies names) updated</title>
      
        <dc:creator>kcristiano</dc:creator>

      <pubDate>Thu, 31 Dec 2009 16:02:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11669#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11669#comment:12/1262275357000000</guid>
      <description>&lt;p&gt;
I tested this in a post and as the tag at my development site: &lt;a class="ext-link" href="http://wpdev.doublelenterprises.com/2009/12/31/collation-testing/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wpdev.doublelenterprises.com/2009/12/31/collation-testing/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I am running IIS 7 on Server 2008, with PHP 5.3.1 and MySQL 5.1.39
&lt;/p&gt;
&lt;p&gt;
It appears fine.
&lt;/p&gt;
&lt;p&gt;
Could this be related to the php/mysql combination?
&lt;/p&gt;
&lt;p&gt;
What is your Windows server hosting config?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11679 (Mark 2nd param of load_plugin_textdomain() as deprecated) created</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Thu, 31 Dec 2009 15:24:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11679</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11679/1262273052000000</guid>
      <description>&lt;p&gt;
Mark 2nd param of load_plugin_textdomain() as deprecated.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11608 (wpdb-&gt;prepare() is broken) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 31 Dec 2009 15:05:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11608#comment:63</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11608#comment:63/1262271958000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Core dev feedback would be welcome on this ticket, btw. It's like, do we even want to try to fix part or all of the problem, and if we do, what is the favored approach?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11608 (wpdb-&gt;prepare() is broken) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 31 Dec 2009 15:04:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11608#comment:62</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11608#comment:62/1262271878000000</guid>
      <description>&lt;p&gt;
I've uploaded a patch that uses the double approach. that being said, I think that no matter what we do, there will still be problematic strings with literal % characters. Example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;WHERE foo = 'a %s b'
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>11608.3.diff attached to Ticket #11608</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 31 Dec 2009 15:02:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11608/11608.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11608/11608.3.diff/1262271732000000</guid>
      <description>&lt;p&gt;
double escape first approach (untested)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11669 (There's a problem to show one letter, and it cuts taxonomies names) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 31 Dec 2009 14:43:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11669#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11669#comment:11/1262270609000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11669#comment:8" title="Comment 8"&gt;margolis&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm having this problem with "nun" on one of my blogs. The problematic blog is 2.9, and setup on windows hosting - IIS7, php5.x.
MySQL version is 5.0
charset = UTF-8 Unicode (utf8)
connection collation = utf8_unicode_ci
From the posts on the hebrew forum, it looks like it has something to do with the windows environment.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm running the exact same setup, except that I'm running Apache instead of IIS. But the original reporter here was using XAMPP.
&lt;/p&gt;
&lt;p&gt;
The only difference I think is that we're not running the same locales...
&lt;/p&gt;
&lt;p&gt;
Can those reporting the problem here disable all plugins, or run a clean install of WP 2.9 on the same server?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11669 (There's a problem to show one letter, and it cuts taxonomies names) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 31 Dec 2009 14:11:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11669#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11669#comment:10/1262268662000000</guid>
      <description>&lt;p&gt;
I tested OK on Windows7/Apache2/PHP/MySQL all custom installed, virtually using all-defaults.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11669 (There's a problem to show one letter, and it cuts taxonomies names) updated</title>
      
        <dc:creator>dshalgishira</dc:creator>

      <pubDate>Thu, 31 Dec 2009 13:29:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11669#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11669#comment:9/1262266177000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hello all,
First I encountered this bug on my development environment WIN7 + XAmpp.
Then I read in the Hebrew group that it is only on XAMPP and not on live servers.
Than I installed it on the hosting, and it is a windows server hosting and it happens there too.
I think it is related to windows.
Daniel
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 31 Dec 2009 13:02:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:87</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:87/1262264561000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9674#comment:85" title="Comment 85"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Wouldn't using hook priorities be enough?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Probably...honestly I had forgotten about the priority.
&lt;/p&gt;
&lt;p&gt;
On the "con" side of just using priorities it will be simpler to just have a named hook; less to understand conceptually. OTOH, now that you bring it up I could go either way as long as how to process post types at init priority 100 is &lt;em&gt;well&lt;/em&gt; documented somewhere.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11673 (Need confirmation/undo/something for media delete) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 31 Dec 2009 12:46:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11673#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11673#comment:13/1262263595000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11673#comment:12" title="Comment 12"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The current functionality is to delete without AYS when trash is disabled, we keep that for attachments as well.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I suppose when comparing it to the other screens that use "Delete Permanently," then yes. But as you pointed out, links, tags and cats all have AYS because there is no trash built in (like media, kinda), so it could go either way. The inconsistent experience is outside the scope of this ticket, though.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In any case the disabling of trash for attachments was a temporary thing and is expected to be reworked, hopefully for 3.0. Then I think the constant MEDIA_TRASH will be removed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Very true. Thanks for patching the 2.9 branch here.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11673#comment:10" title="Comment 10"&gt;rob1n&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
On a side note, the CC feature didn't do jack for me.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I read somewhere it needs to be an email address, but maybe it's broken? I've never used it, since I get wp-trac emails, I just star the ticket in Gmail.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11676 (Restore AYS for posts, pages, comments when trash is disabled) updated</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Thu, 31 Dec 2009 12:00:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11676#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11676#comment:2/1262260857000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11676 (Restore AYS for posts, pages, comments when trash is disabled) updated</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Thu, 31 Dec 2009 11:58:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11676#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11676#comment:1/1262260712000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11208" title="#11208: defect (bug): 'Delete Permanently' does not ask for confirmation when trash is disabled (closed: wontfix)"&gt;#11208&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Thu, 31 Dec 2009 11:48:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:86</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:86/1262260119000000</guid>
      <description>&lt;p&gt;
The same problem is for custom taxonomies. I suggest more general approach - add &lt;code&gt;post_init&lt;/code&gt; action just after &lt;code&gt;init&lt;/code&gt; (at the end of wp-settings.php).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11506 (Creation of unnamed option is possible) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 31 Dec 2009 11:35:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11506#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11506#comment:4/1262259345000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 31 Dec 2009 11:34:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:85</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:85/1262259291000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9674#comment:83" title="Comment 83"&gt;mikeschinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As I continue to work with the post type plugin I realize there's a need for a hook 'register_post_types' to be called from within create_initial_post_types() &lt;em&gt;after&lt;/em&gt; the standard post types are registered.
&lt;/p&gt;
&lt;pre class="wiki"&gt;do_action('register_post_types');
&lt;/pre&gt;&lt;p&gt;
Adding this hook can allow those who needs to register a post type to do it at the right time instead of via 'init.' This will then allow a plug to assume within the 'init' hook that all post types that need to have been registered have been. IOW, this hook would solve the chicken or egg problem I'm recognizing.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Wouldn't using hook priorities be enough?
&lt;/p&gt;
&lt;pre class="wiki"&gt;Priority 0: core post types
Priority 10: additional post types
Priority 100: plugin that assumes all post types are registered
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11678 (wpautop() fails on uppercase closing tags) updated</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Thu, 31 Dec 2009 11:29:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11678#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11678#comment:1/1262258949000000</guid>
      <description>&lt;p&gt;
I noticed if you switch between HTML and Visual in the editor it changes it to lowercase, however I ran into this problem when I imported several thousand posts, so the editor was not used
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11678 (wpautop() fails on uppercase closing tags) created</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Thu, 31 Dec 2009 11:26:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11678</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11678/1262258771000000</guid>
      <description>&lt;p&gt;
To reproduce, in a post enter:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;p&amp;gt;Welcome to WordPress. This is your first post. Edit or delete it, then start blogging!&amp;lt;/P&amp;gt;
&lt;/pre&gt;&lt;p&gt;
View the post (source) and you get:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;p&amp;gt;Welcome to WordPress. This is your first post. Edit or delete it, then start blogging!&amp;lt;/P&amp;gt;&amp;lt;/p&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Because I (incorrectly) entered an uppercase closing &amp;lt;/P&amp;gt; tag, wpautop() thinks there is no closing tag so adds a &amp;lt;/p&amp;gt;, which then often renders as a double &amp;lt;p&amp;gt; tag. Close if this is not a bug, though I thought it may be good to do some sanitizing or something on uppercase tags.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11677 (Double-click comment shortcut wipes out any already open comment edit box) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 31 Dec 2009 11:14:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11677#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11677#comment:2/1262258051000000</guid>
      <description>&lt;p&gt;
The first was &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11328" title="#11328: enhancement: Issue with double click on comment's text when quick edit is used (closed: duplicate)"&gt;#11328&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11677 (Double-click comment shortcut wipes out any already open comment edit box) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 31 Dec 2009 11:09:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11677#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11677#comment:1/1262257796000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This has previously been reported. I recall checking every major browser (IE6 on up) and could not replicate.
&lt;/p&gt;
&lt;p&gt;
What browser and OS? If you have any other steps to reproduce, I'm sure it'll help.
&lt;/p&gt;
&lt;p&gt;
We might just need to code in a sanity check to make sure we don't mess with an inline edit in progress.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11673 (Need confirmation/undo/something for media delete) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 31 Dec 2009 10:28:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11673#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11673#comment:12/1262255326000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11673#comment:8" title="Comment 8"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm noticing that we need to check for EMPTY_TRASH_DAYS as well here...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The current functionality is to delete without AYS when trash is disabled, we keep that for attachments as well.
&lt;/p&gt;
&lt;p&gt;
In any case the disabling of trash for attachments was a temporary thing and is expected to be reworked, hopefully for 3.0. Then I think the constant MEDIA_TRASH will be removed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11673 (Need confirmation/undo/something for media delete) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 31 Dec 2009 10:22:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11673#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11673#comment:11/1262254967000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12593" title="Add AYS popup when deleting media, fixes #11673 for 2.9"&gt;[12593]&lt;/a&gt;) Add AYS popup when deleting media, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11673" title="#11673: defect (bug): Need confirmation/undo/something for media delete (closed: fixed)"&gt;#11673&lt;/a&gt; for 2.9
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [12593]: Add AYS popup when deleting media, fixes #11673 for 2.9</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 31 Dec 2009 10:22:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12593</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12593/1262254964904731</guid>
      <description>&lt;p&gt;
Add AYS popup when deleting media, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11673" title="#11673: defect (bug): Need confirmation/undo/something for media delete (closed: fixed)"&gt;#11673&lt;/a&gt; for 2.9
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #11677 (Double-click comment shortcut wipes out any already open comment edit box) created</title>
      
        <dc:creator>richards1052</dc:creator>

      <pubDate>Thu, 31 Dec 2009 09:53:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11677</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11677/1262253199000000</guid>
      <description>&lt;p&gt;
Currently, WP's comment editing function has a &lt;a class="ext-link" href="http://en.blog.wordpress.com/2008/12/10/the-many-ways-to-configure-your-new-dashboard/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;built in "shortcut&lt;/a&gt;" which allows the user to double click on any word in a comment on the comment edit page, which opens the comment edit box:
&lt;/p&gt;
&lt;p&gt;
"A final secret shortcut is double-click. Just click twice on a comment in the Comments view to open up the editor."
&lt;/p&gt;
&lt;p&gt;
The problem with this shortcut is that when a user has already opened the comment Reply box and has highlighted a word or phrase fr. a published comment in order to copy &amp;amp; paste the word/phrase into the open comment edit box, &amp;amp; accidentally double clicks the highlighted word/phrase, this causes the user to completely lose the comment he was editing/writing. I've wiped out countless comments in this fashion &amp;amp; it's very frustrating.
&lt;/p&gt;
&lt;p&gt;
The way this shortcut SHOULD work imo is that it should be coded to check whether a comment edit box is already open &amp;amp; if one is it should not wipe out the exising open one.  Or alternatively, there should be a provision for users to configure their comment feature to disable the double click shortcut.
&lt;/p&gt;
&lt;p&gt;
Frankly, I can't believe this shortcut is used by many folks compared to the number who've faced the huge inconveniences caused by it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11673 (Need confirmation/undo/something for media delete) updated</title>
      
        <dc:creator>rob1n</dc:creator>

      <pubDate>Thu, 31 Dec 2009 09:34:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11673#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11673#comment:10/1262252099000000</guid>
      <description>&lt;p&gt;
On a side note, the CC feature didn't do jack for me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11669 (There's a problem to show one letter, and it cuts taxonomies names) updated</title>
      
        <dc:creator>margolis</dc:creator>

      <pubDate>Thu, 31 Dec 2009 09:34:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11669#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11669#comment:8/1262252058000000</guid>
      <description>&lt;p&gt;
I'm having this problem with "nun" on one of my blogs. The problematic blog is 2.9, and setup on windows hosting - IIS7, php5.x.
MySQL version is 5.0
charset = UTF-8 Unicode (utf8)
connection collation = utf8_unicode_ci
From the posts on the hebrew forum, it looks like it has something to do with the windows environment.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11608 (wpdb-&gt;prepare() is broken) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 31 Dec 2009 09:17:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11608#comment:61</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11608#comment:61/1262251049000000</guid>
      <description>&lt;p&gt;
&lt;code&gt;{%s} and {"'%s'"&lt;/code&gt;} in the last comment was destroyed because of bad formattings and stands for the double quoted cases: &lt;code&gt;''%s''&lt;/code&gt; &lt;code&gt;"'%s'"&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11608 (wpdb-&gt;prepare() is broken) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 31 Dec 2009 09:15:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11608#comment:60</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11608#comment:60/1262250945000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11608#comment:58" title="Comment 58"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The issue with suppressing the @ operator is that it silences warning when more than the needed number of arguments are passed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
My patch already checks for the correct number of args in rev 3. That's why it was possible to remove that operator.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Re the ticket in its entirely, I think that another, simpler possibility would be to initially double all % signs in the query
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Which is just bad practise. But what I can do is to auto-duplicate all %-signs which aren't valid format specifiers. But I think it's better to not filter the users input but to flag an error instead. Because the query-pattern then just is wrong. We can not try to find out what the users wants. I would really like to see the {&lt;em&gt;%s&lt;/em&gt;} and {"'%s'"} cases ignored either. Thats a similar topic.
&lt;/p&gt;
&lt;p&gt;
I know that if you read too much of the WP source code such ideas can come into mind because those approaches seem common but they are actually bad practice.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11673 (Need confirmation/undo/something for media delete) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 31 Dec 2009 06:23:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11673#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11673#comment:9/1262240638000000</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11676" title="#11676: defect (bug): Restore AYS for posts, pages, comments when trash is disabled (closed: wontfix)"&gt;#11676&lt;/a&gt; for posts, pages, comments.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11676 (Restore AYS for posts, pages, comments when trash is disabled) created</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 31 Dec 2009 06:22:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11676</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11676/1262240579000000</guid>
      <description>&lt;p&gt;
Related -- for media attachments, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11673" title="#11673: defect (bug): Need confirmation/undo/something for media delete (closed: fixed)"&gt;#11673&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
When someone decides to disable trash, they are presented with no AYS dialog on delete. This is a regression from pre-2.9 functionality.
&lt;/p&gt;
&lt;p&gt;
Yes, the whole point of trash was to rid the UI of AYS dialogs. I don't like AYS dialogs either and find trash+undo a great enhancement. But if a user doesn't want to use trash, or if a site admin doesn't want their users to use trash, then they should still be given an AYS to prevent accidental clicks and unsure deletes.
&lt;/p&gt;
&lt;p&gt;
We provided admins with a way to disable trash if they so choose, which should restore them pre-2.9 functionality, but it doesn't.
&lt;/p&gt;
&lt;p&gt;
We still have AYS in tags and categories, which makes this inconsistent across the UI. In &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11673" title="#11673: defect (bug): Need confirmation/undo/something for media delete (closed: fixed)"&gt;#11673&lt;/a&gt; we should be restoring it to media.
&lt;/p&gt;
&lt;p&gt;
Starting this off at 2.9.1 as it is a regression (if the user doesn't want to use a feature that we gave them the ability to disable). With trash enabled by default, I don't have much of a problem if it is moved to 3.0 though.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11674 (Caption Short Codes Don't Work) reopened</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Thu, 31 Dec 2009 06:10:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11674#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11674#comment:4/1262239859000000</guid>
      <description>&lt;p&gt;
This is reproducible when the cursor is not before the first element.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>11673.2.against-trunk.diff attached to Ticket #11673</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 31 Dec 2009 06:08:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11673/11673.2.against-trunk.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11673/11673.2.against-trunk.diff/1262239704000000</guid>
      <description>&lt;p&gt;
Patch against trunk to add EMPTY_TRASH_DAYS check.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>11673.2.against-2.9.diff attached to Ticket #11673</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 31 Dec 2009 06:07:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11673/11673.2.against-2.9.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11673/11673.2.against-2.9.diff/1262239677000000</guid>
      <description>&lt;p&gt;
Better patch against 2.9 branch also checks for EMPTY_TRASH_DAYS.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11673 (Need confirmation/undo/something for media delete) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 31 Dec 2009 06:05:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11673#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11673#comment:8/1262239547000000</guid>
      <description>&lt;p&gt;
I'm noticing that we need to check for EMPTY_TRASH_DAYS as well here, otherwise if trash is disabled but media trash is enabled, it deletes without an AYS. Could be considered an edge case, but if someone enables MEDIA_TRASH then decides to turn off trash all together, EMPTY_TRASH_DAYS = 0 should override everywhere. (And it does in all MEDIA_TRASH checks except here.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>11673-against-2.9-branch.diff attached to Ticket #11673</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 31 Dec 2009 05:34:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11673/11673-against-2.9-branch.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11673/11673-against-2.9-branch.diff/1262237685000000</guid>
      <description>&lt;p&gt;
Quick patch against 2.9 branch.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11673 (Need confirmation/undo/something for media delete) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 31 Dec 2009 05:28:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11673#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11673#comment:7/1262237292000000</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11673#comment:6" title="Comment 6"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Not sure what the consensus is on having AYS when trash is disabled, seems most people reject it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I couldn't find any discussion in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4529" title="#4529: task (blessed): &amp;#34;Trash&amp;#34; status for comments and posts (closed: fixed)"&gt;#4529&lt;/a&gt; -- I'll check the IRC logs. As trash was to prevent the need for AYS, then my thought is that if someone doesn't want to use trash -- or if a site admin doesn't want users to use trash -- then AYS should definitely be enabled. Otherwise, one click (either on accident, or without being sure) and you're destroying content forever. If we allow trash to be disabled, then we shouldn't cripple the fallback delete functionality to something it wasn't before.
&lt;/p&gt;
&lt;p&gt;
Changing to a defect to clarify that for media specifically, this is a regression. I would like to see AYS throughout core when trash is disabled, though. That's something can wait until 3.0 I suppose.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11506 (Creation of unnamed option is possible) updated</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Thu, 31 Dec 2009 05:09:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11506#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11506#comment:3/1262236170000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The patch I just added will check to see if $option_name is empty or blank (whitespace) before adding it to the options table.  If the $option_name is invalid, update_option() will return false.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>unnamed_option.diff attached to Ticket #11506</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Thu, 31 Dec 2009 05:08:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11506/unnamed_option.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11506/unnamed_option.diff/1262236102000000</guid>
      <description>&lt;p&gt;
A patch to validate the $option_name before updating the options table.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11390 (Press This entity encoding fix and blank title) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 31 Dec 2009 04:59:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11390#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11390#comment:12/1262235580000000</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12592" title="Fix Press This entity encoding, props noel, fixes #11390"&gt;[12592]&lt;/a&gt; Fix Press This entity encoding, props noel, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11390" title="#11390: defect (bug): Press This entity encoding fix and blank title (closed: fixed)"&gt;#11390&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 31 Dec 2009 04:59:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:84</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:84/1262235564000000</guid>
      <description>&lt;p&gt;
&lt;strong&gt;@aaroncampbell - I'm not saying we should do a poll, but if we do I'm definitely against having a note like this. It's clearly trying to influence people to Mike's point of view, which pretty much negates the purpose of a poll.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Excellent point.
&lt;/p&gt;
&lt;p&gt;
I wouldn't normally have proposed it as such except I think the real question is "&lt;em&gt;Is the term 'Post Type' too confusing?&lt;/em&gt;" with a potential follow up being "&lt;em&gt;If it's too confusing which of these should we use instead?&lt;/em&gt;" In hindsight, and after replying to you I would have proposed those two questions in that order instead of the one question with the note which admittedly now looks like a poor choice of wording to me too.
&lt;/p&gt;
&lt;p&gt;
Said another way, I believe we might be getting worked up about something that won't really be a problem if we just leave it be.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [12592]: Fix Press This entity encoding, props noel, fixes #11390</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 31 Dec 2009 04:57:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12592</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12592/1262235474031088</guid>
      <description>&lt;p&gt;
Fix Press This entity encoding, props noel, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11390" title="#11390: defect (bug): Press This entity encoding fix and blank title (closed: fixed)"&gt;#11390&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 31 Dec 2009 04:49:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:83</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:83/1262234990000000</guid>
      <description>&lt;p&gt;
As I continue to work with the post type plugin I realize there's a need for a hook 'register_post_types' to be called from within create_initial_post_types() &lt;em&gt;after&lt;/em&gt; the standard post types are registered.
&lt;/p&gt;
&lt;pre class="wiki"&gt;do_action('register_post_types');
&lt;/pre&gt;&lt;p&gt;
Adding this hook can allow those who needs to register a post type to do it at the right time instead of via 'init.' This will then allow a plug to assume within the 'init' hook that all post types that need to have been registered have been. IOW, this hook would solve the chicken or egg problem I'm recognizing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Thu, 31 Dec 2009 04:43:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:82</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:82/1262234630000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9674#comment:79" title="Comment 79"&gt;mikeschinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Of course you could leave the note off if you don't want to bias the sample but I'd prefer it because not changing the term has the significant benefit of not creating two names for the same thing.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not saying we should do a poll, but if we do I'm definitely against having a note like this.  It's clearly trying to influence people to Mike's point of view, which pretty much negates the purpose of a poll (unless you have notes like that from different people for every option, in which case it's more like an election than a poll...which would be messy to say the least).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11673 (Need confirmation/undo/something for media delete) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 31 Dec 2009 04:15:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11673#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11673#comment:6/1262232917000000</guid>
      <description>&lt;p&gt;
Not sure what the consensus is on having AYS when trash is disabled, seems most people reject it. Added here to restore the functionality since we decided to disable trash for attachments. Would probably have to go in 2.9.1 too as it may be considered a regression (we still have AYS for deleting tags and categories).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11673 (Need confirmation/undo/something for media delete) reopened</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 31 Dec 2009 03:24:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11673#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11673#comment:5/1262229897000000</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #11673 (Need confirmation/undo/something for media delete) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 31 Dec 2009 03:23:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11673#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11673#comment:4/1262229836000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
azaozz:
&lt;/p&gt;
&lt;p&gt;
We don't have AYS when trash is disabled elsewhere. I agree since we don't have media trash in core that we need AYS here. Do we want to add AYS back as well when trash is disabled across the board?
&lt;/p&gt;
&lt;p&gt;
Also, I think this should be done in 2.9.1, at least the committed fix, as it is technically a regression.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11390 (Press This entity encoding fix and blank title) updated</title>
      
        <dc:creator>noel</dc:creator>

      <pubDate>Thu, 31 Dec 2009 03:02:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11390#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11390#comment:11/1262228542000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11390 (Press This entity encoding fix and blank title) updated</title>
      
        <dc:creator>noel</dc:creator>

      <pubDate>Thu, 31 Dec 2009 03:02:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11390#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11390#comment:10/1262228529000000</guid>
      <description>&lt;p&gt;
new patch is same as no-&amp;amp;apos patch except it removes erroneous calls to aposfix() function.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>aposfix-remove.patch attached to Ticket #11390</title>
      
        <dc:creator>noel</dc:creator>

      <pubDate>Thu, 31 Dec 2009 03:01:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11390/aposfix-remove.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11390/aposfix-remove.patch/1262228490000000</guid>
      <description>&lt;p&gt;
Removes aposfix function calls completely.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 31 Dec 2009 02:51:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:81</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:81/1262227889000000</guid>
      <description>&lt;p&gt;
&lt;strong&gt;@janeforshort: Wow, that sounded condescending,&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Oh by no means, I was just sharing what worked for me.  Was trying to be helpful, not condescending.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;@janeforshort: What I was saying is that because we use the word Page to describe what is essentially a static post, and the word "page" is used in other web terminology (a web page, the admin page, etc), it frequently happens that users get confused when they use the word "page" to mean something other than a WP Page, or the person helping them does, or some combination thereof ... If we have to do a ton of explaining to describe the concept, then that generally means it's not named as well as it could be.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Ah, good point.  I was not thinking of it from that perspective.  Sorry again if it came across condescending, wasn't meaning to be.  FWIW, I agree that good naming is super important.
&lt;/p&gt;
&lt;p&gt;
So would be it fair to say, from your experience, that the term "Page" generates the biggest problems whereas "Post" is easier for most people to grasp?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>janeforshort</dc:creator>

      <pubDate>Thu, 31 Dec 2009 02:42:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:80</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:80/1262227323000000</guid>
      <description>&lt;p&gt;
But seriously, explaining Pages and Posts isn't that hard once you find the things that resonate with people. It took me quite a while to find what works but finally here's how I explain it:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;em&gt;"Pages" are those static things that are always there like the "Products", "Services" and "About" pages on a website.  "Posts" have a time/date component to them and are a lot like a news story. A "Post" by definition will have a date/time on which it's published and it "ages" from that day forward. Website owners continuously update "Pages" as their websites evolve but it's bad form to modify a "Post" unless to append an explicitly noted "Update" section or to explicitly link to newer related articles.  After all, you wouldn't want to quote and link to an article on CNN.com and go back later to find that the story had changed, would you? The same should apply to your blog Posts. So that's the difference between Pages and Posts.&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
With that explanation I've literally never had someone tell me they continue to be confused.  Try it maybe?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Wow, that sounded condescending, though I'm extending the benefit of the doubt and hoping you didn't mean it to come off that way. I didn't say it was hard to describe the difference between posts and pages. That's easy. What I was saying is that because we use the word Page to describe what is essentially a static post, and the word "page" is used in other web terminology (a web page, the admin page, etc), it frequently happens that users get confused when they use the word "page" to mean something other than a WP Page, or the person helping them does, or some combination thereof. It's the main reason I always use the word "screen" when referring to what most end-users call a "page" when giving someone instructions on how to do something in WP. If we have to do a ton of explaining to describe the concept, then that generally means it's not named as well as it could be.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11673 (Need confirmation/undo/something for media delete) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 31 Dec 2009 02:37:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11673#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11673#comment:3/1262227079000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12591" title="Add AYS popup when deleting media, fixes #11673"&gt;[12591]&lt;/a&gt;) Add AYS popup when deleting media, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11673" title="#11673: defect (bug): Need confirmation/undo/something for media delete (closed: fixed)"&gt;#11673&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [12591]: Add AYS popup when deleting media, fixes #11673</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 31 Dec 2009 02:37:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12591</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12591/1262227076625797</guid>
      <description>&lt;p&gt;
Add AYS popup when deleting media, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11673" title="#11673: defect (bug): Need confirmation/undo/something for media delete (closed: fixed)"&gt;#11673&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 31 Dec 2009 02:25:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:79</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:79/1262226331000000</guid>
      <description>&lt;p&gt;
&lt;strong&gt;&lt;em&gt;@janeforshort: Mike, I think you misunderstood what I was trying to say. What developers call post types is different from what users call post types, and your assertion that the two aren't really different isn't correct (at least based on the conversations about post types I've had with users and developers and the features they request around them).&lt;/em&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Sorry, wasn't trying to say they were the same just making an argument that they may be similar enough that people could learn the difference.  I think whatever terminology you use there will be user training involved and thus, weighing the potential confusion created by spawning a new term, I was arguing to maintain the term "post type."
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;em&gt;@janeforshort: Just try teaching a new user about Pages and you'll see what I mean ("Go to the page, no, the Page, not the screen," etc).&lt;/em&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Funny you should bring that up! Back in Feb 2009 I have a very successful&lt;sup&gt;(Footnote 1)&lt;/sup&gt;  "Launch your site Wordpress in 3 hours" event at my meetup group and we taught ~58 people how to use Wordpress in 3 hours.  What's more I'm preparing a training course which I'll be delivering Jan 5-7 and I'll be explaining explain those things yet again. :)
&lt;/p&gt;
&lt;p&gt;
So yes it can be a chore, but at least it's a chose with which I'm familiar. :) That said I think I've come up with some pretty good ways to explain it that most people I teach seem to understand right out of the gate.
&lt;/p&gt;
&lt;p&gt;
BTW, we'll get to meet face-to-face sometime between Jan 8-10 while you are here in Atlanta for Wordcamp.  :)
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;em&gt;@janeforshort: The end result of this discussion isn't something I'm overly passionate about,&lt;/em&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
I guess you could label me relatively passionate about getting this one right (whatever "right" is. :)
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;em&gt;@janeforshort: I just think it's important to think about how we use common words with multiple uses in describing functions, especially if it will make it harder to clarify them in the future.&lt;/em&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Agreed.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;em&gt;@janeforshort: If I could get rid of the Pages label and call them static posts or something, I'd do it in a New York minute, but it's a little late in the game to suggest such a thing.&lt;/em&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
A "New York minute";  you sure about that one?  (consider the origin of the phrase! ;)  But seriously, explaining Pages and Posts isn't that hard once you find the things that resonate with people. It took me quite a while to find what works but finally here's how I explain it:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;em&gt;"Pages" are those static things that are always there like the "Products", "Services" and "About" pages on a website.  "Posts" have a time/date component to them and are a lot like a news story. A "Post" by definition will have a date/time on which it's published and it "ages" from that day forward. Website owners continuously update "Pages" as their websites evolve but it's bad form to modify a "Post" unless to append an explicitly noted "Update" section or to explicitly link to newer related articles.  After all, you wouldn't want to quote and link to an article on CNN.com and go back later to find that the story had changed, would you? The same should apply to your blog Posts. So that's the difference between Pages and Posts.&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
With that explanation I've literally never had someone tell me they continue to be confused.  Try it maybe?
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;em&gt;@janeforshort: This discussion is simply raising the issue so we can be sure we are using the least ambiguous and/or potentially confusing language possible. I could put up a poll on the dev blog if people really think it will help, but to be honest, I think custom post types would be so misunderstood by the common user without pages of explanation, and in contrast are already so accepted by the advanced developers, that it would be difficult to get a meaningful set of results.
&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;
Maybe, but what if the poll were worded like so?
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;em&gt;We are considering adding more CMS-like functionality into Wordpress.  By "CMS-like" we mean providing functionality site owners could use to build more advanced sites. Rather than have sites be just a collection of blog posts and static content pages instead we want to be able to have collections of things like "products", "real estate listings", "events", "recipes", "businesses", "cars", "software", "motherboards", "camera", "venues", and more.  Problem is we are not sure what generic term we should call these things as compared to what we have already, i.e. "Posts" and "Pages" so that it will cause the least confusion among users.&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;em&gt;So here are the terms we've thrown around, in alpha order ; we'd like you to vote for the term you think most clearly describes to you the kind of thing that could be used as a container for information about products, real estate listings, events, recipes, businesses, cars, software, motherboards, cameras, venues, etc. If you have ideas beyond the ones we've had, please let us know those too:&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;Content
&lt;/li&gt;&lt;li&gt;Container
&lt;/li&gt;&lt;li&gt;Content Items
&lt;/li&gt;&lt;li&gt;Content Types
&lt;/li&gt;&lt;li&gt;Custom Post Types
&lt;/li&gt;&lt;li&gt;Entity Types
&lt;/li&gt;&lt;li&gt;Generic Types
&lt;/li&gt;&lt;li&gt;Items
&lt;/li&gt;&lt;li&gt;Objects
&lt;/li&gt;&lt;li&gt;Post Types
&lt;/li&gt;&lt;li&gt;Records
&lt;/li&gt;&lt;li&gt;Things
&lt;/li&gt;&lt;li&gt;OTHER? &lt;span class="underline"&gt;&lt;/span&gt;&lt;span class="underline"&gt;&lt;/span&gt;&lt;span class="underline"&gt;
&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;strong&gt;&lt;em&gt;Note&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;: If "Post Type" or "Custom Post Type" are not confusing to you we'd prefer to use them as those terms are currently already baked into the Wordpress program source code and changing them making actually cause confusion rather than help the situation.
&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;em&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
Of course you could leave the note off if you don't want to bias the sample but I'd prefer it because not changing the term has the significant benefit of not creating two names for the same thing.
&lt;/p&gt;
&lt;p&gt;
Anyway, that's my view. Unless you want to further discuss I'll go back to working on my post types plugin now. :)
&lt;/p&gt;
&lt;p&gt;
-Mike Schinkel
&lt;/p&gt;
&lt;p&gt;
Footnote 1:  &lt;a class="ext-link" href="http://www.meetup.com/atlantawebmarketers/calendar/9711037/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.meetup.com/atlantawebmarketers/calendar/9711037/&lt;/a&gt; (See the positive comments! :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>greenshady</dc:creator>

      <pubDate>Thu, 31 Dec 2009 02:12:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:78</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:78/1262225550000000</guid>
      <description>&lt;p&gt;
I have loads of users that know well what the term "post type" means.  They know that "page" and "attachment" are certain types of posts.  Maybe my theme/plugin users are just smarter than the average user; I don't know.  I say we stick with what we already have -- "post type."  My opinion is based on several conversations with average users, not other WP developers.  I think changing the terminology now just confuses matters more.
&lt;/p&gt;
&lt;p&gt;
Object type?  Seriously?  While I wouldn't mind that as a developer, it's not something that would get end users excited.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11669 (There's a problem to show one letter, and it cuts taxonomies names) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 31 Dec 2009 02:04:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11669#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11669#comment:7/1262225059000000</guid>
      <description>&lt;p&gt;
I'm running utf8_unicode_ci on the DB, also running XAMPP on Windows. I will test some other collation/charsets.
&lt;/p&gt;
&lt;p&gt;
I feel we're going to need more reporter feedback on this. Can you get some more site admins in here, some of whom are experiencing this and some of whom or not, and ask them to share their setups?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>janeforshort</dc:creator>

      <pubDate>Thu, 31 Dec 2009 01:08:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:77</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:77/1262221715000000</guid>
      <description>&lt;p&gt;
Mike, I think you misunderstood what I was trying to say. What developers call post types is different from what users call post types, and your assertion that the two aren't really different isn't correct (at least based on the conversations about post types I've had with users and developers and the features they request around them). Having a separate post type vs adding some custom fields or a special display has impacts on site organization, search, taxonomies, etc. You also make a statement about existing vs future users, but documentation and how we describe functions to new users is an important factor to consider. Just try teaching a new user about Pages and you'll see what I mean ("Go to the page, no, the Page, not the screen," etc).
&lt;/p&gt;
&lt;p&gt;
The end result of this discussion isn't something I'm overly passionate about, I just think it's important to think about how we use common words with multiple uses in describing functions, especially if it will make it harder to clarify them in the future. If I could get rid of the Pages label and call them static posts or something, I'd do it in a New York minute, but it's a little late in the game to suggest such a thing. This discussion is simply raising the issue so we can be sure we are using the least ambiguous and/or potentially confusing language possible. I could put up a poll on the dev blog if people really think it will help, but to be honest, I think custom post types would be so misunderstood by the common user without pages of explanation, and in contrast are already so accepted by the advanced developers, that it would be difficult to get a meaningful set of results.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 31 Dec 2009 00:45:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:76</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:76/1262220303000000</guid>
      <description>&lt;p&gt;
&lt;strong&gt;@ryan:&lt;/strong&gt; I just found/read @janeforshort's comments which I'll include here:
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;@janeforshort: Per Ryan's comment, some of the thinking behind using 'content types' rather than 'post types' as a label is because the end user generally thinks of post types in terms of having a different template for a specific type of post, like a review, recipe, blog post, aside, etc., and doesn't think about it in CMS terms (products, listings, etc).&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
I see her point for existing Wordpress sites but honestly think once custom post types because more exposed in Wordpress then that point become moot.
&lt;/p&gt;
&lt;p&gt;
I'm pretty sure people don't think much about templates vs. posts, they think about reviews, recipes, blog posts, asides, products, listings, etc. Once they can go in an create a custom post type called "review", "recipe", "product" or "listing" rather than have to create a post template that makes a (blog) post behave like one of them then users will do that because doing so will provide them more appropriate functionality.
&lt;/p&gt;
&lt;p&gt;
(BTW, I don't see how a review or a recipe is conceptually any different than a product or a listing.  They all have custom attributes that identify them separately from a generic post.)
&lt;/p&gt;
&lt;p&gt;
What's more there will mostly be a one-to-one correspondence between custom post types and custom post templates just as there already are different templates for each of posts, pages and attachments and for my plugin each custom post type gets its own custom post type template.  So rather than argue for a new term I really think &lt;em&gt;@janeforshort's&lt;/em&gt; point argues to &lt;em&gt;keep&lt;/em&gt; the term "post type" if, as she says, people think in terms a "post type" meaning "a different template."; that's exactly the association we'll want them to have, i.e.
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;em&gt;Using a custom post type equates to using a template for a custom type of content&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 31 Dec 2009 00:26:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:75</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:75/1262219205000000</guid>
      <description>&lt;p&gt;
And for accessing the object's metadata, don't we also get?
&lt;/p&gt;
&lt;pre class="wiki"&gt;get_object_type_object_type_object()
&lt;/pre&gt;&lt;p&gt;
Sorry, I just couldn't resist. ;-p
&lt;/p&gt;
&lt;p&gt;
Seriously, "object" is a great term for use inside the code but if you must, must, must rename it please use "item" or "record."
&lt;/p&gt;
&lt;p&gt;
For that matter, since this really is a big deal why not put up a poll on Wordpress.org to see what the majority of people think?  Maybe we'll learn that "post" is not so bad.  Or maybe we'll learn it is horrible.  But why not verify before making a decision based on all of our (flawed by nature) biases and assumptions?
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;@ryan&lt;/strong&gt;: also can you please speak to the idea of having a standard way to persist custom post types?
&lt;/p&gt;
&lt;p&gt;
That said, I'd like to propose an additional change to register_post_type() and that would be to include a filter. Such a filter would allow a plugin to annotate metadata to any of the core post types or even post types registered:
&lt;/p&gt;
&lt;pre class="wiki"&gt;  function register_post_type($post_type, $args = array(), $persist=true) {
   global $wp_post_types;
   if (!is_array($wp_post_types))
      $wp_post_types = array();
   $defaults = array('exclude_from_search' =&amp;gt; true);
   $args = wp_parse_args($args, $defaults);
   $post_type = sanitize_user($post_type, true);
   $args['name'] = $post_type;
   $args = apply_filter('register_post_type',$args);
   $wp_post_types[$post_type] = (object) $args;
   if (save_post_types())
      save_post_types();
}
&lt;/pre&gt;&lt;p&gt;
For that matter it would also be good to have hooks for save_post_types() and load_post_types():
&lt;/p&gt;
&lt;pre class="wiki"&gt;function save_post_types() {
   global $wp_post_types;
   $wp_post_types = apply_filter('save_post_types',$wp_post_types);
   update_option( 'post_types', $wp_post_types );
}
function load_post_types() {
   global $wp_post_types;
   $wp_post_types = apply_filter('load_post_types',get_option( 'post_types'));
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 31 Dec 2009 00:10:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:74</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:74/1262218256000000</guid>
      <description>&lt;p&gt;
So we would have:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;register_object_type()
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;get_object_types()
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;get_object_type_object() ?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Maybe we should call it get_object_type_properties() instead.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 30 Dec 2009 23:56:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:73</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:73/1262217398000000</guid>
      <description>&lt;p&gt;
The main argument for "object", I think, is that it is already used in the taxonomy and menu APIs to refer to posts table entities.
&lt;/p&gt;
&lt;p&gt;
Jane addressed post type/post template earlier.
&lt;/p&gt;
&lt;p&gt;
I personally don't really care. :-)  I just want to avoid juggling names, especially given the interest there is in jumping on this as soon as it lands.
&lt;/p&gt;
&lt;p&gt;
register_post_type(), get_post_types(), and get_post_type_object() would get the new naming, if we switch terminology.  get_post_type() and set_post_type() would likely keep their names since they are set/gets for the post_type field.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10789 (Add plugin information to XML-RPC) updated</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Wed, 30 Dec 2009 23:43:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10789#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10789#comment:6/1262216611000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I generated an updated patch that fixed a typo (missing ;).  While I was in there I made some style changes to bring it closer to the WP style.  Not a big deal as most of xmlrpc.php has a funky mix of styles any way.  Figured this was a good a place as any to start cleaning it up.
&lt;/p&gt;
&lt;p&gt;
This exposes one more piece of data from wp-admin via the XML-RPC API, which is a good thing.  I'm fine with adding this, I've changed the milestone to 3.0.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>xmlrpc.php.diff attached to Ticket #10789</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Wed, 30 Dec 2009 23:37:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10789/xmlrpc.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10789/xmlrpc.php.diff/1262216265000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Wed, 30 Dec 2009 23:26:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:72</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:72/1262215598000000</guid>
      <description>&lt;p&gt;
Just to put this out there, the existing *_post_type functions are:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;get_post_type
&lt;/li&gt;&lt;li&gt;get_post_types
&lt;/li&gt;&lt;li&gt;register_post_type
&lt;/li&gt;&lt;li&gt;set_post_type
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I'm all for parting from the post_type name, because people have a hard time seeing that as anything other than types of &lt;strong&gt;posts&lt;/strong&gt;.  They'd see that as an article vs a tip vs a review, but not as an attachment or a podcast or even a page.  As for what else you choose, I think object_type is good, but if it's too "programmer friendly" and not user friendly, then I'm fine with item_type as suggested above.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 30 Dec 2009 23:24:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:71</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:71/1262215499000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9674#comment:69" title="Comment 69"&gt;strider72&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9674#comment:67" title="Comment 67"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Renames register_taxonomy_for_post_type() to register_taxonomy_for_object_type()
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Did you rename the existing function or simply create an additional function?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Renamed since that function is new with this patch. It is not already in WP.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11601 (Touch error during plugin upgrade) updated</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Wed, 30 Dec 2009 23:23:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11601#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11601#comment:11/1262215428000000</guid>
      <description>&lt;p&gt;
For info, the upload temp dir was blank which leads it to system default of c:\windows\temp
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11601 (Touch error during plugin upgrade) updated</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Wed, 30 Dec 2009 23:23:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11601#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11601#comment:10/1262215395000000</guid>
      <description>&lt;p&gt;
Ok I've just installed a fresh 2.8 and it's giving the same behaviour, so I'm now thinking that this is some config change that has taken place on my computer without my knowing.  Probably some MS patch or something has broken some permissions.  It all used to work, but it doesn't seem as though it's WP that has broken.
&lt;/p&gt;
&lt;p&gt;
Will do some more investigation and then come back and close this as invalid later.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11669 (There's a problem to show one letter, and it cuts taxonomies names) updated</title>
      
        <dc:creator>maorb</dc:creator>

      <pubDate>Wed, 30 Dec 2009 23:12:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11669#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11669#comment:6/1262214725000000</guid>
      <description>&lt;p&gt;
DB collation are utf8_general_ci for both tables and database.
It might be that the problem occurs on local XAMPP/WAMP installations and on windows' server, but not for sure. It also might be a PHP issue and not Wordpress one, but till 2.8.6 the bug didn't exist.
Is there some PHP functions that were not in use before 2.9?
This bug's behavior is not yet fully understood, since it doesn't occur for all blogs and sites.
&lt;/p&gt;
&lt;p&gt;
I add here the link for the discussion on this issue in the wpheb google group (discussion there is in Hebrew, so it's Just for reference)
&lt;a class="ext-link" href="http://groups.google.co.il/group/wpheb/browse_thread/thread/996f0e258f75e59?hl=iw"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://groups.google.co.il/group/wpheb/browse_thread/thread/996f0e258f75e59?hl=iw&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Wed, 30 Dec 2009 23:03:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:70</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:70/1262214180000000</guid>
      <description>&lt;p&gt;
&lt;strong&gt;&lt;em&gt;@scribu object_type sounds better than content_type.&lt;/em&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;Pros for object_type&lt;/em&gt;: Consistent with certain other internals.
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;Cons for object_type&lt;/em&gt;: Too generic and abstract for most end users to grasp.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;em&gt;@ryan: Getting away from post type would be good because of the conflict with the notion of post templates&lt;/em&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Mind if I ask you to elaborate on why this is an issue?  Not being a core developer I'm not aware of why it's a problem.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;em&gt;@ryan: because the functions that play with the post_type field already suck up some of the good *_post_type function names.&lt;/em&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Can you give examples of these functions names you need?
&lt;/p&gt;
&lt;p&gt;
I'm particularly interested in this topic because 1.) I so badly need it and 2.) I am working on a plugin to manage post types and I don't want to build an orphan.
&lt;/p&gt;
&lt;p&gt;
FWIW I'll restate, if at all possible I think you should stick with the term "post type."  You can refer to them as "Custom post types" which handles the distinction between core (post,page,revision,attachment) and user defined. But adding another name will cause far more confusion that it might resolve if experience in Drupal is any indication.
&lt;/p&gt;
&lt;p&gt;
That said, if you &lt;em&gt;must&lt;/em&gt; rename it I'd propose &lt;em&gt;item type&lt;/em&gt; or &lt;em&gt;record type&lt;/em&gt;, in that order of preference.  Most computer users have some idea what those terms mean vs &lt;em&gt;object&lt;/em&gt; which I believe mostly only programmers understand.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;em&gt;@scribu - You have to register a new post type first. See post-type.php&lt;/em&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Yeah, the custom post types plugin I'm working on registers post types during the init hook for types defined by the user in the admin console.
&lt;/p&gt;
&lt;p&gt;
I've actually run into a problem with it from the standpoint of persistence; if I persist to disk them reload them I have to decide which takes precedence; the deserialized version from the database or $wp_post_types?
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;em&gt;@scribu - The plugin should stay a plugin, IMO. Just like there's a plugin for managing custom taxonomies from the admin - Simple Taxonomies.&lt;/em&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Maybe, but my jury is out on that one still.  However, what we definitely need in core is more infrastructure. For example (as I build the plugin I realize) &lt;em&gt;we need a standard way to persist post types&lt;/em&gt;. I'll throw out this strawman: let's save wp_post_types to wp_options as 'post_types' using save_post_types() and load_post_types() functions, as simple as this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function save_post_types() {
   update_option( 'post_types', $wp_post_types );
}
function load_post_types() {
   global $wp_post_types;
   $wp_post_types = update_option( 'post_types');
}
&lt;/pre&gt;&lt;p&gt;
Then add a "$persist" parameter defaulted to true to register_post_types() so that save_post_types() runs at the end by default like so:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function register_post_type($post_type, $args = array(), $persist=true) {
   global $wp_post_types;
   if (!is_array($wp_post_types))
      $wp_post_types = array();
   $defaults = array('exclude_from_search' =&amp;gt; true);
   $args = wp_parse_args($args, $defaults);
   $post_type = sanitize_user($post_type, true);
   $args['name'] = $post_type;
   $wp_post_types[$post_type] = (object) $args;
   if (save_post_types())
      save_post_types();
}
&lt;/pre&gt;&lt;p&gt;
Next change create_initial_post_types() so that it loads at first then saves only once. This will allow core post types to be (re-)registered if need be. This of course needs to run prior to any plugin register_post_type()s can run (I assume that is already the case?)
&lt;/p&gt;
&lt;p&gt;
In addition I added another global $wp_core_post_types so that plugins can know which post types are sacred to Wordpress core.
&lt;/p&gt;
&lt;pre class="wiki"&gt;function create_initial_post_types() {
   global $wp_core_post_types;
   $wp_core_post_types = array('post','page','attachment','revision');
   load_post_types();
   register_post_type( 'post', array('exclude_from_search' =&amp;gt; false), false );
   register_post_type( 'page', array('exclude_from_search' =&amp;gt; false), false );
   register_post_type( 'attachment', array('exclude_from_search' =&amp;gt; false), false );
   register_post_type( 'revision', array('exclude_from_search' =&amp;gt; true), false );
   save_post_types();
}
&lt;/pre&gt;&lt;p&gt;
We might also want to add a standard "property" to the post_type array like 'is_core' and/or 'user_defined.'  Or maybe 'can_delete?' Not knowing exactly how post_types will be used by everyone I'm trying to figure out what standard property(s) would be useful so that one plugin's use of post_types doesn't step on anothers. Clearly I haven't figured this one out yet.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11172 (Login form template function) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Wed, 30 Dec 2009 22:45:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11172#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11172#comment:15/1262213137000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11172#comment:13" title="Comment 13"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Part of that was me asking why we even need &lt;code&gt;wp_get_login_form()&lt;/code&gt; at all. It sounds like a function that would pretty much always be echoed when used. At most, I would think it should be a &lt;code&gt;wp_login_form()&lt;/code&gt; function that allows you to pass &lt;code&gt;array('echo' =&amp;gt; false)&lt;/code&gt;, not a get_* function that supports echoing.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's a reasonable compromise, but I think &lt;code&gt;wp_get_login_form()&lt;/code&gt; gives the advantage of having a name that makes explicit its default behavior. How about &lt;code&gt;wp_print_login_form()&lt;/code&gt;?  There is naming precedent in a few functions such as &lt;code&gt;wp_print_head_scripts()&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>strider72</dc:creator>

      <pubDate>Wed, 30 Dec 2009 22:02:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:69</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:69/1262210535000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9674#comment:67" title="Comment 67"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Renames register_taxonomy_for_post_type() to register_taxonomy_for_object_type()
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Did you rename the existing function or simply create an additional function?
&lt;/p&gt;
&lt;p&gt;
If replacing one with the other, it seems the old one should be moved to the deprecated.php file, and (perhaps) be made a simple wrapper for the new function to ensure they remain in parity with each other.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 30 Dec 2009 21:48:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:68</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:68/1262209728000000</guid>
      <description>&lt;p&gt;
object_type sounds better than content_type.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11674 (Caption Short Codes Don't Work) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 30 Dec 2009 21:46:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11674#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11674#comment:3/1262209591000000</guid>
      <description>wontfix: &lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11674#comment:2" title="Comment 2"&gt;miqrogroove&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Steps to reproduce:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Insert captioned image into new post.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;Move cursor to top of post.
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
No, the browsers don't allow that. You cannot move the cursor before the first element. This is one of several "oddities" when the browser is in designMode - cursor placement. The list of these glitches is quite long and browser and version dependent.
&lt;/p&gt;
&lt;p&gt;
This is a rare case. What you're actually doing is inserting a [gallery] shortcode in the middle of an image caption and breaking it.
&lt;/p&gt;
&lt;p&gt;
Don't see what WordPress can do through TinyMCE to fix the inadequate &lt;code&gt;designMode&lt;/code&gt; in the browsers. This ticket is either "wontfix" or maybe "far in the future release" that could be addressed after all browsers decide to improve their support for live editing of HTML.
&lt;/p&gt;
&lt;p&gt;
In any case certain tasks in the editor have to be completed in certain way to achieve certain results, same as in all software applications.
&lt;/p&gt;
&lt;p&gt;
To reproduce:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Insert captioned image into new post.
&lt;/li&gt;&lt;li&gt;Insert gallery.
&lt;/li&gt;&lt;li&gt;Enjoy your new post with an image above the gallery.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10082 (Shortcodes need a character separating them to work) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Wed, 30 Dec 2009 21:37:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10082#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10082#comment:44/1262209072000000</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Wouldn't it be worth to try and commit the new regex now, to get some testing in?
&lt;/p&gt;
&lt;p&gt;
Justing asking, because &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11675" title="#11675: defect (bug): Adjacent Short Codes Don't Work (closed: duplicate)"&gt;#11675&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11674" title="#11674: defect (bug): Caption Short Codes Don't Work (closed: worksforme)"&gt;#11674&lt;/a&gt; show that apparantly there is a need.
Thus raising the priority a little bit, so that it doesn't have to be punted again. Sorry, if that is wrong!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>9674.10.diff attached to Ticket #9674</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 30 Dec 2009 21:36:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/9674/9674.10.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/9674/9674.10.diff/1262208995000000</guid>
      <description>&lt;p&gt;
Menu parenting fix for edit-tags.php. Add is_object_in_taxonomy().
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11675 (Adjacent Short Codes Don't Work) closed</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Wed, 30 Dec 2009 21:31:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11675#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11675#comment:2/1262208676000000</guid>
      <description>duplicate: &lt;p&gt;
duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10082" title="#10082: defect (bug): Shortcodes need a character separating them to work (closed: fixed)"&gt;#10082&lt;/a&gt;, also related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10490" title="#10490: defect (bug): paragraphs inserted round shortcodes by wpautop not working properly ... (closed: duplicate)"&gt;#10490&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10326" title="#10326: defect (bug): strip_shortcodes() greedily strips surrounding bytes (closed: fixed)"&gt;#10326&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #9805 (a better unhtmlentities()) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 30 Dec 2009 21:26:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9805#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9805#comment:10/1262208397000000</guid>
      <description>duplicate: &lt;p&gt;
Patch in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11636" title="#11636: enhancement: Replace unhtmlentities() methods in three importers (closed: fixed)"&gt;#11636&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #11675 (Adjacent Short Codes Don't Work) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 30 Dec 2009 21:19:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11675#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11675#comment:1/1262207993000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Not a regression, so moving to 3.0. Needs a patch and probably some unit tests.
&lt;/p&gt;
&lt;p&gt;
The shortcode regex relies on surrounding characters, hence the issue. See also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10326" title="#10326: defect (bug): strip_shortcodes() greedily strips surrounding bytes (closed: fixed)"&gt;#10326&lt;/a&gt;, when it was improved to not strip those characters.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 30 Dec 2009 21:03:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:67</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:67/1262207025000000</guid>
      <description>&lt;p&gt;
Small cleanups including fix for bug noted by dd32. Renames register_taxonomy_for_post_type() to register_taxonomy_for_object_type() since all of the other object/taxonomy functions use the term object instead of post.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>9674.9.diff attached to Ticket #9674</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 30 Dec 2009 21:02:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/9674/9674.9.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/9674/9674.9.diff/1262206930000000</guid>
      <description>&lt;p&gt;
Minor cleanups
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11601 (Touch error during plugin upgrade) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 30 Dec 2009 20:50:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11601#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11601#comment:9/1262206248000000</guid>
      <description>&lt;p&gt;
Can you install a test of 2.8 and check what folder its creating the temporary files in?
&lt;/p&gt;
&lt;p&gt;
It might be related to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/6699" title="#6699: defect (bug): get_temp_dir() should be more flexible (closed: fixed)"&gt;#6699&lt;/a&gt;, Whats your PHP.ini setting for 'upload_tmp_dir' ? I'm thinking that IIS has write access to that folder, but PHP doesnt, which wouldnt surprise me honestly. If thats the case, an extra is_writable() needs to be added
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11607 (Slash Missing in get_index_rel_link()) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 30 Dec 2009 20:48:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11607#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11607#comment:8/1262206130000000</guid>
      <description>&lt;p&gt;
The point of user_trailingslashit, as I understand it, is to distinguish between the option of www.example.com/2009/03/24/hello-world and www.example.com/2009/03/24/hello-world/.
&lt;/p&gt;
&lt;p&gt;
I suppose that could also be translated to www.example.com and www.example.com/subdirectory/blog versus www.example.com/ and www.example.com/subdirectory/blog/.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 30 Dec 2009 20:48:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:66</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:66/1262206114000000</guid>
      <description>&lt;p&gt;
Let's make that a little more readable:
&lt;/p&gt;
&lt;p&gt;
Getting away from post type would be good because of the conflict with the notion of post templates and because the functions that play with the post_type field already suck up some of the good *_post_type function names.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 30 Dec 2009 20:45:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:65</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:65/1262205915000000</guid>
      <description>&lt;p&gt;
I'd like to decide on nomenclature first so we're not bouncing function names.  Getting away from post type would be good because of the conflict the notion of post templates and because the functions that play with the post_type field already suck up some of the good *_post_type field. I have no problem having post_type in the db and the use of it higher up the stack by a different term.  Content type could cause confusion with content-type, as noted above.  Object type may be a bit too generic, but we already use object for things like wp_get_object_terms(), is_object_in_term(), get_object_taxonomies(), etc.  Extending the use of object to maintain consistency with the taxonomoy object API may be the way to go.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11576 (The future of the 'uncategorized' category) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 30 Dec 2009 20:35:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11576#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11576#comment:3/1262205325000000</guid>
      <description>&lt;p&gt;
It was introduced for permalinks, IIRC.  I would love to make it optional.  Many themes are coded to assume there will be one, however.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11607 (Slash Missing in get_index_rel_link()) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Wed, 30 Dec 2009 20:20:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11607#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11607#comment:7/1262204437000000</guid>
      <description>&lt;p&gt;
In particular, the /?p= links are using trailingslashit.  I suspect the original intention was to do that only for root paths, but that isn't how it worked out.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11608 (wpdb-&gt;prepare() is broken) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Wed, 30 Dec 2009 19:57:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11608#comment:59</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11608#comment:59/1262203027000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
initially double all % signs in the query
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
My brain just esploded.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11674 (Caption Short Codes Don't Work) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Wed, 30 Dec 2009 19:43:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11674#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11674#comment:2/1262202236000000</guid>
      <description>&lt;p&gt;
Steps to reproduce:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Insert captioned image into new post.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;Move cursor to top of post.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="3"&gt;&lt;li&gt;Insert gallery.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="4"&gt;&lt;li&gt;Enjoy the fail.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11674 (Caption Short Codes Don't Work) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Wed, 30 Dec 2009 19:33:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11674#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11674#comment:1/1262201637000000</guid>
      <description>&lt;p&gt;
Additional symptoms:
&lt;/p&gt;
&lt;p&gt;
Orphaned &lt;code&gt;&amp;lt;/div&amp;gt;&lt;/code&gt; tags&lt;br /&gt;
Some images disappear when switching to HTML view&lt;br /&gt;
Cursor at right side of image gives &lt;code&gt;Path: div.mceTemp &amp;gt; div.mceTemp &amp;gt; dl.wp-caption alignnone&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11172 (Login form template function) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 30 Dec 2009 19:21:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11172#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11172#comment:14/1262200911000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11172#comment:13" title="Comment 13"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Part of that was me asking why we even need &lt;code&gt;wp_get_login_form()&lt;/code&gt; at all. It sounds like a function that would pretty much always be echoed when used. At most, I would think it should be a &lt;code&gt;wp_login_form()&lt;/code&gt; function that allows you to pass &lt;code&gt;array('echo' =&amp;gt; false)&lt;/code&gt;, not a get_* function that supports echoing.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8553 (preg_replace_callback in do_shortcode returns empty for large posts) updated</title>
      
        <dc:creator>jalenack</dc:creator>

      <pubDate>Wed, 30 Dec 2009 19:19:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8553#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8553#comment:49/1262200774000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/8553#comment:47" title="Comment 47"&gt;Brusdeylins&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This Problem still exists in WP 2.8.6.
My solution in ./wp-includes/shortcodes.php :
&lt;/p&gt;
&lt;pre class="wiki"&gt;function get_shortcode_regex() {
  global $shortcode_tags;
  $tagnames = array_keys($shortcode_tags);
  $tagregexp = join( '|', array_map('preg_quote', $tagnames) );
  // defect for long posts
  // return '(.?)\[('.$tagregexp.')\b(.*?)(?:(\/))?\](?:(.+?)\[\/\2\])?(.?)';
  // solution for brusdeylins.info
  return '(.?)\[('.$tagregexp.')\b([^\]]*?)(\/)?\](?:(.+?)\[\/\1\])?(.?)';
}
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
I was suffering from this issue in 2.8.x and 2.9 on several posts (7600 words with images etc). I added the pcre         ini_set('pcre.backtrack_limit', 1000000); and that fixed the problem. Wordpress was taking a really long time to save so I tried using the above get_shortcode_regex() code, and it broke my [caption] shortcode that was generated by visual mode:
&lt;/p&gt;
&lt;pre class="wiki"&gt;[caption id="attachment_9522" align="alignright" width="350" caption="___desc__"]&amp;lt;a href="__url__"&amp;gt;&amp;lt;img class="size-full wp-image-9522" title="___desc___" src="____url___" alt="___desc___" width="350" height="351" /&amp;gt;&amp;lt;/a&amp;gt;[/caption]
&lt;/pre&gt;&lt;p&gt;
broke as in failed to parse and left a hanging &lt;code&gt;[/caption]&lt;/code&gt;. I didn't try any other patches besides the pcre.backtrack_limit part, which did fix my problem.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11172 (Login form template function) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 30 Dec 2009 19:15:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11172#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11172#comment:13/1262200506000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11172#comment:12" title="Comment 12"&gt;filosofo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11172#comment:11" title="Comment 11"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I would like to see a wp_login_form() function that echoes wp_get_login_form(), if we are to have both.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You have WP precedent behind your suggestion, but it's a silly precedent I wish we'd not perpetuate.
&lt;/p&gt;
&lt;p&gt;
Why bloat the code with extra function definitions when any of the following could work just as well?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Part of that was me asking why we even need &lt;code&gt;wp_get_login_form()&lt;/code&gt; at all. It sounds like a function that would pretty much always be echoed when used. At most, I would think it should be a &lt;code&gt;wp_login_form()&lt;/code&gt; function that allows you to pass &lt;code&gt;array('echo' =&amp;gt; false)&lt;/code&gt;, not a get_* function that supports echoing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11675 (Adjacent Short Codes Don't Work) created</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Wed, 30 Dec 2009 19:10:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11675</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11675/1262200248000000</guid>
      <description>&lt;p&gt;
Any time two short codes are placed next to each other, the second short code appears as plain text in the content.  This can be reproduced with something as simple as &lt;code&gt;[gallery][gallery]&lt;/code&gt; or with a more complex pattern such as two captioned images with no whitespace.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11674 (Caption Short Codes Don't Work) created</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Wed, 30 Dec 2009 19:07:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11674</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11674/1262200075000000</guid>
      <description>&lt;p&gt;
I'm testing 2.9.1-RC1 now.  If I create a post, add a gallery plus a captioned image beneath it, this is what shows up in the HTML editing view:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;div class="mceTemp"&amp;gt;
[gallery]
&amp;lt;dl id="attachment_80" class="wp-caption alignnone" style="width: 160px;"&amp;gt;&amp;lt;dt class="wp-caption-dt"&amp;gt;&amp;lt;a rel="attachment wp-att-80" href="mytestsite/2009/12/test-post-3/wp-exif-bug/"&amp;gt;&amp;lt;img class="size-thumbnail wp-image-80" title="This is a supercool test" src="mytestsite/wp-content/uploads/2009/12/wp-exif-bug-150x136.jpg" alt="" width="150" height="136" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/dt&amp;gt;&amp;lt;dd class="wp-caption-dd"&amp;gt;Caption goes here&amp;lt;/dd&amp;gt;&amp;lt;/dl&amp;gt;&amp;lt;/div&amp;gt;
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11673 (Need confirmation/undo/something for media delete) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 30 Dec 2009 18:59:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11673#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11673#comment:2/1262199583000000</guid>
      <description>&lt;p&gt;
I thought we added AYS dialogs back in for when trash was disabled? If so, we're also missing a &lt;code&gt;MEDIA_TRASH&lt;/code&gt; check...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11608 (wpdb-&gt;prepare() is broken) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 30 Dec 2009 18:44:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11608#comment:58</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11608#comment:58/1262198673000000</guid>
      <description>&lt;p&gt;
@hakre: I've been chewing on this since we discussed, and I'm really wondering if the approach is correct...
&lt;/p&gt;
&lt;p&gt;
The issue with suppressing the @ operator is that it silences warning when more than the needed number of arguments are passed. That's probably a good thing,
&lt;/p&gt;
&lt;p&gt;
Re the ticket in its entirely, I think that another, simpler possibility would be to initially double all % signs in the query, i.e.:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$query = str_replace('%', '%%', $query);
$query = str_replace(array('"%%s"', "'%%s'", '%%s'), '%s', $query);
$query = str_replace(array('"%%d"', "'%%d'", '%%d'), '%d', $query);
&lt;/pre&gt;&lt;p&gt;
A few bugs would remain in odd edge cases (i.e. WHERE col LIKE '%something'); to cover those too, we actually need a regexp. Probably something like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$query = str_replace('%', '%%', $query);
$query = preg_replace("/(\s)(['\"])?%%([sd])\\2(\s|$)/", "$1%$3$4", $query);
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10805 (Mark user levels as Deprecated) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 30 Dec 2009 18:37:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10805#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10805#comment:12/1262198245000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10805#comment:10" title="Comment 10"&gt;westi&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think one call in &lt;code&gt;has_cap&lt;/code&gt; where the mapping happens is better than putting the calls into &lt;code&gt;current_user_can&lt;/code&gt; and &lt;code&gt;author_can&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Fine by me. I only patched it the other way just to pass to &lt;code&gt;_deprecated_argument&lt;/code&gt; the names of the function a developer would call, but they're already getting good feedback in the message anyway.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11665 (UTC Time Zone Set in wp-settings affects items in header) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 30 Dec 2009 18:32:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11665#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11665#comment:13/1262197927000000</guid>
      <description>&lt;p&gt;
very true, sorry 'bout that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11608 (wpdb-&gt;prepare() is broken) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 30 Dec 2009 18:28:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11608#comment:57</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11608#comment:57/1262197715000000</guid>
      <description>&lt;p&gt;
Revision 3 out now. Fixed a bug in the quote function, added more testcases and we're now able to remove the @-operator for performance reasons. That will give us more speed, that @ operator is a real blocker.
&lt;/p&gt;
&lt;p&gt;
Additionally I merged the improvements over from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11605" title="#11605: defect (bug): wpdb::_weak_escape() is an alias to addslashes only (closed: wontfix)"&gt;#11605&lt;/a&gt; into this for even mroe speed in case a user wants to use escape.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>11608-rev3.patch attached to Ticket #11608</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 30 Dec 2009 18:25:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11608/11608-rev3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11608/11608-rev3.patch/1262197549000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>11608-tests.2.php attached to Ticket #11608</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 30 Dec 2009 18:25:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11608/11608-tests.2.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11608/11608-tests.2.php/1262197524000000</guid>
      <description>&lt;p&gt;
Updated Testcases for rev 3
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11622 (switch to PDO::prepare when we require PHP 5.1) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 30 Dec 2009 18:22:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11622#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11622#comment:15/1262197372000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11622#comment:14" title="Comment 14"&gt;josephscott&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I like PostgreSQL as much as the next person (probably more), but it's not really pertinent to the question.  What does the MySQL query planner do? References and methods for reproducing would be helpful.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'd have happily posted the output of explain here if the functionality worked with anything but SELECT statements in MySQL.
&lt;/p&gt;
&lt;p&gt;
There are only so many ways to optimize a query, though. If you find my own explanation lacking, then:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://dev.mysql.com/doc/refman/5.1/en/mysql-indexes.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://dev.mysql.com/doc/refman/5.1/en/mysql-indexes.html&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Note that the first paragraph says exactly what I wrote in my previous reply:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If you need to access most of the rows, it is faster to read sequentially, because this minimizes disk seeks.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
And then recall that the whole point of a prepared statement is to not need to parse the query and come up with a query plan before executing it. And no index can reliably be used if most of the constraints are variables.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11665 (UTC Time Zone Set in wp-settings affects items in header) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 30 Dec 2009 18:21:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11665#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11665#comment:12/1262197312000000</guid>
      <description>&lt;p&gt;
I thought the pre_option was only on gmt_offset, not timezone_string.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9588 (time() is not GMT time()) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 30 Dec 2009 18:18:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9588#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9588#comment:31/1262197109000000</guid>
      <description>&lt;p&gt;
Patch tries gmdate('U') and incorporate patch from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11665" title="#11665: defect (bug): UTC Time Zone Set in wp-settings affects items in header (closed: fixed)"&gt;#11665&lt;/a&gt;.  Seems to work here, but still experimenting.
&lt;/p&gt;
&lt;p&gt;
If we get current_time() working reliably, we should use it everywhere instead of time() and friends.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>9588.17.diff attached to Ticket #9588</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 30 Dec 2009 18:17:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/9588/9588.17.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/9588/9588.17.diff/1262197027000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #9588 (time() is not GMT time()) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Wed, 30 Dec 2009 18:06:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9588#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9588#comment:30/1262196361000000</guid>
      <description>&lt;p&gt;
Let me investigate this a bit more, something is fishy here and I'm not sure what it is.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9951 (Add [taxonomy]__in, [taxonomy]__not_in to wp_query) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 30 Dec 2009 18:04:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9951#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9951#comment:15/1262196262000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9951#comment:3" title="Comment 3"&gt;westi&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
-1 to current patch.
&lt;/p&gt;
&lt;p&gt;
Much better if this was an explicit action caused by register_taxonomy that searching for &lt;span class="underline"&gt;xxx in query var names.
&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agree: You should just be able to do &lt;code&gt;my_term=foo&amp;amp;my_other_term=bar&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9588 (time() is not GMT time()) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 30 Dec 2009 18:03:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9588#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9588#comment:29/1262196221000000</guid>
      <description>&lt;p&gt;
There is no gmtime().  For PHP 5.3, I think we can use DateTime::getTimestamp().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9588 (time() is not GMT time()) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 30 Dec 2009 18:00:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9588#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9588#comment:28/1262196056000000</guid>
      <description>&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11672" title="#11672: defect (bug): current_time() does not correctly retrun localized time (closed: fixed)"&gt;#11672&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9588 (time() is not GMT time()) reopened</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 30 Dec 2009 18:00:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9588#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9588#comment:27/1262196029000000</guid>
      <description>&lt;p&gt;
Let's address this once and for all in 3.0.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #10915 (DRY: WP should use current_time() to calculate current time) closed</title>
      
        <dc:creator>automattor</dc:creator>

      <pubDate>Wed, 30 Dec 2009 17:56:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10915#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10915#comment:6/1262195777000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12590" title="Use current_time() to calculate current time. Props filosofo. fixes #10915"&gt;[12590]&lt;/a&gt;) Use current_time() to calculate current time. Props filosofo. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10915" title="#10915: defect (bug): DRY: WP should use current_time() to calculate current time (closed: fixed)"&gt;#10915&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [12590]: Use current_time() to calculate current time. Props filosofo. fixes #10915</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 30 Dec 2009 17:56:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12590</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12590/1262195769057030</guid>
      <description>&lt;p&gt;
Use current_time() to calculate current time. Props filosofo. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10915" title="#10915: defect (bug): DRY: WP should use current_time() to calculate current time (closed: fixed)"&gt;#10915&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #11665 (UTC Time Zone Set in wp-settings affects items in header) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 30 Dec 2009 17:49:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11665#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11665#comment:11/1262195381000000</guid>
      <description>&lt;p&gt;
And yes; using date.timezone will re-introduce &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9588" title="#9588: defect (bug): time() is not GMT time() (closed: fixed)"&gt;#9588&lt;/a&gt; indeed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11665 (UTC Time Zone Set in wp-settings affects items in header) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 30 Dec 2009 17:48:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11665#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11665#comment:10/1262195327000000</guid>
      <description>&lt;p&gt;
11665.2.diff won't work because of the pre_option_ filter on it, and that filter generates the above-mentioned warning on servers that use time functions without a date.timezone setting.
&lt;/p&gt;
&lt;p&gt;
The correct patch, I think, is 11665.diff. But we'd ideally like to make sure that it fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11672" title="#11672: defect (bug): current_time() does not correctly retrun localized time (closed: fixed)"&gt;#11672&lt;/a&gt; and the like as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11672 (current_time() does not correctly retrun localized time) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 30 Dec 2009 17:44:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11672#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11672#comment:3/1262195098000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11673 (Need confirmation/undo/something for media delete) updated</title>
      
        <dc:creator>rob1n</dc:creator>

      <pubDate>Wed, 30 Dec 2009 17:36:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11673#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11673#comment:1/1262194584000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11673 (Need confirmation/undo/something for media delete) created</title>
      
        <dc:creator>rob1n</dc:creator>

      <pubDate>Wed, 30 Dec 2009 17:35:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11673</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11673/1262194558000000</guid>
      <description>&lt;p&gt;
In other places in the admin UI, there is a fallback for deleting stuff. Whether it's a "trash," a confirmation dialog, or whatever.
&lt;/p&gt;
&lt;p&gt;
However, in the media section, if you hit Delete Permanently, none of the above happen. All it says is "Media permanently deleted."
&lt;/p&gt;
&lt;p&gt;
Whether for consistency or to give the user one last warning, a fallback should probably be added. A confirmation box would be easiest.
&lt;/p&gt;
&lt;p&gt;
Experienced in the latest 2.9 branch, rather certain it affects trunk as well.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11607 (Slash Missing in get_index_rel_link()) closed</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 30 Dec 2009 17:33:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11607#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11607#comment:6/1262194391000000</guid>
      <description>fixed: &lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11607#comment:5" title="Comment 5"&gt;miqrogroove&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I confirmed what nacin said earlier, user_trailingslashit was not the correct wrapper for bloginfo('url').  trailingslashit seems to be the norm.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I went with user_trailingslashit as I believe this fits with the intention of that function.
&lt;/p&gt;
&lt;p&gt;
The other rel links that end up in the head also use it.
&lt;/p&gt;
&lt;p&gt;
We could probably review all calls to trailingslashit and think about whether or not user_trailingslashit should be used but that is the subject of another ticket and is probably a rabbit hole we should not venture down.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10511 (Enclosure Custom Fields are automatically deleted) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 30 Dec 2009 17:30:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10511#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10511#comment:14/1262194207000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
To enable syntax highlighting, please give a .diff or .patch extension to your patches. Thanks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 30 Dec 2009 17:28:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:64</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:64/1262194080000000</guid>
      <description>&lt;p&gt;
Shouldn't the current patch get committed already so that it can be polished?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 30 Dec 2009 17:26:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:63</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:63/1262194009000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9674#comment:61" title="Comment 61"&gt;mikeschinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9674#comment:53" title="Comment 53"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
attachment 9674.8.diff   added
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hey Ryan, can you describe where I'm support to find these changes in the UI? I've installed a patched copy and can't find anything in the admin that is different from 2.9.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You have to register a new post type first. See &lt;a class="ext-link" href="http://core.trac.wordpress.org/attachment/ticket/9674/post-type.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;post-type.php&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The reason I ask is I'm working on a Post Type plugin that allows the user to specify custom post types and I want to make sure I don't duplicate functionality.  Ideally, I'd prefer to use anything you do instead of coding it myself, or if you'd like I can donate my plugin code into the core.  It's not complete yet but I've uploaded a screen shot for you to see what it (currently) looks like.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The plugin should stay a plugin, IMO. Just like there's a plugin for managing custom taxonomies from the admin - Simple Taxonomies.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11607 (Slash Missing in get_index_rel_link()) reopened</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Wed, 30 Dec 2009 17:26:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11607#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11607#comment:5/1262193963000000</guid>
      <description>&lt;p&gt;
I confirmed what nacin said earlier, user_trailingslashit was not the correct wrapper for bloginfo('url').  trailingslashit seems to be the norm.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #11608 (wpdb-&gt;prepare() is broken) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 30 Dec 2009 17:20:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11608#comment:56</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11608#comment:56/1262193614000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11605" title="#11605: defect (bug): wpdb::_weak_escape() is an alias to addslashes only (closed: wontfix)"&gt;#11605&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11652 (Use _deprecated_argument() on get_bloginfo()) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 30 Dec 2009 17:19:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11652#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11652#comment:5/1262193574000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12589" title="Don't pass deprecated argument to get_bloginfo() in the classic theme. ..."&gt;[12589]&lt;/a&gt;) Don't pass deprecated argument to get_bloginfo() in the classic theme. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11652" title="#11652: enhancement: Use _deprecated_argument() on get_bloginfo() (closed: fixed)"&gt;#11652&lt;/a&gt; props nacin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [12589]: Don't pass deprecated argument to get_bloginfo() in the classic theme. ...</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 30 Dec 2009 17:19:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12589</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12589/1262193567973893</guid>
      <description>&lt;p&gt;
Don't pass deprecated argument to get_bloginfo() in the classic theme. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11652" title="#11652: enhancement: Use _deprecated_argument() on get_bloginfo() (closed: fixed)"&gt;#11652&lt;/a&gt; props nacin.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10915 (DRY: WP should use current_time() to calculate current time) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 30 Dec 2009 17:10:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10915#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10915#comment:5/1262193001000000</guid>
      <description>&lt;p&gt;
See also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11672" title="#11672: defect (bug): current_time() does not correctly retrun localized time (closed: fixed)"&gt;#11672&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11665" title="#11665: defect (bug): UTC Time Zone Set in wp-settings affects items in header (closed: fixed)"&gt;#11665&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11665 (UTC Time Zone Set in wp-settings affects items in header) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 30 Dec 2009 17:09:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11665#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11665#comment:9/1262192960000000</guid>
      <description>&lt;p&gt;
We may need to wait until 3.0 and clean up &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9588" title="#9588: defect (bug): time() is not GMT time() (closed: fixed)"&gt;#9588&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11672" title="#11672: defect (bug): current_time() does not correctly retrun localized time (closed: fixed)"&gt;#11672&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10915" title="#10915: defect (bug): DRY: WP should use current_time() to calculate current time (closed: fixed)"&gt;#10915&lt;/a&gt;, and this one all at once.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11607 (Slash Missing in get_index_rel_link()) closed</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 30 Dec 2009 17:08:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11607#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11607#comment:4/1262192909000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12588" title="Don't pass deprecated argument to get_bloginfo() in ..."&gt;[12588]&lt;/a&gt;) Don't pass deprecated argument to get_bloginfo() in get_index_rel_link() also observer user trailing slash preferences. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11607" title="#11607: defect (bug): Slash Missing in get_index_rel_link() (closed: fixed)"&gt;#11607&lt;/a&gt; props nacin and miqrogroove.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [12588]: Don't pass deprecated argument to get_bloginfo() in ...</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 30 Dec 2009 17:08:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12588</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12588/1262192903348076</guid>
      <description>&lt;p&gt;
Don't pass deprecated argument to get_bloginfo() in get_index_rel_link() also observer user trailing slash preferences. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11607" title="#11607: defect (bug): Slash Missing in get_index_rel_link() (closed: fixed)"&gt;#11607&lt;/a&gt; props nacin and miqrogroove.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #11665 (UTC Time Zone Set in wp-settings affects items in header) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 30 Dec 2009 17:08:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11665#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11665#comment:8/1262192883000000</guid>
      <description>&lt;p&gt;
See also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11672" title="#11672: defect (bug): current_time() does not correctly retrun localized time (closed: fixed)"&gt;#11672&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11672 (current_time() does not correctly retrun localized time) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 30 Dec 2009 17:05:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11672#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11672#comment:2/1262192719000000</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11652 (Use _deprecated_argument() on get_bloginfo()) closed</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 30 Dec 2009 17:05:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11652#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11652#comment:4/1262192705000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12587" title="Use _deprecated_argument() in get_bloginfo() and then don't pass ..."&gt;[12587]&lt;/a&gt;) Use _deprecated_argument() in get_bloginfo() and then don't pass deprecated argument to get_bloginfo(). Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11652" title="#11652: enhancement: Use _deprecated_argument() on get_bloginfo() (closed: fixed)"&gt;#11652&lt;/a&gt; props nacin.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [12587]: Use _deprecated_argument() in get_bloginfo() and then don't pass ...</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 30 Dec 2009 17:05:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12587</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12587/1262192702011505</guid>
      <description>&lt;p&gt;
Use _deprecated_argument() in get_bloginfo() and then don't pass deprecated argument to get_bloginfo(). Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11652" title="#11652: enhancement: Use _deprecated_argument() on get_bloginfo() (closed: fixed)"&gt;#11652&lt;/a&gt; props nacin.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #11652 (Use _deprecated_argument() on get_bloginfo()) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 30 Dec 2009 17:00:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11652#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11652#comment:3/1262192455000000</guid>
      <description>&lt;p&gt;
Looks good.
&lt;/p&gt;
&lt;p&gt;
Going to go with a simpler change in get_bloginfo as I think it is more readable and affects less of the code flow.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11665 (UTC Time Zone Set in wp-settings affects items in header) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 30 Dec 2009 17:00:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11665#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11665#comment:7/1262192446000000</guid>
      <description>&lt;p&gt;
Won't changing this reopen &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9588" title="#9588: defect (bug): time() is not GMT time() (closed: fixed)"&gt;#9588&lt;/a&gt;?  Do we need to force UTC as the default timezone and avoid setting the default in wp_timezone_override_offset()?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11672 (current_time() does not correctly retrun localized time) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 30 Dec 2009 16:59:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11672#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11672#comment:1/1262192345000000</guid>
      <description>&lt;p&gt;
See also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9588" title="#9588: defect (bug): time() is not GMT time() (closed: fixed)"&gt;#9588&lt;/a&gt; &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10940" title="#10940: defect (bug): Default timezone should be set for PHP5 (closed: fixed)"&gt;#10940&lt;/a&gt; &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11672" title="#11672: defect (bug): current_time() does not correctly retrun localized time (closed: fixed)"&gt;#11672&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [12586]: Don't pass deprecated argument to comments_number().</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 30 Dec 2009 16:54:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12586</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12586/1262192068476598</guid>
      <description>&lt;p&gt;
Don't pass deprecated argument to comments_number().
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #11172 (Login form template function) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Wed, 30 Dec 2009 16:54:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11172#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11172#comment:12/1262192061000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11172#comment:11" title="Comment 11"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I would like to see a wp_login_form() function that echoes wp_get_login_form(), if we are to have both.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You have WP precedent behind your suggestion, but it's a silly precedent I wish we'd not perpetuate.
&lt;/p&gt;
&lt;p&gt;
Why bloat the code with extra function definitions when any of the following could work just as well?
&lt;/p&gt;
&lt;pre class="wiki"&gt;echo wp_get_login_form();
print wp_get_login_form();
wp_get_login_form(array('echo' =&amp;gt; true));
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10805 (Mark user levels as Deprecated) closed</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 30 Dec 2009 16:51:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10805#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10805#comment:11/1262191899000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12585" title="Mark user levels as Deprecated. Fixes #10805 props nacin."&gt;[12585]&lt;/a&gt;) Mark user levels as Deprecated. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10805" title="#10805: enhancement: Mark user levels as Deprecated (closed: fixed)"&gt;#10805&lt;/a&gt; props nacin.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #11386 (New _deprecated_argument() function) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 30 Dec 2009 16:51:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11386#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11386#comment:33/1262191896000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12584" title="Updates and improvements to _depreceated_argument. See #11386 props nacin."&gt;[12584]&lt;/a&gt;) Updates and improvements to _depreceated_argument. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11386" title="#11386: enhancement: New _deprecated_argument() function (closed: fixed)"&gt;#11386&lt;/a&gt; props nacin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [12585]: Mark user levels as Deprecated. Fixes #10805 props nacin.</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 30 Dec 2009 16:51:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12585</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12585/1262191892823649</guid>
      <description>&lt;p&gt;
Mark user levels as Deprecated. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10805" title="#10805: enhancement: Mark user levels as Deprecated (closed: fixed)"&gt;#10805&lt;/a&gt; props nacin.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>tax-experimental.diff attached to Ticket #9951</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Wed, 30 Dec 2009 16:48:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/9951/tax-experimental.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/9951/tax-experimental.diff/1262191689000000</guid>
      <description>&lt;p&gt;
Added experimental patch which replaces all the category&lt;span class="underline"&gt;*, tag&lt;/span&gt;* to use all registered taxonomies. (not working)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11665 (UTC Time Zone Set in wp-settings affects items in header) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 30 Dec 2009 16:41:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11665#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11665#comment:6/1262191273000000</guid>
      <description>&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10940" title="#10940: defect (bug): Default timezone should be set for PHP5 (closed: fixed)"&gt;#10940&lt;/a&gt; for history behind the timezone set call.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>11665.2.diff attached to Ticket #11665</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 30 Dec 2009 16:37:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11665/11665.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11665/11665.2.diff/1262191076000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11622 (switch to PDO::prepare when we require PHP 5.1) updated</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Wed, 30 Dec 2009 16:37:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11622#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11622#comment:14/1262191031000000</guid>
      <description>&lt;p&gt;
I like PostgreSQL as much as the next person (probably more), but it's not really pertinent to the question.  What does the MySQL query planner do?  References and methods for reproducing would be helpful.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11665 (UTC Time Zone Set in wp-settings affects items in header) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 30 Dec 2009 16:34:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11665#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11665#comment:5/1262190892000000</guid>
      <description>&lt;p&gt;
date.timezone is often not set. Should me move calling date_default_timezone_set() further down in wp-settings.php so we can use the timezone_string option, if set?  That way it will be set before init instead of getting set the first time something tries to reference gmt_offset.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10805 (Mark user levels as Deprecated) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 30 Dec 2009 16:29:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10805#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10805#comment:10/1262190545000000</guid>
      <description>&lt;p&gt;
I think one call in &lt;code&gt;has_cap&lt;/code&gt; where the mapping happens is better than putting the calls into &lt;code&gt;current_user_can&lt;/code&gt; and &lt;code&gt;author_can&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11386 (New _deprecated_argument() function) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 30 Dec 2009 16:23:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11386#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11386#comment:32/1262190223000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12584" title="Updates and improvements to _depreceated_argument. See #11386 props nacin."&gt;[12584]&lt;/a&gt;) Updates and improvements to _depreceated_argument. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11386" title="#11386: enhancement: New _deprecated_argument() function (closed: fixed)"&gt;#11386&lt;/a&gt; props nacin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [12584]: Updates and improvements to _depreceated_argument. See #11386 props nacin.</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 30 Dec 2009 16:23:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12584</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12584/1262190219177104</guid>
      <description>&lt;p&gt;
Updates and improvements to _depreceated_argument. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11386" title="#11386: enhancement: New _deprecated_argument() function (closed: fixed)"&gt;#11386&lt;/a&gt; props nacin.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #11608 (wpdb-&gt;prepare() is broken) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 30 Dec 2009 16:05:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11608#comment:55</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11608#comment:55/1262189101000000</guid>
      <description>&lt;p&gt;
Just reviewed, my code has a bug and there are improvements for speed in prepare(), Westi gave me feedback via IRC that he likes to have that speed improved. What's often forgotten is that the @-error-surpress operator costs us a lot of speed. I will update to a new revision later.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11604 (apache_mod_loaded() is broken) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 30 Dec 2009 15:51:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11604#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11604#comment:2/1262188260000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I assume that &lt;code&gt;apache_get_modules&lt;/code&gt; is failing in PHP 4 because of this?
&lt;/p&gt;
&lt;p&gt;
From php.net changelog for this function:
&lt;/p&gt;
&lt;p&gt;
5.0.0           Became available when using Apache 1, or the PHP Apache 2 filter API. Before this time, it was only available when using the Apache 2 handler API.
&lt;/p&gt;
&lt;p&gt;
What PHP version? What server config for Apache (and what version)?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11672 (current_time() does not correctly retrun localized time) created</title>
      
        <dc:creator>hiromasa</dc:creator>

      <pubDate>Wed, 30 Dec 2009 15:14:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11672</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11672/1262186080000000</guid>
      <description>&lt;p&gt;
When you set you set timezone using a city name, current_time() function in functions.php does not return correct local time.
&lt;/p&gt;
&lt;h4 id="Cause:"&gt;Cause:&lt;/h4&gt;
&lt;p&gt;
When you get gmt_offset(), the wp_timezone_override_offset() hook offsets the timezone again after date_default_timezone_set sets the timezone (this happens only when timezone_string exists).
&lt;/p&gt;
&lt;h4 id="Example1:"&gt;Example 1:&lt;/h4&gt;
&lt;p&gt;
Your timezone is set to "Tokyo" (UTC+9), using the city name. wp_options will contain:
&lt;/p&gt;
&lt;pre class="wiki"&gt;timezone_string	Asia/Tokyo
gmt_offset      ''
&lt;/pre&gt;&lt;p&gt;
Code below will incorrectly retun UTC+9+9.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nb"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Y-m-d H:i:s'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'timestamp'&lt;/span&gt; &lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;h4 id="Example2:"&gt;Example 2:&lt;/h4&gt;
&lt;p&gt;
Your timezone is set to "UTC+9" (WordPress 2.9.1 RC1). wp_options will contain:
&lt;/p&gt;
&lt;pre class="wiki"&gt;timezone_string	''
gmt_offset      9
&lt;/pre&gt;&lt;p&gt;
Code below will correctly retun UTC+9.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nb"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Y-m-d H:i:s'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'timestamp'&lt;/span&gt; &lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11622 (switch to PDO::prepare when we require PHP 5.1) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 30 Dec 2009 14:44:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11622#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11622#comment:13/1262184243000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11622#comment:12" title="Comment 12"&gt;josephscott&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm curious about the suggestion that the query planner would do poorly with prepared statements.  Any there any references to this actually being the case?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I've seen it happen in my own apps, with queries very similar to my above example query.
&lt;/p&gt;
&lt;p&gt;
Using PostgreSQL and with a decent amount of data, that example query ends up with a hash plan followed by a quick sort if you ask PG to prepare the statement, and with an index scan/nested loop plan if you send the final query instead. With large amounts of data, the difference between the two is significant.
&lt;/p&gt;
&lt;p&gt;
The reason the optimizer behaves like that is the same as why query planers don't use indexes for small amounts of data: unless you need a small number of rows as compared to the total number of available rows, it's faster to open all disc pages and weed out the needed rows (using a hash bucket in this particular case), than it is to loop through an index.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11622 (switch to PDO::prepare when we require PHP 5.1) updated</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Wed, 30 Dec 2009 14:26:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11622#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11622#comment:12/1262183205000000</guid>
      <description>&lt;p&gt;
The hardest part of achieving database independence would not be helped at all by using PDO.  From the PDO PHP intro page - &lt;a class="ext-link" href="http://us.php.net/manual/en/intro.pdo.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://us.php.net/manual/en/intro.pdo.php&lt;/a&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;PDO provides a data-access abstraction layer, which means that, regardless of which database you're using, you use the same functions to issue queries and fetch data. PDO does not provide a database abstraction; it doesn't rewrite SQL or emulate missing features. You should use a full-blown abstraction layer if you need that facility.
&lt;/pre&gt;&lt;p&gt;
If you were really looking for a library to provide database independence there have been other options for quite some time.
&lt;/p&gt;
&lt;p&gt;
The additional round trip requests to the DB to process the prepared statement would not be desirable though.  I'd consider that enough to nix the idea of using real  mysqli prepared statements.
&lt;/p&gt;
&lt;p&gt;
I'm curious about the suggestion that the query planner would do poorly with prepared statements.  Any there any references to this actually being the case?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11530 (logic errors in clean_term_cache()) closed</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 30 Dec 2009 13:25:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11530#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11530#comment:9/1262179556000000</guid>
      <description>fixed</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #11601 (Touch error during plugin upgrade) updated</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Wed, 30 Dec 2009 12:17:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11601#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11601#comment:8/1262175454000000</guid>
      <description>&lt;p&gt;
It is as you say, that makes no difference.  If I grant extra permissions to the iis user account to c:\windows\temp I can get a different message.
&lt;/p&gt;
&lt;p&gt;
Unpacking the update…
&lt;/p&gt;
&lt;p&gt;
Incompatible archive PCLZIP_ERR_READ_OPEN_FAIL (-2) : Unable to read archive 'C:\Windows\TEMP\/sem-dofollow.tmp'
&lt;/p&gt;
&lt;p&gt;
But the files is not created, and (prior to this version of WP) this has always worked without issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11574 (WordPress importer fails to import content which contains importer ...) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 30 Dec 2009 11:55:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11574#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11574#comment:3/1262174151000000</guid>
      <description>&lt;p&gt;
I think it's adviseable to drop the use of regex for parsing (defective by design) and switch over to an &lt;a class="ext-link" href="http://www.php.net/manual/de/function.xml-parse.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;xml parser&lt;/a&gt;. There should be no need to re-invent the wheel.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11570 (Change Default Database Error Page) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 30 Dec 2009 11:50:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11570#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11570#comment:5/1262173811000000</guid>
      <description>&lt;p&gt;
Please enable database logging with the WPDB component to get alerts about database problems. You can help improve that component to enable better logging (incl. sending out emails) so that it better integrates with the php error_log function. For more information about PHP and error logging please see: &lt;a class="ext-link" href="http://www.php.net/manual/de/function.error-log.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;php error_log function&lt;/a&gt;. Currently WPDB only supports logging to file and the syslog.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11669 (There's a problem to show one letter, and it cuts taxonomies names) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 30 Dec 2009 11:45:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11669#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11669#comment:5/1262173536000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
The slugs are encoded in the DB, the names are not. But 2.9 does treat it differently than 2.8. In 2.8, the slug appears in admin as %d7%a0, while in 2.9 the slug shows the character.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Can confirm that on a clean utf8 install here too. (That it seems to work as intended, both as a single character, and as part of a string)
&lt;/p&gt;
&lt;p&gt;
I'm thinking its due to the charset of the database in use, differing from what WordPress thinks it is.
&lt;/p&gt;
&lt;p&gt;
maorb: Can you open PhpMyAdmin (Or any other DB viewing app) and have a look and see if it lists the Charset/Collation in use for the database tables?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11660 (Custom code for any theme) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 30 Dec 2009 11:44:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11660#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11660#comment:6/1262173444000000</guid>
      <description>&lt;p&gt;
Thanks for creating an enhancement report. The suggestion you made should already be possible by coding a plugin. That is why this ticket has been closed (because that enhancement already exists).
&lt;/p&gt;
&lt;p&gt;
If you feel that this is incorrect please provide more information about what you want to achieve. Thanks for your feedback.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11660 (Custom code for any theme) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 30 Dec 2009 11:42:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11660#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11660#comment:5/1262173352000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11669 (There's a problem to show one letter, and it cuts taxonomies names) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 30 Dec 2009 11:40:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11669#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11669#comment:4/1262173211000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Reviewed:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;test -נ- end&lt;/code&gt; could be added as category via ajax on the post editor screen.
&lt;code&gt;test -נ- end 2&lt;/code&gt; could be added as category w/o javascript on categories screen.
&lt;code&gt;test -נ- end 2&lt;/code&gt; could be added as tag w/o javascript on tags screen.
&lt;code&gt;test-נ-end&lt;/code&gt; could be added as tag w/o javascript on Edit Post screen.
&lt;code&gt;test-נ-end2&lt;/code&gt; could be added as tag via ajax javascript on Edit Post screen.
&lt;/p&gt;
&lt;p&gt;
Therefore I was not able to reproduce on a clean install here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11669 (There's a problem to show one letter, and it cuts taxonomies names) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 30 Dec 2009 11:25:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11669#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11669#comment:3/1262172349000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Please provide encoding information about your blog. The blogs encoding as well as the encoding of the database would be interesting.
&lt;/p&gt;
&lt;p&gt;
Please provide tests to reproduce so that it can taken better care of this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11617 (Trac :  UndefinedError: "change" not defined) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 30 Dec 2009 11:21:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11617#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11617#comment:3/1262172094000000</guid>
      <description>&lt;p&gt;
yeah, thanks for fixing!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11591 (Translations need context when the string is integer value) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 30 Dec 2009 11:19:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11591#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11591#comment:1/1262171998000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Was able to reproduce against current trunk, bug confirmed. Could reproduce with de_DE translation.
&lt;/p&gt;
&lt;p&gt;
Patch still applies clean and fixes the issue.
&lt;/p&gt;
&lt;p&gt;
Thanks for reporting this bug!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11273 (Comments: Edit button is not necessary with Quick Edit button) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 30 Dec 2009 11:02:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11273#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11273#comment:19/1262170965000000</guid>
      <description>&lt;p&gt;
I'm missing a bit of a prototype patch here so that it's easier to discuss. It would be nice to actually have some buttons to click so to better see how this is going to feel. Normally I would say that it's good that the user can decide which editor to load.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11452 (Stop using _wp_attached_file) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 30 Dec 2009 11:01:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11452#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11452#comment:9/1262170876000000</guid>
      <description>&lt;p&gt;
_wp_attached_file.3.diff still applies clean. any idea how to test? Any boundaries to check for?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11601 (Touch error during plugin upgrade) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 30 Dec 2009 10:39:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11601#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11601#comment:7/1262169593000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
That extra slash looks odd to me.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It does, But Windows has always handled it fine.
&lt;/p&gt;
&lt;p&gt;
You can test this by changing $dir = .. line to this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$dir = rtrim(get_temp_dir(), '\\/');
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11601 (Touch error during plugin upgrade) updated</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Wed, 30 Dec 2009 10:34:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11601#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11601#comment:6/1262169293000000</guid>
      <description>&lt;p&gt;
OK I commented out the actual "touch" and this was the result of an attempted upgrade
&lt;/p&gt;
&lt;p&gt;
string(77) "wp_tempnam(&lt;a class="ext-link" href="http://downloads.wordpress.org/plugin/comment-timeout.2.1.1.zip"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://downloads.wordpress.org/plugin/comment-timeout.2.1.1.zip&lt;/a&gt;, )" array(2) { &lt;a class="missing wiki"&gt;dir?&lt;/a&gt;=&amp;gt; string(17) "C:\Windows\TEMP\/" &lt;a class="missing wiki"&gt;filename?&lt;/a&gt;=&amp;gt; string(25) "comment-timeout.2.1.1.zip" } array(1) { &lt;a class="missing wiki"&gt;filename?&lt;/a&gt;=&amp;gt; string(36) "C:\Windows\TEMP\/comment-timeout.tmp" }
Unpacking the update…
&lt;/p&gt;
&lt;p&gt;
Incompatible archive PCLZIP_ERR_MISSING_FILE (-4) : Missing archive file 'C:\Windows\TEMP\/comment-timeout.tmp'
&lt;/p&gt;
&lt;p&gt;
That extra slash looks odd to me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11281 (Install any plugin version from the admin) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 30 Dec 2009 10:30:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11281#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11281#comment:21/1262169028000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/9757" title="#9757: feature request: Allow Plugin/Theme updates from a uploaded .zip file. (new)"&gt;#9757&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10596" title="#10596: feature request: Error when uploading zip package with parent and child themes (closed: wontfix)"&gt;#10596&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9757 (Allow Plugin/Theme updates from a uploaded .zip file.) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 30 Dec 2009 10:30:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9757#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9757#comment:13/1262169012000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10596" title="#10596: feature request: Error when uploading zip package with parent and child themes (closed: wontfix)"&gt;#10596&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11281" title="#11281: feature request: Install any plugin version from the admin (closed: wontfix)"&gt;#11281&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10596 (Error when uploading zip package with parent and child themes) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 30 Dec 2009 10:30:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10596#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10596#comment:10/1262169010000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/9757" title="#9757: feature request: Allow Plugin/Theme updates from a uploaded .zip file. (new)"&gt;#9757&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11281" title="#11281: feature request: Install any plugin version from the admin (closed: wontfix)"&gt;#11281&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10596 (Error when uploading zip package with parent and child themes) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 30 Dec 2009 10:28:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10596#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10596#comment:9/1262168907000000</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10596 (Error when uploading zip package with parent and child themes) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 30 Dec 2009 10:28:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10596#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10596#comment:8/1262168900000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think having this working would be good in respect to what canonical plugins its pointing towards to.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11601 (Touch error during plugin upgrade) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 30 Dec 2009 10:20:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11601#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11601#comment:5/1262168438000000</guid>
      <description>&lt;p&gt;
Sorry, I was after the output from it.. Not the warnings.
&lt;/p&gt;
&lt;p&gt;
The behaviour may have changed, which was why i was after the details.
&lt;/p&gt;
&lt;p&gt;
The behaviour of that particular function has remained, but functions it depends on, specifically &lt;code&gt;get_temp_dir()&lt;/code&gt; was changed, in that it also tries the &lt;code&gt;upload_tmp_dir&lt;/code&gt; folder now.. But thats only after other methods fail, specifically, trying to write to the WP_CONTENT_DIR and trying &lt;code&gt;sys_get_temp_dir()&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Neither of those changes should've really affected you.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11120 (Issue with ABSPATH already defined) closed</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 30 Dec 2009 10:15:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11120#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11120#comment:9/1262168113000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12583" title="Use a more reliable method of locating wp-load.php in the admin ..."&gt;[12583]&lt;/a&gt;) Use a more reliable method of locating wp-load.php in the admin bootstrap. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11120" title="#11120: defect (bug): Issue with ABSPATH already defined (closed: fixed)"&gt;#11120&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [12583]: Use a more reliable method of locating wp-load.php in the admin ...</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 30 Dec 2009 10:15:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12583</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12583/1262168110057049</guid>
      <description>&lt;p&gt;
Use a more reliable method of locating wp-load.php in the admin bootstrap. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11120" title="#11120: defect (bug): Issue with ABSPATH already defined (closed: fixed)"&gt;#11120&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #11601 (Touch error during plugin upgrade) updated</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Wed, 30 Dec 2009 09:35:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11601#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11601#comment:4/1262165720000000</guid>
      <description>&lt;p&gt;
Both attempts to var_dump and the modified proc result in the same message (the only difference being that the line number changes due to the changes in the proc.)
&lt;/p&gt;
&lt;p&gt;
Has the behaviour here changed in 2.9?  I've also noticed that theme files are no longer writable unless I add "authenticated user" write perms to the directory, which wasn't required in earlier revisions of WP. I suspect this is connected or similar.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11120 (Issue with ABSPATH already defined) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Wed, 30 Dec 2009 09:33:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11120#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11120#comment:8/1262165619000000</guid>
      <description>&lt;p&gt;
Sure, whatever works best.  This was a tiny patch to solve a simple problem but if you've got a broader way to address the issue then that's even better.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11120 (Issue with ABSPATH already defined) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 30 Dec 2009 09:27:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11120#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11120#comment:7/1262165236000000</guid>
      <description>&lt;p&gt;
I think it might be easier and better to change admin.php to have a more successful way of locating wp-load.php for the require_once.
&lt;/p&gt;
&lt;p&gt;
wp-load.php is always going to try and define ABSPATH and IMHO it should always do that itself as it knows for sure where ABSPATH is.
&lt;/p&gt;
&lt;p&gt;
If we move to the wp-load.php require method used in install.php then we should always be able to find it from admin.php.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11532 (Data returned by plugins API is double UTF-8 encoded) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 30 Dec 2009 09:26:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11532#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11532#comment:6/1262165171000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11120 (Issue with ABSPATH already defined) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Wed, 30 Dec 2009 09:26:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11120#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11120#comment:6/1262165161000000</guid>
      <description>&lt;p&gt;
@dd32 - My comments were NOT why it shouldnt be fixed. My comments were that his code he is using is flawed, Nor was it referencing his patch.
&lt;/p&gt;
&lt;p&gt;
Sorry... didn't mean to offend.  But at least I hope you can understand how I misread by rereading your comments: "&lt;em&gt;But i'm -1 to making it easier for anyone to hook wordpress as such you're suggesting for the simple reason that it doesnt always work.&lt;/em&gt;"
&lt;/p&gt;
&lt;p&gt;
@westi - Please don't change the reported in version to a newer version.
&lt;/p&gt;
&lt;p&gt;
Sorry again. I misunderstood how you were using the version numbers.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11120 (Issue with ABSPATH already defined) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 30 Dec 2009 09:21:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11120#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11120#comment:5/1262164903000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11120#comment:3" title="Comment 3"&gt;mikeschinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Please don't change the reported in version to a newer version.
&lt;/p&gt;
&lt;p&gt;
Then we lose the history of when the bug was identified.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11662 (UTF-8 Link in Admin panel expired) closed</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 30 Dec 2009 09:14:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11662#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11662#comment:1/1262164473000000</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5831" title="#5831: enhancement: Inline help for &amp;#34;UTF-8 is recommended&amp;#34; needs replacing (closed: fixed)"&gt;#5831&lt;/a&gt; and was fixed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12101" title="Improve the inline documentation about character sets and link to ..."&gt;[12101]&lt;/a&gt; for 2.9
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #11532 (Data returned by plugins API is double UTF-8 encoded) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 30 Dec 2009 09:12:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11532#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11532#comment:5/1262164344000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11532#comment:4" title="Comment 4"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11567" title="#11567: defect (bug): Plugin description is not divided into paragraphs (closed: duplicate)"&gt;#11567&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Please leave the milestone for WordPress.org api issues set to WordPress.org site as changes made there are version independent.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11556 (Add support for embedding YouTu.be URLs) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 30 Dec 2009 08:58:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11556#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11556#comment:3/1262163498000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Could we not just register youtu.be as another oembed provided and rely on the 302 following of the HTTP handlers.
&lt;/p&gt;
&lt;p&gt;
That way we don't need any youtu.be specific code in here and if they change the url format of any of the providers in future and offer 302 redirects we would follow those too?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11569 (Media.php validation fix) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 30 Dec 2009 08:19:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11569#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11569#comment:10/1262161183000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12582" title="Remove unneeded empty span and add form closing tag in media.php, ..."&gt;[12582]&lt;/a&gt;) Remove unneeded empty span and add form closing tag in media.php, props Simek and hakre, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11569" title="#11569: enhancement: Media.php validation fix (closed: fixed)"&gt;#11569&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [12582]: Remove unneeded empty span and add form closing tag in media.php, ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 30 Dec 2009 08:19:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12582</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12582/1262161174103271</guid>
      <description>&lt;p&gt;
Remove unneeded empty span and add form closing tag in media.php, props Simek and hakre, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11569" title="#11569: enhancement: Media.php validation fix (closed: fixed)"&gt;#11569&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #11650 (Unable to create empty value for postmeta) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 30 Dec 2009 08:09:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11650#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11650#comment:6/1262160540000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
attachment 11650.dif  added
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;Adds a Error if you attempt to update meta to a empty value.
&lt;ul&gt;&lt;li&gt;non-empty string is fine
&lt;/li&gt;&lt;li&gt;0 is fine
&lt;/li&gt;&lt;li&gt;Zero length string is not
&lt;/li&gt;&lt;li&gt;Nor is a whitespace-only string (Meta refuses to add it, which is the reason for the trim())
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>11650.dif attached to Ticket #11650</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 30 Dec 2009 08:06:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11650/11650.dif</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11650/11650.dif/1262160409000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #7225 (Add more document file type extensions) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 30 Dec 2009 07:59:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7225#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7225#comment:10/1262159985000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12581" title="Add more document file type extensions, props Otto42, dd32, hakre, ..."&gt;[12581]&lt;/a&gt;) Add more document file type extensions, props Otto42, dd32, hakre, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7225" title="#7225: enhancement: Add more document file type extensions (closed: fixed)"&gt;#7225&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [12581]: Add more document file type extensions, props Otto42, dd32, hakre, ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 30 Dec 2009 07:59:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12581</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12581/1262159973345314</guid>
      <description>&lt;p&gt;
Add more document file type extensions, props Otto42, dd32, hakre, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7225" title="#7225: enhancement: Add more document file type extensions (closed: fixed)"&gt;#7225&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #11601 (Touch error during plugin upgrade) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 30 Dec 2009 07:46:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11601#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11601#comment:3/1262159181000000</guid>
      <description>&lt;p&gt;
try var_dump(wp_tempnam()); instead of echo'ing it..
&lt;/p&gt;
&lt;p&gt;
Looking at &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-admin/includes/file.php#L179"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the function&lt;/a&gt; could you add a debug in there, Well, Replace it with this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	function wp_tempnam($filename = '', $dir = ''){
var_dump("wp_tempnam($filename, $dir)");
	        if ( empty($dir) )
	                $dir = get_temp_dir();
	        $filename = basename($filename);
	        if ( empty($filename) )
	                $filename = time();
var_dump(compact('dir', 'filename'));
	        $filename = preg_replace('|\..*$|', '.tmp', $filename);
	        $filename = $dir . wp_unique_filename($dir, $filename);
var_dump(compact('filename'));
	        touch($filename);
	        return $filename;
	}
&lt;/pre&gt;&lt;p&gt;
Take a look at the output, and check you have writable access to the directories mentioned.
&lt;/p&gt;
&lt;p&gt;
Touch() is being used to create the file, so why its complaining it doesnt exist, seems to point to there being a issue accessing the path its chosen.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11671 (Image Saturation Loss on Resize) closed</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Wed, 30 Dec 2009 07:44:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11671#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11671#comment:1/1262159085000000</guid>
      <description>invalid: &lt;p&gt;
Problem was confined to older archives, so this must have been fixed in 2.7 or 2.8.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #11668 (Attempt to detect the correct post enclosure mime type) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 30 Dec 2009 07:36:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11668#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11668#comment:3/1262158583000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12580" title="Attempt to detect the correct post enclosure mime type, props ..."&gt;[12580]&lt;/a&gt;) Attempt to detect the correct post enclosure mime type, props josephscott, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11668" title="#11668: enhancement: Attempt to detect the correct post enclosure mime type (closed: fixed)"&gt;#11668&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [12580]: Attempt to detect the correct post enclosure mime type, props ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 30 Dec 2009 07:36:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12580</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12580/1262158577485459</guid>
      <description>&lt;p&gt;
Attempt to detect the correct post enclosure mime type, props josephscott, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11668" title="#11668: enhancement: Attempt to detect the correct post enclosure mime type (closed: fixed)"&gt;#11668&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #11669 (There's a problem to show one letter, and it cuts taxonomies names) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 30 Dec 2009 07:32:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11669#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11669#comment:2/1262158352000000</guid>
      <description>&lt;p&gt;
Some quick testing on the en_US locale:
I can add the character (a single character, or as part of a word) as a tag and a category on 2.8, 2.9 and trunk.
&lt;/p&gt;
&lt;p&gt;
The slugs are encoded in the DB, the names are not. But 2.9 does treat it differently than 2.8. In 2.8, the slug appears in admin as %d7%a0, while in 2.9 the slug shows the character.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11671 (Image Saturation Loss on Resize) created</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Wed, 30 Dec 2009 07:30:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11671</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11671/1262158255000000</guid>
      <description>&lt;p&gt;
I was going through some archives today, and noticed a pattern where many images have noticeably reduced color saturation in the Large or Small size image compared to the full size.  When looking at the original and resized versions side by side, the resized version looks really bad.
&lt;/p&gt;
&lt;p&gt;
This is happening inconsistently, with some images and not others.
&lt;/p&gt;
&lt;p&gt;
I will attach some examples when I have more time to test this.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11669 (There's a problem to show one letter, and it cuts taxonomies names) updated</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Wed, 30 Dec 2009 06:48:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11669#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11669#comment:1/1262155722000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11227 (Ability to discard plugin upgrade automatically) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 30 Dec 2009 06:33:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11227#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11227#comment:12/1262154786000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
How about to exclude all plugins that are deactivated from the update check? I mean, if they aren't updated, there is no need to update them.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Many plugins will be deactivated as their blog wasnt stable with it activated, or broke something. You need to be able to update deactivated plugins.
&lt;/p&gt;
&lt;p&gt;
Doesnt WordPress somehow support a changelog feature before agree'ing to updateing, or something like that? Maybe it was just a thought that never got implemented?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11650 (Unable to create empty value for postmeta) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 30 Dec 2009 06:29:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11650#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11650#comment:5/1262154576000000</guid>
      <description>&lt;p&gt;
I somewhat dont think a empty value has ever been allowed.
&lt;/p&gt;
&lt;p&gt;
In this case, I think the error condition simply needs to be raised on the ajax call.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11617 (Trac :  UndefinedError: "change" not defined) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 30 Dec 2009 05:50:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11617#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11617#comment:2/1262152240000000</guid>
      <description>&lt;p&gt;
Thanks to whoever has fixed this
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #11670 (Two recently introduced Trac bugs) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 30 Dec 2009 05:50:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11670#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11670#comment:1/1262152220000000</guid>
      <description>fixed: &lt;blockquote class="citation"&gt;
&lt;p&gt;
Comment timestamps are now missing.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Since fixed.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
You can no longer preview a comment; it generates a Trac error. (You can however preview a Ticket.)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11617" title="#11617: defect (bug): Trac :  UndefinedError: &amp;#34;change&amp;#34; not defined (closed)"&gt;#11617&lt;/a&gt;, Which has also been fixed.
&lt;/p&gt;
&lt;p&gt;
Thanks to whoever did so :)
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #11597 (__destruct() is not designed to clean up circular references) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 30 Dec 2009 05:46:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11597#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11597#comment:6/1262151963000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
and I don't intend on changing this upstream.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
To me, Thats enough of a reason for WordPress not to change it. We're using the 3rd party library, it makes no sense to change the code here.
&lt;/p&gt;
&lt;p&gt;
If you'd like to dicuss that furthur, IMO, It belongs on a simplepie-centric discussion forum.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11542 (Add "Upgrade" to bulk actions on plugins.php) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 30 Dec 2009 05:21:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11542#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11542#comment:6/1262150519000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
and only then instantiate the updater?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That would be the best way of achieving it, yes. Patch was designed as a first cut, not an end-all :) - I'll update the patch when i've got a chance to add that, If it gets commited before then, Then please leave this ticket open so i can submit some cleanups to it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11120 (Issue with ABSPATH already defined) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 30 Dec 2009 05:18:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11120#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11120#comment:4/1262150338000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
@dd32 I think your justification for why it shouldn't be fixed is flawed
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
My comments were NOT why it shouldnt be fixed. My comments were that his code he is using is flawed, Nor was it referencing his patch. I also suggested a few other ways of doing what he wanted to, in a more "Wordpressy" way.
&lt;/p&gt;
&lt;p&gt;
I dont see any reason why the attached patch couldnt be commited, No harm in checking before defining it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11668 (Attempt to detect the correct post enclosure mime type) updated</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Wed, 30 Dec 2009 04:40:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11668#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11668#comment:2/1262148049000000</guid>
      <description>&lt;p&gt;
That works for me.  I tested the 11668.patch with my test case from Amazon S3 and the enclosure showed up correctly in the RSS feed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>11668.patch attached to Ticket #11668</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 30 Dec 2009 04:11:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11668/11668.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11668/11668.patch/1262146273000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11051 (Add .flv to the upload whitelist) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 30 Dec 2009 03:15:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11051#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11051#comment:8/1262142917000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7225" title="#7225: enhancement: Add more document file type extensions (closed: fixed)"&gt;#7225&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7225 (Add more document file type extensions) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 30 Dec 2009 03:14:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7225#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7225#comment:9/1262142899000000</guid>
      <description>&lt;p&gt;
And: asc for ascii text (text was a bit alone). Additionally I formatted wp_ext2type to make it more readable (the lines are still a little long).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>7225.2.diff attached to Ticket #7225</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 30 Dec 2009 03:13:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/7225/7225.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/7225/7225.2.diff/1262142806000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11120 (Issue with ABSPATH already defined) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Wed, 30 Dec 2009 03:13:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11120#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11120#comment:3/1262142793000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11120 (Issue with ABSPATH already defined) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Wed, 30 Dec 2009 03:13:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11120#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11120#comment:2/1262142781000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've run into the same problem and need the same fix.
&lt;/p&gt;
&lt;p&gt;
@dd32 I think your justification for why it shouldn't be fixed is flawed, at least in some cases.   Just because he chose to use a poorly selected expression to get the $root doesn't make this patch any less valid.
&lt;/p&gt;
&lt;p&gt;
I'm trying to load admin.php prior to calling any bootstrap code and for that I need to know the root directory in ABSPATH, for that I'm using:
&lt;/p&gt;
&lt;pre class="wiki"&gt;define('ABSPATH',$_SERVER['DOCUMENT_ROOT'] .'/');
&lt;/pre&gt;&lt;p&gt;
I believe this is a patch that is needed, especially considering how it is inconsistent when the code in admin.php that presumes that ABSPATH may already be defined and then precedes to call wp-load.php that assumes ABSPATH was not predefined.
&lt;/p&gt;
&lt;p&gt;
The patch provided by @ontic is simple and can't cause an unexpected bug unless someone is doing something that would cause an error already.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7225 (Add more document file type extensions) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 30 Dec 2009 03:13:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7225#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7225#comment:8/1262142780000000</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Next to the new office document file type extenstions I added flv to video ( Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11051" title="#11051: defect (bug): Add .flv to the upload whitelist (closed: fixed)"&gt;#11051&lt;/a&gt; ) and Matroska Media Containers (mkv, mka).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11668 (Attempt to detect the correct post enclosure mime type) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 30 Dec 2009 02:59:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11668#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11668#comment:1/1262141953000000</guid>
      <description>&lt;p&gt;
Nice idea, &lt;code&gt;get_allowed_mime_types()&lt;/code&gt; returns an array that is prepared for use in a (case-insensitive) regex but in the patch it's used in a nested loop instead. With such short strings I don't think there will be any performance differences but may be good to keep the case-insensitive functionality.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7225 (Add more document file type extensions) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 30 Dec 2009 02:47:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7225#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7225#comment:7/1262141224000000</guid>
      <description>&lt;p&gt;
New filetypes look OK in my eyes, they seem to be correct.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11530 (logic errors in clean_term_cache()) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 30 Dec 2009 02:44:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11530#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11530#comment:8/1262141074000000</guid>
      <description>&lt;p&gt;
In my eyes it looks like that the patch was comitted but the ticket is still open. How to continue? Close the ticket? Keep it open?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11639 (In core upgrader, replace the hard-coded required PHP/MySQL versions) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 30 Dec 2009 02:38:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11639#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11639#comment:5/1262140735000000</guid>
      <description>&lt;p&gt;
New patch also includes the better upgrade strings from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11666" title="#11666: defect (bug): upgrade.php dies hard on MySQL &amp;lt; 4.1.0 (closed: fixed)"&gt;#11666&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11542 (Add "Upgrade" to bulk actions on plugins.php) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 30 Dec 2009 02:37:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11542#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11542#comment:5/1262140640000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Regarding your patch and the defects: Why don't you do a check if &lt;code&gt; 0 &amp;lt; count($plugins) &lt;/code&gt; and only then instantiate the updater?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11585 (WordPress should cache failed feed fetches so as to avoid overloading ...) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 30 Dec 2009 02:31:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11585#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11585#comment:1/1262140293000000</guid>
      <description>&lt;p&gt;
Idea makes sense. I know from one site I use simplepie on and where I do logging that feels fail from time to time like out of nothing. Tend to a smaller timespan like 15 minutes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>11639-update-core.3.diff attached to Ticket #11639</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 30 Dec 2009 02:28:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11639/11639-update-core.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11639/11639-update-core.3.diff/1262140129000000</guid>
      <description>&lt;p&gt;
Includes the better strings introduced in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11666" title="#11666: defect (bug): upgrade.php dies hard on MySQL &amp;lt; 4.1.0 (closed: fixed)"&gt;#11666&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11569 (Media.php validation fix) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 30 Dec 2009 02:28:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11569#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11569#comment:9/1262140121000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11569 (Media.php validation fix) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 30 Dec 2009 02:28:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11569#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11569#comment:8/1262140106000000</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>11569.patch attached to Ticket #11569</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 30 Dec 2009 02:27:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11569/11569.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11569/11569.patch/1262140062000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11569 (Media.php validation fix) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 30 Dec 2009 02:27:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11569#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11569#comment:7/1262140034000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch did not apply clean any longer. I updated it to relfect the two named changes, ignored the whitespace changes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10722.patch attached to Ticket #10722</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 30 Dec 2009 02:09:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10722/10722.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10722/10722.patch/1262138962000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10722 (Allow filtering of whether or not 404 should be handled.) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 30 Dec 2009 02:08:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10722#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10722#comment:4/1262138931000000</guid>
      <description>&lt;p&gt;
Since the last patch was created the function did change. I placed the filter now as it was intended in the old patch.
&lt;/p&gt;
&lt;p&gt;
Additionally it was possible to remove duplicate code.
&lt;/p&gt;
&lt;p&gt;
As an improvement compared to the old patch, now, if 404 was de-filtered, 200 is given if !is_404() which was the standard behaviour of the function in pre-filter times.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11667 (Unable to resize images when editing post in Google Chrome) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 30 Dec 2009 02:06:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11667#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11667#comment:1/1262138768000000</guid>
      <description>invalid: &lt;p&gt;
Resizing of images in the visual editor is a browser feature. It's available in Firefox and IE but not in WebKit (Safari, Chrome) or Opera.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #11670 (Two recently introduced Trac bugs) created</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 30 Dec 2009 02:04:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11670</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11670/1262138645000000</guid>
      <description>&lt;p&gt;
Trying to raise the profile of two bugs on Trac that seemed to be caused by recent improvements (namely, Gravatars and wordpress.org profile linking) -
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Comment timestamps are now missing.
&lt;/li&gt;&lt;li&gt;You can no longer preview a comment; it generates a Trac error. (You can however preview a Ticket.)
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10814 (Plugin GUIDs) updated</title>
      
        <dc:creator>docwhat</dc:creator>

      <pubDate>Wed, 30 Dec 2009 01:09:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10814#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10814#comment:16/1262135365000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10814#comment:15" title="Comment 15"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That makes more sense, yes. I'd be a bit concerned about plugins that highlight their MD5, though. I'm aware of at least one that does so (Security Scan).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hmm... I not sure I understand the problem.  Though, adding an extension to the "auto-update" protocol that could look for an optional md5 file, either passed explicitly via a header or by just trying to fetch &amp;lt;plugin-name&amp;gt;.zip.md5.
&lt;/p&gt;
&lt;p&gt;
Also, don't forget that HTTP actually supports "Content-md5" headers.  The PHP file that servers the page can server the file and the contents of the md5 file.
&lt;/p&gt;
&lt;p&gt;
So we have several options, there.
&lt;/p&gt;
&lt;p&gt;
Ciao!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11669 (There's a problem to show one letter, and it cuts taxonomies names) created</title>
      
        <dc:creator>maorb</dc:creator>

      <pubDate>Wed, 30 Dec 2009 00:07:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11669</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11669/1262131655000000</guid>
      <description>&lt;p&gt;
There's the Hebrew letter called "nun" (ascii char: 144, Unicode: 05E0) ( &lt;a class="ext-link" href="http://www.htmlescape.net/escape_hebrew.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.htmlescape.net/escape_hebrew.html&lt;/a&gt; )  that began to do problems in 2.9.
When trying to add that letter as a part of name of a category or post tag, it just add a blank name.
Only when adding it directly to the DB table, it does appear.
&lt;/p&gt;
&lt;p&gt;
Many people in Israel encountered this issue, but not all of them.
Some thinks that it may be related to the problem with the PHP function preg_replace() that causes this.
&lt;/p&gt;
&lt;p&gt;
This needs an asap fix, since it breaks many WP Hebrew based sites.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11639 (In core upgrader, replace the hard-coded required PHP/MySQL versions) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 30 Dec 2009 00:02:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11639#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11639#comment:4/1262131363000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11639#comment:3" title="Comment 3"&gt;miqrogroove&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11666" title="#11666: defect (bug): upgrade.php dies hard on MySQL &amp;lt; 4.1.0 (closed: fixed)"&gt;#11666&lt;/a&gt; Added a bunch of duplicated code.  I was surprised this wasn't already centralized.  So, can this ticket be expanded to combine update-core.php and upgrade.php where appropriate?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Unfortunately, no. We could standardize between upgrade.php and install.php, but update-core.php is copied by an old installation from a new installation. So a blog running 2.7 copies over the 2.9 update-core.php file, which then installs 2.9 over the 2.7 files. This patch would cause us to also copy over version.php from the incoming package so we can ascertain new requirements.
&lt;/p&gt;
&lt;p&gt;
Looking at upgrade.php and install.php, there really isn't much to dry up. The strings are different and it looks like the logic is handled a bit differently. At most, we could add a function to update-core.php, and upgrade.php and install.php could include it, but I don't see the point.
&lt;/p&gt;
&lt;p&gt;
I do like the new strings from upgrade.php for use in update-core.php, though, and I may suggest we copy them over. Of course, since the file is being copied over, these strings are only future proof when used in update-core.php, so a blog running 2.9 (or 2.9.1 if we change it) will have them, but a blog running less than 2.9 and upgrading won't have them.
&lt;/p&gt;
&lt;p&gt;
At least by 3.0 we won't be hard-coding the requirements anywhere.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>