<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #43410 (Docs of WP_User::get_role_caps() mix up roles and capabilities) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 24 Feb 2018 23:55:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43410#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43410#comment:2/1519516530656756</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43410 (Docs of WP_User::get_role_caps() mix up roles and capabilities) updated</title>
      
        <dc:creator>thomaswm</dc:creator>

      <pubDate>Sat, 24 Feb 2018 23:47:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43410#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43410#comment:1/1519516049104299</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Documentation was added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/8904" title="phpdoc for capabilities.php. Props jacobsantos. fixes #5632"&gt;[8904]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43410 (Docs of WP_User::get_role_caps() mix up roles and capabilities) created</title>
      
        <dc:creator>thomaswm</dc:creator>

      <pubDate>Sat, 24 Feb 2018 23:44:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43410</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43410/1519515868453339</guid>
      <description>&lt;p&gt;
The documentation of the &lt;code&gt;WP_User&lt;/code&gt; member function &lt;code&gt;get_role_caps()&lt;/code&gt; is as follows:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
All of the capabilities of the roles the user belongs to are merged with the users individual roles. This also means that the user can be denied specific roles that their role might have, but the specific user isn’t granted permission to.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This documentation seems confusing to me. I think that roles and capabilities are mixed up in two places:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
All of the capabilities of the roles the user belongs to are merged with the user's individual &lt;del&gt;roles&lt;/del&gt; &lt;strong&gt;capabilities&lt;/strong&gt;. This also means that the user can be denied specific &lt;del&gt;roles&lt;/del&gt; &lt;strong&gt;capabilities&lt;/strong&gt; that their role might have, but the specific user isn’t granted permission to.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43409 (Site Crashed) closed</title>
      
        <dc:creator>tobifjellner</dc:creator>

      <pubDate>Sat, 24 Feb 2018 19:33:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43409#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43409#comment:5/1519500797571170</guid>
      <description>invalid: &lt;p&gt;
Hi @ejm91101
Although you may right now feel very stressed, please calm down,and realize that WordPress Core Trac won't help you at all.
This is the place where the developers of WordPress core keep track of things that need to be fixed and developed in the software WordPress as such.
If you, after analyzing your problem, find that there actually is a bug in WordPress that causes your problem, then you can reopen this ticket. But most probably, at least 99.99% probability is that something else caused your problem. Probably there's a big problem with the theme you tried to install.
In order to get help from some peer WordPress user who volunteers their time to help others, write a post in &lt;a class="ext-link" href="https://wordpress.org/support/forum/how-to-and-troubleshooting/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/forum/how-to-and-troubleshooting/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Good luck
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43409 (Site Crashed) reopened</title>
      
        <dc:creator>ejm91101</dc:creator>

      <pubDate>Sat, 24 Feb 2018 19:27:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43409#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43409#comment:4/1519500452610395</guid>
      <description>&lt;p&gt;
I have no access to my WordPress account and cannot change any settings.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #43409 (Site Crashed) closed</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Sat, 24 Feb 2018 19:22:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43409#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43409#comment:3/1519500165351416</guid>
      <description>invalid: &lt;p&gt;
Hi,
Thanks for submitting this ticket but core.trac is used to track WordPress Core bugs/enhancement.
Your issue seems to be related to the theme you downloaded. Please use support forums instead.
&lt;/p&gt;
&lt;p&gt;
Cheers,
Jb
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43409 (Site Crashed) updated</title>
      
        <dc:creator>ejm91101</dc:creator>

      <pubDate>Sat, 24 Feb 2018 19:18:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43409#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43409#comment:2/1519499897969308</guid>
      <description>&lt;p&gt;
This is an urgent matter.  My entire site has crashed and with no way to correct it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43409 (Site Crashed) updated</title>
      
        <dc:creator>ejm91101</dc:creator>

      <pubDate>Sat, 24 Feb 2018 19:17:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43409#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43409#comment:1/1519499852412123</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43409 (Site Crashed) created</title>
      
        <dc:creator>ejm91101</dc:creator>

      <pubDate>Sat, 24 Feb 2018 19:16:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43409</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43409/1519499818490329</guid>
      <description>&lt;p&gt;
I downloaded a WordPress theme, not sure which theme, and my entire site crashed.  I cannot even access the dashboard to change themes.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>screen-after-login.png attached to Ticket #43408</title>
      
        <dc:creator>jainnidhi</dc:creator>

      <pubDate>Sat, 24 Feb 2018 18:09:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43408/screen-after-login.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43408/screen-after-login.png/1519495753415177</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43408 (Dashboard screen after login when session logout) created</title>
      
        <dc:creator>jainnidhi</dc:creator>

      <pubDate>Sat, 24 Feb 2018 18:08:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43408</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43408/1519495685089830</guid>
      <description>&lt;p&gt;
Sometimes when session is logout and if we again login to the dashboard then it shows the attached screen.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43380 (Made ALT and TITLE field mandatory when uploading media) updated</title>
      
        <dc:creator>slabbe</dc:creator>

      <pubDate>Sat, 24 Feb 2018 16:51:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43380#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43380#comment:5/1519491087606491</guid>
      <description>&lt;p&gt;
Just read the link in your previous comment. I'll give a try to WP Accessibility.
&lt;/p&gt;
&lt;p&gt;
As I mentionned, I would not enable by default this function but let the admin choose if he want to enable it or not.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43380 (Made ALT and TITLE field mandatory when uploading media) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 24 Feb 2018 16:45:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43380#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43380#comment:4/1519490752073966</guid>
      <description>&lt;p&gt;
@slabbe if filling up the &lt;code&gt;alt&lt;/code&gt; attribute field would be mandatory, then users would be forced to always enter a value also for purely decorative images. That would create an accessibility barrier, adding meaningless information and noise for assistive technologies users. Actually, to be WCAG AA compliant, empty &lt;code&gt;alt&lt;/code&gt; values must be allowed. You may want to refer to the &lt;code&gt;alt&lt;/code&gt; decision tree document published by the W3C:
&lt;/p&gt;
&lt;p&gt;
An alt Decision Tree
&lt;a class="ext-link" href="https://www.w3.org/WAI/tutorials/images/decision-tree/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.w3.org/WAI/tutorials/images/decision-tree/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43407.patch attached to Ticket #43407</title>
      
        <dc:creator>jfarthing84</dc:creator>

      <pubDate>Sat, 24 Feb 2018 16:41:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43407/43407.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43407/43407.patch/1519490509918515</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43407 (Make site_url filter aware of wp-login.php actions) created</title>
      
        <dc:creator>jfarthing84</dc:creator>

      <pubDate>Sat, 24 Feb 2018 16:41:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43407</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43407/1519490471562105</guid>
      <description>&lt;p&gt;
For instance, &lt;code&gt;wp_registration_url()&lt;/code&gt; passes the action to &lt;code&gt;site_url()&lt;/code&gt;:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;$registration_url = site_url( 'wp-login.php?action=register' );&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
However, &lt;code&gt;wp_logout_url()&lt;/code&gt; and &lt;code&gt;wp_lostpassword_url()&lt;/code&gt; do not. Attaching a patch to fix this.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43380 (Made ALT and TITLE field mandatory when uploading media) updated</title>
      
        <dc:creator>slabbe</dc:creator>

      <pubDate>Sat, 24 Feb 2018 16:37:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43380#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43380#comment:3/1519490242460618</guid>
      <description>&lt;p&gt;
We asking that as we need to ensure we are WCAG AA compliant. Many of our users are not so tech and skip that step in our publishing workflow. I tought it should be a great feature for our user who use WP and need to keep accessibility at a mandatory level. Adding it directly in the core and let the administrator enable or disable this feature via wp-config.php or directly in the Settings option of the backend could be a nice asset.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40462 (Add placeholders to wp_login_form()) updated</title>
      
        <dc:creator>richardkentgates</dc:creator>

      <pubDate>Sat, 24 Feb 2018 16:21:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40462#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40462#comment:40/1519489280388338</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40462#comment:37" title="Comment 37"&gt;afercia&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
There is plenty disagreement to go around but placeholders have enough use cases and agreement to make it into the spec. Even in the below-linked page, there is the discussion on how to address the usage and Accessibilitiy without the arbitrary removal of placeholders. Nobody is saying this is not a complex issue, but simply doubling down on the argument to arbitrarily dictate this issue for everyone that uses WP and to say "we won't support the spec" is still no more legitimate following your reply. The argument seems to be to simply point out that some developers/designers misuse the tools at hand so the tools should be removed/denied. That is enough argument to remove the entire internet.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://www.w3.org/WAI/GL/low-vision-a11y-tf/wiki/Placeholder_Research"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.w3.org/WAI/GL/low-vision-a11y-tf/wiki/Placeholder_Research&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43380 (Made ALT and TITLE field mandatory when uploading media) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 24 Feb 2018 16:20:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43380#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43380#comment:2/1519489239374173</guid>
      <description>&lt;p&gt;
Worth noting that in many cases images are purely decorative and the most appropriate value for the alt text would be leaving it empty &lt;code&gt;alt=""&lt;/code&gt;. For some background about previous changes to the alt attribute handling, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34635" title="#34635: defect (bug): WordPress image's title is not alt (closed: fixed)"&gt;#34635&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43392 (Support 'object' and 'array' types in register_meta()) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 24 Feb 2018 16:17:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43392#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43392#comment:2/1519489051128166</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @diegoliv thanks for the suggestions.
&lt;/p&gt;
&lt;p&gt;
Imho this works quite well as it is now.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
You need to turn your javascript object into a string (JSON.stringify) if you want to store it on the database.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Correct, or you can use another format like CSV if it makes more sense for your particular case.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
You need to handle sanitization yourself
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Correct, that's the best way to do it. You know what data to expect and when it would be "out of bounds".
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If you get the metadata using get_post_meta(), it won't apply maybe_unserialize() before returning the metadata, you need to do it yourself.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;code&gt;maybe_unserialize()&lt;/code&gt; is a terrible way to do things. It only exists because of back compat. The less it's used -- the better.
&lt;/p&gt;
&lt;p&gt;
Storing the data in a string format of your choice is the proper way here simply because you know what format to expect and how to sanitize it. I wish we could do that for all of WP :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40462 (Add placeholders to wp_login_form()) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 24 Feb 2018 16:08:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40462#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40462#comment:39/1519488486957004</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility-docs by sami.keijonen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility-docs/p1519488485000027"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40462 (Add placeholders to wp_login_form()) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 24 Feb 2018 15:40:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40462#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40462#comment:38/1519486856383597</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1519486854000057"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40462 (Add placeholders to wp_login_form()) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 24 Feb 2018 15:38:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40462#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40462#comment:37/1519486704785608</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for bringing in new contributions to the discussion. As said previously, it's not uncommon to continue the discussion on closed tickets, there's no need to reopen them.
&lt;/p&gt;
&lt;p&gt;
I'd encourage everyone to read again the HTML specification and better understand the underlying problem. I'd also suggest to have a look at the resources linked in the ticket &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/40331" title="#40331: defect (bug): The placeholder attribute should not be used as a replacement for a label (new)"&gt;#40331&lt;/a&gt; mentioned a few times in the previous comments.
&lt;/p&gt;
&lt;p&gt;
Here's what the current specification states: &lt;a class="ext-link" href="https://www.w3.org/TR/html52/sec-forms.html#the-placeholder-attribute"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.w3.org/TR/html52/sec-forms.html#the-placeholder-attribute&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The placeholder attribute represents a &lt;em&gt;short&lt;/em&gt; hint (a word or short phrase) intended to aid the user with data entry when the control has no value. &lt;strong&gt;A hint could be a sample value or a brief description of the expected format&lt;/strong&gt;.
The placeholder attribute should not be used as a replacement for a label.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So, the only valid use for a placeholder is to provide &lt;strong&gt;a sample value or a brief description of the expected format&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;
Think, for example, at a birth date field or a phone number field where the placeholder suggests the expected date or number format, or a short phrase that suggests "enter the color value in RGB format".
&lt;/p&gt;
&lt;p&gt;
Instead, the proposed patch purpose is to use the placeholders as replacement for the labels, see &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40462#comment:1" title="Comment 1"&gt;comment:1&lt;/a&gt; with the code example.
&lt;/p&gt;
&lt;p&gt;
Quoting from a previous comment from Joe Dolson:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As I see it, it will almost 100% be used to hide labels and use placeholders instead, but if there's a legitimate and beneficial use, I'd be willing to listen to it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So the real question is: is there any valid use for placeholders in this specific case?
&lt;/p&gt;
&lt;p&gt;
For the password field: providing a "sample value" or "description of the expected format" wouldn't be so appropriate, I guess everyone agrees on this?
&lt;/p&gt;
&lt;p&gt;
For the username/email field (assuming it would be possible to differentiate when users are going to enter a username or an email):
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;username: providing a "sample value" or "description of the expected format" of a username would be a bit pointless
&lt;/li&gt;&lt;li&gt;email: a valid usage could be something like &lt;code&gt;person@example.org&lt;/code&gt; but, again, it would be a bit pointless
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
@s3w47m88 for the reasons explained above I can't think of a valid use case for placeholders in the login form, but if you have any example of a proper use please do feel free to share it.
&lt;/p&gt;
&lt;p&gt;
@richardkentgates
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Placeholders have their place. They are an efficient use of screen space which allows for more information in a smaller space
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Seems the W3C disagrees :) Placeholders are not meant to be used for visual purposes.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think if WordPress developers, that have so much power over the web, are going to engage in directing what they see as acceptable standards, they should become part of the governing body W3C, and put their ideas up for peer review, debate, and scrutiny. Otherwise, this dictation of standards is not in line with the democratic process that has made the internet so useful for so many.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm sorry to hear your concerns about a "dictatory attitude". As I see it, there's no such a thing as "WordPress developers" as opposed to the rest of the world :) Anyone can contribute to WordPress and I'd encourage you to do so, starting from &lt;a class="ext-link" href="https://make.wordpress.org/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/&lt;/a&gt; you can participate to the various teams activity, follow the meetings, and propose any improvement.
&lt;/p&gt;
&lt;p&gt;
This issue has been discussed a few times during the accessibility team meetings, they happen on Mondays at 17:00 UTC in the Slack #accessibility channel. All meetings are public and everyone can participate.
In a large open-source project like WordPress, proposals get discussed and need to gather some consensus. At the end, it's all about making decisions. I kindly disagree with you and I don't see any attempt to "direct what they see as acceptable standards". The decision made here just follows the existing W3C standards, which are already subject to public debate, peer review, etc. Thus, I'm not sure I fully understand your point.
&lt;/p&gt;
&lt;p&gt;
Worth also considering WordPress aims to be a semantic publishing platform, and aims to meet web standards and best practices. Personally I strongly believe WordPress has a huge educational responsibility and it should always aim to show best practices and educate to use them.
&lt;/p&gt;
&lt;p&gt;
Trying to summarize:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;there's no apparent valid use case for the proposed change (valid use case examples welcome)
&lt;/li&gt;&lt;li&gt;in almost 100% of the cases the proposed change would be used to hide the labels and use placeholders as replacements: this is against the HTML specification and creates usability and accessibility barriers
&lt;/li&gt;&lt;li&gt;many users benefit from visible labels, it's not just about screen readers
&lt;/li&gt;&lt;li&gt;although it's a common practice, using placeholders as replacement for labels is just a bad practice: WordPress should educate designers and developers to not do that
&lt;/li&gt;&lt;li&gt;this proposal was discussed at length by the accessibility team and good argumentations were provided against it
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Considering all this, I'd be inclined to close again this ticket but, to encourage participation, I'll propose to discuss it again in the next accessibility meeting which is going to happen on Monday 26th at 17:00 UTC in the Slack #accessibility channel.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43406 (CS: Fix violations for wp-trackback.php) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sat, 24 Feb 2018 15:00:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43406#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43406#comment:3/1519484456567171</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
+1
&lt;/p&gt;
&lt;p&gt;
Just a small question - why not have the first whitelist on the line above the variable declaration as well ?
&lt;/p&gt;
&lt;p&gt;
Oh and maybe add &lt;code&gt;-- renaming WP global would be BC break&lt;/code&gt; or something, so it's documented why the variable name is exempt.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43405 (CS: Fix violations for wp-signup.php) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sat, 24 Feb 2018 14:56:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43405#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43405#comment:2/1519484203058880</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
+1
&lt;/p&gt;
&lt;p&gt;
Couple of small remarks/questions (line nrs refer to the "new" lines):
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Line 122: &lt;code&gt;( $site_domain )&lt;/code&gt; does not need the parentheses anymore as it is, though it might need output escaping.
&lt;/li&gt;&lt;li&gt;Line 406/412 - the "Don't override WP globals" sniff is more than anything intended for plugins/themes. Should that sniff be excluded for core ?
&lt;/li&gt;&lt;li&gt;Line 933: you may want to split this line up as it's pretty long now, i.e. one condition per line.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43406 (CS: Fix violations for wp-trackback.php) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 24 Feb 2018 14:46:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43406#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43406#comment:2/1519483602299771</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-coding-standards by garyj. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-coding-standards/p1519483600000059"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43404 (CS: Fix violations for wp-activate.php) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Sat, 24 Feb 2018 14:46:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43404#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43404#comment:1/1519483580071593</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43405 (CS: Fix violations for wp-signup.php) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Sat, 24 Feb 2018 14:46:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43405#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43405#comment:1/1519483560204496</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43406 (CS: Fix violations for wp-trackback.php) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Sat, 24 Feb 2018 14:45:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43406#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43406#comment:1/1519483536737634</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>wp-trackback.diff attached to Ticket #43406</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Sat, 24 Feb 2018 14:44:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43406/wp-trackback.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43406/wp-trackback.diff/1519483484721929</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43406 (CS: Fix violations for wp-trackback.php) created</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Sat, 24 Feb 2018 14:44:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43406</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43406/1519483473524135</guid>
      <description>&lt;p&gt;
Address code standard violations for &lt;code&gt;wp-trackback.php&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>wp-signup.diff attached to Ticket #43405</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Sat, 24 Feb 2018 14:42:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43405/wp-signup.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43405/wp-signup.diff/1519483376013948</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43405 (CS: Fix violations for wp-signup.php) created</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Sat, 24 Feb 2018 14:42:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43405</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43405/1519483361410905</guid>
      <description>&lt;p&gt;
Address code standard violations in &lt;code&gt;wp-signup.php&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>wp-activate.diff attached to Ticket #43404</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Sat, 24 Feb 2018 14:41:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43404/wp-activate.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43404/wp-activate.diff/1519483267371048</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43404 (CS: Fix violations for wp-activate.php) created</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Sat, 24 Feb 2018 14:40:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43404</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43404/1519483243677850</guid>
      <description>&lt;p&gt;
Addresses the code standard violations for &lt;code&gt;wp-activate.php&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43401 (Support urldecoded URLs in current menu item detection logic) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 24 Feb 2018 13:43:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43401#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43401#comment:6/1519479787513012</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42732" title="Menus: When checking if a Custom Link matches the current URL to add ..."&gt;42732&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Menus: When checking if a Custom Link matches the current URL to add the &lt;code&gt;current-menu-item&lt;/code&gt; class, check for decoded URL as well.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props soulseekah, campusboy1987.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43401" title="#43401: enhancement: Support urldecoded URLs in current menu item detection logic (closed: fixed)"&gt;#43401&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42732]: Menus: When checking if a Custom Link matches the current URL to add ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 24 Feb 2018 13:43:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42732</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42732/1519479787028521</guid>
      <description>&lt;p&gt;
Menus: When checking if a Custom Link matches the current URL to add the &lt;code&gt;current-menu-item&lt;/code&gt; class, check for decoded URL as well.
&lt;/p&gt;
&lt;p&gt;
Props soulseekah, campusboy1987.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43401" title="#43401: enhancement: Support urldecoded URLs in current menu item detection logic (closed: fixed)"&gt;#43401&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43390 (get_super_admins() should not return "admin" by default) updated</title>
      
        <dc:creator>thomaswm</dc:creator>

      <pubDate>Sat, 24 Feb 2018 13:21:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43390#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43390#comment:3/1519478490775136</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43401 (Support urldecoded URLs in current menu item detection logic) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 24 Feb 2018 13:06:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43401#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43401#comment:5/1519477619507109</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43403 (Improve wp_add_inline_script()) created</title>
      
        <dc:creator>alpipego</dc:creator>

      <pubDate>Sat, 24 Feb 2018 12:47:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43403</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43403/1519476429013488</guid>
      <description>&lt;p&gt;
Just an idea for the moment:
&lt;/p&gt;
&lt;p&gt;
Instead of testing if the js has script tags and adding an error messages but also fixing the problem at the same time, why not accept both. If the passed data has tags just leave them (this would potentially fix &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/40276" title="#40276: enhancement: enhancement: add a $type parameter to wp_add_inline_script() (new)"&gt;#40276&lt;/a&gt;) and if not surround the code with plain &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tags.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>43400-1.diff attached to Ticket #43400</title>
      
        <dc:creator>monikarao</dc:creator>

      <pubDate>Sat, 24 Feb 2018 12:38:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43400/43400-1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43400/43400-1.diff/1519475925926076</guid>
      <description>&lt;p&gt;
Renamed patch for better use
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #31215 (wp_debug_backtrace_summary fails if args index isn't set) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 24 Feb 2018 12:31:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31215#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31215#comment:2/1519475487148401</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @paulschreiber, thanks for the report! Sorry it took so long for someone to get back to you.
&lt;/p&gt;
&lt;p&gt;
I could not reproduce the issue neither in PHP 7.2.2 (the latest version at the moment) nor in PHP 5.2.4 (the earliest supported version).
&lt;/p&gt;
&lt;p&gt;
Looking at the code, &lt;code&gt;$call&lt;/code&gt; is the value of &lt;code&gt;debug_backtrace()&lt;/code&gt;. The affected line is only executed if &lt;code&gt;$call['function']&lt;/code&gt; is one of &lt;code&gt;include&lt;/code&gt;, &lt;code&gt;include_once&lt;/code&gt;, &lt;code&gt;require&lt;/code&gt;, or &lt;code&gt;require_once&lt;/code&gt;, and in all of those cases &lt;code&gt;$call['args']&lt;/code&gt; is defined. It's even defined if I replace &lt;code&gt;debug_backtrace( false )&lt;/code&gt; with
&lt;code&gt;debug_backtrace( DEBUG_BACKTRACE_IGNORE_ARGS )&lt;/code&gt; a few lines above.
&lt;/p&gt;
&lt;p&gt;
Could you clarify when &lt;code&gt;$call['args']&lt;/code&gt; would be undefined? Looks like there are no other reports of this issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43400 .diff attached to Ticket #43400</title>
      
        <dc:creator>monikarao</dc:creator>

      <pubDate>Sat, 24 Feb 2018 12:28:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43400/43400%20.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43400/43400%20.diff/1519475338898128</guid>
      <description>&lt;p&gt;
Updated
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43400 (Update "WordPress News" widget references) updated</title>
      
        <dc:creator>monikarao</dc:creator>

      <pubDate>Sat, 24 Feb 2018 12:23:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43400#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43400#comment:1/1519474988219006</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43400.diff attached to Ticket #43400</title>
      
        <dc:creator>monikarao</dc:creator>

      <pubDate>Sat, 24 Feb 2018 12:22:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43400/43400.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43400/43400.diff/1519474937205065</guid>
      <description>&lt;p&gt;
Changed text from "WordPress News" to "WordPress Events and News"
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40462 (Add placeholders to wp_login_form()) updated</title>
      
        <dc:creator>richardkentgates</dc:creator>

      <pubDate>Sat, 24 Feb 2018 12:18:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40462#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40462#comment:36/1519474689719636</guid>
      <description>&lt;p&gt;
@johnbillion The article you posted has no actual research citation. It's a set of well-articulated opinions. I have to agree that it is not the mandate of WordPress developers to dictate web standards to the online community, for designers, developers, or end-users. People with far more experience, real research, and educations have been making decisions that have continued to push the web forward, including usability.
&lt;/p&gt;
&lt;p&gt;
Since following a few threads for core, I am noticing a worrisome trend of this dictatory attitude where web standards are concerned. I think if WordPress developers, that have so much power over the web, are going to engage in directing what they see as acceptable standards, they should become part of the governing body W3C, and put their ideas up for peer review, debate, and scrutiny. Otherwise, this dictation of standards is not in line with the democratic process that has made the internet so useful for so many.
&lt;/p&gt;
&lt;p&gt;
Placeholders have their place. They are an efficient use of screen space which allows for more information in a smaller space, which can be a big help. And as @s3w47m88 pointed out, ignoring commonly used HTML practices will only lead to hacks to get it done, which compromises the end-user experience far more, not to mention the integrity of core or it's intended usage.
&lt;/p&gt;
&lt;p&gt;
I am waiting on the upcoming changes to this area of WP myself so I can write a plugin for front-side(widget) login/registration with reCaptcha. I will certainly be using placeholders, with or without WP core agreement.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #36281,​43402 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 24 Feb 2018 11:59:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=36281%2C43402</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=36281%2C43402/1519473584381915</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36281" title="#36281: defect (bug): Importer Fails to import menu items in PHP7 (closed: fixed)"&gt;#36281&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a href="https://core.trac.wordpress.org/ticket/36281#comment:22"&gt;https://core.trac.wordpress.org/ticket/36281#comment:22&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #43402 (Update WordPress Importer in the official repository) created</title>
      
        <dc:creator>Looimaster</dc:creator>

      <pubDate>Sat, 24 Feb 2018 11:56:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43402</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43402/1519473385608472</guid>
      <description>&lt;p&gt;
Can someone please move the Github version to the official repository?
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/wordpress-importer/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/wordpress-importer/&lt;/a&gt;
&lt;a class="ext-link" href="https://wordpress.org/plugins/wordpress-importer/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/wordpress-importer/&lt;/a&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;With PHP 7.x menus are not imported.
&lt;/li&gt;&lt;li&gt;And there are PHP notices.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
On Github both are already fixed. Please also bump 0.6.3 to 0.6.4 or users will not be updated automatically.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42089 (Function to detect if current page is a preview of a draft) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 24 Feb 2018 11:52:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42089#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42089#comment:1/1519473128684214</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42088 (Function to detect if current page is a scheduled post (is_scheduled() ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 24 Feb 2018 11:51:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42088#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42088#comment:1/1519473061672792</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40590 (wp_video_shortcode always adds controls="controls") updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 24 Feb 2018 11:49:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40590#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40590#comment:11/1519472985026170</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40276 (enhancement: add a $type parameter to wp_add_inline_script()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 24 Feb 2018 11:47:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40276#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40276#comment:3/1519472867022320</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43401 (Support urldecoded URLs in current menu item detection logic) updated</title>
      
        <dc:creator>campusboy1987</dc:creator>

      <pubDate>Sat, 24 Feb 2018 11:46:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43401#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43401#comment:4/1519472817004546</guid>
      <description>&lt;p&gt;
I checked the edits of @soulseekah on a couple of sites where such a problem arose. Now everything works fine! I'm looking forward to the resilience. Gennady (@soulseekah), thanks for the quick response and solution.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43401 (Support urldecoded URLs in current menu item detection logic) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sat, 24 Feb 2018 11:38:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43401#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43401#comment:3/1519472327613663</guid>
      <description>&lt;p&gt;
Props to @campusboy1987 for discovering and describing the issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41756 (Document arrays of a known type as such) updated</title>
      
        <dc:creator>janak007</dc:creator>

      <pubDate>Sat, 24 Feb 2018 11:21:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41756#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41756#comment:12/1519471310418348</guid>
      <description>&lt;p&gt;
@johnbillion Yes, correct them so I can work more on this ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43401 (Support urldecoded URLs in current menu item detection logic) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sat, 24 Feb 2018 11:13:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43401#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43401#comment:2/1519470829742248</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43401.1.patch attached to Ticket #43401</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sat, 24 Feb 2018 11:08:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43401/43401.1.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43401/43401.1.patch/1519470494635403</guid>
      <description>&lt;p&gt;
Initial patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>43401.tests.patch attached to Ticket #43401</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sat, 24 Feb 2018 11:01:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43401/43401.tests.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43401/43401.tests.patch/1519470113613673</guid>
      <description>&lt;p&gt;
Initial tests
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43399 (Non-admin roles get error 500 when creating new post) closed</title>
      
        <dc:creator>ninke</dc:creator>

      <pubDate>Sat, 24 Feb 2018 10:51:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43399#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43399#comment:2/1519469503103127</guid>
      <description>worksforme: &lt;p&gt;
Thank you for your quick reply. I thought I'd disabled all plugins this week for this exact check, since it's one of the first things you do when something is awry. Apparently this was imaginary.
&lt;/p&gt;
&lt;p&gt;
Disabling sucuri and gtmls.net did the trick. Strangely enough, enabling them again didn't seem to recreate the problem, making it solved.
&lt;/p&gt;
&lt;p&gt;
Thank you so much for your effort on something I really should have double checked. If anyone stumbles on a similar issue, perhaps this helps for them though.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43399#comment:1" title="Comment 1"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi @ninke, welcome to WordPress Trac! Thanks for the report.
&lt;/p&gt;
&lt;p&gt;
Does the issue still happen with all plugins disabled and a default theme (Twenty Seventeen) activated?
&lt;/p&gt;
&lt;p&gt;
This sounds like a problem with a particular environment rather than a bug in WordPress core, I'd suggest trying the
&lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;support forums&lt;/a&gt; for troubleshooting.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43401 (Support urldecoded URLs in current menu item detection logic) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 24 Feb 2018 10:46:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43401#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43401#comment:1/1519469195727774</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43401 (Support urldecoded URLs in current menu item detection logic) created</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sat, 24 Feb 2018 10:39:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43401</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43401/1519468759467522</guid>
      <description>&lt;p&gt;
When adding a urldecoded custom link to a menu it is not being detected as the current one when visiting it.
&lt;/p&gt;
&lt;p&gt;
This doesn't work:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://example.org/привет/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.org/привет/&lt;/a&gt;
/привет/
&lt;/p&gt;
&lt;p&gt;
This works:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://example.org/%D0%BF%D1%80%D0%B8%D0%B2%D0%B5%D1%82/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.org/%D0%BF%D1%80%D0%B8%D0%B2%D0%B5%D1%82/&lt;/a&gt;
/%D0%BF%D1%80%D0%B8%D0%B2%D0%B5%D1%82/
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43399 (Non-admin roles get error 500 when creating new post) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 24 Feb 2018 09:34:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43399#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43399#comment:1/1519464864764312</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @ninke, welcome to WordPress Trac! Thanks for the report.
&lt;/p&gt;
&lt;p&gt;
Does the issue still happen with all plugins disabled and a default theme (Twenty Seventeen) activated?
&lt;/p&gt;
&lt;p&gt;
This sounds like a problem with a particular environment rather than a bug in WordPress core, I'd suggest trying the
&lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;support forums&lt;/a&gt; for troubleshooting.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40416 (Use HTTPS in wp_dashboard_primary()) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 24 Feb 2018 09:29:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40416#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40416#comment:8/1519464557574848</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42731" title="Administration: Use HTTPS for `dashboard_primary_feed` URL.
 ..."&gt;42731&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Administration: Use HTTPS for &lt;code&gt;dashboard_primary_feed&lt;/code&gt; URL.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;dashboard_secondary_feed&lt;/code&gt; is already using HTTPS since &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29787" title="Use HTTPS links for planet.wordpress.org
see #27115"&gt;[29787]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props iandunn.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40416" title="#40416: enhancement: Use HTTPS in wp_dashboard_primary() (closed: fixed)"&gt;#40416&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42731]: Administration: Use HTTPS for `dashboard_primary_feed` URL.  ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 24 Feb 2018 09:29:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42731</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42731/1519464557086993</guid>
      <description>&lt;p&gt;
Administration: Use HTTPS for &lt;code&gt;dashboard_primary_feed&lt;/code&gt; URL.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;dashboard_secondary_feed&lt;/code&gt; is already using HTTPS since &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29787" title="Use HTTPS links for planet.wordpress.org
see #27115"&gt;[29787]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Props iandunn.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40416" title="#40416: enhancement: Use HTTPS in wp_dashboard_primary() (closed: fixed)"&gt;#40416&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43400 (Update "WordPress News" widget references) created</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 24 Feb 2018 09:24:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43400</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43400/1519464298935367</guid>
      <description>&lt;p&gt;
"WordPress News" dashboard widget was renamed to "WordPress Events and News" in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40607" title="Dashboard: Update the existing WordPress News dashboard widget to also ..."&gt;[40607]&lt;/a&gt;, but is still referred to as "WordPress News" in help text and inline documentation.
&lt;/p&gt;
&lt;p&gt;
The help text could also use an update to mention that the widget now includes upcoming events near user's location.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43399 (Non-admin roles get error 500 when creating new post) created</title>
      
        <dc:creator>ninke</dc:creator>

      <pubDate>Sat, 24 Feb 2018 09:19:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43399</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43399/1519463949227132</guid>
      <description>&lt;p&gt;
I didn't notice this issue until my client pointed this out to me when she couldn't create new posts.
&lt;/p&gt;
&lt;p&gt;
I have an admin account and can create posts, but when she creates a new post or goes to /wp-admin/post-new.php she gets a white screen. To be clear: the ditor doesn't show up. this is before even saving anything.
&lt;/p&gt;
&lt;p&gt;
When investigating this I found out that admin accounts do not have this problem, but her account, an editor role, does. I also created a new editor account, to see if it was perhaps something only related to her specific account, but the results were the same, no creation possible. internal server error 500
&lt;/p&gt;
&lt;p&gt;
I fiddled around with post-new.php for a bit and commenting line 70 ($post = get_default_post_to_edit( $post_type, true );) allows her account to see and be able to create a new post again. I put it back as it was, because I'm sure it serves its purpose, but perhaps this tidbit of info will help others to find out what's going on here.
&lt;/p&gt;
&lt;p&gt;
I have used health check and the core files seem to be the same as provided by wordpress.org
&lt;/p&gt;
&lt;p&gt;
I haven't found any similar tickets, but if there are please direct me to them!
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #40416 (Use HTTPS in wp_dashboard_primary()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 24 Feb 2018 09:17:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40416#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40416#comment:7/1519463876850643</guid>
      <description>&lt;p&gt;
The popular plugins feed was removed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40607" title="Dashboard: Update the existing WordPress News dashboard widget to also ..."&gt;[40607]&lt;/a&gt;, so it's just the WordPress News feed now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40416 (Use HTTPS in wp_dashboard_primary()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 24 Feb 2018 09:07:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40416#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40416#comment:6/1519463259525247</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #40416,​43396 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 24 Feb 2018 09:04:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=40416%2C43396</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=40416%2C43396/1519463063704160</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40416" title="#40416: enhancement: Use HTTPS in wp_dashboard_primary() (closed: fixed)"&gt;#40416&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #43250 (Instagram Links in posts are overlapping) updated</title>
      
        <dc:creator>webbasica</dc:creator>

      <pubDate>Sat, 24 Feb 2018 01:53:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43250#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43250#comment:12/1519437197147833</guid>
      <description>&lt;p&gt;
The CSS by @ocean90 and the plugin by @khromov fixed the problem on desktop and mobile views.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>42486.5.diff attached to Ticket #42486</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Sat, 24 Feb 2018 00:52:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42486/42486.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42486/42486.5.diff/1519433575144070</guid>
      <description>&lt;p&gt;
Fixes inline comment message
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43396 (Use HTTPS for dashboard_primary_feed) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Sat, 24 Feb 2018 00:50:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43396#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43396#comment:1/1519433421614184</guid>
      <description>&lt;p&gt;
Related &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40416" title="#40416: enhancement: Use HTTPS in wp_dashboard_primary() (closed: fixed)"&gt;#40416&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>42486.4.diff attached to Ticket #42486</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Sat, 24 Feb 2018 00:50:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42486/42486.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42486/42486.4.diff/1519433417962967</guid>
      <description>&lt;p&gt;
Fixes toolbox action handling in &lt;code&gt;tools.php&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42486 (The Tools screen is blank for users who cannot manage categories or tags) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Sat, 24 Feb 2018 00:49:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42486#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42486#comment:15/1519433360139154</guid>
      <description>&lt;p&gt;
Ow sorry, I forgot to manage toolbox actions (like in previous patch).
Here is a new attempt.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43316.diff attached to Ticket #43316</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sat, 24 Feb 2018 00:47:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43316/43316.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43316/43316.diff/1519433250608046</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sat, 24 Feb 2018 00:46:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:14/1519433181699203</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43316/43316.diff" title="Attachment '43316.diff' in Ticket #43316"&gt;43316.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43316/43316.diff" title="Download"&gt;​&lt;/a&gt; adds helpers for the wp-api client &lt;code&gt;wp.api.model.{type}.autosave()&lt;/code&gt; and &lt;code&gt;wp.api.model.{type}.getAutosave()&lt;/code&gt;. I still need to add a &lt;code&gt;getAutosave&lt;/code&gt; for revision collections which I see the backend supports, and maybe some tests.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>42486.3.diff attached to Ticket #42486</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Sat, 24 Feb 2018 00:42:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42486/42486.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42486/42486.3.diff/1519432951455958</guid>
      <description>&lt;p&gt;
Displays a message when tools.php screen is blank (also merging previous patch)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42486 (The Tools screen is blank for users who cannot manage categories or tags) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Sat, 24 Feb 2018 00:40:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42486#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42486#comment:14/1519432801172461</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hello,
&lt;/p&gt;
&lt;p&gt;
Here is a new patch with a message displayed for users coming from tools.php URL. This is displayed only to avoid blank screen in any case. It applies to editor, author and contributor roles or any custom role without import capabilities.
&lt;/p&gt;
&lt;p&gt;
Cheers,
Jb
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40462 (Add placeholders to wp_login_form()) reopened</title>
      
        <dc:creator>s3w47m88</dc:creator>

      <pubDate>Sat, 24 Feb 2018 00:36:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40462#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40462#comment:35/1519432570367229</guid>
      <description>&lt;p&gt;
@afercia
&lt;/p&gt;
&lt;p&gt;
Allowing WordPress developers to pass an argument that is officially supported by HTML is not encouraging bad practices. However, &lt;strong&gt;not&lt;/strong&gt; accepting this patch &lt;strong&gt;is&lt;/strong&gt; preventing the proper use of HTML Placeholders. It has already encouraged developers to create Plugins that overwrite, filter and circumvent this core function and, even worse, use JavaScript. Both of which &lt;strong&gt;are&lt;/strong&gt; bad practices.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #43398 (Avoid using visual tabs when it's irrelevant: menu screen, about.php ...) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Sat, 24 Feb 2018 00:11:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43398#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43398#comment:2/1519431072543648</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43398 (Avoid using visual tabs when it's irrelevant: menu screen, about.php ...) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Sat, 24 Feb 2018 00:07:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43398#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43398#comment:1/1519430867675172</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43398.diff attached to Ticket #43398</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Sat, 24 Feb 2018 00:07:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43398/43398.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43398/43398.diff/1519430837186036</guid>
      <description>&lt;p&gt;
First idea: keep the current design but use a valid markup (this example is only applied to menu screen)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43398 (Avoid using visual tabs when it's irrelevant: menu screen, about.php ...) created</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Sat, 24 Feb 2018 00:05:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43398</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43398/1519430714452384</guid>
      <description>&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/40678" title="#40678: defect (bug): Editing menus in WP admin for blind people (new)"&gt;#40678&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
In several part of WordPress admin, visual tabs are used for simple links.
The issue appears in:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Menu screen
&lt;/li&gt;&lt;li&gt;About.php screen
&lt;/li&gt;&lt;li&gt;Edit site screen (in multisites)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The issue with "fake tabs" is multiple:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A real tab system is supposed toggle the visibility of content that is already in the page.
&lt;/li&gt;&lt;li&gt;The markup is not relevant (see example bellow)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Example of fake tabs used in Menu screen:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;h2 class="nav-tab-wrapper wp-clearfix"&amp;gt;
	&amp;lt;a href="/wp-admin/nav-menus.php" class="nav-tab nav-tab-active"&amp;gt;Edit Menus&amp;lt;/a&amp;gt;
	&amp;lt;a href="/wp-admin/nav-menus.php?action=locations" class="nav-tab"&amp;gt;Manage Locations&amp;lt;/a&amp;gt;
&amp;lt;/h2&amp;gt;
&lt;/pre&gt;&lt;p&gt;
This ticket is a part of a bigger one: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/40678" title="#40678: defect (bug): Editing menus in WP admin for blind people (new)"&gt;#40678&lt;/a&gt;. During the last accessibility team meeting, we suggested to separate the different tasks of 40678 in separate tickets to make it easier to commit.
&lt;/p&gt;
&lt;p&gt;
Please note this ticket concerns also the design of these "tabs".
We'll need some design feedback because if they’re not tabs, they probably should not look like tabs.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43113 (Multiple custom item classes are returned as single string when using ...) updated</title>
      
        <dc:creator>lrdn</dc:creator>

      <pubDate>Fri, 23 Feb 2018 23:51:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43113#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43113#comment:2/1519429873037989</guid>
      <description>&lt;p&gt;
Weston, thanks for taking a look. Simply add a &lt;code&gt;nav_menu_link_attributes&lt;/code&gt; filter function and log the classes array of the item object. I am using the default logger in my example.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;custom_link_attributes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$wp_attributes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$wp_item&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$wp_args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;error_log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;json_encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$wp_item&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;classes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;JSON_PRETTY_PRINT&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$wp_attributes&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'nav_menu_link_attributes'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'custom_link_attributes'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Now edit an existing menu item using the Customizer and define at least 2 custom CSS classes. The log output will show both classes located within the same array item.
&lt;/p&gt;
&lt;pre class="wiki"&gt;[
    "custom-class-1 custom-class-2",
    "menu-item",
    ...
]
&lt;/pre&gt;&lt;p&gt;
As soon as the changes are published, or whenever the menu items are modified in the appearance settings, the item classes will be located in separate array items as expected.
&lt;/p&gt;
&lt;pre class="wiki"&gt;[
    "custom-class-1",
    "custom-class-2",
    "menu-item",
    ...
]
&lt;/pre&gt;&lt;p&gt;
My patch is the earliest point at which I could locate and correct the malformed data, but I am guessing the cause is actually located where the string is handed over by the JavaScript request.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40678 (Editing menus in WP admin for blind people) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Fri, 23 Feb 2018 23:45:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40678#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40678#comment:20/1519429503573621</guid>
      <description>&lt;p&gt;
As said during last accessibility team meeting, I'm splitting this ticket into smaller tickets to make it easier to fix step by step.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Related:  &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43397" title="#43397: enhancement: Add columns titles to menu screen and a help text about data saving (closed: fixed)"&gt;#43397&lt;/a&gt; – Columns title and hint about data saving
&lt;/li&gt;&lt;li&gt;Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43398" title="#43398: enhancement: Avoid using visual tabs when it's irrelevant: menu screen, about.php ... (new)"&gt;#43398&lt;/a&gt; – Tabs that are not actual tabs
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43397 (Add columns titles to menu screen and a help text about data saving) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Fri, 23 Feb 2018 23:42:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43397#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43397#comment:1/1519429323563018</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43397.diff attached to Ticket #43397</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Fri, 23 Feb 2018 23:40:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43397/43397.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43397/43397.diff/1519429247702483</guid>
      <description>&lt;p&gt;
Adds columns titles to menu screen and a small hint at the top of the screen concerning data saving in this screen ;)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>columns_titles.png attached to Ticket #43397</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Fri, 23 Feb 2018 23:38:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43397/columns_titles.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43397/columns_titles.png/1519429137648892</guid>
      <description>&lt;p&gt;
Columns titles rendering after 43397.diff
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43397 (Add columns titles to menu screen and a help text about data saving) created</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Fri, 23 Feb 2018 23:37:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43397</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43397/1519429078407748</guid>
      <description>&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/40678" title="#40678: defect (bug): Editing menus in WP admin for blind people (new)"&gt;#40678&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The menu screen is a bit complicated to understand at a glance, and it's even more complicated for assistive technologies users. Since there is two main sections in &lt;code&gt;wp-admin/nav-menus.php&lt;/code&gt; I suggest to add titles too clearly identify each section role.
&lt;/p&gt;
&lt;p&gt;
This ticket is a part of a bigger one: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/40678" title="#40678: defect (bug): Editing menus in WP admin for blind people (new)"&gt;#40678&lt;/a&gt;. During the last accessibility team meeting, we suggested to separate the different tasks of 40678 in separate tickets to make it easier to commit.
&lt;/p&gt;
&lt;p&gt;
Concerning this ticket, we used &lt;code&gt;screen-reader-text&lt;/code&gt; on these titles at first, but it appears to be relevant to make it visible for everyone.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43396 (Use HTTPS for dashboard_primary_feed) created</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 23 Feb 2018 22:42:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43396</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43396/1519425734669234</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27115" title="#27115: task (blessed): HTTPS links to wordpress.org (closed: fixed)"&gt;#27115&lt;/a&gt; changed most of wordpress.org links in WordPress core to HTTPS.
&lt;/p&gt;
&lt;p&gt;
For some reason, &lt;code&gt;dashboard_primary_feed&lt;/code&gt; was missed and still links to &lt;code&gt;http://wordpress.org/news/feed/&lt;/code&gt;, while &lt;code&gt;dashboard_secondary_feed&lt;/code&gt; links to &lt;code&gt;https://planet.wordpress.org/feed/&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
The primary feed URL should use HTTPS as well.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43045 (Trigger events equivalent to editor:image-edit and editor:image-update ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 23 Feb 2018 22:37:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43045#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43045#comment:1/1519425420434092</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Discovery should be done to see why these events aren't firing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43064 (wordpress on different port doesn't run customizer) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 23 Feb 2018 22:22:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43064#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43064#comment:2/1519424556242904</guid>
      <description>&lt;p&gt;
Is the &lt;code&gt;home&lt;/code&gt;/&lt;code&gt;site_url&lt;/code&gt; option set to &lt;code&gt;http://wordpress.dev:3000&lt;/code&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43063 (wp customizer is missing core events) closed</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 23 Feb 2018 22:13:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43063#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43063#comment:1/1519423994679459</guid>
      <description>wontfix: &lt;p&gt;
You can listen for controls being added via &lt;code&gt;wp.customize.control.bind( 'add', function( control ) { /* ... */ } )&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
So just check if &lt;code&gt;control.id&lt;/code&gt; begins with &lt;code&gt;widget_&lt;/code&gt; or &lt;code&gt;nav_menu_item&lt;/code&gt; and that will tell you when a menu item or widget is added.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43113 (Multiple custom item classes are returned as single string when using ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 23 Feb 2018 22:09:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43113#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43113#comment:1/1519423759889006</guid>
      <description>&lt;p&gt;
Do you have an example of some code causes the bug to appear?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43197 (Nesting @media rule inside @supports rule fails CSS validation) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 23 Feb 2018 22:04:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43197#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43197#comment:2/1519423499297747</guid>
      <description>&lt;p&gt;
Or rather, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43105" title="#43105: defect (bug): CSS editor in customizer doesn't support everything (closed: worksforme)"&gt;#43105&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43105 (CSS editor in customizer doesn't support everything) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 23 Feb 2018 22:03:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43105#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43105#comment:4/1519423433127894</guid>
      <description>&lt;p&gt;
Yes, as CSSLint adds support for more features, and CSSLint is updated in core, then the new CSS features will be supported.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43139 (Gallery widget preview incorrectly updated after one image gets deleted) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 23 Feb 2018 21:54:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43139#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43139#comment:3/1519422895006482</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43139 (Gallery widget preview incorrectly updated after one image gets deleted) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 23 Feb 2018 21:54:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43139#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43139#comment:2/1519422884061397</guid>
      <description>&lt;p&gt;
It would be better to use &lt;code&gt;_.filter&lt;/code&gt;. See &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43139/43139.2.diff" title="Attachment '43139.2.diff' in Ticket #43139"&gt;43139.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43139/43139.2.diff" title="Download"&gt;​&lt;/a&gt; for an untested patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43139.2.diff attached to Ticket #43139</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 23 Feb 2018 21:54:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43139/43139.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43139/43139.2.diff/1519422861050288</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42409 (Add LIKE support to meta_key comparisons in WP_Meta_Query) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 23 Feb 2018 21:38:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42409#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42409#comment:12/1519421887168367</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/42409/42409.3.diff" title="Attachment '42409.3.diff' in Ticket #42409"&gt;42409.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/42409/42409.3.diff" title="Download"&gt;​&lt;/a&gt; cleans up documentation and adds unit tests that demonstrate &lt;code&gt;compare_key&lt;/code&gt; and &lt;code&gt;meta_compare_key&lt;/code&gt; behavior. Unfortunately, the test in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/42409/42409.test.diff" title="Attachment '42409.test.diff' in Ticket #42409"&gt;42409.test.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/42409/42409.test.diff" title="Download"&gt;​&lt;/a&gt; doesn't work after recent changes to the way that SQL queries are generate by &lt;code&gt;$wpdb&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I agree with the comments above that we ought to keep the behavior consistent with &lt;code&gt;LIKE&lt;/code&gt; for values. It's unfortunately that it's poorly named, but it'd be worse to have it inconsistent between keys and values.
&lt;/p&gt;
&lt;p&gt;
I agree with @kokers that &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/42409#comment:4" title="Comment 4"&gt;we should add support for other compare operators&lt;/a&gt; if we're going to introduce &lt;code&gt;compare_key&lt;/code&gt;. Again, this is for consistency with &lt;code&gt;compare&lt;/code&gt; (also, why not?). An updated version of &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/42409/42409.3.diff" title="Attachment '42409.3.diff' in Ticket #42409"&gt;42409.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/42409/42409.3.diff" title="Download"&gt;​&lt;/a&gt; with less hardcoded logic regarding  &lt;code&gt;LIKE&lt;/code&gt; / &lt;code&gt;=&lt;/code&gt; would be welcome. If not, we can handle this additional enhancement as part of a separate ticket.
&lt;/p&gt;
&lt;p&gt;
More general wildcard support - ie, proper "LIKE" behavior with &lt;code&gt;%&lt;/code&gt; - will probably have to be produced with a new operator name. Unfortunately it can't be "LIKE". "RAW_LIKE" is clunky but I'm having a hard time coming up with a better option. (The confusing thing here is that the upper-case convention implies that it corresponds to an actual MySQL operator, which &lt;code&gt;RAW_LIKE&lt;/code&gt; does not.) Perhaps it'd be more semantically correct to add a parameter, something like:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;'meta_query' =&amp;gt; array(
    array(
        'key' =&amp;gt; 'foo\_%\_bar',
        'compare_key' =&amp;gt; 'LIKE',
        'escape_wildcards_key' =&amp;gt; false,
    ),
    // For values
    array(
        'key' =&amp;gt; 'foo',
        'value' =&amp;gt; 'foo%bar',
        'compare' =&amp;gt; 'LIKE',
        'escape_wildcards' =&amp;gt; false,
    ),
),
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
&lt;code&gt;escape_wildcards&lt;/code&gt; and &lt;code&gt;escape_wildcards_key&lt;/code&gt; would default to &lt;code&gt;true&lt;/code&gt;, for compatibility.
&lt;/p&gt;
&lt;p&gt;
I am loath to introduce another parameter, but this feels more accurate to me than something like &lt;code&gt;RAW_LIKE&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Two questions:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;What do others think of this suggested syntax?
&lt;/li&gt;&lt;li&gt;Is there any reason to hold off on the improvement in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/42409/42409.3.diff" title="Attachment '42409.3.diff' in Ticket #42409"&gt;42409.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/42409/42409.3.diff" title="Download"&gt;​&lt;/a&gt; before making a decision about wildcard support?
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
2 is especially important because it's likely that "true" &lt;code&gt;LIKE&lt;/code&gt; support is going to be very difficult (if even possible) to implement from a security point of view, so I don't want it to hold up the much more straightforward improvement being suggested in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/42409/42409.3.diff" title="Attachment '42409.3.diff' in Ticket #42409"&gt;42409.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/42409/42409.3.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43197 (Nesting @media rule inside @supports rule fails CSS validation) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 23 Feb 2018 21:33:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43197#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43197#comment:1/1519421617115201</guid>
      <description>&lt;p&gt;
See also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42528" title="#42528: defect (bug): Customizer CSS can’t save CSS grid (closed: fixed)"&gt;#42528&lt;/a&gt;. It's probably a bug with CSSLint.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>42409.3.diff attached to Ticket #42409</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 23 Feb 2018 21:22:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42409/42409.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42409/42409.3.diff/1519420959579054</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43395 (Add Automated E2E Tests for Core Updates) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 23 Feb 2018 20:11:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43395#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43395#comment:1/1519416669360518</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
My idea for the route to solving this is slightly complicated, but I think does the best job of ensuring that automatic updates work.
&lt;/p&gt;
&lt;p&gt;
1) Create a docker container for running the tests. We may be able to use some prior art from Gutenberg.  This should include file permissions where auto updates will work. We should install the latest stable version of wordpress (though it may make sense in the future to also do this on a branch by branch basis)
2) Include and activate the beta tester plugin. Configure it for minor version nightly updates.
3) Trigger an autoupdate via a hit to wp-cron.
4) Confirm that the site doesn’t fatal and the site is updated. Maybe also confirm that the error log is empty.
&lt;/p&gt;
&lt;p&gt;
cc/ @dd32 and @pento to see if they agree.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43395 (Add Automated E2E Tests for Core Updates) created</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Fri, 23 Feb 2018 20:10:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43395</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43395/1519416648156921</guid>
      <description>&lt;p&gt;
This is a follow up to the issues introduced in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43103" title="#43103: defect (bug): Reduce Plugin/theme API calls during core release windows (closed: fixed)"&gt;#43103&lt;/a&gt; and described in &lt;a class="ext-link" href="https://make.wordpress.org/core/2018/02/06/wordpress-4-9-4-release-the-technical-details/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2018/02/06/wordpress-4-9-4-release-the-technical-details/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Essentially, due to the way automated updates work, we need automated tests that can confirm they are working. Due to the code loading path differences between phpunit, wp-cli, wp-cron, and the WordPress UI, it's important that this test work as close as possible to the way the majority of sites are autoupdated.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43394 (wpautop inserts extraneous line breaks if hard return around commented ...) created</title>
      
        <dc:creator>davidshq</dc:creator>

      <pubDate>Fri, 23 Feb 2018 20:02:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43394</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43394/1519416139137164</guid>
      <description>&lt;p&gt;
Problem: If one has code comments before content in a WordPress post/page and there are hard returns before and after the code comment, WordPress will insert an extraneous line break. Further, if there are hard returns between multiple comments an extraneous line break will be added.
&lt;/p&gt;
&lt;p&gt;
This problem can be reproduced by doing the following:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Edit a WordPress post or page.
&lt;/li&gt;&lt;li&gt;Add a code comment with hard returns before and after it such as:
&lt;/li&gt;&lt;/ol&gt;&lt;pre class="wiki"&gt;
&amp;lt;!-- My Code Comment--&amp;gt;
&lt;/pre&gt;&lt;ol start="3"&gt;&lt;li&gt;Publish/preview the page.
&lt;/li&gt;&lt;li&gt;Use Inspect to examine the area where you placed the above comment and you'll notice an extra line break.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
This may seem like a very edge case and a minor annoyance, but we ran into this issue recently when we had multiple code comments following each other like so:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;p&amp;gt;Some regular content here.&amp;lt;/p&amp;gt;
&amp;lt;!-- This is Important --&amp;gt;
&amp;lt;!-- Don't Forget This --&amp;gt;
&amp;lt;!-- Why are you Forgetting? --&amp;gt;
&amp;lt;!-- Adding individual comments for each line is --&amp;gt;
&amp;lt;!-- fun! --&amp;gt;
&amp;lt;p&amp;gt;Some regular content here.&amp;lt;/p&amp;gt;
&lt;/pre&gt;&lt;p&gt;
An extraneous line break now becomes four line breaks.
&lt;/p&gt;
&lt;p&gt;
This becomes quite confusing for editors as when they look at the post the extra returns are not apparent yet inserted when the page is actually posted.
&lt;/p&gt;
&lt;p&gt;
I'm thinking that resolving this issue might also resolve many other cases of wpautop gone rogue.
&lt;/p&gt;
&lt;p&gt;
My suggestion would be that wpautop be changed so that:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;If there is a code comment with a hard return before and after the comment, it does not automatically add wpautop. (one can argue that this is behaving as expected, but I doubt many are thinking when they add a code comment that it will add a nice line break for them...and in any case, this can be much more obviously/easily remedied by inserting a &amp;lt;br&amp;gt; in the editor if one truly did want a line break caused in this manner, whereas it can be quite time consuming to discover why extra line breaks are mysteriously appearing)
&lt;/li&gt;&lt;li&gt;Similarly, with shortcodes, if the shortcode is tested valid then don't add line breaks with wpautop around the shortcode.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43386 (render-partials-init similar to render-partials-response in customiser ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 23 Feb 2018 17:53:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43386#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43386#comment:3/1519408384767033</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43386 (render-partials-init similar to render-partials-response in customiser ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 23 Feb 2018 17:52:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43386#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43386#comment:2/1519408370684596</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Yes, I think in general it is better to extend the &lt;code&gt;Partial&lt;/code&gt; class to override the &lt;code&gt;preparePlacement&lt;/code&gt; method in JS to achieve this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33979 (Add filter for 'post_gallery_item') updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 23 Feb 2018 16:04:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33979#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33979#comment:8/1519401883478478</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33979#comment:6" title="Comment 6"&gt;tristangemus&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Similar? &lt;a href="https://core.trac.wordpress.org/attachment/ticket/38228/patch_38228.3.diff"&gt;https://core.trac.wordpress.org/attachment/ticket/38228/patch_38228.3.diff&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is similar but a different context. That ticket aims to filter the entire generated output of the shortcode whereas this one is being used for just a single image within the gallery. Love both of these tickets, but we should definitely keep them separate :)
&lt;/p&gt;
&lt;p&gt;
I would also like to see the ability to modify more than just classes using a filter. Adding data attributes to the tag, or changing the image size for the current image would be great. That could allow more creative gallery layouts, such as the tiled gallery in Jetpack. &lt;a class="ext-link" href="https://jetpackme.files.wordpress.com/2013/11/example-gallery-tiled.jpg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://jetpackme.files.wordpress.com/2013/11/example-gallery-tiled.jpg&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43393 (get_user_by can return wrong user info) updated</title>
      
        <dc:creator>hberberoglu</dc:creator>

      <pubDate>Fri, 23 Feb 2018 15:26:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43393#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43393#comment:2/1519399602155551</guid>
      <description>&lt;p&gt;
@ocean90 thanks for fast response. I agree with you and to solve this I'll do a code change on drop-in side. I do not know how WordPress's approach is in such cases.
&lt;/p&gt;
&lt;p&gt;
If you say; the drop-in should solve this, then okay, you can close this ticket.
&lt;/p&gt;
&lt;p&gt;
If you say; we can make changes on our code so that our users do not experience this problem, then keep this ticket open.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43393 (get_user_by can return wrong user info) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 23 Feb 2018 14:49:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43393#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43393#comment:1/1519397394859121</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is actually a bug in the drop-in caused by this line:
&lt;code&gt;return preg_replace('/\s+/', '', WP_CACHE_KEY_SALT . "$prefix$group:$key"); &lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Using a placeholder in cache keys rather than simply stripping out spaces would solve this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11302 (Bulk editing posts should pre-fill fields with the same value / allow ...) updated</title>
      
        <dc:creator>pannelars</dc:creator>

      <pubDate>Fri, 23 Feb 2018 14:48:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11302#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11302#comment:43/1519397286820938</guid>
      <description>&lt;p&gt;
Still no plan for a release?? Miss this function
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43393 (get_user_by can return wrong user info) created</title>
      
        <dc:creator>hberberoglu</dc:creator>

      <pubDate>Fri, 23 Feb 2018 14:38:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43393</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43393/1519396693655972</guid>
      <description>&lt;p&gt;
I am using memcached object cache dropin (I use &lt;a class="ext-link" href="https://tr.wordpress.org/plugins/memcached/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://tr.wordpress.org/plugins/memcached/&lt;/a&gt;) and there is two user record on wp_users table; one user's user_login is 'AlbertEinstein' other one's is 'Albert Einstein'. So there is two different user.
&lt;/p&gt;
&lt;p&gt;
But these codes below are returning always same user's info; AlbertEinstein's info.
&lt;/p&gt;
&lt;pre class="wiki"&gt;$user_data = get_user_by('login', 'Albert Einstein');
&lt;/pre&gt;&lt;pre class="wiki"&gt;$user_data = get_user_by('login', 'AlbertEinstein');
&lt;/pre&gt;&lt;p&gt;
It happens because of memcached protocol;
&lt;/p&gt;
&lt;p&gt;
For installs that use the memcache/memcached object-cache drop-in (and possibly others), the resulting wp_cache_get always returns false since a memcached key "... must not include control characters or whitespace." (per &lt;a class="ext-link" href="https://github.com/memcached/memcached/blob/master/doc/protocol.txt"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/memcached/memcached/blob/master/doc/protocol.txt&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
(this copied from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39034" title="#39034: defect (bug): WP_Site_Query-&amp;gt;get_sites() constructs an invalid key... (closed: worksforme)"&gt;#39034&lt;/a&gt;)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43392 (Support 'object' and 'array' types in register_meta()) updated</title>
      
        <dc:creator>diegoliv</dc:creator>

      <pubDate>Fri, 23 Feb 2018 14:37:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43392#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43392#comment:1/1519396662224343</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43392 (Support 'object' and 'array' types in register_meta()) created</title>
      
        <dc:creator>diegoliv</dc:creator>

      <pubDate>Fri, 23 Feb 2018 14:36:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43392</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43392/1519396596654697</guid>
      <description>&lt;p&gt;
Currently, &lt;code&gt;register_meta()&lt;/code&gt; is used to expose meta data by setting &lt;code&gt;show_in_rest =&amp;gt; true&lt;/code&gt;. If you want to work with custom metadata on Gutenberg (by setting an attribute with &lt;code&gt;source: 'meta'&lt;/code&gt;), you need to use &lt;code&gt;register_meta()&lt;/code&gt;. Now, this function also has the parameter &lt;code&gt;type&lt;/code&gt;, where you set the metadata object type. Currently, allowed types are simple things like &lt;code&gt;integer&lt;/code&gt; or &lt;code&gt;string&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
While I was working with Gutenberg, I felt the need to create nested attributes (that would translate into JSON objects). Here is an example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;attributes: {
    navigationStyles: {
        type: 'object',
	default: {
	    fontSize: {
                type: 'number',
                default: 10,
            },
	    fontColor: {
                type: 'string',
                default: '#ccc',
            },
	},
        source: 'meta',
        meta: 'navigation_styles',
    },
},
&lt;/pre&gt;&lt;p&gt;
Now, when Gutenberg tries to save this attribute on the database, the attribute will be a JSON object, which will translate into an associative array to be handled in PHP. But, currently, there's no support for registering a metadata with &lt;code&gt;register_meta()&lt;/code&gt; that will be an associative array:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;blocks_meta_init&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="nx"&gt;register_meta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'post'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'navigation_styles'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="s1"&gt;'show_in_rest'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;'type'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'array'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// not possible at the moment
&lt;/span&gt;        &lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'init'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'blocks_blocks_meta_init'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
If you try to do that, the REST API will fail to save the metadata. My current workaround for this use case is to just register the meta as a &lt;code&gt;string&lt;/code&gt;, and handle the formatting of the metadata using &lt;code&gt;sanitize_callback&lt;/code&gt;:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;blocks_meta_init&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="nx"&gt;register_meta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'post'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'navigation_styles'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="s1"&gt;'show_in_rest'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;'type'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'string'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;'sanitize_callback'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'blocks_sanitize_attr'&lt;/span&gt;
        &lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'init'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'blocks_blocks_meta_init'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;blocks_sanitize_attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$meta_value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$meta_key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$meta_type&lt;/span&gt; &lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;serialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;json_decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$meta_value&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
This works, but has several limitations:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;You need to turn your javascript object into a string (&lt;code&gt;JSON.stringify&lt;/code&gt;)if you want to store it on the database.
&lt;/li&gt;&lt;li&gt;You need to handle sanitization yourself
&lt;/li&gt;&lt;li&gt;If you get the metadata using &lt;code&gt;get_post_meta()&lt;/code&gt;, it won't apply &lt;code&gt;maybe_unserialize()&lt;/code&gt; before returning the metadata, you need to do it yourself.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I propose that we support the &lt;code&gt;'type' =&amp;gt; 'array'&lt;/code&gt; with &lt;code&gt;register_meta()&lt;/code&gt;. This way, we'll have a proper way to store arrays or JSON objects as associative arrays. This would make the REST API more flexible, and project Gutenberg would also benefit by making attributes more flexible than they currently are.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43390 (get_super_admins() should not return "admin" by default) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 23 Feb 2018 14:30:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43390#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43390#comment:2/1519396221814448</guid>
      <description>&lt;p&gt;
Related: &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/16293" title="#16293: defect (bug): In multisite installs, users with id 1 can't be deleted (reopened)"&gt;#16293&lt;/a&gt;, &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/39174" title="#39174: feature request: Introduce network roles (new)"&gt;#39174&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43391 (WP_User_Query bug) updated</title>
      
        <dc:creator>zkingdesign</dc:creator>

      <pubDate>Fri, 23 Feb 2018 14:06:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43391#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43391#comment:4/1519394791413184</guid>
      <description>&lt;p&gt;
This is the query I get, when I dump the $query variable
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://gist.github.com/zkingdesign/2cd5588cee6539427539f8baf34c8f38"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gist.github.com/zkingdesign/2cd5588cee6539427539f8baf34c8f38&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Query:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
        &lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="s1"&gt;'fields'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'ID'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'user_login'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'display_name'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s1"&gt;'role'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'expert'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;'number'&lt;/span&gt;         &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$numPosts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'offset'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$page&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt;  &lt;span class="nv"&gt;$numPosts&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'order'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'DESC'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'orderby'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'post_count'&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WP_User_Query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nb"&gt;var_dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$query&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43391 (WP_User_Query bug) updated</title>
      
        <dc:creator>chetan200891</dc:creator>

      <pubDate>Fri, 23 Feb 2018 14:01:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43391#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43391#comment:3/1519394481670770</guid>
      <description>&lt;p&gt;
I have tested with below query. It works fine for me. I am getting correct results.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s1"&gt;'fields'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'ID'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'user_login'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'display_name'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s1"&gt;'role'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'administrator'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'number'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'10'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'order'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'ASC'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'orderby'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'post_count'&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Ref. &lt;a class="ext-link" href="https://codex.wordpress.org/Class_Reference/WP_User_Query"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Class_Reference/WP_User_Query&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43391 (WP_User_Query bug) updated</title>
      
        <dc:creator>zkingdesign</dc:creator>

      <pubDate>Fri, 23 Feb 2018 13:46:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43391#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43391#comment:2/1519393575377765</guid>
      <description>&lt;p&gt;
@chetan200891
&lt;/p&gt;
&lt;p&gt;
Yes, the 'expert' role is registered, and it's working OK, it only list users who have that role, but 'orderby' =&amp;gt; 'post_count' ain't working.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43391 (WP_User_Query bug) updated</title>
      
        <dc:creator>chetan200891</dc:creator>

      <pubDate>Fri, 23 Feb 2018 13:44:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43391#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43391#comment:1/1519393459887823</guid>
      <description>&lt;p&gt;
@zkingdesign
&lt;/p&gt;
&lt;p&gt;
Welcome to trac! Have you added new 'expert' role?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43381 (Remove 'category' parameter from category_description function.) updated</title>
      
        <dc:creator>chetan200891</dc:creator>

      <pubDate>Fri, 23 Feb 2018 13:41:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43381#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43381#comment:1/1519393318293433</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 23 Feb 2018 10:29:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:13/1519381744301999</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
wondering if in the schema somewhere we have or can add a 'supports autosave' flag so clients know a post type supports autosaves
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Was looking at that too. But it would mean we will have to add 'autosave' to &lt;code&gt;post_type_supports()&lt;/code&gt; too, right? There is post_type_supports 'revision' already, the thing is that even if CPTs don't support revisions, we still seem to do autosaves for them. Also autosaves (with or without creating a revision) is somewhat basic functionality, not sure if we need special flag to enable it.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
thinking we could add a helper to the wp.api client
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, think that would be great. Both for auto saving and retrieving autosaves.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 23 Feb 2018 10:02:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:12/1519380136426715</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by azaozz. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1519380134000315"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43391 (WP_User_Query bug) created</title>
      
        <dc:creator>zkingdesign</dc:creator>

      <pubDate>Fri, 23 Feb 2018 09:47:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43391</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43391/1519379267689563</guid>
      <description>&lt;p&gt;
I've got an issue when doing a query with WP_User_Query and trying to list from a specific role AND using 'orderby' =&amp;gt; 'post_count'. The query simply fails to list the correct results.
&lt;/p&gt;
&lt;p&gt;
Here are the query arguments:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s1"&gt;'fields'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'ID'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'user_login'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'display_name'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s1"&gt;'role'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'expert'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'number'&lt;/span&gt;         &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$numPosts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'offset'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$page&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt;  &lt;span class="nv"&gt;$numPosts&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'order'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'DESC'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'orderby'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'post_count'&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
If I remove the 'role' argument from the query it works, but with the 'role' included it doesn't.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #34699 (New function: `get_query_arg()`) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 23 Feb 2018 09:29:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34699#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34699#comment:10/1519378144040466</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43385 (Removed meetup still appears in dashboard widget.) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 23 Feb 2018 05:39:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43385#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43385#comment:1/1519364399861409</guid>
      <description>invalid: &lt;p&gt;
Hey @chetan200891
&lt;/p&gt;
&lt;p&gt;
Thanks for reporting this, but we're tracking this over in &lt;a class="ext-link" href="https://meta.trac.wordpress.org/ticket/2720"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://meta.trac.wordpress.org/ticket/2720&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
(I'd close as duplicate, but in order to do so it needs to be a ticket on this trac instance..)
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43251 (editable_roles filter doesn't exclude role on multisite) updated</title>
      
        <dc:creator>thomaswm</dc:creator>

      <pubDate>Fri, 23 Feb 2018 02:10:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43251#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43251#comment:1/1519351810779555</guid>
      <description>&lt;p&gt;
I think that &lt;a href="https://core.trac.wordpress.org/browser/tags/4.9.4/src/wp-admin/user-new.php#L159"&gt;line 159&lt;/a&gt; in &lt;code&gt;wp-admin/user-new.php&lt;/code&gt; is the culprit here. It passes &lt;code&gt;$_REQUEST['role']&lt;/code&gt; to &lt;code&gt;wpmu_signup_user()&lt;/code&gt; without checking if the role is editable.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;wpmu_signup_user( $new_user_login, $new_user_email, array( 'add_to_blog' =&amp;gt; get_current_blog_id(), 'new_role' =&amp;gt; $_REQUEST['role'] ) );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43390 (get_super_admins() should not return "admin" by default) updated</title>
      
        <dc:creator>thomaswm</dc:creator>

      <pubDate>Fri, 23 Feb 2018 01:42:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43390#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43390#comment:1/1519350137768361</guid>
      <description>&lt;p&gt;
Just realized that &lt;code&gt;grant_super_admin()&lt;/code&gt; and &lt;code&gt;revoke_super_admin()&lt;/code&gt; are also affected.
&lt;/p&gt;
&lt;p&gt;
Lines &lt;a href="https://core.trac.wordpress.org/browser/tags/4.9/src/wp-includes/capabilities.php#L820"&gt;820&lt;/a&gt; and &lt;a href="https://core.trac.wordpress.org/browser/tags/4.9/src/wp-includes/capabilities.php#L867"&gt;867&lt;/a&gt; in &lt;code&gt;wp-includes/capabilities.php&lt;/code&gt; both read:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$super_admins = get_site_option( 'site_admins', array( 'admin' ) );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43390 (get_super_admins() should not return "admin" by default) created</title>
      
        <dc:creator>thomaswm</dc:creator>

      <pubDate>Fri, 23 Feb 2018 01:29:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43390</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43390/1519349384212974</guid>
      <description>&lt;p&gt;
The function &lt;code&gt;get_super_admins()&lt;/code&gt;, introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/14206" title="Introduce get_super_admins().  Allow hard-coding a global super_admins ..."&gt;[14206]&lt;/a&gt;, returns an array of users with network admin capabilities. Those are stored in the &lt;code&gt;site_admins&lt;/code&gt; network option.
&lt;/p&gt;
&lt;p&gt;
If, for any reason, that network option does not exist, &lt;code&gt;get_super_admins()&lt;/code&gt; will return a one-element array containing &lt;em&gt;"admin"&lt;/em&gt; instead.
&lt;/p&gt;
&lt;p&gt;
See &lt;a href="https://core.trac.wordpress.org/browser/tags/4.9/src/wp-includes/capabilities.php#L761"&gt;line 761&lt;/a&gt; in &lt;code&gt;wp-includes/capabilities.php&lt;/code&gt;.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;return get_site_option( 'site_admins', array('admin') );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
This goes back to a time when &lt;code&gt;admin&lt;/code&gt; was the default username for the first WordPress user. Since administrators are now discouraged from using &lt;em&gt;admin&lt;/em&gt; as a username, &lt;code&gt;get_super_admins()&lt;/code&gt; should return an empty array by default:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;return get_site_option( 'site_admins', array() );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 23 Feb 2018 01:10:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:11/1519348204004988</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
alternative is to set post_type: 'autosave' and then to "convert" it to the proper post_type = 'revision' as soon as the request is received
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Interesting idea - this at least works within an existing field.
&lt;/p&gt;
&lt;p&gt;
wondering if in the schema somewhere we have or can add a 'supports autosave' flag so clients know a post type supports autosaves (might be there already?).... also thinking we could add a helper to the wp.api client so you could do &lt;code&gt;post.autosave();&lt;/code&gt; and handle the status change internally.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>