<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #37887 (Make attachments atomic until a Customizer session is published) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 30 Aug 2016 23:42:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37887#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37887#comment:1/1472600548778026</guid>
      <description>&lt;i&gt;Description&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is indeed an issue ever since the Media Library modal was introduced in the customizer. The Media Library JS is not Customizer-aware. Beyond uploading new attachments, there is also the issue whereby if you edit an attachment's fields (e.g. title or caption) then these changes get saved immediately as soon as you blur the field. All of these changes need to be added to the Customizer state to then be persisted if the user hits Save &amp;amp; Publish.
&lt;/p&gt;
&lt;p&gt;
As for deleting attachments that are never published, what could done is to upload them with an &lt;code&gt;auto-draft&lt;/code&gt; status (as opposed to &lt;code&gt;inherit&lt;/code&gt;) and then only transition them to &lt;code&gt;auto-draft&lt;/code&gt; once the customizer changes are saved. This would be taking the same approach as &lt;a class="ext-link" href="https://github.com/xwp/wp-customize-posts"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Customize Posts&lt;/a&gt; and the newly-committed &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34923" title="#34923: enhancement: Allow users to more seamlessly create page-based nav menus during ... (closed: fixed)"&gt;#34923&lt;/a&gt; which uses &lt;code&gt;auto-draft&lt;/code&gt; posts as placeholders. Posts with &lt;code&gt;auto-draft&lt;/code&gt; status are automatically garbage-collected after 7 days, though I'm not sure if an &lt;code&gt;attachment&lt;/code&gt; post with an &lt;code&gt;auto-draft&lt;/code&gt; status will get its associated uploaded file also deleted.
&lt;/p&gt;
&lt;p&gt;
Custom fields in the media modal seem to be the most challenging to me. Plugins will have to take care to support the customizer usage. In particular, custom fields added to the media modal normally get saved by plugins via the &lt;code&gt;attachment_fields_to_save&lt;/code&gt; action. Plugins would need to not do that in a customizer context, but instead add it to the customizer state and defer the save until the customizer state is published.
&lt;/p&gt;
&lt;p&gt;
Queries for attachments in the media library would also need to include all existing &lt;code&gt;attachment&lt;/code&gt; posts that have &lt;code&gt;inherit&lt;/code&gt; status &lt;em&gt;OR&lt;/em&gt; which are &lt;code&gt;auto-draft&lt;/code&gt; and which have an &lt;code&gt;ID&lt;/code&gt; that was created in the current customizer session. So that &lt;code&gt;attachment&lt;/code&gt; SQL query would need to be updated to account for that.
&lt;/p&gt;
&lt;p&gt;
All in all, I think it's doable, but it will take some serious R&amp;amp;D.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37864 (No shiny update when updating a plugin in a non-English site) closed</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Tue, 30 Aug 2016 23:24:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37864#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37864#comment:11/1472599492711090</guid>
      <description>worksforme</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #28664 (wp_load_alloptions() fails to set object cache when persistent ...) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Tue, 30 Aug 2016 22:43:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28664#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28664#comment:6/1472596982220839</guid>
      <description>&lt;p&gt;
I ran into this again, with a different object cache implementation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37138 (Audit usage of the buttons CSS classes) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 30 Aug 2016 22:00:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37138#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37138#comment:6/1472594409903054</guid>
      <description>&lt;p&gt;
@karmatosed yep, the outline property should be reset for all the buttons. I think that's the intended behaviour, it doesn't work well in some cases just because the classes are used incorrectly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37699-version.2.diff attached to Ticket #37699</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Tue, 30 Aug 2016 21:57:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37699/37699-version.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37699/37699-version.2.diff/1472594247170303</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37138 (Audit usage of the buttons CSS classes) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Tue, 30 Aug 2016 21:47:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37138#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37138#comment:5/1472593643038869</guid>
      <description>&lt;p&gt;
@afercia so is the outline not going to appear?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22058 (Improve custom background properties UI) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Tue, 30 Aug 2016 21:34:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22058#comment:53</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22058#comment:53/1472592865283791</guid>
      <description>&lt;p&gt;
I don't agree we should rush in without user testing. Sometimes tickets take a while and perhaps what seems clearer to use isn't. For what it's worth, I don't see the 9 as the better solution, as I've said. I am however keen we get user feedback on this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37699-version.diff attached to Ticket #37699</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Tue, 30 Aug 2016 21:30:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37699/37699-version.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37699/37699-version.diff/1472592649412644</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22058 (Improve custom background properties UI) updated</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Tue, 30 Aug 2016 21:30:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22058#comment:52</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22058#comment:52/1472592615688825</guid>
      <description>&lt;p&gt;
@karmatosed Thanks for sharing your concerns. The simple array of nine is so much clearer than anything else on the table, perhaps we should move ahead with the improvement so this ticket doesn't languish in another four years of Trac limbo (really it's been four years).For me the button by default showing in the middle suggests position. Tic tac toe has been around longer than radio buttons.
&lt;/p&gt;
&lt;p&gt;
That said, for differentiation, the round radio buttons could be turned square or the existing round ones could be put in a square box to suggest a page. Anything more and we risk building an ugly interface. Thoughts on square buttons or a square around the nine buttons?
&lt;/p&gt;
&lt;p&gt;
I'd love to help finish this up but that means decisions on all sides.
&lt;/p&gt;
&lt;p&gt;
My post above posed &lt;strong&gt;some questions about performance&lt;/strong&gt; which really worry me. Does anybody have any thoughts on offering users performance warnings here?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34084 (Automatically log user in after installation) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Tue, 30 Aug 2016 21:29:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34084#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34084#comment:6/1472592569531891</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think it makes sense and avoids friction. I'd +1 and say you have ux-feedback here so will add that as keyword.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37890.patch attached to Ticket #37890</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Tue, 30 Aug 2016 21:27:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37890/37890.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37890/37890.patch/1472592447659755</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37890 (`WP_Customize_Manager::prepare_setting_validity_for_js()` assumes ...) created</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Tue, 30 Aug 2016 21:27:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37890</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37890/1472592420374487</guid>
      <description>&lt;p&gt;
Previously discussed in Slack: &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472276384000282"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/core-customize/p1472276384000282&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
@westonruter proposed two patches in that discussion to address the issue, both of which work fine in my testing. I can't yet come up with an overwhelming reason to choose one approach over the other.
&lt;/p&gt;
&lt;p&gt;
Still, the attached patch goes with the first option, which seems more faithful to the original &lt;code&gt;$data&lt;/code&gt; added to the &lt;code&gt;WP_Error&lt;/code&gt;. It also seems to avoid an inconsistency where &lt;code&gt;WP_Error&lt;/code&gt; data that &lt;em&gt;is&lt;/em&gt; an array is placed alongside &lt;code&gt;from_server =&amp;gt; true&lt;/code&gt; but non-array data isn't, although that behavior might be desirable in a scenario I missed.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37805 (Enhancement: TinyMCE - Add ability to detect www links) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 30 Aug 2016 21:25:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37805#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37805#comment:3/1472592331533210</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37335 (Standardized API for themes to add info/links to the customizer) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Tue, 30 Aug 2016 21:25:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37335#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37335#comment:9/1472592315419283</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I feel just having an action makes more sense than a fuller solution. Thanks for explaining. Because it's not UI related as a result, I will remove those tags in triage.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37880 (External Plugins On TeenyMCE) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 30 Aug 2016 21:24:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37880#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37880#comment:1/1472592278332870</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
As far as I understand, this is more related to the TinyMCE minimal configuration option ("teeny") rather than to accessibility.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28084 (Post and page permalink's text getting cut in Firefox.) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Tue, 30 Aug 2016 21:23:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28084#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28084#comment:9/1472592194746477</guid>
      <description>&lt;p&gt;
This does seem related to Windows. I can replicate using the latest version of Firefox and windows.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/U-CxpfJani.png"&gt;&lt;img width="50%" alt="https://cldup.com/U-CxpfJani.png" title="https://cldup.com/U-CxpfJani.png" crossorigin="anonymous" src="https://cldup.com/U-CxpfJani.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34789 (Timezone Option Terminology Improvement) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 30 Aug 2016 20:59:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34789#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34789#comment:11/1472590769080816</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Refreshed patch adding &lt;code&gt;either&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/tVrR3RLjN4.png"&gt;&lt;img src="https://cldup.com/tVrR3RLjN4.png" alt="https://cldup.com/tVrR3RLjN4.png" crossorigin="anonymous" title="https://cldup.com/tVrR3RLjN4.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>34789.2.diff attached to Ticket #34789</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 30 Aug 2016 20:58:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34789/34789.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34789/34789.2.diff/1472590684161730</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>34722.diff attached to Ticket #34722</title>
      
        <dc:creator>MattyRob</dc:creator>

      <pubDate>Tue, 30 Aug 2016 20:51:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34722/34722.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34722/34722.diff/1472590302292247</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #34722 (Open P Tag in shortcode related to h tag) updated</title>
      
        <dc:creator>MattyRob</dc:creator>

      <pubDate>Tue, 30 Aug 2016 20:50:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34722#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34722#comment:21/1472590256714559</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've had a look through wpautop and the issue is in the handling of HTML within Shortcodes. I though a good way to fix is to wrap shortcode open and close tags in line breaks to allow paragraphing and then strip it back out again after.
&lt;/p&gt;
&lt;p&gt;
Seem sot work in my testing but the Regex needs a second check by someone with more skill. Also needs some more testing of double bracket shortcodes. (&lt;a class="missing wiki"&gt;tag]sontent[[/tag?&lt;/a&gt;)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37016 (Minor Fixes: Text color for "Delete" button on widget should be Red) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Tue, 30 Aug 2016 20:43:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37016#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37016#comment:16/1472589818769129</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I totally agree we should catch all the instances we have can in this ticket @afercia. I'm removing ui-feedback to has-ui-feedback as so long as this is a consistency patch we're all good there. Thanks for the first patch @ibachal and the great work everyone. A great catch @monikarao.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32360 (Add oEmbed provider unit tests) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 30 Aug 2016 20:43:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32360#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32360#comment:11/1472589790358467</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The &lt;code&gt;testOembedTestsCoverAllProviders()&lt;/code&gt; test has been altered from my patch and now doesn't work as intended. It should fail when a new provider is added to &lt;code&gt;WP_oEmbed-&amp;gt;providers&lt;/code&gt;, which it doesn't.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36430 (Style links on Installing plugin page) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Tue, 30 Aug 2016 20:39:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36430#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36430#comment:12/1472589585788666</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Removing feedback as it has it and the ticket is on track.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22058 (Improve custom background properties UI) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Tue, 30 Aug 2016 20:38:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22058#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22058#comment:51/1472589521039687</guid>
      <description>&lt;p&gt;
I am a little concerned using something so well known as a radio button UI for something like this. It's taking something that whilst in the 9 grid isn't a radio, well it is still. That brings a lot of user confusion potentially. I would caution this as an approach. In saying that, if someone can show me user tests or is interested, we may have fears proven or laid to rest.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35210 (Add notification area to Customizer) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Tue, 30 Aug 2016 20:34:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35210#comment:78</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35210#comment:78/1472589247424327</guid>
      <description>&lt;p&gt;
@westonruter ah, ok. Yeah it did muddy a little when trying to judge. I'll admit it's tricky to pull apart. Can we maybe even have a sketch of what is being suggested? Away from the complexity we have now? I want to judge it on what is being suggested away from noise.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37176 (A really long title is breaking the layout with the default themes) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 30 Aug 2016 20:30:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37176#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37176#comment:10/1472589025472301</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-themes by karmatosed. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-themes/p1472589023000021"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32360 (Add oEmbed provider unit tests) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Tue, 30 Aug 2016 20:25:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32360#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32360#comment:10/1472588746282001</guid>
      <description>&lt;p&gt;
@wonderboymusic @johnbillion Did you intend for the grunt task to be commented out? If so, why add it?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37889 ("Add post" overwriting a previous post in 4.6) updated</title>
      
        <dc:creator>tgelles</dc:creator>

      <pubDate>Tue, 30 Aug 2016 20:23:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37889#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37889#comment:3/1472588587936379</guid>
      <description>&lt;p&gt;
@lukecavanagh  I cant confirm that as I am currently unable to create a simple sandbox on the server, but there in another WP multisite installation on the same server that is not having these issues AFAIK.
&lt;/p&gt;
&lt;p&gt;
As such I am currently looking to see if this issue is being caused by any these network activated plugins:
&lt;/p&gt;
&lt;p&gt;
Admin Menu Tree Page View
Black Studio TinyMCE Widget
Email Post Changes
KSAS Global Widgets
miniOrange SSO using SAML 2.0
mobble
Post Indexer
Post Thumbnail Editor
Query Monitor
Quick Page/Post Redirect Plugin
Snapshot
SSH SFTP Updater Support
Stage Switcher
User Last Login
User Role Editor
User Switching
Network Deactivate
WordPress MU Domain Mapping
WP Migrate DB Pro
WP Security Audit Log
WPMU DEV Dashboard
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37763 (Target server overload due to invalid RSS feed URL in RSS widget) updated</title>
      
        <dc:creator>stevenkword</dc:creator>

      <pubDate>Tue, 30 Aug 2016 20:20:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37763#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37763#comment:4/1472588401744401</guid>
      <description>&lt;p&gt;
Relates to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28134" title="#28134: defect (bug): Infinite loop when RSS is not available - crashing server (closed: invalid)"&gt;#28134&lt;/a&gt; and may get stuck at &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/30210" title="#30210: defect (bug): WordPress generates unnecessary RSS feeds (reopened)"&gt;#30210&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37882 (Typo in the tests/qunit/wp-admin/js/customize-header.js) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 30 Aug 2016 20:18:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37882#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37882#comment:1/1472588305390334</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@tymvie thanks for the patch. Are you sure it is just the width or should it be width &lt;em&gt;and&lt;/em&gt; height?
&lt;/p&gt;
&lt;p&gt;
I see in the module it has:
&lt;/p&gt;
&lt;pre class="wiki"&gt;				themeWidth: 1000,
				themeHeight: 200
&lt;/pre&gt;&lt;p&gt;
And this test specifically has:
&lt;/p&gt;
&lt;pre class="wiki"&gt;			imageWidth: 2000,
			imageHeight: 400
&lt;/pre&gt;&lt;p&gt;
So note that the width and height are larger than their respective theme dimensions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37886 (Default logging practices of Wordpress 4.6) closed</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Tue, 30 Aug 2016 20:15:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37886#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37886#comment:2/1472588105665175</guid>
      <description>invalid: &lt;p&gt;
Hi there, and welcome to Trac.
&lt;/p&gt;
&lt;p&gt;
WordPress doesn't do any kind of logging by it self, that would either have to come from a plugin, or your own webserver (access.log is a default name given to certain logfiles from a webserver for example).
&lt;/p&gt;
&lt;p&gt;
Unfortunately this isn't really a problem with WordPress it self (which this tracker is all about), and is more of a support request. As such I'll mark this ticket as invalid, but I do encourage you to to create a thread at our &lt;a class="ext-link" href="https://wordpress.org/support"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;support forums&lt;/a&gt; if you'd like some help with your setup.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Tue, 30 Aug 2016 20:06:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:42/1472587590820196</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38455" title="List Tables: AJAX actions for List Tables do not need to declare ..."&gt;38455&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
List Tables: AJAX actions for List Tables do not need to declare &lt;code&gt;global $wp_list_table&lt;/code&gt;. List tables on admin screens are in global scope, and they contain hooks that don't pass the the list table as context, hence using globals there so that functions can import them. That problem does not exist in the AJAX actions, which are virtually impossible to hook into as is.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38455]: List Tables: AJAX actions for List Tables do not need to declare ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Tue, 30 Aug 2016 20:06:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38455</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38455/1472587590347415</guid>
      <description>&lt;p&gt;
List Tables: AJAX actions for List Tables do not need to declare &lt;code&gt;global $wp_list_table&lt;/code&gt;. List tables on admin screens are in global scope, and they contain hooks that don't pass the the list table as context, hence using globals there so that functions can import them. That problem does not exist in the AJAX actions, which are virtually impossible to hook into as is.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37886 (Default logging practices of Wordpress 4.6) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 30 Aug 2016 19:55:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37886#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37886#comment:1/1472586948633986</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by lukecavanagh. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472586946000408"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37699.2.diff attached to Ticket #37699</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Tue, 30 Aug 2016 19:55:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37699/37699.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37699/37699.2.diff/1472586926945217</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37889 ("Add post" overwriting a previous post in 4.6) updated</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Tue, 30 Aug 2016 19:46:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37889#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37889#comment:2/1472586401384372</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@tgelles
&lt;/p&gt;
&lt;p&gt;
Does the same issue happen with no plugins active and Twenty Sixteen as the active theme?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37889 ("Add post" overwriting a previous post in 4.6) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 30 Aug 2016 19:44:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37889#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37889#comment:1/1472586257589485</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've seen some similar reports on Russian support forums, so apparently some certain configurations are affected, could not reproduce it though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #37820,​37888 batch updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Tue, 30 Aug 2016 19:43:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=37820%2C37888</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=37820%2C37888/1472586237513529</guid>
      <description>duplicate: &lt;p&gt;
Hi @differentthemes, thanks for the ticket. I was able to reproduce the same issue using the provided URL. After investigating, it looks like this is a duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37820" title="#37820: defect (bug): wp_remote_get referrer not being sent correctly (new)"&gt;#37820&lt;/a&gt;, which points out a change in how &lt;code&gt;CURLOPT_REFERER&lt;/code&gt; is set. If I manually set that, the request works as expected.
&lt;/p&gt;
&lt;p&gt;
I'm going to close this out as a duplicate. Please keep an eye on that ticket for patches to test and leave feedback there.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #34722 (Open P Tag in shortcode related to h tag) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 30 Aug 2016 19:43:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34722#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34722#comment:20/1472586209909522</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by mattyrob. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472586206000406"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37436.2.diff attached to Ticket #37436</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Tue, 30 Aug 2016 19:38:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37436/37436.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37436/37436.2.diff/1472585907264742</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37436 ("Popular Plugin" UI in WordPress News dashboard widget doesn't respect ...) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Tue, 30 Aug 2016 19:27:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37436#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37436#comment:5/1472585273296951</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37436/37436.diff" title="Attachment '37436.diff' in Ticket #37436"&gt;37436.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37436/37436.diff" title="Download"&gt;​&lt;/a&gt; adds a function, &lt;code&gt;wp_disallow_file_mods()&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37436.diff attached to Ticket #37436</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Tue, 30 Aug 2016 19:26:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37436/37436.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37436/37436.diff/1472585204667453</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37846 (Minor Parent Menu Item Deletion 'sub item' Issue) updated</title>
      
        <dc:creator>rnoakes3rd</dc:creator>

      <pubDate>Tue, 30 Aug 2016 19:23:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37846#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37846#comment:5/1472585025313699</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37889 ("Add post" overwriting a previous post in 4.6) created</title>
      
        <dc:creator>tgelles</dc:creator>

      <pubDate>Tue, 30 Aug 2016 19:08:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37889</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37889/1472584101901092</guid>
      <description>&lt;p&gt;
Since updating to 4.6, adding a second post shortly after the first, overwrites the first post. The editor is blank, but the auto-generated permalink is for the pre-existing post. This goes for CPTs and normal posts.
&lt;/p&gt;
&lt;p&gt;
Additionally, I can no longer "take back" posts if someone else is editing.
&lt;/p&gt;
&lt;p&gt;
I am running running PHP 5.6.22 on CentOS 6.8, Apache/2.2.15 (Red Hat)
&lt;/p&gt;
&lt;p&gt;
There is a thread here with similar issues raised: &lt;a class="ext-link" href="https://wordpress.org/support/topic/wordpress-46-has-caused-significant-issues"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/wordpress-46-has-caused-significant-issues&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://i.stack.imgur.com/4zz5I.png"&gt;&lt;img src="http://i.stack.imgur.com/4zz5I.png" alt="http://i.stack.imgur.com/4zz5I.png" crossorigin="anonymous" title="http://i.stack.imgur.com/4zz5I.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37868 (Avoid default width styles in the markup of the audio player) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Tue, 30 Aug 2016 19:04:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37868#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37868#comment:1/1472583863591459</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
thanks @GeertDD, I need to do some testing and remember why this is here
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32360 (Add oEmbed provider unit tests) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Tue, 30 Aug 2016 18:54:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32360#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32360#comment:9/1472583293636212</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38454" title="OEmbed: add unit tests. `@group external-oembed` is not run by ..."&gt;38454&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
OEmbed: add unit tests. &lt;code&gt;@group external-oembed&lt;/code&gt; is not run by default.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props johnbillion, wonderboymusic.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32360" title="#32360: enhancement: Add oEmbed provider unit tests (closed: maybelater)"&gt;#32360&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38454]: OEmbed: add unit tests. `@group external-oembed` is not run by ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Tue, 30 Aug 2016 18:54:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38454</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38454/1472583293132362</guid>
      <description>&lt;p&gt;
OEmbed: add unit tests. &lt;code&gt;@group external-oembed&lt;/code&gt; is not run by default.
&lt;/p&gt;
&lt;p&gt;
Props johnbillion, wonderboymusic.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32360" title="#32360: enhancement: Add oEmbed provider unit tests (closed: maybelater)"&gt;#32360&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #32360 (Add oEmbed provider unit tests) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Tue, 30 Aug 2016 18:53:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32360#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32360#comment:8/1472583200686790</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>32360.diff attached to Ticket #32360</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Tue, 30 Aug 2016 18:52:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32360/32360.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32360/32360.diff/1472583151551811</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36356 (Function signature of wp_parse_url() does not match parse_url()) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 30 Aug 2016 18:30:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36356#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36356#comment:12/1472581852081776</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38453" title="HTTP API: Separate the test for `wp_parse_url()` with `-1` as its ..."&gt;38453&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
HTTP API: Separate the test for &lt;code&gt;wp_parse_url()&lt;/code&gt; with &lt;code&gt;-1&lt;/code&gt; as its component into a separate test, so the remaining tests can use strict type checking. This helps avoid gotches with the potentially empty values (ie. &lt;code&gt;null&lt;/code&gt;) that we're testing for.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36356" title="#36356: defect (bug): Function signature of wp_parse_url() does not match parse_url() (closed: fixed)"&gt;#36356&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38453]: HTTP API: Separate the test for `wp_parse_url()` with `-1` as its ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 30 Aug 2016 18:30:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38453</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38453/1472581851609344</guid>
      <description>&lt;p&gt;
HTTP API: Separate the test for &lt;code&gt;wp_parse_url()&lt;/code&gt; with &lt;code&gt;-1&lt;/code&gt; as its component into a separate test, so the remaining tests can use strict type checking. This helps avoid gotches with the potentially empty values (ie. &lt;code&gt;null&lt;/code&gt;) that we're testing for.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36356" title="#36356: defect (bug): Function signature of wp_parse_url() does not match parse_url() (closed: fixed)"&gt;#36356&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36356 (Function signature of wp_parse_url() does not match parse_url()) reopened</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 30 Aug 2016 18:27:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36356#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36356#comment:11/1472581665678170</guid>
      <description>&lt;p&gt;
Okay we have an &lt;em&gt;actual&lt;/em&gt; failure now, on PHP 5.2.
&lt;/p&gt;
&lt;pre class="wiki"&gt;test_wp_parse_url_with_component with data set #17 ('/path/http://example.net/', 1, NULL)
Failed asserting that 'placeholder' matches expected null.
tests/phpunit/tests/http/http.php:125
&lt;/pre&gt;</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #37883 (Switching to Text mode editing) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 30 Aug 2016 18:22:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37883#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37883#comment:1/1472581379831216</guid>
      <description>worksforme: &lt;p&gt;
Hi @surruk51, sounds like there are JS errors after the update. Best is to go through the steps here: &lt;a class="ext-link" href="https://codex.wordpress.org/Using_Your_Browser_to_Diagnose_JavaScript_Errors"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Using_Your_Browser_to_Diagnose_JavaScript_Errors&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
If you find errors, please open a new ticket on the support forum: &lt;a class="ext-link" href="https://wordpress.org/support/forum/how-to-and-troubleshooting"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/forum/how-to-and-troubleshooting&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Closing as worksforme. Feel free to reopen with steps to reproduce if this is indeed a WordPress bug.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37335 (Standardized API for themes to add info/links to the customizer) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 30 Aug 2016 18:01:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37335#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37335#comment:8/1472580103401426</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #themereview by jcastaneda. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/themereview/p1472580101000292"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36356 (Function signature of wp_parse_url() does not match parse_url()) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 30 Aug 2016 17:48:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36356#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36356#comment:10/1472579287111495</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38452" title="HTTP API: The tests for `wp_parse_url()` can't be strict on type ..."&gt;38452&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
HTTP API: The tests for &lt;code&gt;wp_parse_url()&lt;/code&gt; can't be strict on type because this causes the tests to fail on PHP 5.2 which, bizarrely, returns the results of &lt;code&gt;parse_url()&lt;/code&gt; (when called with a &lt;code&gt;$component&lt;/code&gt; parameter) in a different order to later PHP versions.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36356" title="#36356: defect (bug): Function signature of wp_parse_url() does not match parse_url() (closed: fixed)"&gt;#36356&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38452]: HTTP API: The tests for `wp_parse_url()` can't be strict on type ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 30 Aug 2016 17:48:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38452</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38452/1472579286656587</guid>
      <description>&lt;p&gt;
HTTP API: The tests for &lt;code&gt;wp_parse_url()&lt;/code&gt; can't be strict on type because this causes the tests to fail on PHP 5.2 which, bizarrely, returns the results of &lt;code&gt;parse_url()&lt;/code&gt; (when called with a &lt;code&gt;$component&lt;/code&gt; parameter) in a different order to later PHP versions.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36356" title="#36356: defect (bug): Function signature of wp_parse_url() does not match parse_url() (closed: fixed)"&gt;#36356&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #34789 (Timezone Option Terminology Improvement) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 30 Aug 2016 17:47:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34789#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34789#comment:10/1472579257409658</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36356 (Function signature of wp_parse_url() does not match parse_url()) reopened</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 30 Aug 2016 17:42:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36356#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36356#comment:9/1472578948215935</guid>
      <description>&lt;p&gt;
More failures: &lt;a class="ext-link" href="https://travis-ci.org/aaronjorbin/develop.wordpress/builds/156288436"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://travis-ci.org/aaronjorbin/develop.wordpress/builds/156288436&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #34982 (New algorithm for displaying a hierarchical list of post objects in ...) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 30 Aug 2016 17:39:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34982#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34982#comment:11/1472578779297158</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38451" title="Posts, Post Types: Introduce a missing private query var that should ..."&gt;38451&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Posts, Post Types: Introduce a missing private query var that should have been introduced as part of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15459" title="#15459: task (blessed): Need Better Page Hierarchy Display Algorithm (closed: fixed)"&gt;#15459&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This private query var allows the hierarchical page query on the Pages listing screen to query for &lt;code&gt;wp_posts.ID, wp_posts.post_parent&lt;/code&gt; instead of &lt;code&gt;wp_posts.*&lt;/code&gt;. This introduces large memory and time savings when the site contains a large number of Pages. Combined with the processing time savings introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/31730" title="Introduce a new algorithm for displaying a hierarchical list of post ..."&gt;[31730]&lt;/a&gt; this makes the Pages listing screen considerably more performant.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34982" title="#34982: enhancement: New algorithm for displaying a hierarchical list of post objects in ... (closed: fixed)"&gt;#34982&lt;/a&gt;&lt;br /&gt;
Props rodrigosprimo&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38451]: Posts, Post Types: Introduce a missing private query var that should ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 30 Aug 2016 17:39:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38451</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38451/1472578778802045</guid>
      <description>&lt;p&gt;
Posts, Post Types: Introduce a missing private query var that should have been introduced as part of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15459" title="#15459: task (blessed): Need Better Page Hierarchy Display Algorithm (closed: fixed)"&gt;#15459&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
This private query var allows the hierarchical page query on the Pages listing screen to query for &lt;code&gt;wp_posts.ID, wp_posts.post_parent&lt;/code&gt; instead of &lt;code&gt;wp_posts.*&lt;/code&gt;. This introduces large memory and time savings when the site contains a large number of Pages. Combined with the processing time savings introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/31730" title="Introduce a new algorithm for displaying a hierarchical list of post ..."&gt;[31730]&lt;/a&gt; this makes the Pages listing screen considerably more performant.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34982" title="#34982: enhancement: New algorithm for displaying a hierarchical list of post objects in ... (closed: fixed)"&gt;#34982&lt;/a&gt;
Props rodrigosprimo
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #34789 (Timezone Option Terminology Improvement) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 30 Aug 2016 17:39:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34789#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34789#comment:9/1472578746989715</guid>
      <description>&lt;p&gt;
Either sounds better to me :) Also would make things more clear for translators.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37513 (Admin bar sub menu items dashicon and screen readers) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 30 Aug 2016 17:37:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37513#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37513#comment:6/1472578635493082</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Some interesting data about browser and screen reader support (i.e. which ones announce CSS generated content) here: &lt;a class="ext-link" href="http://tink.uk/accessibility-support-for-css-generated-content/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://tink.uk/accessibility-support-for-css-generated-content/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Maybe in the future it will be possible to use a CSS-only solution, see:
Alternative Text for Speech
&lt;a class="ext-link" href="https://www.w3.org/TR/css-content-3/#alt"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.w3.org/TR/css-content-3/#alt&lt;/a&gt;
which will hopefully introduce the ability to specify alternative text for the CSS generated content property, after a slash:
&lt;/p&gt;
&lt;pre class="wiki"&gt;content: "\25BA" / "";
&lt;/pre&gt;&lt;p&gt;
No browser support for now. Worth also considering these arrows dashicons get "swapped" during the generation of .rtl files so things get a bit more complicated. The only options I can think of are: using a different CSS technique or use a &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; with aria-hidden. Any thoughts welcome.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34982 (New algorithm for displaying a hierarchical list of post objects in ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 30 Aug 2016 17:31:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34982#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34982#comment:10/1472578296489101</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Findings:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;This increases the number of queries on the screen by one, but consequently decreases the memory usage, overall query time, and page processing time.
&lt;/li&gt;&lt;li&gt;The more pages you have on your site the greater the memory and time savings.
&lt;/li&gt;&lt;li&gt;All tests remain passing.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
In conclusion, yes, this should have been included as part of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/31730" title="Introduce a new algorithm for displaying a hierarchical list of post ..."&gt;[31730]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34789 (Timezone Option Terminology Improvement) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 30 Aug 2016 17:27:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34789#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34789#comment:8/1472578060437843</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
That phrase isn't very good English.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;Choose a city in the same timezone as you or a UTC timezone offset.&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
This implies two choices:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Choose a city in the same timezone as you.
&lt;/li&gt;&lt;li&gt;Choose a city in the same timezone as a UTC timezone offset.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
The phrase needs either a comma before &lt;code&gt;or&lt;/code&gt;, or it needs the word &lt;code&gt;either&lt;/code&gt; after &lt;code&gt;Choose&lt;/code&gt;. My preference is for the latter.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36356 (Function signature of wp_parse_url() does not match parse_url()) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 30 Aug 2016 17:15:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36356#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36356#comment:8/1472577354641772</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38450" title="HTTP API: Prevent a fatal error on PHP &amp;lt; 5.4.7 due to changes ..."&gt;38450&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
HTTP API: Prevent a fatal error on PHP &amp;lt; 5.4.7 due to changes introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38449" title="HTTP API: Add a `$component` parameter to `wp_parse_url()` to give it ..."&gt;[38449]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36356" title="#36356: defect (bug): Function signature of wp_parse_url() does not match parse_url() (closed: fixed)"&gt;#36356&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38450]: HTTP API: Prevent a fatal error on PHP &lt; 5.4.7 due to changes ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 30 Aug 2016 17:15:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38450</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38450/1472577354157127</guid>
      <description>&lt;p&gt;
HTTP API: Prevent a fatal error on PHP &amp;lt; 5.4.7 due to changes introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38449" title="HTTP API: Add a `$component` parameter to `wp_parse_url()` to give it ..."&gt;[38449]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36356" title="#36356: defect (bug): Function signature of wp_parse_url() does not match parse_url() (closed: fixed)"&gt;#36356&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37885 (Build out register_setting like register_meta) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 30 Aug 2016 17:14:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37885#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37885#comment:6/1472577291112150</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37885#comment:4" title="Comment 4"&gt;sc0ttkclark&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I wonder if options aren't just meta for a site, and why we don't use register_meta() here all the way and maybe just add register_setting() just wraps register_meta() and provides a quick way to register settings?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1 for that. Just keep in mind that the object type there should probably be called &lt;code&gt;blog&lt;/code&gt; because &lt;code&gt;sitemeta&lt;/code&gt; already exists, unfortunately to denote &lt;em&gt;network&lt;/em&gt; options. So we would wanna prevent future collisions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36356 (Function signature of wp_parse_url() does not match parse_url()) reopened</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 30 Aug 2016 17:12:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36356#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36356#comment:7/1472577157030382</guid>
      <description>&lt;p&gt;
This fatals on &amp;lt; 5.4.7 due to line 663 trying to unset array elements of &lt;code&gt;$parts&lt;/code&gt; when &lt;code&gt;$parts&lt;/code&gt; is a string.
&lt;/p&gt;
&lt;p&gt;
Ref: &lt;a class="ext-link" href="https://travis-ci.org/aaronjorbin/develop.wordpress/jobs/156277415"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://travis-ci.org/aaronjorbin/develop.wordpress/jobs/156277415&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #37885 (Build out register_setting like register_meta) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Tue, 30 Aug 2016 17:08:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37885#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37885#comment:5/1472576939365208</guid>
      <description>&lt;p&gt;
Where register_meta() is going, where things like the Fields API is going, should all be to enable a solid API that all of WP can benefit from. I'd really like to see us make use of that foundation to improve things like Settings for the better, versus create new functions with their own logic and globally stored configurations.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37885 (Build out register_setting like register_meta) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Tue, 30 Aug 2016 16:54:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37885#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37885#comment:4/1472576063125619</guid>
      <description>&lt;p&gt;
I wonder if options aren't just meta for a site, and why we don't use register_meta() here all the way and maybe just add register_setting() just wraps register_meta() and provides a quick way to register settings?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37888 (wp_remote_get() problems after upgrade to 4.6) created</title>
      
        <dc:creator>differentthemes</dc:creator>

      <pubDate>Tue, 30 Aug 2016 16:52:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37888</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37888/1472575923330644</guid>
      <description>&lt;p&gt;
Just upgraded my WordPress from 4.5.3 to 4.6 and
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_remote_get('http://www.geoplugin.net/json.gp?ip=8.8.8.8');
&lt;/pre&gt;&lt;p&gt;
stopped working, the response I get is
&lt;/p&gt;
&lt;pre class="wiki"&gt;Array
(
    [headers] =&amp;gt; Requests_Utility_CaseInsensitiveDictionary Object
        (
            [data:protected] =&amp;gt; Array
                (
                    [date] =&amp;gt; Tue, 30 Aug 2016 16:45:15 GMT
                    [content-type] =&amp;gt; text/html; charset=iso-8859-1
                    [content-length] =&amp;gt; 209
                    [server] =&amp;gt; Apache
                )
        )
    [body] =&amp;gt; Forbidden
You don't have permission to access /json.gp
on this server.
    [response] =&amp;gt; Array
        (
            [code] =&amp;gt; 403
            [message] =&amp;gt; Forbidden
        )
    [cookies] =&amp;gt; Array
        (
        )
    [filename] =&amp;gt;
    [http_response] =&amp;gt; WP_HTTP_Requests_Response Object
        (
            [response:protected] =&amp;gt; Requests_Response Object
                (
                    [body] =&amp;gt; Forbidden
You don't have permission to access /json.gp
on this server.
                    [raw] =&amp;gt; HTTP/1.1 403 Forbidden
Date: Tue, 30 Aug 2016 16:45:15 GMT
Content-Type: text/html; charset=iso-8859-1
Content-Length: 209
Connection: close
Server: Apache
Forbidden
You don't have permission to access /json.gp
on this server.
                    [headers] =&amp;gt; Requests_Response_Headers Object
                        (
                            [data:protected] =&amp;gt; Array
                                (
                                    [date] =&amp;gt; Array
                                        (
                                            [0] =&amp;gt; Tue, 30 Aug 2016 16:45:15 GMT
                                        )
                                    [content-type] =&amp;gt; Array
                                        (
                                            [0] =&amp;gt; text/html; charset=iso-8859-1
                                        )
                                    [content-length] =&amp;gt; Array
                                        (
                                            [0] =&amp;gt; 209
                                        )
                                    [server] =&amp;gt; Array
                                        (
                                            [0] =&amp;gt; Apache
                                        )
                                )
                        )
                    [status_code] =&amp;gt; 403
                    [protocol_version] =&amp;gt; 1.1
                    [success] =&amp;gt;
                    [redirects] =&amp;gt; 0
                    [url] =&amp;gt; http://www.geoplugin.net/json.gp?ip=8.8.8.8
                    [history] =&amp;gt; Array
                        (
                        )
                    [cookies] =&amp;gt; Requests_Cookie_Jar Object
                        (
                            [cookies:protected] =&amp;gt; Array
                                (
                                )
                        )
                )
            [filename:protected] =&amp;gt;
            [data] =&amp;gt;
            [headers] =&amp;gt;
            [status] =&amp;gt;
        )
)
&lt;/pre&gt;&lt;p&gt;
In case I replace the
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_remote_get('http://www.geoplugin.net/json.gp?ip=8.8.8.8');
&lt;/pre&gt;&lt;p&gt;
with
&lt;/p&gt;
&lt;pre class="wiki"&gt;file_get_contents('http://www.geoplugin.net/json.gp?ip=8.8.8.8');
&lt;/pre&gt;&lt;p&gt;
All works fine, also if I run the
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_remote_get('http://www.geoplugin.net/json.gp?ip=8.8.8.8');
&lt;/pre&gt;&lt;p&gt;
on WP 4.5.3 or older, all works fine.
&lt;/p&gt;
&lt;p&gt;
What has changed?? Am I missing something or is this a bug?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37887 (Make attachments atomic until a Customizer session is published) created</title>
      
        <dc:creator>fjarrett</dc:creator>

      <pubDate>Tue, 30 Aug 2016 16:50:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37887</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37887/1472575818189397</guid>
      <description>&lt;h2 id="Currentbehavior"&gt;Current behavior&lt;/h2&gt;
&lt;p&gt;
When you upload attachments via a Customizer session they are:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Added to the filesystem.
&lt;/li&gt;&lt;li&gt;Saved to the database as a new post.
&lt;/li&gt;&lt;li&gt;Immediately visible in the Media Library to all other logged in users.
&lt;/li&gt;&lt;/ol&gt;&lt;h2 id="Desiredbehavior"&gt;Desired behavior&lt;/h2&gt;
&lt;p&gt;
Attachments that are uploaded during a Customizer session should not be published, or even visible by other logged in users, until the user decides to publish the changes.
&lt;/p&gt;
&lt;h2 id="Possibleidea"&gt;Possible idea&lt;/h2&gt;
&lt;p&gt;
Until Customizer changed are published, all &lt;code&gt;attachment&lt;/code&gt; posts that have been uploaded inside the Customizer could have their post status set to &lt;code&gt;auto-draft&lt;/code&gt; rather than &lt;code&gt;inherit&lt;/code&gt;. This will make them invisible inside the Media Library from other logged in users.
&lt;/p&gt;
&lt;p&gt;
All &lt;code&gt;attachment&lt;/code&gt; posts uploaded during the Customizer session could be stored inside the new Customizer transaction, and the Media Library query could be made to only show those uploads during the current unpublished session.
&lt;/p&gt;
&lt;h2 id="PublishorDiscard"&gt;Publish or Discard&lt;/h2&gt;
&lt;p&gt;
If a transaction (customizer changes) is &lt;strong&gt;published&lt;/strong&gt;, then the post status on these &lt;code&gt;attachment&lt;/code&gt; IDs can be set to &lt;code&gt;inherit&lt;/code&gt;, making them visible inside in the Media Library like normal.
&lt;/p&gt;
&lt;p&gt;
If a transaction (the customizer changes) is &lt;strong&gt;discarded&lt;/strong&gt;, then the &lt;code&gt;attachment&lt;/code&gt; IDs can be force deleted via &lt;code&gt;wp_delete_attachment( $ID, true )&lt;/code&gt; which will not only delete them from the database, but also from the filesystem.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37181 (Use metadata api in *_network_options) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 30 Aug 2016 16:49:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37181#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37181#comment:8/1472575761491607</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1472575759000093"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37885 (Build out register_setting like register_meta) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 30 Aug 2016 16:43:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37885#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37885#comment:3/1472575433209263</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1472575431000080"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37885 (Build out register_setting like register_meta) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Tue, 30 Aug 2016 16:41:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37885#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37885#comment:2/1472575307402009</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37885" title="#37885: enhancement: Build out register_setting like register_meta (closed: fixed)"&gt;joehoyle&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
However, as settings are not shared across any "object type", the way they are stored in a global can probably be a bit simpler.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Should we introduce the concept of a &lt;code&gt;site&lt;/code&gt; object, such that settings are simply attributes on a site?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35395 (Provide a better gateway for code-based theme customizations with the ...) updated</title>
      
        <dc:creator>johnregan3</dc:creator>

      <pubDate>Tue, 30 Aug 2016 16:40:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35395#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35395#comment:14/1472575214823656</guid>
      <description>&lt;p&gt;
I'd be glad to take this one.  As some of you may know, I've been working on similar functionality for the Simple Custom CSS plugin.  &lt;a class="ext-link" href="https://github.com/johnregan3/simple-custom-css/pull/20"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/johnregan3/simple-custom-css/pull/20&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35379 (update_network_option changes stored option value if sanitize_option ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 30 Aug 2016 16:38:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35379#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35379#comment:27/1472575127552608</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by flixos90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1472575124000072"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18088 (Network Admin Email setting in wp-admin/network/settings.php fails silently) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 30 Aug 2016 16:38:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18088#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18088#comment:23/1472575127177556</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by flixos90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1472575124000072"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34789 (Timezone Option Terminology Improvement) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 30 Aug 2016 16:35:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34789#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34789#comment:7/1472574944110614</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch didn't applied cleanly for me, refreshed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36356 (Function signature of wp_parse_url() does not match parse_url()) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 30 Aug 2016 16:35:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36356#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36356#comment:6/1472574934336607</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38449" title="HTTP API: Add a `$component` parameter to `wp_parse_url()` to give it ..."&gt;38449&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
HTTP API: Add a &lt;code&gt;$component&lt;/code&gt; parameter to &lt;code&gt;wp_parse_url()&lt;/code&gt; to give it parity with PHP's &lt;code&gt;parse_url()&lt;/code&gt; function.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36356" title="#36356: defect (bug): Function signature of wp_parse_url() does not match parse_url() (closed: fixed)"&gt;#36356&lt;/a&gt;&lt;br /&gt;
Props jrf&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38449]: HTTP API: Add a `$component` parameter to `wp_parse_url()` to give it ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 30 Aug 2016 16:35:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38449</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38449/1472574933869441</guid>
      <description>&lt;p&gt;
HTTP API: Add a &lt;code&gt;$component&lt;/code&gt; parameter to &lt;code&gt;wp_parse_url()&lt;/code&gt; to give it parity with PHP's &lt;code&gt;parse_url()&lt;/code&gt; function.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36356" title="#36356: defect (bug): Function signature of wp_parse_url() does not match parse_url() (closed: fixed)"&gt;#36356&lt;/a&gt;
Props jrf
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>34789.diff attached to Ticket #34789</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 30 Aug 2016 16:34:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34789/34789.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34789/34789.diff/1472574884488709</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37843 (`http_api_curl` hook no longer available for adding custom cURL options) updated</title>
      
        <dc:creator>rekmla</dc:creator>

      <pubDate>Tue, 30 Aug 2016 16:28:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37843#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37843#comment:4/1472574520781747</guid>
      <description>&lt;p&gt;
We're also at a loss as to how we'll access &lt;code&gt;curl_setopt&lt;/code&gt; without giving up on using &lt;code&gt;wp_remote_request()&lt;/code&gt; in certain situations.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37846 (Minor Parent Menu Item Deletion 'sub item' Issue) updated</title>
      
        <dc:creator>rnoakes3rd</dc:creator>

      <pubDate>Tue, 30 Aug 2016 16:27:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37846#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37846#comment:4/1472574443788758</guid>
      <description>&lt;p&gt;
Thank you, Pascal! I have attached the patch. I change the code a bit to better follow the coding standards used throughout the file. Please let me know if there are any issues.
&lt;/p&gt;
&lt;p&gt;
Robert
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37846.patch attached to Ticket #37846</title>
      
        <dc:creator>rnoakes3rd</dc:creator>

      <pubDate>Tue, 30 Aug 2016 16:26:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37846/37846.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37846/37846.patch/1472574402530025</guid>
      <description>&lt;p&gt;
Patch for the unminified /wp-admin/js/nav-menu.js file.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37886 (Default logging practices of Wordpress 4.6) created</title>
      
        <dc:creator>rsspanic</dc:creator>

      <pubDate>Tue, 30 Aug 2016 16:20:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37886</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37886/1472574005634551</guid>
      <description>&lt;p&gt;
Hi, where do I find out what does a stock Wordpress 4.6. on apache, log? we would like to know if it is possible to find log traces of plugins being installed and uninstalled in our site, and post revisions being deleted. (suspecting unauthorized access). We don't have any specific monitoring plugin that we added. But I noticed that Wordpress does have a file access.log.
And what about the web server logs? would they reflect such things? how about if the mysql logging was turned off, would this act be logged somewhere?
&lt;/p&gt;
&lt;p&gt;
thanks
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37799 (Add progress indicator to "Upgrade Network" page) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 30 Aug 2016 16:14:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37799#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37799#comment:3/1472573640735379</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1472573638000025"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37511 (Dashboard activity widget: hide the "No activity yet" smiley from ...) closed</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 30 Aug 2016 16:13:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37511#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37511#comment:5/1472573612253214</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38448" title="Accessibility: Hide the &amp;#34;No activity yet&amp;#34; smiley from assistive ..."&gt;38448&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Accessibility: Hide the "No activity yet" smiley from assistive technologies.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37511" title="#37511: enhancement: Dashboard activity widget: hide the &amp;#34;No activity yet&amp;#34; smiley from ... (closed: fixed)"&gt;#37511&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38448]: Accessibility: Hide the "No activity yet" smiley from assistive ...</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 30 Aug 2016 16:13:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38448</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38448/1472573611791936</guid>
      <description>&lt;p&gt;
Accessibility: Hide the "No activity yet" smiley from assistive technologies.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37511" title="#37511: enhancement: Dashboard activity widget: hide the &amp;#34;No activity yet&amp;#34; smiley from ... (closed: fixed)"&gt;#37511&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37616 (Replace `is_super_admin()` calls with real capability checks) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 30 Aug 2016 16:11:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37616#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37616#comment:4/1472573503385077</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1472573501000021"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37511 (Dashboard activity widget: hide the "No activity yet" smiley from ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 30 Aug 2016 16:10:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37511#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37511#comment:4/1472573408318307</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37885 (Build out register_setting like register_meta) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 30 Aug 2016 16:05:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37885#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37885#comment:1/1472573151013684</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by joehoyle. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1472573148000462"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37527 (Customizer: Links within text should be underlined) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 30 Aug 2016 16:05:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37527#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37527#comment:10/1472573132503958</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Refreshed patch with a minimal, and reversed approach. Still thinking the best option would be keeping the &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; elements underlined by default, and then override the style case by case. That's because many of these links that are not real links should be changed in buttons sooner or later. Haven't touched the widget action links.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Note that there is a link within the menu item control that should be styled like a link
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Should be OK now, see the "original" link below:
&lt;a style="padding:0; border:none" href="https://cldup.com/kQ-evX_GDz.png"&gt;&lt;img src="https://cldup.com/kQ-evX_GDz.png" alt="https://cldup.com/kQ-evX_GDz.png" crossorigin="anonymous" title="https://cldup.com/kQ-evX_GDz.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Worth noting there are still some small inconsistencies here and there. For example, the "Delete Menu" &lt;code&gt;button-link&lt;/code&gt; is underlined while the "Remove" menu item &lt;code&gt;button-link&lt;/code&gt; is not underlined. Not sure why, would be nice to review them.
@celloexpressions do you feel this is a viable approach?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29788 (Open Sans font won't display Hebrew pages in IE 11) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Tue, 30 Aug 2016 16:03:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29788#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29788#comment:6/1472573033205236</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29788#comment:5" title="Comment 5"&gt;xavortm&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Related to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36753" title="#36753: task (blessed): Use system fonts for a faster, more native-feeling admin (closed: fixed)"&gt;#36753&lt;/a&gt; - System fonts are to be used instead of Open Sans.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This one isn't related, since it's talking about Open Sans displaying in themes, not in core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37846 (Minor Parent Menu Item Deletion 'sub item' Issue) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 30 Aug 2016 16:02:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37846#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37846#comment:3/1472572967008352</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37846 (Minor Parent Menu Item Deletion 'sub item' Issue) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 30 Aug 2016 16:02:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37846#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37846#comment:2/1472572956717641</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hey there,
&lt;/p&gt;
&lt;p&gt;
Welcome to WordPress Trac and thanks for suggesting a solution right away! It would be great to have that snippet as a patch so we could more easily test it.
&lt;/p&gt;
&lt;p&gt;
Are you familiar with working with patches? There's a good &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/tutorials/working-with-patches/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;handbook entry&lt;/a&gt; about creating and testing patches.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37812 (404 when using a numeric slug and /%category%/ base) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 30 Aug 2016 15:59:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37812#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37812#comment:2/1472572797092903</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5305" title="#5305: defect (bug): permalinks broken when article name is numeric (closed: fixed)"&gt;#5305&lt;/a&gt; addressed the issue where the permalink of a post could conflict with a date archive if the post had a numeric permalink. So it's similar to this issue, but not related to dates - it has to do with pagination. It's likely that we could institute a similar sort of suffixing to what we did in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5305" title="#5305: defect (bug): permalinks broken when article name is numeric (closed: fixed)"&gt;#5305&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37853 (HTTP error when uploading images) updated</title>
      
        <dc:creator>cezariuszmarek</dc:creator>

      <pubDate>Tue, 30 Aug 2016 15:59:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37853#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37853#comment:2/1472572769645521</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Just to repeat, this happens on 4.6 as well as 4.5?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes. I started with 4.5.3 and I had this error several times. Then I upgraded to 4.6 and the error is still there. Note it's completely random, and reuploading the same image usually works (not always though).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
And your image is being uploaded but there are no thumbnails, correct?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sort of. Not only the image doesn't have a thumbnail, but the file isn't visible at all at the list of images attached to the post until I put the filename into the search box.
&lt;/p&gt;
&lt;p&gt;
Ticket &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/36534" title="#36534: defect (bug): Media Upload Issue Since 4.5 Upgrade (reopened)"&gt;#36534&lt;/a&gt; doesn't have a solution, so it's hard to tell if it's a duplicate. I've tried to limit the Imagick thread count to 1 (and I confirmed it with "echo Imagick::getResourceLimit(6)"), but it didn't help.
&lt;/p&gt;
&lt;p&gt;
I could even live with the error if it didn't leave garbage in the database and file system.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37812 (404 when using a numeric slug and /%category%/ base) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 30 Aug 2016 15:55:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37812#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37812#comment:1/1472572546297469</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Confirmed, also on older installs.
&lt;/p&gt;
&lt;p&gt;
With a non-numerical slug the matched query is &lt;code&gt;category_name=parent%2Fchild&amp;amp;name=test&amp;amp;page=&lt;/code&gt;, whereas with a numerical slug it is &lt;code&gt;category_name=parent&amp;amp;name=child&amp;amp;page=12345&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
The rewrite rule for the &lt;code&gt;/%category%/%postname%/&lt;/code&gt; structure is &lt;code&gt;(.+?)/([^/]+)(?:/([0-9]+))?/?$&lt;/code&gt; (&lt;code&gt;category_name=$matches[1]&amp;amp;name=$matches[2]&amp;amp;page=$matches[3]&lt;/code&gt;).
&lt;/p&gt;
&lt;p&gt;
Looks like numerical slugs should be forbidden in that case and suffixed (e.g. &lt;code&gt;1234-2&lt;/code&gt;). @boonebgorges didn't you fix something similar recently? Can't find the ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37885.diff attached to Ticket #37885</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Tue, 30 Aug 2016 15:55:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37885/37885.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37885/37885.diff/1472572527775179</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37885 (Build out register_setting like register_meta) created</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Tue, 30 Aug 2016 15:54:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37885</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37885/1472572496170180</guid>
      <description>&lt;p&gt;
In 4.6 the diligent work was done to beef out &lt;code&gt;register_meta()&lt;/code&gt; to be much more extensible. For use in the REST API, I'd like have a similar API for registered settings.
&lt;/p&gt;
&lt;p&gt;
Register settings and meta is quite similar (settings are after all just meta on the site object ;) ) so I think we can take a lot of design queues from &lt;code&gt;register_meta&lt;/code&gt; and bring them into &lt;code&gt;register_setting&lt;/code&gt;. However, as settings are not shared across any "object type", the way they are stored in a global can probably be a bit simpler.
&lt;/p&gt;
&lt;p&gt;
Much like &lt;code&gt;register_meta&lt;/code&gt; I propose we change the function signature to &lt;code&gt;register_setting( $option_group, $option_name, $args = array() )&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I've attached an initial patch of the kind of thing I'm thinking.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37884 (WordPress disregards explicit theme settings and serves WP.org ...) closed</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 30 Aug 2016 15:49:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37884#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37884#comment:3/1472572151453133</guid>
      <description>invalid: &lt;p&gt;
Hey there,
&lt;/p&gt;
&lt;p&gt;
Thanks for opening this ticket. I know this is currently bugging some of your users, but posting this ticket in various Slack channels right away isn't helpful for the people trying to resolve Trac tickets.
&lt;/p&gt;
&lt;p&gt;
As @casiepa already pointed out on Slack, this has been an explicit change in WordPress 4.6 and it was announced well in advance. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34213" title="#34213: enhancement: Change priority for loading theme/plugin translations (closed: fixed)"&gt;#34213&lt;/a&gt; and &lt;a class="ext-link" href="https://make.wordpress.org/core/2016/07/06/i18n-improvements-in-4-6/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2016/07/06/i18n-improvements-in-4-6/&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Since your theme uses language packs, there's no need to keep translation files in your theme anyway, so users will benefit from the translate.wordpress.org system.
&lt;/p&gt;
&lt;p&gt;
I'm therefore closing this ticket as that change won't be reverted. Of course discussion can continue also on closed tickets.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>37527.2.diff attached to Ticket #37527</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 30 Aug 2016 15:48:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37527/37527.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37527/37527.2.diff/1472572109198340</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #34213 (Change priority for loading theme/plugin translations) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 30 Aug 2016 15:40:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34213#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34213#comment:33/1472571607568299</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #polyglots by casiepa. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/polyglots/p1472571605000089"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37884 (WordPress disregards explicit theme settings and serves WP.org ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 30 Aug 2016 15:36:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37884#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37884#comment:2/1472571389586059</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #meta-i18n by tomasm. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/meta-i18n/p1472571387000023"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37843 (`http_api_curl` hook no longer available for adding custom cURL options) updated</title>
      
        <dc:creator>JRGould</dc:creator>

      <pubDate>Tue, 30 Aug 2016 15:35:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37843#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37843#comment:3/1472571328506063</guid>
      <description>&lt;p&gt;
The HTTP API currently feels pretty crippled without the ability to set  curl options or utilize Requests' hooks in general. Adding a filter on &lt;code&gt;$options&lt;/code&gt; with an additional &lt;code&gt;$url&lt;/code&gt; arg just before calling &lt;code&gt;Requests::request()&lt;/code&gt; would be incredibly helpful.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37884 (WordPress disregards explicit theme settings and serves WP.org ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 30 Aug 2016 15:35:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37884#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37884#comment:1/1472571326718304</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #polyglots by tomasm. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/polyglots/p1472571324000076"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37884 (WordPress disregards explicit theme settings and serves WP.org ...) created</title>
      
        <dc:creator>TomasM</dc:creator>

      <pubDate>Tue, 30 Aug 2016 15:35:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37884</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37884/1472571307106204</guid>
      <description>&lt;p&gt;
My theme (Tiny Framework) explicitly states to use included language files (in functions.php):
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;load_theme_textdomain( 'tiny-framework', get_template_directory() . '/languages' );&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
I would see it fit (perhaps) to use online language pack if it is 100% complete, but what actually happens - online packs are selected regardless of the existence of the local language file.
&lt;/p&gt;
&lt;p&gt;
Users started to complain as after theme update suddenly their sites became only partially translated:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://wordpress.org/support/topic/translation-de_de-in-tinyframework-220?replies=4"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/translation-de_de-in-tinyframework-220?replies=4&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Slack conversation: &lt;a class="ext-link" href="https://wordpress.slack.com/archives/polyglots/p1472505920000036"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/polyglots/p1472505920000036&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37790 (Post editing sidebar does not always act sticky) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 30 Aug 2016 15:30:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37790#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37790#comment:2/1472571043491637</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the patch!
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Attached a diff (make sure to do &lt;code&gt;define('SCRIPT_DEBUG', true);&lt;/code&gt;when using this diff as I didn't recompile the JS).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's not needed for patches anyway, as the JavaScript gets minified during the build process.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #21644,​33694 batch updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 30 Aug 2016 15:29:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=21644%2C33694</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=21644%2C33694/1472570966574930</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21644" title="#21644: feature request: Should contributors be allowed to edit their posts once scheduled? (closed: duplicate)"&gt;#21644&lt;/a&gt; was marked as a duplicate.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #37782 (Duplicate Page Entry in View All Pages when generating a Menu) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 30 Aug 2016 15:28:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37782#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37782#comment:3/1472570919994564</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37774 (Shiny Updates: Themes updates with no package available still show ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 30 Aug 2016 15:26:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37774#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37774#comment:1/1472570777410232</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for reporting this! I think we should not show the "Update now" link at all in this case, without adding an additional explanation. The user will see it when opening the theme details modal and there's not enough space anyway.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37589 (Safari, VoiceOver and the CSS property user-select) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 30 Aug 2016 15:26:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37589#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37589#comment:3/1472570776905775</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472570774000384"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37843 (`http_api_curl` hook no longer available for adding custom cURL options) updated</title>
      
        <dc:creator>ptasker</dc:creator>

      <pubDate>Tue, 30 Aug 2016 15:25:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37843#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37843#comment:2/1472570734392904</guid>
      <description>&lt;p&gt;
Voting for this one as well. Would be good to be able to filter the curl_setopt() flags again.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37763 (Target server overload due to invalid RSS feed URL in RSS widget) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 30 Aug 2016 15:23:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37763#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37763#comment:3/1472570624288598</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22058 (Improve custom background properties UI) updated</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Tue, 30 Aug 2016 15:22:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22058#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22058#comment:50/1472570525541483</guid>
      <description>&lt;p&gt;
Ladies and gentlemen: we're happy to help with the CSS code for the 9 point position picker (or other issues) as soon as the final requirements settle.
&lt;/p&gt;
&lt;p&gt;
@Helen, taking my visual from &lt;a href="https://core.trac.wordpress.org/ticket/22058#comment:45"&gt;comment 45&lt;/a&gt; what other additions need to be made? What order would you like the properties in? I &lt;em&gt;know&lt;/em&gt; you covered this material once &lt;a href="https://core.trac.wordpress.org/ticket/22058#comment:44"&gt;comment 44&lt;/a&gt; but before doing a final mockup, I'd like to confirm your thoughts on repeat (which as celloexpressions notes can cause huge performance issues).
&lt;/p&gt;
&lt;p&gt;
To be honest, I think we know what combinations can kill a site loading and we should show errors (even permanently inline on this dialogue box) warning that that the users choices will make for a very slow loading website. If it were entirely up to me, I'd make it impossible to make those choices at all in the GUI customizer. The internet would be a faster place if anyone who wants to bork their site must learn to code by hand!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37753 (The Edit button on a gallery does nothing unless you first click on ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 30 Aug 2016 15:21:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37753#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37753#comment:2/1472570467615001</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37680 (PHP Warning: ini_get_all() has been disabled for security reasons) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Tue, 30 Aug 2016 15:20:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37680#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37680#comment:20/1472570443784209</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37680#comment:19" title="Comment 19"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Technically you're right, personally though, I don't want to perform silly work arounds like that. I'm fine with a server which uses a hardening extension to disable a safe function throwing warnings.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37843 (`http_api_curl` hook no longer available for adding custom cURL options) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 30 Aug 2016 15:18:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37843#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37843#comment:1/1472570295312956</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37853 (HTTP error when uploading images) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 30 Aug 2016 15:16:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37853#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37853#comment:1/1472570203709419</guid>
      <description>&lt;p&gt;
Hey there,
&lt;/p&gt;
&lt;p&gt;
Thanks for your report. Just to repeat, this happens on 4.6 as well as 4.5? And your image is being uploaded but there are no thumbnails, correct?
&lt;/p&gt;
&lt;p&gt;
If so, this could be a duplicate of &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/36534" title="#36534: defect (bug): Media Upload Issue Since 4.5 Upgrade (reopened)"&gt;#36534&lt;/a&gt;, where eventually the conclusion was that it's caused by a server misconfiguration.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37589 (Safari, VoiceOver and the CSS property user-select) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 30 Aug 2016 15:16:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37589#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37589#comment:2/1472570184087004</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20928 (Add regular-text style to textareas) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 30 Aug 2016 15:11:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20928#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20928#comment:4/1472569901680991</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22857 ('Header Image' state isn't removed from images previously used as ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 30 Aug 2016 15:10:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22857#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22857#comment:11/1472569834057792</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23816 (wp_enqueue_script|style() dependency failures are silent) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 30 Aug 2016 15:08:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23816#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23816#comment:13/1472569687088004</guid>
      <description>maybelater: &lt;p&gt;
If someone wants to work on this, feel free to re-open with a patch.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37877 (Conversion of quotation marks in wp_add_inline_script() results in ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 30 Aug 2016 15:07:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37877#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37877#comment:1/1472569657263441</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37839 (wp_remote_get sometimes mutilates the response body) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 30 Aug 2016 15:06:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37839#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37839#comment:1/1472569570590654</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Can change milestone to 4.7 once the PR has been merged upstream.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35614 (Cannot check capabilities on single taxonomy terms) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 30 Aug 2016 14:58:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35614#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35614#comment:4/1472569103969401</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25597 (The capability used for managing tags should be separate from that for ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 30 Aug 2016 14:58:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25597#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25597#comment:5/1472569088432812</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37800 (Close "link rel" dns-prefetch tag) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 30 Aug 2016 14:51:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37800#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37800#comment:12/1472568662609763</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37800 (Close "link rel" dns-prefetch tag) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 30 Aug 2016 14:50:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37800#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37800#comment:11/1472568615417585</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38447" title="Script Loader: Properly adjust tests missed in [38443].
See #37800."&gt;38447&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Script Loader: Properly adjust tests missed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38443" title="Script Loader: Close the `&amp;lt;link&amp;gt;` tag in `wp_resource_hints()`.
Props ..."&gt;[38443]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37800" title="#37800: defect (bug): Close &amp;#34;link rel&amp;#34; dns-prefetch tag (closed: fixed)"&gt;#37800&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38447]: Script Loader: Properly adjust tests missed in [38443].  See #37800.</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 30 Aug 2016 14:50:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38447</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38447/1472568614932479</guid>
      <description>&lt;p&gt;
Script Loader: Properly adjust tests missed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38443" title="Script Loader: Close the `&amp;lt;link&amp;gt;` tag in `wp_resource_hints()`.
Props ..."&gt;[38443]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37800" title="#37800: defect (bug): Close &amp;#34;link rel&amp;#34; dns-prefetch tag (closed: fixed)"&gt;#37800&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37696 (WP_Comment_Query loses sql_clauses with Object Cache) reopened</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 30 Aug 2016 14:48:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37696#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37696#comment:22/1472568516758483</guid>
      <description>&lt;p&gt;
Reopening for 4.6.1.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #37696 (WP_Comment_Query loses sql_clauses with Object Cache) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 30 Aug 2016 14:48:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37696#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37696#comment:21/1472568480813914</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38446" title="Comments: Don't do direct SQL query when fetching decendants.
The SQL ..."&gt;38446&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Comments: Don't do direct SQL query when fetching decendants.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The SQL query was built using the clauses compiled when querying for&lt;br /&gt;
top-level comments. But in cases where the top-level comment query&lt;br /&gt;
results are already in the cache, the SQL clauses are not built, and&lt;br /&gt;
so are unavailable for &lt;code&gt;fill_descendants()&lt;/code&gt;. Instead, we call&lt;br /&gt;
&lt;code&gt;get_comments()&lt;/code&gt;, using modified versions of the parameters passed&lt;br /&gt;
to the main &lt;code&gt;WP_Comment_Query&lt;/code&gt; class.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props Akeif, Rarst for testing.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37696" title="#37696: defect (bug): WP_Comment_Query loses sql_clauses with Object Cache (closed: fixed)"&gt;#37696&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38446]: Comments: Don't do direct SQL query when fetching decendants.  The SQL ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 30 Aug 2016 14:48:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38446</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38446/1472568480325997</guid>
      <description>&lt;p&gt;
Comments: Don't do direct SQL query when fetching decendants.
&lt;/p&gt;
&lt;p&gt;
The SQL query was built using the clauses compiled when querying for
top-level comments. But in cases where the top-level comment query
results are already in the cache, the SQL clauses are not built, and
so are unavailable for &lt;code&gt;fill_descendants()&lt;/code&gt;. Instead, we call
&lt;code&gt;get_comments()&lt;/code&gt;, using modified versions of the parameters passed
to the main &lt;code&gt;WP_Comment_Query&lt;/code&gt; class.
&lt;/p&gt;
&lt;p&gt;
Props Akeif, Rarst for testing.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37696" title="#37696: defect (bug): WP_Comment_Query loses sql_clauses with Object Cache (closed: fixed)"&gt;#37696&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #33240 (Introduce a capability for previewing posts) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 30 Aug 2016 14:47:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33240#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33240#comment:3/1472568454912946</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33704 (Reduce reliance on wp_is_mobile()) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 30 Aug 2016 14:47:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33704#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33704#comment:7/1472568427648395</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36356 (Function signature of wp_parse_url() does not match parse_url()) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 30 Aug 2016 14:43:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36356#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36356#comment:5/1472568230445593</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37883 (Switching to Text mode editing) created</title>
      
        <dc:creator>surruk51</dc:creator>

      <pubDate>Tue, 30 Aug 2016 14:41:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37883</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37883/1472568108608967</guid>
      <description>&lt;p&gt;
Cannot switch to text editing mode since Pepper upgrade.
&lt;/p&gt;
&lt;p&gt;
Tried in Firefox 48.0
Also Chromium Version 51.0.2704.79
In both cases on LinuxMint 17.3 (64-bit) + WordPress 4.6 running Twenty Sixteen theme.
&lt;/p&gt;
&lt;p&gt;
Also, in visual mode, cannot add hyperlink to images. However these images have been put in a styled div in text mode previously.
&lt;/p&gt;
&lt;p&gt;
Page is at front page of baligslam.com
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37696 (WP_Comment_Query loses sql_clauses with Object Cache) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 30 Aug 2016 14:40:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37696#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37696#comment:20/1472568014148762</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37696#comment:19" title="Comment 19"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Any update on this? The patch seems to resolve the issue and it should go into trunk rather sooner than later to be considered for 4.6.1.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The pre-commit review I was hoping for appears not to be forthcoming. I've done a second review myself, and will commit to trunk to get some testing before branch merge.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20875 (Introduce wp_cache_get_multi()) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 30 Aug 2016 14:38:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20875#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20875#comment:28/1472567915855564</guid>
      <description>&lt;p&gt;
See &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/37762" title="#37762: defect (bug): cache_results parameter doesn't prevent queried posts from being added ... (assigned)"&gt;#37762&lt;/a&gt;. The &lt;code&gt;cache_results&lt;/code&gt; parameter of &lt;code&gt;WP_Query&lt;/code&gt; was introduced to skirt problems with bulk cache set/get, but the parameter is mostly broken. Once we have these bulk cache functions, we may want to remove (or otherwise fix) &lt;code&gt;cache_results&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37762 (cache_results parameter doesn't prevent queried posts from being added ...) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 30 Aug 2016 14:37:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37762#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37762#comment:7/1472567840273990</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
Are there any backwards-compatible reasons to not remove/ignore the parameter? The only thing I can think of is a slight performance hit if we're now no longer updating the metadata and/or taxonomy caches. I think that's acceptable.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Currently, &lt;code&gt;cache_results&lt;/code&gt; (when used properly alongside &lt;code&gt;update_post_meta_cache&lt;/code&gt; and &lt;code&gt;update_post_term_cache&lt;/code&gt;) prevents at least two additional cache roundtrips for each fetched post, and possibly many more in the case of lots of custom taxonomies. Removing the option altogether could cause serious performance problems in certain cases. Once &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/20875" title="#20875: enhancement: Introduce wp_cache_get_multi() (assigned)"&gt;#20875&lt;/a&gt; is addressed, I think we can revisit the removal of &lt;code&gt;cache_results&lt;/code&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The only reason I can think of is if the post includes some data that changes very often (for example - some plugin is attaching random or API data to a post at load time). In that case they're probably doing_it_wrong() and should be discouraged anyway so that we can use the cache properly.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, filtering the post data pre-cache could cause problems, but I think that in this case the solution is to filter *post* cache. The frequency of updates is an argument *for* better cache leverage, not against it; if there are inconsistency issues in these cases, it's likely due to an invalidation bug, rather than the fact that the cache is being used in the first place.
&lt;/p&gt;
&lt;p&gt;
I'm going to move this ticket to Future Release so it can be reassessed post-&lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/20875" title="#20875: enhancement: Introduce wp_cache_get_multi() (assigned)"&gt;#20875&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37523 (Unit tests: Move classes out of includes/functions.php into their own file) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 30 Aug 2016 14:32:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37523#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37523#comment:11/1472567524734242</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38445" title="Tests: Require `Basic_Object` and `Basic_Subclass` files earlier in ..."&gt;38445&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Tests: Require &lt;code&gt;Basic_Object&lt;/code&gt; and &lt;code&gt;Basic_Subclass&lt;/code&gt; files earlier in call stack.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This ensures compatibility with third-party tools using these classes&lt;br /&gt;
in their test suites, after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38285" title="Tests: Move some utility classes to their own files.
Props Frank ..."&gt;[38285]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props DylanAuty, Frank Klein, TimothyBlynJacobs.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37523" title="#37523: enhancement: Unit tests: Move classes out of includes/functions.php into their own file (closed: fixed)"&gt;#37523&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38445]: Tests: Require `Basic_Object` and `Basic_Subclass` files earlier in ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 30 Aug 2016 14:32:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38445</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38445/1472567524219193</guid>
      <description>&lt;p&gt;
Tests: Require &lt;code&gt;Basic_Object&lt;/code&gt; and &lt;code&gt;Basic_Subclass&lt;/code&gt; files earlier in call stack.
&lt;/p&gt;
&lt;p&gt;
This ensures compatibility with third-party tools using these classes
in their test suites, after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38285" title="Tests: Move some utility classes to their own files.
Props Frank ..."&gt;[38285]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Props DylanAuty, Frank Klein, TimothyBlynJacobs.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37523" title="#37523: enhancement: Unit tests: Move classes out of includes/functions.php into their own file (closed: fixed)"&gt;#37523&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37523 (Unit tests: Move classes out of includes/functions.php into their own file) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 30 Aug 2016 14:31:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37523#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37523#comment:10/1472567516967916</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38444" title="Tests: Add docblocks for `Basic_Object` and `Basic_Subclass` classes.
 ..."&gt;38444&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Tests: Add docblocks for &lt;code&gt;Basic_Object&lt;/code&gt; and &lt;code&gt;Basic_Subclass&lt;/code&gt; classes.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props DylanAuty.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37523" title="#37523: enhancement: Unit tests: Move classes out of includes/functions.php into their own file (closed: fixed)"&gt;#37523&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38444]: Tests: Add docblocks for `Basic_Object` and `Basic_Subclass` classes.  ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 30 Aug 2016 14:31:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38444</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38444/1472567516475992</guid>
      <description>&lt;p&gt;
Tests: Add docblocks for &lt;code&gt;Basic_Object&lt;/code&gt; and &lt;code&gt;Basic_Subclass&lt;/code&gt; classes.
&lt;/p&gt;
&lt;p&gt;
Props DylanAuty.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37523" title="#37523: enhancement: Unit tests: Move classes out of includes/functions.php into their own file (closed: fixed)"&gt;#37523&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37523 (Unit tests: Move classes out of includes/functions.php into their own file) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 30 Aug 2016 14:28:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37523#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37523#comment:9/1472567298225291</guid>
      <description>&lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the patches. I'm inclined to leave the &lt;code&gt;require_once&lt;/code&gt; statements in functions.php, given that:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;our main goal is backward compatibility, and functions.php is where the classes were previously loaded in the call graph
&lt;/li&gt;&lt;li&gt;none of this will matter once we autoload classes; see &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36335" title="#36335: feature request: Next generation: core autoloader proposal (new)"&gt;#36335&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37864 (No shiny update when updating a plugin in a non-English site) reopened</title>
      
        <dc:creator>leemon</dc:creator>

      <pubDate>Tue, 30 Aug 2016 14:25:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37864#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37864#comment:10/1472567152560160</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #37762 (cache_results parameter doesn't prevent queried posts from being added ...) updated</title>
      
        <dc:creator>achbed</dc:creator>

      <pubDate>Tue, 30 Aug 2016 14:24:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37762#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37762#comment:6/1472567071486073</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37762#comment:5" title="Comment 5"&gt;boonebgorges&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
From this, I conclude that &lt;code&gt;cache_results&lt;/code&gt; doesn't really do what it was meant to do. If anything, it should be removed altogether.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Are there any backwards-compatible reasons to not remove/ignore the parameter?  The only thing I can think of is a slight performance hit if we're now no longer updating the metadata and/or taxonomy caches.  I think that's acceptable.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What is the reason for wanting to prevent post objects from being loaded into the cache? Is it a performance issue like described in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12611" title="#12611: defect (bug): Performance hit from update_post_caches (closed: fixed)"&gt;#12611&lt;/a&gt;? If so, I wonder if we could mostly mitigate the issue with cache multi-get and multi-set, which would dramatically reduce the number of round-trips necessary to load data into the cache; see &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/20875" title="#20875: enhancement: Introduce wp_cache_get_multi() (assigned)"&gt;#20875&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The only reason I can think of is if the post includes some data that changes very often (for example - some plugin is attaching random or API data to a post at load time). In that case they're probably &lt;code&gt;doing_it_wrong()&lt;/code&gt; and should be discouraged anyway so that we can use the cache properly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37864 (No shiny update when updating a plugin in a non-English site) closed</title>
      
        <dc:creator>leemon</dc:creator>

      <pubDate>Tue, 30 Aug 2016 14:24:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37864#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37864#comment:9/1472567043909218</guid>
      <description>invalid: &lt;p&gt;
I updated the translations in some of my sites and now the plugin update links work as expected.
&lt;/p&gt;
&lt;p&gt;
Note: Sorry, I marked this ticket as invalid by mistake.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Tickets #37392,​37684 batch updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 30 Aug 2016 14:23:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=37392%2C37684</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=37392%2C37684/1472566981418415</guid>
      <description>&lt;p&gt;
&lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/37392" title="#37392: enhancement: Multisite &amp;#34;Sites&amp;#34; screen: Add links to filter websites by status (assigned)"&gt;#37392&lt;/a&gt; was marked as a duplicate.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #37762 (cache_results parameter doesn't prevent queried posts from being added ...) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 30 Aug 2016 14:16:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37762#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37762#comment:5/1472566568838733</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @Dang Vu - Thanks for the ticket.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Honestly, I don't understand why WordPress needs to add queried posts to both the WP_Query::posts and the cache since they only exist in a single page load.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If you are running a persistent object cache like Memcached, then the cached post objects are available across page loads. Even within a single pageload and without a persistent cache, other functions in WP fetch data from the &lt;code&gt;'posts'&lt;/code&gt; cache group. &lt;code&gt;WP_Query::posts&lt;/code&gt; is not intended to be a cache, but is a list of query results.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;cache_results&lt;/code&gt; is fairly poorly named. Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/14310" title="Update object term cache for custom post types. props scribu, fixes #12989."&gt;[14310]&lt;/a&gt;, it really means "populate all caches related to query results". This includes the 'posts' cache as well as the taxonomy and metadata caches. See &lt;code&gt;update_post_caches()&lt;/code&gt;. In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/14665" title="Don't update_post_caches if a persistent object cache is installed. ..."&gt;[14665]&lt;/a&gt;, &lt;code&gt;cache_results&lt;/code&gt; was set to &lt;code&gt;false&lt;/code&gt; when a persistent object cache is in use, because the repeated (unnecessary) round trips to Memcached were causing performance issues; see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12611" title="#12611: defect (bug): Performance hit from update_post_caches (closed: fixed)"&gt;#12611&lt;/a&gt;. The &lt;code&gt;posts&lt;/code&gt; array in &lt;code&gt;WP_Query&lt;/code&gt; began to touch the 'posts' cache in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/21559" title="Introduce WP_Post class. Clean up ancestors handling. Props scribu, ..."&gt;[21559]&lt;/a&gt;, which made &lt;code&gt;cache_results&lt;/code&gt; more ambiguous: it now determines whether metadata and taxonomy should automatically be loaded into the cache, rather than the post objects. And this latter fact is confused by the fact that we have separate &lt;code&gt;update_post_meta_cache&lt;/code&gt; and &lt;code&gt;update_post_term_cache&lt;/code&gt; params.
&lt;/p&gt;
&lt;p&gt;
From this, I conclude that &lt;code&gt;cache_results&lt;/code&gt; doesn't really do what it was meant to do. If anything, it should be removed altogether.
&lt;/p&gt;
&lt;p&gt;
What is the reason for wanting to prevent post objects from being loaded into the cache? Is it a performance issue like described in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12611" title="#12611: defect (bug): Performance hit from update_post_caches (closed: fixed)"&gt;#12611&lt;/a&gt;? If so, I wonder if we could mostly mitigate the issue with cache multi-get and multi-set, which would dramatically reduce the number of round-trips necessary to load data into the cache; see &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/20875" title="#20875: enhancement: Introduce wp_cache_get_multi() (assigned)"&gt;#20875&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37218 (get_main_network_id should use WP_Network_Query) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 30 Aug 2016 14:14:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37218#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37218#comment:2/1472566468632741</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch looks good to me. +1 for getting rid of the cache key. One thing I don't think we need is the &lt;code&gt;! empty( $_networks )&lt;/code&gt; check. That kind of check hasn't been in place before and shouldn't be required since every Multisite has at least one network.
&lt;/p&gt;
&lt;p&gt;
About unit tests, I don't think these are necessary here since that part of &lt;code&gt;get_main_network_id()&lt;/code&gt; is already covered (&lt;a href="https://core.trac.wordpress.org/browser/trunk/tests/phpunit/tests/multisite/network.php#L66"&gt;https://core.trac.wordpress.org/browser/trunk/tests/phpunit/tests/multisite/network.php#L66&lt;/a&gt; would fail if we broke it).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37882.diff attached to Ticket #37882</title>
      
        <dc:creator>tymvie</dc:creator>

      <pubDate>Tue, 30 Aug 2016 14:01:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37882/37882.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37882/37882.diff/1472565680609548</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37841 (HTML 5 syntax error with rel='https://api.w.org/') updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 30 Aug 2016 13:57:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37841#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37841#comment:3/1472565469010943</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I dug into this a bit; custom URI relations are not valid in the &lt;a class="ext-link" href="https://html.spec.whatwg.org/multipage/semantics.html#other-link-types"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WHATWG HTML spec&lt;/a&gt; per &lt;a class="ext-link" href="https://www.w3.org/Bugs/Public/show_bug.cgi?id=13068"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;this issue&lt;/a&gt;, however they are valid in the &lt;a class="ext-link" href="https://www.w3.org/TR/html5/links.html#linkTypes"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;W3C HTML5 spec&lt;/a&gt; per &lt;a class="ext-link" href="https://www.w3.org/html/wg/tracker/issues/170"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;this issue&lt;/a&gt; (basically same as the other one).
&lt;/p&gt;
&lt;p&gt;
Anyway, the text of the W3C spec says:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The remaining values must be accepted as valid if they are absolute URLs containing US-ASCII characters only and rejected otherwise.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's true for &lt;code&gt;https://api.w.org/&lt;/code&gt;. I suspect the issue is that the validator is coded to follow the WHATWG spec, rather than the W3C spec.
&lt;/p&gt;
&lt;p&gt;
Anyway, tl;dr, we can add it to the &lt;a class="ext-link" href="http://microformats.org/wiki/existing-rel-values#HTML5_link_type_extensions"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Microformats page&lt;/a&gt;, and then it's definitely valid in either spec.
&lt;/p&gt;
&lt;p&gt;
This is hence a task to add to that wiki page. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37823 (Use get_sites in Network upgrade) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 30 Aug 2016 13:57:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37823#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37823#comment:5/1472565460742383</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37823/37823.5.diff" title="Attachment '37823.5.diff' in Ticket #37823"&gt;37823.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37823/37823.5.diff" title="Download"&gt;​&lt;/a&gt; has the &lt;code&gt;number&lt;/code&gt; and &lt;code&gt;offset&lt;/code&gt; argument correct.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37882 (Typo in the tests/qunit/wp-admin/js/customize-header.js) created</title>
      
        <dc:creator>tymvie</dc:creator>

      <pubDate>Tue, 30 Aug 2016 13:56:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37882</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37882/1472565409874691</guid>
      <description>&lt;p&gt;
Fix test header in the 'Custom Header: HeaderImage shouldBeCropped()' module
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>37823.5.diff attached to Ticket #37823</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 30 Aug 2016 13:55:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37823/37823.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37823/37823.5.diff/1472565351969828</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37881 (Win OS Apache 2.4 Php 5.6.. : WP 4.6 no email sent) updated</title>
      
        <dc:creator>axewww</dc:creator>

      <pubDate>Tue, 30 Aug 2016 13:15:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37881#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37881#comment:3/1472562925412333</guid>
      <description>&lt;p&gt;
:) nice! Thank you!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37881 (Win OS Apache 2.4 Php 5.6.. : WP 4.6 no email sent) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 30 Aug 2016 13:15:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37881#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37881#comment:2/1472562906444268</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #37736,​37881 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 30 Aug 2016 13:12:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=37736%2C37881</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=37736%2C37881/1472562745416117</guid>
      <description>duplicate: &lt;p&gt;
Hey there,
&lt;/p&gt;
&lt;p&gt;
Thanks for your report. This has already been fixed in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37736" title="#37736: defect (bug): Emails fail on certain server setups (closed: fixed)"&gt;#37736&lt;/a&gt; and will be included in 4.6.1, which is scheduled to be released next week.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #37881 (Win OS Apache 2.4 Php 5.6.. : WP 4.6 no email sent) created</title>
      
        <dc:creator>axewww</dc:creator>

      <pubDate>Tue, 30 Aug 2016 13:10:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37881</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37881/1472562629184115</guid>
      <description>&lt;p&gt;
On a test win localhost, where apache 2.4 and php 5.6.. are installed, I've think in first, were an error on plugins installed. Disabled all plugins, nothing. No email sent on 4.6. Reinstalled a new 4.6 ... nothing, no email is send out, also if php mail log file report correctly email has been sent:
&lt;/p&gt;
&lt;pre class="wiki"&gt;[26-Aug-2016 22:10:19 UTC] mail() on [F:\HTDOCS\ROOT_INTEGRATIONS\wordpress\wp-includes\class-phpmailer.php:677]: To: me@w3it.org -- Headers: Date: Fri, 26 Aug 2016 22:10:19 +0000 From: axew &amp;lt;wordpress@localhost&amp;gt; Reply-To: "\"me@axew3.com\"" &amp;lt;me@axew3.com&amp;gt; Message-ID: &amp;lt;8fce4f82facb168edc150c6d59f4af00@localhost&amp;gt; X-Mailer: PHPMailer 5.2.14 (https://github.com/PHPMailer/PHPMailer) MIME-Version: 1.0 Content-Type: text/plain; charset=UTF-8 Content-Transfer-Encoding: 8bit
[26-Aug-2016 22:11:14 UTC] mail() on [F:\HTDOCS\ROOT_INTEGRATIONS\wordpress\wp-includes\class-phpmailer.php:677]: To: you@mysite.org -- Headers: Date: Fri, 26 Aug 2016 22:11:14 +0000 From: axew &amp;lt;wordpress@localhost&amp;gt; Reply-To: "\"me@axew3.com\"" &amp;lt;me@axew3.com&amp;gt; Message-ID: &amp;lt;cfa75915dd6435213641910a1dc888c8@localhost&amp;gt; X-Mailer: PHPMailer 5.2.14 (https://github.com/PHPMailer/PHPMailer) MIME-Version: 1.0 Content-Type: text/plain; charset=UTF-8 Content-Transfer-Encoding: 8bit
&lt;/pre&gt;&lt;p&gt;
All emails seem to be correctly sent out, but nothing will never arrive. On WP 4.6.
Finally i've reinstall WP 4.5 to test out it: on it work well. And the log file returned, the same, ever without php errors.
on WP 4.6, win OS apache server test:
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;pluggable.php&lt;/em&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;$phpmailer-&amp;gt;setFrom( $from_email, $from_name );
&lt;/pre&gt;&lt;p&gt;
change with
&lt;/p&gt;
&lt;pre class="wiki"&gt;
$phpmailer-&amp;gt;setFrom( $from_email, $from_name, false );
&lt;/pre&gt;&lt;p&gt;
it will make return work email onregister (that i've test out) on 4.6.
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;public function setFrom()&lt;/em&gt; of &lt;em&gt;class-phpmailer.php&lt;/em&gt;, the value of &lt;em&gt;$this-&amp;gt;Sender&lt;/em&gt; is empty and this code on it:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$auto&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;Sender&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;Sender&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$address&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
is executed, so to &lt;em&gt;$this-&amp;gt;Sender&lt;/em&gt; will be assigned the value of &lt;em&gt;$address&lt;/em&gt; (that is &lt;em&gt;wordpress@localhost&lt;/em&gt;). Should be ok, but it lead to that emails aren't sent if the email isn't completely well formed. In fact adding
&lt;/p&gt;
&lt;pre class="wiki"&gt;$from_email = $from_email . '.com'
&lt;/pre&gt;&lt;p&gt;
just before &lt;em&gt;$phpmailer-&amp;gt;setFrom&lt;/em&gt; call on &lt;em&gt;pluggable.php&lt;/em&gt; work ok.
also other solution
&lt;/p&gt;
&lt;pre class="wiki"&gt;$phpmailer-&amp;gt;setFrom( $from_email, $from_name, false );
&lt;/pre&gt;&lt;p&gt;
get wp 4.6 email work ok in the server i test this behavior on.
in this case &lt;em&gt;$this-&amp;gt;Sender = $address&lt;/em&gt;; on &lt;em&gt;setFrom()&lt;/em&gt; isn't executed and all work ok. Email are sent.
Both solutions resolve the problem, this let me (maybe) think to:
a following check of email address, if it is not well formed, lead to fail on sending out emails.
&lt;/p&gt;
&lt;p&gt;
I've see hints on pluggable:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	/* If we don't have an email from the input headers default to wordpress@$sitename
	 * Some hosts will block outgoing mail from this address if it doesn't exist but
	 * there's no easy alternative. Defaulting to admin_email might appear to be another
	 * option but some hosts may refuse to relay mail from an unknown domain. See
	 * https://core.trac.wordpress.org/ticket/5007.
	 */
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37879 (On author.php page is_user_logged_in() return issue) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 30 Aug 2016 13:05:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37879#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37879#comment:1/1472562308501856</guid>
      <description>invalid: &lt;p&gt;
Hi @Aamir.cs.
&lt;/p&gt;
&lt;p&gt;
I've tested this behaviour using the default theme (Twenty Sixteen) and &lt;code&gt;is_user_logged_in()&lt;/code&gt; correctly returns &lt;code&gt;false&lt;/code&gt; when viewing an author archive. It's most likely that your theme's &lt;code&gt;author.php&lt;/code&gt; file is overwriting the &lt;code&gt;$current_user&lt;/code&gt; global which is used to determine the current user.
&lt;/p&gt;
&lt;p&gt;
If you can't get to the bottom of the problem, you should post a thread in the &lt;a class="ext-link" href="https://wordpress.org/support"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Support Forums&lt;/a&gt; or on &lt;a class="ext-link" href="http://wordpress.stackexchange.com/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress Stack Exchange&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37867 (Document return types for create/create_and_get/create_many() methods ...) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Tue, 30 Aug 2016 12:53:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37867#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37867#comment:7/1472561631560332</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37867#comment:6" title="Comment 6"&gt;boonebgorges&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The PHPDocumentation description for &lt;code&gt;@method&lt;/code&gt; suggests that it's specifically for use in contexts where &lt;code&gt;__call()&lt;/code&gt; is used on a parent class, so that there are no methods where the documentation could naturally appear. This isn't the case for &lt;code&gt;create()&lt;/code&gt; and friends. I'm not sure how PhpStorm and similar IDEs handle this sort of thing, but it seems like they (or their users) should be able to traverse the inheritance tree for this sort of thing. &lt;a class="ext-link" href="https://www.phpdoc.org/docs/latest/references/phpdoc/tags/method.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.phpdoc.org/docs/latest/references/phpdoc/tags/method.html&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Now, it so happens that the classes in question - &lt;code&gt;create_object()&lt;/code&gt;, &lt;code&gt;update_object()&lt;/code&gt;, &lt;code&gt;create()&lt;/code&gt;, etc on &lt;code&gt;WP_UnitTest_Factory_For_Thing&lt;/code&gt; - do not have any PHPDoc at all. I bet proper documentation of these would be enough to make your IDE document the child classes properly.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well, the problem isn't that the methods themselves aren't documented, but that their return values aren't. Documenting them on the base class would require us to use generic values, which wouldn't help. By using the &lt;code&gt;@method&lt;/code&gt; annotation, we're able to specify that calling &lt;code&gt;$factory-&amp;gt;user-&amp;gt;create_and_get()&lt;/code&gt; will return a &lt;code&gt;WP_User&lt;/code&gt; object, whereas &lt;code&gt;$factory-&amp;gt;site-&amp;gt;create_and_get()&lt;/code&gt; will return a &lt;code&gt;WP_Site&lt;/code&gt;. This is helpful fore code autocompletion, and just for documentation purposes in general.
&lt;/p&gt;
&lt;p&gt;
It is true of course that advanced IDEs should theoretically be able to figure out this information, but that doesn't help devs who are new to the factories to understand exactly what is going on. The &lt;code&gt;@method&lt;/code&gt; annotations provide explicit documentation that is helpful for everyone, I think.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36430 (Style links on Installing plugin page) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 30 Aug 2016 12:43:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36430#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36430#comment:11/1472560983081914</guid>
      <description>&lt;p&gt;
Quickly checking history, I think the &lt;code&gt;button-cancel&lt;/code&gt; class was originally introduced for the "Cancel" links in the publish box, see &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/26247" title="Style and positioning fixes to form elements in the Publish box:
- ..."&gt;[26247]&lt;/a&gt; and should not be used to add a left margin, that would affect also the links in the publish box increasing the spacing a bit too much, see screenshot below:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/_qBYximv9T.png"&gt;&lt;img src="https://cldup.com/_qBYximv9T.png" alt="https://cldup.com/_qBYximv9T.png" crossorigin="anonymous" title="https://cldup.com/_qBYximv9T.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Not sure why it is used in the Comment Moderation screen, probably should be removed. Personally, since a primary button is supposed to be unique in a page (because there should be just one primary action), I'd go with something like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;.update-php .button.button-primary {
	margin-right: 1em;
}
&lt;/pre&gt;&lt;p&gt;
and I'd remove the &lt;code&gt;button-cancel&lt;/code&gt; class added on the links, which also makes the patch simpler and cleaner.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19629 (return option for media_sideload_image) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 30 Aug 2016 12:38:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19629#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19629#comment:27/1472560712110652</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by kevinwhoffman. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1472560710000003"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37762 (cache_results parameter doesn't prevent queried posts from being added ...) updated</title>
      
        <dc:creator>Dang Vu</dc:creator>

      <pubDate>Tue, 30 Aug 2016 12:21:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37762#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37762#comment:4/1472559662199666</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37762#comment:3" title="Comment 3"&gt;achbed&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What's interesting is that the individual posts are loaded and cached to the object cache individually, but the combined query result is what is controlled via the &lt;code&gt;cache_results&lt;/code&gt; parameter. This seems to meet the defined parameter intent because it's not caching the full result of the query.  If the posts themselves change enough that you can't use object caching I'd be truly surprised.
&lt;/p&gt;
&lt;p&gt;
If you want to prevent the posts themselves from caching, that appears to be a different request and intent.  Maybe an additional &lt;code&gt;cache_posts&lt;/code&gt; parameter to control that piece of the caching puzzle?
&lt;/p&gt;
&lt;p&gt;
We should update the docs at the very least to explain this behavior.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You're right! The usage of the &lt;code&gt;cache_results&lt;/code&gt; parameter is unclear. A ticket for &lt;code&gt;cache_posts&lt;/code&gt; parameter looks promising.
Honestly, I don't understand why WordPress needs to add queried posts to both the &lt;code&gt;WP_Query::posts&lt;/code&gt; and the cache since they only exist in a single page load.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37800 (Close "link rel" dns-prefetch tag) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Tue, 30 Aug 2016 12:09:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37800#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37800#comment:10/1472558989883529</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38443" title="Script Loader: Close the `&amp;lt;link&amp;gt;` tag in `wp_resource_hints()`.
Props ..."&gt;[38443]&lt;/a&gt; is causing &lt;a class="ext-link" href="https://travis-ci.org/aaronjorbin/develop.wordpress/jobs/156191351#L379"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;unit tests to fail&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36430 (Style links on Installing plugin page) updated</title>
      
        <dc:creator>curdin</dc:creator>

      <pubDate>Tue, 30 Aug 2016 11:25:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36430#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36430#comment:10/1472556342560495</guid>
      <description>&lt;p&gt;
Thanks @afercia - I made it consistent with &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36380" title="#36380: defect (bug): Moderate Comment screen no longer displays raw content (closed: fixed)"&gt;#36380&lt;/a&gt; . I'm keen on any thoughts on the selector used to add the 1em spacing, there aren't any selectors to make the style more specific to that screen unless we add an additional class to it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37507 (Can't delete empty line between visual shortcodes.) updated</title>
      
        <dc:creator>NickDuncan</dc:creator>

      <pubDate>Tue, 30 Aug 2016 11:24:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37507#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37507#comment:4/1472556266837983</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>36430.3.diff attached to Ticket #36430</title>
      
        <dc:creator>curdin</dc:creator>

      <pubDate>Tue, 30 Aug 2016 11:22:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36430/36430.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36430/36430.3.diff/1472556167145079</guid>
      <description>&lt;p&gt;
Adds spacing to link
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 30 Aug 2016 11:22:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:133</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:133/1472556140754142</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by schlessera. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472556137000325"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37864 (No shiny update when updating a plugin in a non-English site) updated</title>
      
        <dc:creator>luisrull</dc:creator>

      <pubDate>Tue, 30 Aug 2016 11:21:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37864#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37864#comment:8/1472556111828916</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37864#comment:6" title="Comment 6"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Fixed also in &lt;a class="ext-link" href="https://translate.wordpress.org/projects/wp/dev/admin/es/default?filters[status]=either&amp;amp;filters[original_id]=40442&amp;amp;filters[translation_id]=44829960"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://translate.wordpress.org/projects/wp/dev/admin/es/default?filters[status]=either&amp;amp;filters[original_id]=40442&amp;amp;filters[translation_id]=44829960&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37864#comment:4" title="Comment 4"&gt;johnbillion&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This appears to be an issue with the Spanish translation. It's missing the &lt;code&gt;%6$s&lt;/code&gt; placeholder which adds the &lt;code&gt;update-link&lt;/code&gt; class attribute which the shiny updater uses.
&lt;/p&gt;
&lt;p&gt;
There's &lt;a class="ext-link" href="https://translate.wordpress.org/projects/wp/dev/es/default?filters%5Bterm%5D=There+is+a+new+version&amp;amp;filters%5Bstatus%5D=either"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;no translation listed on translate.wordpress.org&lt;/a&gt; for the phrase
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It's in the &lt;a class="ext-link" href="https://translate.wordpress.org/projects/wp/dev/admin/es/default?filters%5Bterm%5D=There+is+a+new+version&amp;amp;filters%5Bstatus%5D=either"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;admin project&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
@luisrull or @bi0xid, could you change &lt;code&gt;title="%3$s"&lt;/code&gt; to &lt;code&gt;%3$s&lt;/code&gt; and add the missing &lt;code&gt;%6$s&lt;/code&gt; placeholder?
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37880 (External Plugins On TeenyMCE) created</title>
      
        <dc:creator>dylancb</dc:creator>

      <pubDate>Tue, 30 Aug 2016 11:20:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37880</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37880/1472556022853418</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
I have tried to add an external plugin to TeenyMCE but it seems that it's not possible as if teeny is set in the wp-editor class, the external plugins script doesn't get loaded.
&lt;/p&gt;
&lt;p&gt;
Is there any way this can be achieved, and if not could you add an action or the external plugins to the wp-editor for TeenyMCE, as well as Tiny.
&lt;/p&gt;
&lt;p&gt;
Thanks
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37800 (Close "link rel" dns-prefetch tag) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 30 Aug 2016 11:19:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37800#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37800#comment:9/1472555991625165</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37800 (Close "link rel" dns-prefetch tag) reopened</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 30 Aug 2016 11:19:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37800#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37800#comment:8/1472555981655142</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Tue, 30 Aug 2016 11:19:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:132</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:132/1472555980033981</guid>
      <description>&lt;p&gt;
I added a diff that shows how the custom autoloader plugin is used.
&lt;/p&gt;
&lt;p&gt;
Some notes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;When &lt;code&gt;case-sensitive&lt;/code&gt; is set to false, both generated class maps and the class loader will run the class name through &lt;code&gt;mb_strtolower&lt;/code&gt;. This could be changed to use the faster &lt;code&gt;strtolower&lt;/code&gt;, in case MB support is not needed.
&lt;/li&gt;&lt;li&gt;The &lt;code&gt;ABSPATH&lt;/code&gt; constant needs to be set before the autoloader is included, otherwise the class map is broken.
&lt;/li&gt;&lt;li&gt;This is not a final implementation, but rather a quick first version to show that Composer is flexible enough to adapt to any requirements. The code can still be optimized, and the project can also be properly integrated into WP codebase (runs off my personal GitHub account right now).
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37507.patch attached to Ticket #37507</title>
      
        <dc:creator>NickDuncan</dc:creator>

      <pubDate>Tue, 30 Aug 2016 11:19:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37507/37507.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37507/37507.patch/1472555961604188</guid>
      <description>&lt;p&gt;
Modified tinymce.js to suit the changes made in the commit on &lt;a class="ext-link" href="https://github.com/tinymce/tinymce/commit/68d6c78ff14c038d40c791b7940d87e731d90fc3"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/tinymce/tinymce/commit/68d6c78ff14c038d40c791b7940d87e731d90fc3&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37800 (Close "link rel" dns-prefetch tag) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 30 Aug 2016 11:19:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37800#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37800#comment:7/1472555954234421</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38443" title="Script Loader: Close the `&amp;lt;link&amp;gt;` tag in `wp_resource_hints()`.
Props ..."&gt;38443&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Script Loader: Close the &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; tag in &lt;code&gt;wp_resource_hints()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props Chaos Engine.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37800" title="#37800: defect (bug): Close &amp;#34;link rel&amp;#34; dns-prefetch tag (closed: fixed)"&gt;#37800&lt;/a&gt; for trunk.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38443]: Script Loader: Close the `` tag in `wp_resource_hints()`.  Props ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 30 Aug 2016 11:19:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38443</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38443/1472555953272075</guid>
      <description>&lt;p&gt;
Script Loader: Close the &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; tag in &lt;code&gt;wp_resource_hints()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props Chaos Engine.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37800" title="#37800: defect (bug): Close &amp;#34;link rel&amp;#34; dns-prefetch tag (closed: fixed)"&gt;#37800&lt;/a&gt; for trunk.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37864 (No shiny update when updating a plugin in a non-English site) updated</title>
      
        <dc:creator>luisrull</dc:creator>

      <pubDate>Tue, 30 Aug 2016 11:18:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37864#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37864#comment:7/1472555924174093</guid>
      <description>&lt;p&gt;
Fixed in &lt;a class="ext-link" href="https://translate.wordpress.org/projects/wp/dev/admin/es/default?filters[status]=either&amp;amp;filters[original_id]=40657&amp;amp;sort[by]=translation_date_added&amp;amp;sort[how]=asc"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://translate.wordpress.org/projects/wp/dev/admin/es/default?filters[status]=either&amp;amp;filters[original_id]=40657&amp;amp;sort[by]=translation_date_added&amp;amp;sort[how]=asc&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36335-custom-autoloader-plugin.diff attached to Ticket #36335</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Tue, 30 Aug 2016 11:14:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36335/36335-custom-autoloader-plugin.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36335/36335-custom-autoloader-plugin.diff/1472555668360960</guid>
      <description>&lt;p&gt;
Using custom WordPress-specific autoloader plugin.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Tue, 30 Aug 2016 11:09:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:131</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:131/1472555396425962</guid>
      <description>&lt;p&gt;
As already mentioned in Slack, I have created a custom WordPress autoloader generator and class loader that can be adapted to meet very specific WordPress needs: &lt;a class="ext-link" href="https://github.com/schlessera/composer-wp-autoload"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/schlessera/composer-wp-autoload&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The code is not brilliant, as I am a bit pressed for time right now, and I have re-used large parts of the &lt;code&gt;xrstf/composer52&lt;/code&gt; package. I intend to further clean it up in the coming days, though.
&lt;/p&gt;
&lt;p&gt;
Main features that differ from standard Composer autoloader (taken from &lt;code&gt;README.md&lt;/code&gt; file):
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The generated autoloader is compatible with PHP 5.2. Classes containing PHP 5.3+ code will be skipped and throw warnings.
&lt;/li&gt;&lt;li&gt;The paths to the classes are relative to a set constant. The default constant being used is &lt;code&gt;ABSPATH&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;The class maps can optionally be configured to be case-insensitive.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Regarding the case-insensitivity, I would recommend against using that, as the case-sensitivity just points to potential latent bugs. However, I provide the functionality as an optional setting nevertheless, as I wouldn't want the inclusion of an autoloader to be blocked because of minor case mismatches.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37864 (No shiny update when updating a plugin in a non-English site) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 30 Aug 2016 11:06:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37864#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37864#comment:6/1472555178132033</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37864#comment:4" title="Comment 4"&gt;johnbillion&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This appears to be an issue with the Spanish translation. It's missing the &lt;code&gt;%6$s&lt;/code&gt; placeholder which adds the &lt;code&gt;update-link&lt;/code&gt; class attribute which the shiny updater uses.
&lt;/p&gt;
&lt;p&gt;
There's &lt;a class="ext-link" href="https://translate.wordpress.org/projects/wp/dev/es/default?filters%5Bterm%5D=There+is+a+new+version&amp;amp;filters%5Bstatus%5D=either"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;no translation listed on translate.wordpress.org&lt;/a&gt; for the phrase
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It's in the &lt;a class="ext-link" href="https://translate.wordpress.org/projects/wp/dev/admin/es/default?filters%5Bterm%5D=There+is+a+new+version&amp;amp;filters%5Bstatus%5D=either"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;admin project&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
@luisrull or @bi0xid, could you change &lt;code&gt;title="%3$s"&lt;/code&gt; to &lt;code&gt;%3$s&lt;/code&gt; and add the missing &lt;code&gt;%6$s&lt;/code&gt; placeholder?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>user-issue.png attached to Ticket #37879</title>
      
        <dc:creator>Aamir.cs</dc:creator>

      <pubDate>Tue, 30 Aug 2016 10:54:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37879/user-issue.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37879/user-issue.png/1472554481582319</guid>
      <description>&lt;p&gt;
Logged in user issue at author.php
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37879 (On author.php page is_user_logged_in() return issue) created</title>
      
        <dc:creator>Aamir.cs</dc:creator>

      <pubDate>Tue, 30 Aug 2016 10:53:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37879</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37879/1472554433986280</guid>
      <description>&lt;p&gt;
Hello,
&lt;/p&gt;
&lt;p&gt;
We are Theme development team. We faced a problem during the development of theme. Issue is at author.php is_user_logged_in() does not work properly. When we logged in and check is_user_logged_in() function at author.php its return "true" its OK, But when we logged out then still its return "true".
&lt;/p&gt;
&lt;p&gt;
And Second is
&lt;/p&gt;
&lt;p&gt;
We are developing a users based directory and we need author.php for user detail page. Example there are two users USER-A with ID-330 and USER-B with ID-331, and USER-A is logged in when USER-A reached USER-B detail page(on author.php) and check get_current_user_id() it returns us 331. It returns current user ID not logged in user ID.
&lt;/p&gt;
&lt;p&gt;
I think there should be a session which store current logged in user. And on author.php it should not overridden with current user ID.
&lt;/p&gt;
&lt;p&gt;
It is very critical issue while developing a user base website. Other way can be a custom templates for user but i think it would not be a best practice.
&lt;/p&gt;
&lt;p&gt;
We are waiting your kind response.
&lt;/p&gt;
&lt;p&gt;
Thank You
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36678 (Shift-click in Customizer when collapsed does nothing) updated</title>
      
        <dc:creator>curdin</dc:creator>

      <pubDate>Tue, 30 Aug 2016 10:36:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36678#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36678#comment:7/1472553377585393</guid>
      <description>&lt;p&gt;
Thanks for the feedback folks. The new patch has a brighter outlook on life with the collapsed state now being called paneVisible. I have also added the opening trigger to the widget and menu shift-click action.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36678.2.diff attached to Ticket #36678</title>
      
        <dc:creator>curdin</dc:creator>

      <pubDate>Tue, 30 Aug 2016 10:34:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36678/36678.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36678/36678.2.diff/1472553253727034</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37523 (Unit tests: Move classes out of includes/functions.php into their own file) updated</title>
      
        <dc:creator>DylanAuty</dc:creator>

      <pubDate>Tue, 30 Aug 2016 10:23:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37523#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37523#comment:8/1472552629452145</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37523#comment:7" title="Comment 7"&gt;Frank Klein&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think it would be cleaner to load the files during the bootstrap process, instead of including them in &lt;code&gt;functions.php&lt;/code&gt;. Nothing in this file relies on the two classes, but the tests do.
&lt;/p&gt;
&lt;p&gt;
There's a small typo in the patch. It's in the word &lt;em&gt;UnitTests&lt;/em&gt; in the documentation header of &lt;code&gt;class-basic-object.php&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks for pointing that out. I have revised my patch and submitted it.
&lt;/p&gt;
&lt;p&gt;
Apologies for the typo on that one.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37523.2.patch attached to Ticket #37523</title>
      
        <dc:creator>DylanAuty</dc:creator>

      <pubDate>Tue, 30 Aug 2016 10:22:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37523/37523.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37523/37523.2.patch/1472552561893861</guid>
      <description>&lt;p&gt;
New Revision of the previous patch file I submitted. With the changes suggested by @Frank Klein. I moved the including of the classes to the bootstrap.php file instead. Below the inclusion of the funtions.php file as no reference is made to the classes up to this point. Did not test this, however it seems like the revision would run as expected
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36430 (Style links on Installing plugin page) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 30 Aug 2016 10:10:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36430#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36430#comment:9/1472551813290838</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36430#comment:7" title="Comment 7"&gt;curdin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
is there a pattern for spacing these a bit more?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not sure there is an established pattern, but a similar issue was recently discussed about the Comment Moderation screen, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36380" title="#36380: defect (bug): Moderate Comment screen no longer displays raw content (closed: fixed)"&gt;#36380&lt;/a&gt; where the spacing is about 1em (the link has also a 5px padding, not sure it's really necessary).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37523 (Unit tests: Move classes out of includes/functions.php into their own file) updated</title>
      
        <dc:creator>Frank Klein</dc:creator>

      <pubDate>Tue, 30 Aug 2016 10:03:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37523#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37523#comment:7/1472551414009790</guid>
      <description>&lt;p&gt;
I think it would be cleaner to load the files during the bootstrap process, instead of including them in &lt;code&gt;functions.php&lt;/code&gt;. Nothing in this file relies on the two classes, but the tests do.
&lt;/p&gt;
&lt;p&gt;
There's a small typo in the patch. It's in the word &lt;em&gt;UnitTests&lt;/em&gt; in the documentation header of &lt;code&gt;class-basic-object.php&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37878 (Post filtering and use of Quick Edit) created</title>
      
        <dc:creator>ShaneJones</dc:creator>

      <pubDate>Tue, 30 Aug 2016 09:51:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37878</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37878/1472550704433251</guid>
      <description>&lt;p&gt;
Assuming I have a draft post I want to quickly publish.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I head to the Posts page.
&lt;/li&gt;&lt;li&gt;I click on Draft above the list of posts,
&lt;/li&gt;&lt;li&gt;I then click on Quick Edit,
&lt;/li&gt;&lt;li&gt;Change the Post Status to Publish and Click update,
&lt;/li&gt;&lt;li&gt;The Post Status will now be updated although it still appears on this list.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
A more expected result would be to remove / hide this post on update and also update the numbers of each status using AJAX.
&lt;/p&gt;
&lt;p&gt;
This also happens when changing to any other Post Status and includes Pages and Custom Post Types.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36697 (Combining the HTTP requests for obtaining the available nav menu items ...) updated</title>
      
        <dc:creator>curdin</dc:creator>

      <pubDate>Tue, 30 Aug 2016 09:30:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36697#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36697#comment:7/1472549415093663</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@westonruter See above for the refreshed patch. I just got a whole lot better at fixing git merge conflicts :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36697.2.diff attached to Ticket #36697</title>
      
        <dc:creator>curdin</dc:creator>

      <pubDate>Tue, 30 Aug 2016 09:29:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36697/36697.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36697/36697.2.diff/1472549351404972</guid>
      <description>&lt;p&gt;
Refreshed patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37696 (WP_Comment_Query loses sql_clauses with Object Cache) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 30 Aug 2016 08:16:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37696#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37696#comment:19/1472544990087707</guid>
      <description>&lt;p&gt;
Any update on this? The patch seems to resolve the issue and it should go into trunk rather sooner than later to be considered for 4.6.1.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37864 (No shiny update when updating a plugin in a non-English site) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Tue, 30 Aug 2016 08:15:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37864#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37864#comment:5/1472544946759957</guid>
      <description>&lt;p&gt;
Tagging/Pinging the Spainish translation team:  #es_ES
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37680 (PHP Warning: ini_get_all() has been disabled for security reasons) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 30 Aug 2016 08:03:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37680#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37680#comment:19/1472544204216910</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37680#comment:18" title="Comment 18"&gt;jeremyfelt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37680#comment:17" title="Comment 17"&gt;jdgrimes&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@dd32 &lt;code&gt;function_exists()&lt;/code&gt; &lt;a class="ext-link" href="https://secure.php.net/manual/en/function.function-exists.php#refsect1-function.function-exists-notes"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;doesn't detect disabled functions&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;strong&gt;Note:&lt;/strong&gt;
A function name may exist even if the function itself is unusable due to configuration or compiling options (with the image functions being an example).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;code&gt;function_exists()&lt;/code&gt; returns false for functions disabled through &lt;code&gt;disable_function&lt;/code&gt; in php.ini.
&lt;/p&gt;
&lt;p&gt;
Via the discussion on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26772" title="#26772: enhancement: Permalinks settings page is blank as access to phpinfo() is denied (closed: fixed)"&gt;#26772&lt;/a&gt;, it seems like it's possible for a false positive when using suhosin config to disable. We added an additional check for &lt;code&gt;ini_get( 'disable_functions' )&lt;/code&gt; in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29330" title="Make sure phpinfo() is not disabled before calling it in ..."&gt;[29330]&lt;/a&gt;, but I'm not sure how that works with suhosin anyway, which uses the option &lt;code&gt;suhosin.executor.func.blacklist&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
It may be that we've done just fine with &lt;code&gt;function_exists()&lt;/code&gt; on it's own beyond that one bug report, but I may also not understand a piece.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Technically you're right, personally though, I don't want to perform silly work arounds like that. I'm fine with a server which uses a hardening extension to disable a safe function throwing warnings.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37770-wp_enqueue_script.diff attached to Ticket #37770</title>
      
        <dc:creator>Frank Klein</dc:creator>

      <pubDate>Tue, 30 Aug 2016 08:01:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37770/37770-wp_enqueue_script.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37770/37770-wp_enqueue_script.diff/1472544102972180</guid>
      <description>&lt;p&gt;
Corrects type of &lt;code&gt;$src&lt;/code&gt; parameter of &lt;code&gt;wp_enqueue_script()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37755 (Visual Editor: Weird unicode (vietnamese) characters display on ...) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Tue, 30 Aug 2016 07:47:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37755#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37755#comment:17/1472543233122810</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I agree, this is small enough and high enough impact to include in 4.6.1.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37689 (Issues with utf8mb4 collation and the 4.6 update) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Tue, 30 Aug 2016 07:41:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37689#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37689#comment:22/1472542872229138</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38442" title="Database: Don't force an unsupported character set that previously ..."&gt;38442&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Database: Don't force an unsupported character set that previously would've silently failed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37320" title="Database: Set MySQL connection collation.
Fixes #36649.
"&gt;[37320]&lt;/a&gt; corrected some behaviour in how PHP and MySQL character sets are matched up. This was correct, but had the side effect of causing some incorrectly configured sites to start failing.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Prior to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37320" title="Database: Set MySQL connection collation.
Fixes #36649.
"&gt;[37320]&lt;/a&gt;, if &lt;code&gt;DB_CHARSET&lt;/code&gt; was set to &lt;code&gt;utf8mb4&lt;/code&gt;, but the PHP version didn't support &lt;code&gt;utf8mb4&lt;/code&gt;, it would fall back to the default character set - usually &lt;code&gt;latin1&lt;/code&gt;. After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37320" title="Database: Set MySQL connection collation.
Fixes #36649.
"&gt;[37320]&lt;/a&gt;, the &lt;code&gt;SET NAMES&lt;/code&gt; query would force MySQL to treat the connection character set as &lt;code&gt;utf8mb4&lt;/code&gt;, even if PHP wasn't able to understand it.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
By checking if &lt;code&gt;mysqli_set_charset()&lt;/code&gt; succeeded, we can simulate the old behaviour, while maintaining the fix in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37320" title="Database: Set MySQL connection collation.
Fixes #36649.
"&gt;[37320]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38441" title="Database: Don't force an unsupported character set that previously ..."&gt;[38441]&lt;/a&gt; to the 4.6 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props danielkanchev fo helping to diagnose this issue.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37689" title="#37689: defect (bug): Issues with utf8mb4 collation and the 4.6 update (closed: fixed)"&gt;#37689&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38442]: Database: Don't force an unsupported character set that previously ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Tue, 30 Aug 2016 07:41:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38442</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38442/1472542871611047</guid>
      <description>&lt;p&gt;
Database: Don't force an unsupported character set that previously would've silently failed.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37320" title="Database: Set MySQL connection collation.
Fixes #36649.
"&gt;[37320]&lt;/a&gt; corrected some behaviour in how PHP and MySQL character sets are matched up. This was correct, but had the side effect of causing some incorrectly configured sites to start failing.
&lt;/p&gt;
&lt;p&gt;
Prior to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37320" title="Database: Set MySQL connection collation.
Fixes #36649.
"&gt;[37320]&lt;/a&gt;, if &lt;code&gt;DB_CHARSET&lt;/code&gt; was set to &lt;code&gt;utf8mb4&lt;/code&gt;, but the PHP version didn't support &lt;code&gt;utf8mb4&lt;/code&gt;, it would fall back to the default character set - usually &lt;code&gt;latin1&lt;/code&gt;. After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37320" title="Database: Set MySQL connection collation.
Fixes #36649.
"&gt;[37320]&lt;/a&gt;, the &lt;code&gt;SET NAMES&lt;/code&gt; query would force MySQL to treat the connection character set as &lt;code&gt;utf8mb4&lt;/code&gt;, even if PHP wasn't able to understand it.
&lt;/p&gt;
&lt;p&gt;
By checking if &lt;code&gt;mysqli_set_charset()&lt;/code&gt; succeeded, we can simulate the old behaviour, while maintaining the fix in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37320" title="Database: Set MySQL connection collation.
Fixes #36649.
"&gt;[37320]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38441" title="Database: Don't force an unsupported character set that previously ..."&gt;[38441]&lt;/a&gt; to the 4.6 branch.
&lt;/p&gt;
&lt;p&gt;
Props danielkanchev fo helping to diagnose this issue.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37689" title="#37689: defect (bug): Issues with utf8mb4 collation and the 4.6 update (closed: fixed)"&gt;#37689&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37689 (Issues with utf8mb4 collation and the 4.6 update) reopened</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Tue, 30 Aug 2016 07:38:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37689#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37689#comment:21/1472542725346468</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #37689 (Issues with utf8mb4 collation and the 4.6 update) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Tue, 30 Aug 2016 07:38:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37689#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37689#comment:20/1472542680386064</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38441" title="Database: Don't force an unsupported character set that previously ..."&gt;38441&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Database: Don't force an unsupported character set that previously would've silently failed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37320" title="Database: Set MySQL connection collation.
Fixes #36649.
"&gt;[37320]&lt;/a&gt; corrected some behaviour in how PHP and MySQL character sets are matched up. This was correct, but had the side effect of causing some incorrectly configured sites to start failing.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Prior to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37320" title="Database: Set MySQL connection collation.
Fixes #36649.
"&gt;[37320]&lt;/a&gt;, if &lt;code&gt;DB_CHARSET&lt;/code&gt; was set to &lt;code&gt;utf8mb4&lt;/code&gt;, but the PHP version didn't support &lt;code&gt;utf8mb4&lt;/code&gt;, it would fall back to the default character set - usually &lt;code&gt;latin1&lt;/code&gt;. After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37320" title="Database: Set MySQL connection collation.
Fixes #36649.
"&gt;[37320]&lt;/a&gt;, the &lt;code&gt;SET NAMES&lt;/code&gt; query would force MySQL to treat the connection character set as &lt;code&gt;utf8mb4&lt;/code&gt;, even if PHP wasn't able to understand it.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
By checking if &lt;code&gt;mysqli_set_charset()&lt;/code&gt; succeeded, we can simulate the old behaviour, while maintaining the fix in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37320" title="Database: Set MySQL connection collation.
Fixes #36649.
"&gt;[37320]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props danielkanchev fo helping to diagnose this issue.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37689" title="#37689: defect (bug): Issues with utf8mb4 collation and the 4.6 update (closed: fixed)"&gt;#37689&lt;/a&gt; for trunk.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38441]: Database: Don't force an unsupported character set that previously ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Tue, 30 Aug 2016 07:37:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38441</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38441/1472542679888292</guid>
      <description>&lt;p&gt;
Database: Don't force an unsupported character set that previously would've silently failed.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37320" title="Database: Set MySQL connection collation.
Fixes #36649.
"&gt;[37320]&lt;/a&gt; corrected some behaviour in how PHP and MySQL character sets are matched up. This was correct, but had the side effect of causing some incorrectly configured sites to start failing.
&lt;/p&gt;
&lt;p&gt;
Prior to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37320" title="Database: Set MySQL connection collation.
Fixes #36649.
"&gt;[37320]&lt;/a&gt;, if &lt;code&gt;DB_CHARSET&lt;/code&gt; was set to &lt;code&gt;utf8mb4&lt;/code&gt;, but the PHP version didn't support &lt;code&gt;utf8mb4&lt;/code&gt;, it would fall back to the default character set - usually &lt;code&gt;latin1&lt;/code&gt;. After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37320" title="Database: Set MySQL connection collation.
Fixes #36649.
"&gt;[37320]&lt;/a&gt;, the &lt;code&gt;SET NAMES&lt;/code&gt; query would force MySQL to treat the connection character set as &lt;code&gt;utf8mb4&lt;/code&gt;, even if PHP wasn't able to understand it.
&lt;/p&gt;
&lt;p&gt;
By checking if &lt;code&gt;mysqli_set_charset()&lt;/code&gt; succeeded, we can simulate the old behaviour, while maintaining the fix in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37320" title="Database: Set MySQL connection collation.
Fixes #36649.
"&gt;[37320]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Props danielkanchev fo helping to diagnose this issue.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37689" title="#37689: defect (bug): Issues with utf8mb4 collation and the 4.6 update (closed: fixed)"&gt;#37689&lt;/a&gt; for trunk.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37689 (Issues with utf8mb4 collation and the 4.6 update) updated</title>
      
        <dc:creator>danielkanchev</dc:creator>

      <pubDate>Tue, 30 Aug 2016 07:21:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37689#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37689#comment:19/1472541661896189</guid>
      <description>&lt;p&gt;
@pento I tested the provided patch and everything works with WP 4.6 + PHP 5.3 and DB_CHARSET set to utf8mb4 on the test site.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37683 ($collate and $charset can be undefined in wpdb::init_charset()) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Tue, 30 Aug 2016 07:16:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37683#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37683#comment:14/1472541397638792</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38440" title="Database: Ensure that variables are defined correctly.
There were ..."&gt;38440&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Database: Ensure that variables are defined correctly.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
There were some cases where some local variables in &lt;code&gt;wpdb::init_charset()&lt;/code&gt; could be undefined when they were used.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38439" title="Database: Ensure that variables are defined correctly.
There were ..."&gt;[38439]&lt;/a&gt; to the 4.6 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props Frozzare.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37683" title="#37683: defect (bug): $collate and $charset can be undefined in wpdb::init_charset() (closed: fixed)"&gt;#37683&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38440]: Database: Ensure that variables are defined correctly.  There were ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Tue, 30 Aug 2016 07:16:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38440</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38440/1472541396796626</guid>
      <description>&lt;p&gt;
Database: Ensure that variables are defined correctly.
&lt;/p&gt;
&lt;p&gt;
There were some cases where some local variables in &lt;code&gt;wpdb::init_charset()&lt;/code&gt; could be undefined when they were used.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38439" title="Database: Ensure that variables are defined correctly.
There were ..."&gt;[38439]&lt;/a&gt; to the 4.6 branch.
&lt;/p&gt;
&lt;p&gt;
Props Frozzare.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37683" title="#37683: defect (bug): $collate and $charset can be undefined in wpdb::init_charset() (closed: fixed)"&gt;#37683&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37683 ($collate and $charset can be undefined in wpdb::init_charset()) reopened</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Tue, 30 Aug 2016 07:14:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37683#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37683#comment:13/1472541299765799</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #37683 ($collate and $charset can be undefined in wpdb::init_charset()) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Tue, 30 Aug 2016 07:13:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37683#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37683#comment:12/1472541212475232</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38439" title="Database: Ensure that variables are defined correctly.
There were ..."&gt;38439&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Database: Ensure that variables are defined correctly.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
There were some cases where some local variables in &lt;code&gt;wpdb::init_charset()&lt;/code&gt; could be undefined when they were used.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props Frozzare.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37683" title="#37683: defect (bug): $collate and $charset can be undefined in wpdb::init_charset() (closed: fixed)"&gt;#37683&lt;/a&gt; for trunk.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38439]: Database: Ensure that variables are defined correctly.  There were ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Tue, 30 Aug 2016 07:13:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38439</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38439/1472541211945095</guid>
      <description>&lt;p&gt;
Database: Ensure that variables are defined correctly.
&lt;/p&gt;
&lt;p&gt;
There were some cases where some local variables in &lt;code&gt;wpdb::init_charset()&lt;/code&gt; could be undefined when they were used.
&lt;/p&gt;
&lt;p&gt;
Props Frozzare.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37683" title="#37683: defect (bug): $collate and $charset can be undefined in wpdb::init_charset() (closed: fixed)"&gt;#37683&lt;/a&gt; for trunk.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37877 (Conversion of quotation marks in wp_add_inline_script() results in ...) created</title>
      
        <dc:creator>dboulet</dc:creator>

      <pubDate>Tue, 30 Aug 2016 07:12:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37877</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37877/1472541155529567</guid>
      <description>&lt;p&gt;
A string containing JavaScript which is passed to wp_add_inline_script() is sometimes rendered invalid when strings within it contain quotation marks. As an example:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;wp_add_inline_script&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'jquery-ui-datepicker'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'"Aujourd\'hui";'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
will output the following:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;script&amp;gt;
"Aujourd"hui";
&amp;lt;/script&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Interestingly, reversing the quotation marks results in the same output:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;wp_add_inline_script&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'jquery-ui-datepicker'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"'Aujourd&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;hui';"&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
also gives:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;script&amp;gt;
"Aujourd"hui";
&amp;lt;/script&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Either way, valid JavaScript is passed in, and invalid scripts are spit out. Anyone know what is going on?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37689 (Issues with utf8mb4 collation and the 4.6 update) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Tue, 30 Aug 2016 07:08:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37689#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37689#comment:18/1472540896335976</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@danielkanchev: Could I get you to test &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37689/37689.diff" title="Attachment '37689.diff' in Ticket #37689"&gt;37689.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37689/37689.diff" title="Download"&gt;​&lt;/a&gt; with WordPress 4.6 and PHP 5.3, with &lt;code&gt;DB_CHARSET&lt;/code&gt; set to &lt;code&gt;utf8mb4&lt;/code&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37689.diff attached to Ticket #37689</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Tue, 30 Aug 2016 07:06:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37689/37689.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37689/37689.diff/1472540818399818</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37689 (Issues with utf8mb4 collation and the 4.6 update) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Tue, 30 Aug 2016 06:57:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37689#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37689#comment:17/1472540242346401</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thank you @danielkanchev for the use of your server. :-)
&lt;/p&gt;
&lt;p&gt;
The root cause of this problem in @danielkanchev's case was &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37320" title="Database: Set MySQL connection collation.
Fixes #36649.
"&gt;[37320]&lt;/a&gt;, and PHP 5.3. While the site was on WordPress 4.5, it was using PHP 5.3, which &lt;em&gt;doesn't&lt;/em&gt; support &lt;code&gt;utf8mb4&lt;/code&gt;. Because &lt;code&gt;DB_CHARSET&lt;/code&gt; was set to &lt;code&gt;utf8mb4&lt;/code&gt;, &lt;code&gt;wpdb::set_charset()&lt;/code&gt; was silently failing, and reverting back to the default server character set - &lt;code&gt;latin1&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
The upgrade to WordPress 4.6 included &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37320" title="Database: Set MySQL connection collation.
Fixes #36649.
"&gt;[37320]&lt;/a&gt;, which sets the server side character set, but it assumes that the client side character set has been set correctly. This caused MySQL to be taking &lt;code&gt;latin1&lt;/code&gt; strings from the database, and converting them to &lt;code&gt;utf8&lt;/code&gt; before sending them to PHP. PHP was treating them as &lt;code&gt;latin1&lt;/code&gt;, however, hence the &lt;a class="ext-link" href="https://simple.wikipedia.org/wiki/Mojibake"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;mojibake&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I think we could reasonably check the result of the &lt;code&gt;mysqli_set_charset()&lt;/code&gt; before running the &lt;code&gt;SET NAMES&lt;/code&gt; query, as it's better to try and use the server default character sets for everything if part of the process fails.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37870 (Adding hints to login/registration form fields) updated</title>
      
        <dc:creator>davidbourguignon</dc:creator>

      <pubDate>Tue, 30 Aug 2016 06:54:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37870#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37870#comment:2/1472540061779587</guid>
      <description>&lt;p&gt;
Hi @GaryJ thanks for the quick feedback! The webpage you are referring to is unfortunately unreachable.
&lt;/p&gt;
&lt;p&gt;
Believe me, after two years dealing with a diverse crowd of subscribers, many computer-illiterate people do not understand what a "login" or "ID" or "identifier" is... They know what an "email address", a "name" or  "surname" is, though.
&lt;/p&gt;
&lt;p&gt;
Let me rephrase it this way: my proposal is not to add a placeholder (as the generated password on the reinit password page is), but simply a grayed-out hint in the field. You can write on top of it. This is quite a common way to give people info about how to fill a form field in.
&lt;/p&gt;
&lt;p&gt;
You will find some positive opinion about their usefulness &lt;a class="ext-link" href="https://www.drupal.org/node/223941"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;in a Drupal forum&lt;/a&gt;... :-)
&lt;/p&gt;
&lt;p&gt;
Alternatively, you could:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Put this hint in the text label of the form field, such as: "login (for example johnsmith) : &amp;lt;field&amp;gt;"
&lt;/li&gt;&lt;li&gt;Add a tooltip that pops up when the mouse is over the field
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Yes, I do agree: "Email" should be clarified by "Email address" (in fact, I am using the French version of WordPress and the i18n already clarified this in the translation). I have created &lt;a href="https://core.trac.wordpress.org/ticket/37876"&gt;another ticket&lt;/a&gt; for this.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37870#comment:1" title="Comment 1"&gt;GaryJ&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Thanks for the ticket @davidbourguignon.
&lt;/p&gt;
&lt;p&gt;
There's some suggestion that &lt;a class="ext-link" href="https://www.nngroup.com/articles/form-design-placeholders/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;placeholders are bad for accessibility&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Even those that are computer illiterate, I would expect them to understand the concept of logging in, probably even have logged in to other sites before. Adding in placeholder text may even confuse them more - "Why do I need to enter &lt;code&gt;johnsmith&lt;/code&gt; when my name is Gary Jones?"
&lt;/p&gt;
&lt;p&gt;
What I do think could be clarified, and it probably worth it's own ticket, is changing "Email" to "Email Address".
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #37871,​37876 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 30 Aug 2016 06:54:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=37871%2C37876</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=37871%2C37876/1472540043852723</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37871" title="#37871: enhancement: Clarify Login Label (Email Address) (closed: fixed)"&gt;#37871&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #37876 (Replacing "Email" by "Email address" in login/registration form text labels) created</title>
      
        <dc:creator>davidbourguignon</dc:creator>

      <pubDate>Tue, 30 Aug 2016 06:53:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37876</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37876/1472539985340007</guid>
      <description>&lt;p&gt;
Replacing "Email" by "Email address" in login/registration form text labels will clarify what is expected from users.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Tue, 30 Aug 2016 06:49:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:130</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:130/1472539754178116</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:123" title="Comment 123"&gt;jorbin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If speed is going to be used as an argument towards this, we need something that demonstrates it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It is too early to run any benchmarks. Conversion has barely started, which will only lay the groundwork. Right now, there's a large chance that the loading with the autoloader will include the exact same set of classes as before. Once the conversion to an autoloader has been made, there's lots of optimization opportunities. Only after doing these will we see an improvement. Also, some scenarios like AJAX calls will offer more optmization potential then others.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:124" title="Comment 124"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Having "pluggable" classes in WordPress is out of the question.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As most objects are passed around through globals, you already have "pluggable" objects either way.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@schlessera, @flixos90, @flixos90 not sure how well you know the WordPress codebase but there is a thing called "pluggable.php". As far as I know this is a left-over from forking b2 14 years ago that wasn't fixed/removed in time. This is probably the worst architectural decision ever. Why would you want to extend it? :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, I know that "thing" and also commented on it. There's a fundamental difference here. The original "pluggable.php" was a mechanism where developers &lt;strong&gt;were meant to replace&lt;/strong&gt; core parts, and it was badly designed to fulfil that purpose. Here, we developers &lt;strong&gt;are not meant to replace&lt;/strong&gt; classes, and the possibility to do so nevertheless is just part of the language. You can't make the fact go away that bad coders will do bad things. If they intend to replace a class, they will do it, with or without autoloader.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I agree. Autoloading is great for classes. After a quick look through the code, about 80-100 of the 200 classes will always be loaded, and half of the rest would never be loaded together. So currently autoloading will affect maybe about 5% of the code. This is still good, that percent will increase in the future.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, this is the state of the current code. As there has not been an autoloader so far, the code is not optimized to make effective use of an autoloader. This is something that can be easily changed, though.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Not true. Plugins cannot replace any of the &lt;code&gt;required&lt;/code&gt; classes.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
They can replace pretty much any object that is stored in a global variable. They can overwrite Core files (on most systems). They can replace a lot of core functionality through hooks. And I'm sure they'll find even more creative ways to break stuff I wouldn't even think about. I agree that this is a problem that needs to be dealt with, but I don't see this as an argument for or against an autoloader. The issue of replacing core parts would ideally be dealt with by accepting that this is unavoidable, providing interfaces, and thus having contracts in place, which still allow plugins to replace parts, but define what behavior they need to adhere to to not break stuff.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Totally agree. As far as I see the way to proceed here is:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Make an experimental branch where all this can be tested and cleaned up before merging in core.
&lt;/li&gt;&lt;li&gt;Find a way to "lock down" core classes so they cannot be replaced by plugins. Think of this like having the &lt;code&gt;final&lt;/code&gt; keyword in class definitions. One possible way would be to have a custom autoloader that has a list of the core classes and doesn't do &lt;code&gt;class_exists()&lt;/code&gt; before loading any of them (and keeps some sort of state to test if they are already loaded).
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
That's not how an autoloader works. The autoloader does not do &lt;code&gt;class_exists()&lt;/code&gt; because it will only get invoked if it doesn't yet. If the class has already been defined, the autoloader will not even be triggered. If you want to lock down core classes, you need to let the code using them make a check to make sure they got the right one. You can only check the usage, not the creation. But I don't recommend this, it will only cause lots of trouble and horrible code, while still not being bullet-proof.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:127" title="Comment 127"&gt;jorbin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:125" title="Comment 125"&gt;afragen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
PHP 5.3 and namespacing sure seems like it would negate many of these potential issues.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
How?  Even with namespaces, a plugin could still include it's own version with whatever namespace we end up using.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, namespaces would not prevent explicit overriding of anything. But they would prevent accidental collisions, and that's what we should worry about.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:129" title="Comment 129"&gt;iamfriendly&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm not sure it's about catching/preventing all of the instances of someone doing it wrong. It's about setting a precedent and, possibly more importantly, setting expectations.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You set expectations through documentation, doc blocks, typehints and asserts, not by avoiding language constructs.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Ultimately, this has a potential to break a lot of things, very quickly and very badly. (Please note I am very pro this change, I'm just urging an abundance of caution). One mis-step can lead to developers going down a winding path without us really realising it. This can end badly for the user. (See the shortcodes API changes last year, which admittedly was a necessary change to a feature and this is more architectural, but the point stands).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The shortcodes API change broke the actual user content in the databases of the users. I don't think you can compare a code change that will have an incidence on future plugins with a change that breaks ten year old existing content. But I agree that cautionary tales are always there for a reason...
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There are currently many ways to override core pieces (in a doing_it_wrong fashion) but that doesn't mean we should simply ignore that and give developers another chance to shoot themselves and their users in the foot.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
How about giving them another chance to produce better code? Those who intend to produce quality code will be grateful for an autoloader.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm +1 for the addition of a branch which would allow us to really hammer this and see what breaks in a lot of scenarios. It (probably) means a slower inclusion into core, but it sure as heck gives us a real chance to see what's happening and also can give developers a chance to test and test again. It also gives us a way to compare and contrast items like speed and memory usage.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't know enough about workflow/deployment internals to comment on this. But I sure was shocked to read that trunk is deployed as is on .org, so a branch is probably the safer bet.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I truly believe that, when merged, this will be one of the biggest, most positive changes to WP in a long time. I'm so glad we're having this conversation and hashing out all of the ways we can get this done, to get it right.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, once the autoloader is in and we start optimizing the bootstrapping process to make use of it, WordPress will make huge strides.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37523 (Unit tests: Move classes out of includes/functions.php into their own file) updated</title>
      
        <dc:creator>DylanAuty</dc:creator>

      <pubDate>Tue, 30 Aug 2016 06:39:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37523#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37523#comment:6/1472539166672154</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37523.patch attached to Ticket #37523</title>
      
        <dc:creator>DylanAuty</dc:creator>

      <pubDate>Tue, 30 Aug 2016 06:38:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37523/37523.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37523/37523.patch/1472539122189689</guid>
      <description>&lt;p&gt;
Revised Patch based on suggestions/solutions offered.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35430 (Should the 'counts' cache group be persistent?) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Tue, 30 Aug 2016 06:07:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35430#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35430#comment:1/1472537274871030</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Let's look
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37767 (Conditionally modify $tagnames in strip_shortcodes()) updated</title>
      
        <dc:creator>DylanAuty</dc:creator>

      <pubDate>Tue, 30 Aug 2016 06:03:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37767#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37767#comment:1/1472536986220036</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37767.patch attached to Ticket #37767</title>
      
        <dc:creator>DylanAuty</dc:creator>

      <pubDate>Tue, 30 Aug 2016 06:01:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37767/37767.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37767/37767.patch/1472536905398211</guid>
      <description>&lt;p&gt;
Add's additional param to the strip_shortcode function which can be used to override the array of tags being processed. If it is set, the global variable is ignored. Meaning it will only allow the shortcodes passed in optionally
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37827 (Some classes still need to be moved into their own file) closed</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Tue, 30 Aug 2016 05:59:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37827#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37827#comment:17/1472536742734109</guid>
      <description>fixed</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37827 (Some classes still need to be moved into their own file) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Tue, 30 Aug 2016 05:56:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37827#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37827#comment:16/1472536574144620</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38438" title="i18n: after r38364, check that `global $wp_locale` is an instance of ..."&gt;38438&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
i18n: after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38364" title="i18n: move `is_rtl()` to `l10n.php` (which loads way earlier). Load ..."&gt;r38364&lt;/a&gt;, check that &lt;code&gt;global $wp_locale&lt;/code&gt; is an instance of &lt;code&gt;WP_Locale&lt;/code&gt; before calling &lt;code&gt;-&amp;gt;is_rtle()&lt;/code&gt; in &lt;code&gt;is_rtl()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37827" title="#37827: enhancement: Some classes still need to be moved into their own file (closed: fixed)"&gt;#37827&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38438]: i18n: after r38364, check that `global $wp_locale` is an instance of ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Tue, 30 Aug 2016 05:56:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38438</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38438/1472536573311616</guid>
      <description>&lt;p&gt;
i18n: after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38364" title="i18n: move `is_rtl()` to `l10n.php` (which loads way earlier). Load ..."&gt;r38364&lt;/a&gt;, check that &lt;code&gt;global $wp_locale&lt;/code&gt; is an instance of &lt;code&gt;WP_Locale&lt;/code&gt; before calling &lt;code&gt;-&amp;gt;is_rtle()&lt;/code&gt; in &lt;code&gt;is_rtl()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37827" title="#37827: enhancement: Some classes still need to be moved into their own file (closed: fixed)"&gt;#37827&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37875 (Admin sidebar (parent) links don't work when clicked before sub-menu ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 30 Aug 2016 05:51:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37875#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37875#comment:1/1472536316922306</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37841 (HTML 5 syntax error with rel='https://api.w.org/') updated</title>
      
        <dc:creator>zhanglide2018</dc:creator>

      <pubDate>Tue, 30 Aug 2016 05:50:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37841#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37841#comment:2/1472536218873495</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37841#comment:1" title="Comment 1"&gt;GaryJ&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi zhanglide2018 - welcome, and thanks for opening your first ticket.
&lt;/p&gt;
&lt;p&gt;
I think the issue you've found might be a duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37800" title="#37800: defect (bug): Close &amp;#34;link rel&amp;#34; dns-prefetch tag (closed: fixed)"&gt;#37800&lt;/a&gt;. Try the patch there, and if that fixes your issue, then this one can be closed as a duplicate.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hi GaryJ, thank you for your reply and help. I have already checked &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37800" title="#37800: defect (bug): Close &amp;#34;link rel&amp;#34; dns-prefetch tag (closed: fixed)"&gt;#37800&lt;/a&gt;, but it doesn't fix my issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37875 (Admin sidebar (parent) links don't work when clicked before sub-menu ...) created</title>
      
        <dc:creator>mklusak</dc:creator>

      <pubDate>Tue, 30 Aug 2016 05:49:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37875</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37875/1472536160284980</guid>
      <description>&lt;p&gt;
Hi, it's some time (~2 versions back?) I noticed this random behavior: clicking top link in backend left sidebar does nothing. I am waiting for admin screen change, but it does nothing, and its tab is not showing "Loading" activity. Click is ignored. When noticed and clicking link again, it works.
&lt;/p&gt;
&lt;p&gt;
Today I found a "pattern" - I am using latest Chrome (52), and this exact problem happens &lt;strong&gt;when clicking link with sub-menu (as Posts, Pages, ...) really fast, before sub-menu appearance.&lt;/strong&gt; If I click parent link after sub-menu poping up, it works as intended. Links without sub-menu (Comments,...) are OK.
&lt;/p&gt;
&lt;p&gt;
Other browsers are probably OK (tried Firefox), incognito Chrome has this problem too (so it's not caused by some extension).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37689 (Issues with utf8mb4 collation and the 4.6 update) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 30 Aug 2016 05:46:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37689#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37689#comment:16/1472535998377724</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472535993000298"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37683 ($collate and $charset can be undefined in wpdb::init_charset()) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 30 Aug 2016 05:46:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37683#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37683#comment:11/1472535998235550</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472535993000298"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37874 (on my Appearance screen when i click on Customize, Header, Background ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 30 Aug 2016 05:43:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37874#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37874#comment:2/1472535817058075</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36697 (Combining the HTTP requests for obtaining the available nav menu items ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 30 Aug 2016 05:38:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36697#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36697#comment:6/1472535490345535</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@curdin thanks for the patch! Would you mind refreshing it? It's not applying anymore, probably due to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38436" title="Customize: Allow users to more seamlessly create page-based nav menus ..."&gt;[38436]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37800 (Close "link rel" dns-prefetch tag) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Tue, 30 Aug 2016 05:34:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37800#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37800#comment:6/1472535297737341</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looks good, let's get this in to trunk. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37680 (PHP Warning: ini_get_all() has been disabled for security reasons) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Tue, 30 Aug 2016 05:30:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37680#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37680#comment:18/1472535000883854</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37680#comment:17" title="Comment 17"&gt;jdgrimes&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@dd32 &lt;code&gt;function_exists()&lt;/code&gt; &lt;a class="ext-link" href="https://secure.php.net/manual/en/function.function-exists.php#refsect1-function.function-exists-notes"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;doesn't detect disabled functions&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;strong&gt;Note:&lt;/strong&gt;
A function name may exist even if the function itself is unusable due to configuration or compiling options (with the image functions being an example).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;code&gt;function_exists()&lt;/code&gt; returns false for functions disabled through &lt;code&gt;disable_function&lt;/code&gt; in php.ini.
&lt;/p&gt;
&lt;p&gt;
Via the discussion on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26772" title="#26772: enhancement: Permalinks settings page is blank as access to phpinfo() is denied (closed: fixed)"&gt;#26772&lt;/a&gt;, it seems like it's possible for a false positive when using suhosin config to disable. We added an additional check for &lt;code&gt;ini_get( 'disable_functions' )&lt;/code&gt; in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29330" title="Make sure phpinfo() is not disabled before calling it in ..."&gt;[29330]&lt;/a&gt;, but I'm not sure how that works with suhosin anyway, which uses the option &lt;code&gt;suhosin.executor.func.blacklist&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
It may be that we've done just fine with &lt;code&gt;function_exists()&lt;/code&gt; on it's own beyond that one bug report, but I may also not understand a piece.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37874 (on my Appearance screen when i click on Customize, Header, Background ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 30 Aug 2016 05:05:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37874#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37874#comment:1/1472533538148813</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@amatakeo thanks for the report, but you'll need to elaborate on the issue you're having. We cannot login to your site, so you'll need to provide screenshots, a screencast, or a full description of the behavior you're experiencing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36678 (Shift-click in Customizer when collapsed does nothing) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 30 Aug 2016 05:01:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36678#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36678#comment:6/1472533279437799</guid>
      <description>&lt;p&gt;
@curdin yes, this looks like good work.
&lt;/p&gt;
&lt;p&gt;
@celloexpressions it doesn't work for widgets or menus in what way?
&lt;/p&gt;
&lt;p&gt;
I also think that something like &lt;code&gt;paneVisible&lt;/code&gt; or &lt;code&gt;controlsVisible&lt;/code&gt; would be better and more explicit than just &lt;code&gt;collapsed&lt;/code&gt; (better to be positive than negative at least).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36678 (Shift-click in Customizer when collapsed does nothing) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Tue, 30 Aug 2016 04:13:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36678#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36678#comment:5/1472530415147106</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the patch @curdin, nice work!
&lt;/p&gt;
&lt;p&gt;
This looks good to me. The only part I'm unsure about is the naming of the state. Instead of &lt;code&gt;collapsed&lt;/code&gt;, maybe &lt;code&gt;controlsVisible&lt;/code&gt; or possibly &lt;code&gt;paneVisible&lt;/code&gt;? I'd like this to be named in a way that could remain logical if this UI changes drastically in the future. &lt;code&gt;collapsed&lt;/code&gt; could also work though, it's just a bit ambiguous about what's collapsed.
&lt;/p&gt;
&lt;p&gt;
Also, it looks like this doesn't work for widgets or menus; I think we'll need to trigger collapsed to false elsewhere for them, likely somewhere in &lt;code&gt;customize-nav-menus.js&lt;/code&gt; and &lt;code&gt;customize-widgets.js&lt;/code&gt;, as the have their own implementations of this functionality I believe.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36996 (get_the_post_thumbnail and the usage of class attribute) updated</title>
      
        <dc:creator>TomasM</dc:creator>

      <pubDate>Tue, 30 Aug 2016 03:49:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36996#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36996#comment:5/1472528984079652</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I tested the code and it works perfectly - thank you!
&lt;/p&gt;
&lt;p&gt;
It works for parent theme as well as for a child theme.
&lt;/p&gt;
&lt;p&gt;
To me it looks like a bug, because looking at other similar WP functions, from my limited experience usually classes would be added, leaving default classes intact.
&lt;/p&gt;
&lt;p&gt;
I hope that this bug will be fixed in the future release.
&lt;/p&gt;
&lt;p&gt;
Thank you again!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34084 (Automatically log user in after installation) updated</title>
      
        <dc:creator>curdin</dc:creator>

      <pubDate>Tue, 30 Aug 2016 03:26:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34084#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34084#comment:5/1472527601411505</guid>
      <description>&lt;p&gt;
@johnbillion - not directly related but possibly worth including. The conditional that checks each field in wp-admin/install.php has a comment "TODO: poka-yoke" under each condition. It appears to me that poka-yoke was improved as part of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24982" title="#24982: enhancement: Improve validation and error handling on install.php (closed: fixed)"&gt;#24982&lt;/a&gt; - can these comments be removed?
&lt;/p&gt;
&lt;p&gt;
Also, the patch works fine for Chrome 52 builtin password manager
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37874 (on my Appearance screen when i click on Customize, Header, Background ...) created</title>
      
        <dc:creator>amatakeo</dc:creator>

      <pubDate>Tue, 30 Aug 2016 03:09:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37874</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37874/1472526548840891</guid>
      <description>&lt;p&gt;
on my Appearance screen when i click on Customize, Header, Background there was nothing coming, for that any solution to solve the problem?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37368 (get_object_taxonomies() ignores output type argument for attachments) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 30 Aug 2016 03:06:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37368#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37368#comment:14/1472526367174849</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38437" title="Remove unnecessary uniqueness check in `get_attachment_taxonomies()`.
 ..."&gt;38437&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Remove unnecessary uniqueness check in &lt;code&gt;get_attachment_taxonomies()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Running the taxonomy array through &lt;code&gt;array_unique()&lt;/code&gt; is unnecessary&lt;br /&gt;
when the function returns objects, because the associative keys already&lt;br /&gt;
ensure uniqueness.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This also fixes a bug when running &lt;code&gt;get_attachment_taxonomies()&lt;/code&gt; in&lt;br /&gt;
HHVM, which doesn't like casting objects to strings for the purposes&lt;br /&gt;
of &lt;code&gt;array_unique()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props swissspidy.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37368" title="#37368: defect (bug): get_object_taxonomies() ignores output type argument for attachments (closed: fixed)"&gt;#37368&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38437]: Remove unnecessary uniqueness check in `get_attachment_taxonomies()`.  ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 30 Aug 2016 03:06:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38437</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38437/1472526366609462</guid>
      <description>&lt;p&gt;
Remove unnecessary uniqueness check in &lt;code&gt;get_attachment_taxonomies()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Running the taxonomy array through &lt;code&gt;array_unique()&lt;/code&gt; is unnecessary
when the function returns objects, because the associative keys already
ensure uniqueness.
&lt;/p&gt;
&lt;p&gt;
This also fixes a bug when running &lt;code&gt;get_attachment_taxonomies()&lt;/code&gt; in
HHVM, which doesn't like casting objects to strings for the purposes
of &lt;code&gt;array_unique()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props swissspidy.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37368" title="#37368: defect (bug): get_object_taxonomies() ignores output type argument for attachments (closed: fixed)"&gt;#37368&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37368 (get_object_taxonomies() ignores output type argument for attachments) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 30 Aug 2016 03:01:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37368#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37368#comment:13/1472526107389757</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37368#comment:12" title="Comment 12"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This breaks on HHVM because &lt;code&gt;array_unique()&lt;/code&gt; does a string comparison and cannot convert a &lt;code&gt;stdClass&lt;/code&gt; object to a string.
&lt;/p&gt;
&lt;p&gt;
Could probably be solved by introducing &lt;code&gt;WP_Taxonomy&lt;/code&gt; in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36224" title="#36224: enhancement: WP_Taxonomy class (closed: fixed)"&gt;#36224&lt;/a&gt; with a &lt;code&gt;__toString()&lt;/code&gt; method.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks, @swissspidy. &lt;code&gt;__toString()&lt;/code&gt; would suppress the error. But in this case, running &lt;code&gt;array_unique()&lt;/code&gt; doesn't do anything when &lt;code&gt;output=objects&lt;/code&gt;, because &lt;code&gt;array_merge()&lt;/code&gt; will cause duplicate indexes to overwrite each other. So let's save the cycles when we're fetching objects.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36430 (Style links on Installing plugin page) updated</title>
      
        <dc:creator>curdin</dc:creator>

      <pubDate>Tue, 30 Aug 2016 02:47:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36430#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36430#comment:8/1472525252150433</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36430 (Style links on Installing plugin page) updated</title>
      
        <dc:creator>curdin</dc:creator>

      <pubDate>Tue, 30 Aug 2016 02:34:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36430#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36430#comment:7/1472524498963170</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Latest patch is mostly just a refresh, and removes the pipe character between the action button and the back link. The spacing is quite tight - is there a pattern for spacing these a bit more?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36430.2.diff attached to Ticket #36430</title>
      
        <dc:creator>curdin</dc:creator>

      <pubDate>Tue, 30 Aug 2016 02:33:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36430/36430.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36430/36430.2.diff/1472524425407098</guid>
      <description>&lt;p&gt;
Refreshed patch, removed pipe
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>35272-2.diff attached to Ticket #35272</title>
      
        <dc:creator>christophherr</dc:creator>

      <pubDate>Tue, 30 Aug 2016 02:32:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35272/35272-2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35272/35272-2.diff/1472524325536057</guid>
      <description>&lt;p&gt;
Original patch didn´t apply. Added a refresh.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37855 (Clean WordPress Head - Group together related tags) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Tue, 30 Aug 2016 02:31:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37855#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37855#comment:4/1472524316673969</guid>
      <description>&lt;p&gt;
1) @GaryJ is correct.
2) Even if core changes the order, this will always be thrown off by plugins.
3) What is the actual benefit to this? Is it perceived readability?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23805 (wp_ajax_add_menu_item() closed to user-created menu item types) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 30 Aug 2016 02:00:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23805#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23805#comment:5/1472522448061095</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37863 (HTTP/1.1 defined header in wp-comments-post.php) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 30 Aug 2016 01:55:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37863#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37863#comment:5/1472522118682230</guid>
      <description>&lt;p&gt;
@tnash, if the ticket was indeed based on the support forums thread, it would be nice to link to it in the description, as well as mention the ticket in the thread :)
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37863#comment:4" title="Comment 4"&gt;kobashicomputing&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
You must trust what is returned in &lt;code&gt;$_SERVER['SERVER_PROTOCOL']&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If that's the case, the code of &lt;code&gt;wp_get_server_protocol()&lt;/code&gt; introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34894" title="Introduce `wp_get_server_protocol()` to DRY protocol parsing logic and ..."&gt;[34894]&lt;/a&gt; should also be corrected.
&lt;/p&gt;
&lt;p&gt;
A similar code is also used in &lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/4.6/src/wp-admin/load-scripts.php#L39"&gt;wp-admin/load-scripts.php&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/4.6/src/wp-admin/load-scripts.php#L39" title="Download"&gt;​&lt;/a&gt; and &lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/4.6/src/wp-admin/load-styles.php#L40"&gt;wp-admin/load-styles.php&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/4.6/src/wp-admin/load-styles.php#L40" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23805 (wp_ajax_add_menu_item() closed to user-created menu item types) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Tue, 30 Aug 2016 01:53:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23805#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23805#comment:4/1472521981184927</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23805/23805.2.diff" title="Attachment '23805.2.diff' in Ticket #23805"&gt;23805.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23805/23805.2.diff" title="Download"&gt;​&lt;/a&gt; - Patch updated for 4.7.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23805.2.diff attached to Ticket #23805</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Tue, 30 Aug 2016 01:51:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23805/23805.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23805/23805.2.diff/1472521897596672</guid>
      <description>&lt;p&gt;
Updated for 4.7-dev
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37867 (Document return types for create/create_and_get/create_many() methods ...) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 30 Aug 2016 01:24:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37867#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37867#comment:6/1472520258041038</guid>
      <description>&lt;p&gt;
The PHPDocumentation description for &lt;code&gt;@method&lt;/code&gt; suggests that it's specifically for use in contexts where &lt;code&gt;__call()&lt;/code&gt; is used on a parent class, so that there are no methods where the documentation could naturally appear. This isn't the case for &lt;code&gt;create()&lt;/code&gt; and friends. I'm not sure how PhpStorm and similar IDEs handle this sort of thing, but it seems like they (or their users) should be able to traverse the inheritance tree for this sort of thing. &lt;a class="ext-link" href="https://www.phpdoc.org/docs/latest/references/phpdoc/tags/method.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.phpdoc.org/docs/latest/references/phpdoc/tags/method.html&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Now, it so happens that the classes in question - &lt;code&gt;create_object()&lt;/code&gt;, &lt;code&gt;update_object()&lt;/code&gt;, &lt;code&gt;create()&lt;/code&gt;, etc on &lt;code&gt;WP_UnitTest_Factory_For_Thing&lt;/code&gt; - do not have any PHPDoc at all. I bet proper documentation of these would be enough to make your IDE document the child classes properly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37863 (HTTP/1.1 defined header in wp-comments-post.php) reopened</title>
      
        <dc:creator>kobashicomputing</dc:creator>

      <pubDate>Tue, 30 Aug 2016 01:19:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37863#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37863#comment:4/1472519958556965</guid>
      <description>&lt;p&gt;
Read my &lt;a class="ext-link" href="https://wordpress.org/support/topic/wp-comments-postphp-http-version"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;original feedback to the support forum&lt;/a&gt; for which the originator of this bug report decided to create a ticket for.
&lt;/p&gt;
&lt;p&gt;
The code above is wrong.
&lt;/p&gt;
&lt;p&gt;
1) Having a fallback to HTTP 1.0 is NEVER GUARANTEED to be supported on the HTTP server. The only way you as WordPress is going to know what HTTP version is supported is through &lt;code&gt;$_SERVER['SERVER_PROTOCOL']&lt;/code&gt;. Making the assumption that the HTTP server you are running on without even knowing it supports 1.0 is guessing.
&lt;/p&gt;
&lt;p&gt;
2) There is no future support in place with this code. The code above falls apart as newer HTTP versions come out (HTTP 2.01, HTTP 3, etc) which then results in returning HTTP 1.0 error messages.
&lt;/p&gt;
&lt;p&gt;
3) Further, &lt;a class="ext-link" href="https://tools.ietf.org/html/rfc2145#section-2.3"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;RFC 2145 says&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
"An HTTP server SHOULD send a response version equal to the highest
version for which the server is at least conditionally compliant, and
whose major version is less than or equal to the one received in the
request.  An HTTP server MUST NOT send a version for which it is not
at least conditionally compliant.  A server MAY send a 505 (HTTP
Version Not Supported) response if cannot send a response using the
major version used in the client's request."
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You must trust what is returned in &lt;code&gt;$_SERVER['SERVER_PROTOCOL']&lt;/code&gt;.
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;?php
if ('POST' != $_SERVER['REQUEST_METHOD']) {
  header('Allow: POST');
  header($_SERVER['SERVER_PROTOCOL'] . ' 405 Method Not Allowed');
  header('Content-Type: text/plain');
  exit;
}
?&amp;gt;
&lt;/pre&gt;&lt;p&gt;
If someone visits the post comment URL with different HTTP Methods (DELETE, GET, PUT, etc.) and you tell them you support HTTP 1.0, you are misleading them, especially if it is a service that now is going to think only HTTP 1.0 is the way to post comments.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #37871 (Clarify Login Label (Email Address)) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Tue, 30 Aug 2016 01:17:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37871#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37871#comment:1/1472519836466780</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37871.diff attached to Ticket #37871</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Tue, 30 Aug 2016 01:16:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37871/37871.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37871/37871.diff/1472519802937817</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37523 (Unit tests: Move classes out of includes/functions.php into their own file) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 30 Aug 2016 01:13:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37523#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37523#comment:5/1472519624205146</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37846 (Minor Parent Menu Item Deletion 'sub item' Issue) updated</title>
      
        <dc:creator>rnoakes3rd</dc:creator>

      <pubDate>Tue, 30 Aug 2016 01:13:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37846#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37846#comment:1/1472519595115770</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37855 (Clean WordPress Head - Group together related tags) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Tue, 30 Aug 2016 00:27:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37855#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37855#comment:3/1472516845139065</guid>
      <description>&lt;p&gt;
@ramiy Your patch is going to break multiple plugins and themes that already unhook various items from &lt;code&gt;wp_head&lt;/code&gt;, because the priority has changed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36678 (Shift-click in Customizer when collapsed does nothing) updated</title>
      
        <dc:creator>curdin</dc:creator>

      <pubDate>Tue, 30 Aug 2016 00:22:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36678#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36678#comment:4/1472516544294067</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I have created a collapsed state in wp.customizer and am using triggers to control this. Keen to have someone review this. Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36678.diff attached to Ticket #36678</title>
      
        <dc:creator>curdin</dc:creator>

      <pubDate>Tue, 30 Aug 2016 00:21:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36678/36678.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36678/36678.diff/1472516515598075</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>iamfriendly</dc:creator>

      <pubDate>Mon, 29 Aug 2016 23:35:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:129</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:129/1472513701042189</guid>
      <description>&lt;p&gt;
I'm not sure it's about catching/preventing all of the instances of someone doing it wrong. It's about setting a precedent and, possibly more importantly, setting expectations.
&lt;/p&gt;
&lt;p&gt;
Ultimately, this has a potential to break a lot of things, very quickly and very badly. (Please note I am very pro this change, I'm just urging an abundance of caution). One mis-step can lead to developers going down a winding path without us really realising it. This can end badly for the user. (See the shortcodes API changes last year, which admittedly was a necessary change to a feature and this is more architectural, but the point stands).
&lt;/p&gt;
&lt;p&gt;
There are currently many ways to override core pieces (in a doing_it_wrong fashion) but that doesn't mean we should simply ignore that and give developers another chance to shoot themselves and their users in the foot.
&lt;/p&gt;
&lt;p&gt;
I'm +1 for the addition of a branch which would allow us to really hammer this and see what breaks in a lot of scenarios. It (probably) means a slower inclusion into core, but it sure as heck gives us a real chance to see what's happening and also can give developers a chance to test and test again. It also gives us a way to compare and contrast items like speed and memory usage.
&lt;/p&gt;
&lt;p&gt;
I truly believe that, when merged, this will be one of the biggest, most positive changes to WP in a long time. I'm so glad we're having this conversation and hashing out all of the ways we can get this done, to get it right.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16483 (Visibility: password-protected exposes multiple pages) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 23:20:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16483#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16483#comment:17/1472512801363058</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1472512798000098"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37648 (Bind label to Plugins &gt; Install search input field) updated</title>
      
        <dc:creator>mercime</dc:creator>

      <pubDate>Mon, 29 Aug 2016 23:18:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37648#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37648#comment:7/1472512680429217</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Because this field is labeled implicitly, adding the for and id attributes doesn't accomplish anything
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hi @joedolson. Re implicit labelling, when I started improving a11y for projects and sites, one of my go-to references is the &lt;a class="ext-link" href="https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Forms/How_to_structure_an_HTML_form#The_&amp;lt;label&amp;gt;_element"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Mozilla Developer Network&lt;/a&gt; site where it states:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
A &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; element is bound to its widget with the for attribute. The for attribute references the id attribute of the corresponding widget. A widget can be nested inside its &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; element but even in that case, it is considered best practice to set the for attribute because some assistive technologies do not understand implicit relationships between labels and widgets.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In addition, the &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/coding-standards/accessibility-coding-standards/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress A11y Coding Standards&lt;/a&gt; the information given there is that "All form inputs must include an &lt;strong&gt;explicitly associated&lt;/strong&gt;  &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; element."
&lt;/p&gt;
&lt;p&gt;
So if the WP a11y team consensus is that adding &lt;code&gt;for&lt;/code&gt; attributes for &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;s is useless when widgets are nested, perhaps that should be clarified, as I see at least many instances throughout the WP codebase where &lt;code&gt;for&lt;/code&gt; attributes were added to &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;s with widgets nested. Thank you.
&lt;/p&gt;
&lt;p&gt;
(copy pasted most from &lt;a href="https://core.trac.wordpress.org/ticket/37649#comment:6"&gt;https://core.trac.wordpress.org/ticket/37649#comment:6&lt;/a&gt; )
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Mon, 29 Aug 2016 23:16:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:128</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:128/1472512619758701</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
PHP 5.3 and namespacing sure seems like it would negate many of these potential issues.
Is it time?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How? Even with namespaces, a plugin could still include it's own version with whatever namespace we end up using. Example.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@jorbin but the unaware dev would now have to duplicate both the namespace and the class name. A simple class name collision would no longer occur.
&lt;/p&gt;
&lt;p&gt;
There is always be the possibility of someone &lt;em&gt;doing it wrong&lt;/em&gt;. I don't believe we can stop all instances, especially if the dev's intent is to override the class.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37649 (Bind `label`s to form controls in Tools &gt; Export screen) updated</title>
      
        <dc:creator>mercime</dc:creator>

      <pubDate>Mon, 29 Aug 2016 23:14:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37649#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37649#comment:6/1472512451030983</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Because this field is labeled implicitly, adding the for and id attributes doesn't accomplish anything
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hi @joedolson. Please note that this patch also includes adding a &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; tag to a &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; form control which is required.
&lt;/p&gt;
&lt;p&gt;
As to implicit labelling, when I started improving a11y for projects and sites, one of my go-to references is the &lt;a class="ext-link" href="https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Forms/How_to_structure_an_HTML_form#The_&amp;lt;label&amp;gt;_element"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Mozilla Developer Network&lt;/a&gt; site where it states:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
A &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; element is bound to its widget with the for attribute. The for attribute references the id attribute of the corresponding widget. A widget can be nested inside its &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; element but even in that case, it is considered best practice to set the for attribute because some assistive technologies do not understand implicit relationships between labels and widgets.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In addition, the &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/coding-standards/accessibility-coding-standards/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress A11y Coding Standards&lt;/a&gt; the information given there is that "All form inputs must include an &lt;strong&gt;explicitly associated&lt;/strong&gt;  &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; element."
&lt;/p&gt;
&lt;p&gt;
So if the WP a11y team consensus is that adding &lt;code&gt;for&lt;/code&gt; attributes for &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;s is useless when widgets are nested, perhaps that should be clarified, as I see at least many instances throughout the WP codebase where &lt;code&gt;for&lt;/code&gt; attributes were added to &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;s with widgets nested. Thank you.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Mon, 29 Aug 2016 23:08:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:127</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:127/1472512133735445</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:125" title="Comment 125"&gt;afragen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
PHP 5.3 and namespacing sure seems like it would negate many of these potential issues.
&lt;/p&gt;
&lt;p&gt;
Is it time?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
How?  Even with namespaces, a plugin could still include it's own version with whatever namespace we end up using. &lt;a class="ext-link" href="https://gist.github.com/aaronjorbin/6d8ae5ce0473734255ec70b06c109898"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Example&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Mon, 29 Aug 2016 23:06:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:126</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:126/1472511961579510</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:124" title="Comment 124"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Having "pluggable" classes in WordPress is out of the question.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Many class instances are stored in a global variable, and these can be replaced already. So "pluggable classes" are already here, as "pluggable instances". &lt;code&gt;WP_Scripts&lt;/code&gt; is one example.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34923 (Allow users to more seamlessly create page-based nav menus during ...) closed</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 29 Aug 2016 22:58:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34923#comment:82</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34923#comment:82/1472511513291834</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38436" title="Customize: Allow users to more seamlessly create page-based nav menus ..."&gt;38436&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Customize: Allow users to more seamlessly create page-based nav menus during customization.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Introduces the ability to create stubs for the various post types to add to a given menu. This eliminates the need to leave the customizer to first create the post in the admin and then return to managing menus. Only the title of the newly-created post can be supplied; the post content will be blank and will need to be provided in the normal edit post screen outside the customizer, unless a plugin enables a post editing in the customizer experience. When a post is created and added to a nav menu in the customizer, the newly created post that is added to a menu is given the &lt;code&gt;auto-draft&lt;/code&gt; status, and if the changes are not published, the &lt;code&gt;auto-draft&lt;/code&gt; post will be automatically deleted within 7 days via &lt;code&gt;wp_delete_auto_drafts()&lt;/code&gt;. However, if the customizer changes are saved, then these nav menu item &lt;code&gt;auto-draft&lt;/code&gt; post stubs will be transitioned to &lt;code&gt;publish&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Includes portions of code from the Customize Posts &amp;lt;&lt;a class="ext-link" href="https://github.com/xwp/wp-customize-posts"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wp-customize-posts&lt;/a&gt;&amp;gt; and Front-end Editor &amp;lt;&lt;a class="ext-link" href="https://github.com/iseulde/wp-front-end-editor"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/iseulde/wp-front-end-editor&lt;/a&gt;&amp;gt; plugins.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For more information, see &lt;a class="ext-link" href="https://make.wordpress.org/core/2016/06/16/feature-proposal-content-authorship-in-menus-with-live-preview/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2016/06/16/feature-proposal-content-authorship-in-menus-with-live-preview/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props celloexpressions, westonruter, valendesigns, afercia, melchoyce, mapk, iseulde, mrahmadawais.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34923" title="#34923: enhancement: Allow users to more seamlessly create page-based nav menus during ... (closed: fixed)"&gt;#34923&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38436]: Customize: Allow users to more seamlessly create page-based nav menus ...</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 29 Aug 2016 22:58:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38436</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38436/1472511512800711</guid>
      <description>&lt;p&gt;
Customize: Allow users to more seamlessly create page-based nav menus during customization.
&lt;/p&gt;
&lt;p&gt;
Introduces the ability to create stubs for the various post types to add to a given menu. This eliminates the need to leave the customizer to first create the post in the admin and then return to managing menus. Only the title of the newly-created post can be supplied; the post content will be blank and will need to be provided in the normal edit post screen outside the customizer, unless a plugin enables a post editing in the customizer experience. When a post is created and added to a nav menu in the customizer, the newly created post that is added to a menu is given the &lt;code&gt;auto-draft&lt;/code&gt; status, and if the changes are not published, the &lt;code&gt;auto-draft&lt;/code&gt; post will be automatically deleted within 7 days via &lt;code&gt;wp_delete_auto_drafts()&lt;/code&gt;. However, if the customizer changes are saved, then these nav menu item &lt;code&gt;auto-draft&lt;/code&gt; post stubs will be transitioned to &lt;code&gt;publish&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Includes portions of code from the Customize Posts &amp;lt;&lt;a class="ext-link" href="https://github.com/xwp/wp-customize-posts"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wp-customize-posts&lt;/a&gt;&amp;gt; and Front-end Editor &amp;lt;&lt;a class="ext-link" href="https://github.com/iseulde/wp-front-end-editor"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/iseulde/wp-front-end-editor&lt;/a&gt;&amp;gt; plugins.
&lt;/p&gt;
&lt;p&gt;
For more information, see &lt;a class="ext-link" href="https://make.wordpress.org/core/2016/06/16/feature-proposal-content-authorship-in-menus-with-live-preview/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2016/06/16/feature-proposal-content-authorship-in-menus-with-live-preview/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Props celloexpressions, westonruter, valendesigns, afercia, melchoyce, mapk, iseulde, mrahmadawais.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34923" title="#34923: enhancement: Allow users to more seamlessly create page-based nav menus during ... (closed: fixed)"&gt;#34923&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37873 (Consolidate customizer CSS) created</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Mon, 29 Aug 2016 22:43:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37873</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37873/1472510638276129</guid>
      <description>&lt;p&gt;
There is a lot of rule duplication in the customizer's CSS, as well as separate files for nav menus and widgets. Much of the UI is very similar or the same, so it seems worth coming up with some standard names for those visual components. We should also consider whether it's worth maintaining those separate files.
&lt;/p&gt;
&lt;p&gt;
This will almost certainly impact JS and possibly plugins, so we should research that as well.
&lt;/p&gt;
&lt;p&gt;
Previously: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34333" title="#34333: defect (bug): Customizer: aggregate similar CSS rules (closed: fixed)"&gt;#34333&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37872 (Improving instructions wording on password reinit page) created</title>
      
        <dc:creator>davidbourguignon</dc:creator>

      <pubDate>Mon, 29 Aug 2016 22:37:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37872</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37872/1472510230379836</guid>
      <description>&lt;p&gt;
Many subscribers are confused by the instructions on password reinit page.
&lt;/p&gt;
&lt;p&gt;
Here are three suggestions for improving instructions wording (I am not using the English version of WordPress, so original wordings may be incorrect):
&lt;/p&gt;
&lt;p&gt;
1) "Please enter your new password below."
-&amp;gt; "Please consider using the generated password or enter a new password below"
&lt;/p&gt;
&lt;p&gt;
2) "New password"
-&amp;gt; "Your password"
&lt;/p&gt;
&lt;p&gt;
3) "Hint: &amp;lt;How to choose a good password...&amp;gt;"
-&amp;gt; Remove it by default. Only display this hint when there is a red warning  sign due to the detection of a "Weak" or "Very weak" password.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Mon, 29 Aug 2016 22:21:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:125</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:125/1472509265395207</guid>
      <description>&lt;p&gt;
PHP 5.3 and namespacing sure seems like it would negate many of these potential issues.
&lt;/p&gt;
&lt;p&gt;
Is it time?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 29 Aug 2016 22:13:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:124</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:124/1472508837904970</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I can't see why a plugin would want to do that, and it would probably break half of the time, because autoloading means there's no set point in time where you know the class was or wasn't loaded any more.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Unfortunately this is not entirely true. The plugins are loaded relatively early. They will always be loaded before a bunch of classes are first needed effectively letting the plugins always "preload" some classes. I agree with @Clorith: "...you say they shouldn't, I agree. But from experience, they will, they most definitely will."
&lt;/p&gt;
&lt;p&gt;
Having "pluggable" classes in WordPress is out of the question.
&lt;/p&gt;
&lt;p&gt;
@schlessera, @flixos90, @flixos90 not sure how well you know the WordPress codebase but there is a thing called "pluggable.php". As far as I know this is a left-over from forking b2 14 years ago that wasn't fixed/removed in time. This is probably the worst architectural decision ever. Why would you want to extend it? :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Autoloading has several benefits out of the box, even with a more procedural codebase like WordPress
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree. Autoloading is great for classes. After a quick look through the code, about 80-100 of the 200 classes will always be loaded, and half of the rest would never be loaded together. So currently autoloading will affect maybe about 5% of the code. This is still good, that percent will increase in the future.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Nobody is meant to replace core WordPress classes. And if they do, they would have done it with or without an autoloader. The addition of an autoloader does not in any way change the fact that plugins can already replaces whatever they want on most systems, and cause havoc.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not true. Plugins cannot replace any of the &lt;code&gt;required&lt;/code&gt; classes.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Does that mean that we should discuss how best to proceed so that some precautions can be taken? Yes, absolutely! But does that mean that we should avoid a definite code improvement because it could be "mis-used"? I don't think so.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Totally agree. As far as I see the way to proceed here is:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Make an experimental branch where all this can be tested and cleaned up before merging in core.
&lt;/li&gt;&lt;li&gt;Find a way to "lock down" core classes so they cannot be replaced by plugins. Think of this like having the &lt;code&gt;final&lt;/code&gt; keyword in class definitions. One possible way would be to have a custom autoloader that has a list of the core classes and doesn't do &lt;code&gt;class_exists()&lt;/code&gt; before loading any of them (and keeps some sort of state to test if they are already loaded).
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Mon, 29 Aug 2016 22:13:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:123</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:123/1472508820236420</guid>
      <description>&lt;p&gt;
I just ran some siege tests of single page  loads using twentyfifteen and they show no real speed difference between &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38398" title="Unit Tests:
* Automatically delete objects that we were created ..."&gt;r38398&lt;/a&gt; ( before the autoloader) and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38433" title="Post Thumbnails: Prevent post thumbnail previews from spilling into ..."&gt;r38433&lt;/a&gt; (now) ( 4.86 to 4.89 ).  If speed is going to be used as an argument towards this, we need something that demonstrates it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37110 (Update to jQuery 3.*) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 22:06:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37110#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37110#comment:4/1472508413080385</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472508410000339"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37841 (HTML 5 syntax error with rel='https://api.w.org/') updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Mon, 29 Aug 2016 22:01:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37841#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37841#comment:1/1472508111721622</guid>
      <description>&lt;p&gt;
Hi zhanglide2018 - welcome, and thanks for opening your first ticket.
&lt;/p&gt;
&lt;p&gt;
I think the issue you've found might be a duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37800" title="#37800: defect (bug): Close &amp;#34;link rel&amp;#34; dns-prefetch tag (closed: fixed)"&gt;#37800&lt;/a&gt;. Try the patch there, and if that fixes your issue, then this one can be closed as a duplicate.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34333 (Customizer: aggregate similar CSS rules) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 21:57:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34333#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34333#comment:12/1472507876560817</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472507874000330"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37871 (Clarify Login Label (Email Address)) created</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Mon, 29 Aug 2016 21:48:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37871</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37871/1472507327225260</guid>
      <description>&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36620" title="Template: Update label for the username field in `wp_login_form()` ..."&gt;r36620&lt;/a&gt; changed the login label from &lt;code&gt;Username&lt;/code&gt; to &lt;code&gt;Username or Email&lt;/code&gt; once logging in via email address was added.
&lt;/p&gt;
&lt;p&gt;
I'd like to see that clarified further, as &lt;code&gt;Username or Email Address&lt;/code&gt;. It's simply clearer and more accurate language (in English variants at least). Those who are mostly unfamiliar with logging-in in general, or have cognitive difficulties, will appreciate being told it's the address we're after, and not an actual email that should be pasted in.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37870 (Adding hints to login/registration form fields) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Mon, 29 Aug 2016 21:31:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37870#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37870#comment:1/1472506287162795</guid>
      <description>&lt;p&gt;
Thanks for the ticket @davidbourguignon.
&lt;/p&gt;
&lt;p&gt;
There's some suggestion that &lt;a class="ext-link" href="https://www.nngroup.com/articles/form-design-placeholders/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;placeholders are bad for accessibility&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Even those that are computer illiterate, I would expect them to understand the concept of logging in, probably even have logged in to other sites before. Adding in placeholder text may even confuse them more - "Why do I need to enter &lt;code&gt;johnsmith&lt;/code&gt; when my name is Gary Jones?"
&lt;/p&gt;
&lt;p&gt;
What I do think could be clarified, and it probably worth it's own ticket, is changing "Email" to "Email Address".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #37863,​37869 batch updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 29 Aug 2016 21:27:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=37863%2C37869</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=37863%2C37869/1472506053888560</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37863" title="#37863: defect (bug): HTTP/1.1 defined header in wp-comments-post.php (closed: fixed)"&gt;#37863&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #37870 (Adding hints to login/registration form fields) created</title>
      
        <dc:creator>davidbourguignon</dc:creator>

      <pubDate>Mon, 29 Aug 2016 21:22:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37870</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37870/1472505771920868</guid>
      <description>&lt;p&gt;
Could it be possible to clarify a bit the login/registration system for computer-illiterate people, by putting a grayed-out example of the kind of data they have to enter in each login field?
&lt;/p&gt;
&lt;p&gt;
I have already seen this on other websites, and it is very effective IMHO. For example:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;ID: grayed-out johnsmith
&lt;/li&gt;&lt;li&gt;Email: grayed-out john@…
&lt;/li&gt;&lt;li&gt;Etc.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Of course, the grayed-out examples should be considered for i18n, so that the form displays examples relevant to each culture/language.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37869 (wp-comments-post server protocol change) created</title>
      
        <dc:creator>kobashicomputing</dc:creator>

      <pubDate>Mon, 29 Aug 2016 21:14:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37869</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37869/1472505249563576</guid>
      <description>&lt;p&gt;
Hardcoded HTTP 1.1 is no longer valid anymore. Could be HTTP/2.
&lt;/p&gt;
&lt;p&gt;
Change from this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'POST'&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Allow: POST'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'HTTP/1.1 405 Method Not Allowed'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Content-Type: text/plain'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
To this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'POST'&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Allow: POST'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'SERVER_PROTOCOL'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;' 405 Method Not Allowed'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Content-Type: text/plain'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35552 (Added pointer cursor on theme, plugin, and media uploader) closed</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 29 Aug 2016 21:07:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35552#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35552#comment:6/1472504851779561</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38435" title="Accessibility: Improve the file upload inputs styling.
Though ..."&gt;38435&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Accessibility: Improve the file upload inputs styling.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Though browsers implement &lt;code&gt;cursor: pointer&lt;/code&gt; on this kind of controls a bit &lt;br /&gt;
inconsistently, the &lt;code&gt;pointer&lt;/code&gt; cursor styling makes more clear the button and&lt;br /&gt;
label are actionable controls.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props Ankit K Gupta.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35552" title="#35552: defect (bug): Added pointer cursor on theme, plugin, and media uploader (closed: fixed)"&gt;#35552&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38435]: Accessibility: Improve the file upload inputs styling.  Though ...</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 29 Aug 2016 21:07:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38435</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38435/1472504851288237</guid>
      <description>&lt;p&gt;
Accessibility: Improve the file upload inputs styling.
&lt;/p&gt;
&lt;p&gt;
Though browsers implement &lt;code&gt;cursor: pointer&lt;/code&gt; on this kind of controls a bit
inconsistently, the &lt;code&gt;pointer&lt;/code&gt; cursor styling makes more clear the button and
label are actionable controls.
&lt;/p&gt;
&lt;p&gt;
Props Ankit K Gupta.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35552" title="#35552: defect (bug): Added pointer cursor on theme, plugin, and media uploader (closed: fixed)"&gt;#35552&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #34391 (Harden panel/section UI code by removing contents from being logically ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 20:53:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34391#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34391#comment:30/1472504015701122</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by delawski. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472504013000316"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37770 (Docs improvements for 4.7) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 29 Aug 2016 20:41:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37770#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37770#comment:7/1472503302642968</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38434" title="Themes: Correct the type for the `$name` parameter of the ..."&gt;38434&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Themes: Correct the type for the &lt;code&gt;$name&lt;/code&gt; parameter of the &lt;code&gt;get_header&lt;/code&gt;, &lt;code&gt;get_footer&lt;/code&gt;, &lt;code&gt;get_sidebar&lt;/code&gt;, and &lt;code&gt;get_template_part_{$slug}&lt;/code&gt; hooks.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37770" title="#37770: task (blessed): Docs improvements for 4.7 (closed: fixed)"&gt;#37770&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38434]: Themes: Correct the type for the `$name` parameter of the ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 29 Aug 2016 20:41:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38434</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38434/1472503302179960</guid>
      <description>&lt;p&gt;
Themes: Correct the type for the &lt;code&gt;$name&lt;/code&gt; parameter of the &lt;code&gt;get_header&lt;/code&gt;, &lt;code&gt;get_footer&lt;/code&gt;, &lt;code&gt;get_sidebar&lt;/code&gt;, and &lt;code&gt;get_template_part_{$slug}&lt;/code&gt; hooks.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37770" title="#37770: task (blessed): Docs improvements for 4.7 (closed: fixed)"&gt;#37770&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37867 (Document return types for create/create_and_get/create_many() methods ...) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Mon, 29 Aug 2016 20:26:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37867#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37867#comment:5/1472502398806313</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35395 (Provide a better gateway for code-based theme customizations with the ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 29 Aug 2016 19:05:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35395#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35395#comment:13/1472497500328552</guid>
      <description>&lt;p&gt;
Per the discussion in the customize meeting, linked above, we're planning to move forward with CSSTidy in core to support this and handle sanitization.
&lt;/p&gt;
&lt;p&gt;
Additionally, due to problems with the amount of data stored in options, we'll need to use a post type with a post for each theme, which would also provide revisions directly.
&lt;/p&gt;
&lt;p&gt;
While we'd ideally also bundle a code editor for this, that part isn't required for a first pass. We'll need to find the best 3rd-party CSS editor, or perhaps make our own since we only need CSS (see previously &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/14527" title="Remove codepress dir. see #13307."&gt;[14527]&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
I probably won't have time to flesh out those pieces for 4.7; is anyone else interested in picking this up?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 18:59:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:122</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:122/1472497189897073</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by swissspidy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472497187000262"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Mon, 29 Aug 2016 18:54:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:121</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:121/1472496898672687</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:117" title="Comment 117"&gt;Clorith&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This increases the probability of breakage, and we are enabling them to do so, we are "making core pluggable" (which is a terminology I like for this) by allowing replacement of previously non-replaceable classes, and it means even something simple like a bugfix to a class in a point release, which are automatically pushed, could result in unexpected behavior one way or another.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What you're describing is certainly something worth discussing. I'm not happy with that terminology, however, because it relates this to the already "pluggable" elements in WordPress Core like &lt;code&gt;db.php&lt;/code&gt; and &lt;code&gt;advanced-cache.php&lt;/code&gt;. The point about these is that &lt;strong&gt;they are meant to be replaced&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;
Nobody is meant to replace core WordPress classes. And if they do, they would have done it with or without an autoloader. The addition of an autoloader does not in any way change the fact that plugins can already replaces whatever they want on most systems, and cause havoc. Correct me if I'm wrong, but I think that on most systems (those which belong to "end-users"), a plugin can replace any filesystem file within web root if it wants. So, with or without an autoloader, there are no guarantees, and you can't keep malicious/un-smart people from doing malicious/un-smart things.
&lt;/p&gt;
&lt;p&gt;
Does that mean that we should discuss how best to proceed so that some precautions can be taken? Yes, absolutely! But does that mean that we should avoid a definite code improvement because it could be "mis-used"? I don't think so. I'd rather, we make it easier and better for the proper developers to do their jobs and for WordPress Core to more easily adapt to changing requirements.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
You're right that we shouldn't let other plugin or theme developers affect how we implement things, but we DO NEED to take user expectations into consideration, and users won't know what's going on when one plugin declares a core class which another plugin relies on later down the line and gets a whole different behavior because the first one to load their own isn't a carbon copy of core, or they both try to declare that same class because core is pluggable now because we never load up core versions of classes if they are already declared.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
From a users point of view, their site is now broken, and they may not be tech savvy enough to fix it (because a fix to a fatal error requires hands on modifications one way or another), and this would be on us, we enabled them to break it this badly and if we can let them break it, we should at least make an effort to help prevent it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well, although I don't see why this would be an "autoloader issue" (as bad plugins kill users' sites, even today), I understand why we might need to worry that errors happen at a different level and prevent plugin deactivation (although I'm sure almost any "end-users" have had to deal with a WSOD before). So, apart from improving the WordPress error handler in general, we might also improve the standard class loader that gets registered to provide some safeguards. These safeguards would have a minor impact on performance, though, so ideally, we could also provide a switch for the pros to just disable these safeguards. If end-users are a concern, a proper error handler would not kill the site, but allow admin logins in safe-mode and ask the user whether to deactivate the offending plugin. But that's definitely a topic for a different ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37868.diff attached to Ticket #37868</title>
      
        <dc:creator>GeertDD</dc:creator>

      <pubDate>Mon, 29 Aug 2016 18:52:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37868/37868.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37868/37868.diff/1472496732348414</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37868 (Avoid default width styles in the markup of the audio player) created</title>
      
        <dc:creator>GeertDD</dc:creator>

      <pubDate>Mon, 29 Aug 2016 18:51:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37868</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37868/1472496707849643</guid>
      <description>&lt;p&gt;
The markup for every audio player contains inline styles for setting its width to 100%, like below (simplified):
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;div class="wp-audio-shortcode" style="width: 100%;"&amp;gt;
&amp;lt;audio class="wp-audio-shortcode" style="width: 100%;"&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Why not move that style to a stylesheet? It is the default style for &lt;em&gt;every&lt;/em&gt; audio player, so let’s not repeat ourselves each time. Moreover, style attributes in the HTML make it hard to override styles. If you don’t want your audio player to be 100% wide you’re left with two ugly options:
&lt;/p&gt;
&lt;p&gt;
a) Use &lt;code&gt;!important&lt;/code&gt; declarations in your own stylesheet to override it.
&lt;/p&gt;
&lt;p&gt;
b) Filter out the default width like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter( 'shortcode_atts_audio', 'my_shortcode_atts_audio', 10, 4 );
function my_shortcode_atts_audio( $out, $pairs, $atts, $shortcode ) {
	$out['style'] = preg_replace( '~(?:^|\s)width\s*+:\s*+100%;?~i', '', $out['style'] );
	return $out;
}
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Mon, 29 Aug 2016 18:36:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:120</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:120/1472495785193561</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:119" title="Comment 119"&gt;charliespider&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Just a heads up... we're getting the following error popping up when running our unit tests on &lt;a class="ext-link" href="https://circleci.com"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://circleci.com&lt;/a&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;PHP Fatal error:  Class 'WP_HTTP_Cookie' not found
&lt;/pre&gt;&lt;p&gt;
which pulls in master branch from &lt;a class="ext-link" href="git://develop.git.wordpress.org/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;git://develop.git.wordpress.org/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Haven't nailed it down completely yet, but thinking it's a result of the changes in this ticket.
&lt;/p&gt;
&lt;p&gt;
It appears that class-wp-http-cookie.php is not getting loaded despite not being listed in &lt;code&gt;composer.json&lt;/code&gt;: &lt;code&gt;autoload.exclude-from-classmap&lt;/code&gt;, but I haven't read through everything here to see if we are expected to do something different when referencing WP core classes.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The class is actually called &lt;code&gt;WP_Http_Cookie&lt;/code&gt;  (see case).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>charliespider</dc:creator>

      <pubDate>Mon, 29 Aug 2016 18:30:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:119</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:119/1472495419220173</guid>
      <description>&lt;p&gt;
Just a heads up... we're getting the following error popping up when running our unit tests on &lt;a class="ext-link" href="https://circleci.com"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://circleci.com&lt;/a&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;PHP Fatal error:  Class 'WP_HTTP_Cookie' not found
&lt;/pre&gt;&lt;p&gt;
which pulls in master branch from &lt;a class="ext-link" href="git://develop.git.wordpress.org/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;git://develop.git.wordpress.org/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Haven't nailed it down completely yet, but thinking it's a result of the changes in this ticket.
&lt;/p&gt;
&lt;p&gt;
It appears that class-wp-http-cookie.php is not getting loaded despite not being listed in &lt;code&gt;composer.json&lt;/code&gt;: &lt;code&gt;autoload.exclude-from-classmap&lt;/code&gt;, but I haven't read through everything here to see if we are expected to do something different when referencing WP core classes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22237 (Add keyboard shortcuts for collapse/expand, panel-back, and close to ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 18:25:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22237#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22237#comment:50/1472495108925534</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by westonruter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472495107000299"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35186 (Put the Customizer "back" button next to the "Close" button) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 18:23:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35186#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35186#comment:18/1472494991935015</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472494988000291"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34343 (Customizer: Make panel headers sticky?) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 18:22:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34343#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34343#comment:8/1472494945783768</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by clorith. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472494944000288"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36908 (Customizer menus and widgets "search" usability and visual improvements) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 29 Aug 2016 18:21:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36908#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36908#comment:7/1472494862631649</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch: &lt;a class="ext-link" href="https://patch-diff.githubusercontent.com/raw/xwp/wordpress-develop/pull/153.diff"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://patch-diff.githubusercontent.com/raw/xwp/wordpress-develop/pull/153.diff&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34747 (Provide more flexibility for "You are customizing" text) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 18:18:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34747#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34747#comment:13/1472494695971468</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by westonruter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472494693000280"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37335 (Standardized API for themes to add info/links to the customizer) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 18:10:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37335#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37335#comment:7/1472494253748986</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472494252000260"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22058 (Improve custom background properties UI) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 18:09:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22058#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22058#comment:49/1472494195920458</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472494194000257"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35210 (Add notification area to Customizer) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 29 Aug 2016 18:09:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35210#comment:77</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35210#comment:77/1472494194240437</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29158 (Customizer UI Design lacks contrast for visual hierarchy and does not ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 18:08:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29158#comment:65</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29158#comment:65/1472494132740598</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472494130000253"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30738 (JS content templates for base WP_Customize_Control) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 29 Aug 2016 18:04:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30738#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30738#comment:20/1472493870659761</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Adding to 4.7 due to the existing code in Customize Posts which can be lifted.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30738 (JS content templates for base WP_Customize_Control) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 18:01:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30738#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30738#comment:19/1472493712169153</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472493710000233"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36012 (Add .current-ancestor class to any relative menu item ancestor) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:57:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36012#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36012#comment:1/1472493451942529</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1472493450000168"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35552 (Added pointer cursor on theme, plugin, and media uploader) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:51:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35552#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35552#comment:5/1472493112263132</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1472493110000152"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36430 (Style links on Installing plugin page) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:51:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36430#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36430#comment:6/1472493075183505</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Discussed a bit in today's accessibility meeting, noted this screen is still used for installs from .zip files and when JS is off so agreed to make the "Activate" link look like a primary action button, maybe removing the "pipe". Moving to 4.7.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27403 (Improve UI for linking areas of Customizer preview to corresponding ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:47:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27403#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27403#comment:18/1472492863779174</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472492861000178"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35210 (Add notification area to Customizer) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:46:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35210#comment:76</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35210#comment:76/1472492775318097</guid>
      <description>&lt;p&gt;
Closely related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37727" title="#37727: enhancement: Allow for customize control notifications to have extensible templates (closed: fixed)"&gt;#37727&lt;/a&gt; (Allow for customize control notifications to have extensible templates)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34391 (Harden panel/section UI code by removing contents from being logically ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:45:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34391#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34391#comment:29/1472492744311692</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472492741000172"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37650 (Title attribute for comment reply link) closed</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:44:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37650#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37650#comment:4/1472492692692772</guid>
      <description>wontfix: &lt;p&gt;
Hi, @trepmal! Thanks for contributing to WordPress!
&lt;/p&gt;
&lt;p&gt;
The WordPress philosophy has been not to add any additional title attributes, due to their negative impact on accessibility. We discussed this ticket in the weekly bug scrub for accessibility, and have decided this is not something we'll add. There are many other ways to incorporate title attributes, if you wish to, or you can choose a more accessible route by creating accessible tooltips that aren't dependent on a mouse to access.
&lt;/p&gt;
&lt;p&gt;
Here are a couple resources to help with that:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://www.nngroup.com/articles/icon-usability/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.nngroup.com/articles/icon-usability/&lt;/a&gt;
&lt;a class="ext-link" href="http://heydonworks.com/practical_aria_examples/#input-tooltip"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://heydonworks.com/practical_aria_examples/#input-tooltip&lt;/a&gt;
&lt;a class="ext-link" href="http://accessibility.athena-ict.com/aria/examples/tooltip.shtml"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://accessibility.athena-ict.com/aria/examples/tooltip.shtml&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Thank you!
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #35210 (Add notification area to Customizer) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:42:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35210#comment:75</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35210#comment:75/1472492562493911</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472492561000163"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36430 (Style links on Installing plugin page) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:40:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36430#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36430#comment:5/1472492441818688</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1472492440000136"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30937 (Add Customizer state persistence in changesets (formerly “transactions”)) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:31:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30937#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30937#comment:51/1472491874185370</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472491872000126"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37724 (The links in the W (WordPress logo) admin bar dropdown do not have ...) closed</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:30:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37724#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37724#comment:6/1472491809363226</guid>
      <description>wontfix: &lt;p&gt;
Thanks Josh.  Over the last number of releases, WordPress has made an explicit decision to &lt;a href="https://core.trac.wordpress.org/query?summary=~Remove+title+attribute&amp;amp;col=id&amp;amp;col=summary&amp;amp;col=milestone&amp;amp;col=owner&amp;amp;col=type&amp;amp;col=status&amp;amp;col=priority&amp;amp;desc=1&amp;amp;order=id"&gt;remove title attributes&lt;/a&gt; through out core.  The &lt;a class="ext-link" href="https://www.w3.org/TR/html/dom.html#the-title-attribute"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;W3C explicitly points out that title attributes can be problematic&lt;/a&gt; in the HTML spec. If the tester you worked with comes back with some more information, please comment and share it.  Conversation can always continue while ticket is closed.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37650 (Title attribute for comment reply link) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:26:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37650#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37650#comment:3/1472491577220609</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1472491574000086"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37649 (Bind `label`s to form controls in Tools &gt; Export screen) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:24:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37649#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37649#comment:5/1472491442459506</guid>
      <description>&lt;p&gt;
Although this isn't a patch we'll be able to use, thanks for your contribution! If you have the time to create a patch that changes this to an explicit label, that would be awesome! Thank you for contributing!
&lt;/p&gt;
&lt;p&gt;
(And yes, I did cut and paste this comment from the other ticket...)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37648 (Bind label to Plugins &gt; Install search input field) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:23:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37648#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37648#comment:6/1472491410848869</guid>
      <description>&lt;p&gt;
Although this isn't a patch we'll be able to use, thanks for your contribution! If you have the time to create a patch that changes this to an explicit label, that would be awesome! Thank you for contributing!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37724 (The links in the W (WordPress logo) admin bar dropdown do not have ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:22:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37724#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37724#comment:5/1472491376668341</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1472491375000074"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37648 (Bind label to Plugins &gt; Install search input field) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:20:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37648#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37648#comment:5/1472491217414779</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37649" title="#37649: defect (bug): Bind `label`s to form controls in Tools &amp;gt; Export screen (closed: invalid)"&gt;#37649&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37649 (Bind `label`s to form controls in Tools &gt; Export screen) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:19:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37649#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37649#comment:4/1472491180841110</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
As noted in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37648" title="#37648: defect (bug): Bind label to Plugins &amp;gt; Install search input field (closed: invalid)"&gt;#37648&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Because this field is labeled implicitly, adding the for and id attributes doesn't accomplish anything. However, if the label were changed so it did *not* wrap the input, then the for and id attributes were added, this would improve accessibility for users of voice input software.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35395 (Provide a better gateway for code-based theme customizations with the ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:13:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35395#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35395#comment:12/1472490828964036</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472490826000058"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:09:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:13/1472490588444100</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472490586000046"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37649 (Bind `label`s to form controls in Tools &gt; Export screen) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:09:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37649#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37649#comment:3/1472490566212062</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34923 (Allow users to more seamlessly create page-based nav menus during ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:04:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34923#comment:81</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34923#comment:81/1472490278709889</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by westonruter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472490276000030"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37648 (Bind label to Plugins &gt; Install search input field) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:03:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37648#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37648#comment:4/1472490195555939</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1472490192000018"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37649 (Bind `label`s to form controls in Tools &gt; Export screen) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:02:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37649#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37649#comment:2/1472490170660981</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1472490168000015"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37414 (Use `get_network()` instead of global `$current_site`) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 29 Aug 2016 16:25:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37414#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37414#comment:4/1472487951867460</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37414/37414.diff" title="Attachment '37414.diff' in Ticket #37414"&gt;37414.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37414/37414.diff" title="Download"&gt;​&lt;/a&gt; I replaced all instances of &lt;code&gt;get_current_site()&lt;/code&gt; with &lt;code&gt;get_network()&lt;/code&gt;, plus some related adjustments, like changing internal variable names from &lt;code&gt;$current_site&lt;/code&gt; to &lt;code&gt;$current_network&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
While &lt;code&gt;get_network()&lt;/code&gt; is not available on some of these functions, this should not be a problem since there are &lt;code&gt;is_multisite()&lt;/code&gt; checks in place that prevent it from being called. This was similar with &lt;code&gt;get_current_site()&lt;/code&gt; as well, so I was not sure why the function was moved in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38388" title="Multisite: move `get_current_site()` to `load.php` so that it can be ..."&gt;38388&lt;/a&gt;. The global &lt;code&gt;$current_site&lt;/code&gt; is not available on non-multisite, so I think that function should remain in an &lt;code&gt;ms-*.php&lt;/code&gt; file.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37414.diff attached to Ticket #37414</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 29 Aug 2016 16:18:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37414/37414.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37414/37414.diff/1472487506804582</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37523 (Unit tests: Move classes out of includes/functions.php into their own file) reopened</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 29 Aug 2016 16:08:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37523#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37523#comment:4/1472486914894805</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37523#comment:3" title="Comment 3"&gt;TimothyBlynJacobs&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This broke unit tests that I have that use the &lt;code&gt;Basic_Object&lt;/code&gt; class in a test since they are now only loaded in that test file instead of the functions file. Could the require calls be moved to the functions file so those classes are always available?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #37523 (Unit tests: Move classes out of includes/functions.php into their own file) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:59:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37523#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37523#comment:3/1472486350222228</guid>
      <description>&lt;p&gt;
This broke unit tests that I have that use the &lt;code&gt;Basic_Object&lt;/code&gt; class in a test since they are now only loaded in that test file instead of the functions file. Could the require calls be moved to the functions file so those classes are always available?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35552 (Added pointer cursor on theme, plugin, and media uploader) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:53:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35552#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35552#comment:4/1472486001239559</guid>
      <description>&lt;p&gt;
Refreshed patch resets the cursor style to &lt;code&gt;default&lt;/code&gt; if the input field is, by chance, disabled.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35552.diff attached to Ticket #35552</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:52:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35552/35552.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35552/35552.diff/1472485938254738</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35552 (Added pointer cursor on theme, plugin, and media uploader) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:43:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35552#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35552#comment:3/1472485413023071</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35552 (Added pointer cursor on theme, plugin, and media uploader) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:40:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35552#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35552#comment:2/1472485237149741</guid>
      <description>&lt;p&gt;
Probably, the reason why these file upload inputs are not styled is because, historically, they have always been very difficult if not impossible to style due to the fact this kind of inputs depends on the operating system, especially the "browse" button. Modern browsers allow some more styling through the shadow-DOM and exotic proprietary CSS selectors but honestly I think it's better to stay away from that and do just what is proposed in this ticket :)
Using the pointer cursor is a nice, small, improvement and I don't see any reason why it shouldn't be done. +1 from me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37413 (Use `get_site()` instead of global `$current_blog`) closed</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:38:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37413#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37413#comment:2/1472485132846661</guid>
      <description>invalid: &lt;p&gt;
I just searched through the WordPress codebase and actually wasn't able to find any occurrence of the &lt;code&gt;$current_blog&lt;/code&gt; global where the code was not part of the global scope anyway. Therefore I would consider this an invalid ticket - when I opened it, I assumed there were cases where this change was necessary, so it's great that there aren't. :)
&lt;/p&gt;
&lt;p&gt;
Although I mentioned this in the ticket description, I don't think we should (and even can) replace &lt;code&gt;get_current_blog_id()&lt;/code&gt; occurrences. While it would be nice for more usage of current naming conventions in the code, &lt;code&gt;get_current_blog_id()&lt;/code&gt; is easier to use than &lt;code&gt;get_site()-&amp;gt;id&lt;/code&gt; and, more importantly, also works outside of Multisite.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>dnaber-de</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:37:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:118</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:118/1472485061117601</guid>
      <description>&lt;p&gt;
Well, everywhere you filter an object instance, plugins are able to compromise the type (and some doing so by now). So this problem already exists. Bad code can pretty much break anything in some way, that should not influence code development.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37762 (cache_results parameter doesn't prevent queried posts from being added ...) updated</title>
      
        <dc:creator>achbed</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:34:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37762#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37762#comment:3/1472484887541723</guid>
      <description>&lt;p&gt;
What's interesting is that the individual posts are loaded and cached to the object cache individually, but the combined query result is what is controlled via the &lt;code&gt;cache_results&lt;/code&gt; parameter. This seems to meet the defined parameter intent because it's not caching the full result of the query.  If the posts themselves change enough that you can't use object caching I'd be truly surprised.
&lt;/p&gt;
&lt;p&gt;
If you want to prevent the posts themselves from caching, that appears to be a different request and intent.  Maybe an additional &lt;code&gt;cache_posts&lt;/code&gt; parameter to control that piece of the caching puzzle?
&lt;/p&gt;
&lt;p&gt;
We should update the docs at the very least to explain this behavior.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37867 (Document return types for create/create_and_get/create_many() methods ...) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:29:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37867#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37867#comment:4/1472484568693893</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Oops.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37867 (Document return types for create/create_and_get/create_many() methods ...) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:28:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37867#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37867#comment:3/1472484531507835</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37867#comment:1" title="Comment 1"&gt;johnbillion&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Which IDE are you using? This sounds like something that an IDE should be able to handle easily without needing to be prompted by a potentially &lt;em&gt;very&lt;/em&gt; long list of &lt;code&gt;@method&lt;/code&gt; comments.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
PhpStorm. It is only 3 method comments. I hope the patch makes it more clear, maybe my explanation wasn't very good.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37867 (Document return types for create/create_and_get/create_many() methods ...) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:27:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37867#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37867#comment:2/1472484475798413</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37867/37867.diff" title="Attachment '37867.diff' in Ticket #37867"&gt;37867.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37867/37867.diff" title="Download"&gt;​&lt;/a&gt; is a first pass, probably we should decide on a standard for the class descriptions here. What I used differs from the one for bookmarks, which is the only one that had a docblock. I have omitted &lt;code&gt;@since&lt;/code&gt; tags, although they could also be added, and &lt;a href="https://core.trac.wordpress.org/browser/trunk/tests/includes/factory.php?rev=25002"&gt;I guess would be 3.7&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37867 (Document return types for create/create_and_get/create_many() methods ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:26:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37867#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37867#comment:1/1472484389184566</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Which IDE are you using? This sounds like something that an IDE should be able to handle easily without needing to be prompted by a potentially &lt;em&gt;very&lt;/em&gt; long list of &lt;code&gt;@method&lt;/code&gt; comments.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37866 (Introduce `$network_id` parameter in `get_user_count()`) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:24:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37866#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37866#comment:1/1472484284870823</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37866/37866.diff" title="Attachment '37866.diff' in Ticket #37866"&gt;37866.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37866/37866.diff" title="Download"&gt;​&lt;/a&gt; introduces the new parameter.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37867.diff attached to Ticket #37867</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:24:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37867/37867.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37867/37867.diff/1472484279811044</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>37866.diff attached to Ticket #37866</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:24:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37866/37866.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37866/37866.diff/1472484253520332</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37867 (Document return types for create/create_and_get/create_many() methods ...) created</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:22:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37867</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37867/1472484165569013</guid>
      <description>&lt;p&gt;
The &lt;code&gt;create()&lt;/code&gt;, &lt;code&gt;create_and_get()&lt;/code&gt;, and &lt;code&gt;create_many()&lt;/code&gt; methods are defined on the base factory class, and use other methods that are defined as abstract and implemented by the child classes. So just documenting the return types of the child class methods isn't really that helpful, and probably won't be picked up by IDEs. But by using &lt;code&gt;@method&lt;/code&gt; annotations in the class-level docblocks for each of the factories we can provide this information in a form that will be helpful to those of use who use intelligent IDEs, as well as any developer who is new to the tests.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37866 (Introduce `$network_id` parameter in `get_user_count()`) created</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:22:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37866</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37866/1472484138034230</guid>
      <description>&lt;p&gt;
The function &lt;code&gt;get_user_count()&lt;/code&gt; currently only supports checking for user count of the current network. Since it is easily possible to retrieve that value for other networks as well using &lt;code&gt;get_network_option()&lt;/code&gt; (since 4.4), I think we should support that functionality here as well by introducing an optional &lt;code&gt;$network_id&lt;/code&gt; parameter that will default to the current network.
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37865" title="#37865: enhancement: Allow using the `$network_id` parameter of `get_blog_count()` again (closed: fixed)"&gt;#37865&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37762 (cache_results parameter doesn't prevent queried posts from being added ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:22:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37762#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37762#comment:2/1472484134880959</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by mark-k. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472484131000242"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37865 (Allow using the `$network_id` parameter of `get_blog_count()` again) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:18:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37865#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37865#comment:1/1472483886323292</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37865/37865.diff" title="Attachment '37865.diff' in Ticket #37865"&gt;37865.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37865/37865.diff" title="Download"&gt;​&lt;/a&gt; makes use of the parameter again, by leveraging the power of &lt;code&gt;get_network_option()&lt;/code&gt;. In the DocBlock, I also added notices for both the 3.7 change (previously missing) and the new change.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37865.diff attached to Ticket #37865</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:16:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37865/37865.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37865/37865.diff/1472483763488474</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37865 (Allow using the `$network_id` parameter of `get_blog_count()` again) created</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:14:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37865</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37865/1472483651420557</guid>
      <description>&lt;p&gt;
The &lt;code&gt;$network_id&lt;/code&gt; parameter of &lt;code&gt;get_blog_count()&lt;/code&gt; has not been used since 3.1, and was officially deprecated in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/25113" title="Deprecate $network_id argument in get_blog_count(). props jeremyfelt. ..."&gt;25113&lt;/a&gt;. When looking at the history, it appears that this was done to be able to fully rely on &lt;code&gt;get_site_option()&lt;/code&gt; which does not support passing a network ID.
&lt;/p&gt;
&lt;p&gt;
However, now we have &lt;code&gt;get_network_option()&lt;/code&gt; which _does_ support a network ID, so I think we should un-deprecate this parameter and make use of it again (is that possible?).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Mon, 29 Aug 2016 14:59:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:117</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:117/1472482753186608</guid>
      <description>&lt;p&gt;
I fear I might've not used my words right, and my intent wasn't very clear, so let me try again :)
&lt;/p&gt;
&lt;p&gt;
My worry is that per today's approach, core loads certain things up, and they are there; with auto loading, they're never really loaded until they are needed (if not already loaded), so if a plugin loads up the same class name, we won't load ours. There's currently a list of some 70-80 files from &lt;code&gt;wp-settings.php&lt;/code&gt; which are not pluggable in any way, but with this, those would also be re-enabled (unless I'm missing something here, and I would be happy to be told so :) )
&lt;/p&gt;
&lt;p&gt;
This increases the probability of breakage, and we are enabling them to do so, we are "making core pluggable" (which is a terminology I like for this) by allowing replacement of previously non-replaceable classes, and it means even something simple like a bugfix to a class in a point release, which are automatically pushed, could result in unexpected behavior one way or another.
&lt;/p&gt;
&lt;p&gt;
You're right that we shouldn't let other plugin or theme developers affect how we implement things, but we DO NEED to take user expectations into consideration, and users won't know what's going on when one plugin declares a core class which another plugin relies on later down the line and gets a whole different behavior because the first one to load their own isn't a carbon copy of core, or they both try to declare that same class because core is pluggable now because we never load up core versions of classes if they are already declared.
From a users point of view, their site is now broken, and they may not be tech savvy enough to fix it (because a fix to a fatal error requires hands on modifications one way or another), and this would be on us, we enabled them to break it this badly and if we can let them break it, we should at least make an effort to help prevent it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37864 (No shiny update when updating a plugin in a non-English site) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 29 Aug 2016 14:57:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37864#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37864#comment:4/1472482638633339</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This appears to be an issue with the Spanish translation. It's missing the &lt;code&gt;%6$s&lt;/code&gt; placeholder which adds the &lt;code&gt;update-link&lt;/code&gt; class attribute which the shiny updater uses.
&lt;/p&gt;
&lt;p&gt;
There's &lt;a class="ext-link" href="https://translate.wordpress.org/projects/wp/dev/es/default?filters%5Bterm%5D=There+is+a+new+version&amp;amp;filters%5Bstatus%5D=either"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;no translation listed on translate.wordpress.org&lt;/a&gt; for the phrase &lt;code&gt;There is a new version of %1$s available. &amp;lt;a href="%2$s" %3$s&amp;gt;View version %4$s details&amp;lt;/a&amp;gt; or &amp;lt;a href="%5$s" %6$s&amp;gt;update now&amp;lt;/a&amp;gt;.&lt;/code&gt; for Spanish (&lt;code&gt;es_ES&lt;/code&gt;), yet a translation does appear in the downloaded translation file: &lt;code&gt;Hay disponible una nueva versión de %1$s. &amp;lt;a href=\"%2$s\" class=\"thickbox\" title=\"%3$s\"&amp;gt;Ver los detalles de la versión %4$s&amp;lt;/a&amp;gt; o &amp;lt;a href=\"%5$s\"&amp;gt;actualízala ahora&amp;lt;/a&amp;gt;.&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
@ocean90 Can you take a look? This is the third issue we've seen where a translation doesn't have the correct placeholder and it's being allowed through somehow.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37864 (No shiny update when updating a plugin in a non-English site) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 29 Aug 2016 14:40:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37864#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37864#comment:3/1472481624004856</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Sorry @leemon, I misunderstood your original report. The update is successfully performed, but uses the bleak old updater instead of the shiny new updater.
&lt;/p&gt;
&lt;p&gt;
I've confirmed this is the case. Clicking the &lt;code&gt;actualízala ahora&lt;/code&gt; link takes you to the bleak updates screen instead of performing a shiny update.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34084 (Automatically log user in after installation) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 29 Aug 2016 14:21:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34084#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34084#comment:4/1472480506617079</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've been playing around with this behaviour for a few days and I now have a patch.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34084/34084.patch" title="Attachment '34084.patch' in Ticket #34084"&gt;34084.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34084/34084.patch" title="Download"&gt;​&lt;/a&gt; does the following:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Logs the user in and redirects them to the admin area as soon as WordPress is installed.
&lt;/li&gt;&lt;li&gt;Falls back to displaying the existing "Success!" message if headers have been sent (eg. from a malformed &lt;code&gt;wp-config.php&lt;/code&gt;, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36215" title="#36215: enhancement: Friendlier &amp;#34;headers already sent&amp;#34; error message on wp-login.php (closed: wontfix)"&gt;#36215&lt;/a&gt;) which would otherwise result in a white screen of death.
&lt;/li&gt;&lt;li&gt;Correctly populates the fallback value for &lt;code&gt;COOKIEHASH&lt;/code&gt; during bootstrap, which is otherwise an empty string during installation (due to lack of a &lt;code&gt;siteurl&lt;/code&gt; option). This allows the correct cookie to be set when logging the user in.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
What needs testing:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Password managers:&lt;/strong&gt; I've been testing with 1Password. If you save your login when prompted to, then your credentials are correctly presented when subsequently visiting the login screen. One thing to note is that the form field names on the installation screen differ from those on the login screen, so some password managers may not deal with this so well. Installation and subsequent login should be tested with other password managers such as LastPass, KeePass, and Dashlane, and built-in browser password managers (Chrome, Firefox, Edge) on desktop and mobile. The intent here is to ensure that password management works equally well as it does now, given that the form fields have different names. I'm 99% sure it'll be ok.
&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Welcome screen:&lt;/strong&gt; The "Welcome to WordPress!" panel on the dashboard is now the first thing people see after installing WordPress. It takes the place of the "Success!" message. Does this panel need further improvement for UX purposes? (If so, it should probably go into a separate ticket.) See also the focus on NUX.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37864 (No shiny update when updating a plugin in a non-English site) updated</title>
      
        <dc:creator>leemon</dc:creator>

      <pubDate>Mon, 29 Aug 2016 14:10:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37864#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37864#comment:2/1472479834685688</guid>
      <description>&lt;ul&gt;&lt;li&gt;No errors reported in PHP's error log
&lt;/li&gt;&lt;li&gt;No JS errors reported in browser's console
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I've set both WP_DEBUG and SCRIPT_DEBUG to true
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>34084.patch attached to Ticket #34084</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 29 Aug 2016 13:59:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34084/34084.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34084/34084.patch/1472479183878385</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #34084 (Automatically log user in after installation) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 29 Aug 2016 13:59:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34084#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34084#comment:3/1472479142900509</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37864 (No shiny update when updating a plugin in a non-English site) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 29 Aug 2016 13:57:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37864#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37864#comment:1/1472479065649871</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the report, @leemon.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Are you able to take a look in PHP's error log and see if there are any errors being reported?
&lt;/li&gt;&lt;li&gt;Are there any JavaScript errors being reported in your browser's console?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36215 (Friendlier "headers already sent" error message on wp-login.php) updated</title>
      
        <dc:creator>juanfra</dc:creator>

      <pubDate>Mon, 29 Aug 2016 13:47:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36215#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36215#comment:6/1472478462662059</guid>
      <description>&lt;p&gt;
Good! That looks great. The only thing (from what I've tested) is that the error message is displayed when somebody goes (or is redirected) to &lt;code&gt;wp-login.php&lt;/code&gt; directly. If you visit &lt;code&gt;wp-admin/&lt;/code&gt; there's not any kind of notice, and you get the php error.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>update.jpg attached to Ticket #37864</title>
      
        <dc:creator>leemon</dc:creator>

      <pubDate>Mon, 29 Aug 2016 13:29:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37864/update.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37864/update.jpg/1472477371645367</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37864 (No shiny update when updating a plugin in a non-English site) created</title>
      
        <dc:creator>leemon</dc:creator>

      <pubDate>Mon, 29 Aug 2016 13:29:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37864</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37864/1472477344606927</guid>
      <description>&lt;p&gt;
Steps to reproduce:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Set "Spanish" as Site Language
&lt;/li&gt;&lt;li&gt;Click the "actualízala ahora" link in any non-updated plugin in the Plugins screen
&lt;/li&gt;&lt;li&gt;No Shiny Update, but Bleak Screen of Sadness
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36215 (Friendlier "headers already sent" error message on wp-login.php) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 29 Aug 2016 13:13:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36215#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36215#comment:5/1472476407966572</guid>
      <description>wontfix: &lt;p&gt;
It turns out that this functionality is already in place. See the above screenshot.
&lt;/p&gt;
&lt;p&gt;
I thought about suppressing the &lt;code&gt;Cannot modify header information - headers already sent&lt;/code&gt; errors that appear if error output is enabled, but this actually proves to be a very effective phrase to search for in addition to following the links in the above message.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Screen Shot 2016-08-29 at 14.10.51.png attached to Ticket #36215</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 29 Aug 2016 13:11:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36215/Screen%20Shot%202016-08-29%20at%2014.10.51.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36215/Screen%20Shot%202016-08-29%20at%2014.10.51.png/1472476275599692</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37075 (get_terms() argument documentation should point to ...) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 29 Aug 2016 13:02:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37075#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37075#comment:2/1472475745346821</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
All yours :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37680 (PHP Warning: ini_get_all() has been disabled for security reasons) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Mon, 29 Aug 2016 12:55:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37680#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37680#comment:17/1472475331503097</guid>
      <description>&lt;p&gt;
@dd32 &lt;code&gt;function_exists()&lt;/code&gt; &lt;a class="ext-link" href="https://secure.php.net/manual/en/function.function-exists.php#refsect1-function.function-exists-notes"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;doesn't detect disabled functions&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;strong&gt;Note:&lt;/strong&gt;
A function name may exist even if the function itself is unusable due to configuration or compiling options (with the image functions being an example).
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 29 Aug 2016 12:36:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:116</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:116/1472474211302755</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:113" title="Comment 113"&gt;Clorith&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is the part that worries me, you say they shouldn't, I agree. But from experience, they will, they most definitely will.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree with @schlessera - I don't think it's a good idea to base code decisions in Core on how developers might misuse it. There's always ways that someone can mess up WordPress by doing things in a way that are not intended to be handled that way. Anything like that falls under the second type of error condition and should fatally fail if possible (so that they find out it's wrong during development) or be forbidden by guidelines like "Writing a Plugin" (where it is already stated that one should use a custom prefix for custom stuff).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Just look at 4.6 which had this with a single generically named function for &lt;code&gt;the_post_thumbnail_caption&lt;/code&gt; which themes and plugins were already using, already declared function and classes means server error, this can't be fixed without accessing the file system in some way, which is a technical step many of our users are not comfortable making (and we shouldn't force upon them if we can avoid it).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is an example of exactly the above. A plugin or theme that declares such a function (especially without a &lt;code&gt;function_exists&lt;/code&gt; check) is most certainly badly developed to some degree. These plugins and themes will always exist, and us not making it easier for them to hijack stuff will not make them go away.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37697 (Strange behavior with thumbnails on preview in 4.6) reopened</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Mon, 29 Aug 2016 12:25:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37697#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37697#comment:15/1472473559646974</guid>
      <description>&lt;p&gt;
Fixed in trunk. Reopening for minor.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #37697 (Strange behavior with thumbnails on preview in 4.6) closed</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Mon, 29 Aug 2016 12:24:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37697#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37697#comment:14/1472473449914755</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38433" title="Post Thumbnails: Prevent post thumbnail previews from spilling into ..."&gt;38433&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Post Thumbnails: Prevent post thumbnail previews from spilling into other images.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38118" title="Post Thumbnails: Only update featured images when saving a post.
 ..."&gt;[38118]&lt;/a&gt;, when previewing a page with a secondary loop, all post&lt;br /&gt;
thumbnails would be filtered to display the post thumbnail for the&lt;br /&gt;
page being previewed. This ensures &lt;code&gt;_wp_preview_post_thumbnail_filter()&lt;/code&gt;&lt;br /&gt;
is only applied if the &lt;code&gt;$post_id&lt;/code&gt; of the post meta being filtered is&lt;br /&gt;
equal to the post or page being previewed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props swisspidy, joemcgill.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37697" title="#37697: defect (bug): Strange behavior with thumbnails on preview in 4.6 (closed: fixed)"&gt;#37697&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38433]: Post Thumbnails: Prevent post thumbnail previews from spilling into ...</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Mon, 29 Aug 2016 12:24:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38433</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38433/1472473449397501</guid>
      <description>&lt;p&gt;
Post Thumbnails: Prevent post thumbnail previews from spilling into other images.
&lt;/p&gt;
&lt;p&gt;
After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38118" title="Post Thumbnails: Only update featured images when saving a post.
 ..."&gt;[38118]&lt;/a&gt;, when previewing a page with a secondary loop, all post
thumbnails would be filtered to display the post thumbnail for the
page being previewed. This ensures &lt;code&gt;_wp_preview_post_thumbnail_filter()&lt;/code&gt;
is only applied if the &lt;code&gt;$post_id&lt;/code&gt; of the post meta being filtered is
equal to the post or page being previewed.
&lt;/p&gt;
&lt;p&gt;
Props swisspidy, joemcgill.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37697" title="#37697: defect (bug): Strange behavior with thumbnails on preview in 4.6 (closed: fixed)"&gt;#37697&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37863 (HTTP/1.1 defined header in wp-comments-post.php) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 29 Aug 2016 11:59:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37863#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37863#comment:2/1472471985635801</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38432" title="Comments: Add support for all HTTP protocol versions when returning a ..."&gt;38432&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Comments: Add support for all HTTP protocol versions when returning a 405 from &lt;code&gt;wp-comments-post.php&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37863" title="#37863: defect (bug): HTTP/1.1 defined header in wp-comments-post.php (closed: fixed)"&gt;#37863&lt;/a&gt;&lt;br /&gt;
Props tnash&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38432]: Comments: Add support for all HTTP protocol versions when returning a ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 29 Aug 2016 11:59:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38432</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38432/1472471985139377</guid>
      <description>&lt;p&gt;
Comments: Add support for all HTTP protocol versions when returning a 405 from &lt;code&gt;wp-comments-post.php&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37863" title="#37863: defect (bug): HTTP/1.1 defined header in wp-comments-post.php (closed: fixed)"&gt;#37863&lt;/a&gt;
Props tnash
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37863 (HTTP/1.1 defined header in wp-comments-post.php) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 29 Aug 2016 11:55:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37863#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37863#comment:1/1472471755559731</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the report, Tim!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22363 (Accents in attachment filenames should be sanitized) updated</title>
      
        <dc:creator>DrProtocols</dc:creator>

      <pubDate>Mon, 29 Aug 2016 09:20:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22363#comment:76</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22363#comment:76/1472462442763090</guid>
      <description>&lt;p&gt;
Whilst a little late to the game I would say resolving this issue (and perhaps if the resolution also extended to transliterating all international characters in a uploaded filenames and ensuring all lower-case) would be a massive win in terms of site portability since issues can often arise with character set support on different platforms and also case-sensitive vs case-insensitive filesystems.
&lt;/p&gt;
&lt;p&gt;
The IEEE Portable Filename Character Set (&lt;a class="ext-link" href="http://pubs.opengroup.org/onlinepubs/009695399/basedefs/xbd_chap03.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://pubs.opengroup.org/onlinepubs/009695399/basedefs/xbd_chap03.html&lt;/a&gt; section 3.276) but with the added condition of lower-case only is an ideal goal for any uploaded media file.
&lt;/p&gt;
&lt;p&gt;
To paraphrase Shakespeare, "A file by any other name still displays the same".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Mon, 29 Aug 2016 08:52:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:115</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:115/1472460725754402</guid>
      <description>&lt;p&gt;
I feel there are differences in how people perceive "error conditions" and their use/handling in software development.
&lt;/p&gt;
&lt;p&gt;
The way I see it, there are two general types of error conditions:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Error conditions that are due to something in the required context of your piece of code not being in the state you were expecting. This is stuff like the DB not being accessible, a query that does not produce results, etc... These types of error conditions need to be gracefully handled, as they occur at runtime for otherwise perfectly valid code. A 100% bug-free (yeah, right) plugin can still be hit by a DB connection issue.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;Error conditions that are due to code that is logically broken, in whatever way. This is stuff like a plugin using the wrong function, omitting required arguments, overriding what is not to be overridden, etc... These types of errors need to break as soon and as hard as possible. You don't want to continue "somewhat running correctly" with broken code, only to have it completely failed a month later on the production server. The more critical your code base fails with such errors, the better.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
So, under these assumptions, someone overriding a WordPress Core class, and doing stuff that is not meant to be done, is creating error conditions of the second type. Ideally, this would reliably throw a hundred error messages at them. This is currently not the case, either with or without autoloader. This does not mean however that we should try to "avoid" throwing errors in such a case.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Mon, 29 Aug 2016 08:09:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:114</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:114/1472458193997698</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:113" title="Comment 113"&gt;Clorith&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I was thinking of ways we could possibly sign core classes so we don't auto load plugin/theme ones as replacements […]
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That way exists already: namespaces, available since PHP 5.3.
&lt;/p&gt;
&lt;p&gt;
But I agree with @schlessera: Whoever tries to replace core classes will run into many problems immediately, and their code &lt;em&gt;should&lt;/em&gt; break. This is not a problem the core has to resolve.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33349 (Synchronous XMLHttpRequest on the main thread is deprecated) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 07:19:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33349#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33349#comment:13/1472455158633382</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-editor by iseulde. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1472455155000011"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37863 (HTTP/1.1 defined header in wp-comments-post.php) created</title>
      
        <dc:creator>tnash</dc:creator>

      <pubDate>Mon, 29 Aug 2016 07:17:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37863</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37863/1472455021506545</guid>
      <description>&lt;pre class="wiki"&gt;if ( 'POST' != $_SERVER['REQUEST_METHOD'] ) {
        header('Allow: POST');
        header('HTTP/1.1 405 Method Not Allowed');
        header('Content-Type: text/plain');
        exit;
}
&lt;/pre&gt;&lt;p&gt;
Should ideally be protocol agnostic, to support HTTP/2 in line with other files this should probably be
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( 'POST' != $_SERVER['REQUEST_METHOD'] ) {
$protocol = $_SERVER['SERVER_PROTOCOL'];
       	if ( ! in_array( $protocol, array( 'HTTP/1.1', 'HTTP/2', 'HTTP/2.0' ) ) ) {
                $protocol = 'HTTP/1.0';
       	}
        header('Allow: POST');
        header("$protocol 405 Method Not Allowed");
        header('Content-Type: text/plain');
        exit;
}
&lt;/pre&gt;&lt;p&gt;
in line with other files, which can't use wp_get_server_protocol(); prior to wp_load.php
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Mon, 29 Aug 2016 06:58:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:113</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:113/1472453903132108</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:112" title="Comment 112"&gt;schlessera&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Another thing that needs clarification: if we have autoloading, would a plugin be able to stop some of the core classes from loading, noop or replace them etc. That would be a backwards compatibility disaster down the road :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, a plugin could potentially do this if it would &lt;code&gt;require&lt;/code&gt; a class with the same name before it was loaded through the autoloader. However, I can't see why a plugin would want to do that, and it would probably break half of the time, because autoloading means there's no set point in time where you know the class was or wasn't loaded any more. Also, I think there's a number of classes and functions that contain a &lt;code&gt;class_exists()&lt;/code&gt; check before being loaded, so these could just as easily be replaced by a plugin version.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is the part that worries me, you say they shouldn't, I agree. But from experience, they will, they most definitely will.
&lt;/p&gt;
&lt;p&gt;
I can guarantee that this will lead to an increase in broken setups, plugins and themes will re-declare classes, they won't use &lt;code&gt;class_exists&lt;/code&gt; (because why should they, core will only make this a problem if core is loaded before them, there's not much consideration for other plugins and themes in that regard), they will have class name collisions with other plugins that are trying to be just as clever.
&lt;/p&gt;
&lt;p&gt;
Just look at 4.6 which had this with a single generically named function for &lt;code&gt;the_post_thumbnail_caption&lt;/code&gt; which themes and plugins were already using, already declared function and classes means server error, this can't be fixed without accessing the file system in some way, which is a technical step many of our users are not comfortable making (and we shouldn't force upon them if we can avoid it).
&lt;/p&gt;
&lt;p&gt;
I was thinking of ways we could possibly sign core classes so we don't auto load plugin/theme ones as replacements, but that won't work if they just do an include or require right off the bat, which is the more likely scenario than them piggybacking off a core auto loader.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Mon, 29 Aug 2016 06:39:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:112</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:112/1472452749050757</guid>
      <description>&lt;p&gt;
Regarding the difficulties with the build-time move from &lt;code&gt;src/*&lt;/code&gt; paths to final paths, there is an alternative solution:
We could use a custom autoloader generator that does not use relative paths, but rather paths based on a set constant, like &lt;code&gt;ABSPATH&lt;/code&gt;. This would remove any assumptions about the build steps changing the folder hierarchy, as long as the surrounding code always properly defines this constant.
&lt;/p&gt;
&lt;p&gt;
In reply to @azaozz :
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Classes autoloading is very nice for OOP apps. However WordPress is not an OOP app. It's true, there are about 200 classes. Many of them are just containers for namespacing the functions inside. These are not meant to be extended or used in any OOP way.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Autoloading has several benefits out of the box, even with a more procedural codebase like WordPress:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Instead of loading everything that might be used within a given code path (which often ends up being almost the entire code base), you effectively only load and process the exact amount of code you need, when you need it. This will most probably reduce (only benchmarks can tell for sure) memory consumption and processor work, and result in faster load times. I expect that especially AJAX calls (which often only do a small task and immediately die) to see drastic improvements, once the move to autoloading is completed.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;The code does not need to know the path to classes anymore. This removes a lot of hard-coded strings and assumptions, and makes moving and reorganizing the code a breeze. After work on the autoloader is completed, moving files around would not be a breaking change anymore, as only the autoloader generator should need to know about their location in the first place.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Usage of an autoloader makes a lot of "timing" related bugs obvious, where code was only working "by chance" because the exact execution path of a section of code was necessary to have the correct files loaded when they were used.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;An autoloader makes the inclusion of third-party libraries (of which there are a number already included within WP Core) much easier, if each of the libraries just knows how to include its own autoloadable assets. This way, your code does not need to know anything about the actual file layout of a third-party library, it just needs to know what initial class/function to use.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;The order of loading becomes irrelevant, as everything is loaded at the point where it is required.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Not all of these benefits can be completely delivered with this first iteration, because the code base is not yet fully adapted to make the best use of an autoloader. But already having an autoloader is a first necessary step, and it makes a lot of other changes to the code much easier.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There are also about 4750 "loose" functions. What does autoloading do for them?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not much, indeed. Their files can be added to the Composer autoloader, but this will just immediately &lt;code&gt;include&lt;/code&gt; then when the autoloader is loaded.
&lt;/p&gt;
&lt;p&gt;
However, this does not in any way reduce the other benefits that the autoloader provides. The fact that one half of the code base will not become faster and lighter does not make it useless to have the other half become faster and lighter. And I think it is obvious that there's a clear trend towards OOP with the more recent code additions, so the benefits will only grow with time.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Another thing that needs clarification: if we have autoloading, would a plugin be able to stop some of the core classes from loading, noop or replace them etc. That would be a backwards compatibility disaster down the road :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, a plugin could potentially do this if it would &lt;code&gt;require&lt;/code&gt; a class with the same name before it was loaded through the autoloader. However, I can't see why a plugin would want to do that, and it would probably break half of the time, because autoloading means there's no set point in time where you know the class was or wasn't loaded any more. Also, I think there's a number of classes and functions that contain a &lt;code&gt;class_exists()&lt;/code&gt; check before being loaded, so these could just as easily be replaced by a plugin version.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37697 (Strange behavior with thumbnails on preview in 4.6) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 29 Aug 2016 06:02:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37697#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37697#comment:13/1472450520846254</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
We should get this into trunk to get more feedback.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36908 (Customizer menus and widgets "search" usability and visual improvements) updated</title>
      
        <dc:creator>ryankienstra</dc:creator>

      <pubDate>Mon, 29 Aug 2016 04:59:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36908#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36908#comment:6/1472446753627879</guid>
      <description>&lt;p&gt;
&lt;strong&gt;Pull Request&lt;/strong&gt;
&lt;em&gt;Request For Review&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
Could you please review this &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/153"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;GitHub pull request&lt;/a&gt;? Here's a &lt;a class="ext-link" href="https://cloudup.com/cFRQ_Zxg8QZ"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;screenshot&lt;/a&gt; of the search field that appears on clicking a menu's "Add Items" button.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/153/commits/9d9ffa54825e738d3a144b14c520b77328696978"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Commit 9d9ffa54&lt;/a&gt; : Create &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/compare/trac-36908?expand=1#diff-49c6fb18cfad3f9946aa8ca15b809b3fR770"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;search icon&lt;/a&gt; in &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;, using neighbor &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; with &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/compare/trac-36908?expand=1#diff-6bdd5041777c50e624f1d0beae2e0b7cR1453"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;:after&lt;/a&gt;. It's not possible to set this as a &lt;code&gt;:before&lt;/code&gt; or &lt;code&gt;:after&lt;/code&gt; psuedo-element of the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;. &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/compare/trac-36908?expand=1#diff-6bdd5041777c50e624f1d0beae2e0b7cR1425"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Increase padding-left&lt;/a&gt; from &lt;code&gt;10px&lt;/code&gt; to &lt;code&gt;30px&lt;/code&gt; to create space for this. Mainly copy styling of &lt;code&gt;.clear-results&lt;/code&gt; in &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-admin/css/customize-nav-menus.css#L626"&gt;customize-nav-menus.css#L626&lt;/a&gt;. In menu search field, &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/compare/trac-36908?expand=1#diff-79f9bc58f474eba515dbb6e2822b7a22R628"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;increase clickable area&lt;/a&gt; of x icon.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
One open question is whether the "widgets search field" should have the "same custom control" (red "x" button). So far, this only appears in the &lt;a class="ext-link" href="https://cloudup.com/cFRQ_Zxg8QZ"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;menu search field&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
This ticket's description states:
&lt;code&gt;&lt;/code&gt;&lt;code&gt;Not sure about the widgets search field, ideally it would be great to pair it with the menu items search and implement the same custom control to clear the field&lt;/code&gt;&lt;code&gt;&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37827 (Some classes still need to be moved into their own file) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 29 Aug 2016 04:45:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37827#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37827#comment:15/1472445958618888</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37827#comment:8" title="Comment 8"&gt;wonderboymusic&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38364" title="i18n: move `is_rtl()` to `l10n.php` (which loads way earlier). Load ..."&gt;38364&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
i18n: move &lt;code&gt;is_rtl()&lt;/code&gt; to &lt;code&gt;l10n.php&lt;/code&gt; (which loads way earlier). Load &lt;code&gt;WP_Locale&lt;/code&gt; file in &lt;code&gt;wp-settings.php&lt;/code&gt;. Retire &lt;code&gt;wp-includes/locale.php&lt;/code&gt; - it only loaded the class and the one function, &lt;code&gt;is_rtl()&lt;/code&gt;. If someone loaded this file for fun somewhere else, it would be a fatal error.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37827" title="#37827: enhancement: Some classes still need to be moved into their own file (closed: fixed)"&gt;#37827&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;
AFAICT this has caused a fatal when &lt;code&gt;wp_die()&lt;/code&gt; is called upon mu-plugin/plugin inclusion, as the function now exists much earlier than it can be called.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37680 (PHP Warning: ini_get_all() has been disabled for security reasons) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 29 Aug 2016 03:14:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37680#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37680#comment:16/1472440442883509</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37680 (PHP Warning: ini_get_all() has been disabled for security reasons) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 29 Aug 2016 03:12:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37680#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37680#comment:15/1472440327059449</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36697 (Combining the HTTP requests for obtaining the available nav menu items ...) updated</title>
      
        <dc:creator>curdin</dc:creator>

      <pubDate>Mon, 29 Aug 2016 03:12:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36697#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36697#comment:5/1472440324119570</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch above uses most of the original code and simply puts iterators in where needed. Keen for someone to review and help me align with WordPress preferred syntax.
&lt;/p&gt;
&lt;p&gt;
Also, open to suggestions for a cleaner way to manage the loading state of availableMenuItemContainer.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37335 (Standardized API for themes to add info/links to the customizer) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 29 Aug 2016 03:09:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37335#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37335#comment:6/1472440148825535</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37335/37335.diff" title="Attachment '37335.diff' in Ticket #37335"&gt;37335.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37335/37335.diff" title="Download"&gt;​&lt;/a&gt; is my proposal here, which would need to correspond with the Theme Review Team agreeing to allow top-level links only if they're added via this hook or a custom section. A theme would do something along the lines of:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action( 'customize_themes_panel_header', function( $panel ) {
	echo '&amp;lt;span class="customize-action"&amp;gt;&amp;lt;a href="http://wordpress.org/"&amp;gt;' . __( 'Theme documentation', 'theme-slug' ) . '&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt;';
});
&lt;/pre&gt;&lt;p&gt;
Note that the hook would move to a themes panel heading that is identical in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37661" title="#37661: feature request: A New Experience for Discovering, Installing, and Previewing Themes in ... (closed: fixed)"&gt;#37661&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36697.diff attached to Ticket #36697</title>
      
        <dc:creator>curdin</dc:creator>

      <pubDate>Mon, 29 Aug 2016 03:08:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36697/36697.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36697/36697.diff/1472440096324223</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36281 (Importer Fails to import menu items in PHP7) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Mon, 29 Aug 2016 03:06:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36281#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36281#comment:5/1472439990197025</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Pull request: &lt;a class="ext-link" href="https://github.com/boonebgorges/wordpress-importer/pull/1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/boonebgorges/wordpress-importer/pull/1&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
@boonebgorges I was going to mark this as resolved but I see the pull request was closed and not merged
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37335.diff attached to Ticket #37335</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 29 Aug 2016 03:03:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37335/37335.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37335/37335.diff/1472439835306153</guid>
      <description>&lt;p&gt;
Action hook in themes panel header.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37680 (PHP Warning: ini_get_all() has been disabled for security reasons) reopened</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 29 Aug 2016 02:59:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37680#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37680#comment:14/1472439554608435</guid>
      <description>&lt;p&gt;
re-open for 4.6.1
&lt;/p&gt;
&lt;p&gt;
I took a slightly different route, instead of checking if the function was disabled, simply called &lt;code&gt;function_exists()&lt;/code&gt; which in retrospect is the obvious method..
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #37680 (PHP Warning: ini_get_all() has been disabled for security reasons) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 29 Aug 2016 02:58:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37680#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37680#comment:13/1472439505724046</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38431" title="Bootstrap: Check that `ini_get_all()` exists before calling it, allows ..."&gt;38431&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Bootstrap: Check that &lt;code&gt;ini_get_all()&lt;/code&gt; exists before calling it, allows us to work around hosts who disable the function for "security purposes".&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37680" title="#37680: defect (bug): PHP Warning: ini_get_all() has been disabled for security reasons (closed: fixed)"&gt;#37680&lt;/a&gt; for trunk.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38431]: Bootstrap: Check that `ini_get_all()` exists before calling it, allows ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 29 Aug 2016 02:58:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38431</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38431/1472439505226200</guid>
      <description>&lt;p&gt;
Bootstrap: Check that &lt;code&gt;ini_get_all()&lt;/code&gt; exists before calling it, allows us to work around hosts who disable the function for "security purposes".
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37680" title="#37680: defect (bug): PHP Warning: ini_get_all() has been disabled for security reasons (closed: fixed)"&gt;#37680&lt;/a&gt; for trunk.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37768 (HTTP API No Longer Accepts Integer and Float Values for the 'cookies' ...) reopened</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 29 Aug 2016 02:42:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37768#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37768#comment:9/1472438535665114</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #37768 (HTTP API No Longer Accepts Integer and Float Values for the 'cookies' ...) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 29 Aug 2016 02:41:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37768#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37768#comment:8/1472438517401563</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38430" title="HTTP: Accept non-string values in cookies, fixing a regression since ..."&gt;38430&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
HTTP: Accept non-string values in cookies, fixing a regression since 4.5.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props swissspidy.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37768" title="#37768: defect (bug): HTTP API No Longer Accepts Integer and Float Values for the 'cookies' ... (closed: fixed)"&gt;#37768&lt;/a&gt; for trunk.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38430]: HTTP: Accept non-string values in cookies, fixing a regression since ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 29 Aug 2016 02:41:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38430</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38430/1472438516820465</guid>
      <description>&lt;p&gt;
HTTP: Accept non-string values in cookies, fixing a regression since 4.5.
&lt;/p&gt;
&lt;p&gt;
Props swissspidy.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37768" title="#37768: defect (bug): HTTP API No Longer Accepts Integer and Float Values for the 'cookies' ... (closed: fixed)"&gt;#37768&lt;/a&gt; for trunk.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37733 (`cURL error 3: malformed` for remote requests since 4.6) reopened</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 29 Aug 2016 02:33:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37733#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37733#comment:11/1472438023395864</guid>
      <description>&lt;p&gt;
I took a slightly different route, as this is only going to be a temporary measure (hopefully).
&lt;/p&gt;
&lt;p&gt;
re-opening for 4.6.1 merge
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #37733 (`cURL error 3: malformed` for remote requests since 4.6) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 29 Aug 2016 02:32:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37733#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37733#comment:10/1472437968723641</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38429" title="HTTP: Handle an edgecase within the URI parsing library included in ..."&gt;38429&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
HTTP: Handle an edgecase within the URI parsing library included in Requests, where if a double slash exists at the start of the path the URL is passed to cURL malformed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props flixos90 for initial patch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37733" title="#37733: defect (bug): `cURL error 3: malformed` for remote requests since 4.6 (closed: fixed)"&gt;#37733&lt;/a&gt; for trunk.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38429]: HTTP: Handle an edgecase within the URI parsing library included in ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 29 Aug 2016 02:32:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38429</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38429/1472437968213740</guid>
      <description>&lt;p&gt;
HTTP: Handle an edgecase within the URI parsing library included in Requests, where if a double slash exists at the start of the path the URL is passed to cURL malformed.
&lt;/p&gt;
&lt;p&gt;
Props flixos90 for initial patch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37733" title="#37733: defect (bug): `cURL error 3: malformed` for remote requests since 4.6 (closed: fixed)"&gt;#37733&lt;/a&gt; for trunk.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37862 (Permalink Bug in Editor) updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Mon, 29 Aug 2016 02:20:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37862#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37862#comment:1/1472437219710720</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37423" title="#37423: defect (bug): Permalink for pending post - get_sample_permalink_html bug (closed: fixed)"&gt;#37423&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37756 (Allow inline scripts on script aliases) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Mon, 29 Aug 2016 02:13:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37756#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37756#comment:3/1472436834287085</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37756#comment:2" title="Comment 2"&gt;pcfreak30&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@swissspidy why is this set to an older WP version?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Via &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/tutorials/trac/opening-a-ticket/#create-a-new-ticket"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/handbook/tutorials/trac/opening-a-ticket/#create-a-new-ticket&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol start="5"&gt;&lt;li&gt;&lt;strong&gt;Version&lt;/strong&gt;: The version of WordPress being used. Ideally, this would be the earliest affected or applicable version.
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27994 (Erroneous plugin deactivation should be a manual action) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 29 Aug 2016 00:56:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27994#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27994#comment:7/1472432170997856</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37785 (WordPress asks to update to same (or older) plugin) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 29 Aug 2016 00:45:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37785#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37785#comment:3/1472431544693667</guid>
      <description>&lt;p&gt;
To me this looks like an old transient isn't being cleared because outgoing HTTP requests are being blocked.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>