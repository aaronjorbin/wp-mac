<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #36818 (Export filter for post meta) updated</title>
      
        <dc:creator>justinbusa</dc:creator>

      <pubDate>Mon, 16 May 2016 23:59:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36818#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36818#comment:5/1463443159133263</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>fastlinethemes.wordpress.2016-05-16.xml attached to Ticket #36818</title>
      
        <dc:creator>justinbusa</dc:creator>

      <pubDate>Mon, 16 May 2016 23:55:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36818/fastlinethemes.wordpress.2016-05-16.xml</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36818/fastlinethemes.wordpress.2016-05-16.xml/1463442919227719</guid>
      <description>&lt;p&gt;
Export where the _fl_builder_data postmeta does not import.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36818 (Export filter for post meta) updated</title>
      
        <dc:creator>justinbusa</dc:creator>

      <pubDate>Mon, 16 May 2016 23:54:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36818#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36818#comment:4/1463442855114276</guid>
      <description>&lt;p&gt;
Hey @dd32, thanks for following up on this!
&lt;/p&gt;
&lt;p&gt;
TBH, I've dug through this more than I'd like to admit and am having a really tough time finding out what is causing the corruption of the serialized meta values.
&lt;/p&gt;
&lt;p&gt;
At first, I thought it was something to do with the importer, but after further testing, I'm not 100% sure that it's not something with the export.
&lt;/p&gt;
&lt;p&gt;
To give you some context as to how the data is built/saved...
&lt;/p&gt;
&lt;p&gt;
The arrays are built based on user input (such as text or HTML entered in an editor). Once the arrays are ready to be saved/serialized, we do that using the &lt;code&gt;update_metadata&lt;/code&gt; function (which serializes them for us).
&lt;/p&gt;
&lt;p&gt;
We're not really doing anything special and are letting WordPress handle the heavy lifting when it comes to serializing, saving, exporting, and importing.
&lt;/p&gt;
&lt;p&gt;
My guess is that it's some sort of encoding or special character that's changing during the transaction and breaking the length of the serialized data.
&lt;/p&gt;
&lt;p&gt;
I've tried base64 encoding the exported meta and decoding the import and it fixed the issue. However, I'm not entirely sure if that's a solution or not.
&lt;/p&gt;
&lt;p&gt;
I've attached a copy of an export with this issue. The post meta works when pulled from the database and unserialized on the source site, but it won't import into another site.
&lt;/p&gt;
&lt;p&gt;
Any ideas you may have regarding the corruption of serialized data during export/import would be extremely helpful as I've been spinning my wheels on this one for a while.
&lt;/p&gt;
&lt;p&gt;
Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36858 (Post body is not appearing) closed</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Mon, 16 May 2016 23:24:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36858#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36858#comment:1/1463441078308485</guid>
      <description>invalid: &lt;p&gt;
Hi @timarim01 and welcome to trac!
&lt;/p&gt;
&lt;p&gt;
Trac is used for developing WordPress the CMS rather than for developing themes and support.
&lt;/p&gt;
&lt;p&gt;
There is a dedicated &lt;a class="ext-link" href="https://wordpress.org/support/forum/themes-and-templates"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;theming support forum&lt;/a&gt; where you'll find people more able to answer your question.
&lt;/p&gt;
&lt;p&gt;
I'll close this ticket for now but you should feel free to open other tickets if you do find a bug in WordPress.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #34292 (Support for DNS Prefetching &amp; Prerender) updated</title>
      
        <dc:creator>voldemortensen</dc:creator>

      <pubDate>Mon, 16 May 2016 23:05:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34292#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34292#comment:11/1463439931611190</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/34292#comment:10" title="Comment 10"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That's awesome! Happy to work more on this.
&lt;/p&gt;
&lt;p&gt;
Some notes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The patch is for DNS prefetching only, without prerender. If we do this, we should probably add both
&lt;/li&gt;&lt;li&gt;Is a filter enough for this, or do we need &lt;code&gt;add_*&lt;/code&gt;/ &lt;code&gt;remove_*&lt;/code&gt; helper functions? (I don't think we need them)
&lt;/li&gt;&lt;li&gt;Is &lt;code&gt;array_unique()&lt;/code&gt; enough? IIRC, Jetpack has stricter rules for the added URLs
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
34292.2.diff includes prerendering and unit tests for that. I think a filter is good enough here. If there is demand we can add helper functions later without back compat worries no? And I think &lt;code&gt;array_unique&lt;/code&gt; is good enough here. We don't care about array keys. And I don't think its terrible if someone inadvertently puts a non-url there. Either a bad dns lookup or a 404/couldn't load type page will be cached in the background.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>34292.2.diff attached to Ticket #34292</title>
      
        <dc:creator>voldemortensen</dc:creator>

      <pubDate>Mon, 16 May 2016 22:58:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34292/34292.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34292/34292.2.diff/1463439532843602</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36827 (Regular expression in wp_guess_url() is slightly too permissive.) updated</title>
      
        <dc:creator>voldemortensen</dc:creator>

      <pubDate>Mon, 16 May 2016 22:54:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36827#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36827#comment:7/1463439246265962</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36827#comment:5" title="Comment 5"&gt;jrf&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Looking at the regex, I can see two more variants which would not be caught:
&lt;/p&gt;
&lt;pre class="wiki"&gt;http://mysite.com/wp-admin
http://mysite.com/wp-login.php?var=somevar
&lt;/pre&gt;&lt;p&gt;
I've seen that last one sometimes when plugins try to secure a url.
&lt;/p&gt;
&lt;p&gt;
Changing the regex to the below will fix that and catch both:
&lt;code&gt;'#/(wp-admin(?:$|/.*)|wp-login\.php.*)#i'&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In the case of &lt;code&gt;http://mysite.com/wp-login.php?var=somevar&lt;/code&gt; it will still remove &lt;code&gt;wp-login.php&lt;/code&gt; and return &lt;code&gt;http://mysite.com?var=somevar&lt;/code&gt;. We may need to keep that behavior for back-compat (although I'm not aware of anything that depends on this).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36846 (Allow get_terms() to return slug&amp;name fields) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 16 May 2016 22:46:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36846#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36846#comment:2/1463438763097295</guid>
      <description>wontfix: &lt;p&gt;
Hi @ramiy - Thanks for the patch.
&lt;/p&gt;
&lt;p&gt;
I'm against adding new values to &lt;code&gt;fields&lt;/code&gt;. While there may be a narrow set of cases where selecting only &lt;code&gt;slug&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; will result in meaningful performance benefits, I think it's going to be exceedingly rare. In contrast, use of &lt;code&gt;fields&lt;/code&gt; causes a lot of confusion with respect to caching: we currently keep separate copies of term queries in the cache for each potential value of &lt;code&gt;fields&lt;/code&gt;. This pollutes the cache, by potentially multiplying the cache footprint of &lt;code&gt;get_terms()&lt;/code&gt; by three or four times what it actually has to be.
&lt;/p&gt;
&lt;p&gt;
A better strategy is for the main terms query to be for IDs only, and the term objects fetched individually from the 'terms' cache. This work was begun in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34239" title="#34239: task (blessed): Split queries in `get_terms()` and `wp_get_object_terms()` (closed: duplicate)"&gt;#34239&lt;/a&gt; for &lt;code&gt;get_the_terms()&lt;/code&gt;, and the patches on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35381" title="#35381: defect (bug): Introduce `WP_Term_Query` (closed: fixed)"&gt;#35381&lt;/a&gt; will extend the strategy to &lt;code&gt;get_terms()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
If you're able to demonstrate that &lt;code&gt;SELECT slug, name ...&lt;/code&gt; is more than a microoptimization over &lt;code&gt;SELECT *&lt;/code&gt; in a real-world situation, we can reconsider the proposal.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36858 (Post body is not appearing) created</title>
      
        <dc:creator>timarim01</dc:creator>

      <pubDate>Mon, 16 May 2016 22:27:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36858</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36858/1463437674733694</guid>
      <description>&lt;p&gt;
Hi Everybody,
&lt;/p&gt;
&lt;p&gt;
I have problem with my posts displaying it's body. The View displays only the title, but no content. I have checked the possibilities, even I reinstalled Wordpress, but that just deleted my whole site.
&lt;/p&gt;
&lt;p&gt;
I re-created the Category, I created new Post, even I tried to create a new Page as a Blog, but the same all the time. I have tried with different Permalinks, because I saw maybe that can help as well, but still nothing. Even I deactivated or deleted the new Plugins I installed, but nothing.
&lt;/p&gt;
&lt;p&gt;
Can anybody tell me what should I change to get it back. At the beginning when I first created those (like one month ago) I didnt have any problem with it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>34893.10.diff attached to Ticket #34893</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 16 May 2016 22:13:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34893/34893.10.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34893/34893.10.diff/1463436784228686</guid>
      <description>&lt;p&gt;
Re-use existing notice styles and support notice-alt for widget controls &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/136/commits/77241302401ff5f74f5e07e060b18dfe1f15c423"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/136/commits/77241302401ff5f74f5e07e060b18dfe1f15c423&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>36857.png attached to Ticket #36857</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 16 May 2016 21:50:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36857/36857.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36857/36857.png/1463435432026521</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36857 (Use .notice-alt for nav menu error message) created</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 16 May 2016 21:50:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36857</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36857/1463435414926676</guid>
      <description>&lt;p&gt;
See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34365" title="Notices: Add styles for use against white backgrounds.
These colored ..."&gt;[34365]&lt;/a&gt; and attached screenshot.
&lt;/p&gt;
&lt;p&gt;
The message gets triggered when the post type of a menu entry doesn't exist anymore.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36819 (Load plugin.php earlier in wp-settings.php) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Mon, 16 May 2016 21:36:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36819#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36819#comment:7/1463434574122594</guid>
      <description>&lt;p&gt;
Added some initial tests.  More tests are likely needed before this is completely ready for core.  Would also still like to know others opinions on this direction.  &lt;code&gt;array_merge_recursive&lt;/code&gt;  can be a potentially expensive operation, so if we can perhaps figure out an alternative, I would be :+1:
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>34893.9.diff attached to Ticket #34893</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 16 May 2016 21:17:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34893/34893.9.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34893/34893.9.diff/1463433424361605</guid>
      <description>&lt;p&gt;
Use number_format_i18n(): &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/136/commits/81549ca484dcf649409d4ee3c1ae7b97497f8f81"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/136/commits/81549ca484dcf649409d4ee3c1ae7b97497f8f81&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #34893 (Improve Customizer setting validation model) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 16 May 2016 21:11:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34893#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34893#comment:48/1463433072603024</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34893/34893.8.diff" title="Attachment '34893.8.diff' in Ticket #34893"&gt;34893.8.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34893/34893.8.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;code&gt;sprintf( _n( 'There is %d invalid setting.', 'There are %d invalid settings.', $invalid_count ), $invalid_count );&lt;/code&gt;
should be
&lt;code&gt;sprintf( _n( 'There is %s invalid setting.', 'There are %s invalid settings.', $invalid_count ), number_format_i18n( $invalid_count ) );&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34893 (Improve Customizer setting validation model) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 16 May 2016 21:04:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34893#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34893#comment:47/1463432696136637</guid>
      <description>&lt;p&gt;
Addressed accessibility feedback from @afercia in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34893/34893.8.diff" title="Attachment '34893.8.diff' in Ticket #34893"&gt;34893.8.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34893/34893.8.diff" title="Download"&gt;​&lt;/a&gt;. Now using &lt;code&gt;wp.a11y.speak()&lt;/code&gt; for notifications added instead of an assertive aria live region for the entire notifications container.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>34893.8.diff attached to Ticket #34893</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 16 May 2016 21:03:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34893/34893.8.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34893/34893.8.diff/1463432620943190</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/136/commits/2d7ea4bc23fe3b1ceaa7a69ca40857df80cd8f62"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/136/commits/2d7ea4bc23fe3b1ceaa7a69ca40857df80cd8f62&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36843 (Wrong Taxonomy Term orderby 'name' in Cyrillic) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 16 May 2016 20:59:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36843#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36843#comment:6/1463432354883817</guid>
      <description>&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/35144" title="#35144: defect (bug): Sorting Greek characters (new)"&gt;#35144&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32405" title="#32405: defect (bug): Database collation upgrade routine to support UTF8MB4 collations (closed: fixed)"&gt;#32405&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36843 (Wrong Taxonomy Term orderby 'name' in Cyrillic) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 16 May 2016 20:56:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36843#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36843#comment:5/1463432177269597</guid>
      <description>invalid: &lt;p&gt;
@esemlabel I wasn't trying to say that Ukrainian is the same as Russian, or that it's not important for WordPress to get this right :)
&lt;/p&gt;
&lt;p&gt;
What I'm saying is: WordPress term 'orderby=name' queries tell MySQL to &lt;code&gt;ORDER BY name&lt;/code&gt;. It's up to MySQL to provide data in the right order. It makes this decision based on the collation of the &lt;code&gt;name&lt;/code&gt; column. See &lt;a class="ext-link" href="http://dev.mysql.com/doc/refman/5.7/en/charset-general.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://dev.mysql.com/doc/refman/5.7/en/charset-general.html&lt;/a&gt;. In your case, &lt;code&gt;utf8_general_ci&lt;/code&gt; is not sufficient to sort Ukrainian (though, as I hypothesized, it gets Russian correct, which is why your sort order is incorrect in the way that it is). See &lt;a class="ext-link" href="http://stackoverflow.com/a/766996"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://stackoverflow.com/a/766996&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
As noted by @knutsp, the fix in your case is to change the collation for the &lt;code&gt;name&lt;/code&gt; column in your &lt;code&gt;wp_terms&lt;/code&gt; table, along with any other relevant columns in your database. I believe that &lt;code&gt;utf8_unicode_ci&lt;/code&gt; is the correct collation for Ukrainian when using a UTF8 charset.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Should WordPress offer to set the correct collation for these DB columns?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
WP tries to use sensible defaults (&lt;code&gt;utf8mb4&lt;/code&gt; and &lt;code&gt;utf8mb4_unicode_ci&lt;/code&gt;, where supported) for the database tables that it creates at installation. WordPress 4.3 introduced a routine that upgraded existing tables to &lt;code&gt;utf8mb4&lt;/code&gt;/&lt;code&gt;utf8mb4_unicode_ci&lt;/code&gt; on sites that support that combination. When WP can't do this migration, I don't know that there's enough information available to assume that it knows what the "correct" collation is for a given installation - it depends on a combination of the current charset, what the installation of MySQL supports, and the language(s) that need to be supported by the database. So @knutsp, I think the answer is "no". But if you think there's a feasible way for WP to do this without breaking stuff, let's discuss it in an enhancement ticket.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #33407 (Theme tags overhaul) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 16 May 2016 20:55:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33407#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33407#comment:25/1463432112118161</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #themereview by jcastaneda. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/themereview/p1463432109003809"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35658-objects.3.diff attached to Ticket #35658</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Mon, 16 May 2016 20:49:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35658/35658-objects.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35658/35658-objects.3.diff/1463431789663710</guid>
      <description>&lt;p&gt;
Replacing usage of 'public' with 'protected' and flipping default
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #34893 (Improve Customizer setting validation model) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 16 May 2016 20:24:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34893#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34893#comment:46/1463430246678360</guid>
      <description>&lt;p&gt;
@afercia thoughts on accessibility considerations? It &lt;em&gt;is&lt;/em&gt; using &lt;code&gt;aria-live="assertive"&lt;/code&gt; for the notification container.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34893 (Improve Customizer setting validation model) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 16 May 2016 20:19:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34893#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34893#comment:45/1463429976966522</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by westonruter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1463429974001015"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34893 (Improve Customizer setting validation model) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 16 May 2016 20:14:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34893#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34893#comment:44/1463429674888898</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Needs design feedback.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34893 (Improve Customizer setting validation model) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 16 May 2016 20:06:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34893#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34893#comment:43/1463429210007005</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by westonruter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1463429207000597"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35658 (Provide additional data for registered meta through register_meta()) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 16 May 2016 20:06:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35658#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35658#comment:44/1463429201225704</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-fields by sc0ttkclark. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-fields/p1463429199000444"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34893 (Improve Customizer setting validation model) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 16 May 2016 19:40:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34893#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34893#comment:42/1463427623893063</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/34893#comment:32" title="Comment 32"&gt;celloexpressions&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;I think we could probably use the class &lt;code&gt;.has-notifications&lt;/code&gt; on &lt;code&gt;.customize-control&lt;/code&gt; instead of having both &lt;code&gt;.customize-control&lt;/code&gt; and &lt;code&gt;.customize-control-has-notifications&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
I've done this in the latest patches.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Selective refresh seems to revert to the previous setting value when a setting is invalid. Perhaps we should do this but also keep it faded/in an updating state to indicate that there is a problem with the current setting (hence the previous value being used)?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Yeah, the revert to the previous setting is a result of the invalid settings now being (properly) rejected, and so they are treated as if they weren't supplied at all. This would be true in both selective refresh and full-page refresh. At the moment, it would be up to the control to display the notification using JS to give feedback for why an update isn't appearing, as currently PHP-supplied error notifications are currently only being sent back upon attempted Save. However, with &lt;strong&gt;transactions&lt;/strong&gt;  (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30937" title="#30937: feature request: Add Customizer state persistence in changesets (formerly “transactions”) (closed: fixed)"&gt;#30937&lt;/a&gt;) each change to a setting would get submitted to the server via a &lt;code&gt;PATCH&lt;/code&gt; request, and so &lt;em&gt;this&lt;/em&gt; is where I think we'd need to ultimately provide this feedback for why a setting change isn't appearing in the preview. I don't know if we should display any invalidity state inside the preview itself.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30258 (Infinite loop in wp_mkdir_p in combination with open_basedir) updated</title>
      
        <dc:creator>JxsDotNL</dc:creator>

      <pubDate>Mon, 16 May 2016 19:33:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30258#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30258#comment:10/1463427212467702</guid>
      <description>&lt;p&gt;
It's been 19 months since this thread was opened, and 7 months since I have submitted two possible solutions. I see the bug is still present in the most recent release of WP.
Is there anything else I need to do to get this bug fixed? It's just a small bug, but I've ran into it several times.
Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34893 (Improve Customizer setting validation model) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 16 May 2016 19:31:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34893#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34893#comment:41/1463427106070366</guid>
      <description>&lt;p&gt;
@mrahmadawais that does look better, but I notice that the border on top/bottom is causing the border on the left to be cut diagonally. Perhaps a box shadow would have a better result?
&lt;/p&gt;
&lt;p&gt;
Also sorry but I uploaded a new patch &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34893/34893.7.diff" title="Attachment '34893.7.diff' in Ticket #34893"&gt;34893.7.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34893/34893.7.diff" title="Download"&gt;​&lt;/a&gt;  that didn't include your change. I moved the &lt;code&gt;error&lt;/code&gt; class to be an &lt;code&gt;data-&lt;/code&gt; attribute of the list item itself. This meant that I needed to change the list styles to be compact when multiple are displayed. See &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34893/data-attributes.png" title="Attachment 'data-attributes.png' in Ticket #34893"&gt;data-attributes.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34893/data-attributes.png" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
@celloexpressions thoughts on this change? I leave the CSS up to you :)
&lt;/p&gt;
&lt;p&gt;
Also, it would be easier to collaborate if you guys could push commits to the existing PR: &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/136"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/136&lt;/a&gt; And this would avoid us having to manually reconcile and merge patches. You both have write access to that repo now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>data-attributes.png attached to Ticket #34893</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 16 May 2016 19:25:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34893/data-attributes.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34893/data-attributes.png/1463426758011773</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>34893.7.diff attached to Ticket #34893</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 16 May 2016 19:25:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34893/34893.7.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34893/34893.7.diff/1463426724707847</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/136/commits/0235decc780b1b155f1cfa8c1897f93ac70e18a6"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/136/commits/0235decc780b1b155f1cfa8c1897f93ac70e18a6&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36856 (Can't add images or tags to post) created</title>
      
        <dc:creator>cdsommer</dc:creator>

      <pubDate>Mon, 16 May 2016 19:07:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36856</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36856/1463425661557305</guid>
      <description>&lt;p&gt;
I'm working on a page I manage, and I am unable to add an image to a blog post. I've also noticed I can't add tags or toggle to text window from the visual window. I've disabled all widgets and this hasn't resolved.
&lt;/p&gt;
&lt;p&gt;
Any other ideas?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27756 (Some similar strings in TinyMCE) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 16 May 2016 18:56:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27756#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27756#comment:11/1463425013035296</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37441" title="Editor: Merge two strings.
Props pavelevap.
See #27756."&gt;37441&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Editor: Merge two strings.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props pavelevap.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27756" title="#27756: defect (bug): Some similar strings in TinyMCE (closed: fixed)"&gt;#27756&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37441]: Editor: Merge two strings.  Props pavelevap. See #27756.</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 16 May 2016 18:56:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37441</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37441/1463425012238158</guid>
      <description>&lt;p&gt;
Editor: Merge two strings.
&lt;/p&gt;
&lt;p&gt;
Props pavelevap.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27756" title="#27756: defect (bug): Some similar strings in TinyMCE (closed: fixed)"&gt;#27756&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>34893.6.diff attached to Ticket #34893</title>
      
        <dc:creator>mrahmadawais</dc:creator>

      <pubDate>Mon, 16 May 2016 18:53:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34893/34893.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34893/34893.6.diff/1463424791156896</guid>
      <description>&lt;p&gt;
Widget Notification CSS Border
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #34893 (Improve Customizer setting validation model) updated</title>
      
        <dc:creator>mrahmadawais</dc:creator>

      <pubDate>Mon, 16 May 2016 18:44:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34893#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34893#comment:40/1463424249285107</guid>
      <description>&lt;p&gt;
@westonruter You are right. Maybe we could just add &lt;code&gt;#eee&lt;/code&gt; borders to the notification. I just submitted a patch and now the notification in the widgets area looks better.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;BEFORE&lt;/strong&gt;
&lt;a style="padding:0; border:none" href="https://i.imgur.com/kDjFdos.png"&gt;&lt;img src="https://i.imgur.com/kDjFdos.png" alt="https://i.imgur.com/kDjFdos.png" crossorigin="anonymous" title="https://i.imgur.com/kDjFdos.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;AFTER&lt;/strong&gt;: 34893.6.diff
&lt;a style="padding:0; border:none" href="https://i.imgur.com/i4RNKzR.png"&gt;&lt;img src="https://i.imgur.com/i4RNKzR.png" alt="https://i.imgur.com/i4RNKzR.png" crossorigin="anonymous" title="https://i.imgur.com/i4RNKzR.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34893 (Improve Customizer setting validation model) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 16 May 2016 18:42:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34893#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34893#comment:39/1463424125302177</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/34893#comment:31" title="Comment 31"&gt;dlh&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
But it could be that the notification could be obscured at the top as well for such a long control, right?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
True, except (I think) if you are in a different Customizer section when you save. In that case, it looks like you are brought back to top of the control with the notification at the bottom.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
And replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/34893#comment:32" title="Comment 32"&gt;celloexpressions&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I would be in favor of injecting at the top of the control when there isn't a title unless the custom control overrides the element.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Done in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34893/34893.5.diff" title="Attachment '34893.5.diff' in Ticket #34893"&gt;34893.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34893/34893.5.diff" title="Download"&gt;​&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36572 (Read more link more accessible) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 16 May 2016 18:41:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36572#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36572#comment:16/1463424114999153</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1463424113002092"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35126 (Improvements for the new .button-link CSS class) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 16 May 2016 18:40:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35126#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35126#comment:15/1463424055400946</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1463424053002089"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>34893.5.diff attached to Ticket #34893</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 16 May 2016 18:40:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34893/34893.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34893/34893.5.diff/1463424007637568</guid>
      <description>&lt;p&gt;
Prepend instead of append notifications container: &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/compare/3f060ed...3af6b10"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/compare/3f060ed...3af6b10&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36853 (Safari and VoiceOver don't announce repeated, identical, aria live messages) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 16 May 2016 18:36:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36853#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36853#comment:2/1463423767935544</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1463423765002078"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36848 (Theme installer: avoid to announce the search results too many times) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 16 May 2016 18:34:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36848#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36848#comment:3/1463423690997220</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1463423688002075"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36289 (WP Speak assertive message and Firefox + NVDA bug) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 16 May 2016 18:33:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36289#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36289#comment:11/1463423602911601</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1463423600002072"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35664 (Edit term screens: tab order should match visual order) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 16 May 2016 18:31:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35664#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35664#comment:17/1463423461760181</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1463423459002067"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36819.2.diff attached to Ticket #36819</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Mon, 16 May 2016 18:31:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36819/36819.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36819/36819.2.diff/1463423461007918</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #34893 (Improve Customizer setting validation model) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 16 May 2016 18:29:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34893#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34893#comment:38/1463423395130401</guid>
      <description>&lt;p&gt;
@mrahmadawais:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Would it be better if we can designate a certain area for notifications at the top so that folks building custom controls won't mess up the notifications
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
For custom controls, developers can take two approaches to displaying notifications:
&lt;/p&gt;
&lt;p&gt;
1) They can include a element with a &lt;code&gt;customize-control-notifications-container&lt;/code&gt; class in the control's content.
2) Or they can override the &lt;code&gt;controlgetNotificationsContainerElement()&lt;/code&gt; method to change how the notification gets injected.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Error notification inside the widgets area is not looking good. The white background of the notification is getting mixed up with the white background of widget accordion. This can be solved by moved the error message to the top of the chain i.e. before the div with class widget-top and inside the div with class widget. It would look something like this
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think the style should be modified rather than moving the notification outside of the control's collapsed contents. If it were outside, this would be confusing when users expect to see a list of controls not a mixture of a list of controls and validation messages.
&lt;/p&gt;
&lt;p&gt;
@celloexpressions I tried re-using the default &lt;code&gt;error&lt;/code&gt; styles in my default &lt;code&gt;div.customize-control-notifications-container&lt;/code&gt;. But I think we should stop trying to do that. Instead of adding &lt;code&gt;error&lt;/code&gt; to that root container element, I think the &lt;code&gt;error&lt;/code&gt; should be added to the &lt;code&gt;li&lt;/code&gt; itself, and so individual notifications could be errors where others could be updates or informational messages.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36827 (Regular expression in wp_guess_url() is slightly too permissive.) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 16 May 2016 18:29:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36827#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36827#comment:6/1463423348270303</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36827 (Regular expression in wp_guess_url() is slightly too permissive.) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Mon, 16 May 2016 18:23:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36827#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36827#comment:5/1463422992528397</guid>
      <description>&lt;p&gt;
Looking at the regex, I can see two more variants which would not be caught:
&lt;/p&gt;
&lt;pre class="wiki"&gt;http://mysite.com/wp-admin
http://mysite.com/wp-login.php?var=somevar
&lt;/pre&gt;&lt;p&gt;
I've seen that last one sometimes when plugins try to secure a url.
&lt;/p&gt;
&lt;p&gt;
Changing the regex to the below will fix that and catch both:
&lt;code&gt;'#/(wp-admin(?:$|/.*)|wp-login\.php.*)#i'&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34893 (Improve Customizer setting validation model) updated</title>
      
        <dc:creator>mrahmadawais</dc:creator>

      <pubDate>Mon, 16 May 2016 18:16:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34893#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34893#comment:37/1463422615533334</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/34893#comment:36" title="Comment 36"&gt;celloexpressions&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@mrahmadawais the CSS spacing should be correct for the site title control, but I didn't check the others. The intent is for &lt;code&gt;8px&lt;/code&gt; above and below the notification, including any margins on adjacent elements.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I get that, but it doesn't play well with other conditions, as you can see in the comment above.
&lt;/p&gt;
&lt;p&gt;
@westonruter  Here's another suggestion.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Error notification inside the widgets area is not looking good. The white background of the notification is getting mixed up with the white background of widget accordion. This can be solved by moved the error message to the top of the chain i.e. before the div with class &lt;code&gt;widget-top&lt;/code&gt; and inside the div with class &lt;code&gt;widget&lt;/code&gt;. It would look something like this
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;strong&gt;Before&lt;/strong&gt;
&lt;a style="padding:0; border:none" href="https://i.imgur.com/kDjFdos.png"&gt;&lt;img src="https://i.imgur.com/kDjFdos.png" alt="https://i.imgur.com/kDjFdos.png" crossorigin="anonymous" title="https://i.imgur.com/kDjFdos.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;After&lt;/strong&gt;
&lt;a style="padding:0; border:none" href="https://i.imgur.com/1q93IGD.png"&gt;&lt;img src="https://i.imgur.com/1q93IGD.png" alt="https://i.imgur.com/1q93IGD.png" crossorigin="anonymous" title="https://i.imgur.com/1q93IGD.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34893 (Improve Customizer setting validation model) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 16 May 2016 18:09:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34893#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34893#comment:36/1463422189723420</guid>
      <description>&lt;p&gt;
@mrahmadawais the CSS spacing should be correct for the site title control, but I didn't check the others. The intent is for &lt;code&gt;8px&lt;/code&gt; above and below the notification, including any margins on adjacent elements.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34893 (Improve Customizer setting validation model) updated</title>
      
        <dc:creator>mrahmadawais</dc:creator>

      <pubDate>Mon, 16 May 2016 18:05:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34893#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34893#comment:35/1463421911042154</guid>
      <description>&lt;p&gt;
@westonruter I just tested the latest patch and here's what I think
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;In example plugin, the error being reported is wrong, it should read &lt;code&gt;You must supply a Navigation Label&lt;/code&gt; instead of the &lt;code&gt;title&lt;/code&gt; which begs the question of building a custom notification renderer which could get back the fieldname with WP_Error instance.
&lt;/li&gt;&lt;li&gt;CSS Spacing issues are evident almost everywhere with the error notification. I can contribute on that part but probably it has more to do with how notifications are being rendered. Check the images attached below.
&lt;/li&gt;&lt;li&gt;Would it be better if we can designate a certain area for notifications at the top so that folks building custom controls won't mess up the notifications
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Check the red line to visually differentiate the odd spacing issues.
&lt;a style="padding:0; border:none" href="https://i.imgur.com/PNlFzzz.png"&gt;&lt;img src="https://i.imgur.com/PNlFzzz.png" alt="https://i.imgur.com/PNlFzzz.png" crossorigin="anonymous" title="https://i.imgur.com/PNlFzzz.png" /&gt;&lt;/a&gt;
&lt;a style="padding:0; border:none" href="https://i.imgur.com/JECaqhZ.png"&gt;&lt;img src="https://i.imgur.com/JECaqhZ.png" alt="https://i.imgur.com/JECaqhZ.png" crossorigin="anonymous" title="https://i.imgur.com/JECaqhZ.png" /&gt;&lt;/a&gt;
&lt;a style="padding:0; border:none" href="https://i.imgur.com/80fIU8b.png"&gt;&lt;img src="https://i.imgur.com/80fIU8b.png" alt="https://i.imgur.com/80fIU8b.png" crossorigin="anonymous" title="https://i.imgur.com/80fIU8b.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34391 (Harden panel/section UI code by removing contents from being logically ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 16 May 2016 18:02:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34391#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34391#comment:23/1463421729073381</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is looking great so far! One notable change in terms of usability is that animations will be able to run much more smoothly when opening and closing panels.
&lt;/p&gt;
&lt;p&gt;
Testing with &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34391/34391_1.diff" title="Attachment '34391_1.diff' in Ticket #34391"&gt;34391_1.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34391/34391_1.diff" title="Download"&gt;​&lt;/a&gt;, it is not possible to open nav menu sections. The JS error thrown is related to initializing the sortable behavior here; I'm guessing that deferring that until the panel is fully expanded for the first time may help.
&lt;/p&gt;
&lt;p&gt;
Additionally, the custom "add menu" section, which is displayed inline, no longer works. If at all possible I would like to use this as an example of a custom section that shouldn't require modifications as a result of this ticket, since it completely overrides the core section behavior. If it does require changes, I think we should plan to commit this within the first week of the 4.7 cycle (ie, have a patch fully tested and ready to go before the end of 4.6) so that there is adequate notice to anyone who may be doing similar things. I think we can probably avoid this, however.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31818 (Uniform Search Form Display/Experience) updated</title>
      
        <dc:creator>rianrietveld</dc:creator>

      <pubDate>Mon, 16 May 2016 17:56:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31818#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31818#comment:14/1463421414831060</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31818 (Uniform Search Form Display/Experience) updated</title>
      
        <dc:creator>rianrietveld</dc:creator>

      <pubDate>Mon, 16 May 2016 17:56:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31818#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31818#comment:13/1463421377192848</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31818 (Uniform Search Form Display/Experience) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 16 May 2016 17:52:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31818#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31818#comment:12/1463421172390244</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by rianrietveld. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1463421170001979"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34323 (Make customizer media control placeholders clickable) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 16 May 2016 17:51:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34323#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34323#comment:27/1463421103495113</guid>
      <description>&lt;p&gt;
Needs a refresh for &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37426" title="Customize: Clean up media control CSS.
Removes unnecessary wrapper ..."&gt;[37426]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Also still need a decision on the appropriateness of making the placeholder clickable/tappable for mouse/touch users but keeping it inaccessible via other input methods in favor of the existing button, which is to remain for now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31751 (Using PgDn and PgUp keyboard keys in the editor scrolls both post edit ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 16 May 2016 17:46:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31751#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31751#comment:14/1463420761049838</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by rianrietveld. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1463420758001965"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31713 (Color contrast ratio in the admin) closed</title>
      
        <dc:creator>rianrietveld</dc:creator>

      <pubDate>Mon, 16 May 2016 17:45:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31713#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31713#comment:11/1463420730710744</guid>
      <description>wontfix: &lt;p&gt;
Closing this one: this ticket has been split into multiple others labeled #a11y-color
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36175 (Simplify the Customizer Image Control action buttons) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 16 May 2016 17:44:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36175#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36175#comment:13/1463420656851783</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Needs a refresh for &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37426" title="Customize: Clean up media control CSS.
Removes unnecessary wrapper ..."&gt;[37426]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Also still need to decide how this should work in terms of accessibility. If we have to add a description in text explaining to click-to-edit, we might as well preserve a separate button. Maybe we should only change the remove button? Or, is the UI clear enough that the change button can be removed?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36843 (Wrong Taxonomy Term orderby 'name' in Cyrillic) updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Mon, 16 May 2016 17:41:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36843#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36843#comment:4/1463420474769792</guid>
      <description>&lt;p&gt;
&lt;code&gt;utf8_general_ci&lt;/code&gt; will not work. It's the same problem with Norwegian. &lt;code&gt;æøå&lt;/code&gt; will be sorted incorrectly if the column's collation is not set to &lt;code&gt;utf8_danish_ci&lt;/code&gt; or &lt;code&gt;utf8mb4_danish_ci&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
The two most important columns to fix are &lt;code&gt;posts.post_title&lt;/code&gt; and &lt;code&gt;terms.name&lt;/code&gt;. Beware that it's not sufficient to set the collation for the table, is this is just a default when new columns are created. It must be set on each individual indexed column contaning characters of the local language.
&lt;/p&gt;
&lt;p&gt;
Should WordPress offer to set the correct collation for these DB columns?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35210.control-notifications-consolidated.PNG attached to Ticket #35210</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 16 May 2016 17:39:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35210/35210.control-notifications-consolidated.PNG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35210/35210.control-notifications-consolidated.PNG/1463420363572962</guid>
      <description>&lt;p&gt;
Potential UI for a summary of per-control notifications, and for notifications in a less obtrusive location (has advantages and disadvantages). See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34893" title="#34893: enhancement: Improve Customizer setting validation model (closed: fixed)"&gt;#34893&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #31713 (Color contrast ratio in the admin) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 16 May 2016 17:37:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31713#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31713#comment:10/1463420258630946</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by rianrietveld. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1463420256001931"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31634 (Minor UI improvements to bulk editing) updated</title>
      
        <dc:creator>rianrietveld</dc:creator>

      <pubDate>Mon, 16 May 2016 17:37:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31634#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31634#comment:30/1463420249923609</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34893 (Improve Customizer setting validation model) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 16 May 2016 17:33:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34893#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34893#comment:34/1463420012596625</guid>
      <description>&lt;p&gt;
@celloexpressions thanks for the feedback! I missed that you commented just before me :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31634 (Minor UI improvements to bulk editing) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 16 May 2016 17:33:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31634#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31634#comment:29/1463419999420643</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by rianrietveld. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1463419997001918"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31356 (Compound settings confusing with screen readers (radio buttons)) updated</title>
      
        <dc:creator>rianrietveld</dc:creator>

      <pubDate>Mon, 16 May 2016 17:33:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31356#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31356#comment:5/1463419981493581</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31354 (Compound settings confusing with screen readers (checkboxes)) updated</title>
      
        <dc:creator>rianrietveld</dc:creator>

      <pubDate>Mon, 16 May 2016 17:32:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31354#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31354#comment:9/1463419946529922</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34893 (Improve Customizer setting validation model) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 16 May 2016 17:31:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34893#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34893#comment:33/1463419899563108</guid>
      <description>&lt;p&gt;
@celloexpressions @valendesigns any feedback on the latest patch? I have the code in a PR for inline commenting as well: &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/136"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/136&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I want to commit this today so we can move on to transactions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31356 (Compound settings confusing with screen readers (radio buttons)) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 16 May 2016 17:28:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31356#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31356#comment:4/1463419722128817</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by rianrietveld. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1463419720001907"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31354 (Compound settings confusing with screen readers (checkboxes)) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 16 May 2016 17:28:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31354#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31354#comment:8/1463419710994330</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by rianrietveld. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1463419708001905"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30685 (Better Login Error&amp;Message Displaying) updated</title>
      
        <dc:creator>rianrietveld</dc:creator>

      <pubDate>Mon, 16 May 2016 17:28:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30685#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30685#comment:14/1463419696773095</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34893 (Improve Customizer setting validation model) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 16 May 2016 17:25:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34893#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34893#comment:32/1463419559946726</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34893/34893.4.diff" title="Attachment '34893.4.diff' in Ticket #34893"&gt;34893.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34893/34893.4.diff" title="Download"&gt;​&lt;/a&gt; cleans up the CSS a bit, see slightly-revised screenshot. One part that needs particular testing - the former &lt;code&gt;width: 98%&lt;/code&gt; for all customizer inputs is revised to &lt;code&gt;100%&lt;/code&gt; so that they will align with other elements (such as media controls) and notifications.
&lt;/p&gt;
&lt;p&gt;
Other thoughts:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I would be in favor of injecting at the top of the control when there isn't a title unless the custom control overrides the element.
&lt;/li&gt;&lt;li&gt;Selective refresh seems to revert to the previous setting value when a setting is invalid. Perhaps we should do this but also keep it faded/in an updating state to indicate that there is a problem with the current setting (hence the previous value being used)?
&lt;/li&gt;&lt;li&gt;We will want to move the notification out of the &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; element, but let's wait to do that until we do a general cleanup of the &lt;code&gt;label&lt;/code&gt; structure in the customizer, since that will require a broader approach.
&lt;/li&gt;&lt;li&gt;I think we could probably use the class &lt;code&gt;.has-notifications&lt;/code&gt; on &lt;code&gt;.customize-control&lt;/code&gt; instead of having both &lt;code&gt;.customize-control&lt;/code&gt; and &lt;code&gt;.customize-control-has-notifications&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;The per-control/setting notifications look pretty good. In terms of an overall notifications area, I think it would be helpful in terms of usability to aggregate all instances of errors into a single place that included autofocusing links to each of the controls with errors. I'll make a mockup of that on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35210" title="#35210: enhancement: Add notification area to Customizer (closed: fixed)"&gt;#35210&lt;/a&gt;.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30685 (Better Login Error&amp;Message Displaying) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 16 May 2016 17:23:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30685#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30685#comment:13/1463419428025243</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by rianrietveld. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1463419426001892"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>34893.4.diff attached to Ticket #34893</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 16 May 2016 17:22:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34893/34893.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34893/34893.4.diff/1463419321906114</guid>
      <description>&lt;p&gt;
CSS tweaks.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #30512 (Improve media views accessibility) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 16 May 2016 17:18:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30512#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30512#comment:13/1463419082935634</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1463419080001874"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>34893.4.diff.png attached to Ticket #34893</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 16 May 2016 17:15:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34893/34893.4.diff.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34893/34893.4.diff.png/1463418905047548</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36843 (Wrong Taxonomy Term orderby 'name' in Cyrillic) updated</title>
      
        <dc:creator>esemlabel</dc:creator>

      <pubDate>Mon, 16 May 2016 17:14:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36843#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36843#comment:3/1463418887965914</guid>
      <description>&lt;p&gt;
@boonebgorges, thanks for replying!
&lt;/p&gt;
&lt;p&gt;
Of course, it is NOT a part of Russian language. Ukrainian is one different from ru language that also uses Cyrillic alphabet. Many countries uses Cyrillic (&lt;a class="ext-link" href="https://en.wikipedia.org/wiki/Cyrillic_alphabets"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://en.wikipedia.org/wiki/Cyrillic_alphabets&lt;/a&gt;), but each Cyrillic-country has its own language-specific symbols in addition to common Cyrillic letters. For example, (Ёё, Ыы, Ъъ) in Russian, (Ґґ, Іі, Її, Єє) in Ukrainian, etc. And it has to be in right alphabetic position.
&lt;/p&gt;
&lt;p&gt;
I understand that someone have to set properly letters order for each Cyrillic language in code. But it has to be done. And not only in Ukrainian, but also in Belarusian, Serbian, Macedonian and many others, which translation UI presents in WordPress Core.
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt; Table Status
&lt;/em&gt;&lt;/p&gt;
&lt;pre class="wiki"&gt;array(1) {
  [0]=&amp;gt;
  object(stdClass)#4625 (18) {
    ["Name"]=&amp;gt;
    string(8) "wp_terms"
    ["Engine"]=&amp;gt;
    string(6) "MyISAM"
    ["Version"]=&amp;gt;
    string(2) "10"
    ["Row_format"]=&amp;gt;
    string(7) "Dynamic"
    ["Rows"]=&amp;gt;
    string(2) "25"
    ["Avg_row_length"]=&amp;gt;
    string(2) "49"
    ["Data_length"]=&amp;gt;
    string(4) "1284"
    ["Max_data_length"]=&amp;gt;
    string(15) "281474976710655"
    ["Index_length"]=&amp;gt;
    string(5) "11264"
    ["Data_free"]=&amp;gt;
    string(2) "36"
    ["Auto_increment"]=&amp;gt;
    string(3) "131"
    ["Create_time"]=&amp;gt;
    string(19) "2016-04-24 12:27:37"
    ["Update_time"]=&amp;gt;
    string(19) "2016-05-15 15:03:33"
    ["Check_time"]=&amp;gt;
    string(19) "2016-04-24 12:27:37"
    ["Collation"]=&amp;gt;
    string(15) "utf8_general_ci"
    ["Checksum"]=&amp;gt;
    NULL
    ["Create_options"]=&amp;gt;
    string(0) ""
    ["Comment"]=&amp;gt;
    string(0) ""
  }
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30386 (Keyboard user has to tab through all uploaded images to insert an image) updated</title>
      
        <dc:creator>rianrietveld</dc:creator>

      <pubDate>Mon, 16 May 2016 17:06:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30386#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30386#comment:9/1463418402102738</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30386 (Keyboard user has to tab through all uploaded images to insert an image) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 16 May 2016 17:01:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30386#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30386#comment:8/1463418107494251</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by rianrietveld. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1463418105001842"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36837 (&lt;script&gt; tags in Admin Options page input field triggering mod_security) updated</title>
      
        <dc:creator>maddogprod</dc:creator>

      <pubDate>Mon, 16 May 2016 16:50:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36837#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36837#comment:2/1463417452716801</guid>
      <description>&lt;p&gt;
Thanks. I'm wondering if while the site host hasn't updated the rules maybe they did update mod_security and that's why. I have an alternate way of handling this that should work easily but if it doesn't I'll go the plugin or shortcode route.
&lt;/p&gt;
&lt;p&gt;
Thanks again.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36789 (Upload Folder Bug) updated</title>
      
        <dc:creator>voldemortensen</dc:creator>

      <pubDate>Mon, 16 May 2016 16:50:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36789#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36789#comment:2/1463417409343944</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36789 (Upload Folder Bug) updated</title>
      
        <dc:creator>voldemortensen</dc:creator>

      <pubDate>Mon, 16 May 2016 16:49:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36789#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36789#comment:1/1463417390382585</guid>
      <description>&lt;p&gt;
Thanks for the report @netzilicious! However, I'm unable to reproduce this issue on 4.5.2 or on current trunk. Do you have any plugins or custom filters that might be modifying the srcset?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36843 (Wrong Taxonomy Term orderby 'name' in Cyrillic) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 16 May 2016 16:44:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36843#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36843#comment:2/1463417095707392</guid>
      <description>&lt;p&gt;
Hi @esemlabel - Thanks for the ticket, and welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
What is the collation on your &lt;code&gt;wp_terms&lt;/code&gt; database table? (&lt;code&gt;SHOW TABLE STATUS LIKE 'wp_terms'&lt;/code&gt;)
&lt;/p&gt;
&lt;p&gt;
The characters that are out of order appear to be those that (pardon me while I recollect the Russian I took in college) are not part of the Russian alphabet. It's possible that you're using a Cyrillic collation that is designed for Russian, and it doesn't know what to do with these Ukrainian-only characters. Maybe someone like @SergeyBiryukov could chime in to confirm this hypothesis.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34936 (Reconcile wp-settings-cli.php with wp-settings.php) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Mon, 16 May 2016 16:44:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34936#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34936#comment:9/1463417092287634</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36819" title="#36819: task (blessed): Load plugin.php earlier in wp-settings.php (closed: fixed)"&gt;#36819&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36827 (Regular expression in wp_guess_url() is slightly too permissive.) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 16 May 2016 16:32:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36827#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36827#comment:4/1463416360863435</guid>
      <description>&lt;p&gt;
Are there already unit tests for that function? They could catch such oversights.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36827 (Regular expression in wp_guess_url() is slightly too permissive.) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 16 May 2016 16:29:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36827#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36827#comment:3/1463416164916543</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19923" title="Properly redirect to install.php when visiting wp-login.php with a ..."&gt;[19923]&lt;/a&gt;, changed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/21664" title="Use set_url_scheme(). Props johnbillion, MarcusPope. see #19037 #20759"&gt;[21664]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/21797" title="Don't use set_url_scheme() in wp_guess_url(). wp_guess_url() is used ..."&gt;[21797]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/25396" title="Fix wp_guess_url() to work in every scenario I could find, allows us ..."&gt;[25396]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36827 (Regular expression in wp_guess_url() is slightly too permissive.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 16 May 2016 16:21:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36827#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36827#comment:2/1463415660146493</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by voldemortensen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1463415658005014"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36827 (Regular expression in wp_guess_url() is slightly too permissive.) updated</title>
      
        <dc:creator>voldemortensen</dc:creator>

      <pubDate>Mon, 16 May 2016 16:20:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36827#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36827#comment:1/1463415623829516</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>fix_button_focus_on_reply.patch attached to Ticket #36854</title>
      
        <dc:creator>MarcDK</dc:creator>

      <pubDate>Mon, 16 May 2016 16:19:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36854/fix_button_focus_on_reply.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36854/fix_button_focus_on_reply.patch/1463415591100705</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36854 (Fix for comment reply button focus on button elements in js) created</title>
      
        <dc:creator>MarcDK</dc:creator>

      <pubDate>Mon, 16 May 2016 16:19:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36854</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36854/1463415565679428</guid>
      <description>&lt;p&gt;
Some users use themes or plugins which put button form elements before the textarea element in the comment form. The comment-reply.js assumes that there are no button elements. I added a check if the element type is "button". In that case the selection is skipped which results in the correct behaviour: the focus is set on the textarea element. Not on buttons like "bold", "italic" and so on.
&lt;/p&gt;
&lt;p&gt;
I included a minified version of the comment-reply.js file. I did not know if this was necessary.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36853 (Safari and VoiceOver don't announce repeated, identical, aria live messages) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 16 May 2016 15:54:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36853#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36853#comment:1/1463414062793882</guid>
      <description>&lt;p&gt;
Simplified test case:
&lt;a class="ext-link" href="http://s.codepen.io/afercia/debug/ZWNGPO"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://s.codepen.io/afercia/debug/ZWNGPO&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Just use Safari + VoiceOver, click the button and wait for the message, then click again. Compare with other browsers/screen readers combinations.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36848 (Theme installer: avoid to announce the search results too many times) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 16 May 2016 15:50:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36848#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36848#comment:2/1463413814758182</guid>
      <description>&lt;p&gt;
Note: it's better to test this with Firefox and NVDA or IE and JAWS because of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36853" title="#36853: defect (bug): Safari and VoiceOver don't announce repeated, identical, aria live messages (closed: fixed)"&gt;#36853&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36853 (Safari and VoiceOver don't announce repeated, identical, aria live messages) created</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 16 May 2016 15:48:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36853</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36853/1463413722253571</guid>
      <description>&lt;p&gt;
Noticed while investigating on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36848" title="#36848: defect (bug): Theme installer: avoid to announce the search results too many times (closed: fixed)"&gt;#36848&lt;/a&gt;. Unlike other browsers / screen readers combinations, seems Safari and VoiceOver don't announce repeated aria-live messages when the message text string is the same string used in the previous message.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp.a11y.speak()&lt;/code&gt; uses an &lt;code&gt;aria-relevant&lt;/code&gt; attribute set to a value of &lt;code&gt;additions text&lt;/code&gt; (which is the default value) thus only added text should be announced. To make repeated strings work, in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/33000" title="Add `assertive` capability to wp.a11y.speak().
Props afercia. See #32600."&gt;[33000]&lt;/a&gt; &lt;code&gt;wp.a11y.speak()&lt;/code&gt; has been changed in order to clear the aria live region before dispatching a new message.
&lt;/p&gt;
&lt;p&gt;
Seems this works in all browsers / screen readers combinations I've tested with, except Safari and VoiceOver.
&lt;/p&gt;
&lt;p&gt;
One place where this happens is in the Themes Installer screen, to reproduce:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;run a search with a non sense string, e.g. "qwertyuiop"
&lt;/li&gt;&lt;li&gt;the message "No themes found. Try a different search." gets announced
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/5ua5iUBHrz.png"&gt;&lt;img src="https://cldup.com/5ua5iUBHrz.png" alt="https://cldup.com/5ua5iUBHrz.png" crossorigin="anonymous" title="https://cldup.com/5ua5iUBHrz.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;add one character to the previous search string, e.g. "qwertyuiopa"
&lt;/li&gt;&lt;li&gt;a new search runs, the aria live gets cleared out and the same message gets dispatched
&lt;/li&gt;&lt;li&gt;Safari and VoiceOver don't announce the message, seems they don't get the "change" in the aria live region
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I'm not sure how to fix this, also not sure if this is a Safari/VoiceOver bug or just a different implementation.
&lt;/p&gt;
&lt;p&gt;
Using &lt;code&gt;aria-relevant=all&lt;/code&gt; would make other combos announce both the removed text and the added text so it's not an option.
&lt;/p&gt;
&lt;p&gt;
Maybe, try to find a way to force VoiceOver to think the new string is different, adding some not-readable character. Any thoughts more than welcome.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36852 (WP_Customize_Manager::after_setup_theme() refers to ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 16 May 2016 15:47:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36852#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36852#comment:1/1463413654695765</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>36852.diff attached to Ticket #36852</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 16 May 2016 15:47:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36852/36852.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36852/36852.diff/1463413639230549</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36852 (WP_Customize_Manager::after_setup_theme() refers to ...) created</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 16 May 2016 15:46:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36852</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36852/1463413579206400</guid>
      <description>&lt;p&gt;
The &lt;code&gt;isset( $_SERVER['customized'] )&lt;/code&gt; check in &lt;code&gt;WP_Customize_Manager::after_setup_theme()&lt;/code&gt; will always be false. It should be &lt;code&gt;isset( $_POST['customized'] )&lt;/code&gt;. Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/31421" title="Customizer: Restore showing a login form inside the previewer if an ..."&gt;r31421&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36851 (Widgets don't remove hooks after being unregistered) created</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 16 May 2016 15:28:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36851</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36851/1463412537484259</guid>
      <description>&lt;p&gt;
In &lt;code&gt;WP_Widget_Recent_Comments::__construct()&lt;/code&gt;, there is this bit of code:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;is_active_widget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;id_base&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;is_customize_preview&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'wp_head'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'recent_comments_style'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
If &lt;code&gt;unregister_widget( 'WP_Widget_Recent_Comments' )&lt;/code&gt; is called, this added &lt;code&gt;wp_head&lt;/code&gt; action is still going to persist unexpectedly. At the moment, I believe the only way to remedy this inside such widgets themselves would be to check to see if the widget is still among &lt;code&gt;$wp_widget_factory-&amp;gt;widgets&lt;/code&gt; when the action callback is called (here the &lt;code&gt;recent_comments_style&lt;/code&gt; method). From outside the widget, the alternative is would be to do:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$widget&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$wp_widget_factory&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;widgets&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'WP_Widget_Recent_Comments'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;unregister_widget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;get_class&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$widget&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;remove_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'wp_head'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$widget&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'recent_comments_style'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Neither of these options are great.
&lt;/p&gt;
&lt;p&gt;
Perhaps there should be new &lt;code&gt;widget_registered&lt;/code&gt; and &lt;code&gt;widget_unregistered&lt;/code&gt; actions that widgets could listen to to do this cleanup? Or there could be a new &lt;code&gt;unregister&lt;/code&gt; method on &lt;code&gt;WP_Widget&lt;/code&gt; that a subclass could have this logic inside of. (We wouldn't be able to use the PHP destructor since it would never be called since the reference to the class would be still captured among the registered hooks.) Likewise, instead of adding the hooks inside of the constructor, perhaps there should also be a &lt;code&gt;WP_Widget::register()&lt;/code&gt; method that gets called inside of the faux-private &lt;code&gt;WP_Widget::_register()&lt;/code&gt; (and &lt;code&gt;_register&lt;/code&gt; should be &lt;code&gt;final&lt;/code&gt;, no?)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #34114 (Remove the requirement to call load_plugin_textdomain() or ...) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 16 May 2016 15:18:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34114#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34114#comment:33/1463411922759819</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34893 (Improve Customizer setting validation model) updated</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Mon, 16 May 2016 15:16:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34893#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34893#comment:31/1463411760412901</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
But it could be that the notification could be obscured at the top as well for such a long control, right?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
True, except (I think) if you are in a different Customizer section when you save. In that case, it looks like you are brought back to top of the control with the notification at the bottom.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In such cases, perhaps it should just be left up to the custom control to just override the getNotificationsContainerElement to place the container at the appropriate spot?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, that sounds like it could also be a straightforward approach.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34114 (Remove the requirement to call load_plugin_textdomain() or ...) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 16 May 2016 15:09:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34114#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34114#comment:32/1463411373830489</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37440" title="I18N: In `get_translations_for_domain()` check if the global `$l10n` ..."&gt;37440&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
I18N: In &lt;code&gt;get_translations_for_domain()&lt;/code&gt; check if the global &lt;code&gt;$l10n&lt;/code&gt; was set by &lt;code&gt;_load_textdomain_just_in_time()&lt;/code&gt; before accessing it.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props danielhuesken.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34114" title="#34114: enhancement: Remove the requirement to call load_plugin_textdomain() or ... (closed: fixed)"&gt;#34114&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37440]: I18N: In `get_translations_for_domain()` check if the global `$l10n` ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 16 May 2016 15:09:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37440</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37440/1463411373105828</guid>
      <description>&lt;p&gt;
I18N: In &lt;code&gt;get_translations_for_domain()&lt;/code&gt; check if the global &lt;code&gt;$l10n&lt;/code&gt; was set by &lt;code&gt;_load_textdomain_just_in_time()&lt;/code&gt; before accessing it.
&lt;/p&gt;
&lt;p&gt;
Props danielhuesken.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34114" title="#34114: enhancement: Remove the requirement to call load_plugin_textdomain() or ... (closed: fixed)"&gt;#34114&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36849 (Filter to limit length of post slug (filter for _truncate_post_slug)) updated</title>
      
        <dc:creator>wp-entwickler.at</dc:creator>

      <pubDate>Mon, 16 May 2016 15:07:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36849#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36849#comment:2/1463411237913187</guid>
      <description>&lt;p&gt;
Thanks for your fast reply!
Sorry, I wasn't able to realize that &lt;code&gt;_truncate_post_slug()&lt;/code&gt; is marked as private.
&lt;/p&gt;
&lt;p&gt;
The filter &lt;code&gt;wp_unique_post_slug&lt;/code&gt; is fired at the very end of the function.
All checks are done at this point. Final.
&lt;/p&gt;
&lt;p&gt;
If you alter the slug with this filter, no additional checks will be made.
So it could happen that you're ending with a corrupt slug.
&lt;/p&gt;
&lt;p&gt;
It would be far better to alter the slug before things like the post_name_check, conflicts_with_date_archive check or the flat slug check were done.
&lt;/p&gt;
&lt;p&gt;
A possible solution could be to filter the hardcoded length ( at the moment this is set to 200 minus some stuff *gg*).
&lt;/p&gt;
&lt;p&gt;
Gruezi
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36849 (Filter to limit length of post slug (filter for _truncate_post_slug)) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 16 May 2016 14:57:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36849#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36849#comment:1/1463410633529063</guid>
      <description>&lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hey there,
&lt;/p&gt;
&lt;p&gt;
Welcome to WordPress Trac and thanks for creating this ticket!
&lt;/p&gt;
&lt;p&gt;
Note: &lt;code&gt;_truncate_post_slug()&lt;/code&gt; is marked as being private and thus should not contain any filters. Instead, a filter for limiting the slug length would need to be added to &lt;code&gt;wp_unique_post_slug()&lt;/code&gt;. Though I don't see why this isn't already possible using the &lt;code&gt;wp_unique_post_slug&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36850 (Bump Akismet External - 4.6) created</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Mon, 16 May 2016 14:47:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36850</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36850/1463410042707886</guid>
      <description>&lt;p&gt;
In the spirit of tickets past, e.g. &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31981" title="#31981: task (blessed): Bump Akismet to 3.1.1 for 4.2 (closed: fixed)"&gt;#31981&lt;/a&gt; , here is the tracking ticket for making sure Akismet stays current on trunk.
&lt;/p&gt;
&lt;p&gt;
Currently &lt;a class="ext-link" href="https://build.trac.wordpress.org/browser/trunk/wp-content/plugins"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://build.trac.wordpress.org/browser/trunk/wp-content/plugins&lt;/a&gt; has &lt;code&gt;akismet&lt;/code&gt; pegged to &lt;a class="ext-link" href="http://plugins.svn.wordpress.org/akismet/tags/3.1.10/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://plugins.svn.wordpress.org/akismet/tags/3.1.10/&lt;/a&gt; , now needs to be bumped to &lt;a class="ext-link" href="http://plugins.svn.wordpress.org/akismet/tags/3.1.11/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://plugins.svn.wordpress.org/akismet/tags/3.1.11/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Once updated, I'll reopen this ticket as needed. :-)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Tickets #34213,​28216,​35981 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 16 May 2016 14:38:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=34213%2C28216%2C35981</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=34213%2C28216%2C35981/1463409515549363</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #36849 (Filter to limit length of post slug (filter for _truncate_post_slug)) created</title>
      
        <dc:creator>wp-entwickler.at</dc:creator>

      <pubDate>Mon, 16 May 2016 14:38:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36849</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36849/1463409496404733</guid>
      <description>&lt;p&gt;
There are circumstances where you need to limit the lenght of the post slug.
&lt;/p&gt;
&lt;p&gt;
Unfortunately there is no filter in _truncate_post_slug to do so.
&lt;/p&gt;
&lt;p&gt;
It will be a great enhancement, if there would be a filter in this function.
&lt;/p&gt;
&lt;p&gt;
Related function:
&lt;/p&gt;
&lt;p&gt;
-wp_unique_post_slug - calling _truncate_post_slug
&lt;/p&gt;
&lt;p&gt;
Additionally it would be very usefull, if there could be a filter right at the start of wp_unique_post_slug for filtering the slug.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36848 (Theme installer: avoid to announce the search results too many times) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 16 May 2016 14:25:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36848#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36848#comment:1/1463408752342075</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>36848.patch attached to Ticket #36848</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 16 May 2016 14:25:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36848/36848.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36848/36848.patch/1463408706869021</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36848 (Theme installer: avoid to announce the search results too many times) created</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 16 May 2016 14:23:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36848</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36848/1463408598251181</guid>
      <description>&lt;p&gt;
Noticed two cases where the search results message is unnecessarily dispatched to the aria-live region.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;1 Initial render of the view&lt;/strong&gt;
When the view is initially rendered, looks like &lt;code&gt;announceSearchResults()&lt;/code&gt; runs both on render and on the &lt;code&gt;query:success&lt;/code&gt; event.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;2 When using the arrow keys on the search input field&lt;/strong&gt;
When doing a search in the Themes Installer and after the results are displayed users might want to select or edit the search terms in the input field to refine their search. To do this they will probably use the arrow keys (or the Home/End keys, etc.).
&lt;/p&gt;
&lt;p&gt;
As soon as an arrow key is pressed, the search results message will be dispatched again to the aria-live region.
&lt;/p&gt;
&lt;p&gt;
Investigated a bit and looks like this happens because there's nothing to check which keys get pressed or to check if the search terms have changed.
&lt;/p&gt;
&lt;p&gt;
At the very least, I'd say there should be a check on the search terms, also for consistency with what happens in the Installed Themes screen.
&lt;/p&gt;
&lt;p&gt;
TL;DR
&lt;/p&gt;
&lt;p&gt;
While in the Installed Themes screen &lt;code&gt;themes.view.Search.doSearch&lt;/code&gt; uses &lt;code&gt;themes.Collection.doSearch&lt;/code&gt; which checks the current search input field value against the previous search and returns early if they're equal...
in the Themes Installer instead, &lt;code&gt;themes.view.InstallerSearch&lt;/code&gt; does extend &lt;code&gt;themes.view.Search&lt;/code&gt; but then implements its own &lt;code&gt;search&lt;/code&gt; and &lt;code&gt;doSearch&lt;/code&gt; functions which miss to check the search input field value against the previous search.
&lt;/p&gt;
&lt;p&gt;
Thus, while previous search results are actually cached and a new API call is prevented, a &lt;code&gt;query:success&lt;/code&gt; custom event is triggered anyways and on this event other things run again including:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;the count text update
&lt;/li&gt;&lt;li&gt;more importantly, &lt;code&gt;announceSearchResults()&lt;/code&gt; runs again
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Tried to catch this in the screenshot below, to make it easier to reproduce. Just run a search and then move the cursor in the input field using the arrow keys:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/bWLPriMY_c.png"&gt;&lt;img src="https://cldup.com/bWLPriMY_c.png" alt="https://cldup.com/bWLPriMY_c.png" crossorigin="anonymous" title="https://cldup.com/bWLPriMY_c.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #33962 (List table: pagination links on small screens break in two lines) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 16 May 2016 13:31:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33962#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33962#comment:20/1463405515024850</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looking back at this and waiting for a more general rethink for nav/filter on small screens, a simple interim solution could be making the text drop one line below using just an additional &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; and few lines of CSS. See refreshed patch and screenshot. Some testing would be nice :)
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/jSMJJ0dCeE.png"&gt;&lt;img src="https://cldup.com/jSMJJ0dCeE.png" alt="https://cldup.com/jSMJJ0dCeE.png" crossorigin="anonymous" title="https://cldup.com/jSMJJ0dCeE.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>33962.5.patch attached to Ticket #33962</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 16 May 2016 13:25:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33962/33962.5.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33962/33962.5.patch/1463405157919243</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33055 (Support Parallel HTTP Requests in WP_Http, et al) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 16 May 2016 13:09:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33055#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33055#comment:39/1463404194409354</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33055#comment:33" title="Comment 33"&gt;rmccue&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We now have Requests in core, but we still need the additional layer in WP_HTTP to support parallel requests without requiring use of Requests directly.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35664 (Edit term screens: tab order should match visual order) closed</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 16 May 2016 13:02:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35664#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35664#comment:16/1463403721357708</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37439" title="Accessibility: make the tab order match the visual order in the Edit ..."&gt;37439&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Accessibility: make the tab order match the visual order in the Edit terms screens.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35664" title="#35664: defect (bug): Edit term screens: tab order should match visual order (closed: fixed)"&gt;#35664&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37439]: Accessibility: make the tab order match the visual order in the Edit ...</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 16 May 2016 13:02:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37439</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37439/1463403720487630</guid>
      <description>&lt;p&gt;
Accessibility: make the tab order match the visual order in the Edit terms screens.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35664" title="#35664: defect (bug): Edit term screens: tab order should match visual order (closed: fixed)"&gt;#35664&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36316 (Image editor: improve form validation errors handling) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 16 May 2016 12:25:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36316#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36316#comment:10/1463401542823623</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-editor by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1463401540000448"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Mon, 16 May 2016 11:33:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:32/1463398424217369</guid>
      <description>&lt;p&gt;
Added &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36335/classes-real.php" title="Attachment 'classes-real.php' in Ticket #36335"&gt;classes-real.php&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36335/classes-real.php" title="Download"&gt;​&lt;/a&gt; which better demonstrates what the final code should look like, without the temporary code I had in there. Apologies for not uploading this earlier, I was a bit unclear on what was formatting and what was actual proposed code.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:31" title="Comment 31"&gt;tfrommen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There are several things that I don't quite like, so I'm going to discuss them here. I really do try to be as constructive as I can, though. :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks for the reply. We're all working towards the same goal here :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In my opinion, it &lt;strong&gt;is&lt;/strong&gt; relevant in that we really should not (in fact: &lt;strong&gt;must&lt;/strong&gt; not) introduce anything incompatible with Composer as long as there is even the slightest chance we might switch over to Composer one of these days.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree, but I don't see there being anything incompatible with the approaches suggested here right now. Discussing actually switching to Composer is definitely outside the scope of this ticket.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't see anything bad with general purpose software (architecture)&amp;amp;mdash;as long as serving general purpose doesn't mean including lots of stuff that is only relevant for a tiny fraction of use cases, of course.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree, but I also don't want to be overly generic. If the stuff we put into core is usable, there's no reason to not include it, but I'd rather we not include things that core doesn't use until there's a need for them. We can always iterate on this in future versions.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The current state of our implementation is definitely not set into stone. However, I don't see anything really heavy and/or unnecessary there.
Would you mind indicating what parts you find superfluous (for the start)?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think the FileLoader parts and the Controller class are both a bit too over-abstracted for core usage.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Some comments on your code then...
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Consistent return type&lt;/strong&gt;
Can we please try to not include any more multi-return-type functions (without an actual, good reason for doing so)...?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sorry, this was part of the formatting/table code. New attachment doesn't include this.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;strong&gt;More flexible code&lt;/strong&gt;
I would like to not include the hard-coded &lt;code&gt;class-&lt;/code&gt; prefix into the &lt;code&gt;WP_Autoload_Prefixed&lt;/code&gt; class, but rather implement the class like so:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This falls under something that we don't need in core, so I'd prefer to avoid it. With the exception of a couple of files, core only uses &lt;code&gt;class-&lt;/code&gt; as the prefix; those other files are &lt;code&gt;class.&lt;/code&gt; and can be handled by the class map instead. (Ideally, I'd prefer to move those to fit the pattern.)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;strong&gt;Prefix global functions&lt;/strong&gt;
We should not introduce a new unprefixed global function &lt;code&gt;register_autoloader()&lt;/code&gt;. This will eventually break things here and there, so we should call it something like &lt;code&gt;wp_register_autoloader()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I guess the &lt;code&gt;file_for_class&lt;/code&gt; if just for your table, right?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
These were both part of the formatting code, apologies.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;strong&gt;Improve &lt;code&gt;__autoload()&lt;/code&gt;&lt;/strong&gt;
&lt;code&gt;$spl_autoloaders&lt;/code&gt; is global, so anyone can put into it whatever they like. So we should check for &lt;code&gt;is_callable&lt;/code&gt; inside &lt;code&gt;__autoload()&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Good point.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, we should really not check for &lt;code&gt;class_exists&lt;/code&gt; for several reasons. First, it's restricted to classes only. Second, it's too heavy, and even unnecessary, because the autoload function already returns something we can check against.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Autoloaders aren't required to return a value, as far as I'm aware; &lt;code&gt;spl_autoload_register( function ( $class ) { require $class . '.php'; } )&lt;/code&gt; is perfectly valid (although not really a good idea).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;strong&gt;Improve &lt;code&gt;spl_autoload_register()&lt;/code&gt;&lt;/strong&gt;
You check if the passed callback is actually callable, okay. But you continue to just add it to the global in case the function shouldn't throw any exceptions.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
One problem here is if &lt;code&gt;spl_autoload_register&lt;/code&gt; is called before the file containing the function is loaded. e.g. &lt;code&gt;spl_autoload_register( 'myfunc' ); require 'myfunc.php';&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
I believe SPL would allow this normally, so we need to in the polyfill.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;strong&gt;Improve &lt;code&gt;spl_autoload_functions()&lt;/code&gt;&lt;/strong&gt;
Since &lt;code&gt;$spl_autoloaders&lt;/code&gt; is a global, and since we don't want to argue with SPL, we should make sure we're returning an array.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Good catch.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The main difference between the currently proposed implementations as well as the according discussions lies with &lt;strong&gt;who&lt;/strong&gt; is &lt;strong&gt;when&lt;/strong&gt; able to use the autoloader &lt;strong&gt;for what&lt;/strong&gt;.
As long as the end goal is a central autoloader that &lt;strong&gt;can&lt;/strong&gt; be used for core WordPress as well as plugins and themes, I'm totally fine with whatever route we take.
However, we really should think about from what amount (and type) of changes we could benefit the most, and what types fo changes do make most sense when.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'd love to make sure this is usable for plugins/themes as well, but I want to keep the scope minimal so we can ship it as soon as possible. (I do really want this in my own plugins and themes, because I &lt;em&gt;hate&lt;/em&gt; having 300 lines of &lt;code&gt;require&lt;/code&gt;. Every time I work on core, it's like going back in time.) As long as we can expand that out in future releases, I don't think we need to ship everything right now.
&lt;/p&gt;
&lt;p&gt;
For example, do we need a PSR-4 autoloader? Core doesn't use it, so I'd prefer not to do it for now, and implement it later if lots of plugins and themes do want it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>classes-real.php attached to Ticket #36335</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Mon, 16 May 2016 11:18:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36335/classes-real.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36335/classes-real.php/1463397484305785</guid>
      <description>&lt;p&gt;
Proposed actual code for the autoloaders
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36845 (Bump $wp_version to the latest revision number) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 16 May 2016 10:23:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36845#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36845#comment:4/1463394231695237</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37438" title="Version bump.
Fixes #36845."&gt;37438&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Version bump.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36845" title="#36845: defect (bug): Bump $wp_version to the latest revision number (closed: fixed)"&gt;#36845&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37438]: Version bump.  Fixes #36845.</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 16 May 2016 10:23:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37438</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37438/1463394230899883</guid>
      <description>&lt;p&gt;
Version bump.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36845" title="#36845: defect (bug): Bump $wp_version to the latest revision number (closed: fixed)"&gt;#36845&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36429 (Twenty Eleven Ephemera widget fails to prevent caching in Customizer ...) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Mon, 16 May 2016 10:21:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36429#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36429#comment:5/1463394099785570</guid>
      <description>&lt;p&gt;
Hi @anneschmidt and welcome. Unfortunately, I am unable to get your patch working. Can you please follow the instructions here for creating a patch: &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/tutorials/trac/submitting-a-patch/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/handbook/tutorials/trac/submitting-a-patch/&lt;/a&gt;. I do notice also, you have a few new lines that @westonruter's suggestion doesn't. It would be a good idea to tidy those.
&lt;/p&gt;
&lt;p&gt;
If you are having issues creating the patch, just let us know and I can commit your suggestion still in your name. Thanks so much for contributing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>tfrommen</dc:creator>

      <pubDate>Mon, 16 May 2016 09:57:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:31/1463392644877010</guid>
      <description>&lt;p&gt;
Hey Ryan,
&lt;/p&gt;
&lt;p&gt;
thanks a lot for your comment, and even more for the time and effort spent around it.
&lt;/p&gt;
&lt;p&gt;
There are several things that I don't quite like, so I'm going to discuss them here. I really do try to be as constructive as I can, though. :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think whether we adopt Composer usage or not isn't hugely relevant to this conversation...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In my opinion, it &lt;strong&gt;is&lt;/strong&gt; relevant in that we really should not (in fact: &lt;strong&gt;must&lt;/strong&gt; not) introduce anything incompatible with Composer as long as there is even the slightest chance we might switch over to Composer one of these days.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't think the current implementation is appropriate for core. It's a bit too heavy and general-purpose.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't see anything bad with general purpose software (architecture)&amp;amp;mdash;as long as serving general purpose doesn't mean including lots of stuff that is only relevant for a tiny fraction of use cases, of course.
The current state of our implementation is definitely not set into stone. However, I don't see anything really heavy and/or unnecessary there.
Would you mind indicating what parts you find superfluous (for the start)?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I have an alternative implementation that tries to stay as lightweight as possible.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Some comments on your code then...
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Consistent return type&lt;/strong&gt;
Can we please try to not include any more multi-return-type functions (without an actual, good reason for doing so)...?
Making &lt;code&gt;get_path()&lt;/code&gt; return an empty string &lt;code&gt;''&lt;/code&gt; can only be understood as &lt;em&gt;I didn't find a file (path) for the &lt;/em&gt;thing&lt;em&gt; you are trying to load&lt;/em&gt;, can it?
So we should just stick with &lt;code&gt;string&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Even if core WordPress doesn't come with interfaces (or traits), it makes sense not to exclude these Structural Elements.
This would lead to these two changes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;$class&lt;/code&gt; would be either &lt;code&gt;$fqn&lt;/code&gt; (fully qualified name) or &lt;code&gt;$fqsen&lt;/code&gt; (fully qualified Structural Element name);
&lt;/li&gt;&lt;li&gt;&lt;em&gt;ClassMap&lt;/em&gt; would be just &lt;em&gt;Map&lt;/em&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;strong&gt;More flexible code&lt;/strong&gt;
I would like to not include the hard-coded &lt;code&gt;class-&lt;/code&gt; prefix into the &lt;code&gt;WP_Autoload_Prefixed&lt;/code&gt; class, but rather implement the class like so:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;WP_Autoload_Prefixed&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;WP_Autoload_Handler&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="nv"&gt;$path&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="nv"&gt;$path_prefix&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="nv"&gt;$prefix&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;__construct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$path_prefix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$prefix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;trailingslashit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$path&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;path_prefix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;strtolower&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$path_prefix&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;prefix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;strtolower&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$prefix&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;get_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$fqn&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$fqn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;strtolower&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$fqn&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;prefix&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nb"&gt;strpos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$fqn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;prefix&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="nv"&gt;$filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;path_prefix&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nb"&gt;str_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'_'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$fqn&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;path&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$filename&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
That way, one could also use the class for things like &lt;code&gt;class.foo.php&lt;/code&gt; and &lt;code&gt;interface-foo.php&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Prefix global functions&lt;/strong&gt;
We should not introduce a new unprefixed global function &lt;code&gt;register_autoloader()&lt;/code&gt;. This will eventually break things here and there, so we should call it something like &lt;code&gt;wp_register_autoloader()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I guess the &lt;code&gt;file_for_class&lt;/code&gt; if just for your table, right?
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Improve &lt;code&gt;__autoload()&lt;/code&gt;&lt;/strong&gt;
&lt;code&gt;$spl_autoloaders&lt;/code&gt; is global, so anyone can put into it whatever they like. So we should check for &lt;code&gt;is_callable&lt;/code&gt; inside &lt;code&gt;__autoload()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Also, we should really not check for &lt;code&gt;class_exists&lt;/code&gt; for several reasons. First, it's restricted to classes only. Second, it's too heavy, and even unnecessary, because the autoload function already returns something we can check against.
&lt;/p&gt;
&lt;p&gt;
This would make &lt;code&gt;__autoload()&lt;/code&gt; something like this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;__autoload&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$fqn&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="nv"&gt;$spl_autoloaders&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$spl_autoloaders&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$autoloader&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nb"&gt;is_callable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$autoloader&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="k"&gt;continue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;call_user_func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$autoloader&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$fqn&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="c1"&gt;// If it has been autoloaded, stop processing.
&lt;/span&gt;                        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
&lt;strong&gt;Improve &lt;code&gt;spl_autoload_register()&lt;/code&gt;&lt;/strong&gt;
You check if the passed callback is actually callable, okay. But you continue to just add it to the global in case the function shouldn't throw any exceptions.
In fact, something like this would be better:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;spl_autoload_register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$autoload_function&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$throw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$prepend&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nb"&gt;is_callable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$autoload_function&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$throw&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="c1"&gt;// String not translated to match PHP core.
&lt;/span&gt;                        &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Function not callable'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="nv"&gt;$spl_autoloaders&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="c1"&gt;// Don't allow multiple registration.
&lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;in_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$autoload_function&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$spl_autoloaders&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$prepend&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nb"&gt;array_unshift&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$spl_autoloaders&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$autoload_function&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$spl_autoloaders&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$autoload_function&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
&lt;strong&gt;Improve &lt;code&gt;spl_autoload_functions()&lt;/code&gt;&lt;/strong&gt;
Since &lt;code&gt;$spl_autoloaders&lt;/code&gt; is a global, and since we don't want to argue with SPL, we should make sure we're returning an array.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;spl_autoload_functions&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="nv"&gt;$spl_autoloaders&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;is_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$spl_autoloaders&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="nv"&gt;$spl_autoloaders&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
It implements the bare minimum to support autoloading core itself, which is likely also useful for plugins, but isn't necessarily designed to be.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The main difference between the currently proposed implementations as well as the according discussions lies with &lt;strong&gt;who&lt;/strong&gt; is &lt;strong&gt;when&lt;/strong&gt; able to use the autoloader &lt;strong&gt;for what&lt;/strong&gt;.
As long as the end goal is a central autoloader that &lt;strong&gt;can&lt;/strong&gt; be used for core WordPress as well as plugins and themes, I'm totally fine with whatever route we take.
However, we really should think about from what amount (and type) of changes we could benefit the most, and what types fo changes do make most sense when.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
let's use &lt;code&gt;spl_autoload_register&lt;/code&gt; directly rather than implementing our own autoloading stack on top of it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well, that would be awesome, wouldn't it. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 16 May 2016 09:13:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:30/1463389999427328</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #buddypress by djpaul. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/buddypress/p1463389997002192"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26511 (Introduce a locale-switching function) updated</title>
      
        <dc:creator>yoavf</dc:creator>

      <pubDate>Mon, 16 May 2016 08:31:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26511#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26511#comment:15/1463387515301980</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26511#comment:14" title="Comment 14"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@yoavf, @dd32: Is &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/26511/switch_to_locale.php" title="Attachment 'switch_to_locale.php' in Ticket #26511"&gt;switch_to_locale.php&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/26511/switch_to_locale.php" title="Download"&gt;​&lt;/a&gt; still the same function which is used on wp.com?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes - this version was just edited to remove wp.com specific references and to add some ( incomplete ) support for multiple text domains.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32683 (Custom Menu widget should include a shortcut to load selected menu ...) closed</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 16 May 2016 07:21:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32683#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32683#comment:12/1463383282563047</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37437" title="Customize: Include shortcut button in Custom Menu widget to edit the ..."&gt;37437&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Customize: Include shortcut button in Custom Menu widget to edit the selected menu in the Customizer.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Clicking on the Edit Menu button focuses on the corresponding nav menu section. Upon collapsing the nav menu section, the focus is returned to the Custom Menu widget instead of taking the user to the menus root panel. In this way, the back button behavior is modified once to serve as breadcrumb/history navigation. The Edit Menu button with the breadcrumb back button behavior greatly reduce the number of UI interactions needed to edit a menu referenced in a Custom Menu widget.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props celloexpressions, westonruter.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32683" title="#32683: feature request: Custom Menu widget should include a shortcut to load selected menu ... (closed: fixed)"&gt;#32683&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37437]: Customize: Include shortcut button in Custom Menu widget to edit the ...</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 16 May 2016 07:21:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37437</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37437/1463383282018654</guid>
      <description>&lt;p&gt;
Customize: Include shortcut button in Custom Menu widget to edit the selected menu in the Customizer.
&lt;/p&gt;
&lt;p&gt;
Clicking on the Edit Menu button focuses on the corresponding nav menu section. Upon collapsing the nav menu section, the focus is returned to the Custom Menu widget instead of taking the user to the menus root panel. In this way, the back button behavior is modified once to serve as breadcrumb/history navigation. The Edit Menu button with the breadcrumb back button behavior greatly reduce the number of UI interactions needed to edit a menu referenced in a Custom Menu widget.
&lt;/p&gt;
&lt;p&gt;
Props celloexpressions, westonruter.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32683" title="#32683: feature request: Custom Menu widget should include a shortcut to load selected menu ... (closed: fixed)"&gt;#32683&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #35380 (Update jQuery to 1.12.0 and jQuery Migrate to 1.3.0) updated</title>
      
        <dc:creator>lovememore</dc:creator>

      <pubDate>Mon, 16 May 2016 07:19:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35380#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35380#comment:24/1463383170596275</guid>
      <description>&lt;p&gt;
FYI: Google have updated their CDN with the jquery 1.12.3 now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34893 (Improve Customizer setting validation model) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 16 May 2016 07:15:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34893#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34893#comment:30/1463382949583451</guid>
      <description>&lt;p&gt;
@dlh thanks for demonstrating that. But it could be that the notification could be obscured at the top as well for such a long control, right? In such cases, perhaps it should just be left up to the custom control to just override the &lt;code&gt;getNotificationsContainerElement&lt;/code&gt; to place the container at the appropriate spot?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>34893.3.diff attached to Ticket #34893</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 16 May 2016 06:55:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34893/34893.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34893/34893.3.diff/1463381727760983</guid>
      <description>&lt;p&gt;
Add QUnit tests
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Tickets #33055,​36847 batch updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 16 May 2016 06:53:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=33055%2C36847</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=33055%2C36847/1463381592029167</guid>
      <description>&lt;i&gt;Resolution&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33055" title="#33055: task (blessed): Support Parallel HTTP Requests in WP_Http, et al (closed: fixed)"&gt;#33055&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #36847 (PHP Fatal error:  Cannot use object of type Requests_Response as array) closed</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Mon, 16 May 2016 06:52:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36847#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36847#comment:1/1463381521685662</guid>
      <description>worksforme: &lt;p&gt;
Just fixed this in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37436" title="HTTP API: Pass array-like object to http_api_debug.
This was ..."&gt;r37436&lt;/a&gt;. Can you update and try again please?
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36847 (PHP Fatal error:  Cannot use object of type Requests_Response as array) created</title>
      
        <dc:creator>sebastian.pisula</dc:creator>

      <pubDate>Mon, 16 May 2016 06:45:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36847</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36847/1463381147406537</guid>
      <description>&lt;p&gt;
I try update plugin in WordPress and I have fatal:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;[16-May-2016 06:39:46 UTC] PHP Fatal error:  Cannot use object of type Requests_Response as array in \wordpress\wp-includes\http.php on line 255&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Plugins was updated.
&lt;/p&gt;
&lt;p&gt;
My WordPress version: 4.6-alpha-37434
&lt;/p&gt;
&lt;p&gt;
Problem is in:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="sd"&gt;/**
 * Retrieve only the response code from the raw response.
 *
 * Will return an empty array if incorrect parameter value is given.
 *
 * @since 2.7.0
 *
 * @param array $response HTTP response.
 * @return int|string The response code as an integer. Empty string on incorrect parameter given.
 */&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;wp_remote_retrieve_response_code&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$response&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;is_wp_error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$response&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'response'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nb"&gt;is_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$response&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'response'&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$response&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'response'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;'code'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36837 (&lt;script&gt; tags in Admin Options page input field triggering mod_security) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 16 May 2016 06:42:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36837#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36837#comment:1/1463380944991717</guid>
      <description>invalid: &lt;p&gt;
Hey @maddogprod,
&lt;/p&gt;
&lt;p&gt;
Unfortunately there really isn't anything we can do about this - and it certainly isn't something we should attempt to work around in WordPress.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;mod_security&lt;/code&gt; rules are often trigger-happy, as they are in this case, and it sounds like it's probably being triggered by the presence of &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; in any data sent to the server.
&lt;/p&gt;
&lt;p&gt;
Although the host says nothing has changed, very little has changed in WordPress as well - and definitely nothing of substance that would cause us to suddenly start triggering such a rule.
&lt;/p&gt;
&lt;p&gt;
The only suggestion I can offer you, is to use a plugin/shortcode instead to add the tracking data, so that you aren't required to add the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tags in the input, and only have to specify a tracking ID.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>36288.patch attached to Ticket #36288</title>
      
        <dc:creator>bhavikdream</dc:creator>

      <pubDate>Mon, 16 May 2016 06:27:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36288/36288.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36288/36288.patch/1463380040000610</guid>
      <description>&lt;p&gt;
Bug Fix without select plugin update
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33055 (Support Parallel HTTP Requests in WP_Http, et al) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Mon, 16 May 2016 06:11:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33055#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33055#comment:37/1463379119127163</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37436" title="HTTP API: Pass array-like object to http_api_debug.
This was ..."&gt;37436&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
HTTP API: Pass array-like object to http_api_debug.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This was mistakingly passing the Requests_Response object, which caused fatal errors with debugging tools.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33055" title="#33055: task (blessed): Support Parallel HTTP Requests in WP_Http, et al (closed: fixed)"&gt;#33055&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37436]: HTTP API: Pass array-like object to http_api_debug.  This was ...</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Mon, 16 May 2016 06:11:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37436</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37436/1463379118433260</guid>
      <description>&lt;p&gt;
HTTP API: Pass array-like object to http_api_debug.
&lt;/p&gt;
&lt;p&gt;
This was mistakingly passing the Requests_Response object, which caused fatal errors with debugging tools.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33055" title="#33055: task (blessed): Support Parallel HTTP Requests in WP_Http, et al (closed: fixed)"&gt;#33055&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #33055 (Support Parallel HTTP Requests in WP_Http, et al) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Mon, 16 May 2016 06:09:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33055#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33055#comment:36/1463378983883696</guid>
      <description>&lt;p&gt;
Aha, tracked down the issue: &lt;code&gt;http_api_debug&lt;/code&gt; is called with the raw Requests_Response object instead of the array-like object.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33055 (Support Parallel HTTP Requests in WP_Http, et al) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Mon, 16 May 2016 05:04:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33055#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33055#comment:35/1463375053035806</guid>
      <description>&lt;p&gt;
@kraftbj The &lt;code&gt;offsetGet&lt;/code&gt; callback &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/944a69df87a6a7f50f403707a4bc99aa24c9b6cf/wp-includes/class-wp-http-requests-response.php#L173-L177"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;should be handling this already&lt;/a&gt;. I can dig into this, but unsure why that wouldn't be getting called, unless something is casting the response to an array earlier?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Mon, 16 May 2016 04:35:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:29/1463373322932822</guid>
      <description>&lt;p&gt;
I think whether we adopt Composer usage or not isn't hugely relevant to this conversation; while it has the ability to solve some of the problems here, it's also a huge architectural change to get it to the point where it would make sense. Let's discuss this on a new ticket rather than here.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
I do love the concept of autoloading, and I think the work here has been productive, but I don't think the current implementation is appropriate for core. It's a bit too heavy and general-purpose.
&lt;/p&gt;
&lt;p&gt;
I have an alternative implementation that tries to stay as lightweight as possible. It implements the bare minimum to support autoloading core itself, which is likely also useful for plugins, but isn't necessarily designed to be. We can look at expanding this in the future, but this is just a Minimal Viable Patch. I think we can all agree that some form of autoloading is better than what we have right now. :)
&lt;/p&gt;
&lt;p&gt;
The attached file contains ~70 lines of (undocumented) code that includes PSR-0, WP-style (&lt;code&gt;class-...php&lt;/code&gt;) and classmap style autoloaders, plus ~170 lines of configuration for core itself. (The rest of the code is to generate a table.) Note that this is just the lookup at the moment so we can get the mapping sorted first (adapting this to the actual autoloader will be only a line or two more). The &lt;code&gt;$wp_autoloaders&lt;/code&gt; bit is temporary; in the final implementation, I'd rather we avoid treating the autoloaders any different to any other normal PHP autoloader. That is, let's use &lt;code&gt;spl_autoload_register&lt;/code&gt; directly rather than implementing our own autoloading stack on top of it.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://bl.ocks.org/rmccue/raw/9cf8f5d2987f1b98335f7003e654ae1f/e07bff5cdb322d870d63a1cdc4d790c145281634/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Here's what that mapping looks like&lt;/a&gt;. This covers the vast majority of classes in core, with some exceptions. The ones I haven't tackled here are mostly things we should split out, or are never going to be autoloaded.
&lt;/p&gt;
&lt;p&gt;
We can look at expanding and changing this in the future, but this takes us from no autoloading right now to having the key pieces we need for it. This is kind of like building demolition: we're assembling the scaffolding first to allow us to take the building down slowly. Once this is in place, we can start removing some of the &lt;code&gt;require&lt;/code&gt; statements safely and evaluating how it affects core as we go.
&lt;/p&gt;
&lt;p&gt;
(I've also attached the autoloader compatibility file; you can check the consistency &lt;a class="ext-link" href="https://3v4l.org/D69oU"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;using 3v4l.org&lt;/a&gt;. This should polyfill the SPL autoloader nicely.)
&lt;/p&gt;
&lt;p&gt;
I'd love to hear your thoughts on this alternative approach.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>autoload-compat.php attached to Ticket #36335</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Mon, 16 May 2016 04:34:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36335/autoload-compat.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36335/autoload-compat.php/1463373295546664</guid>
      <description>&lt;p&gt;
SPL autoload compatibility shim/polyfill
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>classes.php attached to Ticket #36335</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Mon, 16 May 2016 04:34:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36335/classes.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36335/classes.php/1463373273017353</guid>
      <description>&lt;p&gt;
Alternative implementation of autoloading concept
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36845 (Bump $wp_version to the latest revision number) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Mon, 16 May 2016 03:55:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36845#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36845#comment:3/1463370910655875</guid>
      <description>&lt;p&gt;
Yup, I've just read the Slack chat logs: &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1463329620004965"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/core/p1463329620004965&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Including either a link to the chat log or the addition of that related information for context would have been helpful.
&lt;/p&gt;
&lt;p&gt;
Based on the Slack chat logs now there are two options: 1. Bump the version or 2. Use a file exists check
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33055 (Support Parallel HTTP Requests in WP_Http, et al) updated</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Mon, 16 May 2016 02:29:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33055#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33055#comment:34/1463365778909359</guid>
      <description>&lt;p&gt;
&lt;code&gt;Fatal error: Cannot use object of type Requests_Response as array in /home/kraftbj/public_html/wp-includes/http.php on line 255&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
That line in http.php: &lt;code&gt;if ( is_wp_error($response) || ! isset($response['response']) || ! is_array($response['response']))&lt;/code&gt; of &lt;code&gt;wp_remote_retrieve_response_code&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Making Requests_Response &lt;code&gt;implements ArrayAccess&lt;/code&gt; and adding the needed functions seem to resolve it for me, but unfamiliar with the internals of Requests to know if that's a feasible solution or just duct tape.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36845 (Bump $wp_version to the latest revision number) updated</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Mon, 16 May 2016 02:18:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36845#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36845#comment:2/1463365107506656</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
For context, I'm assuming this is related to Requests landing in Core and WP CLI needing to selectively include the new file(s) . WP-CLI selectively includes things based on wp_version number, e.g. &lt;a class="ext-link" href="https://github.com/kraftbj/wp-cli/blob/47aa5229c8b860849a2f0d9a054008891874be53/php/wp-settings-cli.php#L171"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/kraftbj/wp-cli/blob/47aa5229c8b860849a2f0d9a054008891874be53/php/wp-settings-cli.php#L171&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The bump is helpful for running WP CLI and various possible states of trunk on our servers. :-)
&lt;/p&gt;
&lt;p&gt;
IIRC, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/35088" title="Version bump.
"&gt;r35088&lt;/a&gt; was done to help with this after the embed-functions.php was added in the 4.4 cycle.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36845 (Bump $wp_version to the latest revision number) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Mon, 16 May 2016 00:08:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36845#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36845#comment:1/1463357287808073</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is correct, you can see the revision logs for when the version is typically bumped:
&lt;a href="https://core.trac.wordpress.org/log/trunk/src/wp-includes/version.php"&gt;https://core.trac.wordpress.org/log/trunk/src/wp-includes/version.php&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
For the &lt;code&gt;build.svn&lt;/code&gt; repo it is the current commit &lt;code&gt;4.6-alpha-37435&lt;/code&gt; per the latest &lt;code&gt;core.svn&lt;/code&gt; commit &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37435" title="Media: Remove medium_large size from `$whitelist_options['media']` in ..."&gt;r37435&lt;/a&gt;:
&lt;a class="ext-link" href="https://build.trac.wordpress.org/browser/trunk/wp-includes/version.php#L7"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://build.trac.wordpress.org/browser/trunk/wp-includes/version.php#L7&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>notifications-below-control.jpg attached to Ticket #34893</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Mon, 16 May 2016 00:06:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34893/notifications-below-control.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34893/notifications-below-control.jpg/1463357213839802</guid>
      <description>&lt;p&gt;
Instance of an "invisible" notification
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #34893 (Improve Customizer setting validation model) updated</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Mon, 16 May 2016 00:05:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34893#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34893#comment:29/1463357159905411</guid>
      <description>&lt;p&gt;
@westonruter Those are fair considerations. I'm not sure whether my reasons in favor of displaying the notifications at the top of the container overcome them, but here they are:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;The notifications are not visible when the control is taller than the available space (see screenshot).
&lt;/li&gt;&lt;li&gt;Users might consider it inconsistent for notifications to appear above inputs sometimes and below inputs other times (but that is only speculation).
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36292 (Rewrites: Next Generation) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Sun, 15 May 2016 23:36:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36292#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36292#comment:14/1463355387364634</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36292#comment:12" title="Comment 12"&gt;giuseppe.mazzapica&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
You'll be surprised that my plugins are the very few open source WordPress plugins on the entire web that are tested &lt;strong&gt;without&lt;/strong&gt; loading WordPress. Every WordPress class and function and hook is mocked.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The problem with that approach is that is makes the assumption that all of your mocks behave exactly as WordPress would behave, and given the combinatorial amount of functions and hooks that is a statistical impossibility especially when you consider that behavior changes with each release of WordPress.
&lt;/p&gt;
&lt;p&gt;
Yes, what you have is better than not having any testing -- by far -- but it is still far from perfect.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As best I can tell from what you proposed the callback is not called until &lt;em&gt;after&lt;/em&gt; the regex matches, so unless I misunderstand your suggestion the matches would still be context free.
&lt;/p&gt;
&lt;p&gt;
Maybe your definition of &lt;em&gt;"context"&lt;/em&gt; is different than I intended when I used it? The context I meant was that state of the system configuration and/or data currently in the system.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You are correct, you are using your definition of context &lt;em&gt;in this context (no pun intended.)&lt;/em&gt; My definition of &lt;em&gt;"context"&lt;/em&gt; here is the context of the URL segments when compared to architected structure of the site and of the values persisted in the database.
&lt;/p&gt;
&lt;p&gt;
For example, with context-free URLs if the URL path is &lt;code&gt;/about/&lt;/code&gt; then we both would probably assume a &lt;code&gt;$post_type='page'&lt;/code&gt; with a &lt;code&gt;slug&lt;/code&gt; of &lt;code&gt;about&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
However, with context-sensitive URLs that I am advocating for URLs that might not be able to be determined by merely looking at them. Instead the router would need to determine which post or taxonomy term those URLs represented, or if they even represented data in the database.  Maybe &lt;code&gt;/api/&lt;/code&gt; would represent a full code-generated response.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
For example, if we want Categories in the URL root and we have a &lt;code&gt;sports&lt;/code&gt; category slug then that URL would route to the Category Archive instead of routing to a Page with a URL slug of &lt;code&gt;sports&lt;/code&gt;.  &lt;em&gt;(And with the approach I proposed we'd need to make sure users were warned when path segments became ambiguous.)&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, but I am advocating for more than that. For example, what of URL path's &lt;code&gt;/barack-obama/&lt;/code&gt;, &lt;code&gt;/obamacare/&lt;/code&gt;, &lt;code&gt;/google/&lt;/code&gt;, &lt;code&gt;/mercedes-benz/&lt;/code&gt; or &lt;code&gt;/giuseppe-mazzapica/&lt;/code&gt;?  With only context-free URLs we know that those would look up those slugs using &lt;code&gt;$post_type='page'&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
But with context-sensitive URLs the URLs above might represent, respectively, a person type post, a news category, a company type post, an automaker type post and a user account.  It is currently possible to do this in WordPress; most of the sites I work on do this.
&lt;/p&gt;
&lt;p&gt;
However, it is currently a hack to do this in WordPress. &lt;strong&gt;I think it should be built into the core of WordPress to enable this, and then for core to optimize the 80% case as best possible.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Yes, in some cases the above would cause slow performance, but so does a poorly written SQL query.  Just as the SQL developer should be responsible for ensuring their queries are fast or cached so should the site architecture/developer be responsible to ensure that sites that need to scale to huge amounts of content either do not have URLs that cause issues or they optimize those URLs.
&lt;/p&gt;
&lt;p&gt;
For example, if a site has 1000 categories -- bad practice thought it probably is -- those category slugs could be loaded into memcache and scanned rapidly for a match before moving on to other potentials.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In my first comment here (&lt;a href="https://core.trac.wordpress.org/ticket/36292?replyto=11#comment:4"&gt;https://core.trac.wordpress.org/ticket/36292?replyto=11#comment:4&lt;/a&gt;) I proposed to provide context when adding hooks (via the introduction of a new hook &lt;code&gt;add_rewrite_rules&lt;/code&gt; that pass an instance of request object) &lt;strong&gt;and&lt;/strong&gt; to pass context route callbacks.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Certainly, but we were not discussing the same thing, as described above.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
So, when a route is &lt;em&gt;slightly&lt;/em&gt; different based on context, is probably convenient just ad it and then handle differences while performing route action, which is easy and straightforward if route action is a callback that receives context as argument.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Adding routes into code makes it effectively impossible to get the reciprocal unless people write both sets of code, which many people will not &lt;em&gt;(even realize them need to.)&lt;/em&gt;  Better to build a system that allows us to find out that &lt;code&gt;/barack-obama/&lt;/code&gt; is &lt;code&gt;$post_id=123&lt;/code&gt; &lt;strong&gt;AND&lt;/strong&gt; that &lt;code&gt;$post_id=123&lt;/code&gt; has a URL of &lt;code&gt;/barack-obama/&lt;/code&gt;; &lt;strong&gt;we should be able to derive that from the system from declarative information, not with hooks.&lt;/strong&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
FastRoute is committed to speed, so it reduces features to avoid overhead, but I decided that some overhead is an acceptable trade off to have those features.
...
Consider, first of all, that FastRoute performs a singular preg_match_all call to find a match among all rules.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You avoided my response to your statement that &lt;em&gt;"segment chunking will absolutely not be an optimization compared to FastRoute"&lt;/em&gt; which you justified by saying &lt;em&gt;"Consider, first of all, that FastRoute performs a singular preg_match_all call to find a match among all rules."&lt;/em&gt;  And I proved your justification to be false because FastRoute chunks arbitrarily in groups of 10 URLs which means it can end up running many &lt;code&gt;preg_match()&lt;/code&gt; calls to match a URL, especially for WordPress sites with at least 100 regex rules and often 200 or more.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Thus I still assert that segment chunking is likely a proper optimization over FastRoute &lt;em&gt;as it is currently implemented&lt;/em&gt;.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36531 (Default image size medium_large is not generated) reopened</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 15 May 2016 22:45:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36531#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36531#comment:12/1463352310489440</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #36531 (Default image size medium_large is not generated) closed</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sun, 15 May 2016 22:37:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36531#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36531#comment:11/1463351841526605</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37435" title="Media: Remove medium_large size from `$whitelist_options['media']` in ..."&gt;37435&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: Remove medium_large size from &lt;code&gt;$whitelist_options['media']&lt;/code&gt; in &lt;code&gt;options.php&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;medium_large_size_w&lt;/code&gt; and &lt;code&gt;medium_large_size_h&lt;/code&gt; options were added to the&lt;br /&gt;
$whitelist_options&lt;a class="missing wiki"&gt;media?&lt;/a&gt; in options.php in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/35479" title="Media: add a new image size, `medium_large`. Bumps db version to add ..."&gt;[35479]&lt;/a&gt;, which causes both options&lt;br /&gt;
to be set to &lt;code&gt;0&lt;/code&gt; when the media settings are changed. When this occurs, the&lt;br /&gt;
medium_large image size will no longer be created when an image is uploaded.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Since these options aren't meant to be updated via the settings UI, they can be&lt;br /&gt;
safely removed from the whitelist.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36531" title="#36531: defect (bug): Default image size medium_large is not generated (closed: fixed)"&gt;#36531&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37435]: Media: Remove medium_large size from `$whitelist_options['media']` in ...</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sun, 15 May 2016 22:37:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37435</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37435/1463351840335692</guid>
      <description>&lt;p&gt;
Media: Remove medium_large size from &lt;code&gt;$whitelist_options['media']&lt;/code&gt; in &lt;code&gt;options.php&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;medium_large_size_w&lt;/code&gt; and &lt;code&gt;medium_large_size_h&lt;/code&gt; options were added to the
$whitelist_options&lt;a class="missing wiki"&gt;media?&lt;/a&gt; in options.php in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/35479" title="Media: add a new image size, `medium_large`. Bumps db version to add ..."&gt;[35479]&lt;/a&gt;, which causes both options
to be set to &lt;code&gt;0&lt;/code&gt; when the media settings are changed. When this occurs, the
medium_large image size will no longer be created when an image is uploaded.
&lt;/p&gt;
&lt;p&gt;
Since these options aren't meant to be updated via the settings UI, they can be
safely removed from the whitelist.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36531" title="#36531: defect (bug): Default image size medium_large is not generated (closed: fixed)"&gt;#36531&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #34893 (Improve Customizer setting validation model) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 15 May 2016 22:07:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34893#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34893#comment:28/1463350064180046</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>multiple-invalidity-notifications.png attached to Ticket #34893</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 15 May 2016 22:07:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34893/multiple-invalidity-notifications.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34893/multiple-invalidity-notifications.png/1463350042843198</guid>
      <description>&lt;p&gt;
Multiple notifications are displayed at once via bullet list
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #34893 (Improve Customizer setting validation model) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 15 May 2016 22:02:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34893#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34893#comment:27/1463349765019199</guid>
      <description>&lt;p&gt;
@dlh good question. I suppose the reason is that if there is no &lt;code&gt;.customize-control-title&lt;/code&gt; element in a control, then perhaps the control is using a different element to serve as the title and it would make sense to prevent the notification from being injected before any such alternate title? Or if there is a control that just consists of a checkbox and label, without any title, then it wouldn't make sense for the notification appear above the title-less control?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36846 (Allow get_terms() to return slug&amp;name fields) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sun, 15 May 2016 22:01:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36846#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36846#comment:1/1463349717929188</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>36846.patch attached to Ticket #36846</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sun, 15 May 2016 21:58:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36846/36846.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36846/36846.patch/1463349516913796</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36846 (Allow get_terms() to return slug&amp;name fields) created</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sun, 15 May 2016 21:58:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36846</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36846/1463349501190413</guid>
      <description>&lt;p&gt;
When we use the &lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/get_terms/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;get_terms()&lt;/a&gt; function, we can choose not to return the complete term objects but a smaller array with predefined fields (for performance).
&lt;/p&gt;
&lt;p&gt;
it's done using &lt;code&gt;fields&lt;/code&gt; argument:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$terms = get_terms( array(
	'taxonomy' =&amp;gt; 'post_tag',
	'fields'   =&amp;gt; 'all',
) );
&lt;/pre&gt;&lt;p&gt;
Currently, the &lt;code&gt;fields&lt;/code&gt; argument supports the following:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;all&lt;/code&gt; - returns an array of complete term objects. (DEFAULT)
&lt;/li&gt;&lt;li&gt;&lt;code&gt;ids&lt;/code&gt; - returns an array of ids.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;names&lt;/code&gt; - returns an array of term names.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;count&lt;/code&gt; - returns the number of matching terms.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;id=&amp;gt;parent&lt;/code&gt; - returns an associative array with ids as keys, parent term IDs as values.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;id=&amp;gt;name&lt;/code&gt; - returns an associative array with ids as keys, term names as values.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;id=&amp;gt;slug&lt;/code&gt; - returns an associative array with ids as keys, term slugs as values.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The problem is that in a growing number of websites I need to return only term-slugs and term-names.
&lt;/p&gt;
&lt;p&gt;
My patch adds another variation to the &lt;code&gt;fields&lt;/code&gt; argument:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;slug=&amp;gt;name&lt;/code&gt; - returns an associative array with term slugs as keys, term names as values.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #34893 (Improve Customizer setting validation model) updated</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Sun, 15 May 2016 21:01:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34893#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34893#comment:26/1463346083173617</guid>
      <description>&lt;p&gt;
@westonruter,
&lt;/p&gt;
&lt;p&gt;
Why is the notification area placed at the bottom of the control container when there is no &lt;code&gt;.customize-control-title&lt;/code&gt;, as opposed to the top?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36794 (Media Library and Add Media don't work in IE8) updated</title>
      
        <dc:creator>Kouin</dc:creator>

      <pubDate>Sun, 15 May 2016 20:01:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36794#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36794#comment:1/1463342460959964</guid>
      <description>&lt;p&gt;
I can confirm this happens in Microsoft Edge, IE 11, and Chrome running in a Windows 10 Environment.
&lt;/p&gt;
&lt;p&gt;
PHP Ver 5.6.14
Apache 2.0
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36217 (WP_Post_Type class) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sun, 15 May 2016 19:29:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36217#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36217#comment:21/1463340570994056</guid>
      <description>&lt;p&gt;
Organization looks good to me, @swissspidy. One small thing: now that we're not putting a &lt;code&gt;stdClass&lt;/code&gt; into the &lt;code&gt;$wp_post_types&lt;/code&gt; global, it's probably no longer necessary to do the &lt;code&gt;(object) array&lt;/code&gt; juggling when parsing props.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28997 (Adding additional classes to image captions via UI) updated</title>
      
        <dc:creator>jpswade</dc:creator>

      <pubDate>Sun, 15 May 2016 18:25:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28997#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28997#comment:4/1463336720081349</guid>
      <description>&lt;p&gt;
&lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28997#comment:2" title="Comment 2"&gt;joemcgill&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
For developers, sure, CSS adjacent selectors are fine.
&lt;/p&gt;
&lt;p&gt;
However, the end user, if they can add classes to the image and the link, then would expect to be able to add classes for the caption.
&lt;/p&gt;
&lt;p&gt;
Issue &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25295" title="#25295: enhancement: Adding additional classes to image captions (closed: fixed)"&gt;#25295&lt;/a&gt; adds the ability to pass a class to the shortcode, the problem we're trying to solve here is passing the class from the UI.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36526 (Not needed postmeta saved when restoring post revision) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 15 May 2016 16:33:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36526#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36526#comment:7/1463330008459852</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by swissspidy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1463330005004969"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36531 (Default image size medium_large is not generated) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sun, 15 May 2016 16:26:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36531#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36531#comment:10/1463329601950220</guid>
      <description>&lt;p&gt;
This looks good.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27555 (Make tag post meta box more accessible) updated</title>
      
        <dc:creator>cgrymala</dc:creator>

      <pubDate>Sun, 15 May 2016 16:23:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27555#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27555#comment:15/1463329426805910</guid>
      <description>&lt;p&gt;
Refreshed the 27555.2 patch so that it applies properly to the current source and attached it to this ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27555.diff attached to Ticket #27555</title>
      
        <dc:creator>cgrymala</dc:creator>

      <pubDate>Sun, 15 May 2016 16:22:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27555/27555.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27555/27555.diff/1463329339317244</guid>
      <description>&lt;p&gt;
Refresh of 27555.2
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35778 (Populate Website URL profile field for the 1st user after install) updated</title>
      
        <dc:creator>zachflauaus</dc:creator>

      <pubDate>Sun, 15 May 2016 15:58:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35778#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35778#comment:3/1463327894121398</guid>
      <description>&lt;p&gt;
I agree with it just being "localhost" or whatever the local name of the site is on site create. Like you said, when you run a script to change URLs like searchreplacedb2.php or the like, it should just change things automatically.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36844 (Restrict upload MIME types for Customizer image controls to image MIME ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 15 May 2016 15:47:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36844#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36844#comment:1/1463327238293057</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It looks like the Media Manager allows you to upload and select a file that is not among the allowed file types. I tried uploading an MP3 when selecting a background image, and after uploading the image didn't appear in the library but it was selected in the attachment details and I could submit it. Uploads of the incorrect file type shouldn't be selected by default once the upload finishes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28053 (Fields with same name added to new media modal using ...) updated</title>
      
        <dc:creator>drosendo</dc:creator>

      <pubDate>Sun, 15 May 2016 15:21:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28053#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28053#comment:10/1463325714374424</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
So here goes my core patch done on WordCamp Porto to help fix this problem.
&lt;/p&gt;
&lt;p&gt;
Attachment &lt;a href="https://core.trac.wordpress.org/attachment/ticket/28053/media-models.patch"&gt;https://core.trac.wordpress.org/attachment/ticket/28053/media-models.patch&lt;/a&gt;​ added
&lt;/p&gt;
&lt;p&gt;
Please do test it, feel free to contribute if needed.
&lt;/p&gt;
&lt;p&gt;
All the best,
David
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>media-models.patch attached to Ticket #28053</title>
      
        <dc:creator>drosendo</dc:creator>

      <pubDate>Sun, 15 May 2016 15:19:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28053/media-models.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28053/media-models.patch/1463325584525487</guid>
      <description>&lt;p&gt;
Allow multiple values in Media Attachment fields
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36217 (WP_Post_Type class) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 15 May 2016 15:08:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36217#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36217#comment:20/1463324900239291</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36217/36217.4.diff" title="Attachment '36217.4.diff' in Ticket #36217"&gt;36217.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36217/36217.4.diff" title="Download"&gt;​&lt;/a&gt; I re-iterated on the functionality based on the previous comments.
&lt;/p&gt;
&lt;p&gt;
I split everything up into little helper methods to make the code more readable.
&lt;/p&gt;
&lt;p&gt;
Instead of a &lt;code&gt;start()&lt;/code&gt; method I kept the method calls inside &lt;code&gt;(un)register_post_type()&lt;/code&gt; because some stuff needs to happen before &lt;code&gt;$wp_post_types[ $post_type ] = $post_type_object;&lt;/code&gt; and some after that line.
&lt;/p&gt;
&lt;p&gt;
Regarding the abstract class, I think we shouldn't do that just yet, for the same reasons as in &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/36492" title="#36492: enhancement: Add `WP_Post_Status` class (reviewing)"&gt;#36492&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36843 (Wrong Taxonomy Term orderby 'name' in Cyrillic) updated</title>
      
        <dc:creator>esemlabel</dc:creator>

      <pubDate>Sun, 15 May 2016 14:30:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36843#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36843#comment:1/1463322637442527</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>36217.4.diff attached to Ticket #36217</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 15 May 2016 14:09:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36217/36217.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36217/36217.4.diff/1463321399486220</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23422 (Add query filter argument to register_taxonomy) updated</title>
      
        <dc:creator>tifosi</dc:creator>

      <pubDate>Sun, 15 May 2016 14:08:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23422#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23422#comment:14/1463321326163628</guid>
      <description>&lt;p&gt;
@DrewAPicture Do you fully understand the concept of the ticket request?
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;show_admin_filter&lt;/code&gt; is meant to be a select/dropdown filter for an associated taxonomy's terms. As such if &lt;code&gt;show_admin_column&lt;/code&gt; isn't set as an argument for that taxonomy's register_taxonomy call then it's counterintuitive to display the filter if the taxonomy column isn't also displayed. That doesn't preclude though using it if you essentially want the select filter to replace the in-column drill down method so unlinking it may be an option.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;show_admin_filter&lt;/code&gt; isn't at all vague - it's semantically and functionally related to &lt;code&gt;show_admin_column&lt;/code&gt;, naming it &lt;code&gt;show_post_filter&lt;/code&gt; would imo cause confusion semantically linking it just to posts. It's "filtering" the taxonomy it's an argument to, for the post-type it's associated with.
&lt;/p&gt;
&lt;p&gt;
As the argument is tied to the taxonomy creation then if a taxonomy is associated with a post-type - either through the register_taxonomy() call or later with register_taxonomy_for_object_type then it would display for whichever post-type admin list ui the taxonomy is associated with, whether single or multiple.
&lt;/p&gt;
&lt;p&gt;
bikeshed away... I'll leave it with you.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36590 (POST['nav-menu-data'] breaks other POST values) updated</title>
      
        <dc:creator>neverything</dc:creator>

      <pubDate>Sun, 15 May 2016 13:17:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36590#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36590#comment:44/1463318228286148</guid>
      <description>&lt;p&gt;
Refreshed the patch &lt;a href="https://core.trac.wordpress.org/attachment/ticket/36590/36590-trunk.3.diff"&gt;https://core.trac.wordpress.org/attachment/ticket/36590/36590-trunk.3.diff&lt;/a&gt; again, accidentally had some code for another ticket in it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36590-trunk.3.diff attached to Ticket #36590</title>
      
        <dc:creator>neverything</dc:creator>

      <pubDate>Sun, 15 May 2016 13:14:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36590/36590-trunk.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36590/36590-trunk.3.diff/1463318042416425</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36845 (Bump $wp_version to the latest revision number) created</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Sun, 15 May 2016 12:57:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36845</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36845/1463317078812912</guid>
      <description>&lt;p&gt;
Could someone bump &lt;code&gt;$wp_version&lt;/code&gt; to the latest revision number?
&lt;/p&gt;
&lt;p&gt;
It's currently at &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37183" title="Trunk is now 4.6-alpha."&gt;r37183&lt;/a&gt; from 5 weeks ago.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36844 (Restrict upload MIME types for Customizer image controls to image MIME ...) created</title>
      
        <dc:creator>neverything</dc:creator>

      <pubDate>Sun, 15 May 2016 12:26:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36844</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36844/1463315164641291</guid>
      <description>&lt;p&gt;
When using the Theme Customizer to upload an image in a image control, it doesn't restrict the file types that can be uploaded. For example, I can upload a video file or a pdf file, the file will be uploaded and inserted into the Media Library, then the Customizer will try to treat it like an image.
&lt;/p&gt;
&lt;p&gt;
I think the best way around this would be to restrict uploads in the Customizer to images only.
&lt;/p&gt;
&lt;p&gt;
There was a fix before Customizer controls in 3.5, ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22149" title="#22149: defect (bug): Customizer Uploader doesn't restrict by file type (closed: fixed)"&gt;#22149&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/4FuRQSKxtf.png"&gt;&lt;img src="https://cldup.com/4FuRQSKxtf.png" alt="https://cldup.com/4FuRQSKxtf.png" crossorigin="anonymous" title="https://cldup.com/4FuRQSKxtf.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #13651 (Problem with plural form in comments_number) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 15 May 2016 12:02:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13651#comment:63</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13651#comment:63/1463313746835040</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36590 (POST['nav-menu-data'] breaks other POST values) updated</title>
      
        <dc:creator>neverything</dc:creator>

      <pubDate>Sun, 15 May 2016 12:00:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36590#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36590#comment:43/1463313617806596</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Refreshed the patches for 4.5.3.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36590-4.5.3.diff attached to Ticket #36590</title>
      
        <dc:creator>neverything</dc:creator>

      <pubDate>Sun, 15 May 2016 11:59:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36590/36590-4.5.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36590/36590-4.5.3.diff/1463313562453023</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36590 (POST['nav-menu-data'] breaks other POST values) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 15 May 2016 11:51:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36590#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36590#comment:42/1463313083784413</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>36590-trunk.2.diff attached to Ticket #36590</title>
      
        <dc:creator>neverything</dc:creator>

      <pubDate>Sun, 15 May 2016 11:51:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36590/36590-trunk.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36590/36590-trunk.2.diff/1463313081122662</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36843 (Wrong Taxonomy Term orderby 'name' in Cyrillic) created</title>
      
        <dc:creator>esemlabel</dc:creator>

      <pubDate>Sun, 15 May 2016 11:47:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36843</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36843/1463312867057976</guid>
      <description>&lt;p&gt;
There is bug in taxonomy terms sorting by name in both cases - in wp-admin and in front-end, if using term names in Cyrillic (Ukrainian). Maybe problem not only in taxonomy terms sorting and not only in Ukrainian (uk) language, but may also exist in other Cyrillic languages.
&lt;/p&gt;
&lt;p&gt;
The term names that starts with one of these three letters (Іі), (Її) or (Єє) are always at the begining of the list, instead of its actual alphabetic position. And the names that starts with letter (Ґґ) are always at the end of the list.
&lt;/p&gt;
&lt;p&gt;
Here is correct Ukrainian (uk) alphabetic order.
&lt;/p&gt;
&lt;pre class="wiki"&gt;Аа, Бб, Вв, Гг, Ґґ, Дд, Ее, Єє, Жж, Зз, Ии, Іі, Її, Йй, Кк, Лл, Мм, Нн, Оо, Пп, Рр, Сс, Тт, Уу, Фф, Хх, Цц, Чч, Шш, Щщ, Ьь, Юю, Яя.
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36749 (Customizer wont load: issue with site-icon control) updated</title>
      
        <dc:creator>neverything</dc:creator>

      <pubDate>Sun, 15 May 2016 11:32:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36749#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36749#comment:6/1463311954811820</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Added patches for both variations.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36749.2.diff attached to Ticket #36749</title>
      
        <dc:creator>neverything</dc:creator>

      <pubDate>Sun, 15 May 2016 11:31:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36749/36749.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36749/36749.2.diff/1463311885035870</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>36749.diff attached to Ticket #36749</title>
      
        <dc:creator>neverything</dc:creator>

      <pubDate>Sun, 15 May 2016 11:29:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36749/36749.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36749/36749.diff/1463311768742026</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36239 (wp-embed image size is using the smallest image or it sometimes uses ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 15 May 2016 11:20:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36239#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36239#comment:4/1463311211086363</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34893 (Improve Customizer setting validation model) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 15 May 2016 08:07:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34893#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34893#comment:25/1463299673795075</guid>
      <description>&lt;p&gt;
I’ve updated the sample extension plugin (Customize Validate Entitled Settings) to make use of this patch: &lt;a class="ext-link" href="https://gist.github.com/westonruter/1016332b18ee7946dec3"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gist.github.com/westonruter/1016332b18ee7946dec3&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35210 (Add notification area to Customizer) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 15 May 2016 07:58:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35210#comment:62</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35210#comment:62/1463299126632329</guid>
      <description>&lt;p&gt;
See the &lt;code&gt;wp.customize.Notification&lt;/code&gt; object as I've proposed in a patch at &lt;a href="https://core.trac.wordpress.org/ticket/34893#comment:24"&gt;https://core.trac.wordpress.org/ticket/34893#comment:24&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34893 (Improve Customizer setting validation model) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 15 May 2016 07:54:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34893#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34893#comment:24/1463298840370586</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Please see &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34893/34893.2.diff" title="Attachment '34893.2.diff' in Ticket #34893"&gt;34893.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34893/34893.2.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Introduces &lt;code&gt;wp.customize.Notification&lt;/code&gt; which can represent &lt;code&gt;WP_Error&lt;/code&gt; instances returned from the server.
&lt;/li&gt;&lt;li&gt;Introduces &lt;code&gt;wp.customize.Control.prototype.notifications&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Introduces &lt;code&gt;wp.customize.Setting.prototype.notifications&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Injects a notification area into existing controls which is populated in response to the control's &lt;code&gt;notifications&lt;/code&gt; collection changing, where this collection is synced with the &lt;code&gt;notifications&lt;/code&gt; collections for each of its settings.
&lt;/li&gt;&lt;li&gt;Attempting to save settings that are invalid will result in the save being blocked entirely, with the errors being sent in the &lt;code&gt;customize_save_response&lt;/code&gt; for the controls to display notifications for, and the first such invalid control will be focused.
&lt;/li&gt;&lt;li&gt;Introduces &lt;code&gt;wp.customize.settingConstructor&lt;/code&gt;, allowing custom setting types to be used in the same way that custom controls, panels, and sections can be made.
&lt;/li&gt;&lt;li&gt;Introduces &lt;code&gt;WP_Customize_Setting::validate()&lt;/code&gt;, &lt;code&gt;WP_Customize_Setting::$validate_callback&lt;/code&gt;, and the &lt;code&gt;customize_validate_{$setting_id}&lt;/code&gt; filter.
&lt;/li&gt;&lt;li&gt;Modifies &lt;code&gt;WP_Customize_Manager::save()&lt;/code&gt; to check all settings for validity issues prior to calling their &lt;code&gt;save&lt;/code&gt; methods.
&lt;/li&gt;&lt;li&gt;Introduces &lt;code&gt;WP_Customize_Setting::json()&lt;/code&gt; for parity with the other Customizer classes. This includes exporting of the &lt;code&gt;type&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Needs more unit tests.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>34893.2.diff attached to Ticket #34893</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 15 May 2016 07:50:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34893/34893.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34893/34893.2.diff/1463298633724122</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32683 (Custom Menu widget should include a shortcut to load selected menu ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 15 May 2016 01:46:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32683#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32683#comment:11/1463276781702969</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/32683/32683.3.diff" title="Attachment '32683.3.diff' in Ticket #32683"&gt;32683.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/32683/32683.3.diff" title="Download"&gt;​&lt;/a&gt; looks good to me!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36711 (Add caching to get_page_by_path) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Sun, 15 May 2016 01:39:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36711#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36711#comment:6/1463276341984533</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
36711.4 patch, is another way of doing caching for this function. It is better as it isn't invalidated every time the post cache is cleaned. The code isn't as clean through.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36711.4.patch attached to Ticket #36711</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Sun, 15 May 2016 01:36:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36711/36711.4.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36711/36711.4.patch/1463276214878587</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36842 (More global event hooks using the media.events, like "modal:open", ...) updated</title>
      
        <dc:creator>jtsternberg</dc:creator>

      <pubDate>Sun, 15 May 2016 00:34:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36842#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36842#comment:1/1463272445860164</guid>
      <description>&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/ticket/27698"&gt;https://core.trac.wordpress.org/ticket/27698&lt;/a&gt; Is similar, and introduced &lt;code&gt;wp.media.events&lt;/code&gt; which, I assume, is what we would use to create this API.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36842 (More global event hooks using the media.events, like "modal:open", ...) created</title>
      
        <dc:creator>jtsternberg</dc:creator>

      <pubDate>Sun, 15 May 2016 00:30:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36842</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36842/1463272204513136</guid>
      <description>&lt;p&gt;
There seem to be plentiful hooks in the media backbone system, but most require listening to the frame/controller/etc vs having global hooks/events to listen to. This, obviously, would be much like WP's &lt;code&gt;do_action&lt;/code&gt;. Each event should pass contextual info including the frame/controller/etc object.
&lt;/p&gt;
&lt;p&gt;
Select2 (as well as most JS modal libs) provides an example of prior art: &lt;a class="ext-link" href="https://select2.github.io/examples.html#events"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://select2.github.io/examples.html#events&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Using that implementation as an example, we could do something like:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp:media:open&lt;/code&gt; is fired whenever the modal is opened. &lt;code&gt;wp:media:opening&lt;/code&gt; is fired before this and can be prevented.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp:media:close&lt;/code&gt; is fired whenever the modal is closed. &lt;code&gt;wp:media:closing&lt;/code&gt; is fired before this and can be prevented.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp:media:highlight&lt;/code&gt; is fired whenever a result is highlighted (clicked).
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp:media:unhighlight&lt;/code&gt; is fired whenever a result is unhighlighted.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp:media:select&lt;/code&gt; is fired when a result is chosen and modal is closed. &lt;code&gt;wp:media:selecting&lt;/code&gt; is fired before this and can be prevented.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp:media:change&lt;/code&gt; is fired whenever the modal changes state. &lt;code&gt;wp:media:changing&lt;/code&gt; is fired before this and can be prevented.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item>
   </channel>
</rss>