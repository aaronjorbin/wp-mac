<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #39997 (Bundled Themes: Pass theme version number to wp_enqueue_style()) created</title>
      
        <dc:creator>parsmizban</dc:creator>

      <pubDate>Tue, 28 Feb 2017 23:32:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39997</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39997/1488324762177689</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
I think there is a bug when WordPress loads style.css file of child theme using version of parent theme, It should load style of child theme using child version,
&lt;/p&gt;
&lt;p&gt;
Example:
&lt;/p&gt;
&lt;p&gt;
Parent version: 4.7.2
Child version: 1.0.0
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;link rel='stylesheet' id='parent-style-css'  href='http://localhost/wordpress/wp-content/themes/twentyfifteen/style.css?ver=4.7.2' type='text/css' media='all' /&amp;gt;
&amp;lt;link rel='stylesheet' id='twentyfifteen-style-css'  href='http://localhost/wordpress/wp-content/themes/child-theme/style.css?ver=4.7.2' type='text/css' media='all' /&amp;gt;
&lt;/pre&gt;&lt;p&gt;
It should be :
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;link rel='stylesheet' id='parent-style-css'  href='http://localhost/wordpress/wp-content/themes/twentyfifteen/style.css?ver=4.7.2' type='text/css' media='all' /&amp;gt;
&amp;lt;link rel='stylesheet' id='twentyfifteen-style-css'  href='http://localhost/wordpress/wp-content/themes/child-theme/style.css?ver=1.0.0' type='text/css' media='all' /&amp;gt;
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39989 (Media library errors appear BELOW autoloading/autoscroll images) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 28 Feb 2017 23:24:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39989#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39989#comment:2/1488324248656288</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39995 (Introduce Core Widget: Audio) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Tue, 28 Feb 2017 23:20:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39995#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39995#comment:3/1488324009490049</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39995#comment:2" title="Comment 2"&gt;joyously&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is this only for locally hosted audio, or would it handle a URL?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ideally, it would handle both a locally hosted audio file and a URL. I think we should work on splitting it out of @gonom9's patch into a standalone widget, and then evaluate whether it makes sense to handle a URL in v1 or wait for a v2.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39996 (Allow passing existing template value for posts, even when template ...) created</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Tue, 28 Feb 2017 23:19:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39996</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39996/1488323958268113</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40120" title="REST API: Allow setting post formats even if they are not supported by ..."&gt;r40120&lt;/a&gt;, it became possible for a client to set &lt;code&gt;format=&amp;gt;aside&lt;/code&gt; on a post, even when when the theme doesn't support &lt;code&gt;aside&lt;/code&gt; as a post format.
&lt;/p&gt;
&lt;p&gt;
Under this same logic, it should be possible for a client to set &lt;code&gt;template=&amp;gt;my-file.php&lt;/code&gt;, even when &lt;code&gt;my-file.php&lt;/code&gt; isn't a file in the theme.
&lt;/p&gt;
&lt;p&gt;
The current behavior is that it's not possible for a client to set &lt;code&gt;template&lt;/code&gt; to an arbitrary file name (values are validated against an enum).
&lt;/p&gt;
&lt;p&gt;
Related &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39232" title="#39232: defect (bug): REST API: Can't set existing post format if theme does not support it (2) (closed: fixed)"&gt;#39232&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 28 Feb 2017 23:08:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:138</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:138/1488323306888000</guid>
      <description>&lt;p&gt;
@gonom9 I've cloned your gist into its own dedicated GitHub repo for the plugin: &lt;a class="ext-link" href="https://github.com/xwp/wp-core-media-widgets"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wp-core-media-widgets&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
So moving forward let's focus on this feature plugin for collaborating on changes. If you would please sync the code from &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/215"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the PR&lt;/a&gt; into the plugin one last time and push the changes up to the new GitHub repo, if you haven't done so already.
&lt;/p&gt;
&lt;p&gt;
I'll hook up Travis CI on the plugin repo and get the automated tests in place. We can get it on WordPress.org as well to facilitate user testing. We can split up the existing media widget into three separate widgets—for images, video, and audio—but focusing on image first. Once a widget has been thoroughly tested by users we can then copy it into core for a release while then also disabling the widget in the plugin. In this way we can use the repo for collaborating on development and as a testbed for users.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39995 (Introduce Core Widget: Audio) updated</title>
      
        <dc:creator>joyously</dc:creator>

      <pubDate>Tue, 28 Feb 2017 22:47:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39995#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39995#comment:2/1488322076149466</guid>
      <description>&lt;p&gt;
Is this only for locally hosted audio, or would it handle a URL?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39995 (Introduce Core Widget: Audio) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Tue, 28 Feb 2017 22:42:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39995#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39995#comment:1/1488321767069901</guid>
      <description>&lt;p&gt;
Keep an eye on &lt;a class="ext-link" href="https://github.com/xwp/wp-core-media-widgets"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wp-core-media-widgets&lt;/a&gt; for development.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39994 (Introduce Core Widget: Video) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Tue, 28 Feb 2017 22:42:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39994#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39994#comment:2/1488321763427875</guid>
      <description>&lt;p&gt;
Keep an eye on &lt;a class="ext-link" href="https://github.com/xwp/wp-core-media-widgets"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wp-core-media-widgets&lt;/a&gt; for development.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39993 (Introduce Core Widget: Image) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Tue, 28 Feb 2017 22:42:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39993#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39993#comment:2/1488321759076966</guid>
      <description>&lt;p&gt;
Keep an eye on &lt;a class="ext-link" href="https://github.com/xwp/wp-core-media-widgets"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wp-core-media-widgets&lt;/a&gt; for development.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39983 (Consider to stop using the CSS class button-link for controls that ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 28 Feb 2017 22:38:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39983#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39983#comment:2/1488321502549987</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39983/39983.2.diff" title="Attachment '39983.2.diff' in Ticket #39983"&gt;39983.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39983/39983.2.diff" title="Download"&gt;​&lt;/a&gt; adds a few adjustments for the button text alignment in the Customizer and in the auth-check modal.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39983.2.diff attached to Ticket #39983</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 28 Feb 2017 22:37:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39983/39983.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39983/39983.2.diff/1488321435213045</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Tue, 28 Feb 2017 22:27:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:137</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:137/1488320876799143</guid>
      <description>&lt;p&gt;
New tickets:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Image &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39993" title="#39993: enhancement: Introduce Core Widget: Image (closed: fixed)"&gt;#39993&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Video &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39994" title="#39994: enhancement: Introduce Core Widget: Video (closed: fixed)"&gt;#39994&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Audio &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39995" title="#39995: enhancement: Introduce Core Widget: Audio (closed: fixed)"&gt;#39995&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39995 (Introduce Core Widget: Audio) created</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Tue, 28 Feb 2017 22:26:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39995</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39995/1488320811388399</guid>
      <description>&lt;p&gt;
This ticket introduces a new core widget for displaying audio.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32417#comment:136" title="#32417: feature request: Add new core media widget (closed: fixed)"&gt;32417#comment:136&lt;/a&gt; for history.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39993 (Introduce Core Widget: Image) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Tue, 28 Feb 2017 22:26:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39993#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39993#comment:1/1488320797832246</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39994 (Introduce Core Widget: Video) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Tue, 28 Feb 2017 22:26:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39994#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39994#comment:1/1488320791001721</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39994 (Introduce Core Widget: Video) created</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Tue, 28 Feb 2017 22:25:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39994</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39994/1488320756132397</guid>
      <description>&lt;p&gt;
This ticket introduces a new core widget for displaying videos.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32417#comment:136" title="#32417: feature request: Add new core media widget (closed: fixed)"&gt;32417#comment:136&lt;/a&gt; for history.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39993 (Introduce Core Widget: Image) created</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Tue, 28 Feb 2017 22:25:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39993</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39993/1488320723785916</guid>
      <description>&lt;p&gt;
This ticket introduces a new core widget for displaying images.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32417#comment:136" title="#32417: feature request: Add new core media widget (closed: fixed)"&gt;32417#comment:136&lt;/a&gt; for history.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Tue, 28 Feb 2017 22:22:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:136</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:136/1488320575972414</guid>
      <description>&lt;p&gt;
@westonruter:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote&gt;
&lt;p&gt;
With that in mind, what if the widget re-used the modals for editing display properties for media which is invoked via a secondary “Edit Media” (or some other label) button:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'd swap the buttons so edit is on the left and change is on the right, but this is the direction I think we should go in. 👍 It provides, IMO, a much more streamlined experience, and doesn't duplicate settings outside of where they normally appear in the modal.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Outside of this ticket, Weston and I have also been chatting with @matt about the direction we should take this widget. We've decided that to be more future-forward, we're going to split the media widget out into separate, focused widgets:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Image widget
&lt;/li&gt;&lt;li&gt;Video widget
&lt;/li&gt;&lt;li&gt;Audio widget
&lt;/li&gt;&lt;li&gt;...and if we can create these before content blocks launch, new widgets for things like slideshows, playlists, galleries, etc.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This provides a couple longterm benefits:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;We can focus on create more tailored experiences for each widget
&lt;/li&gt;&lt;li&gt;We'll be able to launch new widgets without having to worry about constantly updating one central widget, or potentially breaking anything
&lt;/li&gt;&lt;li&gt;It'll be easier for people to discover new media types since they won't be buried within one widget
&lt;/li&gt;&lt;li&gt;This will more closely mimic the approach we're taking to content blocks in the future, which should provide an easier transition
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
We're going to split this ticket out into three new tickets to cover the initial three widget types (image, video, audio), and then we might close this big ticket or keep it open for overall discussion about media widgets. Still thinking that through, so if you see a benefit to one or the other, please chime in. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>action-retrieve-password-fixed.patch attached to Ticket #39985</title>
      
        <dc:creator>swapgs</dc:creator>

      <pubDate>Tue, 28 Feb 2017 21:33:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39985/action-retrieve-password-fixed.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39985/action-retrieve-password-fixed.patch/1488317602603001</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39985 (Do action before send email of retrieve password) updated</title>
      
        <dc:creator>swapgs</dc:creator>

      <pubDate>Tue, 28 Feb 2017 21:33:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39985#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39985#comment:1/1488317586265474</guid>
      <description>&lt;p&gt;
Aloha @bonus369! It seems that you did the diff the wrong way, since you are trying to remove the lines you intended to add. I generated &lt;a class="ext-link" href="https://patch-diff.githubusercontent.com/raw/WordPress/WordPress/pull/275.patch"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the right one using Github&lt;/a&gt; and attached it to this ticket :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39983 (Consider to stop using the CSS class button-link for controls that ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 28 Feb 2017 21:20:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39983#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39983#comment:1/1488316837970848</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39983/39983.diff" title="Attachment '39983.diff' in Ticket #39983"&gt;39983.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39983/39983.diff" title="Download"&gt;​&lt;/a&gt; removes the &lt;code&gt;button-link&lt;/code&gt; CSS class from the media modal close button and adjusts the styles accordingly. Pending investigation about other edge cases.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39983.diff attached to Ticket #39983</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 28 Feb 2017 21:19:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39983/39983.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39983/39983.diff/1488316744485734</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39992 (Bug in get_the_content) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 28 Feb 2017 21:09:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39992#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39992#comment:1/1488316194774044</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39992 (Bug in get_the_content) created</title>
      
        <dc:creator>olik9</dc:creator>

      <pubDate>Tue, 28 Feb 2017 21:01:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39992</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39992/1488315675888349</guid>
      <description>&lt;p&gt;
In get_the_content $post is not checked if it's null, after
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_post&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
and then on line:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nb"&gt;strpos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;post_content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;!--noteaser--&amp;gt;'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nv"&gt;$multipage&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nv"&gt;$page&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
as you see, $post-&amp;gt;post_content is queried. Then if $post is null, the program falls.
&lt;/p&gt;
&lt;p&gt;
A solution can be to check:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_post&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;//else
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
and then continue.
&lt;/p&gt;
&lt;p&gt;
Thank you for everything! :)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 28 Feb 2017 20:22:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:135</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:135/1488313331804387</guid>
      <description>&lt;p&gt;
@melchoyce, @westonruter, you are aware that when we add HTML support to the Text widget &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35243" title="#35243: enhancement: Extending the text widget to also allow visual mode (closed: fixed)"&gt;#35243&lt;/a&gt;, it will make this widget pretty much redundant as everybody will be able to add an image there. Even if the UI in the Text widget it cut down to only supporting a handful of HTML tags, it still will be more useful as the users will be able to paste any HTML they want in there.
&lt;/p&gt;
&lt;p&gt;
I'm not sure it will be a good UX to have two widget that do the exact same thing and have different UI.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39981 (Multisite Domain Mapping doesn't work or not activated at all) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 28 Feb 2017 20:13:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39981#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39981#comment:2/1488312799163287</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35243 (Extending the text widget to also allow visual mode) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 28 Feb 2017 20:11:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35243#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35243#comment:36/1488312672029059</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'd suggest focusing on inline formatting (links, bold, italic, etc.) initially and leaving out media
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I was with the impression that we want a "universal" widget that will support the same content as the post editor. I really like the mockup which has the "Add Media" button suggesting you will be able to add images, videos, embeds, galleries, etc.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://core.trac.wordpress.org/attachment/ticket/35243/text-widget.png"&gt;&lt;img src="http://core.trac.wordpress.org/raw-attachment/ticket/35243/text-widget.png" crossorigin="anonymous" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I don't see any disadvantages for having an "universal" widget. The advantages are:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The users will be familiar with how to use it from the start as the workflow will be identical to editing a post.
&lt;/li&gt;&lt;li&gt;We will avoid adding 5-6 different widgets for different content and with different controls, restrictions and workflows.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
If we go with a cut-down, inline tags only widget the disadvantages will be:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;It will be very inferior to what's available in plugins. Not really sure why we would want to add that to core given the opportunity for something much better.
&lt;/li&gt;&lt;li&gt;We will (eventually) have to add many different widgets for the different content: video, audio, galleries, embeds, etc.
&lt;/li&gt;&lt;li&gt;As it would support HTML, some users will eventually learn to paste the media types we excluded. For example it will be very easy to compose the content in the post editor then copy and paste the HTML. Forcing the users to do that by not providing sufficient UI would be a failure imho.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Also, regardless of whether we add media support or not, adding HTML support to the text widget makes the "Media Widget" &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32417" title="#32417: feature request: Add new core media widget (closed: fixed)"&gt;#32417&lt;/a&gt; completely redundant. I mean, there will be two widgets that will do exactly the same thing but have different UI (either the Media Library, copy/paste HTML, or yet another new UI in the media widget). That's not going to be good UX.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39991 (jQuery UI Datepicker Localization Error with PHP date 'S') created</title>
      
        <dc:creator>devonto</dc:creator>

      <pubDate>Tue, 28 Feb 2017 20:03:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39991</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39991/1488312217534733</guid>
      <description>&lt;p&gt;
When localising the datepicker, the UK default WordPress date format is not converted correctly to jQuery UI's format.
&lt;/p&gt;
&lt;p&gt;
The default PHP format for the UK is &lt;code&gt;jS F Y&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
The script-loader.php function &lt;code&gt;wp_localize_jquery_ui_datepicker()&lt;/code&gt; converts this to &lt;code&gt;dS MM YY&lt;/code&gt;, however the &lt;code&gt;S&lt;/code&gt; is invalid and an ordinal suffix cannot be created with the datepicker.
&lt;/p&gt;
&lt;p&gt;
There is no easy solution to add in the ordinal suffix, but a better solution than printing the stray &lt;code&gt;S&lt;/code&gt; is to strip this out by modifying the &lt;code&gt;str_replace()&lt;/code&gt; function call to do so.
&lt;/p&gt;
&lt;pre class="wiki"&gt;	// Convert the PHP date format into jQuery UI's format.
	$datepicker_date_format = str_replace(
		array(
			'd', 'j', 'l', 'z', // Day.
			'F', 'M', 'n', 'm', // Month.
			'Y', 'y',           // Year.
			'S'		    // Invalid
		),
		array(
			'dd', 'd', 'DD', 'o',
			'MM', 'M', 'm', 'mm',
			'yy', 'y',
			''
		),
		get_option( 'date_format' )
	);
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39893 (Header Media: YouTube Embed Does Not Fill Screen) updated</title>
      
        <dc:creator>bradyvercher</dc:creator>

      <pubDate>Tue, 28 Feb 2017 19:55:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39893#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39893#comment:2/1488311733986379</guid>
      <description>&lt;p&gt;
I've looked into this a bit and there isn't really a great solution. The iframe that contains the video is automatically stretched to fill the screen, but YouTube has a resize handler that adjusts the dimensions of the video so that it always fits the screen rather than fill the iframe as desired.
&lt;/p&gt;
&lt;p&gt;
I did go ahead and &lt;a class="ext-link" href="https://github.com/bradyvercher/custom-header-youtube"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;put together a quick plugin&lt;/a&gt; that attempts to counteract YouTube's behavior by resizing the iframe to ensure the video always fills the container. I haven't done much testing with Twenty Seventeen and it only works with widescreen videos at the moment, but otherwise it should be pretty solid.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>kjhkj.PNG attached to Ticket #39990</title>
      
        <dc:creator>saeed205</dc:creator>

      <pubDate>Tue, 28 Feb 2017 19:22:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39990/kjhkj.PNG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39990/kjhkj.PNG/1488309720705132</guid>
      <description>&lt;p&gt;
Library media files RTL
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39990 (Bug Library media files in RTL (Farsi)) created</title>
      
        <dc:creator>saeed205</dc:creator>

      <pubDate>Tue, 28 Feb 2017 19:21:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39990</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39990/1488309673946592</guid>
      <description>&lt;p&gt;
Hello
Library media files in RTL version of the form is displayed.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://up.persianscript.ir/uploadsmedia/9666-kjhkj.png"&gt;&lt;img src="http://up.persianscript.ir/uploadsmedia/9666-kjhkj.png" alt="http://up.persianscript.ir/uploadsmedia/9666-kjhkj.png" crossorigin="anonymous" title="http://up.persianscript.ir/uploadsmedia/9666-kjhkj.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36613 (Browser back button doesn't work in Theme Browser) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Tue, 28 Feb 2017 18:41:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36613#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36613#comment:9/1488307295225191</guid>
      <description>&lt;p&gt;
@afercia thanks for catching this, I'll take a look.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39963 (MIME Alias Handling) updated</title>
      
        <dc:creator>blobfolio</dc:creator>

      <pubDate>Tue, 28 Feb 2017 18:31:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39963#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39963#comment:1/1488306673659604</guid>
      <description>&lt;p&gt;
To get the ball rolling, here's an example of what I was thinking: &lt;a class="ext-link" href="https://github.com/Blobfolio/blob-mimes/blob/master/build/WordPress/media-mimes.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/Blobfolio/blob-mimes/blob/master/build/WordPress/media-mimes.php&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This script includes all the necessary data, and two functions.
&lt;/p&gt;
&lt;p&gt;
First, a function to return all known MIME types for a given file extension:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="sd"&gt;/**
 * Return MIME aliases for a particular file extension.
 *
 * @since xxx
 *
 * @see {https://www.iana.org/assignments/media-types}
 * @see {https://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types}
 * @see {http://hg.nginx.org/nginx/raw-file/default/conf/mime.types}
 * @see {https://cgit.freedesktop.org/xdg/shared-mime-info/plain/freedesktop.org.xml.in}
 * @see {https://github.com/Blobfolio/blob-mimes}
 *
 * @param string $ext File extension.
 * @return array|bool MIME types. False on failure.
 */&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;wp_get_mime_aliases&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$ext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
And second, a function to check whether an arbitrary file extension/MIME pairing is valid. This also automatically checks for both &lt;code&gt;type/subtype&lt;/code&gt; and &lt;code&gt;type/x-subtype&lt;/code&gt; variants, the &lt;code&gt;x-&lt;/code&gt; prefix being something commonly used during a file type's transformative years, but possibly missing from any official database.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="sd"&gt;/**
 * Check extension and MIME pairing.
 *
 * @since xxx
 *
 * @param string $ext File extension.
 * @param string $mime MIME type.
 * @return bool True/false.
 */&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;wp_check_mime_alias&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$ext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$mime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
This second function could be added to places like &lt;code&gt;wp_check_filetype_and_ext&lt;/code&gt; where MIME data is pulled from somewhere variable (e.g. &lt;code&gt;finfo&lt;/code&gt;). Rather than comparing &lt;code&gt;$real_mime&lt;/code&gt; to the results of &lt;code&gt;wp_check_filetype()&lt;/code&gt;, we can evaluate with &lt;code&gt;wp_check_mime_alias( $type, $real_mime )&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39854 (REST API: Add gmt_offset to base /wp-json response) updated</title>
      
        <dc:creator>sagarkbhatt</dc:creator>

      <pubDate>Tue, 28 Feb 2017 18:18:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39854#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39854#comment:12/1488305922251160</guid>
      <description>&lt;p&gt;
Added unit test
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34693 (Add browser-based testing and automated acceptance tests (BrowserStack)) updated</title>
      
        <dc:creator>Bsport</dc:creator>

      <pubDate>Tue, 28 Feb 2017 18:12:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34693#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34693#comment:13/1488305521313941</guid>
      <description>&lt;p&gt;
So I've been using Behat\WordHat lately on a project within customizer and its proved pretty plainless, Now I choose Behat\WordHat route because of the Gherkin, non-developers can write tests and understands whats meant to happen. My second deciding factor was, I wanted a more widly understood BDD testing framework and using both google trends and slideshare search result counts for &lt;code&gt;behat&lt;/code&gt; and &lt;code&gt;codeception&lt;/code&gt;, behat won both these, slide share by a large margin. These 2 points were then wrapped with the fact it took me all of about 2 minutes to write an acceptence test for the quick draft widget using WordHat + its out of the box wpcli support.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39944 (Site wp_X_user_roles option not updated when network settings change) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 28 Feb 2017 17:15:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39944#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39944#comment:7/1488302151638958</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Checked this and the setting does affect the &lt;code&gt;create_users&lt;/code&gt; cap but not &lt;code&gt;list_users&lt;/code&gt;, as expected.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34545 ('parent_item' taxonomy label should be used in tag edit form) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 28 Feb 2017 17:08:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34545#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34545#comment:2/1488301705227344</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/34545#comment:1" title="Comment 1"&gt;dlh&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I would also note that when a taxonomy doesn't define the &lt;code&gt;parent_item&lt;/code&gt; label, the default is used, which is currently &lt;code&gt;Parent Category&lt;/code&gt;, and which might not be a good fit either.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
All the labels fall back to their &lt;code&gt;Category&lt;/code&gt;/&lt;code&gt;Tag&lt;/code&gt; version, so this is fine as-is.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #39516,​39989 batch updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Tue, 28 Feb 2017 17:06:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=39516%2C39989</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=39516%2C39989/1488301594201385</guid>
      <description>duplicate: &lt;p&gt;
Hi @rjksn,
&lt;/p&gt;
&lt;p&gt;
Thanks for the report and welcome to Trac. We've been tracking this issue in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39516" title="#39516: defect (bug): Media grid upload errors display below the grid. (closed: fixed)"&gt;#39516&lt;/a&gt;, which has been fixed for 4.7.3.
&lt;/p&gt;
&lt;p&gt;
Best,
Joe
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #37923 (Introduce shared wp_blogmeta database table for multisite installation) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 28 Feb 2017 17:05:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37923#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37923#comment:17/1488301517785506</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1488301515804406"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>wordpress-media-issue.jpg attached to Ticket #39989</title>
      
        <dc:creator>rjksn</dc:creator>

      <pubDate>Tue, 28 Feb 2017 16:54:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39989/wordpress-media-issue.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39989/wordpress-media-issue.jpg/1488300877657950</guid>
      <description>&lt;p&gt;
Screenshot of a long attempt to find IF there WAS an error.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39989 (Media library errors appear BELOW autoloading/autoscroll images) created</title>
      
        <dc:creator>rjksn</dc:creator>

      <pubDate>Tue, 28 Feb 2017 16:53:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39989</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39989/1488300801771779</guid>
      <description>&lt;p&gt;
For users trying to upload images, it can be difficult to see why their images weren't uploaded when the error message is always &lt;em&gt;below all the images they have&lt;/em&gt; due to the autoloading autoscrolling of the media page. We've all had it hammered into our heads to not do this as a general UI guideline.
&lt;/p&gt;
&lt;p&gt;
Note: this is not regarding the vague error messages.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #31550 (Use an empty theme for WP_DEFAULT_THEME during unit tests) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 28 Feb 2017 16:40:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31550#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31550#comment:13/1488300035145552</guid>
      <description>&lt;p&gt;
Follow-up: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39988" title="#39988: defect (bug): The theme used during tests should call wp_head() and wp_footer() (closed: fixed)"&gt;#39988&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39988 (The theme used during tests should call wp_head() and wp_footer()) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 28 Feb 2017 16:39:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39988#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39988#comment:1/1488299967177034</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>39988.diff attached to Ticket #39988</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 28 Feb 2017 16:39:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39988/39988.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39988/39988.diff/1488299952836447</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39988 (The theme used during tests should call wp_head() and wp_footer()) created</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 28 Feb 2017 16:37:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39988</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39988/1488299848873350</guid>
      <description>&lt;p&gt;
The &lt;code&gt;wp_head()&lt;/code&gt; and &lt;code&gt;wp_footer()&lt;/code&gt; functions are required for all themes, and it's safe to assume that all themes call these. The &lt;code&gt;themedir1/default&lt;/code&gt; theme used in the tests (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31550" title="#31550: defect (bug): Use an empty theme for WP_DEFAULT_THEME during unit tests (closed: fixed)"&gt;#31550&lt;/a&gt;) doesn't.
&lt;/p&gt;
&lt;p&gt;
The effect that &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31550" title="#31550: defect (bug): Use an empty theme for WP_DEFAULT_THEME during unit tests (closed: fixed)"&gt;#31550&lt;/a&gt; had was that it broke the tests in some of my plugins which assume that the current theme calls &lt;code&gt;wp_footer()&lt;/code&gt;. This is a safe assumption to make, therefore the &lt;code&gt;themedir1/default&lt;/code&gt; theme should call these functions.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39981 (Multisite Domain Mapping doesn't work or not activated at all) closed</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Tue, 28 Feb 2017 16:31:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39981#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39981#comment:1/1488299473531086</guid>
      <description>invalid: &lt;p&gt;
The documentation is out of date (so yes, it's wrong). Also it's totally wrong about requiring a dedicated IP...
&lt;/p&gt;
&lt;p&gt;
Just edit the Site Address to what you want, save, done. Tested this on 4.6 and 4.7 and 4.8 and it works :)
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>blobfolio</dc:creator>

      <pubDate>Tue, 28 Feb 2017 16:16:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:131</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:131/1488298574447240</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39550#comment:130" title="Comment 130"&gt;Blue Liquid Designs&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Just an educated assumption, but there's likely going to be edge cases between environments that will cause incorrect mime type issues when using the default PHP magic database with &lt;code&gt;finfo_open&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Your assumption is correct, @Blue Liquid Designs. However &lt;code&gt;finfo&lt;/code&gt;'s role in the upload validation process has been greatly reduced by @joemcgill's patch. It's not about finding a definitive, content-based type assignment for every single file (the results of which will vary widely across environments), so much as weeding out a few intentional corruptions.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
To get around this problem, it might be worth considering shipping WordPress with it's own magic database and passing that to parameter two of &lt;code&gt;finfo_open&lt;/code&gt;. This is exactly what &lt;a class="ext-link" href="https://www.drupal.org/project/mimedetect"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Drupal 7 does with their MimeDetect module and FileField&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Both WordPress and Drupal already ship with a hardcoded list of 1:1 MIME data for whitelisted/common file types, but the larger issue is that a single MIME type doesn't reflect reality. Even if other MIME-knowing segments are ignored (PHP, server software, operating systems, browsers, etc.), there would still be compatibility-breaking issues as standards evolve across time (&lt;code&gt;.woff&lt;/code&gt;, for example, has had about a half dozen MIME types over the past few years).
&lt;/p&gt;
&lt;p&gt;
A more future-proof approach (in the works &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/39963" title="#39963: enhancement: MIME Alias Handling (reopened)"&gt;#39963&lt;/a&gt;) would be to map MIME aliases, past, present, and vernacular. In this way, regardless of how a MIME type is arrived at (be it name-based, &lt;code&gt;finfo&lt;/code&gt;, user input, or even dangerous OS &lt;code&gt;exec()&lt;/code&gt; stuff like Drupal supports), it can be relatable to a 1:1 whitelist and handled accordingly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39692 (Fix missing assignment of menus on theme switch) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Tue, 28 Feb 2017 16:04:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39692#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39692#comment:14/1488297849621977</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39692#comment:13" title="Comment 13"&gt;jonathanbardo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@melchoyce I'm a bit confused too since when testing changing themes, menus were assign automatically to a menu location if they shared the same id. Maybe I'm not testing correctly?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yup! The issue is when menus &lt;em&gt;don't&lt;/em&gt; share the same IDs. We're trying to intelligently re-assign menus that don't match, using these criteria:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;If your old theme only has one menu and your new theme only has one menu, just map them automatically
&lt;/li&gt;&lt;li&gt;If your old theme and new theme share a similar (not the same) IDs or name, map them automatically (so, primary, main, menu 1, etc. are all similar in concept)
&lt;/li&gt;&lt;li&gt;If your old theme has more than one menu, or your new theme has more than one menu, map the menu in the first menu location in your old theme to the first menu location in the new theme.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39944 (Site wp_X_user_roles option not updated when network settings change) closed</title>
      
        <dc:creator>sanchothefat</dc:creator>

      <pubDate>Tue, 28 Feb 2017 16:01:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39944#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39944#comment:6/1488297710457820</guid>
      <description>invalid: &lt;p&gt;
@flixos90 yeah I was talking to @johnbillion about it earlier. You're right - I was under the impression that a site admin without &lt;code&gt;create_users&lt;/code&gt; would only see the profile edit option.
&lt;/p&gt;
&lt;p&gt;
It's really weird, the site was deployed on version 3.5 so I'm not sure how the db roles array ended up without &lt;code&gt;list_users&lt;/code&gt; and a bunch of other things at all. There's no code referring to &lt;code&gt;map_meta_cap&lt;/code&gt; :/
&lt;/p&gt;
&lt;p&gt;
I'll close this out and chalk it up to &lt;strong&gt;magic&lt;/strong&gt;. Definitely can't repro now, sorry to waste your time.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>39854.5.patch attached to Ticket #39854</title>
      
        <dc:creator>sagarkbhatt</dc:creator>

      <pubDate>Tue, 28 Feb 2017 15:27:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39854/39854.5.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39854/39854.5.patch/1488295627688140</guid>
      <description>&lt;p&gt;
Added unit tests
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #13169 (Return Dynamic Sidebars with get_dynamic_sidebar) updated</title>
      
        <dc:creator>markhowellsmead</dc:creator>

      <pubDate>Tue, 28 Feb 2017 14:46:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13169#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13169#comment:15/1488293210290226</guid>
      <description>&lt;p&gt;
Additional use case: two sidebars to be wrapped in a single outer HTML container, but only if one or both of them isn't empty.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39883 (Code hooking on `image_downsize` can no longer assume the file is an image) updated</title>
      
        <dc:creator>stephdau</dc:creator>

      <pubDate>Tue, 28 Feb 2017 14:31:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39883#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39883#comment:8/1488292271331414</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39883#comment:7" title="Comment 7"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Best option imho is to introduce new function(s) specifically for handling the cases where a non-image attachment post also contains preview image, then revert the changes to the above two functions.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As discussed, I wholeheartedly agree. Thanks @azaozz :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39731 (Adding oEmbed For Google Drive) updated</title>
      
        <dc:creator>thefiddler</dc:creator>

      <pubDate>Tue, 28 Feb 2017 14:22:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39731#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39731#comment:2/1488291771047767</guid>
      <description>&lt;p&gt;
Just wanted to add support for this. It would be very helpful for those who use Drive.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34693 (Add browser-based testing and automated acceptance tests (BrowserStack)) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Tue, 28 Feb 2017 14:13:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34693#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34693#comment:12/1488291195062841</guid>
      <description>&lt;p&gt;
Just FYI, &lt;a class="ext-link" href="http://codeception.com/docs/07-BDD"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Codeception also supports BDD using Gherkin&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I have no experience with Behat, so I can't comment on the pros and cons over Codeception either. I can only say that Codeception has done the job for me, and done it well. It would be good to hear from anybody that has worked with several different tools, what they have found the pros and cons to be.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39987.1.diff attached to Ticket #39987</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Tue, 28 Feb 2017 14:07:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39987/39987.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39987/39987.1.diff/1488290846370806</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39987 (Register missing REST API properties on WP_Taxonomy) created</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Tue, 28 Feb 2017 14:04:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39987</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39987/1488290682017100</guid>
      <description>&lt;p&gt;
The following properties are missing on the class:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;$show_in_rest&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;$rest_base&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;$rest_controller_class&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>action-retrieve-password.patch attached to Ticket #39985</title>
      
        <dc:creator>bonus369</dc:creator>

      <pubDate>Tue, 28 Feb 2017 14:04:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39985/action-retrieve-password.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39985/action-retrieve-password.patch/1488290648039339</guid>
      <description>&lt;p&gt;
Code for add do_action before sending email to recover password
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>39986.1.diff attached to Ticket #39986</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Tue, 28 Feb 2017 14:03:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39986/39986.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39986/39986.1.diff/1488290631832810</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39986 (Register missing REST API properties on WP_Post_Type) created</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Tue, 28 Feb 2017 14:03:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39986</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39986/1488290587449283</guid>
      <description>&lt;p&gt;
The following properties are missing on the class:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;$show_in_rest&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;$rest_base&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;$rest_controller_class&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39985 (Do action before send email of retrieve password) created</title>
      
        <dc:creator>bonus369</dc:creator>

      <pubDate>Tue, 28 Feb 2017 14:01:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39985</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39985/1488290467352980</guid>
      <description>&lt;p&gt;
Add do_action before sending email to recover password.
&lt;/p&gt;
&lt;p&gt;
Inspiration: I needed to integrate an SMS sending to recover password, where I had to use retrieve_password_message filter hook to get the user's phone number.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/pull/275"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/pull/275&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39984 (wp_insert_term can return wrong ID when multiple existing terms are ...) updated</title>
      
        <dc:creator>mikejolley</dc:creator>

      <pubDate>Tue, 28 Feb 2017 13:47:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39984#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39984#comment:1/1488289624928734</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Added a potential patch, but it needs some more eyes and testing. It does 2 things;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Ensures only terms from the specified parent are found to check names.
&lt;/li&gt;&lt;li&gt;It forces the name check if no slug was provided by the user. This is because the slug (if multiple terms with same name exists) will already have a suffix.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>fix-39984.diff attached to Ticket #39984</title>
      
        <dc:creator>mikejolley</dc:creator>

      <pubDate>Tue, 28 Feb 2017 13:44:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39984/fix-39984.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39984/fix-39984.diff/1488289487483451</guid>
      <description>&lt;p&gt;
Fix for issue 39984
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39984 (wp_insert_term can return wrong ID when multiple existing terms are ...) created</title>
      
        <dc:creator>mikejolley</dc:creator>

      <pubDate>Tue, 28 Feb 2017 13:37:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39984</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39984/1488289045668866</guid>
      <description>&lt;p&gt;
First reported here as an API issue &lt;a class="ext-link" href="https://github.com/woocommerce/woocommerce/issues/13386"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/woocommerce/woocommerce/issues/13386&lt;/a&gt;, it seems the problem is within the &lt;code&gt;wp_insert_term&lt;/code&gt; logic.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;To reproduce:&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Create 2 terms with the same name, but different parents e.g.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Top Level 1
&lt;ul&gt;&lt;li&gt;Child
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Top Level 2
&lt;ul&gt;&lt;li&gt;Child
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
You'll have 2 terms with name &lt;code&gt;Child&lt;/code&gt; and slugs &lt;code&gt;child&lt;/code&gt; and &lt;code&gt;child-top-level-2&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Now try to add the same named &lt;code&gt;Child&lt;/code&gt; term again to the second top level parent (in my case, &lt;code&gt;Top Level 2&lt;/code&gt;).
&lt;/p&gt;
&lt;pre class="wiki"&gt;var_dump( wp_insert_term( 'Child', 'category', array( 'parent' =&amp;gt; 1158 ) ) );
&lt;/pre&gt;&lt;p&gt;
The error message wil contain the term ID underneath the first top level parent (1159) instead of the correct one term under the chosen parent (1158):
&lt;/p&gt;
&lt;pre class="wiki"&gt;object(WP_Error)#1270 (2) {
  ["errors"]=&amp;gt;
  array(1) {
    ["term_exists"]=&amp;gt;
    array(1) {
      [0]=&amp;gt;
      string(62) "A term with the name provided already exists with this parent."
    }
  }
  ["error_data"]=&amp;gt;
  array(1) {
    ["term_exists"]=&amp;gt;
    int(1159)
  }
}
&lt;/pre&gt;&lt;p&gt;
I've traced this back to the &lt;code&gt;$name_matches&lt;/code&gt; code inside the &lt;code&gt;wp_insert_term&lt;/code&gt; function. This code does not use the parent right now.
&lt;/p&gt;
&lt;p&gt;
Patch to follow.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39944 (Site wp_X_user_roles option not updated when network settings change) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 28 Feb 2017 12:59:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39944#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39944#comment:5/1488286752924680</guid>
      <description>&lt;p&gt;
@sanchothefat I think what I'm confused about is why the &lt;code&gt;add_new_users&lt;/code&gt; setting should affect the &lt;code&gt;list_users&lt;/code&gt; capability. I would expect it to only allow/disallow the capability for creating/adding users.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39944 (Site wp_X_user_roles option not updated when network settings change) updated</title>
      
        <dc:creator>sanchothefat</dc:creator>

      <pubDate>Tue, 28 Feb 2017 12:55:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39944#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39944#comment:4/1488286544311819</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The unit test I just added behaves oddly - eg. not what I saw in the data of an affected site, however it does highlight an error after changing the value of the &lt;code&gt;add_new_users&lt;/code&gt; site option that the current admin user still has the &lt;code&gt;list_users&lt;/code&gt; cap.
&lt;/p&gt;
&lt;p&gt;
It's not the final unit test for this but should serve as a starting point for exploring the expected behaviour here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>test.39944.diff attached to Ticket #39944</title>
      
        <dc:creator>sanchothefat</dc:creator>

      <pubDate>Tue, 28 Feb 2017 12:51:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39944/test.39944.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39944/test.39944.diff/1488286319948840</guid>
      <description>&lt;p&gt;
Unit test as proof of issue
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 28 Feb 2017 12:47:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:134</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:134/1488286062109233</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #themereview by williampatton. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/themereview/p1488286059402125"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39927 (Add support for CSS class and attributes in wp_login_form input fields) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Tue, 28 Feb 2017 11:01:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39927#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39927#comment:2/1488279682866443</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>39927.patch attached to Ticket #39927</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Tue, 28 Feb 2017 11:01:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39927/39927.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39927/39927.patch/1488279660580067</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39927 (Add support for CSS class and attributes in wp_login_form input fields) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Tue, 28 Feb 2017 11:00:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39927#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39927#comment:1/1488279634939316</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39983 (Consider to stop using the CSS class button-link for controls that ...) created</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 28 Feb 2017 09:50:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39983</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39983/1488275456070236</guid>
      <description>&lt;p&gt;
After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40059" title="Buttons: Fix a few `.button-link` glitches after [40052].
Removes ..."&gt;[40059]&lt;/a&gt; the CSS class &lt;code&gt;button-link&lt;/code&gt; uses &lt;code&gt;text-align: left&lt;/code&gt; by default. This makes sense, since this class should be used to make buttons look like links. Browsers default stylesheets make text within buttons centered, so there's the need to make the text explicitly left aligned to prevent some edge cases, see for example &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38712" title="#38712: defect (bug): Button &amp;#34;Choose from the most used tags&amp;#34; is centerd (closed: fixed)"&gt;#38712&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
However, now the media modal "X" close button text is misplaced. Worth checking if the same thing happens for other buttons too. In these cases, text should be centered:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/pmFlhBxwZV.png"&gt;&lt;img src="https://cldup.com/pmFlhBxwZV.png" alt="https://cldup.com/pmFlhBxwZV.png" crossorigin="anonymous" title="https://cldup.com/pmFlhBxwZV.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It's a minor visual glitch and can be easily fixed. Ideally, these buttons shouldn't use the &lt;code&gt;button-link&lt;/code&gt; class at all. They'd need just some reset of the default buttons CSS properties.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36534 (Media Upload Issue Since 4.5 Upgrade) updated</title>
      
        <dc:creator>RudiAhlers</dc:creator>

      <pubDate>Tue, 28 Feb 2017 09:50:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36534#comment:120</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36534#comment:120/1488275404585223</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Can someone please tell me what the status is on this problem?
&lt;/p&gt;
&lt;p&gt;
As a shared hosting company, we can't go an fix client's Wordpress installations the whole time due to a bug in Wordpress.
&lt;/p&gt;
&lt;p&gt;
One client said it's easier to use Joomla! than to try and fix this issue the whole time.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;What worked for us?
the .htaccess method&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
I can confirm, I used the patch (&lt;a href="https://core.trac.wordpress.org/attachment/ticket/36534/36534.2.diff"&gt;https://core.trac.wordpress.org/attachment/ticket/36534/36534.2.diff&lt;/a&gt;) to one website's Wordpress files, but it made no difference.
&lt;/p&gt;
&lt;p&gt;
Server specs right now:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
php -v
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
PHP 5.6.25 (cli) (built: Sep  1 2016 23:25:06)
Copyright (c) 1997-2016 The PHP Group
Zend Engine v2.6.0, Copyright (c) 1998-2016 Zend Technologies
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
with XCache v3.2.0, Copyright (c) 2005-2014, by mOo
with the ionCube PHP Loader (enabled) + Intrusion Protection from ioncube24.com (unconfigured) v5.1.1, Copyright (c) 2002-2016, by ionCube Ltd.
with Zend Guard Loader v3.3, Copyright (c) 1998-2014, by Zend Technologies
with XCache Cacher v3.2.0, Copyright (c) 2005-2014, by mOo
with Suhosin v0.9.38, Copyright (c) 2007-2015, by SektionEins GmbH
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
convert --version
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Version: ImageMagick 6.7.2-7 2016-06-17 Q16 &lt;a class="ext-link" href="http://www.imagemagick.org"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.imagemagick.org&lt;/a&gt;
Copyright: Copyright (C) 1999-2011 ImageMagick Studio LLC
Features: OpenMP
&lt;/p&gt;
&lt;p&gt;
root@neptune:[~]$ php -i | grep memory_limit
memory_limit =&amp;gt; 250M =&amp;gt; 250M
&lt;/p&gt;
&lt;p&gt;
Tested on Wordpress 4.7.2
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39982 (Twenty Seventeen: Cannot update twenty-seventeen theme) created</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Tue, 28 Feb 2017 09:39:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39982</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39982/1488274789882336</guid>
      <description>&lt;p&gt;
Whenever I am trying to update Twenty Seventeen theme I am getting the following error:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;An error occurred while updating Twenty Seventeen: The update cannot be installed because we will be unable to copy some files. This is usually due to inconsistent file permissions. footer.php, single.php, style.css, template-parts/post/content.php, template-parts/footer/site-info.php&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
I tried updating Customizr and it got updated just fine.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39981 (Multisite Domain Mapping doesn't work or not activated at all) created</title>
      
        <dc:creator>avibrazil</dc:creator>

      <pubDate>Tue, 28 Feb 2017 09:18:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39981</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39981/1488273488695622</guid>
      <description>&lt;p&gt;
The documentation at 【1】 can't be done on a 4.7.2 WordPress installation, which is higher than the minimum 4.5+ suggested in the article.
&lt;/p&gt;
&lt;p&gt;
When editing the domain, the "Site Address (URL)" field isn't editable.
&lt;/p&gt;
&lt;p&gt;
So either the documentation is wrong (which I doubt) or the native domain mapping function for multisite is somehow disabled on 4.7.2.
&lt;/p&gt;
&lt;p&gt;
【1】 &lt;a class="ext-link" href="https://codex.wordpress.org/WordPress_Multisite_Domain_Mapping#Using_a_Dedicated_IP"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/WordPress_Multisite_Domain_Mapping#Using_a_Dedicated_IP&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #25435 (Introduce alternative to do_shortcode( '[shortcode]' )) updated</title>
      
        <dc:creator>aaemnnosttv</dc:creator>

      <pubDate>Tue, 28 Feb 2017 08:55:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25435#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25435#comment:27/1488272119979357</guid>
      <description>&lt;p&gt;
How about simply &lt;code&gt;call_shortcode( $tag, $atts, $content )&lt;/code&gt; ? I realize this is only slightly different than the original suggestion, but that's what I came up with before I knew about this ticket.
&lt;/p&gt;
&lt;p&gt;
Here's my implementation: &lt;a class="ext-link" href="https://gist.github.com/aaemnnosttv/0751dea2121db3a859fa"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gist.github.com/aaemnnosttv/0751dea2121db3a859fa&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
For what it's worth, I think it would be better return an empty string than a &lt;code&gt;WP_Error&lt;/code&gt; if the shortcode callback isn't callable since this is basically a template function. &lt;code&gt;get_template_part()&lt;/code&gt; doesn't do this, and dealing with a &lt;code&gt;WP_Error&lt;/code&gt; in the template just seems gross, as well as potentially causing real errors if it isn't properly checked for: (&lt;code&gt;PHP Catchable fatal error:  Object of class WP_Error could not be converted to string in ...&lt;/code&gt;). A bit worse than not showing anything IMO.
&lt;/p&gt;
&lt;p&gt;
We already have &lt;code&gt;shortcode_exists()&lt;/code&gt;, using a &lt;code&gt;WP_Error&lt;/code&gt; here seems a bit unnecessary, although I admit they do check different things. What if &lt;code&gt;shortcode_exists()&lt;/code&gt; checked if the callback is callable as well?
&lt;/p&gt;
&lt;p&gt;
I trigger a PHP notice in my implementation, but perhaps an action could be fired instead, similar to a &lt;code&gt;wp_mail()&lt;/code&gt; failure?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37000 (Support for the SameSite cookie attribute) updated</title>
      
        <author>noam@…</author>

      <pubDate>Tue, 28 Feb 2017 08:18:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37000#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37000#comment:2/1488269917301851</guid>
      <description>&lt;p&gt;
Related: PHP &lt;a class="missing ticket"&gt;#72230&lt;/a&gt;: Add SameSite Cookies to setcookie() &lt;a class="ext-link" href="https://bugs.php.net/bug.php?id=72230"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://bugs.php.net/bug.php?id=72230&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>Blue Liquid Designs</dc:creator>

      <pubDate>Tue, 28 Feb 2017 05:53:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:130</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:130/1488261231148298</guid>
      <description>&lt;p&gt;
Just an educated assumption, but there's likely going to be edge cases between environments that will cause incorrect mime type issues when using the default PHP magic database with &lt;code&gt;finfo_open&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This is based on the &lt;code&gt;finfo_open&lt;/code&gt; PHP docs including a warning about mime type format changes in PHP 5.3.11 and 5.4.1:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Warning
The expected magic database format changed in PHP 5.3.11 and 5.4.1. Due to this, the internal magic database was upgraded. This mostly effects code where an external magic database is used: reading an older magic file will now fail. Also, some textual representations of the mime types has changed, for instance for PHP would be "PHP script, ASCII text" instead of "PHP script text" returned.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
To get around this problem, it might be worth considering shipping WordPress with it's own magic database and passing that to parameter two of &lt;code&gt;finfo_open&lt;/code&gt;. This is exactly what &lt;a class="ext-link" href="https://www.drupal.org/project/mimedetect"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Drupal 7 does with their MimeDetect module and FileField&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39945 (WP_Query::get_posts fails to correctly sanitize 'posts_per_page') updated</title>
      
        <dc:creator>biisent</dc:creator>

      <pubDate>Tue, 28 Feb 2017 04:24:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39945#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39945#comment:2/1488255841235270</guid>
      <description>&lt;p&gt;
Two considerations:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;When &lt;code&gt;$this-&amp;gt;is_feed == true&lt;/code&gt; and &lt;code&gt;$this-&amp;gt;is_singular == false&lt;/code&gt;, then &lt;code&gt;$q['posts_per_page']&lt;/code&gt; is set to &lt;code&gt;$q['posts_per_rss']&lt;/code&gt; and &lt;code&gt;$q['nopaging']&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt; in &lt;a href="https://core.trac.wordpress.org/browser/branches/4.7/src/wp-includes/class-wp-query.php#L1768"&gt;https://core.trac.wordpress.org/browser/branches/4.7/src/wp-includes/class-wp-query.php#L1768&lt;/a&gt; . This however prevents the later sanitization of &lt;code&gt;$q['nopaging']&lt;/code&gt; since it is only performed when &lt;code&gt;!isset($q['nopaging'])&lt;/code&gt;.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;In my opinion, retrieving all posts for negative posts_per_page values seems consistent. However it may break compatibility (?) as currently negative posts_per_page values &amp;lt;= -2 will just become positive.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39945 (WP_Query::get_posts fails to correctly sanitize 'posts_per_page') updated</title>
      
        <dc:creator>asalce</dc:creator>

      <pubDate>Tue, 28 Feb 2017 03:40:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39945#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39945#comment:1/1488253239134105</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@biisent looks like the bigger issue is that post_per_page is allowed to have a negative value... BUT that check was happening before any sanitization is done on the variable. It also looks like the negative value is used when the user wants to query ALL posts. This patch I submitted still will cause an unwanted behaviour for WooCommerce. They should also do some sanitization on their end before passing it to get_posts/WP_Query.
&lt;/p&gt;
&lt;p&gt;
PS. I also modified the check to look for anything less than or equal to -1. So a -2 value will also retrieve all posts. Not sure if that was the correct thing to do, but better safe than sorry. Maybe a hard error should be thrown instead of allowing negative values to continue on after line 1790.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39945.diff attached to Ticket #39945</title>
      
        <dc:creator>asalce</dc:creator>

      <pubDate>Tue, 28 Feb 2017 03:32:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39945/39945.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39945/39945.diff/1488252746952939</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39696 (REST API: Filter which links get embedded when passing the ?_embed ...) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 28 Feb 2017 03:23:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39696#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39696#comment:31/1488252217404586</guid>
      <description>&lt;p&gt;
Great, was mainly noting for posterity's sake. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34545 ('parent_item' taxonomy label should be used in tag edit form) updated</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Tue, 28 Feb 2017 03:20:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34545#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34545#comment:1/1488252043458199</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34545/34545.diff" title="Attachment '34545.diff' in Ticket #34545"&gt;34545.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34545/34545.diff" title="Download"&gt;​&lt;/a&gt; would implement this suggestion on &lt;code&gt;edit-tags.php&lt;/code&gt; and &lt;code&gt;edit-tag-form.php&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I would also note that when a taxonomy doesn't define the &lt;code&gt;parent_item&lt;/code&gt; label, the default is used, which is currently &lt;code&gt;Parent Category&lt;/code&gt;, and which might not be a good fit either.
&lt;/p&gt;
&lt;p&gt;
So, an alternative approach could be to use a generic string (like &lt;code&gt;Parent&lt;/code&gt; or &lt;code&gt;Parent Term&lt;/code&gt;) everywhere.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>34545.diff attached to Ticket #34545</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Tue, 28 Feb 2017 03:12:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34545/34545.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34545/34545.diff/1488251534276263</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39980 (Improve handling of image previews for non-image files) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 28 Feb 2017 03:08:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39980#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39980#comment:4/1488251295752787</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39980#comment:2" title="Comment 2"&gt;johnbillion&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Dupe of &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/39883" title="#39883: defect (bug): Code hooking on `image_downsize` can no longer assume the file is an image (assigned)"&gt;#39883&lt;/a&gt;?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Similar but not exact. A refactoring seems too big change for a dot version, on the other hand it seems the best action.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39980 (Improve handling of image previews for non-image files) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 28 Feb 2017 03:06:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39980#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39980#comment:3/1488251181871183</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39883 (Code hooking on `image_downsize` can no longer assume the file is an image) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 28 Feb 2017 03:03:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39883#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39883#comment:7/1488251015348872</guid>
      <description>&lt;p&gt;
I don't see a good way to fix this. The "real" regression is that &lt;code&gt;image_downsize()&lt;/code&gt; and &lt;code&gt;image_get_intermediate_size()&lt;/code&gt; are used for non-image attachments. This makes no sense even given the names :)
&lt;/p&gt;
&lt;p&gt;
Best option imho is to introduce new function(s) specifically for handling the cases where a non-image attachment post also contains preview image, then revert the changes to the above two functions.
&lt;/p&gt;
&lt;p&gt;
That will mean some code repetition, but will be many many times clearer and easier to understand and follow. The new function(s) will also have their own filters allowing plugins to better manage these cases.
&lt;/p&gt;
&lt;p&gt;
Opened &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/39980" title="#39980: defect (bug): Improve handling of image previews for non-image files (assigned)"&gt;#39980&lt;/a&gt; for this. Wondering if we should move it to the 4.7.4 milestone and close this one as duplicate, or try to fix this now and do the other for 4.8.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39980 (Improve handling of image previews for non-image files) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 28 Feb 2017 03:00:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39980#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39980#comment:2/1488250840535284</guid>
      <description>&lt;p&gt;
Dupe of &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/39883" title="#39883: defect (bug): Code hooking on `image_downsize` can no longer assume the file is an image (assigned)"&gt;#39883&lt;/a&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39980 (Improve handling of image previews for non-image files) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 28 Feb 2017 02:58:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39980#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39980#comment:1/1488250727147261</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Severity is critical as there are regressions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39980 (Improve handling of image previews for non-image files) created</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 28 Feb 2017 02:57:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39980</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39980/1488250660635840</guid>
      <description>&lt;p&gt;
Follow up from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31050" title="#31050: feature request: Better PDF Upload Management (closed: fixed)"&gt;#31050&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The changes to the &lt;code&gt;image_downsize()&lt;/code&gt; and &lt;code&gt;image_get_intermediate_size()&lt;/code&gt; functions introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38949" title="Media: Add support for rendering PDF thumbnails.
When support for ..."&gt;[38949]&lt;/a&gt; added regressions to the &lt;code&gt;'image_downsize'&lt;/code&gt; and &lt;code&gt;'image_get_intermediate_size'&lt;/code&gt; filters, running them for non-image attachments.
&lt;/p&gt;
&lt;p&gt;
Best option to fix this seems to be to introduce new function(s) with new filter(s) specifically for handling this case: adding image preview to non-image attachment.
&lt;/p&gt;
&lt;p&gt;
This will fix the regressions, and will make it possible for plugins to hook into this functionality.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #31682 (reg_passmail message on login.php needs filter) updated</title>
      
        <dc:creator>iamfriendly</dc:creator>

      <pubDate>Tue, 28 Feb 2017 02:29:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31682#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31682#comment:4/1488248957714357</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31682 (reg_passmail message on login.php needs filter) updated</title>
      
        <dc:creator>starapple</dc:creator>

      <pubDate>Tue, 28 Feb 2017 02:24:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31682#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31682#comment:3/1488248692329900</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Dear Automatic, could you please commit this?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39696 (REST API: Filter which links get embedded when passing the ?_embed ...) updated</title>
      
        <dc:creator>rheinardkorf</dc:creator>

      <pubDate>Tue, 28 Feb 2017 01:32:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39696#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39696#comment:30/1488245577407930</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39696#comment:29" title="Comment 29"&gt;rmccue&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
One other use case we need to support: &lt;code&gt;?_embed&lt;/code&gt; without a value.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Current patch already supports that too.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also worth noting: the value of this parameter needs to be a filter on things that are embeddable (i.e. an intersection of embeddable and the &lt;code&gt;_embed&lt;/code&gt; value), and we need to be careful not to try and embed things that don't have the embeddable flag set to true.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The patch as it is will only filter "out" that which is already marked as embeddable and not supplied in the query. You are not able to embed any other resources.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39696 (REST API: Filter which links get embedded when passing the ?_embed ...) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 28 Feb 2017 01:23:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39696#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39696#comment:29/1488245007303109</guid>
      <description>&lt;p&gt;
One other use case we need to support: &lt;code&gt;?_embed&lt;/code&gt; without a value. Agree with @jnylen0 on the other points here generally speaking.
&lt;/p&gt;
&lt;p&gt;
Also worth noting: the value of this parameter needs to be a filter on things that are embeddable (i.e. an intersection of embeddable and the &lt;code&gt;_embed&lt;/code&gt; value), and we need to be careful not to try and embed things that don't have the embeddable flag set to true.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39829 (Missing Filter before user is created within "wp_insert_user" function) updated</title>
      
        <dc:creator>jaschaio</dc:creator>

      <pubDate>Tue, 28 Feb 2017 00:47:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39829#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39829#comment:3/1488242826441667</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39978 (Disable Xdebug during tests on Travis) reopened</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 28 Feb 2017 00:30:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39978#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39978#comment:6/1488241811826576</guid>
      <description>&lt;p&gt;
I think this is worth back-porting to the branches to speed up branch builds.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39978 (Disable Xdebug during tests on Travis) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 28 Feb 2017 00:29:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39978#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39978#comment:5/1488241772787942</guid>
      <description>fixed</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 28 Feb 2017 00:22:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:129</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:129/1488241337815345</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1488241335899749"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #39516,​39979 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 28 Feb 2017 00:19:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=39516%2C39979</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=39516%2C39979/1488241175277992</guid>
      <description>duplicate: &lt;p&gt;
Hi @inlate, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
Thanks for the report, we're already tracking this issue in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39516" title="#39516: defect (bug): Media grid upload errors display below the grid. (closed: fixed)"&gt;#39516&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [40141]: Bump the version after the 4.7.3-RC1 packaging. </title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 28 Feb 2017 00:15:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40141</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40141/1488240902524145</guid>
      <description>&lt;p&gt;
Bump the version after the 4.7.3-RC1 packaging.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [40140]: Version bump for WordPress 4.7.3-RC1 </title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 28 Feb 2017 00:09:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40140</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40140/1488240592288523</guid>
      <description>&lt;p&gt;
Version bump for WordPress 4.7.3-RC1
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39976 (Taxonomies and Types should return rewrite info) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 28 Feb 2017 00:03:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39976#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39976#comment:2/1488240235636996</guid>
      <description>&lt;p&gt;
Generally speaking, I'd like to avoid providing raw values (like the rewrite slug), and replace them with better ways to achieve the actual goal. Typically, this is via linking; we don't expose &lt;code&gt;rest_base&lt;/code&gt;, but rather expose that via a link.
&lt;/p&gt;
&lt;p&gt;
For rewrites, rather than just expose the value, the main thing they're used for is building URLs. Generally speaking, building URLs is a Bad Idea (since each URL is individually filterable), but there is utility in it.
&lt;/p&gt;
&lt;p&gt;
There's two things we want here: a link to the taxonomy page, and a way to build term links. What if we add a new link with something like &lt;code&gt;"item": { "href": "http://example.com/this_tax/{slug}" }&lt;/code&gt; (using URL Templates)? Would that cover this use case?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39978 (Disable Xdebug during tests on Travis) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 28 Feb 2017 00:03:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39978#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39978#comment:4/1488240199046074</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40139" title="Build/Test Tools: Only attempt to disable Xdebug on stable builds of ..."&gt;40139&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Build/Test Tools: Only attempt to disable Xdebug on stable builds of PHP.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Unstable builds of PHP (nightly and hhvm) don't have the Xdebug extension enabled. Attempting to disable it results in a build error.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39978" title="#39978: task (blessed): Disable Xdebug during tests on Travis (closed: fixed)"&gt;#39978&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [40139]: Build/Test Tools: Only attempt to disable Xdebug on stable builds of ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 28 Feb 2017 00:03:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40139</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40139/1488240198584603</guid>
      <description>&lt;p&gt;
Build/Test Tools: Only attempt to disable Xdebug on stable builds of PHP.
&lt;/p&gt;
&lt;p&gt;
Unstable builds of PHP (nightly and hhvm) don't have the Xdebug extension enabled. Attempting to disable it results in a build error.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39978" title="#39978: task (blessed): Disable Xdebug during tests on Travis (closed: fixed)"&gt;#39978&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39979 (Media upload: cannot see mime error in grid mode) created</title>
      
        <dc:creator>inlate</dc:creator>

      <pubDate>Mon, 27 Feb 2017 23:54:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39979</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39979/1488239666864221</guid>
      <description>&lt;p&gt;
In media, grid mode, add a new file with a not secure mime-type.
&lt;/p&gt;
&lt;p&gt;
An error ("...not allowed...") is shown at the bottom, after the preview grid.
The grid has a infinite scroll feature so the error is never really visible to the user.
&lt;/p&gt;
&lt;p&gt;
Expected behavior is an error box displayed between the "uploader" box and the grid.
&lt;/p&gt;
&lt;p&gt;
Thank you,
Riccardo
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39053 (Add function `wp_validate_integer`) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 27 Feb 2017 23:52:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39053#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39053#comment:5/1488239557050401</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39053#comment:4" title="Comment 4"&gt;peterwilsoncc&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@dd32 you mentioned in passing elsewhere this may fail with 64 bit numbers on 32 bit systems. Do you have any suggestions on how to fix this.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;if ( ! is_numeric( $var ) || floor( $var ) != $var )&lt;/code&gt; is used currently used in core, so it will need to be removed if that's the problematic line.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm honestly not sure if it's an issue at all.
Even on 64bit PHP &lt;code&gt;9223372036854775808&lt;/code&gt; is 1 larger than what will fit inside an &lt;code&gt;int&lt;/code&gt;, PHP automatically converts it to a &lt;code&gt;float&lt;/code&gt; in that case, and the above code will pass as expected.
However, if you attempt to cast it to an int &lt;code&gt;(int)9223372036854775808&lt;/code&gt; you'll get &lt;code&gt;-9223372036854775808&lt;/code&gt; as the value you're operating upon, which is highly unexpected - so don't cast things to &lt;code&gt;(int)&lt;/code&gt;..
&lt;/p&gt;
&lt;p&gt;
ref: &lt;a class="ext-link" href="http://php.net/manual/en/language.types.integer.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://php.net/manual/en/language.types.integer.php&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39367 (Don't no-op $user_id in test suite's wp_set_auth_cookie()) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 27 Feb 2017 23:48:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39367#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39367#comment:15/1488239294857795</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Agreed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39367 (Don't no-op $user_id in test suite's wp_set_auth_cookie()) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Mon, 27 Feb 2017 23:44:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39367#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39367#comment:14/1488239079099018</guid>
      <description>&lt;p&gt;
@johnbillion I don't think we should put this in 4.7.3 for several reasons.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;It's very late in the cycle - the milestone is clear except for this ticket, and we need to do an RC soon.
&lt;/li&gt;&lt;li&gt;We're making changes to the users endpoint in 4.7.3 (see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39701" title="#39701: defect (bug): Do not allow editing users from a different site in REST API (closed: fixed)"&gt;#39701&lt;/a&gt;).  While I'm not aware of anything that would break, I'd prefer to leave the related tests in place.
&lt;/li&gt;&lt;li&gt;I'd rather wait a week or two and treat trunk and 4.7 the same way, avoiding divergence between branches and the resulting extra work.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39720 (retrieve_password_key returning strings including special characters ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 27 Feb 2017 23:43:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39720#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39720#comment:4/1488238987537646</guid>
      <description>&lt;i&gt;Resolution&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for letting us know :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34693 (Add browser-based testing and automated acceptance tests (BrowserStack)) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 27 Feb 2017 23:42:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34693#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34693#comment:11/1488238921677659</guid>
      <description>&lt;p&gt;
In part given WP-CLI's embrace of Behat and also the recent introduction of @pgibbs's &lt;a class="ext-link" href="https://wordhat.info/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordHat&lt;/a&gt; and the promise of scenarios being understandable/writable by non-developers, I wanted to try learning some Behat myself and apply it to the context of doing automated acceptance tests in the customizer. Here's the initial proof of concept I came up with: &lt;a class="ext-link" href="https://github.com/xwp/wp-js-widgets/pull/43"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wp-js-widgets/pull/43&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I can't speak Behat's to its merits over Codeception, and I don't mean to negate @jonathanbardo's &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34693/34693_first_draft.diff" title="Attachment '34693_first_draft.diff' in Ticket #34693"&gt;34693_first_draft.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34693/34693_first_draft.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I welcome comments and critique. Mainly I want to get this kicked off again, and specifically focus it on the specific use case of testing the features and flows being introduced in the media widget (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32417" title="#32417: feature request: Add new core media widget (closed: fixed)"&gt;#32417&lt;/a&gt;).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39486 (In Travis, skip some tests when not on trunk) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Mon, 27 Feb 2017 23:37:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39486#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39486#comment:8/1488238629390717</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39486#comment:7" title="Comment 7"&gt;jorbin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Now I'm wondering if I broke &lt;code&gt;grunt upload_patch&lt;/code&gt; at some point since those changes don't appear during &lt;code&gt;svn diff&lt;/code&gt;. ¯\_(ツ)_/¯
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not sure, but the "extras" in the patch looked like they were from &lt;code&gt;/build&lt;/code&gt;, but in fact they are prefixed from &lt;code&gt;/src&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Had you performed any build/src juggling recently?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39486 (In Travis, skip some tests when not on trunk) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Mon, 27 Feb 2017 23:34:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39486#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39486#comment:7/1488238492846859</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39486#comment:6" title="Comment 6"&gt;netweb&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Can you remove the erroneous extras in the &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39486/39486.2.diff" title="Attachment '39486.2.diff' in Ticket #39486"&gt;39486.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39486/39486.2.diff" title="Download"&gt;​&lt;/a&gt; and go forth and commit :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Now I'm wondering if I broke &lt;code&gt;grunt upload_patch&lt;/code&gt; at some point since those changes don't appear during &lt;code&gt;svn diff&lt;/code&gt;. ¯\_(ツ)_/¯
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39486 (In Travis, skip some tests when not on trunk) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Mon, 27 Feb 2017 23:30:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39486#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39486#comment:6/1488238245260150</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39486#comment:5" title="Comment 5"&gt;jorbin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I took an alternative take that minimizes the changes needed. Feedback welcome.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Neat +1
&lt;/p&gt;
&lt;p&gt;
Can you remove the erroneous extras in the &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39486/39486.2.diff" title="Attachment '39486.2.diff' in Ticket #39486"&gt;39486.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39486/39486.2.diff" title="Download"&gt;​&lt;/a&gt; and go forth and commit :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39978 (Disable Xdebug during tests on Travis) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 27 Feb 2017 23:30:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39978#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39978#comment:3/1488238224838634</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This worked better than I expected.
&lt;/p&gt;
&lt;p&gt;
Total time on Travis has dropped from ~2h30 to ~1h30, and the actual build test time has dropped from ~40 mins to ~24 mins.
&lt;/p&gt;
&lt;p&gt;
Need to fix the error that it's causing on hhvm and php nightly.
&lt;/p&gt;
&lt;p&gt;
Ref: &lt;a class="ext-link" href="https://travis-ci.org/aaronjorbin/develop.wordpress/builds"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://travis-ci.org/aaronjorbin/develop.wordpress/builds&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39486 (In Travis, skip some tests when not on trunk) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Mon, 27 Feb 2017 23:23:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39486#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39486#comment:5/1488237834030508</guid>
      <description>&lt;p&gt;
I took an alternative take that minimizes the changes needed. Feedback welcome.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39486.2.diff attached to Ticket #39486</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Mon, 27 Feb 2017 23:22:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39486/39486.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39486/39486.2.diff/1488237720663147</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39978 (Disable Xdebug during tests on Travis) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 27 Feb 2017 22:53:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39978#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39978#comment:2/1488236027158452</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40138" title="Build/Test Tools: Disable Xdebug when testing on Travis.
This should ..."&gt;40138&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Build/Test Tools: Disable Xdebug when testing on Travis.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This should have some performance benefits, but I guess we'll need to wait and see.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39978" title="#39978: task (blessed): Disable Xdebug during tests on Travis (closed: fixed)"&gt;#39978&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [40138]: Build/Test Tools: Disable Xdebug when testing on Travis.  This should ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 27 Feb 2017 22:53:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40138</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40138/1488236026695033</guid>
      <description>&lt;p&gt;
Build/Test Tools: Disable Xdebug when testing on Travis.
&lt;/p&gt;
&lt;p&gt;
This should have some performance benefits, but I guess we'll need to wait and see.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39978" title="#39978: task (blessed): Disable Xdebug during tests on Travis (closed: fixed)"&gt;#39978&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39978 (Disable Xdebug during tests on Travis) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 27 Feb 2017 22:49:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39978#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39978#comment:1/1488235793555572</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>39978.diff attached to Ticket #39978</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 27 Feb 2017 22:49:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39978/39978.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39978/39978.diff/1488235779696755</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39978 (Disable Xdebug during tests on Travis) created</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 27 Feb 2017 22:49:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39978</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39978/1488235766508599</guid>
      <description>&lt;p&gt;
My local installation was running its tests 2x slower than I expected, and I narrowed down the problem to the Xdebug extension being unexpectedly enabled on the CLI. Disabling Xdebug restored the test suite speed back to its previous level.
&lt;/p&gt;
&lt;p&gt;
I did some research and it turns out Xdebug can be disabled on Travis. Refs:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://docs.travis-ci.com/user/languages/php#Disabling-preinstalled-PHP-extensions"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://docs.travis-ci.com/user/languages/php#Disabling-preinstalled-PHP-extensions&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/travis-ci/travis-ci/issues/444"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/travis-ci/travis-ci/issues/444&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/travis-ci/travis-ci/issues/5780"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/travis-ci/travis-ci/issues/5780&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
It would be worth pushing a change which disables Xdebug for core to see if it speeds things up (it should) and to see if it breaks anything (it shouldn't).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39367 (Don't no-op $user_id in test suite's wp_set_auth_cookie()) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 27 Feb 2017 22:30:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39367#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39367#comment:13/1488234640066444</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39367 (Don't no-op $user_id in test suite's wp_set_auth_cookie()) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 27 Feb 2017 22:29:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39367#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39367#comment:12/1488234578519709</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39367/39367.2.diff" title="Attachment '39367.2.diff' in Ticket #39367"&gt;39367.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39367/39367.2.diff" title="Download"&gt;​&lt;/a&gt; is a patch for the 4.7 branch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39367.2.diff attached to Ticket #39367</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 27 Feb 2017 22:28:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39367/39367.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39367/39367.2.diff/1488234527329824</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39367 (Don't no-op $user_id in test suite's wp_set_auth_cookie()) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 27 Feb 2017 22:27:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39367#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39367#comment:11/1488234430147695</guid>
      <description>&lt;p&gt;
Here's my proposal.
&lt;/p&gt;
&lt;p&gt;
For trunk and the 4.7 branch:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Remove the overridden &lt;code&gt;wp_set_auth_cookie()&lt;/code&gt; and &lt;code&gt;wp_clear_auth_cookie()&lt;/code&gt; functions from the test suite.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
For the 4.7 branch only:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Remove the tests which use &lt;code&gt;WP_Test_REST_Users_Controller::verify_user_roundtrip()&lt;/code&gt;, as these are the tests which result in the "headers already sent" error unless the auth cookie functions are overridden.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
For trunk:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Implement &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39367/39367.diff" title="Attachment '39367.diff' in Ticket #39367"&gt;39367.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39367/39367.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39367 (Don't no-op $user_id in test suite's wp_set_auth_cookie()) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 27 Feb 2017 22:12:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39367#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39367#comment:10/1488233550725833</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Just what I was thinking :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39367 (Don't no-op $user_id in test suite's wp_set_auth_cookie()) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Mon, 27 Feb 2017 22:10:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39367#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39367#comment:9/1488233425420237</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39367#comment:7" title="Comment 7"&gt;johnbillion&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Thoughts?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39367/39367.diff" title="Attachment '39367.diff' in Ticket #39367"&gt;39367.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39367/39367.diff" title="Download"&gt;​&lt;/a&gt; looks great to me 👍🏻
&lt;/p&gt;
&lt;p&gt;
Do we want to get this change into a point release?  Seems like we broke the tests for a few plugins.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39367 (Don't no-op $user_id in test suite's wp_set_auth_cookie()) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 27 Feb 2017 21:57:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39367#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39367#comment:8/1488232638447124</guid>
      <description>&lt;p&gt;
Also worth pointing out that the change in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39219" title="REST API: Improve validation for usernames and passwords.
Also ..."&gt;[39219]&lt;/a&gt; also broke the tests for my User Switching plugin because of the no-oped values in the overridden &lt;code&gt;wp_set_auth_cookie()&lt;/code&gt; function.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39053 (Add function `wp_validate_integer`) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Mon, 27 Feb 2017 21:25:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39053#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39053#comment:4/1488230706131728</guid>
      <description>&lt;p&gt;
@dd32 you mentioned in passing elsewhere this may fail with 64 bit numbers on 32 bit systems. Do you have any suggestions on how to fix this.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;if ( ! is_numeric( $var ) || floor( $var ) != $var )&lt;/code&gt; is used currently used in core, so it will need to be removed if that's the problematic line.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39976 (Taxonomies and Types should return rewrite info) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 27 Feb 2017 21:14:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39976#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39976#comment:1/1488230091067507</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by wonderboymusic. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1488230067401211"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39977 (Search results for custom post type = "ANY") created</title>
      
        <dc:creator>foxsk8</dc:creator>

      <pubDate>Mon, 27 Feb 2017 20:58:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39977</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39977/1488229136468935</guid>
      <description>&lt;p&gt;
There is a bug for search results query for post type "ANY", any returns only page and post. If we use:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s1"&gt;'s'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'numberposts'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'post_type'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'post'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'page'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'gallery'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$the_query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WP_Query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Then works, also pre_get_post not working.
&lt;/p&gt;
&lt;p&gt;
Debug info from QM:
&lt;/p&gt;
&lt;pre class="wiki"&gt;order	DESC
post_type	any
posts_per_page	10
s	Janis gallery
search_orderby_title
Array
(
    [0] =&amp;gt; wp_8b3200f070_posts.post_title LIKE '%Janis%'
    [1] =&amp;gt; wp_8b3200f070_posts.post_title LIKE '%gallery%'
)
search_terms
Array
(
    [0] =&amp;gt; Janis
    [1] =&amp;gt; gallery
)
&lt;/pre&gt;&lt;p&gt;
If we use standart:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;?php if (have_posts()) : while (have_posts()) : the_post();?&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Then custom post types is not showed on search results.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39720 (retrieve_password_key returning strings including special characters ...) updated</title>
      
        <dc:creator>dejliglama</dc:creator>

      <pubDate>Mon, 27 Feb 2017 20:54:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39720#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39720#comment:3/1488228879626935</guid>
      <description>&lt;p&gt;
Found the issue in a plugin - as you mentioned...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39720 (retrieve_password_key returning strings including special characters ...) closed</title>
      
        <dc:creator>dejliglama</dc:creator>

      <pubDate>Mon, 27 Feb 2017 20:52:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39720#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39720#comment:2/1488228768704800</guid>
      <description>worksforme</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 27 Feb 2017 20:31:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:133</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:133/1488227488986207</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by westonruter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1488227486009647"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 27 Feb 2017 20:31:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:132</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:132/1488227462068473</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/32417#comment:131" title="Comment 131"&gt;rabmalin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I was just trying the plugin. I tried to add image and add custom link for the image. But when widget is saved, that link settings is not applied to the front end. I am talking about &lt;code&gt;Link To&lt;/code&gt; in attachment modal.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We just had a &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1488218944411248"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;conversation&lt;/a&gt; about this topic in #core-customize, about what to do with the “Attachment Display Settings” that appear in the media modal, for example the settings that appear for an image and a video respectively are:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://core.trac.wordpress.org/attachment/ticket/32417/media-modal-image-attachment-display-settings.png"&gt;&lt;img width="300px" alt="Media Modal Image Attachment Display Settings" title="Media Modal Image Attachment Display Settings" crossorigin="anonymous" src="http://core.trac.wordpress.org/raw-attachment/ticket/32417/media-modal-image-attachment-display-settings.png" /&gt;&lt;/a&gt; &lt;a style="padding:0; border:none" href="http://core.trac.wordpress.org/attachment/ticket/32417/media-modal-video-attachment-display-settings.png"&gt;&lt;img width="300px" alt="Media Modal Video Attachment Display Settings" title="Media Modal Video Attachment Display Settings" crossorigin="anonymous" src="http://core.trac.wordpress.org/raw-attachment/ticket/32417/media-modal-video-attachment-display-settings.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Two main questions arose from the discussion:
&lt;/p&gt;
&lt;h2 id="Areallofthedisplaysettingsrelevantforthemediawidget"&gt;Are all of the display settings relevant for the media widget?&lt;/h2&gt;
&lt;p&gt;
Are all of the display settings relevant for the media widget?
For images, should is alignment relevant? (Personally, I do not think so.)
For audio/video should there be the option to display a media link instead of embed the player? (IMHO, no.)
Does the premise of the media widget include linking to media in addition to just displaying media?
&lt;/p&gt;
&lt;p&gt;
Note that per below, these attachment display settings shown in the media selection modal is actually a &lt;em&gt;subset&lt;/em&gt; of all of the fields that a user can specify when editing the modal.
&lt;/p&gt;
&lt;h2 id="Whereshouldtheattachmentdisplaysettingsappear"&gt;Where should the attachment display settings appear?&lt;/h2&gt;
&lt;p&gt;
As it stands currently, the media widget seeks to re-use the fields for the attachment display settings from the media browser modal (above). This is in line with what core does for specifying the display settings when selecting media to &lt;em&gt;add&lt;/em&gt;. When seeking to &lt;em&gt;edit&lt;/em&gt; the display settings for a previously-selected media item, should the display settings fields be re-populated with what the user had previously chosen, to then make changes, and then hit the Add to Widget button again?
&lt;/p&gt;
&lt;p&gt;
Something to note here is that in the context of the post editor when selecting previously-inserted media to &lt;em&gt;edit&lt;/em&gt; there are actually different modal UI for doing editing attachment display settings:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://core.trac.wordpress.org/attachment/ticket/32417/modal-modal-edit-image-attachment-display-settings.png"&gt;&lt;img width="350px" alt="Media Modal Edit Already Inserted Image Attachment Display Settings" title="Media Modal Edit Already Inserted Image Attachment Display Settings" crossorigin="anonymous" src="http://core.trac.wordpress.org/raw-attachment/ticket/32417/modal-modal-edit-image-attachment-display-settings.png" /&gt;&lt;/a&gt; &lt;a style="padding:0; border:none" href="http://core.trac.wordpress.org/attachment/ticket/32417/modal-modal-edit-video-attachment-display-settings.png"&gt;&lt;img width="350px" alt="Media Modal Edit Already Inserted Video Attachment Display Settings" title="Media Modal Edit Already Inserted Video Attachment Display Settings" crossorigin="anonymous" src="http://core.trac.wordpress.org/raw-attachment/ticket/32417/modal-modal-edit-video-attachment-display-settings.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;☞ Note: There are potentially a &lt;em&gt;lot&lt;/em&gt; of relevant attachment settings for video/audio that are not currently being accounted for in the media widget. The attachment display settings shown in the media selection modal is actually a subset of all of the fields that a user can specify when editing the modal.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Another option for where to display the attachment display setting fields would be to hide them from the media modal entirely (as is done for media modal for selecting the Custom Logo) and then to instead display the relevant fields with the selected media in the widget form itself:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://core.trac.wordpress.org/attachment/ticket/32417/proposed-media-widget-inline-form-attachment-display-settings.png"&gt;&lt;img width="300px" alt="Proposed integration of (relevant) attachment display setting fields into media widget form" title="Proposed integration of (relevant) attachment display setting fields into media widget form" crossorigin="anonymous" src="http://core.trac.wordpress.org/raw-attachment/ticket/32417/proposed-media-widget-inline-form-attachment-display-settings.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This would have a potential additional benefit of the fields being more accessible and easier for users to make changes and then see those changes in the preview without the media modal being overlaid. That being said, adding display fields to the widget can make it cluttered, especially considering the many possible settings that need to be considered for the video/audio embeds. With that in mind, what if the widget re-used the modals for editing display properties for media which is invoked via a secondary “Edit Media” (or some other label) button:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://core.trac.wordpress.org/attachment/ticket/32417/proposed-media-widget-edit-media-button.png"&gt;&lt;img width="300px" alt="Proposed inclusion of edit button in widget form to open relevant media details modal" title="Proposed inclusion of edit button in widget form to open relevant media details modal" crossorigin="anonymous" src="http://core.trac.wordpress.org/raw-attachment/ticket/32417/proposed-media-widget-edit-media-button.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
When the media is an image, this could then open &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/32417/modal-modal-edit-image-attachment-display-settings.png" title="Attachment 'modal-modal-edit-image-attachment-display-settings.png' in Ticket #32417"&gt;modal-modal-edit-image-attachment-display-settings.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/32417/modal-modal-edit-image-attachment-display-settings.png" title="Download"&gt;​&lt;/a&gt; whereas if a video it could open &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/32417/modal-modal-edit-video-attachment-display-settings.png" title="Attachment 'modal-modal-edit-video-attachment-display-settings.png' in Ticket #32417"&gt;modal-modal-edit-video-attachment-display-settings.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/32417/modal-modal-edit-video-attachment-display-settings.png" title="Download"&gt;​&lt;/a&gt;, and similarly for audio.
&lt;/p&gt;
&lt;p&gt;
So, we have some questions to wrestle through.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39061 (REST API pagination: Large INT passed to `paged` query arg doesn't ...) reopened</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 27 Feb 2017 20:25:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39061#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39061#comment:13/1488227146699997</guid>
      <description>&lt;p&gt;
We should do the same for all endpoints (terms, comments and users) as mentioned in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39061#comment:3" title="Comment 3"&gt;comment:3&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>proposed-media-widget-edit-media-button.png attached to Ticket #32417</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 27 Feb 2017 20:21:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32417/proposed-media-widget-edit-media-button.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32417/proposed-media-widget-edit-media-button.png/1488226902501732</guid>
      <description>&lt;p&gt;
Proposed inclusion of edit button in widget form to open relevant media details modal
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Mon, 27 Feb 2017 20:19:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:128</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:128/1488226751529874</guid>
      <description>&lt;p&gt;
Ticket is closed, but this will be fixed also for 4.6.x, right?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15691 (Network admin should have its own settings API) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 27 Feb 2017 20:17:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15691#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15691#comment:38/1488226640635394</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #buddypress by jjj. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/buddypress/p1488226638995450"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39960 (Separate Supported Status for Trackbacks and Pingbacks) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 27 Feb 2017 20:16:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39960#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39960#comment:2/1488226568703021</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by dshanske. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1488226565280530"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39660 (Missing singular placeholder, needed for some languages on comments.php) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 27 Feb 2017 20:15:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39660#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39660#comment:5/1488226531421854</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by dshanske. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1488226526278561"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39441 (Improve the Settings API for accessibility and ease of use.) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 27 Feb 2017 20:04:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39441#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39441#comment:22/1488225895259771</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39441#comment:19" title="Comment 19"&gt;flixos90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;The &lt;code&gt;$title&lt;/code&gt; is currently printed out twice when &lt;code&gt;fieldset&lt;/code&gt; is true. That is because the two column layout restricts us in a way that the &lt;code&gt;fieldset&lt;/code&gt; can only be part of the right column, not actually wrap both columns. Therefore the &lt;code&gt;$title&lt;/code&gt; is printed as &lt;code&gt;&amp;lt;span aria-hidden="true"&amp;gt;&lt;/code&gt; in the left column and as &lt;code&gt;&amp;lt;fieldset&amp;gt;&amp;lt;legend class="screen-reader-text"&amp;gt;&lt;/code&gt; in the right column. It would be much better if the &lt;code&gt;&amp;lt;legend&amp;gt;&lt;/code&gt; could be used as visual element as well instead of having two elements. This would require us to get rid of the two column layout though.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
About this, there's also another option. In the current patch, it is not possible to make the fieldset wrap both columns because &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; elements are used to mimic the two columns layout. However, these &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;s are not actually required and there are other ways to have a two columns layout via CSS. Without &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;s, the fieldset legend could be actually, and properly, used as a visual element avoiding aria-hidden and screen-reader-text all together.
Not to mention the markup would be a lot cleaner.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39232 (REST API: Can't set existing post format if theme does not support it (2)) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 27 Feb 2017 20:02:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39232#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39232#comment:22/1488225764456674</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40137" title="REST API: Allow setting post formats even if they are not supported by ..."&gt;40137&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Allow setting post formats even if they are not supported by the theme.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
A &lt;code&gt;post_format&lt;/code&gt; not used by the current theme, but supported by core is not a wrong/broken piece of information. It's just not used at this point in time. Therefore we should allow setting and retrieving any of the standard post formats supported in core, even if the current theme doesn't use them.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
After this commit, a post's &lt;code&gt;format&lt;/code&gt; value can survive a round trip through the API, which is a good general design principle for an API.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40120" title="REST API: Allow setting post formats even if they are not supported by ..."&gt;[40120]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40121" title="REST API: Update the client test fixtures after changes to post ..."&gt;[40121]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props JPry, iseulde, davidakennedy, Drivingralle.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39232" title="#39232: defect (bug): REST API: Can't set existing post format if theme does not support it (2) (closed: fixed)"&gt;#39232&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40137]: REST API: Allow setting post formats even if they are not supported by ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 27 Feb 2017 20:02:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40137</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40137/1488225763951038</guid>
      <description>&lt;p&gt;
REST API: Allow setting post formats even if they are not supported by the theme.
&lt;/p&gt;
&lt;p&gt;
A &lt;code&gt;post_format&lt;/code&gt; not used by the current theme, but supported by core is not a wrong/broken piece of information. It's just not used at this point in time. Therefore we should allow setting and retrieving any of the standard post formats supported in core, even if the current theme doesn't use them.
&lt;/p&gt;
&lt;p&gt;
After this commit, a post's &lt;code&gt;format&lt;/code&gt; value can survive a round trip through the API, which is a good general design principle for an API.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40120" title="REST API: Allow setting post formats even if they are not supported by ..."&gt;[40120]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40121" title="REST API: Update the client test fixtures after changes to post ..."&gt;[40121]&lt;/a&gt; to the 4.7 branch.
&lt;/p&gt;
&lt;p&gt;
Props JPry, iseulde, davidakennedy, Drivingralle.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39232" title="#39232: defect (bug): REST API: Can't set existing post format if theme does not support it (2) (closed: fixed)"&gt;#39232&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Tickets #39079,​39947 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 27 Feb 2017 19:53:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=39079%2C39947</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=39079%2C39947/1488225224083127</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40136" title="REST API: Fix behavior of `sticky` posts filter when no posts are ..."&gt;40136&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Fix behavior of &lt;code&gt;sticky&lt;/code&gt; posts filter when no posts are sticky.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Previously, when getting posts from the API with &lt;code&gt;sticky=true&lt;/code&gt;, if there were no sticky posts set, the query would return all posts  as if the &lt;code&gt;sticky&lt;/code&gt; argument was not set.  In this situation, the query should return an empty array instead.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
A &lt;code&gt;sticky=true&lt;/code&gt; query that should return an empty array (in the previous situation, or with &lt;code&gt;include&lt;/code&gt; and no intersecting post IDs) was also broken in that it would query the post with ID 1.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Finally, this commit significantly improves test coverage for the &lt;code&gt;sticky&lt;/code&gt; filter argument, including direct testing of the &lt;code&gt;WHERE&lt;/code&gt; clauses generated by &lt;code&gt;WP_Query&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40037" title="REST API: Improve posts orderby tests
This commit adds tests for ..."&gt;[40037]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40122" title="REST API: Fix behavior of `sticky` posts filter when no posts are ..."&gt;[40122]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props ryelle, jnylen0.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39079" title="#39079: enhancement: REST API: Improve posts orderby tests (closed: fixed)"&gt;#39079&lt;/a&gt;.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39947" title="#39947: defect (bug): REST API: Sticky post query returns unsticky posts when no posts are sticky (closed: fixed)"&gt;#39947&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [40136]: REST API: Fix behavior of `sticky` posts filter when no posts are ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 27 Feb 2017 19:53:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40136</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40136/1488225223562840</guid>
      <description>&lt;p&gt;
REST API: Fix behavior of &lt;code&gt;sticky&lt;/code&gt; posts filter when no posts are sticky.
&lt;/p&gt;
&lt;p&gt;
Previously, when getting posts from the API with &lt;code&gt;sticky=true&lt;/code&gt;, if there were no sticky posts set, the query would return all posts  as if the &lt;code&gt;sticky&lt;/code&gt; argument was not set.  In this situation, the query should return an empty array instead.
&lt;/p&gt;
&lt;p&gt;
A &lt;code&gt;sticky=true&lt;/code&gt; query that should return an empty array (in the previous situation, or with &lt;code&gt;include&lt;/code&gt; and no intersecting post IDs) was also broken in that it would query the post with ID 1.
&lt;/p&gt;
&lt;p&gt;
Finally, this commit significantly improves test coverage for the &lt;code&gt;sticky&lt;/code&gt; filter argument, including direct testing of the &lt;code&gt;WHERE&lt;/code&gt; clauses generated by &lt;code&gt;WP_Query&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40037" title="REST API: Improve posts orderby tests
This commit adds tests for ..."&gt;[40037]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40122" title="REST API: Fix behavior of `sticky` posts filter when no posts are ..."&gt;[40122]&lt;/a&gt; to the 4.7 branch.
&lt;/p&gt;
&lt;p&gt;
Props ryelle, jnylen0.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39079" title="#39079: enhancement: REST API: Improve posts orderby tests (closed: fixed)"&gt;#39079&lt;/a&gt;.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39947" title="#39947: defect (bug): REST API: Sticky post query returns unsticky posts when no posts are sticky (closed: fixed)"&gt;#39947&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Tickets #14459,​37140 batch updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Mon, 27 Feb 2017 19:32:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=14459%2C37140</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=14459%2C37140/1488223966107651</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40135" title="Media: Reset Exif orientation after rotate in WP_Image_Editor_Imagick. ..."&gt;40135&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: Reset Exif orientation after rotate in WP_Image_Editor_Imagick.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Due to inconsistencies in the way browsers handle Exif orientation data,&lt;br /&gt;
if a user manually rotates an image within WordPress, set the Exif orientation to&lt;br /&gt;
the default (1) so that the image displays with the same rotation/flip in every browser.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props sanchothefat, triplejumper12, joemcgill, azaozz, markoheijnen, mikeschroder.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40123" title="Media: Reset Exif orientation after rotate in ..."&gt;[40123]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40129" title="Media: After [40123], Feature check `setImageOrientation`.
In ..."&gt;[40129]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37140" title="#37140: defect (bug): Rotating images doesn't adjust orientation for imagick (closed: fixed)"&gt;#37140&lt;/a&gt;. See &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/14459" title="#14459: enhancement: Rotate Full Size Images on Upload (reviewing)"&gt;#14459&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [40135]: Media: Reset Exif orientation after rotate in WP_Image_Editor_Imagick. ...</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Mon, 27 Feb 2017 19:32:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40135</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40135/1488223965103660</guid>
      <description>&lt;p&gt;
Media: Reset Exif orientation after rotate in WP_Image_Editor_Imagick.
&lt;/p&gt;
&lt;p&gt;
Due to inconsistencies in the way browsers handle Exif orientation data,
if a user manually rotates an image within WordPress, set the Exif orientation to
the default (1) so that the image displays with the same rotation/flip in every browser.
&lt;/p&gt;
&lt;p&gt;
Props sanchothefat, triplejumper12, joemcgill, azaozz, markoheijnen, mikeschroder.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40123" title="Media: Reset Exif orientation after rotate in ..."&gt;[40123]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40129" title="Media: After [40123], Feature check `setImageOrientation`.
In ..."&gt;[40129]&lt;/a&gt; to the 4.7 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37140" title="#37140: defect (bug): Rotating images doesn't adjust orientation for imagick (closed: fixed)"&gt;#37140&lt;/a&gt;. See &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/14459" title="#14459: enhancement: Rotate Full Size Images on Upload (reviewing)"&gt;#14459&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Tickets #39550,​39552 batch updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Mon, 27 Feb 2017 19:27:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=39550%2C39552</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=39550%2C39552/1488223678575867</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40134" title="Media: Reduce failing uploads following 4.7.1.
[39831] introduced ..."&gt;40134&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: Reduce failing uploads following 4.7.1.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39831" title="Media: Improve image filetype checking.
This adds a new function ..."&gt;[39831]&lt;/a&gt; introduced more strict MIME type checking for uploads, which&lt;br /&gt;
resulted in unintetionally blocking several filetypes that were&lt;br /&gt;
previously valid. This change uses a more targeted approach to MIME&lt;br /&gt;
validation to restore previous behavior for most types.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props blobfolio, iandunn, ipstenu, markoheijnen, xknown, joemcgill.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40124" title="Media: Reduce failing uploads following 4.7.1.
[39831] introduced ..."&gt;[40124]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40125" title="Media: Fix unit tests for MIME checks on multisite.
A few of the ..."&gt;[40125]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39550" title="#39550: defect (bug): Some Non-image files fail to upload after 4.7.1 (closed: fixed)"&gt;#39550&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39552" title="#39552: defect (bug): SVG upload support broken in 4.7.1 (closed: fixed)"&gt;#39552&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [40134]: Media: Reduce failing uploads following 4.7.1.  [39831] introduced ...</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Mon, 27 Feb 2017 19:27:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40134</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40134/1488223678070099</guid>
      <description>&lt;p&gt;
Media: Reduce failing uploads following 4.7.1.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39831" title="Media: Improve image filetype checking.
This adds a new function ..."&gt;[39831]&lt;/a&gt; introduced more strict MIME type checking for uploads, which
resulted in unintetionally blocking several filetypes that were
previously valid. This change uses a more targeted approach to MIME
validation to restore previous behavior for most types.
&lt;/p&gt;
&lt;p&gt;
Props blobfolio, iandunn, ipstenu, markoheijnen, xknown, joemcgill.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40124" title="Media: Reduce failing uploads following 4.7.1.
[39831] introduced ..."&gt;[40124]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40125" title="Media: Fix unit tests for MIME checks on multisite.
A few of the ..."&gt;[40125]&lt;/a&gt; to the 4.7 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39550" title="#39550: defect (bug): Some Non-image files fail to upload after 4.7.1 (closed: fixed)"&gt;#39550&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39552" title="#39552: defect (bug): SVG upload support broken in 4.7.1 (closed: fixed)"&gt;#39552&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Tickets #31050,​39875 batch updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Mon, 27 Feb 2017 19:24:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=31050%2C39875</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=31050%2C39875/1488223490501172</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40133" title="Media: Keep PDF previews from overwriting files.
Since support for ..."&gt;40133&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: Keep PDF previews from overwriting files.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Since support for PDF previews were added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38949" title="Media: Add support for rendering PDF thumbnails.
When support for ..."&gt;[38949]&lt;/a&gt;, it's possible&lt;br /&gt;
that the generated image file could overwrite an existing image file&lt;br /&gt;
with the same name. This uses wp_unique_filename() to avoid this&lt;br /&gt;
issue and adds a '-pdf' identifier on the end of filenames.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props gitlost, desrosj, mikeschroder, joemcgill.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40130" title="Media: Keep PDF previews from overwriting files.
Since support for ..."&gt;[40130]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40131" title="Media: Skip PDF preview tests when image editor doens't support.
 ..."&gt;[40131]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39875" title="#39875: defect (bug): PDF previews overwrite existing images with the same name. (closed: fixed)"&gt;#39875&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31050" title="#31050: feature request: Better PDF Upload Management (closed: fixed)"&gt;#31050&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [40133]: Media: Keep PDF previews from overwriting files.  Since support for ...</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Mon, 27 Feb 2017 19:24:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40133</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40133/1488223490013745</guid>
      <description>&lt;p&gt;
Media: Keep PDF previews from overwriting files.
&lt;/p&gt;
&lt;p&gt;
Since support for PDF previews were added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38949" title="Media: Add support for rendering PDF thumbnails.
When support for ..."&gt;[38949]&lt;/a&gt;, it's possible
that the generated image file could overwrite an existing image file
with the same name. This uses wp_unique_filename() to avoid this
issue and adds a '-pdf' identifier on the end of filenames.
&lt;/p&gt;
&lt;p&gt;
Props gitlost, desrosj, mikeschroder, joemcgill.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40130" title="Media: Keep PDF previews from overwriting files.
Since support for ..."&gt;[40130]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40131" title="Media: Skip PDF preview tests when image editor doens't support.
 ..."&gt;[40131]&lt;/a&gt; to the 4.7 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39875" title="#39875: defect (bug): PDF previews overwrite existing images with the same name. (closed: fixed)"&gt;#39875&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31050" title="#31050: feature request: Better PDF Upload Management (closed: fixed)"&gt;#31050&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39516 (Media grid upload errors display below the grid.) closed</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Mon, 27 Feb 2017 19:20:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39516#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39516#comment:33/1488223258682382</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40132" title="Media: Restore correct upload errors displaying after [37610].
Props ..."&gt;40132&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: Restore correct upload errors displaying after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37610" title="Accessibility: match the visual and tab order in the Media Modal grid. ..."&gt;[37610]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props codegeass, MatheusGimenez, joemcgill.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40126" title="Media: Restore correct upload errors displaying after [37610].
Props ..."&gt;[40126]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39516" title="#39516: defect (bug): Media grid upload errors display below the grid. (closed: fixed)"&gt;#39516&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40132]: Media: Restore correct upload errors displaying after [37610].  Props ...</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Mon, 27 Feb 2017 19:20:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40132</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40132/1488223258195230</guid>
      <description>&lt;p&gt;
Media: Restore correct upload errors displaying after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37610" title="Accessibility: match the visual and tab order in the Media Modal grid. ..."&gt;[37610]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Props codegeass, MatheusGimenez, joemcgill.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40126" title="Media: Restore correct upload errors displaying after [37610].
Props ..."&gt;[40126]&lt;/a&gt; to the 4.7 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39516" title="#39516: defect (bug): Media grid upload errors display below the grid. (closed: fixed)"&gt;#39516&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39441 (Improve the Settings API for accessibility and ease of use.) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 27 Feb 2017 19:19:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39441#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39441#comment:21/1488223193381307</guid>
      <description>&lt;p&gt;
A few small updates:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39441/39441.6.diff" title="Attachment '39441.6.diff' in Ticket #39441"&gt;39441.6.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39441/39441.6.diff" title="Download"&gt;​&lt;/a&gt; and &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39441/39441.css.2.diff" title="Attachment '39441.css.2.diff' in Ticket #39441"&gt;39441.css.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39441/39441.css.2.diff" title="Download"&gt;​&lt;/a&gt; introduce a new &lt;code&gt;.title-label&lt;/code&gt; class that is used to make the checkbox label appear bold (see above).
&lt;/li&gt;&lt;li&gt;&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39441/39441.implementation.2.diff" title="Attachment '39441.implementation.2.diff' in Ticket #39441"&gt;39441.implementation.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39441/39441.implementation.2.diff" title="Download"&gt;​&lt;/a&gt; is an updated patch for the implementation of General Settings. The issue that no fieldsets were used on the Date and Time radio groups (see further above) was fixed, as well as the &lt;code&gt;$title&lt;/code&gt; for &lt;code&gt;users_can_register&lt;/code&gt; has been updated to be the label attribute (as we don't need the "Membership" text any longer). The code to add the settings fields has been moved to a separate file.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>39441.implementation.2.diff attached to Ticket #39441</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 27 Feb 2017 19:17:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39441/39441.implementation.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39441/39441.implementation.2.diff/1488223043294345</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>39441.css.2.diff attached to Ticket #39441</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 27 Feb 2017 19:17:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39441/39441.css.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39441/39441.css.2.diff/1488223033983373</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>39441.6.diff attached to Ticket #39441</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 27 Feb 2017 19:17:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39441/39441.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39441/39441.6.diff/1488223025288958</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>proposed-media-widget-inline-form-attachment-display-settings.png attached to Ticket #32417</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 27 Feb 2017 18:58:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32417/proposed-media-widget-inline-form-attachment-display-settings.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32417/proposed-media-widget-inline-form-attachment-display-settings.png/1488221931365599</guid>
      <description>&lt;p&gt;
Proposed integration of (relevant) attachment display setting fields into media widget form
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39367 (Don't no-op $user_id in test suite's wp_set_auth_cookie()) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 27 Feb 2017 18:55:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39367#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39367#comment:7/1488221739619520</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39367/39367.diff" title="Attachment '39367.diff' in Ticket #39367"&gt;39367.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39367/39367.diff" title="Download"&gt;​&lt;/a&gt; adds a filter to &lt;code&gt;wp_set_auth_cookie()&lt;/code&gt; and &lt;code&gt;wp_clear_auth_cookie()&lt;/code&gt; which allows the actual output of the cookies to be prevented, while retaining the various logic included with them to run, and the hooks to fire.
&lt;/p&gt;
&lt;p&gt;
Thoughts?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>modal-modal-edit-video-attachment-display-settings.png attached to Ticket #32417</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 27 Feb 2017 18:55:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32417/modal-modal-edit-video-attachment-display-settings.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32417/modal-modal-edit-video-attachment-display-settings.png/1488221711224820</guid>
      <description>&lt;p&gt;
Media Modal Edit Already Inserted Video Attachment Display Settings
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>modal-modal-edit-image-attachment-display-settings.png attached to Ticket #32417</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 27 Feb 2017 18:54:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32417/modal-modal-edit-image-attachment-display-settings.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32417/modal-modal-edit-image-attachment-display-settings.png/1488221694448102</guid>
      <description>&lt;p&gt;
Media Modal Edit Already Inserted Image Attachment Display Settings
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>39367.diff attached to Ticket #39367</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 27 Feb 2017 18:53:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39367/39367.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39367/39367.diff/1488221622133744</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>media-modal-video-attachment-display-settings.png attached to Ticket #32417</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 27 Feb 2017 18:51:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32417/media-modal-video-attachment-display-settings.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32417/media-modal-video-attachment-display-settings.png/1488221471173950</guid>
      <description>&lt;p&gt;
Media Modal Video Attachment Display Settings
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>media-modal-image-attachment-display-settings.png attached to Ticket #32417</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 27 Feb 2017 18:50:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32417/media-modal-image-attachment-display-settings.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32417/media-modal-image-attachment-display-settings.png/1488221451922708</guid>
      <description>&lt;p&gt;
Media Modal Image Attachment Display Settings
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37188 (Add New Media button does not give aria feedback) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 27 Feb 2017 18:46:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37188#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37188#comment:18/1488221204825462</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1488221202270964"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39516 (Media grid upload errors display below the grid.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 27 Feb 2017 18:44:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39516#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39516#comment:32/1488221099473220</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1488221097265850"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39441 (Improve the Settings API for accessibility and ease of use.) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 27 Feb 2017 18:38:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39441#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39441#comment:20/1488220738468080</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39441/39441.5.diff" title="Attachment '39441.5.diff' in Ticket #39441"&gt;39441.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39441/39441.5.diff" title="Download"&gt;​&lt;/a&gt; is an updated patch which changes the following over the previous one:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;For a single checkbox, the &lt;code&gt;$title&lt;/code&gt; is used as the checkbox label. A new &lt;code&gt;skip_title&lt;/code&gt; argument is used to tell &lt;code&gt;do_settings_fields()&lt;/code&gt; to not print the title in there.
&lt;/li&gt;&lt;li&gt;This new &lt;code&gt;skip_title&lt;/code&gt; argument is generally used instead of simply checking if the title is empty. This might be a good idea for our ongoing discussion with requiring the title. At least in the code itself it now appears to be required, and one needs to explicitly set &lt;code&gt;skip_title&lt;/code&gt; to set it as not required. This allows us to actually throw a notice if the &lt;code&gt;$title&lt;/code&gt; is empty, and at the same time allow devs to bypass printing it if they really do not want that.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>39441.5.diff attached to Ticket #39441</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 27 Feb 2017 18:34:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39441/39441.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39441/39441.5.diff/1488220473149157</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12423 (Include default code editor) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 27 Feb 2017 18:31:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12423#comment:60</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12423#comment:60/1488220310804945</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by rianrietveld. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1488220309229808"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39441 (Improve the Settings API for accessibility and ease of use.) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 27 Feb 2017 18:31:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39441#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39441#comment:19/1488220266978632</guid>
      <description>&lt;p&gt;
Quick summary on today's meeting:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;For single checkboxes, the &lt;code&gt;$title&lt;/code&gt; should be used as the checkbox label, and nothing should be displayed in the left column. The checkbox label should be printed in bold.
&lt;/li&gt;&lt;li&gt;The &lt;code&gt;$title&lt;/code&gt; is currently printed out twice when &lt;code&gt;fieldset&lt;/code&gt; is true. That is because the two column layout restricts us in a way that the &lt;code&gt;fieldset&lt;/code&gt; can only be part of the right column, not actually wrap both columns. Therefore the &lt;code&gt;$title&lt;/code&gt; is printed as &lt;code&gt;&amp;lt;span aria-hidden="true"&amp;gt;&lt;/code&gt; in the left column and as &lt;code&gt;&amp;lt;fieldset&amp;gt;&amp;lt;legend class="screen-reader-text"&amp;gt;&lt;/code&gt; in the right column. It would be much better if the &lt;code&gt;&amp;lt;legend&amp;gt;&lt;/code&gt; could be used as visual element as well instead of having two elements. This would require us to get rid of the two column layout though.
&lt;/li&gt;&lt;li&gt;Moving away from the two column layout would be drastic change to the UI. We need opinions from more core developers and also discuss this with the design team. Is that change acceptable, and if so, what could the new layout look like?
&lt;/li&gt;&lt;li&gt;The &lt;code&gt;$title&lt;/code&gt; is a required argument, but it's possible to specify it as empty. There was no concensus yet whether an empty title should be ignored or whether a notice should be triggered. Generally it's wrong to pass an empty title, but there might be edge-cases where developers want to print the label themselves, and this would not be possible if we enforced the &lt;code&gt;$title&lt;/code&gt;. We probably leave it as is, but this still needs more discussion.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39958 (Comment reply/cancel links work badly when comment form is above the ...) updated</title>
      
        <dc:creator>aranwer104</dc:creator>

      <pubDate>Mon, 27 Feb 2017 18:00:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39958#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39958#comment:1/1488218458929097</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39875 (PDF previews overwrite existing images with the same name.) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Mon, 27 Feb 2017 17:50:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39875#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39875#comment:25/1488217821945944</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40131" title="Media: Skip PDF preview tests when image editor doens't support.
 ..."&gt;40131&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: Skip PDF preview tests when image editor doens't support.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Following &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40130" title="Media: Keep PDF previews from overwriting files.
Since support for ..."&gt;[40130]&lt;/a&gt; tests fail on environments that don't support PDF&lt;br /&gt;
previews because the expected meta data doesn't get written.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39875" title="#39875: defect (bug): PDF previews overwrite existing images with the same name. (closed: fixed)"&gt;#39875&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [40131]: Media: Skip PDF preview tests when image editor doens't support.  ...</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Mon, 27 Feb 2017 17:50:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40131</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40131/1488217821407210</guid>
      <description>&lt;p&gt;
Media: Skip PDF preview tests when image editor doens't support.
&lt;/p&gt;
&lt;p&gt;
Following &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40130" title="Media: Keep PDF previews from overwriting files.
Since support for ..."&gt;[40130]&lt;/a&gt; tests fail on environments that don't support PDF
previews because the expected meta data doesn't get written.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39875" title="#39875: defect (bug): PDF previews overwrite existing images with the same name. (closed: fixed)"&gt;#39875&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39967 (Customize Site Logo + Icon) closed</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 27 Feb 2017 17:41:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39967#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39967#comment:5/1488217315817238</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39875 (PDF previews overwrite existing images with the same name.) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Mon, 27 Feb 2017 17:28:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39875#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39875#comment:24/1488216517294428</guid>
      <description>&lt;p&gt;
We need to skip the tests when PDF's aren't supported by the current image editor. See &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39875/39875-fix-tests.diff" title="Attachment '39875-fix-tests.diff' in Ticket #39875"&gt;39875-fix-tests.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39875/39875-fix-tests.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39875-fix-tests.diff attached to Ticket #39875</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Mon, 27 Feb 2017 17:27:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39875/39875-fix-tests.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39875/39875-fix-tests.diff/1488216425996222</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39967 (Customize Site Logo + Icon) updated</title>
      
        <dc:creator>zzakari</dc:creator>

      <pubDate>Mon, 27 Feb 2017 17:24:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39967#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39967#comment:4/1488216254091234</guid>
      <description>&lt;p&gt;
please close it, now I understand :)
I didnt restore the wp_postmeta, thats why malfunction.
thanks for your time.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39441 (Improve the Settings API for accessibility and ease of use.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 27 Feb 2017 17:03:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39441#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39441#comment:18/1488215009255695</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by flixos90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1488215005675034"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39976 (Taxonomies and Types should return rewrite info) created</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 27 Feb 2017 16:44:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39976</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39976/1488213841540158</guid>
      <description>&lt;p&gt;
Taxonomies and Types behave similarly in the REST API endpoints that bear their fruit.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;slug&lt;/code&gt; is actually the &lt;code&gt;id&lt;/code&gt; of the object
&lt;code&gt;name&lt;/code&gt; is the "label" for publicly identifying the taxonomy as text
&lt;/p&gt;
&lt;p&gt;
There is, however, no representation of what the "pretty" version, or "slug", is for the taxonomy.
&lt;/p&gt;
&lt;p&gt;
As an example:
&lt;code&gt;post_tag&lt;/code&gt; is the ID
"Tags"/"Tag" is the label (it would be nice to also have labels returned tho....)
... missing info: what is the slug representation of &lt;code&gt;post_tag&lt;/code&gt; - the answer is &lt;code&gt;tag&lt;/code&gt;, but this info is missing from the REST API response.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Why is this important?&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
If &lt;code&gt;food.whatever.com&lt;/code&gt; is reading REST API data from &lt;code&gt;services.taco.com&lt;/code&gt;, and providing URLs on its site for arbitrary terms, it makes sense to create the routes to this terms as &lt;code&gt;/{taxonomy.pretty}/{term.slug}&lt;/code&gt; - right now, the slug is &lt;code&gt;post_tag&lt;/code&gt;, not &lt;code&gt;tag&lt;/code&gt;. &lt;code&gt;/post_tag/burrito&lt;/code&gt; is not as nice as &lt;code&gt;/tag/burrito&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Devs are also encouraged to namespace their registration, so taxonomies on the NYT would have a a registration value of &lt;code&gt;nyt_kicker&lt;/code&gt;, which might be displayed as &lt;code&gt;column&lt;/code&gt; - which is nowhere to be found in the response.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39692 (Fix missing assignment of menus on theme switch) updated</title>
      
        <dc:creator>jonathanbardo</dc:creator>

      <pubDate>Mon, 27 Feb 2017 16:29:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39692#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39692#comment:13/1488212971030884</guid>
      <description>&lt;p&gt;
@melchoyce I'm a bit confused too since when testing changing themes, menus were assign automatically to a menu location if they shared the same id. Maybe I'm not testing correctly?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30685 (Better Login Error&amp;Message Displaying) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 27 Feb 2017 16:20:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30685#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30685#comment:28/1488212431528289</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39971" title="#39971: defect (bug): Lack of spacing between multiple notices on the login screen (closed: fixed)"&gt;#39971&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39971 (Lack of spacing between multiple notices on the login screen) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 27 Feb 2017 16:20:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39971#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39971#comment:3/1488212414419701</guid>
      <description>&lt;p&gt;
Related: &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/30685" title="#30685: enhancement: Better Login Error&amp;amp;Message Displaying (assigned)"&gt;#30685&lt;/a&gt;.
@johnbillion where the message "Switch back to {user}" comes from? 😄
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31980 (Customizer Theme Switcher Details Modal: previous/next/close buttons ...) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Mon, 27 Feb 2017 15:57:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31980#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31980#comment:9/1488211073755894</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/31980#comment:8" title="Comment 8"&gt;DrewAPicture&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@helen Would you mind following up here
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Can't tell if it's still a problem because now the nav is covered up almost entirely, which seems to be a bug (and may exist as a ticket already, I did not search). See screenshot above.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>IMG_8193.PNG attached to Ticket #31980</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Mon, 27 Feb 2017 15:56:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31980/IMG_8193.PNG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31980/IMG_8193.PNG/1488210992720948</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>rabmalin</dc:creator>

      <pubDate>Mon, 27 Feb 2017 15:51:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:131</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:131/1488210708644345</guid>
      <description>&lt;p&gt;
I was just trying the plugin. I tried to add image and add custom link for the image. But when widget is saved, that link settings is not applied to the front end. I am talking about &lt;code&gt;Link To&lt;/code&gt; in attachment modal.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39875 (PDF previews overwrite existing images with the same name.) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Mon, 27 Feb 2017 15:48:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39875#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39875#comment:23/1488210538428694</guid>
      <description>&lt;p&gt;
I've opened &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/39975" title="#39975: task (blessed): Remove direct calls to '/tmp/' in Unit Tests (new)"&gt;#39975&lt;/a&gt; to address the various places where &lt;code&gt;/tmp/&lt;/code&gt; is used in the tests.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39975 (Remove direct calls to '/tmp/' in Unit Tests) created</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Mon, 27 Feb 2017 15:45:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39975</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39975/1488210347871816</guid>
      <description>&lt;p&gt;
As noted by @mikeschroder in &lt;a href="https://core.trac.wordpress.org/ticket/39875#comment:20"&gt;39875&lt;/a&gt;, there are several places in our unit tests where we assume the temp directory is '/tmp/' and make direct calls. Instead, we should use something like &lt;code&gt;wp_tempnam()&lt;/code&gt; to ensure we're writing and removing files from the right place during tests.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39875 (PDF previews overwrite existing images with the same name.) reopened</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Mon, 27 Feb 2017 15:39:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39875#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39875#comment:22/1488209952011852</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Tickets #31050,​39875 batch updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Mon, 27 Feb 2017 15:38:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=31050%2C39875</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=31050%2C39875/1488209910753918</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40130" title="Media: Keep PDF previews from overwriting files.
Since support for ..."&gt;40130&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: Keep PDF previews from overwriting files.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Since support for PDF previews were added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38949" title="Media: Add support for rendering PDF thumbnails.
When support for ..."&gt;[38949]&lt;/a&gt;, it's possible&lt;br /&gt;
that the generated image file could overwrite an existing image file&lt;br /&gt;
with the same name. This uses &lt;code&gt;wp_unique_filename()&lt;/code&gt; to avoid this&lt;br /&gt;
issue and adds a '-pdf' identifier on the end of filenames.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props gitlost, derosj, mikeschroder, joemcgill.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39875" title="#39875: defect (bug): PDF previews overwrite existing images with the same name. (closed: fixed)"&gt;#39875&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31050" title="#31050: feature request: Better PDF Upload Management (closed: fixed)"&gt;#31050&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [40130]: Media: Keep PDF previews from overwriting files.  Since support for ...</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Mon, 27 Feb 2017 15:38:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40130</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40130/1488209910208243</guid>
      <description>&lt;p&gt;
Media: Keep PDF previews from overwriting files.
&lt;/p&gt;
&lt;p&gt;
Since support for PDF previews were added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38949" title="Media: Add support for rendering PDF thumbnails.
When support for ..."&gt;[38949]&lt;/a&gt;, it's possible
that the generated image file could overwrite an existing image file
with the same name. This uses &lt;code&gt;wp_unique_filename()&lt;/code&gt; to avoid this
issue and adds a '-pdf' identifier on the end of filenames.
&lt;/p&gt;
&lt;p&gt;
Props gitlost, derosj, mikeschroder, joemcgill.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39875" title="#39875: defect (bug): PDF previews overwrite existing images with the same name. (closed: fixed)"&gt;#39875&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31050" title="#31050: feature request: Better PDF Upload Management (closed: fixed)"&gt;#31050&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39974 (Grid Mode Doesn't Load Files - Infinite Loading) closed</title>
      
        <dc:creator>blobfolio</dc:creator>

      <pubDate>Mon, 27 Feb 2017 15:37:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39974#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39974#comment:3/1488209867324049</guid>
      <description>invalid: &lt;p&gt;
Woo! No problem. I'm pretty sure I've done the same thing before. :)
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39974 (Grid Mode Doesn't Load Files - Infinite Loading) updated</title>
      
        <dc:creator>Peter Westerlund</dc:creator>

      <pubDate>Mon, 27 Feb 2017 15:30:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39974#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39974#comment:2/1488209455156932</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39974#comment:1" title="Comment 1"&gt;blobfolio&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It sounds like you may have corrupted the image metadata. Have you tried running a plugin like &lt;a class="ext-link" href="https://wordpress.org/plugins/force-regenerate-thumbnails/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/force-regenerate-thumbnails/&lt;/a&gt; to regenerate the images/meta?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Omg that worked! Thanks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>logo crop.PNG attached to Ticket #39967</title>
      
        <dc:creator>luluhouse7</dc:creator>

      <pubDate>Mon, 27 Feb 2017 15:20:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39967/logo%20crop.PNG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39967/logo%20crop.PNG/1488208825022405</guid>
      <description>&lt;p&gt;
forced crop of custom logo
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39974 (Grid Mode Doesn't Load Files - Infinite Loading) updated</title>
      
        <dc:creator>blobfolio</dc:creator>

      <pubDate>Mon, 27 Feb 2017 15:18:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39974#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39974#comment:1/1488208719948350</guid>
      <description>&lt;p&gt;
It sounds like you may have corrupted the image metadata. Have you tried running a plugin like &lt;a class="ext-link" href="https://wordpress.org/plugins/force-regenerate-thumbnails/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/force-regenerate-thumbnails/&lt;/a&gt; to regenerate the images/meta?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39967 (Customize Site Logo + Icon) updated</title>
      
        <dc:creator>luluhouse7</dc:creator>

      <pubDate>Mon, 27 Feb 2017 15:16:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39967#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39967#comment:3/1488208589944244</guid>
      <description>&lt;p&gt;
I'm having the same issue. Changing height/width/flex-height/flex-width when adding theme support makes no difference. And the issue occurs regardless of whether I'm uploading the image or taking it from the media library.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>gonom9</dc:creator>

      <pubDate>Mon, 27 Feb 2017 15:06:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:130</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:130/1488207979907501</guid>
      <description>&lt;p&gt;
Changes in &lt;a href="https://core.trac.wordpress.org/attachment/ticket/32417/32417.18.diff"&gt;32417.18.diff&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Remove the widget-specific responsive styles. The &lt;code&gt;get_responsive_styles()&lt;/code&gt; has gone. @celloexpressions
&lt;/li&gt;&lt;li&gt;Remove click handler from the image. No media preview is clickable. @afercia @karmatosed @celloexpressions
&lt;/li&gt;&lt;li&gt;Show placeholder text in empty widget preview. @celloexpressions
&lt;/li&gt;&lt;li&gt;Fix JavaScript errors. @celloexpressions
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
As always, &lt;a class="ext-link" href="https://gist.github.com/taggon/d381e421b743eb5f0e71d225ea18fffa"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the plugin&lt;/a&gt; has been updated for testing. @karmatosed
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>32417.18.diff attached to Ticket #32417</title>
      
        <dc:creator>gonom9</dc:creator>

      <pubDate>Mon, 27 Feb 2017 14:58:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32417/32417.18.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32417/32417.18.diff/1488207507567152</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39974 (Grid Mode Doesn't Load Files - Infinite Loading) created</title>
      
        <dc:creator>Peter Westerlund</dc:creator>

      <pubDate>Mon, 27 Feb 2017 14:57:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39974</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39974/1488207440420609</guid>
      <description>&lt;p&gt;
In Admin &amp;gt; Media Library, files won't load when viewing in grid mode. But is showing in list mode.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I have tried re-installing Wordpress except /wp-content and wp-config.php. Did not helped.
&lt;/li&gt;&lt;li&gt;Have activated wp_debug, but couldn't see any related errors
&lt;/li&gt;&lt;li&gt;Have tried removing all the code from functions.php
&lt;/li&gt;&lt;li&gt;Have tried activate another theme
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Nothing is helping. I suspect something has got into the database and destroying this functionality.
&lt;/p&gt;
&lt;p&gt;
A moment before this happened I were adding this code to function.php:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;save_nb_image&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="nv"&gt;$wpdb&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;$id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="nv"&gt;$file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wp_get_attachment_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;is_wp_error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="nv"&gt;$meta&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wp_generate_attachment_metadata&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$file&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="nv"&gt;$meta&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;nb_image_crop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$meta&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="nx"&gt;wp_update_attachment_metadata&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$meta&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;wp_die&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'wp_ajax_nb-image-autofix'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'save_nb_image'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
And then clicking on the "Autofix" button. I have later found out that wp_get_attachment_url() wasn't the right function to use. That outputted a lot of code that I suspect is the image in code format. The right function to use is get_attached_file(). However, the Media Library Grid Mode is still not working.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39973 (Adding playbuzz.com as an oEmbed provider) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 27 Feb 2017 14:55:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39973#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39973#comment:1/1488207354592020</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Howdy,
&lt;/p&gt;
&lt;p&gt;
Thanks for opening this ticket!
&lt;/p&gt;
&lt;p&gt;
We have a set of questions regarding whitelisting oEmbed providers which I'd ask you to answer: &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/contribute/design-decisions/#whitelisting-oembed-providers"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/handbook/contribute/design-decisions/#whitelisting-oembed-providers&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39973 (Adding playbuzz.com as an oEmbed provider) created</title>
      
        <dc:creator>playbuzz</dc:creator>

      <pubDate>Mon, 27 Feb 2017 14:52:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39973</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39973/1488207128882365</guid>
      <description>&lt;p&gt;
Playbuzz.com is an authoring &amp;amp; distribution platform for interactive storytelling. It has 500M+ monthly active users interact with Playbuzz powered content, support 40+
languages and 13K+ leading publishers &amp;amp; brands using Playbuzz.
&lt;/p&gt;
&lt;p&gt;
Example embeddable URLs:
&lt;a class="ext-link" href="http://www.playbuzz.com/api/oembed?url=http://www.playbuzz.com/joshlieberman10/warren-beatty-pulls-a-steve-harvey-at-the-oscars"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.playbuzz.com/api/oembed?url=http://www.playbuzz.com/joshlieberman10/warren-beatty-pulls-a-steve-harvey-at-the-oscars&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>gonom9</dc:creator>

      <pubDate>Mon, 27 Feb 2017 14:39:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:129</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:129/1488206345672243</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Instead, .wp-video { max-width: 100% } or something is required for responsive video but there is no default theme which has that style. We need to add it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@celloexpressions Never mind. I've already done it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39881 (`WP_REST_Posts_Controller::check_read_permission()` should check if ...) updated</title>
      
        <dc:creator>GhostToast</dc:creator>

      <pubDate>Mon, 27 Feb 2017 12:56:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39881#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39881#comment:5/1488200173852787</guid>
      <description>&lt;p&gt;
At the very least I would argue some error handling be in place. It is assumed that because a non-zero&lt;code&gt;post_parent&lt;/code&gt; property is present, a valid &lt;code&gt;$post&lt;/code&gt; object will exist with that ID. What about if we check for &lt;code&gt;get_post()&lt;/code&gt; having returned something useful? &lt;code&gt;get_post_status()&lt;/code&gt; handles this a bit, can see similar example here: &lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/post.php?marks=#L655"&gt;https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/post.php?marks=#L655&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15448 (wp_mail() sets Content-Type header twice for multipart emails) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 27 Feb 2017 12:34:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15448#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15448#comment:48/1488198846605164</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Any chance of getting this in the 4.7.x branch at some point?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
A bugfix to remove the duplicate headers - likely, although, I have a feeling that it should be fixed in PHPMailer instead of in WordPress (Based on the code I've read in PHPMailer, it looks like it's detecting the email type wrong - and it is, which is why the duplicate header is added).
&lt;/p&gt;
&lt;p&gt;
Accepting &lt;code&gt;text/html&lt;/code&gt; + &lt;code&gt;text/plain&lt;/code&gt; as args in &lt;code&gt;wp_mail()&lt;/code&gt; will probably be a 4.8 thing, just based on needing to have a much longer testing and bug-finding period being needed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>loadpath.2.php attached to Ticket #39961</title>
      
        <dc:creator>majick</dc:creator>

      <pubDate>Mon, 27 Feb 2017 11:54:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39961/loadpath.2.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39961/loadpath.2.php/1488196468613741</guid>
      <description>&lt;p&gt;
Improved version (auto-detect wp-load.php path, use filesystem)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36778 (Parent theme editor-style.css cannot be disabled) updated</title>
      
        <dc:creator>eclare</dc:creator>

      <pubDate>Mon, 27 Feb 2017 11:31:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36778#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36778#comment:10/1488195094248529</guid>
      <description>&lt;p&gt;
Thanks for your fast reply :)
&lt;/p&gt;
&lt;p&gt;
The issue is, even though &lt;em&gt;serious&lt;/em&gt; developers look around for a solution, the only one is in this trac ticket. Obviously if you see &lt;code&gt;add_editor_style()&lt;/code&gt;, you Google for &lt;code&gt;remove_editor_style()&lt;/code&gt; and there isn't one. The next thing a developer could do is look further for a solution or edit the parent theme's code. Since this is like the only page with a proper solution, most will do the latter.
&lt;/p&gt;
&lt;p&gt;
I think the minimum viable solution is to add an explanation to the Codex (or somewhere else), but I still feel strongly about consistency and ease of use. I think these few more lines of code are worth it if we stop parent theme edition on a LOT of sites.
&lt;/p&gt;
&lt;p&gt;
I can see where you're coming from, but as there's already an easy way to potentially destroy the WYSIWYG editor by adding bad CSS to it, there most certainly should be an easy way to fix it if needed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39441 (Improve the Settings API for accessibility and ease of use.) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 27 Feb 2017 11:03:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39441#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39441#comment:17/1488193416918665</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39441#comment:16" title="Comment 16"&gt;flixos90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol start="2"&gt;&lt;li&gt;Was that incorrect somewhere in the patch? I thought it uses explicit association all over.
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
Hm, yep can't find the reason why I've written that any longer. Maybe I was looking at something else in &lt;code&gt;template.php&lt;/code&gt; 😬
&lt;/p&gt;
&lt;p&gt;
I'd propose to discuss 1. later today during the meeting, together with the &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; thing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15448 (wp_mail() sets Content-Type header twice for multipart emails) updated</title>
      
        <dc:creator>MattyRob</dc:creator>

      <pubDate>Mon, 27 Feb 2017 10:36:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15448#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15448#comment:47/1488191806129291</guid>
      <description>&lt;p&gt;
@dd32
&lt;/p&gt;
&lt;p&gt;
I agree - my PoC is very sub-optimal. Patching the wp_mail() function to handle multipart emails directly should make developers lives easier, account for sub-optimal use of wp_mail() and perhaps increase deliverability too.
&lt;/p&gt;
&lt;p&gt;
Any chance of getting this in the 4.7.x branch at some point?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33330 (Undefined property: stdClass::$slug) updated</title>
      
        <dc:creator>clivewalker</dc:creator>

      <pubDate>Mon, 27 Feb 2017 10:21:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33330#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33330#comment:29/1488190909084565</guid>
      <description>&lt;p&gt;
I've tried the solutions listed above. But still getting the error. Before I get into editing the database directly. Please can you confirm &lt;em&gt;exactly&lt;/em&gt; what I need to delete in the _site_transient_update_plugins values in wp_options table.  Thank you.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39965 (REST API: Introduce a controller for searching across post types) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Mon, 27 Feb 2017 10:19:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39965#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39965#comment:2/1488190785587688</guid>
      <description>&lt;p&gt;
For that ticket it would be enough to create a separate endpoint with the needed data. Not sure if it's the best way to go in general though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39441 (Improve the Settings API for accessibility and ease of use.) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 27 Feb 2017 10:09:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39441#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39441#comment:16/1488190155060412</guid>
      <description>&lt;p&gt;
@afercia
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;I generally agree that an empty &lt;code&gt;$title&lt;/code&gt; should be disallowed, on the other hand I'm not sure how to handle this in terms of BC. Also I think we should try to make all the default form controls accessible by default, but if the user explicitly wants to have it in a different way, I think it should be possible. For example, even with a title it is still possible to not print a label (only if you really do not want it) by explicitly setting the &lt;code&gt;label_for&lt;/code&gt; argument to an empty string. I think that should be acceptable since it would otherwise restrict developers too much (if they would like to display the label manually for example, let's say in &lt;code&gt;before&lt;/code&gt; or something like that).
&lt;/li&gt;&lt;li&gt;Was that incorrect somewhere in the patch? I thought it uses explicit association all over.
&lt;/li&gt;&lt;li&gt;Right, that is a bug in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39441/39441.implementation.diff" title="Attachment '39441.implementation.diff' in Ticket #39441"&gt;39441.implementation.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39441/39441.implementation.diff" title="Download"&gt;​&lt;/a&gt; specific to these fields. I'm generally aware of this and considered it in the main patches. When using the default radio group callback, that text "Date Format" would automatically be printed as a fieldset. Since I use a custom callback for these fields though, I need to add the &lt;code&gt;fieldset =&amp;gt; true&lt;/code&gt; argument manually, which I overlooked. So I'll update that later as well.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39441 (Improve the Settings API for accessibility and ease of use.) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 27 Feb 2017 09:58:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39441#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39441#comment:15/1488189495262638</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39441#comment:13" title="Comment 13"&gt;flixos90&lt;/a&gt;:
@flixos90 thanks very much for the updated patch!
&lt;/p&gt;
&lt;p&gt;
1
The &lt;code&gt;$title&lt;/code&gt; parameter of &lt;code&gt;add_settings_field()&lt;/code&gt;: passing a falsy value (empty string, empty array, false, '0', 0, ...) will output a field without a label. This shouldn't be allowed. Labels should be always required. Also, wondering if enforcing a type check would make sense since having the ability to pass something other than a string doesn't look right to me.
&lt;/p&gt;
&lt;p&gt;
2
There are different ways to associate a label to a field:
Explicit association: the label doesn't wrap the field and uses a &lt;code&gt;for&lt;/code&gt; attribute
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;label for="something" ... &amp;gt;Label text&amp;lt;/label&amp;gt;
&amp;lt;input id="something" ... / &amp;gt;
&lt;/pre&gt;&lt;p&gt;
Implicit association: the label wraps the field and doesn't use a `for attribute:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;label ... &amp;gt;Label text
&amp;lt;input id="something" ... / &amp;gt;
&amp;lt;/label&amp;gt;
&lt;/pre&gt;&lt;p&gt;
A mix of the twos:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;label for="something" ... &amp;gt;Label text
&amp;lt;input id="something" ... / &amp;gt;
&amp;lt;/label&amp;gt;
&lt;/pre&gt;&lt;p&gt;
We should only use Explicit association.
&lt;/p&gt;
&lt;p&gt;
4
For example, the Date and Time format groups of radio buttons have a label that shouldn't be a label. Radio buttons already have their label. Instead, "Date Format" and "Time Format" should be legend elements of a fieldset grouping all the radio buttons.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/2QPysvvMWC.png"&gt;&lt;img src="https://cldup.com/2QPysvvMWC.png" alt="https://cldup.com/2QPysvvMWC.png" crossorigin="anonymous" title="https://cldup.com/2QPysvvMWC.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39695 (Add preload headers in redirects) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 27 Feb 2017 09:32:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39695#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39695#comment:4/1488187969050902</guid>
      <description>&lt;p&gt;
Cool, let's go with those function names for now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39695 (Add preload headers in redirects) updated</title>
      
        <dc:creator>onnimonni</dc:creator>

      <pubDate>Mon, 27 Feb 2017 09:19:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39695#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39695#comment:3/1488187186033523</guid>
      <description>&lt;p&gt;
@johnbillion Super cool to hear that you are interested in this.
&lt;/p&gt;
&lt;p&gt;
This was just a proof of concept. I can change the logic to use 3 functions like this instead:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="sd"&gt;/**
 * Checks if this url is internal url. This is be used to check if asset/document can be preloaded.
 *
 * @param $url string
 *
 * @return bool
 */&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;is_internal_wp_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="sd"&gt;/**
 * Creates preload header as string so we can have unit tests
 *
 * @param $url string - asset or document to preload
 * @param $type string - preload type
 *
 * @return string - Header string which can be used with header() function
 */&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;wp_create_preload_header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"document"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="sd"&gt;/**
 * Convenience wrapper for wp_create_preload_header() which adds new preload header
 *
 * @param $url string - asset or document to preload
 * @param $type string - preload type
 *
 * @return void
 */&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;wp_add_preload_header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"document"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Do you have preference in naming these?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39441 (Improve the Settings API for accessibility and ease of use.) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 27 Feb 2017 08:40:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39441#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39441#comment:14/1488184850367780</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39441/39441.4.diff" title="Attachment '39441.4.diff' in Ticket #39441"&gt;39441.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39441/39441.4.diff" title="Download"&gt;​&lt;/a&gt; makes the above improvements:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Do not output a &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; without a &lt;code&gt;for&lt;/code&gt; attribute.
&lt;/li&gt;&lt;li&gt;Support a &lt;code&gt;label_class&lt;/code&gt; argument. This class is applied to the visible element that outputs the field's &lt;code&gt;$title&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Fix a bug with &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt;: Previously a callback string would be printed out instead of calling the callback.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>39441.4.diff attached to Ticket #39441</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 27 Feb 2017 08:36:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39441/39441.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39441/39441.4.diff/1488184618284246</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39441 (Improve the Settings API for accessibility and ease of use.) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 27 Feb 2017 08:35:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39441#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39441#comment:13/1488184557275127</guid>
      <description>&lt;p&gt;
Replying to @afercia (see &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1487614539002584"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/accessibility/p1487614539002584&lt;/a&gt;):
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol&gt;&lt;li&gt;labels must be required: no label, no field output
&lt;/li&gt;&lt;li&gt;we do only explicitly associated label ("for" attribute)
&lt;/li&gt;&lt;li&gt;we don't output stray labels e.g. &lt;code&gt;echo ' &amp;lt;label&amp;gt;' . $field_args['label'] . '&amp;lt;/label&amp;gt;';&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;groups shouldn't have a label for the... group
&lt;/li&gt;&lt;li&gt;we need CSS classes for the labels (or, better, an option to print a screen-reader-text class?)
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;ol&gt;&lt;li&gt;Are you referring to the &lt;code&gt;$title&lt;/code&gt; parameter of &lt;code&gt;add_settings_field()&lt;/code&gt; or to the &lt;code&gt;input_id&lt;/code&gt; / &lt;code&gt;label_for&lt;/code&gt; arguments of &lt;code&gt;$args&lt;/code&gt;? Currently the &lt;code&gt;$title&lt;/code&gt; parameter of &lt;code&gt;add_settings_field()&lt;/code&gt; is already required (which makes sense!), and that one is used as label. The &lt;code&gt;id&lt;/code&gt; attribute is automatically populated with the &lt;code&gt;$id&lt;/code&gt; parameter as well as the &lt;code&gt;label for&lt;/code&gt; attribute is. One can override that behavior by specifying these in &lt;code&gt;$args&lt;/code&gt; and could theoretically remove one of the attributes, but I think this possibility should be left in there for some edge-cases - think someone wants to use a field callback, but then output the label somewhere else: They could currently do so by overriding &lt;code&gt;label_for&lt;/code&gt; to an empty string, but not any more if we disallow empty &lt;code&gt;label_for&lt;/code&gt;. I think providing sane defaults here should be sufficient.
&lt;/li&gt;&lt;li&gt;Not sure I understand what you mean here.
&lt;/li&gt;&lt;li&gt;I agree. In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39441/39441.3.diff" title="Attachment '39441.3.diff' in Ticket #39441"&gt;39441.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39441/39441.3.diff" title="Download"&gt;​&lt;/a&gt; that is only the case in the checkbox callback, so I'll adjust it there.
&lt;/li&gt;&lt;li&gt;I think the code in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39441/39441.3.diff" title="Attachment '39441.3.diff' in Ticket #39441"&gt;39441.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39441/39441.3.diff" title="Download"&gt;​&lt;/a&gt; does not put a label on a group. While in the code it is handled the same way as a regular label, it is actually output as a &lt;code&gt;legend&lt;/code&gt; of a &lt;code&gt;fieldset&lt;/code&gt; in these group cases (which I thought is okay). Correct me if I'm wrong. :)
&lt;/li&gt;&lt;li&gt;I'll put that in the next patch as well.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Just for reference, I'll leave &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1487614972002599"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/accessibility/p1487614972002599&lt;/a&gt; here: We need to figure out whether &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; should be printed inside or outside of fieldsets (only applies to fields that have &lt;code&gt;fieldset&lt;/code&gt; set to true).
&lt;/p&gt;
&lt;p&gt;
For anyone who would like to participate, join today's meeting at 17:00 UTC in &lt;a class="ext-link" href="https://wordpress.slack.com/messages/core/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;#core&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36455 (Call opcache_reset() after plug-in, theme or core update) updated</title>
      
        <dc:creator>Garavani</dc:creator>

      <pubDate>Mon, 27 Feb 2017 08:27:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36455#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36455#comment:13/1488184022174692</guid>
      <description>&lt;p&gt;
This helped me out with my blank page issue after updating to wp 4.7.2. Thanks so much!!!
Anyhow I had to create a php.ini file first in the wp-admin directory.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15448 (wp_mail() sets Content-Type header twice for multipart emails) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 27 Feb 2017 08:08:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15448#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15448#comment:46/1488182926845989</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/15448#comment:45" title="Comment 45"&gt;MattyRob&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Proof of concept:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks @MattyRob, with that I was able to duplicate the scenario. I don't actually think it's a valid use of PHPMailer myself, but respect that people use all sorts of hacks to send email..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>gonom9</dc:creator>

      <pubDate>Mon, 27 Feb 2017 07:50:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:128</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:128/1488181803523094</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/32417#comment:125" title="Comment 125"&gt;celloexpressions&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;code&gt;get_responsive_style()&lt;/code&gt; is setting a &lt;code&gt;widgth: 100%&lt;/code&gt; on everything, which is causing stretching. Most themes should already have &lt;code&gt;img, video { max-width: 100%; }&lt;/code&gt;, and we could also add styles for that scoped with widget instances from the core side, so this function should be removed entirely as I suggested on GitHub.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't think &lt;code&gt;video { max-width: 100% }&lt;/code&gt; is enough to make the video element responsive because it changes into a complex composite element with &lt;code&gt;mediaelement.js&lt;/code&gt; library. Instead, &lt;code&gt;.wp-video { max-width: 100% }&lt;/code&gt; or something is required for responsive video but there is no default theme which has that style. We need to add it. For images, however,  you're right. I'll remove the styles for images.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The UI controls here should be consistent with WP_Customize_Media_Control to provide a consistent user experience. That means:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;There should be a visual placeholder when no media is selected.
&lt;/li&gt;&lt;li&gt;The images shouldn't be clickable (this is what I was referring to @aferica).
&lt;/li&gt;&lt;li&gt;The media should be playable within the widget controls.
&lt;/li&gt;&lt;li&gt;The text within the widget controls needs to be removed.
&lt;/li&gt;&lt;li&gt;I don't think we should bring the remove button over since you can delete the widget, so that part would be different.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
I totally agree with you here. I will update my patch with these improvements.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The latest version of the patch has several JS errors that I can quickly tack down so I can't test and iterate further right now. Once that's fixed I can look at improving the fallback media type behavior.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Could you give me more details about the error?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39854 (REST API: Add gmt_offset to base /wp-json response) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Mon, 27 Feb 2017 07:49:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39854#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39854#comment:11/1488181743566186</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39854#comment:9" title="Comment 9"&gt;rmccue&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;code&gt;gmt_offset&lt;/code&gt; is shimmed in &lt;code&gt;wp_timezone_override_offset()&lt;/code&gt;, so &lt;em&gt;reading&lt;/em&gt; it is always accurate. Only writes are tricky, but we're not handling this here, so no need to do anything special other than &lt;code&gt;get_option()&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks - I always forget how this works 🙈
&lt;/p&gt;
&lt;p&gt;
Given the discussion above, &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39854/39854.4.patch" title="Attachment '39854.4.patch' in Ticket #39854"&gt;39854.4.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39854/39854.4.patch" title="Download"&gt;​&lt;/a&gt; looks good to me, just needs tests.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39753 (wp_mail() under PHP 7 hosted on Windows creates malformed email messages) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 27 Feb 2017 07:43:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39753#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39753#comment:11/1488181428565906</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
PHP states clearly that both data as well as header ought to be terminated with \r\n.
&lt;/p&gt;
&lt;p&gt;
It seems that at some point, WordPress should commit to follow the prescribed behavior as much as possible while being mindful about backward incompatibility with legacy Linux systems.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
My feeling here is that we should stick to PHPMailer's defaults - If PHPMailer releases an updated version in the 5.x series which uses \r\n we'll update to that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39854 (REST API: Add gmt_offset to base /wp-json response) updated</title>
      
        <dc:creator>sagarkbhatt</dc:creator>

      <pubDate>Mon, 27 Feb 2017 07:32:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39854#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39854#comment:10/1488180762837582</guid>
      <description>&lt;p&gt;
-Added gmt_offset and timezone_string field in wp-json response.
-A user can view both without any authentication.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39961 (Make SHORTINIT accessible to plugins and themes.) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 27 Feb 2017 07:25:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39961#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39961#comment:1/1488180326252873</guid>
      <description>wontfix: &lt;p&gt;
Replying to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39961" title="#39961: enhancement: Make SHORTINIT accessible to plugins and themes. (closed: wontfix)"&gt;majick&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol&gt;&lt;li&gt;Is &lt;code&gt;wp-load.php&lt;/code&gt; &lt;em&gt;always&lt;/em&gt; found in the &lt;code&gt;ABSPATH&lt;/code&gt; directory? It would seem so, but just to check for certain, are there any known edge cases where this is actually not so?
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
Yes. &lt;code&gt;ABSPATH&lt;/code&gt; is the path which contains &lt;code&gt;wp-load.php&lt;/code&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol start="2"&gt;&lt;li&gt;Does this create any possible security hole? It would seem not, as simply defining &lt;code&gt;ABSPATH&lt;/code&gt; in a PHP file does not actually do anything and is no more accessible than any other file and so poses no real security risk.
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
Yes, Maybe. It depends on what code is being executed, until WordPress is fully loaded anything is possible. No user authentication or capability checks can be used within a &lt;code&gt;SHORTINIT&lt;/code&gt; scenario, and the majority of the codebase is not loaded.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol start="4"&gt;&lt;li&gt;What is the best way of handling the other (non-direct) file write methods? A check for credentials and using the filesystem to write if they are already available seems to be all that is needed, beyond that seems unnecessary.
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
I'd estimate ~80% of installs can probably write to the filesystem directly. The rest have no file writability.
&lt;/p&gt;
&lt;p&gt;
I don't think this is something we want to add to WordPress overall.
&lt;/p&gt;
&lt;p&gt;
Use of the &lt;code&gt;SHORTINIT&lt;/code&gt; method is not something plugins or themes should utilise - it should be classified as deprecated functionality. I'd argue it shouldn't be used by &lt;strong&gt;anything, ever.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
The argument that WordPress is slow isn't enough to convince me here, WordPress's power is in it's extendability, the ability for other code to hook in and alter your code, the ability for you to alter other plugins code by using hooks, filters, etc, by doing this kind of thing you're explicitly opting out of that, and making it harder for other WordPress developers to use your code as part of theirs. Plus, WordPress isn't exactly as slow as people make it out to be - if you're having speed issues you should consider looking at other parts of your stack, and/or add appropriate caching.
&lt;/p&gt;
&lt;p&gt;
I'm going to be blunt and close this as &lt;code&gt;wontfix&lt;/code&gt;. Another committer can re-open if they deem it interesting to explore, discussion can continue while the ticket is closed, please don't re-open this just to ask me to reconsider it.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>39854.4.patch attached to Ticket #39854</title>
      
        <dc:creator>sagarkbhatt</dc:creator>

      <pubDate>Mon, 27 Feb 2017 07:19:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39854/39854.4.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39854/39854.4.patch/1488179976268056</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39972 (REST API: Allow querying posts by post format) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Mon, 27 Feb 2017 05:52:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39972#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39972#comment:2/1488174757615484</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Filtering by post format could be a nice enhancement, but as Ryan noted, this parameter is currently only supported for reading and editing individual posts.  @sba7elfol can you give us some more information about your use case?
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;WP_Query&lt;/code&gt; docs have an example of querying the &lt;code&gt;post_format&lt;/code&gt; taxonomy - third example in the &lt;a class="ext-link" href="https://codex.wordpress.org/Class_Reference/WP_Query#Taxonomy_Parameters"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Taxonomy Parameters section&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Currently it would be possible to insert these extra query parameters in a plugin or theme using the &lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php#L252"&gt;'rest_post_query' filter&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39875 (PDF previews overwrite existing images with the same name.) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Mon, 27 Feb 2017 05:21:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39875#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39875#comment:20/1488172914583589</guid>
      <description>&lt;p&gt;
I liked the random string for consistency's sake with other resizing, but I'm okay with this approach.
&lt;/p&gt;
&lt;p&gt;
I'd be more comfortable if we stopped accessing &lt;code&gt;/tmp/&lt;/code&gt; directly in tests, but otherwise this looks okay.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18146 (Add user-level timezone setting) updated</title>
      
        <dc:creator>ying-sun</dc:creator>

      <pubDate>Mon, 27 Feb 2017 05:07:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18146#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18146#comment:34/1488172036354806</guid>
      <description>&lt;p&gt;
hi. as someone with limited experience and skill in modifying wordpress, is this patch something far enough along that i can try to use it, or is it only fit for experts as of now? as someone with a site where all users are registered and users are scattered across several time zones, and where one of the functions of this private site is for central calendaring across those time zones, this feature would be absolutely huge for me.
&lt;/p&gt;
&lt;p&gt;
i would appreciate any and all guidance on this. this thread is the most promising thing my research has turned up so far. thank you so much.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37140 (Rotating images doesn't adjust orientation for imagick) reopened</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Mon, 27 Feb 2017 04:23:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37140#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37140#comment:43/1488169420127932</guid>
      <description>&lt;p&gt;
Reopening again for 4.7.3.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #37140 (Rotating images doesn't adjust orientation for imagick) closed</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Mon, 27 Feb 2017 04:21:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37140#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37140#comment:42/1488169302170573</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40129" title="Media: After [40123], Feature check `setImageOrientation`.
In ..."&gt;40129&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40123" title="Media: Reset Exif orientation after rotate in ..."&gt;[40123]&lt;/a&gt;, Feature check &lt;code&gt;setImageOrientation&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40123" title="Media: Reset Exif orientation after rotate in ..."&gt;[40123]&lt;/a&gt;, &lt;code&gt;WP_Image_Editor_Imagick&lt;/code&gt; started using&lt;br /&gt;
&lt;code&gt;Imagick::setImageOrientation&lt;/code&gt; and &lt;code&gt;Imagick::ORIENTATION_TOPLEFT&lt;/code&gt;,&lt;br /&gt;
but had no equivalent feature check.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
While they were introduced more than 9 years ago, it's important&lt;br /&gt;
to double-check everything is available before using with Imagick.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37140" title="#37140: defect (bug): Rotating images doesn't adjust orientation for imagick (closed: fixed)"&gt;#37140&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40129]: Media: After [40123], Feature check `setImageOrientation`.  In ...</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Mon, 27 Feb 2017 04:21:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40129</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40129/1488169301623373</guid>
      <description>&lt;p&gt;
Media: After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40123" title="Media: Reset Exif orientation after rotate in ..."&gt;[40123]&lt;/a&gt;, Feature check &lt;code&gt;setImageOrientation&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40123" title="Media: Reset Exif orientation after rotate in ..."&gt;[40123]&lt;/a&gt;, &lt;code&gt;WP_Image_Editor_Imagick&lt;/code&gt; started using
&lt;code&gt;Imagick::setImageOrientation&lt;/code&gt; and &lt;code&gt;Imagick::ORIENTATION_TOPLEFT&lt;/code&gt;,
but had no equivalent feature check.
&lt;/p&gt;
&lt;p&gt;
While they were introduced more than 9 years ago, it's important
to double-check everything is available before using with Imagick.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37140" title="#37140: defect (bug): Rotating images doesn't adjust orientation for imagick (closed: fixed)"&gt;#37140&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39857 (I can't access my edit posts menu from my dashboard after i change the ...) updated</title>
      
        <dc:creator>rifqi050585</dc:creator>

      <pubDate>Mon, 27 Feb 2017 03:08:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39857#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39857#comment:2/1488164933360226</guid>
      <description>&lt;p&gt;
Hi, @SergeyBiryukov tx for the reply... pardon if i posted here.. i'll try what you'd suggest .. thanx again...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Mon, 27 Feb 2017 01:24:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:127</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:127/1488158683236771</guid>
      <description>&lt;p&gt;
I need to catch up on the recent convos, but just wanted to mention I tested some plugins alongside the patch and didn't seem to have any conflicts. I tested:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Black Studio TinyMCE Widget by @black-studio
&lt;/li&gt;&lt;li&gt;Image Widget by @moderntribe
&lt;/li&gt;&lt;li&gt;Image Widget Deluxe by @mrommel
&lt;/li&gt;&lt;li&gt;Really Simple Image Widget by @rabmalin
&lt;/li&gt;&lt;li&gt;Simple Image Widget by @cedaro
&lt;/li&gt;&lt;li&gt;Swifty Image Widget by WPGens by @goran87
&lt;/li&gt;&lt;li&gt;Webdoone Simple Image Widget by @webdoone
&lt;/li&gt;&lt;li&gt;WP Canvas - Image Widget by @cbaldelomar
&lt;/li&gt;&lt;li&gt;WPB Image Widget by @wpbean
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Note: a couple of the widgets didn't work or had errors. I tested those plugins on another test install without the media widget patch applied, and they had the same errors.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39497 (Can't log out completely without closing my browser) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Mon, 27 Feb 2017 01:11:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39497#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39497#comment:11/1488157887671659</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39497#comment:9" title="Comment 9"&gt;@fwdcar&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
A non-empty &lt;code&gt;WP_SITEURL&lt;/code&gt; short circuits the &lt;code&gt;wp_guess_url()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
In &lt;code&gt;/wp-includes/ms-default-filters.php&lt;/code&gt; we have the following:
&lt;/p&gt;
&lt;pre class="wiki"&gt;// WP_HOME and WP_SITEURL should not have any effect in MS
remove_filter( 'option_siteurl', '_config_wp_home' );
remove_filter( 'option_home', '_config_wp_siteurl' );
&lt;/pre&gt;&lt;p&gt;
that could explain why a gibberish &lt;code&gt;WP_SITEURL&lt;/code&gt; seems to not affect multisites, apart from removing the url-guessing fallback.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39497#comment:10" title="Comment 10"&gt;@johnbillion &lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
It seems that many multisite installs might be missing the &lt;code&gt;siteurl&lt;/code&gt; option, from the &lt;code&gt;wp_sitemeta&lt;/code&gt; table.
&lt;/p&gt;
&lt;p&gt;
In my case I wonder if it's:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;because some plugin removed it or
&lt;/li&gt;&lt;li&gt;because something happened during the initial install or
&lt;/li&gt;&lt;li&gt;because something happened during the many upgrades.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This install is about 8 years old (created January 2009), so it started as a WordPress MU if I remember correctly ;-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19739 (Filters to allow comments on draft &amp; trash post_status posts) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 27 Feb 2017 00:50:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19739#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19739#comment:21/1488156640424845</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/19739/19739.6.diff" title="Attachment '19739.6.diff' in Ticket #19739"&gt;19739.6.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/19739/19739.6.diff" title="Download"&gt;​&lt;/a&gt; is a refresh since &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40128" title="Comments: When commenting on a draft post, display a friendly error ..."&gt;[40128]&lt;/a&gt;, and also removes the final &lt;code&gt;if&lt;/code&gt; statement containing the &lt;code&gt;pre_comment_on_post&lt;/code&gt; hook so it always fires.
&lt;/p&gt;
&lt;p&gt;
Still needs tests.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19739.6.diff attached to Ticket #19739</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 27 Feb 2017 00:48:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19739/19739.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19739/19739.6.diff/1488156499246549</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39972 (REST API: Allow querying posts by post format) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Mon, 27 Feb 2017 00:41:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39972#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39972#comment:1/1488156062375335</guid>
      <description>&lt;p&gt;
Which reference are you referring to? The &lt;a class="ext-link" href="https://developer.wordpress.org/rest-api/reference/posts/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;reference on developer.wordpress.org&lt;/a&gt; doesn't appear to list this as a valid query parameter. While you can set it on a post, this is not the same as the &lt;a class="ext-link" href="https://developer.wordpress.org/rest-api/reference/posts/#arguments"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;collection query parameters&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39854 (REST API: Add gmt_offset to base /wp-json response) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Mon, 27 Feb 2017 00:33:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39854#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39854#comment:9/1488155600126244</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39854#comment:3" title="Comment 3"&gt;jnylen0&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We also need to make sure that &lt;code&gt;gmt_offset&lt;/code&gt; returns an appropriate value even if the &lt;code&gt;timezone_string&lt;/code&gt; is set instead, to e.g. &lt;code&gt;America/New_York&lt;/code&gt;.  These two options behave a bit strangely together.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Also on this point, &lt;code&gt;gmt_offset&lt;/code&gt; is shimmed in &lt;code&gt;wp_timezone_override_offset()&lt;/code&gt;, so &lt;em&gt;reading&lt;/em&gt; it is always accurate. Only writes are tricky, but we're not handling this here, so no need to do anything special other than &lt;code&gt;get_option()&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39854 (REST API: Add gmt_offset to base /wp-json response) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Mon, 27 Feb 2017 00:31:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39854#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39854#comment:8/1488155469137275</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Strong -1 on &lt;code&gt;is_user_logged_in()&lt;/code&gt;, we should always be checking authorization (capabilities) not authentication (presence of user).
&lt;/p&gt;
&lt;p&gt;
Why do we need to restrict this in any case? I see no potential security or privacy issues in exposing this.
&lt;/p&gt;
&lt;p&gt;
Also, if we expose &lt;code&gt;gmt_offset&lt;/code&gt;, we should also expose &lt;code&gt;timezone_string&lt;/code&gt;. The former is not stable (i.e. it changes regularly in timezones with daylight savings), and the latter is the only real one you can depend on over time.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39972 (REST API: Allow querying posts by post format) created</title>
      
        <dc:creator>sba7elfol</dc:creator>

      <pubDate>Mon, 27 Feb 2017 00:30:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39972</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39972/1488155429307412</guid>
      <description>&lt;p&gt;
Although it is listed in the REST API reference,
&lt;/p&gt;
&lt;pre class="wiki"&gt;posts?format=video
&lt;/pre&gt;&lt;p&gt;
shows all posts.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39954 (REST API: Improve date updates if both `date` and `date_gmt` are set) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Mon, 27 Feb 2017 00:27:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39954#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39954#comment:5/1488155227663621</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/39954" title="#39954: enhancement: REST API: Improve date updates if both `date` and `date_gmt` are set (new)"&gt;jnylen0&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If both &lt;code&gt;date&lt;/code&gt; and &lt;code&gt;date_gmt&lt;/code&gt; are specified, &lt;strong&gt;and&lt;/strong&gt; the two values do not match according to the site's current timezone offset, there are a couple of options for improving the behavior:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Update the date fields exactly as requested, even though they will not match the site's current timezone offset.
&lt;/li&gt;&lt;li&gt;Return an error.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
One other condition should be valid: if they match the existing values, then do not alter it, even if the timezone has changed since. (Use case: sending exact response data back to server.)
&lt;/p&gt;
&lt;p&gt;
I think the best approach is: if the dates do not match the existing values, and the date/date_gmt are not exactly gmt_offset apart, return a 400 Bad Request error indicating invalid dates.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19739 (Filters to allow comments on draft &amp; trash post_status posts) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 27 Feb 2017 00:25:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19739#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19739#comment:20/1488155132649719</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39650 (Commenting on a draft post results in blank page) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 27 Feb 2017 00:22:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39650#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39650#comment:20/1488154923123408</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40128" title="Comments: When commenting on a draft post, display a friendly error ..."&gt;40128&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Comments: When commenting on a draft post, display a friendly error message if the user can view the post.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This prevents the unhelpful white screen of death when a user who can view the post (eg. preview it) leaves a comment while the post is in draft.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props sagarprajapati, milindmore22, mayurk, swissspidy&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39650" title="#39650: defect (bug): Commenting on a draft post results in blank page (closed: fixed)"&gt;#39650&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40128]: Comments: When commenting on a draft post, display a friendly error ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 27 Feb 2017 00:22:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40128</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40128/1488154922648550</guid>
      <description>&lt;p&gt;
Comments: When commenting on a draft post, display a friendly error message if the user can view the post.
&lt;/p&gt;
&lt;p&gt;
This prevents the unhelpful white screen of death when a user who can view the post (eg. preview it) leaves a comment while the post is in draft.
&lt;/p&gt;
&lt;p&gt;
Props sagarprajapati, milindmore22, mayurk, swissspidy
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39650" title="#39650: defect (bug): Commenting on a draft post results in blank page (closed: fixed)"&gt;#39650&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36778 (Parent theme editor-style.css cannot be disabled) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 27 Feb 2017 00:05:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36778#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36778#comment:9/1488153907292022</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36778#comment:7" title="Comment 7"&gt;eclare&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
...since the &lt;code&gt;mce_css&lt;/code&gt; filter feels hacky.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No, it's the opposite :) &lt;code&gt;mce_css&lt;/code&gt; is the best way to add or remove any style for the editor. This is the proper way for both themes and plugins. &lt;code&gt;add_editor_style()&lt;/code&gt; was added later as "dumbed down hand-holding" for theme authors as apparently it is too hard for many of them to use filters... I didn't like the idea then, I dislike it even more now. As you mention lots and lots of themes use that to add all kinds of sub-standard CSS to the editor often breaking some functionality or making it behave unexpectedly.
&lt;/p&gt;
&lt;p&gt;
There are several ways to remove theme added stylesheets from the editor. The most straight-forward is:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action( 'admin_init', 'my_remove_parent_styles' );
function my_remove_parent_styles() {
	remove_editor_styles();
	add_editor_style( 'child-editor-style.css' );
}
&lt;/pre&gt;&lt;p&gt;
(note that the child theme's stylesheet is called &lt;code&gt;child-editor-style.css&lt;/code&gt; here).
&lt;/p&gt;
&lt;p&gt;
If the parent theme adds several stylesheets (for example external fonts), it would be better to use &lt;code&gt;mce_css&lt;/code&gt; and loop through them to determine which to keep.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
(theme developers will) edit the parent theme's PHP file instead of Googling around for this particular page for a solution.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
All &lt;em&gt;serious&lt;/em&gt; developers would know better than editing somebody else's files. Perhaps we can add some more help to the &lt;code&gt;add_editor_style()&lt;/code&gt; docblock (and a link to this ticket) to help them out? Patch welcome :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>