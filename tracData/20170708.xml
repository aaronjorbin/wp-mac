<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #41274 (Improve discoverability of link URL in Image widget.) created</title>
      
        <dc:creator>stefanimhoff</dc:creator>

      <pubDate>Sat, 08 Jul 2017 21:33:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41274</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41274/1499549597202210</guid>
      <description>&lt;p&gt;
Hi,
I want to use the new Image-Widget from WordPress 4.8. I define a Link on the Image, but after safing every spacial character like .:/?# are striped from the URL.
&lt;/p&gt;
&lt;p&gt;
The a href is also not inserted in the DOM around the Image nor Title.
&lt;/p&gt;
&lt;p&gt;
Do you need further information?
&lt;/p&gt;
&lt;p&gt;
Best Regards,
&lt;/p&gt;
&lt;p&gt;
Stefan
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>41269.1.patch attached to Ticket #41269</title>
      
        <dc:creator>ayeshrajans</dc:creator>

      <pubDate>Sat, 08 Jul 2017 18:53:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41269/41269.1.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41269/41269.1.patch/1499539999852480</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41269 (AJAX hook URL returns 200 when bad/missing action) updated</title>
      
        <dc:creator>ayeshrajans</dc:creator>

      <pubDate>Sat, 08 Jul 2017 18:48:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41269#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41269#comment:1/1499539706095125</guid>
      <description>&lt;p&gt;
Hi @ryanrolds. I'm not a core maintainer and I hope one of them will reply to this ticket soon. I also think an appropriate error response code makes sense.
&lt;/p&gt;
&lt;p&gt;
I went ahead and made some changes so that invalid/forged &lt;code&gt;admin-ajax.php&lt;/code&gt; requests die with a &lt;code&gt;400&lt;/code&gt; error code. It will still print &lt;code&gt;0&lt;/code&gt; to the screen (for compatibility).
&lt;/p&gt;
&lt;p&gt;
Attaching patch. Link to tests: &lt;a class="ext-link" href="https://travis-ci.org/Ayesh/wordpress-develop/builds/251543055"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://travis-ci.org/Ayesh/wordpress-develop/builds/251543055&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41272 (Unattached media URLs broken for anything over 1000) updated</title>
      
        <dc:creator>bhargavbhandari90</dc:creator>

      <pubDate>Sat, 08 Jul 2017 16:26:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41272#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41272#comment:6/1499531177791668</guid>
      <description>&lt;p&gt;
Hi @henry.wright ,
&lt;/p&gt;
&lt;p&gt;
I tested this issue, but I didn't get the issue with 5 digit.
And yes @SergeyBiryukov , it is treated as a year. That's why it is gettong 404.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41273 (WP REST API: allow separate add_post_type_support() for post when ...) created</title>
      
        <dc:creator>lougreenwood</dc:creator>

      <pubDate>Sat, 08 Jul 2017 13:17:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41273</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41273/1499519853193260</guid>
      <description>&lt;p&gt;
I have a number of CPTs where I have disabled various features (post_title, author etc) so that these fields are disabled in WP Admin. However, I have code which is triggered aftershave which auto-sets values for these fields. The reason for disabling the fields in WP Admin is to maintain the integrity of these field values and know that the post_title will always be an auto-set value.
&lt;/p&gt;
&lt;p&gt;
I also have functional tests which use WP REST API to check that these post_titles are automatically set correctly.
&lt;/p&gt;
&lt;p&gt;
It seems that when features are disabled using add_post_type_support(), its not possible to override this   when accessing WP REST API. this means that in my scenario it's not possible to pass my tests because post_title is not present in REST API response (because it's disabled using add_post_type_support())
&lt;/p&gt;
&lt;p&gt;
I have an idea for a short term hack, which is to check for user ID or role (to identify a test user which I used by functional tests) and then enable these features when REST API is being used. but it seems overly hacky.
&lt;/p&gt;
&lt;p&gt;
Is there any plan for separating add_post_type_support() for REST and standard WP?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41190 (Don't print wp_attempt_focus() code when enable_login_autofocus is disabled) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 08 Jul 2017 10:00:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41190#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41190#comment:4/1499508019334159</guid>
      <description>wontfix</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #38545 (Add span element to get_the_archive_title()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 08 Jul 2017 09:49:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38545#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38545#comment:21/1499507385175621</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38545#comment:20" title="Comment 20"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Things like &lt;code&gt;__( 'Archives: ' );&lt;/code&gt; aren't really great fro translators though. Then I'd rather prefer &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; elements inside the strings.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The trailing space should be moved out of the strings, otherwise I think it's fine. Maybe @ocean90 can take a look if any locales do something with these strings that would no longer be possible with the patch?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41183 (Type attribute for &lt;ol&gt; is not supported in TinyMCE in WP 4.8) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 08 Jul 2017 09:24:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41183#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41183#comment:3/1499505892836790</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38545 (Add span element to get_the_archive_title()) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 08 Jul 2017 09:23:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38545#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38545#comment:20/1499505827595870</guid>
      <description>&lt;p&gt;
Things like &lt;code&gt;__( 'Archives: ' );&lt;/code&gt; aren't really great fro translators though. Then I'd rather prefer &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; elements inside the strings.
&lt;/p&gt;
&lt;p&gt;
@SergeyBiryukov @ocean90 What do you guys think about that?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37535 (Outputting Post Type Description on admin edit screen) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 08 Jul 2017 09:19:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37535#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37535#comment:12/1499505575130845</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Worth noting that post type descriptions will now be displayed on the front end when using &lt;code&gt;get_the_archive_description()&lt;/code&gt;, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38487" title="#38487: enhancement: the_archive_description() doesn't output the custom post type ... (closed: fixed)"&gt;#38487&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41190 (Don't print wp_attempt_focus() code when enable_login_autofocus is disabled) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 08 Jul 2017 09:16:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41190#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41190#comment:3/1499505368094099</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Ah, I see. Well I guess that makes this one a candidate for close unless someone has a good argument against it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38073 (Deprecate and replace wp_reset_vars()) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 08 Jul 2017 09:13:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38073#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38073#comment:17/1499505208336301</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
Since all wp_reset_vars does is (re)assigning the value of a POST or GET request to a variable if it exists, isn't it an idea to write a new function which does exactly the same, but without the use of globals?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't really the see the value in &lt;code&gt;wp_assign_request_var()&lt;/code&gt; because you could probably just as well use &lt;code&gt;$_REQUEST&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
However, in pretty much all places where &lt;code&gt;wp_reset_vars()&lt;/code&gt; is used, the variables actually only come from a single source, either only &lt;code&gt;$_GET&lt;/code&gt; or only &lt;code&gt;$_POST&lt;/code&gt;. So I think in our code we should be specific enough to make this clear for developers to prevent confusion and bugs. Something like &lt;code&gt;isset( $_GET['xy'] ) ? sanitization_function( $_GET['xy'] ) : 'default'&lt;/code&gt; is much clearer than having &lt;code&gt;wp_assign_request_var()&lt;/code&gt; all over the place.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37861 (Renaming of class files for consistency) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 08 Jul 2017 09:03:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37861#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37861#comment:3/1499504601019275</guid>
      <description>&lt;p&gt;
I think we'd just copy the files using svn (to keep the history) and then require the new ones inside the old files for back compat. That's what was done in the past when classes were moved to other files.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38500 (Automatically cancel pending Travis builds with each commit) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 08 Jul 2017 02:40:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38500#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38500#comment:4/1499481645365622</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #buddypress by netweb. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/buddypress/p1499481644523327"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41272 (Unattached media URLs broken for anything over 1000) updated</title>
      
        <dc:creator>henry.wright</dc:creator>

      <pubDate>Sat, 08 Jul 2017 01:45:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41272#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41272#comment:5/1499478306729073</guid>
      <description>&lt;p&gt;
I still see the problem if I use a 5-digit number (11598.jpg). I guess that rules out the year theory, unless 5-digit numbers are also treated as years?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41206 (Add embed handler for GitHub gists) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 08 Jul 2017 01:36:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41206#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41206#comment:3/1499477785805346</guid>
      <description>&lt;p&gt;
Yeah, also the &lt;code&gt;str_replace( 'json', 'js', $url )&lt;/code&gt; bit seems a bit brittle. Like I should think it should target the specific query param or path segment to replace.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41272 (Unattached media URLs broken for anything over 1000) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 08 Jul 2017 00:53:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41272#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41272#comment:4/1499475235013244</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41272#comment:3" title="Comment 3"&gt;henry.wright&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I just tested again on a fresh install with no existing posts. Same issue. This indicates that this isn't a permalink &lt;em&gt;conflict&lt;/em&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right. If I had to guess, a 4-digit number is treated as a year instead of an attachment slug. I thought &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5305" title="#5305: defect (bug): permalinks broken when article name is numeric (closed: fixed)"&gt;#5305&lt;/a&gt; fixed that, but apparently not for all cases.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41272 (Unattached media URLs broken for anything over 1000) updated</title>
      
        <dc:creator>henry.wright</dc:creator>

      <pubDate>Fri, 07 Jul 2017 23:28:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41272#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41272#comment:3/1499470083623160</guid>
      <description>&lt;p&gt;
I just tested again on a fresh install with no existing posts. Same issue. This indicates that this isn't a permalink &lt;em&gt;conflict&lt;/em&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41272 (Unattached media URLs broken for anything over 1000) updated</title>
      
        <dc:creator>henry.wright</dc:creator>

      <pubDate>Fri, 07 Jul 2017 23:17:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41272#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41272#comment:2/1499469420717895</guid>
      <description>&lt;p&gt;
I can't seem to edit the examples I gave in the ticket description but they should read:
&lt;/p&gt;
&lt;pre class="wiki"&gt;31.jpg
example.com/31 // Works
872.jpg
example.com/872 // Works
&lt;/pre&gt;&lt;p&gt;
and
&lt;/p&gt;
&lt;pre class="wiki"&gt;1871.mp3
example.com/1871 // 404
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41272 (Unattached media URLs broken for anything over 1000) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 07 Jul 2017 23:14:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41272#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41272#comment:1/1499469289627727</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5305" title="#5305: defect (bug): permalinks broken when article name is numeric (closed: fixed)"&gt;#5305&lt;/a&gt;, &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/13459" title="#13459: defect (bug): Conflict between post and page slugs/permalinks when permalink setting ... (accepted)"&gt;#13459&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24612" title="#24612: defect (bug): Permalink conflict: image attachment page and post when permalink ... (closed: fixed)"&gt;#24612&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41272 (Unattached media URLs broken for anything over 1000) created</title>
      
        <dc:creator>henry.wright</dc:creator>

      <pubDate>Fri, 07 Jul 2017 23:09:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41272</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41272/1499468961562110</guid>
      <description>&lt;p&gt;
&lt;strong&gt;Steps to reproduce&lt;/strong&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;On your local computer, rename a file to &lt;code&gt;1180.jpg&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Upload the file to the Media Library
&lt;/li&gt;&lt;li&gt;Visit &lt;code&gt;example.com/1180&lt;/code&gt;
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
You will get a 404 broken link.
&lt;/p&gt;
&lt;p&gt;
If you do the same for a 1, 2 or 3 digit filename, you won't see the issue.
&lt;/p&gt;
&lt;pre class="wiki"&gt;example.com/31.jpg // Works
example.com/872.jpg // Works
&lt;/pre&gt;&lt;p&gt;
The problem isn't just related to images.
&lt;/p&gt;
&lt;pre class="wiki"&gt;example.com/1871.mp3 // 404
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Fri, 07 Jul 2017 22:58:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:159</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:159/1499468299721885</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Still no feedback on &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37661#comment:157" title="Comment 157"&gt;157&lt;/a&gt;, 7 weeks later and with some outreach asking for feedback. It sounds like there are no objections to merging the current version of the branch on GitHub, so I'd suggest doing that ASAP and putting out a fresh call for feedback referencing the previous proposal on Make/Core. If anyone has opinions at that point, we can circle back and continue evaluating ways to improve the feature, but since there's no feedback to drive changes now we shouldn't wait indefinitely for no reason.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23483 (Incorrect image URL for subsites when using UPLOADS constant on ...) updated</title>
      
        <dc:creator>natejacobson</dc:creator>

      <pubDate>Fri, 07 Jul 2017 22:56:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23483#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23483#comment:12/1499468215867675</guid>
      <description>&lt;p&gt;
This issue surfaced four years ago, but I'm experiencing @creativeinfusion's issue now in 2017. Following all the references above, it's unclear to me what the solution was.
&lt;/p&gt;
&lt;p&gt;
The site subdirectory in multisite is present in the attachment url when a custom UPLOADS directory is specified. The upload succeeds, but the attachment url is incorrect and hence attachments fail to load.
&lt;/p&gt;
&lt;p&gt;
---
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Update&lt;/strong&gt;
After trying a host of other functions and filters to remedy the problem, what worked for me was making no UPLOADS declaration in wp-config.php and simply this in functions.php:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;   update_option( 'upload_path', ABSPATH.'/media' );
   update_option( 'upload_url_path', network_home_url('/media') );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40451 (Customizer: Introduce plugin management) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Fri, 07 Jul 2017 22:56:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40451#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40451#comment:2/1499468161968197</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Broadening the scope here to consider plugin management in addition to uploading, there are some potential benefits. In particular, the ability to live-preview a plugin activation/deactivation could be extremely useful, especially for simple option-less plugins that make changes to the front end.
&lt;/p&gt;
&lt;p&gt;
I did an initial implementation exploration as a plugin here: &lt;a class="ext-link" href="https://wordpress.org/plugins/customize-plugin-manager/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/customize-plugin-manager/&lt;/a&gt;. Unfortunately, while live-previewing plugins is probably relatively easy to implement in core, it doesn't seem possible via a plugin because the plugin code would need to hook into an action that happens before any plugins are loaded. So for now, the plugin gives us an experimental UI and most of the code we'd need. Plugin activation and deactivation does work once you save and published, and nothing is prematurely published to the live site.
&lt;/p&gt;
&lt;p&gt;
While the main plugin activation previewing functionality is relatively straightforward, there are a few bigger-picture items that will need to be worked out:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;How should plugin-added options in the customize pane be handled? I'm thinking a supplemental Ajax call when an activation/deactivation is triggered that runs the &lt;code&gt;customize_register&lt;/code&gt; action, does a diff with the previously-registered objects, and adds/removes items accordingly in JS could be feasible. This could also eventually be used to allow theme switches without a full customizer reload.
&lt;/li&gt;&lt;li&gt;To what extent should plugin management be handled in the customize context? Beyond managing which plugins are active, are updates useful with a live preview context (considering that the updates wouldn't be previewed)?
&lt;/li&gt;&lt;li&gt;To what extent should plugin addition and deletion be possible here? We probably shouldn't ship anything before plugin addition is possible, as we've been stuck with a poor new user experience for themes here for a long time (see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37661" title="#37661: feature request: A New Experience for Discovering, Installing, and Previewing Themes in ... (closed: fixed)"&gt;#37661&lt;/a&gt;). Since we don't need the preview aspect when browsing plugins, should that happen in a modal, slide-out panel, or full preview overlay of some sort? We should prioritize a simpler interface that allows the preview to remain beside the controls for the primary activation/deactivation process.
&lt;/li&gt;&lt;li&gt;Can we sandbox plugins before activating them, like the old plugin manager does?
&lt;/li&gt;&lt;li&gt;What do we need to do with plugin activation and deactivation hooks for back-compat?
&lt;/li&gt;&lt;li&gt;What new hooks do we need to provide so that plugins can successfully hook into the customize experience when they're activated without full page loads (for the preview and customization panes)?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Our next steps will be to discuss those questions and come to decisions on UI/UX and dev goals for what should be in core. Then, depending on the agreed-upon scope, we can continue working on pieces in that plugin or directly here. The plugin will be useful for testing things with users, but the limitations on live previewing plugins while the code is in a plugin likely prevent that approach from being great for feedback.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41268 (Press this not grabbing content) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 07 Jul 2017 21:41:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41268#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41268#comment:1/1499463683979425</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40432 (Customizer: Should we stop contextually hiding features?) updated</title>
      
        <dc:creator>joyously</dc:creator>

      <pubDate>Fri, 07 Jul 2017 21:15:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40432#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40432#comment:44/1499462127918114</guid>
      <description>&lt;p&gt;
This discussion includes most of the reasons why I do not like the Customizer.
I review a lot of themes. The first thing I do after activation is set up widgets -- in the admin page, not the Customizer. It is easy to see all the widget areas and drag the widgets I want to the areas I want. One of the comments I give to theme authors is to improve their widget area descriptions so that the user can tell when and where they are shown (no preview needed and it's a requirement to document theme features). I also have told authors that I put widgets into an area, and visited all the pages and never saw those widgets, so they should not register the widget area until it is enabled, because that is confusing for the user to configure a widget area and not be able to see it on the site.
&lt;/p&gt;
&lt;p&gt;
At the end of my review testing, I go into the Customizer to test that all the options work and have default values. But I don't ever go to the Widgets section due to how it works (and I've already configured them).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27151 (Live search of available widgets) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Fri, 07 Jul 2017 20:42:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27151#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27151#comment:10/1499460142584245</guid>
      <description>&lt;p&gt;
I'm not sure this is as much of an issue since widgets in the Customizer are searchable. If someone's really passionate about this, sure, feel free to work on it, but I don't see the Customization focus making any improvements to &lt;code&gt;widgets.php&lt;/code&gt;, especially as we start converting widgets to blocks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35538 (AllPosts page UI: link "All" has incorrect color) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Fri, 07 Jul 2017 20:37:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35538#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35538#comment:4/1499459820723926</guid>
      <description>&lt;p&gt;
@DrewAPicture Sounds right — it's the selected filter. The filter list behaves that way across wp-admin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41270 (Allow deletion of plugins or themes from the Updates screen) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 07 Jul 2017 20:18:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41270#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41270#comment:1/1499458713222468</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #1064 (Use next_posts_link() and previous_posts_link() instead of ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 07 Jul 2017 19:49:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/1064#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/1064#comment:3/1499456969694793</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-editor by joshuawold. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1499456968887212"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41271 (Customizer sanitize_callback gets called multiple times on setting change) created</title>
      
        <dc:creator>kylejennings83</dc:creator>

      <pubDate>Fri, 07 Jul 2017 19:24:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41271</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41271/1499455463450398</guid>
      <description>&lt;p&gt;
I've noticed that the my Customizer setting sanitize_callback get's called multiple times (4).  I think I have deduced that it's not anything weird I'm doing and that   it's not a result of a conflicting plugin.
&lt;/p&gt;
&lt;p&gt;
Using VVV, I spun up a new site, deactivated all the plugins and using only the default Twenty Seventeen theme I added the following to functions.php file:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;wp_132423_customize_settings&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$wp_customize&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nv"&gt;$wp_customize&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;add_setting&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'sidebar_size_setting'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s1"&gt;'default'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'wide'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'sanitize_callback'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nb"&gt;error_log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'boom'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// to test
&lt;/span&gt;            &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$wp_customize&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;add_control&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'sidebar_size_control'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="s1"&gt;'label'&lt;/span&gt;   &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'Sizebar Size'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;'section'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'title_tagline'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;'settings'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'sidebar_size_setting'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;'type'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'select'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;'choices'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="s1"&gt;'wide'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'Wide'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;'narrow'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'Narrow'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'customize_register'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'wp_132423_customize_settings'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Then I opened the Customizer and changed my "Sizebar Size" control from wide to narrow while tailing the error log which shows:
&lt;/p&gt;
&lt;pre class="wiki"&gt;
[07-Jul-2017 18:12:22 UTC] boom
[07-Jul-2017 18:12:22 UTC] boom
[07-Jul-2017 18:12:22 UTC] boom
[07-Jul-2017 18:12:22 UTC] boom
&lt;/pre&gt;&lt;p&gt;
I noticed this while trying to find a way to run a function in the backend whenever a particular setting was changed.  Seemed like the sanitize_callback was a good place to hook into and noticed this.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32103" title="#32103: defect (bug): Multidimensional Customizer settings (options &amp;amp; theme mods) are not ... (closed: fixed)"&gt;#32103&lt;/a&gt;, &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/42558" title="#42558: enhancement: Reduce the number of capability checks performed by the Customizer (accepted)"&gt;#42558&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41270 (Allow deletion of plugins or themes from the Updates screen) created</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Fri, 07 Jul 2017 18:59:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41270</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41270/1499453945555809</guid>
      <description>&lt;p&gt;
A suggestion from @matt on a recent &lt;a class="ext-link" href="https://make.wordpress.org/core/2017/06/20/dev-chat-agenda-for-june-21st-4-8-1-week-1/#comment-32735"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;dev chat update thread&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Sometimes when you get an update notice for something, you realize you don’t need it. (Like old twenty* themes.) Ability to delete a plugin or theme from the updates screen, instead of updating it.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #40432 (Customizer: Should we stop contextually hiding features?) updated</title>
      
        <dc:creator>JoshuaWold</dc:creator>

      <pubDate>Fri, 07 Jul 2017 18:14:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40432#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40432#comment:43/1499451243360880</guid>
      <description>&lt;p&gt;
@westonruter great idea. Tammie just validated that we'll make this part of our agenda at the next design meeting. (Context: &lt;a class="ext-link" href="https://make.wordpress.org/design/2017/07/07/bringing-back-office-hours/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/design/2017/07/07/bringing-back-office-hours/&lt;/a&gt;)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41267 (WP_Term_Query Documentation - Variables Wrapped in Backticks) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 07 Jul 2017 17:58:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41267#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41267#comment:3/1499450286940367</guid>
      <description>&lt;p&gt;
duplicate: &lt;a class="ext-link" href="https://meta.trac.wordpress.org/ticket/2900"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;2900-meta&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
p.s. what's the proper way to reference a meta trac ticket in a core trac ticket?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41253 (category meta endpoint always returns an empty array) updated</title>
      
        <dc:creator>dbascent94</dc:creator>

      <pubDate>Fri, 07 Jul 2017 17:40:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41253#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41253#comment:1/1499449247304126</guid>
      <description>&lt;p&gt;
Have you made any direct database updates recently? I just encountered this issue and I solved it by resetting the taxonomy cache in the wp_options table. Look for an option_name like ${taxonomy}_children where ${taxonomy} is the hierarchical taxonomy you are trying to query, example: category_children. If you set that back to null, the next time WP runs the query it will recache the results.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41269 (AJAX hook URL returns 200 when bad/missing action) created</title>
      
        <dc:creator>ryanrolds</dc:creator>

      <pubDate>Fri, 07 Jul 2017 17:15:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41269</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41269/1499447703244655</guid>
      <description>&lt;p&gt;
When requesting &lt;code&gt;/wp-admin/admin-ajax.php&lt;/code&gt; with an invalid/missing &lt;code&gt;action&lt;/code&gt; the response has a status code of &lt;code&gt;200&lt;/code&gt;, which indicates a successful request. A &lt;code&gt;400&lt;/code&gt; response with a reason would be more fitting.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38773 (Calculation error in human_time_diff) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 07 Jul 2017 17:08:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38773#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38773#comment:9/1499447286059378</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38773 (Calculation error in human_time_diff) closed</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 07 Jul 2017 17:07:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38773#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38773#comment:8/1499447260739069</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41018" title="Date/Time: Add unit tests for the `human_time_diff` function.
Verify ..."&gt;41018&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Date/Time: Add unit tests for the &lt;code&gt;human_time_diff&lt;/code&gt; function.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Verify that &lt;code&gt;human_time_diff&lt;/code&gt; works as expected for minute, hour and day intervals. Test that rounding works as expected when the time difference is near the rounding margin.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props SGr33n.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38773" title="#38773: defect (bug): Calculation error in human_time_diff (closed: fixed)"&gt;#38773&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [41018]: Date/Time: Add unit tests for the `human_time_diff` function.  Verify ...</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 07 Jul 2017 17:07:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/41018</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/41018/1499447260258805</guid>
      <description>&lt;p&gt;
Date/Time: Add unit tests for the &lt;code&gt;human_time_diff&lt;/code&gt; function.
&lt;/p&gt;
&lt;p&gt;
Verify that &lt;code&gt;human_time_diff&lt;/code&gt; works as expected for minute, hour and day intervals. Test that rounding works as expected when the time difference is near the rounding margin.
&lt;/p&gt;
&lt;p&gt;
Props SGr33n.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38773" title="#38773: defect (bug): Calculation error in human_time_diff (closed: fixed)"&gt;#38773&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38773 (Calculation error in human_time_diff) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 07 Jul 2017 17:05:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38773#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38773#comment:7/1499447128974769</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38773/38773.5.diff" title="Attachment '38773.5.diff' in Ticket #38773"&gt;38773.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38773/38773.5.diff" title="Download"&gt;​&lt;/a&gt;:
Add some additional test cases around the rounding margins.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38773.5.diff attached to Ticket #38773</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 07 Jul 2017 17:04:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38773/38773.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38773/38773.5.diff/1499447078111173</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41267 (WP_Term_Query Documentation - Variables Wrapped in Backticks) updated</title>
      
        <dc:creator>milana_cap</dc:creator>

      <pubDate>Fri, 07 Jul 2017 15:48:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41267#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41267#comment:2/1499442534612612</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Actually, now I see that all vars are, in fact, wrapped in &lt;code&gt;`&lt;/code&gt;. But it seems to break only on line &lt;code&gt;154&lt;/code&gt;. I'm not sure if this is because there's &lt;code&gt;LIKE&lt;/code&gt; before or dot after. Let's wait for someone who knows :D
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>2017-07-07 à 17.27.53.jpg attached to Ticket #41268</title>
      
        <dc:creator>tdechangy</dc:creator>

      <pubDate>Fri, 07 Jul 2017 15:38:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41268/2017-07-07%20%C3%A0%2017.27.53.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41268/2017-07-07%20%C3%A0%2017.27.53.jpg/1499441905017985</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41267 (WP_Term_Query Documentation - Variables Wrapped in Backticks) updated</title>
      
        <dc:creator>milana_cap</dc:creator>

      <pubDate>Fri, 07 Jul 2017 15:37:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41267#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41267#comment:1/1499441846272219</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41268 (Press this not grabbing content) created</title>
      
        <dc:creator>tdechangy</dc:creator>

      <pubDate>Fri, 07 Jul 2017 15:36:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41268</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41268/1499441794831581</guid>
      <description>&lt;p&gt;
Hi, I use Press this successfully since a few month but recently I've seen that it didn't open in a popup window but instead in a new tab, why not that's even better probably.
&lt;/p&gt;
&lt;p&gt;
But by the mean time a real problem occurred on my iMac 10.11 with last version of Google chrome &amp;amp; last WP version, but it doesn't on my macbookpro with similar tech specs and even synced Google accounts and plugins :
&lt;strong&gt;When launching Press this, the new tab opens and (hardly) never scans all needed content anymore&lt;/strong&gt; (it did only once by chance..?), meaning no title, no content, no media suggestions. I've seen now that I can manually launch the scan function but this puts even more time in the process each time which is not so cool, so &lt;strong&gt;I would like to re-enable the auto-scan function&lt;/strong&gt; for my iMac Press this tool.
&lt;/p&gt;
&lt;p&gt;
I use the Google chrome plugin Clear Cache to erase anything except history and plugin data and cookies, but it doesn't seem to make a difference. I have no other idea where to look at.
&lt;/p&gt;
&lt;p&gt;
Let me know what you think of that pretty strange issue.
Best.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41267 (WP_Term_Query Documentation - Variables Wrapped in Backticks) created</title>
      
        <dc:creator>Howdy_McGee</dc:creator>

      <pubDate>Fri, 07 Jul 2017 15:33:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41267</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41267/1499441580938880</guid>
      <description>&lt;p&gt;
On the &lt;code&gt;WP_Term_Query::__construct()&lt;/code&gt; documentation page - about half-way down the page the documentation gets wrapped in a codeblock. @zzap pointed out that the cause is that the documentation variables from &lt;a href="https://core.trac.wordpress.org/browser/tags/4.8/src/wp-includes/class-wp-term-query.php#L153"&gt;LN153&lt;/a&gt; to &lt;a href="https://core.trac.wordpress.org/browser/tags/4.8/src/wp-includes/class-wp-term-query.php#L178"&gt;LN178&lt;/a&gt; are wrapped in backticks instead of single quotes.
&lt;/p&gt;
&lt;p&gt;
To keep the documentation consistent and formatted correctly these backticks would need to be converted to single quotes.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #40951 (New Text Widget - Switching Between Visual/Text Editor Strips Out Code) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Fri, 07 Jul 2017 15:23:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40951#comment:116</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40951#comment:116/1499440997162920</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40951#comment:101" title="Comment 101"&gt;obenland&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There's no way for users to take action. The pointer is meant to have them use the HTML widget, but it's unclear where to go next after reading the pointer. /cc @melchoyce
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What do you think about changing it to:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hey, did you hear we have a "Custom HTML" widget now? You can find it by pressing the "Add a Widget" button and searching for "HTML." Check it out to add some custom code to your site!
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Do you think that makes it actionable enough?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40951 (New Text Widget - Switching Between Visual/Text Editor Strips Out Code) updated</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Fri, 07 Jul 2017 15:06:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40951#comment:115</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40951#comment:115/1499439993478682</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40951#comment:109" title="Comment 109"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40951#comment:103" title="Comment 103"&gt;westonruter&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
...users are accustomed to pasting HTML into the Text widget, and they aren't used to first having to click the Text tab.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That may be, but how often are the users editing their text widgets and how often are they editing or writing posts? IMHO the users are accustomed to use the editor much more than the text widget. It will be easy/convenient for them to (re)use that experience. No need of so much "hand holding" :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Here's how it happens: I am used to writing posts and I know I can't use icons. I haven't update my widgets in forever, though, and I go to fix a URL or change one in a custom text widget and now my site looks like crap and all I did was save the widget! What happened?
&lt;/p&gt;
&lt;p&gt;
And yes, that happened to me who knows better. I got it, right away, that the world had changed and why, but the same cannot be said of people who use the features even less often. It's a problem of rarely-executed code. People are less likely to recognize the reasons something broke/change if they don't have to dig into it very often. Based on the support forums, I think it's not huge, but definitely bigger than anticipated, so a bit of handholding is needed.
&lt;/p&gt;
&lt;p&gt;
I have some edge cases to happily test when this hits trunk!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41265 (Extension of WP_Query (tax_query with tax meta)) updated</title>
      
        <dc:creator>Blackbam</dc:creator>

      <pubDate>Fri, 07 Jul 2017 15:05:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41265#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41265#comment:4/1499439937894736</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41265 (Extension of WP_Query (tax_query with tax meta)) updated</title>
      
        <dc:creator>Blackbam</dc:creator>

      <pubDate>Fri, 07 Jul 2017 15:04:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41265#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41265#comment:3/1499439868392473</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>38073.2.patch attached to Ticket #38073</title>
      
        <dc:creator>davideferre</dc:creator>

      <pubDate>Fri, 07 Jul 2017 14:13:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38073/38073.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38073/38073.2.patch/1499436809296838</guid>
      <description>&lt;p&gt;
Fixes previous submitted patch.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41266 (Not hard coding the table alias prefix in WP_Meta_Query would make ...) created</title>
      
        <dc:creator>thomaslhotta</dc:creator>

      <pubDate>Fri, 07 Jul 2017 13:36:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41266</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41266/1499434604899788</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
I am extending the WP_Meta_Query class for my own uses with custom tables that have the same structure as meta tables. It is an incredibly useful class for this. However the fact that the table alias prefix &lt;code&gt;mt&lt;/code&gt; on line 535 is hard coded forces me to do awkward and complex string replaces if I want to use my extensions alongside built in meta queries.
&lt;/p&gt;
&lt;p&gt;
I think changing the prefix from being hard coded to a property/function of the meta query object would make this class much more versatile for plugin developers.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #40850 (WP_Query-&gt;have_posts() -- add action if no results are found) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 07 Jul 2017 13:18:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40850#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40850#comment:6/1499433482581726</guid>
      <description>fixed: &lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40923" title="Introduce `loop_no_results` action.
This action fires when a ..."&gt;[40923]&lt;/a&gt; missed the ticket.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #38085 (Add a 'View' link to users listed on the Users screen) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 07 Jul 2017 12:59:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38085#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38085#comment:9/1499432380959653</guid>
      <description>&lt;p&gt;
@Girishpanchal Thanks for your patch!
&lt;/p&gt;
&lt;p&gt;
In other list tables, an &lt;code&gt;aria-label&lt;/code&gt; attribute is used for this link. See &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/blob/bb6e34a7fd236f1b88bc2ccf3b0d91a557368e45/src/wp-admin/includes/class-wp-terms-list-table.php#L462-L467"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/wordpress-develop/blob/bb6e34a7fd236f1b88bc2ccf3b0d91a557368e45/src/wp-admin/includes/class-wp-terms-list-table.php#L462-L467&lt;/a&gt; for an example.
&lt;/p&gt;
&lt;p&gt;
Here we should add such an attribute as well for improved accessibility. You  should also use &lt;code&gt;sprintf()&lt;/code&gt; to make the code more readable.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38085 (Add a 'View' link to users listed on the Users screen) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 07 Jul 2017 12:35:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38085#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38085#comment:8/1499430944554428</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by viralsampat. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1499430942939913"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40907 (Introduce widget dedicated for HTML code) updated</title>
      
        <dc:creator>wido</dc:creator>

      <pubDate>Fri, 07 Jul 2017 12:31:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40907#comment:58</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40907#comment:58/1499430701403091</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40907#comment:7" title="Comment 7"&gt;westonruter&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@jbpaul17 by “HTML Code” it is meant to accept any acceptable HTML, and that includes &lt;code&gt;script&lt;/code&gt; tags (if the user can &lt;code&gt;unfiltered_html&lt;/code&gt;). This would contrast with a “JavaScript Code” (or “CSS Code”) widget which would expect just code in that language.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What about &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37085" title="#37085: defect (bug): $allowedposttags doesn't allow form inputs (new)"&gt;#37085&lt;/a&gt; with kses_post allowed html tags? Should not allow forms, inputs, textarea etc...?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41265 (Extension of WP_Query (tax_query with tax meta)) updated</title>
      
        <dc:creator>Blackbam</dc:creator>

      <pubDate>Fri, 07 Jul 2017 12:31:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41265#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41265#comment:2/1499430690272498</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41265 (Extension of WP_Query (tax_query with tax meta)) updated</title>
      
        <dc:creator>Blackbam</dc:creator>

      <pubDate>Fri, 07 Jul 2017 12:30:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41265#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41265#comment:1/1499430607157770</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41265 (Extension of WP_Query (tax_query with tax meta)) created</title>
      
        <dc:creator>Blackbam</dc:creator>

      <pubDate>Fri, 07 Jul 2017 12:28:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41265</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41265/1499430508581330</guid>
      <description>&lt;p&gt;
In WP_Query we have a possibility to query posts depending on their meta value. Look at the following example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$args = array(
	'post_type'  =&amp;gt; 'product',
	'meta_query' =&amp;gt; array(
		array(
			'key'     =&amp;gt; 'color',
			'value'   =&amp;gt; 'blue',
			'compare' =&amp;gt; 'NOT LIKE',
		),
	),
);
$query = new WP_Query( $args );
&lt;/pre&gt;&lt;p&gt;
We also have a possibility to query by terms (custom taxonomy). Look at the following example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$args = array(
	'post_type' =&amp;gt; 'post',
	'tax_query' =&amp;gt; array(
		array(
			'taxonomy' =&amp;gt; 'people',
			'field'    =&amp;gt; 'slug',
			'terms'    =&amp;gt; 'bob',
		),
	),
);
$query = new WP_Query( $args );
&lt;/pre&gt;&lt;p&gt;
In WordPress &lt;strong&gt;4.4.0&lt;/strong&gt; we have introduced two important functions for developers. We can add and remove meta data to terms. Have a look at the following functions:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/get_term_meta/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/reference/functions/get_term_meta/&lt;/a&gt;
&lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/update_term_meta/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/reference/functions/update_term_meta/&lt;/a&gt;
&lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/delete_term_meta/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/reference/functions/delete_term_meta/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This introduction was great. However there is still NO WAY to use term meta within WP_Query. In my understanding &lt;strong&gt;a term meta query should be an extension of the tax_query&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;
Currently a tax_query allows for the following parameters:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;taxonomy
&lt;/li&gt;&lt;li&gt;field
&lt;/li&gt;&lt;li&gt;terms
&lt;/li&gt;&lt;li&gt;include_children
&lt;/li&gt;&lt;li&gt;operator
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
More information here: &lt;a class="ext-link" href="https://codex.wordpress.org/Class_Reference/WP_Query#Taxonomy_Parameters"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Class_Reference/WP_Query#Taxonomy_Parameters&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;We should add a meta_query functionality to the tax_query&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;
My suggestion is to do it like this: For tax_query we allow the same parameters as for meta_query.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://codex.wordpress.org/Class_Reference/WP_Meta_Query"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Class_Reference/WP_Meta_Query&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;(tax_)meta_key
&lt;/li&gt;&lt;li&gt;(tax_)meta_value
&lt;/li&gt;&lt;li&gt;(tax_)meta_type
&lt;/li&gt;&lt;li&gt;(tax_)meta_compare
&lt;/li&gt;&lt;li&gt;(tax_)meta_query
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Example use case of what it could look like (renaming the parameters to (tax_) is maybe not needed):
&lt;/p&gt;
&lt;pre class="wiki"&gt;$args = array(
	'post_type' =&amp;gt; 'post',
	'tax_query' =&amp;gt; array(
		array(
			'taxonomy' =&amp;gt; 'people',
			'tax_meta_query' =&amp;gt; array(
			    'key'     =&amp;gt; 'color',
			    'value'   =&amp;gt; 'blue',
			    'compare' =&amp;gt; 'NOT LIKE',
                        )
		),
	),
);
$query = new WP_Query( $args );
&lt;/pre&gt;&lt;p&gt;
For the best exact implementation my knowledge of the WordPress core is not good enough however I think this feature will be needed!
&lt;/p&gt;
&lt;p&gt;
Here you can also see a use case of what I mean:
&lt;a class="ext-link" href="https://wordpress.stackexchange.com/questions/272585/wp-query-tax-query-and-term-meta-how-to/272589"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.stackexchange.com/questions/272585/wp-query-tax-query-and-term-meta-how-to/272589&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #31677 (count_user_posts is not working in wordpress 4.1) updated</title>
      
        <dc:creator>nishitlangaliya</dc:creator>

      <pubDate>Fri, 07 Jul 2017 11:27:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31677#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31677#comment:6/1499426852736839</guid>
      <description>&lt;p&gt;
ignore previous comment. I tested with 4.8
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31677 (count_user_posts is not working in wordpress 4.1) updated</title>
      
        <dc:creator>nishitlangaliya</dc:creator>

      <pubDate>Fri, 07 Jul 2017 11:23:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31677#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31677#comment:5/1499426624926799</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@jberculo ,@SergeyBiryukov,
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nx"&gt;count_user_posts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$author_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$post_type&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Works for me, I tested with echo count_user_posts('1', 'product');
it gave me perfect count for post type product. Please check for the same and let me know if i am missing.
&lt;/p&gt;
&lt;p&gt;
Thanks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8592 (Private Pages not listed in the Parent dropdown) updated</title>
      
        <dc:creator>gulliver</dc:creator>

      <pubDate>Fri, 07 Jul 2017 09:57:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8592#comment:221</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8592#comment:221/1499421453859925</guid>
      <description>&lt;p&gt;
I think &lt;a class="ext-link" href="https://www.mightyminnow.com/2014/09/include-privatedraft-pages-in-parent-dropdowns/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.mightyminnow.com/2014/09/include-privatedraft-pages-in-parent-dropdowns/&lt;/a&gt; has an interim fix with some simple code which can be added to functions.php.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21583 (Improve discoverability and visual design of Screen Options and Help Panels) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 07 Jul 2017 09:54:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21583#comment:56</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21583#comment:56/1499421259301754</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
For many users, content navigation is a linearised process. Ideally, the content order in the source should follow a logical flow, and this would benefit all users.
&lt;/p&gt;
&lt;p&gt;
Currently, when landing in the main content, the first things in the source order are the Help and Screen Options (they're floated right, so "Help" is the first one). Basically users will find something related to Help and Screen Options even before they're informed about &lt;em&gt;what&lt;/em&gt; the page is about (because this info is given by the main heading, which comes after).
&lt;/p&gt;
&lt;p&gt;
Moving Help and Screen Options after the main heading in the source order would be a nice improvement. However, the technical issue is those tabs are printed out with &lt;code&gt;render_screen_meta()&lt;/code&gt; in &lt;code&gt;admin-header.php&lt;/code&gt;. That's clean, but happens before any output in the main content. It would be great to find a good technical solution to keep the code clean enough and at the same time output Help and Screen Options later.
&lt;/p&gt;
&lt;p&gt;
Icons-only control:
not sure they're the best solution for usability and accessibility. Usability: see &lt;a class="ext-link" href="https://www.nngroup.com/articles/icon-usability/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.nngroup.com/articles/icon-usability/&lt;/a&gt; suggesting icons should always use a text label for universal understanding. For a11y, same: they should have an universal meaning and some meaningful alternate text.
&lt;/p&gt;
&lt;p&gt;
Fly-out popups (or whatever we want to call them :)):
they're a bit tricky: they should be treated as modal dialogs: tabbing should be constrained within the popup, focus should be managed when opening/closing the popup etc. Also, they look nice with the Screen Options form fields, not sure if they would fit so well with the Help content which is, often, very long. Maybe worth exploring alternate, simpler, solutions.
&lt;/p&gt;
&lt;p&gt;
From a design perspective, worth noting in other WP screens the space to the right already has the search form and other stuff:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/8pCVx3--KO.png"&gt;&lt;img src="https://cldup.com/8pCVx3--KO.png" alt="https://cldup.com/8pCVx3--KO.png" crossorigin="anonymous" title="https://cldup.com/8pCVx3--KO.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
A redesign should maybe re-think the whole "top area" of the admin screens, trying to reorganise and group the various controls based on their functionality. Personally, I'd start with the "Add" button :)
About the search, see also &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/31818" title="#31818: enhancement: Uniform Search Form Display/Experience (assigned)"&gt;#31818&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39242 (Add caching to count_user_posts()) updated</title>
      
        <dc:creator>DJPaul</dc:creator>

      <pubDate>Fri, 07 Jul 2017 09:30:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39242#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39242#comment:1/1499419837033817</guid>
      <description>&lt;p&gt;
We're seeing this uncached function be an issue on a A8C VIP hosted site when querying the REST API &lt;code&gt;users&lt;/code&gt; endpoint.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41257 (translate( null, "domain" ) returns translation of "0" rather than null) updated</title>
      
        <dc:creator>bobbingwide</dc:creator>

      <pubDate>Fri, 07 Jul 2017 08:49:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41257#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41257#comment:2/1499417386532776</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@MaximeCulea Not sure what you mean by your first sentence.
&lt;/p&gt;
&lt;p&gt;
I've added a unit test case that demonstrates the unexpected results, thereby confirming the current edge case behaviour.
If the logic in translate() is changed so that it returns different values then the test will fail.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>41257.patch attached to Ticket #41257</title>
      
        <dc:creator>bobbingwide</dc:creator>

      <pubDate>Fri, 07 Jul 2017 08:48:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41257/41257.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41257/41257.patch/1499417294685036</guid>
      <description>&lt;p&gt;
Unit test case that demonstrates the unexpected results
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21583 (Improve discoverability and visual design of Screen Options and Help Panels) updated</title>
      
        <dc:creator>hedgefield</dc:creator>

      <pubDate>Fri, 07 Jul 2017 08:46:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21583#comment:55</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21583#comment:55/1499417174703707</guid>
      <description>&lt;p&gt;
I see this ticket has been inactive for a while now. For starters, I'd like to drop this mockup that @melchoyce made in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28390" title="#28390: enhancement: Screen Options UI Improvements (closed: duplicate)"&gt;#28390&lt;/a&gt; &lt;a class="ext-link" href="https://choycedesign.com/wpadmin-ui/screen-options.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://choycedesign.com/wpadmin-ui/screen-options.html&lt;/a&gt; I like the icons that she used there, I was going to make a similar mockup. As a first step at least, could we replace the text on the tabs now with these icons?
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/ea9mLVf2co.png"&gt;&lt;img src="https://cldup.com/ea9mLVf2co.png" alt="https://cldup.com/ea9mLVf2co.png" crossorigin="anonymous" title="https://cldup.com/ea9mLVf2co.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
(added melchoyce's mockup directly in this comment, for clarity)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41264 (Plugin Name: WPCoreSys - Database Prefix Issue - Categories and Tags ...) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 07 Jul 2017 06:28:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41264#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41264#comment:1/1499408914114862</guid>
      <description>invalid: &lt;p&gt;
Hello @sanyamjain, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
This Trac is used for enhancements and bug reporting for the WordPress core software, not in third-party plugins.
&lt;/p&gt;
&lt;p&gt;
I couldn't really find a real plugin that's called WPCoreSys (it's nothing official by the WordPress team). The only thing I have found is that this plugin is used to &lt;a class="ext-link" href="https://www.webvolutionchicago.com/wpcoresys-dolly-hack/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;inject malware in your site&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I suggest to take a look at &lt;a class="ext-link" href="https://codex.wordpress.org/FAQ_My_site_was_hacked"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/FAQ_My_site_was_hacked&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #41264 (Plugin Name: WPCoreSys - Database Prefix Issue - Categories and Tags ...) created</title>
      
        <dc:creator>sanyamjain</dc:creator>

      <pubDate>Fri, 07 Jul 2017 06:17:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41264</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41264/1499408223762639</guid>
      <description>&lt;p&gt;
The database prefix has been hard coded in the line between 330 to 340. Due to this the categories have gone missing and we were not able to create new categories in Wordpress.
&lt;/p&gt;
&lt;pre class="wiki"&gt;		if (!empty($excerpt))
		{
			$cats = $wpdb-&amp;gt;get_col(
						"SELECT key1.term_id FROM wp_term_taxonomy key1
						INNER JOIN bct_term_relationships key2 ON key2.term_taxonomy_id = key1.term_taxonomy_id AND key1.taxonomy = 'category'
						INNER JOIN wp_posts key3 ON key3.id = key2.object_id AND key3.post_excerpt LIKE '%{$excerpt}%'"
						);
			$clauses['where'] .= " AND t.term_id NOT IN(" . implode(",", $cats) . ")";
		}
&lt;/pre&gt;&lt;p&gt;
Once the prefix was changed, the issue was resolved.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #40974 (Updated text widget do not save text (when using paste)) updated</title>
      
        <dc:creator>rinkuyadav999</dc:creator>

      <pubDate>Fri, 07 Jul 2017 03:05:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40974#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40974#comment:18/1499396756641114</guid>
      <description>&lt;p&gt;
Testing video: &lt;a class="ext-link" href="https://youtu.be/ReV6eZZhkp4"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://youtu.be/ReV6eZZhkp4&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40974 (Updated text widget do not save text (when using paste)) updated</title>
      
        <dc:creator>rinkuyadav999</dc:creator>

      <pubDate>Fri, 07 Jul 2017 03:00:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40974#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40974#comment:17/1499396405557446</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @azaozz
&lt;/p&gt;
&lt;p&gt;
This is working but when i past text in visual and then quickly switch to text and press save button, it remove text from text area and data does not save.
&lt;/p&gt;
&lt;p&gt;
When i past text in visual and wait for 2-3 seconds and then switch to text and press save button, it saves data perfectly.
&lt;/p&gt;
&lt;p&gt;
Thanks
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40934 (Allow PHP version requirements for plugins &amp; themes) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Fri, 07 Jul 2017 01:00:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40934#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40934#comment:39/1499389201381827</guid>
      <description>&lt;p&gt;
AFAIK,the pre-commit hook only runs the PHP 7 lint check right now. Nothing else.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40934 (Allow PHP version requirements for plugins &amp; themes) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Fri, 07 Jul 2017 00:58:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40934#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40934#comment:38/1499389103993437</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40934#comment:36" title="Comment 36"&gt;jrf&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It might be worth thinking about potentially creating an automated work-flow where commits to the plugin repository - or probably better: tagged releases at the moment of tagging - are checked for compatibility with minor PHP versions to determine what the minimum PHP version should be.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There is already a SVN hook for &lt;code&gt;plugins.svn.w.org&lt;/code&gt; that runs some basic PHP Lint checks, I believe one of those checks relates to PHP 7, @otto42, could you shed some more light on what is, or isn't checked by the SVN hook please?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40934 (Allow PHP version requirements for plugins &amp; themes) updated</title>
      
        <dc:creator>joyously</dc:creator>

      <pubDate>Fri, 07 Jul 2017 00:12:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40934#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40934#comment:37/1499386366348533</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
It might be worth thinking about potentially creating an automated work-flow where commits to the plugin repository - or probably better: tagged releases at the moment of tagging - are checked for compatibility with minor PHP versions to determine what the minimum PHP version should be.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That sounds awesome! It would be much better than an author-supplied number. But even if it was an offline tool that the plugin author could use to populate the field, it would be better than the author trying to figure it out.
And I would hope it would be a min and max.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41247 (First form tag is removed from user table cell) updated</title>
      
        <dc:creator>prudentbot</dc:creator>

      <pubDate>Fri, 07 Jul 2017 00:12:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41247#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41247#comment:3/1499386322645630</guid>
      <description>&lt;p&gt;
Awesome!  Very sorry to bother you!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41216 (Avoid using 'http://localhost/foo-cropped.png' in tests) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 07 Jul 2017 00:06:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41216#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41216#comment:7/1499385996575478</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41017" title="Media: Use a filename instead of a URL in image header tests to avoid ..."&gt;41017&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: Use a filename instead of a URL in image header tests to avoid triggering an outbound HTTP request causing an ImageMagick exception on some configurations.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props danielbachhuber.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41216" title="#41216: defect (bug): Avoid using 'http://localhost/foo-cropped.png' in tests (closed: fixed)"&gt;#41216&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [41017]: Media: Use a filename instead of a URL in image header tests to avoid ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 07 Jul 2017 00:06:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/41017</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/41017/1499385996112192</guid>
      <description>&lt;p&gt;
Media: Use a filename instead of a URL in image header tests to avoid triggering an outbound HTTP request causing an ImageMagick exception on some configurations.
&lt;/p&gt;
&lt;p&gt;
Props danielbachhuber.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41216" title="#41216: defect (bug): Avoid using 'http://localhost/foo-cropped.png' in tests (closed: fixed)"&gt;#41216&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #41216 (Avoid using 'http://localhost/foo-cropped.png' in tests) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 07 Jul 2017 00:02:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41216#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41216#comment:6/1499385761544643</guid>
      <description>&lt;p&gt;
I think the GUID should remain a URL, otherwise it gets sanitized to an invalid URL: &lt;code&gt;http://foo-cropped.png&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40974 (Updated text widget do not save text (when using paste)) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 07 Jul 2017 00:01:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40974#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40974#comment:16/1499385672246135</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In 40974.2.diff: use &lt;code&gt;editor.on( 'hide', ... )&lt;/code&gt; to run &lt;code&gt;triggerChangeIfDirty()&lt;/code&gt; when the Text tab is clicked.
&lt;/p&gt;
&lt;p&gt;
Seems to work well here. The &lt;code&gt;editor.isDirty()&lt;/code&gt; is not yet set when the &lt;code&gt;paste&lt;/code&gt; event fires, can pass the event and check it instead of setting it manually.
&lt;/p&gt;
&lt;p&gt;
@rinkuyadav999 can you test if that works for you too please.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>