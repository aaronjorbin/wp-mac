<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #51390 (PHP error: Trying to access array offset on value of type bool in ...) updated</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Sun, 04 Oct 2020 21:35:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51390#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51390#comment:10/1601847311942114</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks @Mista-Flo this tests well and unit tests are passing, moving forward for a committer review.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In &lt;a href="https://core.trac.wordpress.org/attachment/ticket/51390/51390.4.diff"&gt;51390.4.diff&lt;/a&gt; the only change was adding the missing period to the comment sentence in test_post_format_doing_it_wrong.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>51390.4.diff attached to Ticket #51390</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Sun, 04 Oct 2020 21:34:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/51390/51390.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/51390/51390.4.diff/1601847291276016</guid>
      <description>&lt;p&gt;
Minor refresh to make the comment a sentence.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #51404 ('Change logo' button in customizer doesn't work in Firefox) closed</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Sun, 04 Oct 2020 21:18:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51404#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51404#comment:5/1601846337686087</guid>
      <description>invalid: &lt;p&gt;
Hi @majorlabel,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Unfortunately, support for individual installations isn't available in Trac, but you'll be able to find help in &lt;a class="ext-link" href="https://wordpress.org/support/forums/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the WordPress support forums&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If it turns out there is a bug in autoupdates that leads to this issue in the Customizer, it would be best to open a dedicated Trac ticket for that in the upgrade component. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For now, as there doesn't appear to be an issue in the Customizer (I am also unable to replicate it in Firefox 81 on a fresh installation with a default theme), I'm going to close this ticket, but feel free to reopen it if steps to replicate the issue reliably can be developed.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #51445 ([Multiple Bundled Themes] Add theme support for navigation-widgets) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 04 Oct 2020 20:14:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51445#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51445#comment:2/1601842468403904</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by hareesh-pillai. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1601842466404000"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51445 ([Multiple Bundled Themes] Add theme support for navigation-widgets) updated</title>
      
        <dc:creator>Hareesh Pillai</dc:creator>

      <pubDate>Sun, 04 Oct 2020 20:13:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51445#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51445#comment:1/1601842408026595</guid>
      <description>&lt;p&gt;
Twenty Thirteen and later themes have declared HTML5 support. &lt;br /&gt;
51445.diff adds &lt;code&gt;navigation-widgets&lt;/code&gt; type to the &lt;code&gt;html5&lt;/code&gt; feature.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>collage.png attached to Ticket #51445</title>
      
        <dc:creator>Hareesh Pillai</dc:creator>

      <pubDate>Sun, 04 Oct 2020 20:09:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/51445/collage.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/51445/collage.png/1601842170120134</guid>
      <description>&lt;p&gt;
Comparison of the HTML structure before and after applying the patch for Twenty Twenty theme
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>51445.diff attached to Ticket #51445</title>
      
        <dc:creator>Hareesh Pillai</dc:creator>

      <pubDate>Sun, 04 Oct 2020 20:08:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/51445/51445.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/51445/51445.diff/1601842084246636</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #51445 ([Multiple Bundled Themes] Add theme support for navigation-widgets) created</title>
      
        <dc:creator>Hareesh Pillai</dc:creator>

      <pubDate>Sun, 04 Oct 2020 20:07:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51445</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51445/1601842044593143</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/48170" title="#48170: enhancement: Switch link list widgets to nav blocks (closed: fixed)"&gt;#48170&lt;/a&gt; introduced a theme support feature to wrap widgets displaying a lists of links within the &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; element. All core WordPress themes should support this feature to improve semantics and accessibility.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #51442 (Cannot add youtube links since Gutenberg update to 9.1.0) updated</title>
      
        <dc:creator>yeoric</dc:creator>

      <pubDate>Sun, 04 Oct 2020 17:00:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51442#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51442#comment:4/1601830832027240</guid>
      <description>&lt;p&gt;
I am beginning to suspect that this may indeed be not a functional error but a case of wrong error message, like (just an example) translating a timeout error because of a slow network connection into a completely misleading error message. Juts now it works again …&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51439 (Docs: Undocumented @global instances) updated</title>
      
        <dc:creator>davidbaumwald</dc:creator>

      <pubDate>Sun, 04 Oct 2020 16:25:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51439#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51439#comment:4/1601828714864011</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@ravipatel Looking at these patches more in depth, it looks like most of these added global vars are not necessary, as they are already defined earlier in execution. For example, &lt;a href="https://core.trac.wordpress.org/attachment/ticket/51439/51439-edit-form-comment.php.patch"&gt;this patch&lt;/a&gt; is not necessary.  &lt;code&gt;edit-form-comment.php&lt;/code&gt; is an included template, and both &lt;code&gt;$action&lt;/code&gt; and &lt;code&gt;$comment&lt;/code&gt; are defined in the parent file &lt;code&gt;src/wp-admin/comment.php&lt;/code&gt;.  Same goes for the &lt;code&gt;$typenow&lt;/code&gt; and &lt;code&gt;$wpdb&lt;/code&gt; in &lt;code&gt;src/wp-admin/edit.php&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm adding the &lt;code&gt;close&lt;/code&gt; keyword because I think this ticket is not needed.  I'll leave it open for a couple of days to see if anyone think s this does deserve to be a standalone ticket.  Please ensure that these variables are indeed undefined at runtime, if they aren't I suggest adding to &lt;a href="https://core.trac.wordpress.org/ticket/50768"&gt;this ticket&lt;/a&gt; instead.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #46635 (Improve identifying of non–trivial callbacks in hooks) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Sun, 04 Oct 2020 15:24:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/46635#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/46635#comment:27/1601825080239613</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/569"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #569&lt;/a&gt; on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/wordpress-develop&lt;/a&gt; by &lt;a class="ext-link" href="https://github.com/gmazzap"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;gmazzap&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
Trac ticket: &lt;a href="https://core.trac.wordpress.org/ticket/46635"&gt;https://core.trac.wordpress.org/ticket/46635&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
---&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
## Premise&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Now that WordPress is having PHP 5.6 as minimum version, and it is working toward plans to move forward the minimum version at a predictable pace, the usage of closures, or even _short closures_, is something that &lt;a class="ext-link" href="https://twitter.com/markjaquith/status/1309480913047355392"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;many developers will be willling to use&lt;/a&gt;, many already do.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
However, it is "officially"&amp;lt;sup&amp;gt;1&amp;lt;sup&amp;gt; considered bad practice to use those because it is not possible to remove hook callbacks added that way.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In the linked ticket, Rarst proposed make it possible to remove hooks by a sort of predictable "string representation" of closures, and more generally for hooks callbacks that make use of object instances.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Rarst's proposal is inspired by what &lt;a class="ext-link" href="https://brain-wp.github.io/BrainMonkey/docs/wordpress-hooks-added.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Brain Monkey&lt;/a&gt;, a testing tool for WordPress that I happen to write a few ago and still maintain.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
What Brain Monkey does, and what Rarst proposes is however something that will make calculation and retrieval of "string representation" too expensive for something like hooks.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In this PR I will _not_ support all the possibilities listed by Rarst in the Trac ticket, but it I will support a basic subset (with some variations) but keeping an open door to the possibility to extend the support for other possibilities in a later iteraction.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
## Scope&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When I started working on this PR I had in mind the following priorities:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;do not break backward compatibility in &lt;strong&gt;*any&lt;/strong&gt;* way, even supporting code that makes use of "internal" or "private" WordPress functions
&lt;/li&gt;&lt;li&gt;allow the check (&lt;code&gt;has_filter&lt;/code&gt;/ &lt;code&gt;has_action&lt;/code&gt;) and the removal of hook callbacks supporting all the possibility offered by PHP callable
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
## Implementation&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Assuming a &lt;code&gt;functions.php&lt;/code&gt; that contain the following code:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
add_action('some_hook', function () { /* some code here */ });&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
add_filter('some_other_hook', [new SomeObject, 'a_method']);&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If merged, this PR will make possible to check and remove the added hooks like so:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
&lt;em&gt; Check&lt;br /&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
has_action('some_hook', 'function()@functions.php'); &lt;em&gt; true&lt;br /&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
has_filter('some_other_hook', 'SomeObject-&amp;gt;a_method'); &lt;em&gt; true&lt;br /&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
&lt;em&gt; Remove&lt;br /&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
remove_action('some_hook', 'function()@functions.php');&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
remove_action('some_other_hook', 'SomeObject-&amp;gt;a_method');&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Please note that:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;for closures, the file name to use after the &lt;code&gt;@&lt;/code&gt; is the *basename*, not the full path.
&lt;/li&gt;&lt;li&gt;in both cases namespace is relevant.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
### Namespace&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Let's assume our  &lt;code&gt;functions.php&lt;/code&gt; contains:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
namespace My\Awesome\Plugin;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
use Another\Name\Space\SomeObject;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
add_action('some_hook', function () { /* some code here */ });&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
add_filter('some_other_hook', [new SomeObject, 'a_method']);&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If merged, this PR will make possible to check and remove the added hooks like so:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
remove_action('some_hook', 'My\Awesome\Plugin\function()@functions.php');&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
remove_action('some_other_hook', 'Another\Name\Space\SomeObject-&amp;gt;a_method');&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Note how the namespace is the namespace where classes/closures are _defined_ not where they are _used_ even if for closures the great majority of times the namespace where they are defined is the same where they are used.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
There're peculiar cases that it is worth to see in detail.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
### Anonymous classes&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
PHP does not allow to retrieve the namespace of &lt;a class="ext-link" href="https://www.php.net/manual/en/language.oop5.anonymous.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;anonymous classes&lt;/a&gt;. In other words, anonymous classes are always in the root namespace. Similarly to what is done for anonymous functions (aka closures) the way anonymous classes can be identified is &lt;code&gt;class()@filename.php&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
However, unlike functions, classes can extend other classes. This is captured by the code in this PR that requires the parent class to be included in the "string representation" of the class.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For example:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
$object1 = new class {&lt;br /&gt;
  &lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
public function toArray() {&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
return [];&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
};&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
$object2 = new class extends ArrayObject {&lt;br /&gt;
  &lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
public function toArray() {&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
return $this-&amp;gt;getArrayCopy();&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
};&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
add_filter('some_filter', [$object1, 'toArray']);&lt;br /&gt;
add_filter('some_filter', [$object2, 'toArray']);&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt; Remove filter using $object1&lt;br /&gt;
remove_filter('some_filter', 'class()filename.php');&lt;br /&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
&lt;em&gt; Remove filter using $object2&lt;br /&gt;
remove_filter('some_filter', 'class()ArrayObject@filename.php');&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
Remember that namespace does not affect "callback id" for anonymous classes but does affect id generated for closures and named classes.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
### Invokable objects&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In PHP any object implementing a method named &lt;code&gt;__invoke()&lt;/code&gt; &lt;a class="ext-link" href="https://www.php.net/manual/en/language.oop5.magic.php#object.invoke"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;can be used as a callback&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Anonymous funcitons are behind the scenes nothing more than instances of a class (&lt;code&gt;Closure&lt;/code&gt;) that has a &lt;code&gt;__invoke()&lt;/code&gt; method. (see &lt;a class="ext-link" href="https://3v4l.org/OXpBe"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://3v4l.org/OXpBe&lt;/a&gt;).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Whne using an invokable object, we can use the &lt;code&gt;__invoke()&lt;/code&gt; as hook callback both explicitly and implicitly. For example:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
class MyInvokable {&lt;br /&gt;
  &lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
public function &lt;span class="underline"&gt;invoke() {&lt;br /&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
return true;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
$invokable = new MyInvokable;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt; Following two lines do &lt;strong&gt;exact same thing&lt;/strong&gt;:&lt;br /&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
add_filter('an_hook', $invokable);&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
add_filter('an_hook', [$invokable, '&lt;span class="underline"&gt;invoke']);&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;
For this reason the "string representation" used by this PR will use exact same representation for both. For example, *both* the two filters added in the snippet right above can be removed like this:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
remove_filter('an_hook', 'MyInvokable-&amp;gt;&lt;span class="underline"&gt;invoke');&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;
To see how things works together, we can see an anonymous class that extend another class and is also invokable:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
$invokable = new class extends AnotherClass {&lt;br /&gt;
  &lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
public function &lt;span class="underline"&gt;invoke() {&lt;br /&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
return true;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
};&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt; Hook added like this:&lt;br /&gt;
add_filter('an_hook', $invokable);&lt;br /&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
&lt;em&gt; Can be removed like this:&lt;br /&gt;
remove_filter('an_hook', 'class()AnotherClass-&amp;gt;&lt;span class="underline"&gt;invoke');&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
## Backward compatility&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This PR is 100% backward compatible.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Code that uses "static" callbacks, like funciton names or static methods are &lt;strong&gt;not&lt;/strong&gt; affected at all.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For code that make use of object instances (and that ioncludes anonymus functions) all the current approaches continue to work.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For example, let's assume the following code:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
global $func, $object; &lt;br /&gt;
$func =  function () { /* some code here */ };&lt;br /&gt;
$object = new SomeObject;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
add_action('some_hook', $func);&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
add_filter('some_other_hook', [$object, 'a_method']);&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Currently, we can remove these hooks, in some other file, like this:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
global $func, $object;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
remove_action('some_hook', $func);&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
remove_filter('some_other_hook', [$object, 'a_method']);&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If we have access to exact same instance that was used to add the hooks, we can alos remove the hooks. This PR continue to support this approach.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Even more, something that is not really documented is that we can use &lt;a class="ext-link" href="https://www.php.net/manual/en/function.spl-object-hash.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;`spl_object_hash`&lt;/a&gt; to remove hooks that make use of objects. For example, following code has the exact same effect of the code right above:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
global $func, $object;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
remove_action('some_hook', spl_object_hash($func));&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
remove_filter('some_other_hook', spl_object_hash($object) . 'a_method');&lt;br /&gt;
&lt;em&gt; or alternatively:&lt;br /&gt;
remove_filter('some_other_hook', _wp_filter_build_unique_id(&lt;em&gt;, [$object, 'a_method'], false);&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/em&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
This approach, even if can be considered quite "hackish", continues to be supported by this PR.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
## A new approach: custom callback ID&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As *additional* functionality, that works side-by-side with the workflow described above, this PR introduces a new parameter to &lt;code&gt;add_action&lt;/code&gt; and &lt;code&gt;add_filter&lt;/code&gt; that allow to define a custom ID for callbacks that make use of object instances.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For example, hooks added like this:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
class MyPlugin {&lt;br /&gt;
  &lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
public function init() {&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
add_action('init', [$this, 'init'], 10, 2, 'my-plugin/init');&lt;br /&gt;
add_action('wp', [$this, 'wp'], 10, 2, 'my-plugin/wp');&lt;br /&gt;
add_action('pre_get_posts', [$this, 'pre_get_posts'], 10, 2, 'my-plugin/pre_get_posts');&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Can be removed like this:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
remove_action('init', 'my-plugin/init');&lt;br /&gt;
remove_action('wp', 'my-plugin/wp');&lt;br /&gt;
remove_action('pre_get_posts', 'my-plugin/pre_get_posts');&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The additional ID is entirely optional, but when it is used the &lt;strong&gt;only&lt;/strong&gt; way to check or remove the hook will be the custom ID.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In the current implementation the custom ID is only supported for callbacks that make use of object instances, any custom ID used for callbacks represented by plain funciton names or static methods will be ignored and will end up in &lt;code&gt;_doing_it_wrong_&lt;/code&gt; being called (assuming that funcitons isalredy loaded).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
## Tests&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This PR includes small change to the WordPress unit tests suite to prevent existing tests to fail, however the new funcionality is not really tested in here.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The reason is that not being familiar with development practices at core I'm not sure how I should test things that require PHP 7+ (like anonymous classes) or closusres declared in a namespaced context.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thsi is why to test my code I created a &lt;a class="ext-link" href="https://github.com/gmazzap/wp-hooks-tests"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;separate repository&lt;/a&gt; where I copied &lt;code&gt;plugin.php&lt;/code&gt; and &lt;code&gt;class-wp-hook.php&lt;/code&gt; from this PR and &lt;a class="ext-link" href="https://github.com/gmazzap/wp-hooks-tests/blob/main/tests/cases/HookCallbacksSerializationTest.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;I tested&lt;/a&gt; them to ensure the new functionality works as expected and that backward compatibility is ensured.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
## Gotchas&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Even if this PR took backward compatibility as primary goal there's a sort-of edge case that will break if it woudl be merged.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Consider following code:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
add_action('say_hi', function() { echo "Hello"; });&lt;br /&gt;
add_action('say_hi', function() { echo "World"; });&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
do_action('say_hi');&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This code will actually end in *"Hello World"* being printed, because _both_ closures are being added, even if the hook and priority are the same. With this PR merged the second closure will override the first, and executing the code only *"World"* is printed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The reason is that both closures are "serialized" as &lt;code&gt;function()@filename.php&lt;/code&gt; and this identifier is identical for both (assuming both are placed in the same file).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If this look bad to you, please notice that this is something that *already* happens for "static" callbacks and even for object methods uisng same instance.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For example:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
function say_hi() {&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
echo "Hi";&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
add_action('say_hi', 'say_hi');&lt;br /&gt;
add_action('say_hi', 'say_hi');&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
do_action('say_hi');&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The code above prints *"Hi"* once, not twice.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Or consider the following:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
public MyPlugin {&lt;br /&gt;
  &lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
public function add_test_hook() {&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
add_action('test', [$this, 'test']);&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
  &lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
public function test() {&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
static $counter = 1;&lt;br /&gt;
echo "Counter: $counter";&lt;br /&gt;
$counter++;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
$plugin = new MyPlugin;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
$plugin-&amp;gt;add_test_hook();&lt;br /&gt;
$plugin-&amp;gt;add_test_hook();&lt;br /&gt;
$plugin-&amp;gt;add_test_hook();&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
do_action('test');&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The code above will print *"Counter: 1"* even if &lt;code&gt;add_test_hook&lt;/code&gt; was called 3 times. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
What I mean is that by using same hook, and same callback, and same priority WordPress _already_ add the hook only once so I believe that what this PR does is actually to add more consistence.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Of course, by defining closures in different files, or even just using a different priority will be enough to make them distinguable.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For example the following code:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
{{{php&lt;br /&gt;
add_action('say_hi', function() { echo "Hello"; });&lt;br /&gt;
add_action('say_hi', function() { echo "World"; }, 11);&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
do_action('say_hi');&lt;br /&gt;
}}}&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Will print *"Hello World"* as expected.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
---&lt;br /&gt;
&lt;strong&gt;This Pull Request is for code review only. Please keep all other discussion in the Trac ticket. Do not merge this Pull Request. See &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/contribute/git/github-pull-requests-for-code-review/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;GitHub Pull Requests for Code Review&lt;/a&gt; in the Core Handbook for more details.&lt;/strong&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
&amp;lt;sup&amp;gt;1&amp;lt;sup&amp;gt; For "officially" I mean _for code to be written for core_.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42663 (Imagick support for stream wrappers) updated</title>
      
        <dc:creator>p00ya</dc:creator>

      <pubDate>Sun, 04 Oct 2020 14:40:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42663#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42663#comment:23/1601822452406262</guid>
      <description>&lt;p&gt;
Please take another look at &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/521"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/wordpress-develop/pull/521&lt;/a&gt; (updated to use a custom stream wrapper instead of &lt;code&gt;file://&lt;/code&gt; URLs).  I borrowed some of calin's code.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>51439-edit-form-comment.php.patch attached to Ticket #51439</title>
      
        <dc:creator>ravipatel</dc:creator>

      <pubDate>Sun, 04 Oct 2020 08:20:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/51439/51439-edit-form-comment.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/51439/51439-edit-form-comment.php.patch/1601799614482401</guid>
      <description>&lt;p&gt;
$comment &amp;amp; $action not defined edit-form-comment.php
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>51439.patch attached to Ticket #51439</title>
      
        <dc:creator>ravipatel</dc:creator>

      <pubDate>Sun, 04 Oct 2020 07:59:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/51439/51439.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/51439/51439.patch/1601798368362861</guid>
      <description>&lt;p&gt;
Combile all chnages + $post_id missing to define on comment file.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>51439-ajax-actions.php.patch attached to Ticket #51439</title>
      
        <dc:creator>ravipatel</dc:creator>

      <pubDate>Sun, 04 Oct 2020 07:22:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/51439/51439-ajax-actions.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/51439/51439-ajax-actions.php.patch/1601796159426777</guid>
      <description>&lt;p&gt;
Added file patch another file - undefined variable
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #51442 (Cannot add youtube links since Gutenberg update to 9.1.0) updated</title>
      
        <dc:creator>yeoric</dc:creator>

      <pubDate>Sun, 04 Oct 2020 06:59:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51442#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51442#comment:3/1601794744122113</guid>
      <description>&lt;p&gt;
Sorry, read "post" for "page" throughout.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51442 (Cannot add youtube links since Gutenberg update to 9.1.0) updated</title>
      
        <dc:creator>yeoric</dc:creator>

      <pubDate>Sun, 04 Oct 2020 06:58:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51442#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51442#comment:2/1601794701293016</guid>
      <description>&lt;p&gt;
But then it happened again. I worked on a page for a while, all was well, and then added a new embed block on the page - wham. Same as before: "Could not embed", JSON error etc. , and it was not Youtube's fault - I had the same block on the same page before, removed it and then decided I'd add it again in a different place on the page. Switched to Classic editor, no problem editing + saving the page there. Back to Gutenberg - same error.&lt;br /&gt;
Something is definitely wrong here.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51439 (Docs: Undocumented @global instances) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 04 Oct 2020 06:28:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51439#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51439#comment:3/1601792919953112</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by ravi. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1601792917242000"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>51439-install.php.2.patch attached to Ticket #51439</title>
      
        <dc:creator>ravipatel</dc:creator>

      <pubDate>Sun, 04 Oct 2020 06:27:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/51439/51439-install.php.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/51439/51439-install.php.2.patch/1601792872629538</guid>
      <description>&lt;p&gt;
Added with full path for undefined varibale
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #48778 (PDF Upload Bug in 5.3) updated</title>
      
        <dc:creator>togmission</dc:creator>

      <pubDate>Sun, 04 Oct 2020 05:58:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48778#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48778#comment:21/1601791130291799</guid>
      <description>&lt;p&gt;
"Unexpected response from the server. The file may have been uploaded successfully. Check in the Media Library or reload the page."\&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I was having the same error message with mp3 with the size of 10.6mb (lesser than that got uploaded). &lt;strong&gt;Finally deactivating WP Security Plugin solved the issue.&lt;/strong&gt; (I am using All in One WP Security)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Give a try!&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51351 (Improve clarity of privacy error strings) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 04 Oct 2020 03:21:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51351#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51351#comment:5/1601781699449439</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/49090" title="Privacy: Improve clarity of privacy error strings.
Primarily this ..."&gt;49090&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Privacy: Improve clarity of privacy error strings.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Primarily this adds "user privacy" to the strings for privacy requests, so they are more easily distinguished from other system actions within logs.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props garrett-eclipse, carike, birgire.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/51351" title="#51351: enhancement: Improve clarity of privacy error strings (closed: fixed)"&gt;#51351&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [49090]: Privacy: Improve clarity of privacy error strings.  Primarily this ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 04 Oct 2020 03:21:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/49090</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/49090/1601781698244141</guid>
      <description>&lt;p&gt;
Privacy: Improve clarity of privacy error strings.
&lt;/p&gt;
&lt;p&gt;
Primarily this adds "user privacy" to the strings for privacy requests, so they are more easily distinguished from other system actions within logs.
&lt;/p&gt;
&lt;p&gt;
Props garrett-eclipse, carike, birgire.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/51351" title="#51351: enhancement: Improve clarity of privacy error strings (closed: fixed)"&gt;#51351&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #33924 (sanitize_html_class valid characters) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Sun, 04 Oct 2020 02:19:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33924#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33924#comment:16/1601777972065587</guid>
      <description>&lt;p&gt;
From the discussion on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44988" title="#44988: defect (bug): The sanitize_html_class() is deceptive / &amp;#34;buggy&amp;#34; (closed: duplicate)"&gt;#44988&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
@ayeshrajans pointed out the W3 spec does say that class names cannot start with a digit, single or double hyphens. &lt;a class="ext-link" href="https://www.w3.org/TR/CSS21/syndata.html#characters"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.w3.org/TR/CSS21/syndata.html#characters&lt;/a&gt; &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
@ChiefAlchemist also suggested an additional parameter for strict and permissive mode&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
@davidwebca mentioned with libraries such as tailwind using characters outside of the permitted set, this has potential to become a bigger issue.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #33924,​44988 batch updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Sun, 04 Oct 2020 02:14:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=33924%2C44988</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=33924%2C44988/1601777669750786</guid>
      <description>duplicate: &lt;p&gt;
I missed this been opened a couple of years ago, ticket &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/33924" title="#33924: defect (bug): sanitize_html_class valid characters (new)"&gt;#33924&lt;/a&gt; exists previously and hit the roadblock mentioned above: that modifying how the classes are sanitized could cause backward compatibility breakages.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
A similar suggestion was made at the time, using a second parameter to toggle between permissive and strict escaping.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm going to close this as a duplicate so discussion can continue on &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/33924" title="#33924: defect (bug): sanitize_html_class valid characters (new)"&gt;#33924&lt;/a&gt; and focus on a single ticket. I'm sorry it's taken some time for this to happen.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #44988 (The sanitize_html_class() is deceptive / "buggy") updated</title>
      
        <dc:creator>davidwebca</dc:creator>

      <pubDate>Sun, 04 Oct 2020 00:55:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44988#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44988#comment:7/1601772931923140</guid>
      <description>&lt;p&gt;
Hello! I came here searching about the escaping mecanism for classes added through the menu items in the admin. I found myself surprised to see colons being removed altogether. With the prevalence and popularity of tailwindcss.com, we should maybe reconsider what is allowed as a special character in the sanitize_html_class and it could be part of the same discussion you guys have been having for quite a while. Here's an additional link about the specificity of what is "allowed" in CSS. &lt;a class="ext-link" href="https://mathiasbynens.be/notes/css-escapes"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://mathiasbynens.be/notes/css-escapes&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51444 (For a split second, the interface font goes to default  from chosen ...) created</title>
      
        <dc:creator>thistooshallpasstoday</dc:creator>

      <pubDate>Sat, 03 Oct 2020 21:10:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51444</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51444/1601759401858895</guid>
      <description>&lt;p&gt;
Went to click on my gravatar photo to explore on the header, and had chosen another font for my blog post, but when I clicked on the photo, for a split second, the font went back to the default and it did mini page refresh and came back to what I have chosen&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #51157 (Bundled Themes: List block appears too far to the left after 5.5 upgrade) updated</title>
      
        <dc:creator>sabernhardt</dc:creator>

      <pubDate>Sat, 03 Oct 2020 20:05:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51157#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51157#comment:12/1601755546246799</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Twenty Twelve is fine with or without the patch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
All 7 of the themes in the patch now center simple lists in list blocks in both LTR and RTL languages. However, &lt;strong&gt;only&lt;/strong&gt; Twenty Eleven shows nested lists in RTL list blocks properly, and Twenty Thirteen has trouble with nested lists in both LTR and RTL languages. Most themes have problems with nested lists and/or inconsistent list indentation in the classic block, too.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also, the lack of any margin or padding on outer lists can result in cutting off the list markers at narrower widths. (This might be better to address within Gutenberg's styles, adding more than the 10px padding on each side.)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Twenty Nineteen and Twenty Twenty were not included in the patch. &lt;strong&gt;Edit: I'll open separate tickets for small fixes on those.&lt;/strong&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>2020-nested-list-rtl.png attached to Ticket #51157</title>
      
        <dc:creator>sabernhardt</dc:creator>

      <pubDate>Sat, 03 Oct 2020 19:50:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/51157/2020-nested-list-rtl.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/51157/2020-nested-list-rtl.png/1601754629572203</guid>
      <description>&lt;p&gt;
nested unordered list in a list block, Twenty Twenty, RTL
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #51157 (Bundled Themes: List block appears too far to the left after 5.5 upgrade) updated</title>
      
        <dc:creator>sabernhardt</dc:creator>

      <pubDate>Sat, 03 Oct 2020 19:43:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51157#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51157#comment:11/1601754236550841</guid>
      <description>&lt;p&gt;
Thanks for testing. Unfortunately, the patch is for editor styles, not for the front end. And while I would prefer having a margin to indent the lists, both &lt;a class="ext-link" href="https://themes.trac.wordpress.org/browser/twentyfifteen/1.0/style.css#L2585"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Twenty Fifteen&lt;/a&gt; (at larger screen sizes) and &lt;a class="ext-link" href="https://themes.trac.wordpress.org/browser/twentyseventeen/1.0/style.css#L1082"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Twenty Seventeen&lt;/a&gt; have had no left or right margin since each theme was released. Reconsidering that now would require a separate ticket and plenty of testing.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For further testing here, if anyone would like to import some starter/example posts, &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/51157/example-posts-with-lists.xml" title="Attachment 'example-posts-with-lists.xml' in Ticket #51157"&gt;example-posts-with-lists.xml&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/51157/example-posts-with-lists.xml" title="Download"&gt;​&lt;/a&gt; contains my lists for both LTR and RTL directions (I used Arabic, with Polylang plugin). Each post features simple ordered and unordered lists, plus nested lists (including mixed types). Then the same set of lists is repeated inside a full-width group block and a classic block. Other possible situations could be tested as well.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #50787 (Consolidate the logic for displaying WP &amp; PHP compatibility messages ...) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Sat, 03 Oct 2020 19:40:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50787#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50787#comment:6/1601754055170250</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/50787/50787.diff" title="Attachment '50787.diff' in Ticket #50787"&gt;50787.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/50787/50787.diff" title="Download"&gt;​&lt;/a&gt; is an initial pass at this ticket.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>50787.diff attached to Ticket #50787</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Sat, 03 Oct 2020 19:39:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/50787/50787.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/50787/50787.diff/1601753988445986</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>example-posts-with-lists.xml attached to Ticket #51157</title>
      
        <dc:creator>sabernhardt</dc:creator>

      <pubDate>Sat, 03 Oct 2020 19:34:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/51157/example-posts-with-lists.xml</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/51157/example-posts-with-lists.xml/1601753643718667</guid>
      <description>&lt;p&gt;
sample posts for both LTR and RTL list content
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #51441 (Add brackets to @see tags) updated</title>
      
        <dc:creator>davidbaumwald</dc:creator>

      <pubDate>Sat, 03 Oct 2020 17:38:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51441#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51441#comment:3/1601746730502799</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@ravipatel Third-party packages, like SimplePie, are imported to the codebase as-is, so they don't have to be updated to the WPCS.  The other changes to other files look good though.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41949 (Allow multiple values for the same meta key to be passed to ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 03 Oct 2020 17:04:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41949#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41949#comment:22/1601744691335166</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by stuffradio. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1601744688239200"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>51441-multiple-files.patch attached to Ticket #51441</title>
      
        <dc:creator>ravipatel</dc:creator>

      <pubDate>Sat, 03 Oct 2020 17:00:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/51441/51441-multiple-files.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/51441/51441-multiple-files.patch/1601744433077481</guid>
      <description>&lt;p&gt;
Added with multiples files code
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #51439 (Docs: Undocumented @global instances) updated</title>
      
        <dc:creator>davidbaumwald</dc:creator>

      <pubDate>Sat, 03 Oct 2020 16:09:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51439#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51439#comment:2/1601741343836454</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@ravipatel Can you refresh these patches against the &lt;code&gt;src&lt;/code&gt;? The patch does not include the file path and is more difficult to apply. For instance, &lt;code&gt;install.php&lt;/code&gt; should be &lt;code&gt;src/wp-admin/install.php&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Here's a Handbook page about creating the patch from src/ &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/tutorials/trac/submitting-a-patch/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/handbook/tutorials/trac/submitting-a-patch/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51441 (Add brackets to @see tags) updated</title>
      
        <dc:creator>davidbaumwald</dc:creator>

      <pubDate>Sat, 03 Oct 2020 16:07:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51441#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51441#comment:2/1601741268669994</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@ravipatel Can you refresh these patches against the &lt;code&gt;src&lt;/code&gt;?  The patch does not include the file path and is more difficult to apply.  For instance, &lt;code&gt;shortcodes.php&lt;/code&gt; should be &lt;code&gt;src/wp-includes/shortcodes.php&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Here's a Handbook page about creating the patch from &lt;code&gt;src/&lt;/code&gt; &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/tutorials/trac/submitting-a-patch/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/handbook/tutorials/trac/submitting-a-patch/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51330 (Allow more granular control over enqueuing editor scripts and styles) reopened</title>
      
        <dc:creator>Frank Klein</dc:creator>

      <pubDate>Sat, 03 Oct 2020 15:20:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51330#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51330#comment:11/1601738433853198</guid>
      <description>&lt;p&gt;
Thanks for working on this, because &lt;code&gt;_should_load_block_editor_scripts_and_styles&lt;/code&gt; is an improvement over having to check &lt;code&gt;WP_Screen:: is_block_editor&lt;/code&gt;. Especially because &lt;code&gt;is_block_editor()&lt;/code&gt; is poorly designed, see &lt;a href="https://core.trac.wordpress.org/ticket/45037#comment:21"&gt;https://core.trac.wordpress.org/ticket/45037#comment:21&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
But &lt;code&gt;is_block_editor&lt;/code&gt; is a public method, and therefore a public API. The newly introduced function on the other hand is private--and there's no reason for that. It's only a getter function with a filter, and should therefore follow the established WordPress pattern of being public.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #51443 (Updating posts and tags not working well since 5.5.1) created</title>
      
        <dc:creator>Ziposs</dc:creator>

      <pubDate>Sat, 03 Oct 2020 12:30:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51443</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51443/1601728217593867</guid>
      <description>&lt;p&gt;
There is a bug in version 5.5.1 as updating posts give error &lt;br /&gt;
The response is not a valid JSON response. Updating failed. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
and sometimes if add tags and update posts it show it is updated but tags are not shown when refresh Posts page.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39106 (Make hierarchy level indicator text changeable [WP List]) updated</title>
      
        <dc:creator>mayankmajeji</dc:creator>

      <pubDate>Sat, 03 Oct 2020 09:05:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39106#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39106#comment:6/1601715905183352</guid>
      <description>&lt;p&gt;
I completely agree with @seanchayes and changed &lt;code&gt;$pad&lt;/code&gt; to &lt;code&gt;$separator&lt;/code&gt; as it makes more sense and semantically correct. I also cross-checked for the conflicts and find zero conflicts.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39106.diff attached to Ticket #39106</title>
      
        <dc:creator>mayankmajeji</dc:creator>

      <pubDate>Sat, 03 Oct 2020 09:04:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39106/39106.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39106/39106.diff/1601715874948519</guid>
      <description>&lt;p&gt;
39106.diff
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #51442 (Cannot add youtube links since Gutenberg update to 9.1.0) updated</title>
      
        <dc:creator>yeoric</dc:creator>

      <pubDate>Sat, 03 Oct 2020 09:02:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51442#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51442#comment:1/1601715772659379</guid>
      <description>&lt;p&gt;
Hm. I feel a bit silly now. I went to Classic to edit a post, and then switched back to Gutenberg. And you know what: Everything worked just fine again. No idea what happened and whether the switch was the "repair" or what caused Gutenberg to work again.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10631 (wp-admin/users.php does not show pages under "posts" column) reopened</title>
      
        <dc:creator>AnthonyHall</dc:creator>

      <pubDate>Sat, 03 Oct 2020 08:39:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10631#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10631#comment:10/1601714364528475</guid>
      <description>&lt;p&gt;
Please reconsider this ticket&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #51442 (Cannot add youtube links since Gutenberg update to 9.1.0) created</title>
      
        <dc:creator>yeoric</dc:creator>

      <pubDate>Sat, 03 Oct 2020 08:36:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51442</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51442/1601714172154061</guid>
      <description>&lt;p&gt;
Since this Gutenberg plugin update &lt;strong&gt;any&lt;/strong&gt; attempt to add a youtube link - via video block, youtube block, Custom HTML iframe (iframe code copied from Youtube post Share function), normal link in paragraph, even just copying the link text into a paragraph block (without actually making it a link - though I suspect the editor may try to do this automatically) results in a json error and, in case of embed blocks, a "you cannot embed this" error (which I think is a follow-up error). Links to other sites work as expected.&lt;br /&gt;
Existing pages continue to work but cannot be updated. The error seems to be theme- and plugin-independent.&lt;br /&gt;
If you need additional information please advise how to get them. As far as WP is concerned I am strictly at user level, though I am a software engineer.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #51439 (Docs: Undocumented @global instances) updated</title>
      
        <dc:creator>ravipatel</dc:creator>

      <pubDate>Sat, 03 Oct 2020 01:39:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51439#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51439#comment:1/1601689191592361</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51441 (Add brackets to @see tags) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 03 Oct 2020 01:35:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51441#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51441#comment:1/1601688945907838</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by ravi. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1601688942235300"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>51441.patch attached to Ticket #51441</title>
      
        <dc:creator>ravipatel</dc:creator>

      <pubDate>Sat, 03 Oct 2020 01:29:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/51441/51441.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/51441/51441.patch/1601688582822542</guid>
      <description>&lt;p&gt;
Merge 2 files patches with same issue
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #51131 (Remove constraint that search handlers must return integer ids) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 03 Oct 2020 01:20:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51131#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51131#comment:9/1601688050761408</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/49089" title="Docs: Add `@since` notes for the `$id` parameter of REST API search ..."&gt;49089&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Add &lt;code&gt;@since&lt;/code&gt; notes for the &lt;code&gt;$id&lt;/code&gt; parameter of REST API search controller accepting a string.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/49088" title="REST API: Allow for string ids in the search controller.
Previously, ..."&gt;[49088]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/51131" title="#51131: enhancement: Remove constraint that search handlers must return integer ids (closed: fixed)"&gt;#51131&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [49089]: Docs: Add `@since` notes for the `$id` parameter of REST API search ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 03 Oct 2020 01:20:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/49089</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/49089/1601688049545424</guid>
      <description>&lt;p&gt;
Docs: Add &lt;code&gt;@since&lt;/code&gt; notes for the &lt;code&gt;$id&lt;/code&gt; parameter of REST API search controller accepting a string.
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/49088" title="REST API: Allow for string ids in the search controller.
Previously, ..."&gt;[49088]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/51131" title="#51131: enhancement: Remove constraint that search handlers must return integer ids (closed: fixed)"&gt;#51131&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>51441-general-template.php.patch attached to Ticket #51441</title>
      
        <dc:creator>ravipatel</dc:creator>

      <pubDate>Sat, 03 Oct 2020 01:15:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/51441/51441-general-template.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/51441/51441-general-template.php.patch/1601687751665942</guid>
      <description>&lt;p&gt;
cannot be resolved to a type - document chages
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #51441 (Add brackets to @see tags) created</title>
      
        <dc:creator>ravipatel</dc:creator>

      <pubDate>Sat, 03 Oct 2020 01:14:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51441</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51441/1601687693122238</guid>
      <description>&lt;p&gt;
Cannot be resolved to a type value fixed.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>51440.patch attached to Ticket #51440</title>
      
        <dc:creator>sabernhardt</dc:creator>

      <pubDate>Sat, 03 Oct 2020 01:06:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/51440/51440.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/51440/51440.patch/1601687200643104</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>2013-full-width-group-block.png attached to Ticket #51440</title>
      
        <dc:creator>sabernhardt</dc:creator>

      <pubDate>Sat, 03 Oct 2020 01:03:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/51440/2013-full-width-group-block.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/51440/2013-full-width-group-block.png/1601687029503825</guid>
      <description>&lt;p&gt;
heading and paragraph blocks inside full-width group block (WP5.5.1)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #51440 (Twenty Thirteen: alignment of blocks inside a full-width or wide-width ...) created</title>
      
        <dc:creator>sabernhardt</dc:creator>

      <pubDate>Sat, 03 Oct 2020 01:00:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51440</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51440/1601686808679133</guid>
      <description>&lt;p&gt;
With Twenty Thirteen, the editor does not center blocks within wide-width and full-width group blocks (as they are on the front end).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
With the &lt;code&gt;max-width&lt;/code&gt; of 634px, most inner blocks are centered. (List blocks will be addressed on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/51157" title="#51157: defect (bug): Bundled Themes: List block appears too far to the left after 5.5 upgrade (closed: fixed)"&gt;#51157&lt;/a&gt;.)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/51148" title="#51148: defect (bug): Twenty Twenty: Odd Heading Block Alignment in WordPress 5.5 (closed: fixed)"&gt;#51148&lt;/a&gt; (Twenty Twenty heading block)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>51439-install.php.patch attached to Ticket #51439</title>
      
        <dc:creator>ravipatel</dc:creator>

      <pubDate>Sat, 03 Oct 2020 00:58:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/51439/51439-install.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/51439/51439-install.php.patch/1601686723544974</guid>
      <description>&lt;p&gt;
codeing standard undefine varible.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #51439 (Docs: Undocumented @global instances) created</title>
      
        <dc:creator>ravipatel</dc:creator>

      <pubDate>Sat, 03 Oct 2020 00:58:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51439</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51439/1601686686559708</guid>
      <description>&lt;p&gt;
&lt;strong&gt;@global wpdb&lt;/strong&gt; not define on line no 230. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
display_setup_form() on define but not call outside of the function.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #50021 (Internationalization of excerpt function in "Latest Posts" block) updated</title>
      
        <dc:creator>sabernhardt</dc:creator>

      <pubDate>Sat, 03 Oct 2020 00:42:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50021#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50021#comment:1/1601685725455762</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>