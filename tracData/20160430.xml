<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #28216 (Allow to register pre-instantiated widgets) closed</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 30 Apr 2016 22:35:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28216#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28216#comment:27/1462055729059072</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37333" title="Widgets: Provide PHP 5.2 fallback for `spl_object_hash()` if disabled ..."&gt;37333&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Widgets: Provide PHP 5.2 fallback for &lt;code&gt;spl_object_hash()&lt;/code&gt; if disabled in logic for registering and unregistering pre-instantiated widgets.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28216" title="#28216: defect (bug): Allow to register pre-instantiated widgets (closed: fixed)"&gt;#28216&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37333]: Widgets: Provide PHP 5.2 fallback for `spl_object_hash()` if disabled ...</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 30 Apr 2016 22:35:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37333</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37333/1462055727779503</guid>
      <description>&lt;p&gt;
Widgets: Provide PHP 5.2 fallback for &lt;code&gt;spl_object_hash()&lt;/code&gt; if disabled in logic for registering and unregistering pre-instantiated widgets.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28216" title="#28216: defect (bug): Allow to register pre-instantiated widgets (closed: fixed)"&gt;#28216&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #35852 (Starting Firefox, post edit tab restored: Revision is set to point ...) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Sat, 30 Apr 2016 22:19:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35852#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35852#comment:5/1462054791890812</guid>
      <description>&lt;p&gt;
Patch looks good on my end, unable to reproduce it any more on my setup.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35203 (Capacity to change the type label in set nav menu items in Customize) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 30 Apr 2016 22:08:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35203#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35203#comment:2/1462054124580575</guid>
      <description>&lt;p&gt;
@celloexpressions there is already a &lt;code&gt;wp_setup_nav_menu_item&lt;/code&gt; filter that applies in &lt;code&gt;wp_setup_nav_menu_item()&lt;/code&gt;. This actually will be getting called in &lt;code&gt;WP_Customize_Nav_Menu_Item_Setting::value()&lt;/code&gt; if the initial &lt;code&gt;value&lt;/code&gt; is not passed in up front (to save on performance). So I think what is needed is just to apply &lt;code&gt;wp_setup_nav_menu_item&lt;/code&gt; filters at the end of &lt;code&gt;WP_Customize_Nav_Menu_Item_Setting::value_as_wp_post_nav_menu_item()&lt;/code&gt;. This should result in the proper &lt;code&gt;type_label&lt;/code&gt; appearing on the nav menus admin page as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35852 (Starting Firefox, post edit tab restored: Revision is set to point ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 30 Apr 2016 21:51:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35852#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35852#comment:4/1462053085683856</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
35852.patch should fix this. It also fixes the partially related &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28037" title="#28037: defect (bug): Editor merges paragraphs when post edit screen is accessed by pressing ... (closed: fixed)"&gt;#28037&lt;/a&gt;, so the helper function &lt;code&gt;post_form_autocomplete_off()&lt;/code&gt; for the old fix can be deprecated.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35852.patch attached to Ticket #35852</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 30 Apr 2016 21:50:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35852/35852.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35852/35852.patch/1462053009014407</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36330 (Function to get custom logo URL) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 30 Apr 2016 21:43:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36330#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36330#comment:6/1462052615309634</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
For the reason @westonruter mentions above, I think since we didn't introduce it with the feature, we shouldn't make this easy to do because it will break previewing. Jumping through the hoop of using &lt;code&gt;get_theme_mod&lt;/code&gt; aligns with the need to also do custom work to make the customizer preview work.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34747 (Provide more flexibility for "You are customizing" text) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 30 Apr 2016 21:08:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34747#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34747#comment:11/1462050496496484</guid>
      <description>&lt;p&gt;
Broader question: should we make this easily changeable in plugins? I'm generally of the opinion that the core base experience shouldn't be modified, only extended with custom UI in sections and panels, in most cases. It seems like hiding this section with CSS and adding a custom one, even if just for heading info may be the more appropriate approach, as that feels appropriately hacky for something that should only be done when absolutely necessary.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34051 (Add a way to preview site in wider size in the Customizer) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 30 Apr 2016 21:01:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34051#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34051#comment:5/1462050097174116</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I would be interested in any thoughts here now that we have the base UI in.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31334 (Customizer JS API should handle container removal from document and ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 30 Apr 2016 20:57:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31334#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31334#comment:9/1462049838497200</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Needs updates based on &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/31334#comment:5" title="Comment 5"&gt;5&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35203 (Capacity to change the type label in set nav menu items in Customize) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 30 Apr 2016 20:40:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35203#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35203#comment:1/1462048811864048</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Good idea @joe_bopper! &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35203/35203.diff" title="Attachment '35203.diff' in Ticket #35203"&gt;35203.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35203/35203.diff" title="Download"&gt;​&lt;/a&gt; introduces a &lt;code&gt;customize_setup_nav_menu_item&lt;/code&gt; filter, which behaves the same way as &lt;code&gt;wp_setup_nav_menu_item&lt;/code&gt;, but is named differently in case in needs to be used differently for items in the customizer. It makes the two filters for more specific properties redundant, but we probably can't remove those at this point.
&lt;/p&gt;
&lt;p&gt;
For the issue mentioned in the ticket description, this can now be used as:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter( 'customize_setup_nav_men_item', function( $menu_item ) {
     if ( conditional ) {
          $menu_item-&amp;gt;type_label = __( 'Something Else' );
     }
     return $menu_item;
}
&lt;/pre&gt;&lt;p&gt;
@westonruter, are you okay with the naming of this? It's derived from this function's derivation from &lt;code&gt;wp_setup_nav_menu_item()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35203.diff attached to Ticket #35203</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 30 Apr 2016 20:32:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35203/35203.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35203/35203.diff/1462048350401166</guid>
      <description>&lt;p&gt;
Introduce &lt;code&gt;customize_setup_nav_menu_item&lt;/code&gt; filter to allow modifications to nav-menu-item as wp_post objects in the Customizer.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36093 (Increase Customizer Expand/Collapse Button for Accessibility) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 30 Apr 2016 20:10:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36093#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36093#comment:5/1462047058340984</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36452 (customize_value should be passed $this) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 30 Apr 2016 20:05:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36452#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36452#comment:8/1462046733337087</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35320 (Customizer closes when you activate a new theme) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 30 Apr 2016 19:57:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35320#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35320#comment:6/1462046272067830</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looks like we don't have any objections based on the current status of the customizer, so let's do it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22237 (Add keyboard shortcuts for collapse/expand, panel-back, and close to ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 30 Apr 2016 19:42:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22237#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22237#comment:48/1462045341719440</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Found a minor issue with menus that's fixed in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/22237/22237.3.diff" title="Attachment '22237.3.diff' in Ticket #22237"&gt;22237.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/22237/22237.3.diff" title="Download"&gt;​&lt;/a&gt; (was still using toggleForm in one place). Should be good to go now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>22237.3.diff attached to Ticket #22237</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 30 Apr 2016 19:40:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22237/22237.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22237/22237.3.diff/1462045226690617</guid>
      <description>&lt;p&gt;
Don't use toggleForm in expandForm, remove widget reference in comment.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32683 (Custom Menu widget should include a shortcut to load selected menu ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 30 Apr 2016 19:35:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32683#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32683#comment:6/1462044900106841</guid>
      <description>&lt;p&gt;
@celloexpressions thanks for that. This is definitely a good starting point. I agree that the JS needs better placement, but it provides the prototype for what is needed. Adding a link from the widget to the menu section is indeed a huge usability improvement. One improvement that I see is the behavior of the back button. A user would probably expect after clicking “back” that they would be taken back to editing the widget and not be taken to the list of menus. If a user doesn't expect this (such as we who have gotten so used to navigating around panels so much), then they probably should.
&lt;/p&gt;
&lt;p&gt;
I've been thinking about this a bit this week and I think we could very nicely override the back button here to serve as a breadcrumb/history navigation rather than a structural navigation in particular cases. For example, when clicking on Edit Menu, it could invoke this JS logic instead of just expanding the section. Consider this logic:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;
&lt;span class="cm"&gt;/**
 * Focus (expand) another construct and return to this control when it is collapsed.
 *
 * @param {wp.customize.Section|wp.customize.Panel} construct - The thing to expand.
 * @this {wp.customize.Control}
 */&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;focusConstructAndRturnToControlWhenCollapsed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;construct&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;control&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;construct&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;focus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;onceCollapsed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;isExpanded&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nx"&gt;isExpanded&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nx"&gt;construct&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;expanded&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;unbind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;onceCollapsed&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                        &lt;span class="nx"&gt;control&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;focus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nx"&gt;construct&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;expanded&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;onceCollapsed&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
To simulate from your browser console:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Open the Site Title and Tagline section.
&lt;/li&gt;&lt;li&gt;Paste in the above function into your console.
&lt;/li&gt;&lt;li&gt;Focus on the blogname and pretend there is a button to expand a given menu section.
&lt;/li&gt;&lt;li&gt;Paste this into your console: &lt;code&gt;focusConstructAndRturnToControlWhenCollapsed.call( wp.customize.control( 'blogname' ), wp.customize.section( 'nav_menu[87]' ) );&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Notice that you are now in the given nav menu section (adapt the ID as needed in your example).
&lt;/li&gt;&lt;li&gt;Click on Back and notice that instead of being navigated to the Menus panel that you are instead brought back to the &lt;code&gt;blogname&lt;/code&gt; control with focus applied.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
This would be a great improvement to usability I think.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30937 (Add Customizer state persistence in changesets (formerly “transactions”)) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 30 Apr 2016 19:09:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30937#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30937#comment:36/1462043380947433</guid>
      <description>&lt;p&gt;
I'll note that I updated the PR for &lt;code&gt;trunk&lt;/code&gt; a week+ ago: &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/61"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/61&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I need to set aside a few days (hopefully next week) to really dig back into it and wrap my mind around the many issues involved here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30618 (Clean up Customizer Media Control CSS) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 30 Apr 2016 19:07:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30618#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30618#comment:4/1462043231628544</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
As mentioned above, this will require some other tickets to be refreshed, so would be good to get in sooner rather than later. I don't think any of the changes in the patch should be controversial.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30937 (Add Customizer state persistence in changesets (formerly “transactions”)) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 30 Apr 2016 19:01:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30937#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30937#comment:35/1462042877465944</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This ticket is high priority for the customize component, and will need to get in in the earlier part of the cycle so that all of the related tickets can be addressed before beta as well after the initial commit (which will fix many of them).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32683 (Custom Menu widget should include a shortcut to load selected menu ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 30 Apr 2016 18:58:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32683#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32683#comment:5/1462042724436568</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@westonruter how does this look? I'm not thrilled with the placement of the JS but it works pretty well in terms of a usability enhancement.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36726 (3).png attached to Ticket #36726</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 30 Apr 2016 17:59:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36726/36726%20(3).png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36726/36726%20(3).png/1462039176696146</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>36726 (2).png attached to Ticket #36726</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 30 Apr 2016 17:59:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36726/36726%20(2).png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36726/36726%20(2).png/1462039156935317</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>36726 (1).png attached to Ticket #36726</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 30 Apr 2016 17:58:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36726/36726%20(1).png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36726/36726%20(1).png/1462039133553620</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27473 (Thickbox width and height parameters are ignored when using TB_iframe) updated</title>
      
        <dc:creator>fabiantodt</dc:creator>

      <pubDate>Sat, 30 Apr 2016 17:54:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27473#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27473#comment:12/1462038862878472</guid>
      <description>&lt;p&gt;
hi there,
i tried the solution from this stackexchange thread &lt;a class="ext-link" href="http://wordpress.stackexchange.com/questions/56271/how-to-enlarge-thickbox-media-library-iframe"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.stackexchange.com/questions/56271/how-to-enlarge-thickbox-media-library-iframe&lt;/a&gt;
it "worked" - the thickbox i wanted to display worked correctly, but of course the media manager won't work then.
but i think it has something to do with tb_position() as mentioned in this thread.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36726 (Date Picker field label not translated after 4.5.1) created</title>
      
        <dc:creator>rafa0192</dc:creator>

      <pubDate>Sat, 30 Apr 2016 17:16:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36726</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36726/1462036606535009</guid>
      <description>&lt;p&gt;
After updating to the latest release , date time picker field are displaying only in english , i need it to be in spanish, the developer of the theme i use , suggested me to create a ticket in wordpress support to see if this can be solved , Here is how it look whenever i choose a date
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://prnt.sc/ayqv0u"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://prnt.sc/ayqv0u&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
in the selection part it is translated , but the field label is displaying in english for some reasons.
&lt;/p&gt;
&lt;p&gt;
the workaround fix , i found was to use the numeric formatting to display the date
just like this &lt;a class="ext-link" href="http://prnt.sc/ayqwtw"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://prnt.sc/ayqwtw&lt;/a&gt; when using this from general settings
&lt;a class="ext-link" href="http://prnt.sc/ayqxg3"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://prnt.sc/ayqxg3&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35852 (Starting Firefox, post edit tab restored: Revision is set to point ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 30 Apr 2016 17:13:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35852#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35852#comment:3/1462036401957782</guid>
      <description>&lt;p&gt;
Can reproduce with the above steps.
&lt;/p&gt;
&lt;p&gt;
Don't think this has anything to do with autosave. After a post is published autosave creates a special revision. We never load that revision, only show it on the revisions screen.
&lt;/p&gt;
&lt;p&gt;
What is happening here is that when clicking on the Back button the browser loads the previous screen from (memory) cache. That cache was set when the screen was first loaded, i.e. with the post content before the user edited it.
&lt;/p&gt;
&lt;p&gt;
In HTML 5 there is a way to detect when a page was loaded by pressing the Back or Forward button. Working on a patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32656 (Add hooks to allow hijacking cron implementation) updated</title>
      
        <dc:creator>DavidAnderson</dc:creator>

      <pubDate>Sat, 30 Apr 2016 16:19:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32656#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32656#comment:9/1462033152657293</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The new patch - with-return-codes.diff - builds on the previous patch, by now using boolean return codes for cron functions where relevant, and adding defined returned values for other functions. This is adapted from the patch in &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/21072" title="#21072: enhancement: CRON often returns ambiguous values (reopened)"&gt;#21072&lt;/a&gt;, with a few minor modifications.
&lt;/p&gt;
&lt;p&gt;
@rmccue - are you able to take a look?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>with-return-codes.diff attached to Ticket #32656</title>
      
        <dc:creator>DavidAnderson</dc:creator>

      <pubDate>Sat, 30 Apr 2016 16:17:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32656/with-return-codes.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32656/with-return-codes.diff/1462033022623417</guid>
      <description>&lt;p&gt;
New patch incorporating both the suggested filters, and return codes for all relevant functions
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35457 (Theme installer upload button improvements) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 30 Apr 2016 16:02:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35457#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35457#comment:17/1462032171614817</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1462032169002777"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35457 (Theme installer upload button improvements) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 30 Apr 2016 16:00:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35457#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35457#comment:16/1462032006101234</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35457#comment:7" title="Comment 7"&gt;obenland&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm not sure if we need that to maintain the browser history
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not sure the "upload" route is working as intended. When browsing themes clicking on "Featured Popular Latest Favorites" these views get added to the browser's history. In fact, clicking the browser's "back" and "forward" buttons, works. But when clicking on the upload button, the history breaks. Seems it always worked this way.
&lt;/p&gt;
&lt;p&gt;
Maybe I'm missing something but I don't see what this "upload" route should actually do. It would be great to have a closer look at this by someone more expert than me with this kind of things.
&lt;/p&gt;
&lt;p&gt;
Personally, I'd be in favor of removing it and just let the upload button be a toggle. This way browser's history won't break. Also, I wouldn't hide the theme previews.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>32656-30apr2016.diff attached to Ticket #32656</title>
      
        <dc:creator>DavidAnderson</dc:creator>

      <pubDate>Sat, 30 Apr 2016 15:47:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32656/32656-30apr2016.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32656/32656-30apr2016.diff/1462031269415490</guid>
      <description>&lt;p&gt;
Update 32656.diff so that it applies to trunk as at 2016-Apr-30 (no other changes yet)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36710 (Symlinked directories should not be deleted recursively) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 30 Apr 2016 15:17:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36710#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36710#comment:1/1462029468135612</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I suppose that we need this for the other implementation too?
&lt;/p&gt;
&lt;p&gt;
cc: @dd32
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28441 (Errant activation hook with symlinked plugins in WordPress 3.9.x) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 30 Apr 2016 15:12:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28441#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28441#comment:14/1462029179719866</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch needs a refresh after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37332" title="Plugins: In `plugin_basename()` normalize the file path before ..."&gt;[37332]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29154 (plugin_basename() doesn't normalize the file path before unresolving ...) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 30 Apr 2016 15:08:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29154#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29154#comment:7/1462028886818385</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37332" title="Plugins: In `plugin_basename()` normalize the file path before ..."&gt;37332&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Plugins: In &lt;code&gt;plugin_basename()&lt;/code&gt; normalize the file path before unresolving symlinks.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;$wp_plugin_paths&lt;/code&gt; contains normalized paths, see &lt;code&gt;wp_register_plugin_realpath()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props jdgrimes, voldemortensen, flyingdr, ocean90.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29154" title="#29154: defect (bug): plugin_basename() doesn't normalize the file path before unresolving ... (closed: fixed)"&gt;#29154&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37332]: Plugins: In `plugin_basename()` normalize the file path before ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 30 Apr 2016 15:08:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37332</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37332/1462028886293862</guid>
      <description>&lt;p&gt;
Plugins: In &lt;code&gt;plugin_basename()&lt;/code&gt; normalize the file path before unresolving symlinks.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;$wp_plugin_paths&lt;/code&gt; contains normalized paths, see &lt;code&gt;wp_register_plugin_realpath()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props jdgrimes, voldemortensen, flyingdr, ocean90.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29154" title="#29154: defect (bug): plugin_basename() doesn't normalize the file path before unresolving ... (closed: fixed)"&gt;#29154&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36709 (Symlinked plugin path incorrectly registered during uninstall) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 30 Apr 2016 15:03:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36709#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36709#comment:2/1462028594617386</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37331" title="Plugins: In `uninstall_plugin()` pass the plugin file to ..."&gt;37331&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Plugins: In &lt;code&gt;uninstall_plugin()&lt;/code&gt; pass the plugin file to &lt;code&gt;wp_register_plugin_realpath()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp_register_plugin_realpath()&lt;/code&gt; calls &lt;code&gt;dirname( $file );&lt;/code&gt; to remove the basename. The basename must be included in the argument or the symlinked directory won't be registered.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props andy.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36709" title="#36709: defect (bug): Symlinked plugin path incorrectly registered during uninstall (closed: fixed)"&gt;#36709&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37331]: Plugins: In `uninstall_plugin()` pass the plugin file to ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 30 Apr 2016 15:03:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37331</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37331/1462028594105574</guid>
      <description>&lt;p&gt;
Plugins: In &lt;code&gt;uninstall_plugin()&lt;/code&gt; pass the plugin file to &lt;code&gt;wp_register_plugin_realpath()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp_register_plugin_realpath()&lt;/code&gt; calls &lt;code&gt;dirname( $file );&lt;/code&gt; to remove the basename. The basename must be included in the argument or the symlinked directory won't be registered.
&lt;/p&gt;
&lt;p&gt;
Props andy.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36709" title="#36709: defect (bug): Symlinked plugin path incorrectly registered during uninstall (closed: fixed)"&gt;#36709&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36724 (who=&gt;authors breaks meta arguments in user queries) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 30 Apr 2016 14:43:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36724#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36724#comment:1/1462027408519094</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Good call. It should be possible to rearrange this so that 'who' is added as a 'meta_query' clause instead of overriding 'meta_key' and 'meta_value'. The &lt;code&gt;roles&lt;/code&gt;/&lt;code&gt;role__in&lt;/code&gt;/&lt;code&gt;role__not_in&lt;/code&gt; params work this way.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29154 (plugin_basename() doesn't normalize the file path before unresolving ...) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 30 Apr 2016 14:36:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29154#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29154#comment:6/1462027005309527</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/29154/29154.3.diff" title="Attachment '29154.3.diff' in Ticket #29154"&gt;29154.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/29154/29154.3.diff" title="Download"&gt;​&lt;/a&gt; includes a unit test which fails without the change to &lt;code&gt;plugin_basename()&lt;/code&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;1) Tests_Plugin_Basename::test_should_return_correct_basename_for_symlinked_plugins
Failed asserting that two strings are identical.
--- Expected
+++ Actual
@@ @@
-a-symlinked-plugin/plugin.php
+C:/www/path/plugins/a-plugin/plugin.php
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>29154.3.diff attached to Ticket #29154</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 30 Apr 2016 14:33:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29154/29154.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29154/29154.3.diff/1462026805969872</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36725 (Star rating improve accessibility hiding empty elements) closed</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 30 Apr 2016 14:32:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36725#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36725#comment:2/1462026761969670</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37330" title="Accessibility: improve the Star Ratings hiding empty elements for ..."&gt;37330&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Accessibility: improve the Star Ratings hiding empty elements for assistive technologies.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36725" title="#36725: defect (bug): Star rating improve accessibility hiding empty elements (closed: fixed)"&gt;#36725&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37330]: Accessibility: improve the Star Ratings hiding empty elements for ...</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 30 Apr 2016 14:32:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37330</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37330/1462026760743836</guid>
      <description>&lt;p&gt;
Accessibility: improve the Star Ratings hiding empty elements for assistive technologies.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36725" title="#36725: defect (bug): Star rating improve accessibility hiding empty elements (closed: fixed)"&gt;#36725&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36725 (Star rating improve accessibility hiding empty elements) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 30 Apr 2016 14:30:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36725#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36725#comment:1/1462026606853683</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>36725.diff attached to Ticket #36725</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 30 Apr 2016 14:26:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36725/36725.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36725/36725.diff/1462026404154043</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36725 (Star rating improve accessibility hiding empty elements) created</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 30 Apr 2016 14:25:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36725</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36725/1462026358108207</guid>
      <description>&lt;p&gt;
The star rating is correctly announced by screen readers thanks to some &lt;code&gt;screen-reader-text&lt;/code&gt; used in the markup:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/fGps2ohyfn.png"&gt;&lt;img src="https://cldup.com/fGps2ohyfn.png" alt="https://cldup.com/fGps2ohyfn.png" crossorigin="anonymous" title="https://cldup.com/fGps2ohyfn.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
By the way, some screen readers (see VoiceOver in the screenshot below) try to read out also the content of empty elements because there's some CSS generated content:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/bGsy_9TEJv.png"&gt;&lt;img src="https://cldup.com/bGsy_9TEJv.png" alt="https://cldup.com/bGsy_9TEJv.png" crossorigin="anonymous" title="https://cldup.com/bGsy_9TEJv.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Hiding the stars with &lt;code&gt;aria-hidden="true"&lt;/code&gt; will make assistive technologies completely ignore these elements, improving the users experience.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>36666.4.diff attached to Ticket #36666</title>
      
        <dc:creator>jmichaelward</dc:creator>

      <pubDate>Sat, 30 Apr 2016 14:03:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36666/36666.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36666/36666.4.diff/1462024991035020</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36724 (who=&gt;authors breaks meta arguments in user queries) created</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Sat, 30 Apr 2016 14:03:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36724</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36724/1462024989528824</guid>
      <description>&lt;p&gt;
When using &lt;code&gt;who=&amp;gt;authors&lt;/code&gt; in user query it silently overrides &lt;code&gt;meta_key&lt;/code&gt;, &lt;code&gt;meta_value&lt;/code&gt;, and &lt;code&gt;meta_compare&lt;/code&gt; arguments.
&lt;/p&gt;
&lt;p&gt;
Among other things this makes it impossible to &lt;code&gt;orderby=&amp;gt;meta_value&lt;/code&gt; such query, since it orders by that key.
&lt;/p&gt;
&lt;p&gt;
This behavior is neither explicitly documented or desirable.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36666 (Enhance `remove_theme_support()` so that it can take additional arguments) updated</title>
      
        <dc:creator>jmichaelward</dc:creator>

      <pubDate>Sat, 30 Apr 2016 14:02:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36666#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36666#comment:14/1462024969448387</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36666#comment:13" title="Comment 13"&gt;flixos90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36666#comment:12" title="Comment 12"&gt;jmichaelward&lt;/a&gt;:
The problem with &lt;code&gt;get_post_types_by_support()&lt;/code&gt; is that it does not have to do with theme support. When you call this function on the &lt;code&gt;after_setup_theme&lt;/code&gt; hook, it will always return an empty array because the post types are not registered at this point (since &lt;code&gt;after_setup_theme&lt;/code&gt; executes before &lt;code&gt;init&lt;/code&gt;). That's why I meant we cannot use this function. Sorry, maybe my original post was unclear there.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I had to set this ticket side for a few days to think about it, as you're right that custom post types, when registered correctly, are not retrieved by &lt;code&gt;get_post_types_by_support&lt;/code&gt;. It does not appear, however, that &lt;code&gt;get_post_types_by_support&lt;/code&gt; returns an empty array when called. Instead, it returns four: &lt;code&gt;post&lt;/code&gt;, &lt;code&gt;page&lt;/code&gt;, &lt;code&gt;attachment:video&lt;/code&gt;, and &lt;code&gt;attachment:audio&lt;/code&gt; These same four array values are returned whether &lt;code&gt;get_post_types_by_support&lt;/code&gt; is called outside of an action or within one, such as &lt;code&gt;init&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Something that threw before is that WooCommerce appears to be registering its &lt;code&gt;product&lt;/code&gt; post type sooner than &lt;code&gt;init&lt;/code&gt; (which, of course, &lt;a class="ext-link" href="https://codex.wordpress.org/Function_Reference/register_post_type"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;goes against the documentation&lt;/a&gt;), so it was getting returned in my previous attempts to resolve this ticket.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;My question now is: what if we're chasing the wrong problem? What if the issue here is the idea that theme support is sometimes stored as a boolean value (when options are not passed), and sometimes stored as an array?&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Ticket &lt;a href="https://core.trac.wordpress.org/ticket/22080"&gt;#22080&lt;/a&gt; perpetuated this thinking a bit, as we simply exited if theme support was already set. What if, instead, we just never saved &lt;code&gt;theme_support&lt;/code&gt; as a boolean?
&lt;/p&gt;
&lt;p&gt;
My latest patch (36666.4.diff) updates &lt;code&gt;add_theme_support&lt;/code&gt; to set &lt;code&gt;$args&lt;/code&gt; to the value of &lt;code&gt;get_post_types_by_support( 'thumbnail')&lt;/code&gt; if either &lt;code&gt;$args&lt;/code&gt; or &lt;code&gt;$_wp_theme_features[ 'post-thumbnails' ]&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;. From then on, any post type that registers and adds theme support for post thumbnails will have its post type pushed to the array, as before. In addition, post thumbnail support can be removed in functions.php, as long as the function is called during the same action (or later) in which a post type's support was added. So, in the case of WooCommerce, post thumbnail support for products can be removed in &lt;code&gt;after_setup_theme&lt;/code&gt; (but not before), and in the case of other custom post types, &lt;code&gt;remove_theme_support&lt;/code&gt; must be called in &lt;code&gt;init&lt;/code&gt; for it to work. Otherwise, it just fails silently.
&lt;/p&gt;
&lt;p&gt;
Also, since HTML5, Post Formats, and Post Thumbnails would ultimately run the same kind of check, I decided to take @flixos90's previous advice and put everything back into a single switch, because it's far more streamlined.
&lt;/p&gt;
&lt;p&gt;
Potential issues for consideration:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Currently, when users register a custom post type and indicate that it supports a theme feature, such as post thumbnails, that support is automatically updated. That would not be the case with this patch, so revisions would need to be made to append the post type to the array for post thumbnails (and eventually html5 and post formats).
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;Theme and plugin developers may be running a check to see if a theme currently supports a particular feature. Hard (&lt;code&gt;===&lt;/code&gt;) checks for post thumbnails would fail, because the value would no longer be boolean. However, populated arrays are truthy in PHP, so this change shouldn't have any additional effect.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
All this said, I don't consider this patch "done" by any means, but welcome discussion on the potential positives and challenges with implementing this approach.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36658 (Adding method to reset the mocked phpmailer instance) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 30 Apr 2016 13:38:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36658#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36658#comment:2/1462023535998563</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The reset method looks good to me.
&lt;/p&gt;
&lt;p&gt;
I think the &lt;code&gt;tests_&lt;/code&gt; prefix on the function is meant to be a namespace - see &lt;code&gt;tests_add_filter()&lt;/code&gt;. I am wary of changing it just for aesthetic reasons, as there may be third-party libraries using it. Could you change it back and post an updated patch?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36687 (Feature to override WP_Query to provide results from other source) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 30 Apr 2016 13:36:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36687#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36687#comment:3/1462023413196260</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the thoughtful response, @jpdavoutian. I have similar thoughts about the limitations of the approaches used by plugins like the one I linked to.
&lt;/p&gt;
&lt;p&gt;
A filter like the one you've suggested seems appropriate to me, though you're right that there will probably be some auxiliary issues caused by skipping the MySQL query. When it's in a workable state, would you mind sharing your modifications so that we can have a closer look at the approach?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>29154.3.patch attached to Ticket #29154</title>
      
        <dc:creator>flyingdr</dc:creator>

      <pubDate>Sat, 30 Apr 2016 12:39:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29154/29154.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29154/29154.3.patch/1462019953785241</guid>
      <description>&lt;p&gt;
Created patch against current trunk (rev.37295)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29154 (plugin_basename() doesn't normalize the file path before unresolving ...) updated</title>
      
        <dc:creator>flyingdr</dc:creator>

      <pubDate>Sat, 30 Apr 2016 12:27:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29154#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29154#comment:5/1462019222352042</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've tested 29154.2.diff on several sites that uses symlinks for plugins. It really solves problem with broken plugins in a case if they're installed using symlinks. Would be great to see this patch in 4.5.x or 4.6
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28216 (Allow to register pre-instantiated widgets) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Sat, 30 Apr 2016 12:24:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28216#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28216#comment:26/1462019058776819</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28216#comment:25" title="Comment 25"&gt;westonruter&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@jdgrimes thank you for that information. How does &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/28216/28216.8.fallback.diff" title="Attachment '28216.8.fallback.diff' in Ticket #28216"&gt;28216.8.fallback.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/28216/28216.8.fallback.diff" title="Download"&gt;​&lt;/a&gt; look for providing a fallback in the case where &lt;code&gt;spl_object_hash()&lt;/code&gt; is not available? It takes a somewhat similar approach as &lt;code&gt;_wp_filter_build_unique_id()&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That looks OK to me. (Though admittedly I haven't been following this ticked closely, so don't take my word for it. :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34213 (Change priority for loading theme/plugin translations) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 30 Apr 2016 12:22:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34213#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34213#comment:18/1462018972676497</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/34213#comment:17" title="Comment 17"&gt;swissspidy&lt;/a&gt;:
The other functions have the &lt;code&gt;$path&lt;/code&gt; handling before the loading part. Should we change that for all? Example for &lt;code&gt;load_plugin_textdomain()&lt;/code&gt;:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;load_plugin_textdomain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$domain&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$deprecated&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$plugin_rel_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$locale&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_locale&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="sd"&gt;/**
         * Filter a plugin's locale.
         *
         * @since 3.0.0
         *
         * @param string $locale The plugin's current locale.
         * @param string $domain Text domain. Unique identifier for retrieving translated strings.
         */&lt;/span&gt;
        &lt;span class="nv"&gt;$locale&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;apply_filters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'plugin_locale'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$locale&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$domain&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$mofile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$domain&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'-'&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$locale&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'.mo'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="c1"&gt;// Try to load from the languages directory first.
&lt;/span&gt;        &lt;span class="nv"&gt;$loaded&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;load_textdomain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$domain&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;WP_LANG_DIR&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/plugins/'&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$mofile&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$loaded&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="c1"&gt;// Otherwise, load the textdomain according to the plugin.
&lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nv"&gt;$plugin_rel_path&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;WP_PLUGIN_DIR&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/'&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$plugin_rel_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'/'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nv"&gt;$deprecated&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;_deprecated_argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;__FUNCTION__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'2.7'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="nv"&gt;$path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ABSPATH&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$deprecated&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'/'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;WP_PLUGIN_DIR&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;load_textdomain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$domain&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$path&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/'&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$mofile&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
#micro-optimization
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
I also just noticed that &lt;code&gt;$mofile&lt;/code&gt; in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34213/34213.diff" title="Attachment '34213.diff' in Ticket #34213"&gt;34213.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34213/34213.diff" title="Download"&gt;​&lt;/a&gt; for &lt;code&gt;load_theme_textdomain()&lt;/code&gt; is only valid for language packs. The .mo file has a different naming scheme, from the DocBlock: "The .mo files must be named based on the locale exactly.".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35852 (Starting Firefox, post edit tab restored: Revision is set to point ...) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Sat, 30 Apr 2016 10:57:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35852#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35852#comment:2/1462013875091440</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I can also reliably reproduce this.
&lt;/p&gt;
&lt;p&gt;
Steps to reproduce:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Make a new post, publish it and go back to wp-admin
&lt;/li&gt;&lt;li&gt;Open the post for editing, make some changes
&lt;/li&gt;&lt;li&gt;Click &lt;code&gt;Update&lt;/code&gt; to update the post content
&lt;/li&gt;&lt;li&gt;Click the &lt;code&gt;View post&lt;/code&gt; link
&lt;/li&gt;&lt;li&gt;Use the browser back button to return to the editor
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
It will now have the previous revision from before your latest edits, but not with the warning that there is a newer version available.
&lt;/p&gt;
&lt;p&gt;
Hitting the browser refresh button will restore the latest entry.
&lt;/p&gt;
&lt;p&gt;
I wonder if the autosave isn't being properly cleared when a post is updated.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #35852,​36671 batch updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Sat, 30 Apr 2016 10:49:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=35852%2C36671</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=35852%2C36671/1462013349462815</guid>
      <description>duplicate: &lt;p&gt;
Hi there, and welcome to Trac.
&lt;/p&gt;
&lt;p&gt;
This problem was previously reported in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35852" title="#35852: defect (bug): Starting Firefox, post edit tab restored: Revision is set to point ... (closed: fixed)"&gt;#35852&lt;/a&gt;, so I'll close this and keep the older report so we can keep track of this in one location.
&lt;/p&gt;
&lt;p&gt;
Thank you for the report!
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #33421 (wp_editor with custom editor_id not working) closed</title>
      
        <dc:creator>LewisCowles</dc:creator>

      <pubDate>Sat, 30 Apr 2016 10:08:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33421#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33421#comment:6/1462010900006180</guid>
      <description>worksforme: &lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
A Bit confused. How would one set about custom calling wp_editor in a stock theme with *all* plugins disabled?
&lt;/p&gt;
&lt;p&gt;
The editor works when used as-is included for posts and pages. Neither the original ticket or this addendum are about built-in post or page editing.
&lt;/p&gt;
&lt;p&gt;
For some plugins using wp_editor is considered necessary to make a screen flow better. In my case with additional content after the title.
&lt;/p&gt;
&lt;p&gt;
The process is simple; I've turned off the built in editor through post type capabilities, and created a new editor, with the code posted above, which from November to the release of 4.5 worked, it was exactly what I expected and what the codex described behaviour to be.
&lt;/p&gt;
&lt;p&gt;
I Know the editor works if I use the standard post content, but as advertised on the codex the wp_editor function should allow me to create a tinymce fed from any source (I just happen to have used the post content).
&lt;/p&gt;
&lt;p&gt;
Strangely enough turning off jetpack, then re-enabling has made the code work again, so I'll close, but it does seem strange that an automattic authored plugin would break other plugins.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36723 (Add caching to wp_old_slug_redirect) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 30 Apr 2016 09:45:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36723#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36723#comment:4/1462009505612044</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36723#comment:3" title="Comment 3"&gt;spacedmonkey&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Sorry @dd32 I am not sure what you mean by "fake" page.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sorry, it was an assumption on my part - When someone says that a function that has a &lt;code&gt;is_404()&lt;/code&gt; check in it is running every page, it generally means they're running a plugin which injects a "fake" page (one that doesn't actually result in a proper WP_Query object being located).
&lt;/p&gt;
&lt;p&gt;
What I mean, is that the only time that query should ever be run, is in the case where a singular page (a non-hierarchical one at that) is requested and cannot be found.
Caching the function in that case doesn't seem to be the best location for it - it seems like the redirect should be cached instead to me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36723 (Add caching to wp_old_slug_redirect) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Sat, 30 Apr 2016 09:37:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36723#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36723#comment:3/1462009046128573</guid>
      <description>&lt;p&gt;
Sorry @dd32 I am not sure what you mean by "fake" page. The patch just caches the response from sql. That is then invalided when the clean_post_cache function is called and the last_changed value changes. I know WordPress VIP are doing something similar with caching the result of this function. Still not sure why this needs to call sql on every time. You could easily have a popular url that is 404ing as you remove the post. This just increase traffic to sql unnecessarily.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35381 (Introduce `WP_Term_Query`) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 30 Apr 2016 08:39:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35381#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35381#comment:6/1462005587673045</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by spacedmonkey. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1462005585002767"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36723 (Add caching to wp_old_slug_redirect) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 30 Apr 2016 08:26:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36723#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36723#comment:2/1462004789302859</guid>
      <description>&lt;p&gt;
The &lt;code&gt;wp_old_slug_redirect()&lt;/code&gt; function only runs when the current pageload is marked as a 404, based on the &lt;code&gt;is_404()&lt;/code&gt; check at the start of the function.
&lt;/p&gt;
&lt;p&gt;
I don't think caching is the answer here, rather the custom code you're using to make a "fake" page needs to flag the page as not-a-404 to WordPress.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36723 (Add caching to wp_old_slug_redirect) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Sat, 30 Apr 2016 08:24:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36723#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36723#comment:1/1462004676819931</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>36723.patch attached to Ticket #36723</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Sat, 30 Apr 2016 08:23:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36723/36723.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36723/36723.patch/1462004633771135</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36723 (Add caching to wp_old_slug_redirect) created</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Sat, 30 Apr 2016 08:20:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36723</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36723/1462004424593957</guid>
      <description>&lt;p&gt;
The wp_old_slug_redirect function is called on every page. It perform a raw sql query everytime it is run. The result of that query should be cached for performance reasons.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36474 (Revamp meta boxes) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 30 Apr 2016 06:59:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36474#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36474#comment:19/1461999585821735</guid>
      <description>&lt;p&gt;
If we're going to change it, I would want to be sure that we're doing it right, in a way that we're confident we'll keep for a long time. Which is why I bring up looking at whether the concept of "boxes" is still necessary (I don't have an opinion either way yet, but think we should explore it).
&lt;/p&gt;
&lt;p&gt;
I think the primary reason for using sliding panels instead of accordions in the customizer was that with accordions there is a constant lack of UX consistency because navigational elements (headings) and UI controls (section contents) move around and are mixed together. Separating out the menu of sections (navigation, the top level headings), and then sliding in to each section of UI control keeps the user experience consistent because things are where you would expect them to be with a clear separation of navigation and content. @folletto can speak more to the reasoning behind it.
&lt;/p&gt;
&lt;p&gt;
While my initial though would be that sliding panels could be somewhat annoying in the context of the editor because they break the ability to quickly flow through all of the UI controls sequentially, in terms of UX, it would make a lot of sense. The key is designing the UI so that those ideas are reinforced, and for example it could be much easier to make the entire metabox sidebar visible at once and sticky when scrolling, which could improve navigation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30713 (Customizer control subclasses (custom controls) should have all parent ...) closed</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 30 Apr 2016 06:36:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30713#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30713#comment:11/1461998183001455</guid>
      <description>maybelater: &lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30618" title="#30618: enhancement: Clean up Customizer Media Control CSS (closed: fixed)"&gt;#30618&lt;/a&gt; now has an approach that allows the mess of media control selectors to be removed. While I still like the idea of including parent classes as html classes for a variety of reasons, the only technical implementation that I could find was the patch above which, as noted above, is concerning.
&lt;/p&gt;
&lt;p&gt;
I'm going to close this as maybelater for now and we can revisit if a better solution emerges. In the meantime, workarounds like the one on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30618" title="#30618: enhancement: Clean up Customizer Media Control CSS (closed: fixed)"&gt;#30618&lt;/a&gt; are possible, if inconvenient.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #30618 (Clean up Customizer Media Control CSS) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 30 Apr 2016 06:31:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30618#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30618#comment:3/1461997886222663</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Forgot this ticket existed, but these issues are still fixable. In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/30618/30618.diff" title="Attachment '30618.diff' in Ticket #30618"&gt;30618.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/30618/30618.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Re-organize markup structure for simplification (removes excessive nested divs).
&lt;/li&gt;&lt;li&gt;Restructure CSS so that we don't need to duplicate selectors for every different control type. Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30713" title="#30713: enhancement: Customizer control subclasses (custom controls) should have all parent ... (closed: maybelater)"&gt;#30713&lt;/a&gt;, which may not be able to be fixed in a reasonable way but this addresses the biggest pain point that it causes.
&lt;/li&gt;&lt;li&gt;Remove CSS for box around preview, which hasn't been visible since &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31336" title="#31336: task (blessed): Customizer: separate navigation from options UI for better UX by ... (closed: fixed)"&gt;#31336&lt;/a&gt; (box color is the background color).
&lt;/li&gt;&lt;li&gt;Don't set a min-height on the media preview, to prevent stretched images and awkward spacing. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36175" title="#36175: enhancement: Simplify the Customizer Image Control action buttons (closed: maybelater)"&gt;#36175&lt;/a&gt; for additional considerations such as max-height.
&lt;/li&gt;&lt;li&gt;Remove 2px border radius from images in media controls (including file type icons).
&lt;/li&gt;&lt;li&gt;Note the large amount of net red in the patch.
&lt;/li&gt;&lt;li&gt;Most of the PHP changes are indentation changes; actual changes are in reorganizing the repetitive nested divs.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
For now, let's leave the issue of the hierarchy between the change and remove buttons for another ticket. All of the issues listed above primarily have the net effect of cleaning up large amount of css (much of which is legacy from headers/elsewhere and not needed), which will make it much easier to improve the media controls moving forward. There are a couple of very minor visual changes as noted above, but most users will not notice them. Further design improvements can happen more easily once this is in. Note that the header images control was left completely as-is, since it eventually needs to be merged back into the new generic media controls anyway, see &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36581" title="#36581: enhancement: Customizer Header Image Control should extend the cropped image control (new)"&gt;#36581&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
This will likely break patches for tickets like &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36175" title="#36175: enhancement: Simplify the Customizer Image Control action buttons (closed: maybelater)"&gt;#36175&lt;/a&gt;, but I'd prefer to get this in and then go back to adjust accordingly. As a result, the sooner we can get this in, the better, so that we can loop back to the other tickets with patches that are milestoned for 4.6.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34213 (Change priority for loading theme/plugin translations) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 30 Apr 2016 06:21:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34213#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34213#comment:17/1461997291031490</guid>
      <description>&lt;p&gt;
@ocean90 Good catch! I think we're fine by adding that to the last line where &lt;code&gt;$path&lt;/code&gt; is used:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;… load_textdomain( $domain, $path . '/' . $mofile ); …&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
I can whip up a new patch with that if it sounds good. Also, I was thinking of adding &lt;code&gt;@since&lt;/code&gt; notes to document the change.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>30618.diff attached to Ticket #30618</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 30 Apr 2016 06:19:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/30618/30618.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/30618/30618.diff/1461997155828385</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>30618.after.PNG attached to Ticket #30618</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 30 Apr 2016 06:14:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/30618/30618.after.PNG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/30618/30618.after.PNG/1461996888929343</guid>
      <description>&lt;p&gt;
With &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/30618/30618.diff" title="Attachment '30618.diff' in Ticket #30618"&gt;30618.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/30618/30618.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35126 (Improvements for the new .button-link CSS class) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 30 Apr 2016 04:35:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35126#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35126#comment:13/1461990944979609</guid>
      <description>&lt;p&gt;
I'm fine with the added underline in the customizer, since that would match the delete buttons. I'm not sure if the button-link style is generally the best for this, but it provides nice hierarchy with the add buttons so we can keep it for now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36657 (Live Responsive Preview buttons not aligned) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 30 Apr 2016 04:04:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36657#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36657#comment:8/1461989045130262</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
While I'm not necessarily opposed to &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36657/36657.patch" title="Attachment '36657.patch' in Ticket #36657"&gt;36657.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36657/36657.patch" title="Download"&gt;​&lt;/a&gt; if it fixes the issue (but not in a minor release), core can't reasonably accommodate plugins that break core styles, even when the core styles are newer. My suggestion would be to track down the plugin and contact the authors to investigate the cause directly and increase the specificity of their CSS rules, as any conflicts could continue to cause issues if core styles are adjusted in the future.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35990 (Registering a custom post type should create a Recent CPT posts widget type) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Sat, 30 Apr 2016 03:10:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35990#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35990#comment:7/1461985819074861</guid>
      <description>&lt;p&gt;
bbPress includes its own "Recent widgets", I don't think bbPress' custom post types should be re-regisered with new "Recent widgets", they'd be duplicates and confusing for bbPress users.
&lt;/p&gt;
&lt;p&gt;
This should be opt-in via a new argument in &lt;code&gt;register_post_type()&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28216 (Allow to register pre-instantiated widgets) reopened</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 29 Apr 2016 22:44:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28216#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28216#comment:25/1461969854602656</guid>
      <description>&lt;p&gt;
@jdgrimes thank you for that information. How does &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/28216/28216.8.fallback.diff" title="Attachment '28216.8.fallback.diff' in Ticket #28216"&gt;28216.8.fallback.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/28216/28216.8.fallback.diff" title="Download"&gt;​&lt;/a&gt; look for providing a fallback in the case where &lt;code&gt;spl_object_hash()&lt;/code&gt; is not available? It takes a somewhat similar approach as &lt;code&gt;_wp_filter_build_unique_id()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>28216.8.fallback.diff attached to Ticket #28216</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 29 Apr 2016 22:42:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28216/28216.8.fallback.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28216/28216.8.fallback.diff/1461969777013413</guid>
      <description>&lt;p&gt;
Provide fallback if spl_object_hash() is not available
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33421 (wp_editor with custom editor_id not working) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 29 Apr 2016 22:33:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33421#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33421#comment:5/1461969203469489</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Don't think this error has anything to do with the editor. There is no &lt;code&gt;coerce&lt;/code&gt; anywhere in there.
&lt;/p&gt;
&lt;p&gt;
Looks like this may be an error in the media modal (media-audiovideo.js or media-editor.js) most likely caused by wrong loading order. Perhaps look at the call trace on the first error, and open a new ticket if you can reliably reproduce it with all plugins disabled and a default theme.
&lt;/p&gt;
&lt;p&gt;
Leaving this open for now, waiting for more feedback.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36687 (Feature to override WP_Query to provide results from other source) updated</title>
      
        <dc:creator>jpdavoutian</dc:creator>

      <pubDate>Fri, 29 Apr 2016 22:23:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36687#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36687#comment:2/1461968593675031</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the quick reply.
&lt;/p&gt;
&lt;p&gt;
Yes, I have seen the plugins you suggest.
There are a couple of issues with them.
&lt;/p&gt;
&lt;p&gt;
First of all they deal only with search results and not the wordpress queries in general.
&lt;/p&gt;
&lt;p&gt;
Secondly, you can see that the posts_request filter actually is returning an sql statement that is dummy.
&lt;a class="ext-link" href="https://github.com/10up/ElasticPress/blob/develop/classes/class-ep-wp-query-integration.php#L336"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/10up/ElasticPress/blob/develop/classes/class-ep-wp-query-integration.php#L336&lt;/a&gt;
Although this approach is clever, it actually hits the database for nothing.
&lt;/p&gt;
&lt;p&gt;
But the most serious issue in my opinion is that it does not allow to intercept queries when we request only post ids. You simply cannot do it.
Many plugins make use of such queries and there is no way these queries to be served from solr or any other similar service.
&lt;/p&gt;
&lt;p&gt;
By having one more filter in wp-includes/query.php and a few more checks in code, we could actually generalize the use of search services without affecting or rewriting other plugins.
I have placed an action in wp-includes/query.php, line 3548
$this-&amp;gt;is_external_query = apply_filters_ref_array( 'posts_query_external', array( $this-&amp;gt;request, &amp;amp;$this ) );
and later on I just check the $this-&amp;gt;is_external_query to if I need to count posts or other stuff.
&lt;/p&gt;
&lt;p&gt;
I'm already working on such a case (woocommerce layered navigation) and have great success till now and the performance improvement is huge.
There are of course some minor issues I haven't solved yet and maybe cases I can't even think of, since my experience in wordpress is limited (that's why I haven't uploaded any code yet).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33421 (wp_editor with custom editor_id not working) updated</title>
      
        <dc:creator>LewisCowles</dc:creator>

      <pubDate>Fri, 29 Apr 2016 22:10:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33421#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33421#comment:4/1461967835841340</guid>
      <description>&lt;p&gt;
Also enabling editor in custom post type definition and disabling call to wp_editor seems to work. It does make the CPT edit post screen look absolutely terrible, but at least it works. I've implemented this as a for-now fix for my plugin, but I'd really like it if wp_editor worked or was deprecated. Or to hear from other plugin authors about any work-around for the apparent breakage.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28216 (Allow to register pre-instantiated widgets) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Fri, 29 Apr 2016 21:47:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28216#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28216#comment:24/1461966470222822</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28216#comment:20" title="Comment 20"&gt;westonruter&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@PeterRKnight How fortunate that &lt;code&gt;spl_object_hash()&lt;/code&gt; is available in PHP 5.2! However, I see it is used in &lt;code&gt;_wp_filter_build_unique_id()&lt;/code&gt; but has an alternate case for handling if the function is not defined. This worried me in that perhaps the function could be disabled in 5.2. But see &lt;a href="https://core.trac.wordpress.org/ticket/21267#comment:4"&gt;#21267&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Since PHP 5.2 (the required version for WP is 5.2.4), &lt;code&gt;spl_object_hash&lt;/code&gt; exists, which means the &lt;code&gt;else&lt;/code&gt; statement and &lt;code&gt;function_exists()&lt;/code&gt; check are completely useless in &lt;code&gt;_wp_filter_build_unique_id()&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So I think we're safe.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The reason that the &lt;code&gt;function_exists()&lt;/code&gt; check is needed is that the SPL extension can be disabled prior to PHP 5.3.0. So in 5.2.0 it is on by default but &lt;a class="ext-link" href="https://secure.php.net/manual/en/spl.installation.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;prior to 5.3.0 it can be disabled&lt;/a&gt;. In which case the functions that it provides wouldn't be available.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33421 (wp_editor with custom editor_id not working) updated</title>
      
        <dc:creator>LewisCowles</dc:creator>

      <pubDate>Fri, 29 Apr 2016 21:35:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33421#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33421#comment:3/1461965725150071</guid>
      <description>&lt;p&gt;
OS: Ubuntu 16.04
Browser: Google Chrome (official google repo's stable) Version 50.0.2661.94 (64-bit), problem also persists in Firefox from 16.04 repo's v46.0, and Opera v36.0.2130.65 (yet to test in windows)
&lt;/p&gt;
&lt;p&gt;
Confirmed Windows 10 64-bit
Google Chrome 49.0.2623.112 (Official Build) m (32-bit)
Mozilla Firefox 45.0.1 and 46.0
Internet Explorer Edge (latest)
&lt;/p&gt;
&lt;p&gt;
WordPress Version 4.5 (for some reason it's not a listed version in the select box)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Screenshot from 2016-04-29 22-27-49.png attached to Ticket #33421</title>
      
        <dc:creator>LewisCowles</dc:creator>

      <pubDate>Fri, 29 Apr 2016 21:34:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33421/Screenshot%20from%202016-04-29%2022-27-49.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33421/Screenshot%20from%202016-04-29%2022-27-49.png/1461965657362248</guid>
      <description>&lt;p&gt;
Screenshot of error in chrome console
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33421 (wp_editor with custom editor_id not working) reopened</title>
      
        <dc:creator>LewisCowles</dc:creator>

      <pubDate>Fri, 29 Apr 2016 21:33:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33421#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33421#comment:2/1461965608688615</guid>
      <description>&lt;p&gt;
I'm sure this bug is about more than square braces. I have the same error, without curly braces in 4.5, with code that worked in 4.4...
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;?php wp_editor( wpautop(stripslashes($post-&amp;gt;post_content)), 'content', ['media_buttons'=&amp;gt;false,'textarea_name'=&amp;gt;'content','dfw'=&amp;gt;true,'tiny_mce'=&amp;gt;true,'drag_drop_upload'=&amp;gt;true] ); ?&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This code exists within my view, $post is sent to the view, and I can confirm that the textarea has the post's content, but the wp_editor has JS errors (i'll add an attachment also for this)
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #36687 (Feature to override WP_Query to provide results from other source) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 29 Apr 2016 20:40:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36687#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36687#comment:1/1461962433325764</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @jpdavoutian - Thanks for the ticket, and welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
It would be helpful to hear more about how you think this feature would be implemented, and how you'd use it. There are a number of plugins doing something similar to what you've suggested, and they're "tricking" &lt;code&gt;WP_Query&lt;/code&gt; into fetching content from elsewhere using the &lt;code&gt;posts_request&lt;/code&gt; and &lt;code&gt;the_posts&lt;/code&gt; filters. See eg &lt;a class="ext-link" href="https://github.com/10up/ElasticPress/blob/develop/classes/class-ep-wp-query-integration.php#L55"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/10up/ElasticPress/blob/develop/classes/class-ep-wp-query-integration.php#L55&lt;/a&gt; Can you say more about how your approach would differ, and what advantages it would offer beyond these existing techniques?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35381 (Introduce `WP_Term_Query`) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 29 Apr 2016 20:37:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35381#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35381#comment:5/1461962223543050</guid>
      <description>&lt;p&gt;
@spacedmonkey I agree that it makes sense to move toward centralizing term-related queries, yes. Let's not do that in this specific ticket, but let's keep it in mind to make sure that the architectural decisions made here don't preclude the kind of improvements you're talking about.
&lt;/p&gt;
&lt;p&gt;
@flixos90 This is really excellent. Thanks for working on it.
&lt;/p&gt;
&lt;p&gt;
Running &lt;code&gt;$ phpunit --group taxonomy&lt;/code&gt;, a bunch of stuff is failing. Most of the notices appear to be due to some variable names that weren't changed properly, but there also appears to be a bunch of tests related to hierarchical terms that are related to each other. I haven't had a chance to debug this in detail.
&lt;/p&gt;
&lt;p&gt;
Most of your improvements sound worth considering, but I'm concerned about doing them all at once, especially in the absence of unit tests that describe the issues:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I also added a $suppress_filters argument which should probably (when active) disable more filters than it currently does in this implementation.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The only place where we currently have this feature is in &lt;code&gt;WP_Query&lt;/code&gt;. I think we need a separate ticket to discuss whether it's a feature that we need here, and if so, how it should behave.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I found a bug that is possible to happen even in current versions of WordPress
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is pretty complicated, and I'm very wary of touching it without tests. I suggest we fix it separately, either before or after &lt;code&gt;WP_Term_Query&lt;/code&gt;. I wonder whether your fix is related to the unit test failures we're seeing. (It sounds like the fix might be straightforward enough to do *before* and then include in a refreshed patch here, but I'd like to hear what you think about it.)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Another problem in my opinion is the get_terms_fields filter. Since this class always queries for IDs (or a count), using the get_terms_fields filter to modify the requested fields in any way will most probably mess up the query
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah. I'm not a fan of this filter, or 'fields' arguments in general, since they tend to result in cache misses. I would imagine that most people using the filter are doing it to remove fields from the &lt;code&gt;SELECT&lt;/code&gt; statement, in which case there are no real compatibility concerns. However, it's possible that people are using it to *add* fields, possibly related to another table (which would be joined in another filter like 'terms_clauses'). This needs research before we make a decision. A search through the plugin repo is probably a good place to start, as is some reading on the backstory behind 'get_terms_fields' and friends. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9004" title="#9004: defect (bug): More filtering in get_terms() and wp_generate_tag_cloud() (closed: fixed)"&gt;#9004&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
@flixos90 If you're able to debug the unit test issues and perhaps address some of the items above, that would be great. This ticket is something I would like to prioritize for 4.6, and I'll be able to dedicate time to refining the patch, but not until next week.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36295 (Docs: Add phpdocs for WP_Feed_Cache, WP_Feed_Cache_Transient, ...) updated</title>
      
        <dc:creator>stevenkword</dc:creator>

      <pubDate>Fri, 29 Apr 2016 19:26:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36295#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36295#comment:6/1461958002637630</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @ramiy,
&lt;/p&gt;
&lt;p&gt;
I've made a few changes through my update, (&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36295/36295.2.diff" title="Attachment '36295.2.diff' in Ticket #36295"&gt;attachment:36295.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36295/36295.2.diff" title="Download"&gt;​&lt;/a&gt;).  Here are a few suggestions for upcoming patches.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Naming your patch after the ticket it relates to will help other contributors to keep track of the many patches they see.
&lt;/li&gt;&lt;li&gt;When patches are submitted relative to the &lt;code&gt;/src/&lt;/code&gt; directory, it's a good indication that the patch author is aware of unit testing.  In this document patch, it's less important, but it's good practice.
&lt;/li&gt;&lt;li&gt;@access values are only necessary for class methods if the class method is private. See &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/inline-documentation-standards/php/#1-functions-class-methods"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PHP Documentation Standards&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;@since values can be a little tricky to trace back.  I checked out the entire &lt;code&gt;/tags/&lt;/code&gt; directory from the WordPress SVN and then used ACK to search for the first instance of a string.  Something like this:
&lt;/li&gt;&lt;/ul&gt;&lt;pre class="wiki"&gt;$ svn co https://core.svn.wordpress.org/tags/ core
$ cd core
$ ack -1 "class WP_SimplePie_Sanitize_KSES extends SimplePie_Sanitize"
3.5/wp-includes/class-feed.php
105:class WP_SimplePie_Sanitize_KSES extends SimplePie_Sanitize {
&lt;/pre&gt;&lt;p&gt;
In this example, the class was introduced in 3.5.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36533 (Doesn't work browse media libary on Frontend) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 29 Apr 2016 19:23:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36533#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36533#comment:29/1461957827166274</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1461957825000129"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36534 (Media Upload Issue Since 4.5 Upgrade) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 29 Apr 2016 19:15:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36534#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36534#comment:39/1461957316170227</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1461957312000112"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36295.2.diff attached to Ticket #36295</title>
      
        <dc:creator>stevenkword</dc:creator>

      <pubDate>Fri, 29 Apr 2016 19:11:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36295/36295.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36295/36295.2.diff/1461957067396979</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36588 (Test_Image_Resize_GD::test_resize_bad_image() doesn't use GD) closed</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Fri, 29 Apr 2016 19:10:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36588#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36588#comment:3/1461957019919409</guid>
      <description>fixed: &lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36587" title="#36587: defect (bug): PHPUnit Tests fail with PHP7 and Imagick 3.4.x (closed: fixed)"&gt;#36587&lt;/a&gt; addresses the error handler concerns with &lt;code&gt;ImageMagick&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36657 (Live Responsive Preview buttons not aligned) updated</title>
      
        <dc:creator>zarkod</dc:creator>

      <pubDate>Fri, 29 Apr 2016 18:57:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36657#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36657#comment:7/1461956252788204</guid>
      <description>&lt;p&gt;
@celloexpressions must be some plugin conflict, good on fresh install.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35990 (Registering a custom post type should create a Recent CPT posts widget type) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 29 Apr 2016 18:49:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35990#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35990#comment:6/1461955779567959</guid>
      <description>&lt;p&gt;
With &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37329" title="Widgets: Allow `WP_Widget` subclass instances (objects) to be ..."&gt;[37329]&lt;/a&gt;, the approach in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35990/35990.0.diff" title="Attachment '35990.0.diff' in Ticket #35990"&gt;35990.0.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35990/35990.0.diff" title="Download"&gt;​&lt;/a&gt; should now be viable.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #28216,​35990 batch updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 29 Apr 2016 18:48:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=28216%2C35990</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=28216%2C35990/1461955708657814</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37329" title="Widgets: Allow `WP_Widget` subclass instances (objects) to be ..."&gt;37329&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Widgets: Allow &lt;code&gt;WP_Widget&lt;/code&gt; subclass instances (objects) to be registered/unregistered in addition to &lt;code&gt;WP_Widget&lt;/code&gt; subclass names (strings).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Allows widgets to be registered which rely on dependency injection. Also will allow for new widget types to be created dynamically (e.g. a Recent Posts widget for each registered post type).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/35990" title="#35990: feature request: Registering a custom post type should create a Recent CPT posts widget type (new)"&gt;#35990&lt;/a&gt;.&lt;br /&gt;
Props mdwheele, PeterRKnight, westonruter.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28216" title="#28216: defect (bug): Allow to register pre-instantiated widgets (closed: fixed)"&gt;#28216&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [37329]: Widgets: Allow `WP_Widget` subclass instances (objects) to be ...</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 29 Apr 2016 18:48:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37329</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37329/1461955707973095</guid>
      <description>&lt;p&gt;
Widgets: Allow &lt;code&gt;WP_Widget&lt;/code&gt; subclass instances (objects) to be registered/unregistered in addition to &lt;code&gt;WP_Widget&lt;/code&gt; subclass names (strings).
&lt;/p&gt;
&lt;p&gt;
Allows widgets to be registered which rely on dependency injection. Also will allow for new widget types to be created dynamically (e.g. a Recent Posts widget for each registered post type).
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/35990" title="#35990: feature request: Registering a custom post type should create a Recent CPT posts widget type (new)"&gt;#35990&lt;/a&gt;.
Props mdwheele, PeterRKnight, westonruter.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28216" title="#28216: defect (bug): Allow to register pre-instantiated widgets (closed: fixed)"&gt;#28216&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>28216.7.diff attached to Ticket #28216</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 29 Apr 2016 18:38:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28216/28216.7.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28216/28216.7.diff/1461955101681849</guid>
      <description>&lt;p&gt;
Test registering multiple instances of the same class
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>28216.6.diff attached to Ticket #28216</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 29 Apr 2016 18:24:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28216/28216.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28216/28216.6.diff/1461954262076729</guid>
      <description>&lt;p&gt;
Fix docs
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36295 (Docs: Add phpdocs for WP_Feed_Cache, WP_Feed_Cache_Transient, ...) updated</title>
      
        <dc:creator>stevenkword</dc:creator>

      <pubDate>Fri, 29 Apr 2016 18:19:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36295#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36295#comment:5/1461953978506508</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36295#comment:4" title="Comment 4"&gt;ramiy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@stevenkword @DrewAPicture,
&lt;/p&gt;
&lt;p&gt;
How can I find out in which version the class/method/property was added?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@ramiy
I'm working right now on getting a process in place for this.  I'll let you know my steps as soon as I get it worked out.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36588 (Test_Image_Resize_GD::test_resize_bad_image() doesn't use GD) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Fri, 29 Apr 2016 17:51:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36588#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36588#comment:2/1461952315518449</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37328" title="Media/Unit Tests: ensure that image sizes are indeed removed when ..."&gt;37328&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media/Unit Tests: ensure that image sizes are indeed removed when errors are raised before assertions in &lt;code&gt;Tests_Media&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36588" title="#36588: defect (bug): Test_Image_Resize_GD::test_resize_bad_image() doesn't use GD (closed: fixed)"&gt;#36588&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37328]: Media/Unit Tests: ensure that image sizes are indeed removed when ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Fri, 29 Apr 2016 17:51:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37328</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37328/1461952314769233</guid>
      <description>&lt;p&gt;
Media/Unit Tests: ensure that image sizes are indeed removed when errors are raised before assertions in &lt;code&gt;Tests_Media&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36588" title="#36588: defect (bug): Test_Image_Resize_GD::test_resize_bad_image() doesn't use GD (closed: fixed)"&gt;#36588&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #34114 (Remove the requirement to call load_plugin_textdomain() or ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 29 Apr 2016 16:29:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34114#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34114#comment:20/1461947378952523</guid>
      <description>&lt;p&gt;
Just did some very basic profiling on a medium-sized site with about a dozen plugins. There were 4 scenarios:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;No patch, en_US
&lt;/li&gt;&lt;li&gt;No patch, de_DE
&lt;/li&gt;&lt;li&gt;Patch applied, en_US
&lt;/li&gt;&lt;li&gt;Patch applied, de_DE
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
All plugins had de_DE translation files, so for the tests with the patch applied I removed all the &lt;code&gt;load_plugin_textdomain()&lt;/code&gt; calls. What I noticed
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;When using de_DE (no patch applied), the site was 30ms slower in average, using about 10MB more memory.
&lt;/li&gt;&lt;li&gt;When using en_US (patch applied), load time and memory consumption was identical, not real changes there
&lt;/li&gt;&lt;li&gt;When using de_DE (patch applied), load time was identical as without the patch, memory consumption went down by 1MB.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
So, to sum this up, nothing really changes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36588 (Test_Image_Resize_GD::test_resize_bad_image() doesn't use GD) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Fri, 29 Apr 2016 16:15:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36588#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36588#comment:1/1461946538449115</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37327" title="Media/Unit Tests: ensure that the GD absrtraction is used for GD unit ..."&gt;37327&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media/Unit Tests: ensure that the GD absrtraction is used for GD unit tests for Images. Some of the procedural GD API functions can still throw &lt;code&gt;ImagickException&lt;/code&gt;, which is fun.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36588" title="#36588: defect (bug): Test_Image_Resize_GD::test_resize_bad_image() doesn't use GD (closed: fixed)"&gt;#36588&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37327]: Media/Unit Tests: ensure that the GD absrtraction is used for GD unit ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Fri, 29 Apr 2016 16:15:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37327</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37327/1461946537928275</guid>
      <description>&lt;p&gt;
Media/Unit Tests: ensure that the GD absrtraction is used for GD unit tests for Images. Some of the procedural GD API functions can still throw &lt;code&gt;ImagickException&lt;/code&gt;, which is fun.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36588" title="#36588: defect (bug): Test_Image_Resize_GD::test_resize_bad_image() doesn't use GD (closed: fixed)"&gt;#36588&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36707 (Add pre_get_blogs_of_user filter.) updated</title>
      
        <dc:creator>jtsternberg</dc:creator>

      <pubDate>Fri, 29 Apr 2016 15:58:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36707#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36707#comment:8/1461945535072027</guid>
      <description>&lt;p&gt;
Thanks @jeremyfelt!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36722 (No way to access media "Attachment Display Settings" using wp.media) created</title>
      
        <dc:creator>chattyboy</dc:creator>

      <pubDate>Fri, 29 Apr 2016 15:55:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36722</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36722/1461945347789667</guid>
      <description>&lt;p&gt;
I am using custom wp.media request to get WP Media uploader iframe on front end.
&lt;/p&gt;
&lt;p&gt;
Added scripts, styles and media:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_enqueue_script('jquery');
wp_enqueue_media();
wp_enqueue_style( 'wp-admin' );
&lt;/pre&gt;&lt;p&gt;
then I am using JS to open the Media iframe:
&lt;/p&gt;
&lt;pre class="wiki"&gt;var custom_uploader;
jQuery(document).ready(function($){
	if (custom_uploader) {custom_uploader.open();return;}
	var parent_container = parent.document.body;
	custom_uploader = wp.media.frames.file_frame = wp.media({
		frame: 'post',
		state: 'insert',
		title: 'Choose Image',
		library : {type:'image'},
		button: {text: 'Choose Image'},
		multiple: false
	});
	custom_uploader.on('insert',function(){
		var attachment = custom_uploader.state().get('selection').first().toJSON();
		console.log( attachment );
	});
	custom_uploader.open();
});
&lt;/pre&gt;&lt;p&gt;
after selecting needed image, link and size I get the result:
&lt;/p&gt;
&lt;pre class="wiki"&gt;{"id":2182,"title":"WordPress","filename":"WordPress.jpg","url":"http://localhost:8080/mgwebthemes.com/uploads/2015/05/WordPress.jpg","link":"http://localhost:8080/mgwebthemes.com/wordpress/","alt":"","author":"1","description":"","caption":"","name":"WordPress","status":"inherit","uploadedTo":2166,"date":"2015-05-13T09:09:47.000Z","modified":"2015-05-13T09:09:47.000Z","menuOrder":0,"mime":"image/jpeg","type":"image","subtype":"jpeg","icon":"http://localhost:8080/mgwebthemes.com/wp-includes/images/media/default.png","dateFormatted":"13/05/2015","nonces":{"update":"2d7619f512","delete":"725c6d8639","edit":"709844b592"},"editLink":"http://localhost:8080/mgwebthemes.com/wp-admin/post.php?post=2182&amp;amp;action=edit","meta":false,"authorName":"admin","uploadedToLink":"http://localhost:8080/mgwebthemes.com/wp-admin/post.php?post=2166&amp;amp;action=edit","uploadedToTitle":"Test","filesizeInBytes":8990,"filesizeHumanReadable":"9 kB","sizes":{"thumbnail":{"height":150,"width":150,"url":"http://localhost:8080/mgwebthemes.com/uploads/2015/05/WordPress-150x150.jpg","orientation":"landscape"},"full":{"url":"http://localhost:8080/mgwebthemes.com/uploads/2015/05/WordPress.jpg","height":249,"width":201,"orientation":"portrait"}},"height":249,"width":201,"orientation":"portrait",...}
&lt;/pre&gt;&lt;p&gt;
it does not contain any Attachment Display Settings options.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Tickets #31746,​36707 batch updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Fri, 29 Apr 2016 15:52:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=31746%2C36707</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=31746%2C36707/1461945154769699</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37326" title="Multisite: Add the `pre_get_blogs_of_user` filter
This allows a ..."&gt;37326&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Multisite: Add the &lt;code&gt;pre_get_blogs_of_user&lt;/code&gt; filter&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This allows a plugin to short circuit &lt;code&gt;get_blogs_of_user()&lt;/code&gt; in cases where the default behavior of the function is unnecessary or slow. (e.g. A user is a member of thousands of sites.)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props jsternberg.&lt;br /&gt;
See &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/31746" title="#31746: defect (bug): get_blogs_of_user() can be very slow when a user is a member of ... (reviewing)"&gt;#31746&lt;/a&gt;, Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36707" title="#36707: enhancement: Add pre_get_blogs_of_user filter. (closed: fixed)"&gt;#36707&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [37326]: Multisite: Add the `pre_get_blogs_of_user` filter  This allows a ...</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Fri, 29 Apr 2016 15:52:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37326</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37326/1461945154268582</guid>
      <description>&lt;p&gt;
Multisite: Add the &lt;code&gt;pre_get_blogs_of_user&lt;/code&gt; filter
&lt;/p&gt;
&lt;p&gt;
This allows a plugin to short circuit &lt;code&gt;get_blogs_of_user()&lt;/code&gt; in cases where the default behavior of the function is unnecessary or slow. (e.g. A user is a member of thousands of sites.)
&lt;/p&gt;
&lt;p&gt;
Props jsternberg.
See &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/31746" title="#31746: defect (bug): get_blogs_of_user() can be very slow when a user is a member of ... (reviewing)"&gt;#31746&lt;/a&gt;, Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36707" title="#36707: enhancement: Add pre_get_blogs_of_user filter. (closed: fixed)"&gt;#36707&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36571 (Add `$comment` parameter to `get_comment_author_email_link()`) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Fri, 29 Apr 2016 15:49:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36571#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36571#comment:6/1461944975987138</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
#needs-unit-tests - there currently are none
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35433 (Walker_Comment::comment calls comment_text which forces the comment to ...) closed</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Fri, 29 Apr 2016 15:46:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35433#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35433#comment:6/1461944800293649</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37325" title="Comments: pass `$comment` to `comment_text()` in ..."&gt;37325&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Comments: pass &lt;code&gt;$comment&lt;/code&gt; to &lt;code&gt;comment_text()&lt;/code&gt; in &lt;code&gt;Walker_Comment::comment()&lt;/code&gt; instead of using a function which can skip the cache.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props rachelbaker.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35433" title="#35433: defect (bug): Walker_Comment::comment calls comment_text which forces the comment to ... (closed: fixed)"&gt;#35433&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37325]: Comments: pass `$comment` to `comment_text()` in ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Fri, 29 Apr 2016 15:46:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37325</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37325/1461944799568978</guid>
      <description>&lt;p&gt;
Comments: pass &lt;code&gt;$comment&lt;/code&gt; to &lt;code&gt;comment_text()&lt;/code&gt; in &lt;code&gt;Walker_Comment::comment()&lt;/code&gt; instead of using a function which can skip the cache.
&lt;/p&gt;
&lt;p&gt;
Props rachelbaker.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35433" title="#35433: defect (bug): Walker_Comment::comment calls comment_text which forces the comment to ... (closed: fixed)"&gt;#35433&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36707 (Add pre_get_blogs_of_user filter.) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Fri, 29 Apr 2016 15:43:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36707#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36707#comment:6/1461944616594964</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36707#comment:5" title="Comment 5"&gt;jtsternberg&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Should we start with &lt;code&gt;false&lt;/code&gt; instead and allow for the return of an empty array?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Actually yah, that seems like a good idea, though it probably should be &lt;code&gt;null&lt;/code&gt; in keeping with the precedent of other &lt;code&gt;'pre_*&lt;/code&gt; filters in WordPress.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, it looks like the static variable is a no-go?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
For this ticket, yes. We can continue discussing improvements to &lt;code&gt;get_blogs_of_user()&lt;/code&gt; on &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/31746" title="#31746: defect (bug): get_blogs_of_user() can be very slow when a user is a member of ... (reviewing)"&gt;#31746&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36719 (get_post_meta) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 29 Apr 2016 14:51:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36719#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36719#comment:5/1461941487076889</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Feel free to reopen with steps to reproduce on a clean install if it turns out to be a bug in WordPress core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36721 (Add secondary location for plugins and/or themes.) created</title>
      
        <dc:creator>scotthack</dc:creator>

      <pubDate>Fri, 29 Apr 2016 14:43:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36721</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36721/1461941036005348</guid>
      <description>&lt;p&gt;
I run my sites on my own dedicated box.  I have about 60 WordPress installs running on the site and about 2 years ago I slowly started migrating all of the sites into a multi-tenant install.  It has been working really, really well, and has made updating the sites a lot easier, etc.  I've also been doing the same thing by symlinking plugin directories inside the wp-content/plugins directory.  However, ideally, I'd like to be able to add a line to the wp-config file with a secondary location of plugins that I could universally install on my sites.  Then I wouldn't need to create the symlinked folders on a site by site basis.  It would also add the ability to easily add a new plugin to all 60 sites without much fuss.  I don't want to move the location of my plugins folder.  I want to add a secondary location, so I can have plugins installed still in wp-content/plugins but also pull from another area.  An internal library of sorts.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #30866 (wordpress-Importer plugin xml parser unit testing fail.) updated</title>
      
        <dc:creator>ianmjones</dc:creator>

      <pubDate>Fri, 29 Apr 2016 14:37:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30866#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30866#comment:7/1461940659027220</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch 30866.2.patch still applies and works on 4.6.
&lt;/p&gt;
&lt;p&gt;
Without it, running unit tests on MAMP fail.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14584 (HTML entities in category and tag elements) updated</title>
      
        <dc:creator>ianmjones</dc:creator>

      <pubDate>Fri, 29 Apr 2016 13:56:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14584#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14584#comment:6/1461938184291383</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The importer requires that the CDATA contain data in the same format that will be inserted into the database, which means html entity encoded characters are required.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>14584.patch attached to Ticket #14584</title>
      
        <dc:creator>ianmjones</dc:creator>

      <pubDate>Fri, 29 Apr 2016 13:51:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14584/14584.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14584/14584.patch/1461937867194716</guid>
      <description>&lt;p&gt;
Refreshed for 4.6, replaced commented out red-herring code with explanation of why encoded html entities are in CDATA.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36719 (get_post_meta) closed</title>
      
        <dc:creator>pubblivori</dc:creator>

      <pubDate>Fri, 29 Apr 2016 13:15:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36719#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36719#comment:4/1461935734814243</guid>
      <description>invalid: &lt;p&gt;
probable that is my problem.... since I'm not a developer and is hard to figure out what the problem is. the only thing I know that was running just before the upgrade...and after that no more...
I close this report by now.....thanyou for your patience....
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36295 (Docs: Add phpdocs for WP_Feed_Cache, WP_Feed_Cache_Transient, ...) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Fri, 29 Apr 2016 13:15:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36295#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36295#comment:4/1461935705971560</guid>
      <description>&lt;p&gt;
@stevenkword @DrewAPicture,
&lt;/p&gt;
&lt;p&gt;
How can I find out in which version the class/method/property was added?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #24884,​36718 batch updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 29 Apr 2016 13:14:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=24884%2C36718</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=24884%2C36718/1461935660031400</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37324" title="Query: Discard non-scalar 'm' instead of attempting to sanitize.
 ..."&gt;37324&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Query: Discard non-scalar 'm' instead of attempting to sanitize.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;WP_Query&lt;/code&gt; discards most non-array date values ('year', 'monthnum', etc) by&lt;br /&gt;
casting to integer. Since &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/25138" title="Don't cast the 'm' query variable to an integer as the value can ..."&gt;[25138]&lt;/a&gt;, the 'm' parameter has been handled&lt;br /&gt;
as a string; see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24884" title="#24884: defect (bug): WP_Query's &amp;#34;m&amp;#34; parameter is cast to an int which is a problem due to ... (closed: fixed)"&gt;#24884&lt;/a&gt;. However, the string-handling introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/25138" title="Don't cast the 'm' query variable to an integer as the value can ..."&gt;[25138]&lt;/a&gt;&lt;br /&gt;
blindly attempted to handle arrays and other non-scalar types as strings,&lt;br /&gt;
resulting in PHP notices and invalid MySQL syntax.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props vortfu.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36718" title="#36718: defect (bug): WP_Query::parse_query does not handle the &amp;#34;m&amp;#34; param correctly (closed: fixed)"&gt;#36718&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [37324]: Query: Discard non-scalar 'm' instead of attempting to sanitize.  ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 29 Apr 2016 13:14:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37324</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37324/1461935658788690</guid>
      <description>&lt;p&gt;
Query: Discard non-scalar 'm' instead of attempting to sanitize.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;WP_Query&lt;/code&gt; discards most non-array date values ('year', 'monthnum', etc) by
casting to integer. Since &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/25138" title="Don't cast the 'm' query variable to an integer as the value can ..."&gt;[25138]&lt;/a&gt;, the 'm' parameter has been handled
as a string; see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24884" title="#24884: defect (bug): WP_Query's &amp;#34;m&amp;#34; parameter is cast to an int which is a problem due to ... (closed: fixed)"&gt;#24884&lt;/a&gt;. However, the string-handling introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/25138" title="Don't cast the 'm' query variable to an integer as the value can ..."&gt;[25138]&lt;/a&gt;
blindly attempted to handle arrays and other non-scalar types as strings,
resulting in PHP notices and invalid MySQL syntax.
&lt;/p&gt;
&lt;p&gt;
Props vortfu.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36718" title="#36718: defect (bug): WP_Query::parse_query does not handle the &amp;#34;m&amp;#34; param correctly (closed: fixed)"&gt;#36718&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36718 (WP_Query::parse_query does not handle the "m" param correctly) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 29 Apr 2016 13:05:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36718#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36718#comment:2/1461935140686361</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the patch!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27282 (WP_Query returns more results when there are sticky posts) updated</title>
      
        <dc:creator>bastho</dc:creator>

      <pubDate>Fri, 29 Apr 2016 12:49:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27282#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27282#comment:16/1461934154663453</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27282#comment:14" title="Comment 14"&gt;Trimension&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This simple design change would also bring some more benefits, because as a Post-Property it doesn't need the restriction to be only available in normal Posts but also in CPT's and it would also improve the performance because one query is better than two, Right ?!
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It means a migration script which updates all concerned posts before cleaning the options table.
&lt;/p&gt;
&lt;p&gt;
Maybe @bendoh 's patch can be applied while a new ticket is created to change the design.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;stop the bug
&lt;/li&gt;&lt;li&gt;redesign and migrate
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36720 (WP_Query should not return more than "posts_per_page" if ...) updated</title>
      
        <dc:creator>bastho</dc:creator>

      <pubDate>Fri, 29 Apr 2016 12:38:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36720#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36720#comment:3/1461933534667351</guid>
      <description>&lt;p&gt;
Thank you.
I could not find the original
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36719 (get_post_meta) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 29 Apr 2016 12:33:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36719#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36719#comment:3/1461933234087407</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;code&gt;get_post_meta()&lt;/code&gt; is used plenty of times in core and by many plugins out there. So far this is the first report about &lt;code&gt;get_post_meta()&lt;/code&gt; not working anymore in 4.5. Hence I'm pretty sure it's not a bug in WordPress itself.
&lt;/p&gt;
&lt;p&gt;
Does your problem still exist with all plugins disabled and using one of the default themes?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #27282,​36720 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 29 Apr 2016 12:31:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=27282%2C36720</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=27282%2C36720/1461933063640404</guid>
      <description>duplicate: &lt;p&gt;
Hey there,
&lt;/p&gt;
&lt;p&gt;
Thanks for your report! Looks like this is already being tracked in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/27282" title="#27282: defect (bug): WP_Query returns more results when there are sticky posts (new)"&gt;#27282&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #36719 (get_post_meta) updated</title>
      
        <dc:creator>pubblivori</dc:creator>

      <pubDate>Fri, 29 Apr 2016 12:30:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36719#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36719#comment:2/1461933051458691</guid>
      <description>&lt;p&gt;
I'm still doing some tests... but the fact is that a function using it stopped working after the upgrade...
I have to do te same reverse test into another site using the previous wp version. If the outuput is not the same.... something went wrong....
&lt;/p&gt;
&lt;pre class="wiki"&gt;Here the piece of code isolated:
//$vecchia_scheda = get_post_meta( 68846, 'vecchia_scheda', true ); //not working after upgrade
$custom_fields = get_post_custom(68846);
$vecchia_scheda = $custom_fields['vecchia_scheda'][0];
//mod working
$vecchio_slug= get_post_field( 'post_name', $vecchia_scheda );
$nuovo_slug= get_post_field( 'post_name', $ID );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36720 (WP_Query should not return more than "posts_per_page" if ...) updated</title>
      
        <dc:creator>bastho</dc:creator>

      <pubDate>Fri, 29 Apr 2016 12:29:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36720#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36720#comment:1/1461932970793781</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36720 (WP_Query should not return more than "posts_per_page" if ...) created</title>
      
        <dc:creator>bastho</dc:creator>

      <pubDate>Fri, 29 Apr 2016 12:28:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36720</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36720/1461932890868992</guid>
      <description>&lt;p&gt;
Case seen on a website containing 2849 posts where 2479 are sticky.
&lt;/p&gt;
&lt;p&gt;
calling from the home page:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WP_Query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;array&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s1"&gt;'order'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'DESC'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'orderby'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'post_date'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'post_type'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'post'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'posts_per_page'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'4'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'posts_type'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'post'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'post__not_in'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;array&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
returns 2479 posts while:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WP_Query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;array&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s1"&gt;'order'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'DESC'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'orderby'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'post_date'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'post_type'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'post'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'posts_per_page'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'4'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'posts_type'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'post'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'ignore_sticky_posts'&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="s1"&gt;'post__not_in'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;array&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
returns only 4 posts.
&lt;/p&gt;
&lt;p&gt;
For an unknown reason, the limit is not applied on stickies.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36719 (get_post_meta) updated</title>
      
        <dc:creator>sebastian.pisula</dc:creator>

      <pubDate>Fri, 29 Apr 2016 12:12:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36719#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36719#comment:1/1461931922508216</guid>
      <description>&lt;p&gt;
more information ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36719 (get_post_meta) created</title>
      
        <dc:creator>pubblivori</dc:creator>

      <pubDate>Fri, 29 Apr 2016 11:19:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36719</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36719/1461928741517610</guid>
      <description>&lt;p&gt;
After upgrade to 4.5.1 (from 4.4.2) the get_post_meta function stopped working.
I've made some tests with get_post_custom and seems working.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36718 (WP_Query::parse_query does not handle the "m" param correctly) updated</title>
      
        <dc:creator>vortfu</dc:creator>

      <pubDate>Fri, 29 Apr 2016 10:35:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36718#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36718#comment:1/1461926133688024</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>36718.patch attached to Ticket #36718</title>
      
        <dc:creator>vortfu</dc:creator>

      <pubDate>Fri, 29 Apr 2016 10:34:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36718/36718.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36718/36718.patch/1461926098027159</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36718 (WP_Query::parse_query does not handle the "m" param correctly) created</title>
      
        <dc:creator>vortfu</dc:creator>

      <pubDate>Fri, 29 Apr 2016 10:34:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36718</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36718/1461926052837176</guid>
      <description>&lt;p&gt;
The fix for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24884" title="#24884: defect (bug): WP_Query's &amp;#34;m&amp;#34; parameter is cast to an int which is a problem due to ... (closed: fixed)"&gt;#24884&lt;/a&gt; (in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/25138" title="Don't cast the 'm' query variable to an integer as the value can ..."&gt;r25138&lt;/a&gt;) introduced a bug where &lt;code&gt;WP_Query::parse_query()&lt;/code&gt; allows the &lt;code&gt;m&lt;/code&gt; param to be passed as a non scalar type - leading to a potential SQL query error in &lt;code&gt;WP_Query::get_posts()&lt;/code&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
wp&amp;gt; $q = new WP_Query( [ 'm' =&amp;gt; [ 123 ] ] );
wp&amp;gt; $q-&amp;gt;get_posts();
Warning: strlen() expects parameter 1 to be string, array given in ./wp-includes/query.php on line 1689
Warning: strlen() expects parameter 1 to be string, array given in ./wp-includes/query.php on line 1691
Warning: strlen() expects parameter 1 to be string, array given in ./wp-includes/query.php on line 1693
Warning: substr() expects parameter 1 to be string, array given in ./wp-includes/query.php on line 2627
Warning: strlen() expects parameter 1 to be string, array given in ./wp-includes/query.php on line 2628
Warning: strlen() expects parameter 1 to be string, array given in ./wp-includes/query.php on line 2630
Warning: strlen() expects parameter 1 to be string, array given in ./wp-includes/query.php on line 2632
Warning: strlen() expects parameter 1 to be string, array given in ./wp-includes/query.php on line 2634
Warning: strlen() expects parameter 1 to be string, array given in ./wp-includes/query.php on line 2636
&lt;/p&gt;
&lt;p&gt;
You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'AND wp_posts.post_type = 'post' AND (wp_posts.post_status = 'publish')  ORDER BY' at line 1 for query SELECT SQL_CALC_FOUND_ROWS  wp_posts.ID FROM wp_posts  WHERE 1=1  AND &lt;strong&gt;YEAR(wp_posts.post_date)= &lt;/strong&gt;AND wp_posts.post_type = 'post' AND (wp_posts.post_status = 'publish')  ORDER BY wp_posts.post_date DESC LIMIT 0, 10 ...
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36717 (Allow to access network and site properties using the current naming ...) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 29 Apr 2016 08:09:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36717#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36717#comment:1/1461917375530550</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36717/36717.diff" title="Attachment '36717.diff' in Ticket #36717"&gt;36717.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36717/36717.diff" title="Download"&gt;​&lt;/a&gt; is a patch that adds the necessary magic methods to &lt;code&gt;WP_Site&lt;/code&gt; and &lt;code&gt;WP_Network&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36717.diff attached to Ticket #36717</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 29 Apr 2016 08:08:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36717/36717.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36717/36717.diff/1461917336819506</guid>
      <description>&lt;p&gt;
patch with magic methods
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36717 (Allow to access network and site properties using the current naming ...) created</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 29 Apr 2016 08:07:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36717</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36717/1461917277263497</guid>
      <description>&lt;p&gt;
In multisite we have the issue that we used to call a site a blog and a network a site. Therefore the &lt;code&gt;WP_Site&lt;/code&gt; and &lt;code&gt;WP_Network&lt;/code&gt; classes use weird naming conventions for their properties. It has to be like that for backwards compatibility, but since the classes itself now use the new conventions, it can be extremely confusing to interact with them (&lt;code&gt;$site-&amp;gt;site_id&lt;/code&gt; will give me the network ID for example).
&lt;/p&gt;
&lt;p&gt;
That's why I'm proposing to add magic getters to both these classes, allowing to access these properties in the following way:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;in both classes, &lt;code&gt;id&lt;/code&gt; simply refers to the objects ID (so in &lt;code&gt;WP_Site&lt;/code&gt; it will be the site ID, and in &lt;code&gt;WP_Network&lt;/code&gt; it will be the network ID)
&lt;/li&gt;&lt;li&gt;to get the network ID of a site, we can use &lt;code&gt;$site-&amp;gt;network_id&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;to get the main site ID of a network, we can use &lt;code&gt;$network-&amp;gt;site_id&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
While this doesn't provide a functional benefit, it would make interacting with these classes a lot more logical. And it's also backwards compatible since we're only adding these new properties virtually.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Tickets #14671,​36713 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 29 Apr 2016 07:20:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=14671%2C36713</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=14671%2C36713/1461914430400094</guid>
      <description>duplicate: &lt;blockquote class="citation"&gt;
&lt;p&gt;
If you do not send enough args to an action, filter or callback, WordPress implodes. We can prevent this by checking the function we are about to call to see how many args it requires.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There's a patch on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14671" title="#14671: enhancement: Deprecate the &amp;#34;accepted args&amp;#34; argument in add_filter() and add_action() (closed: wontfix)"&gt;#14671&lt;/a&gt; that does that.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #36711 (Add caching to get_page_by_path) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 29 Apr 2016 07:01:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36711#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36711#comment:2/1461913307181272</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28216 (Allow to register pre-instantiated widgets) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 29 Apr 2016 06:58:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28216#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28216#comment:22/1461913081910545</guid>
      <description>&lt;p&gt;
@westonruter Inline &lt;code&gt;@see&lt;/code&gt; tags &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/inline-documentation-standards/php/#other-descriptions"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;should only be used for hooks&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31384 (Pingback does not work for schemeless URLs) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Fri, 29 Apr 2016 06:53:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31384#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31384#comment:4/1461912830422167</guid>
      <description>&lt;p&gt;
This should work if we change to wp_parse_url
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28216 (Allow to register pre-instantiated widgets) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 29 Apr 2016 06:22:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28216#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28216#comment:21/1461910967651999</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I fleshed out the unit tests, testing the registration of a class name and a class instance together, ensuring both result in registered widgets. See &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/28216/28216.5.diff" title="Attachment '28216.5.diff' in Ticket #28216"&gt;28216.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/28216/28216.5.diff" title="Download"&gt;​&lt;/a&gt;. I think this is good to go!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>28216.5.diff attached to Ticket #28216</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 29 Apr 2016 06:19:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28216/28216.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28216/28216.5.diff/1461910743620327</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #28216 (Allow to register pre-instantiated widgets) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 29 Apr 2016 05:40:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28216#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28216#comment:20/1461908459242645</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@PeterRKnight How fortunate that &lt;code&gt;spl_object_hash()&lt;/code&gt; is available in PHP 5.2! However, I see it is used in &lt;code&gt;_wp_filter_build_unique_id()&lt;/code&gt; but has an alternate case for handling if the function is not defined. This worried me in that perhaps the function could be disabled in 5.2. But see &lt;a href="https://core.trac.wordpress.org/ticket/21267#comment:4"&gt;#21267&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Since PHP 5.2 (the required version for WP is 5.2.4), &lt;code&gt;spl_object_hash&lt;/code&gt; exists, which means the &lt;code&gt;else&lt;/code&gt; statement and &lt;code&gt;function_exists()&lt;/code&gt; check are completely useless in &lt;code&gt;_wp_filter_build_unique_id()&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So I think we're safe.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36716 (Copy and paste removes extra spaces) created</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Fri, 29 Apr 2016 04:12:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36716</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36716/1461903135169853</guid>
      <description>&lt;p&gt;
In Chrome, given the sentence "I love Beyonce" if I select and copy "love " and with "love " still selected hit paste, I get "Ilove Beyonce".
&lt;/p&gt;
&lt;p&gt;
In Safari, given the sentence "I love Beyonce" if I select and copy "love " and with "love " still selected hit paste, I get "I loveBeyonce".
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35827 (Customizer: Create a dropzone for adding images) updated</title>
      
        <dc:creator>voldemortensen</dc:creator>

      <pubDate>Fri, 29 Apr 2016 03:44:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35827#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35827#comment:4/1461901480007814</guid>
      <description>&lt;p&gt;
I've also been working through some concepts for this. I don't have a patch yet, but I'll take a look at @celloexpressions to get some ideas.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36126 (lastBuildDate in comment feed may not be empty) updated</title>
      
        <dc:creator>Cybr</dc:creator>

      <pubDate>Fri, 29 Apr 2016 02:42:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36126#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36126#comment:8/1461897730224855</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
That's correct @stevenkword,
&lt;/p&gt;
&lt;p&gt;
My statements were indeed for &lt;code&gt;get_last_build_date_feed()&lt;/code&gt;, a function that never really existed. You spoke about this function in the linked ticket (4575). I back-traced a never-released changeset, and I now know I need to be more careful on this.
&lt;/p&gt;
&lt;p&gt;
I think enough information has been supplied on this matter :).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36715 (Contextual help to describe what roles are) created</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Fri, 29 Apr 2016 02:32:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36715</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36715/1461897152864100</guid>
      <description>&lt;p&gt;
Roles are not exactly self-explaining "What's the difference between a contributor and an author?" is probably a confusing question for new users.
&lt;/p&gt;
&lt;p&gt;
We have help text to describe what roles are in the Help dropdown on the Add New User page, but it's rather out of the way.
&lt;/p&gt;
&lt;p&gt;
I'd like to suggest moving this help text closer to its context, in the form of a tooltip next to the Role dropdown in the Add New User form.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Untitled.mov attached to Ticket #36714</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Fri, 29 Apr 2016 02:09:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36714/Untitled.mov</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36714/Untitled.mov/1461895770320817</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36714 (Moving cursor down into Twitter embed produces two text carets) created</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Fri, 29 Apr 2016 02:09:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36714</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36714/1461895753682288</guid>
      <description>&lt;p&gt;
Moving cursor down into Twitter embed produces two text carets, one on either side of the embed.
&lt;/p&gt;
&lt;p&gt;
See screencast.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #9993 (Rss and atom feeds are dropping some characters) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Fri, 29 Apr 2016 01:48:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9993#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9993#comment:26/1461894491669467</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9993#comment:25" title="Comment 25"&gt;stevenkword&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This might be a case where the naming conventions don't quite make sense.  Both Atom and RSS feeds use the same &lt;code&gt;the_title_rss()&lt;/code&gt; method in their respective templates.  The only difference being that the Atom template wraps the output in CDATA ,which would be unnecessary, but not problematic after this change.
&lt;/p&gt;
&lt;p&gt;
Ideally, since both templates use XML (the export component too), naming the method &lt;code&gt;the_title_xml()&lt;/code&gt; would have been more appropriate.  While we do have the ability to add unit tests for Atom as of 4.5, I think the tests proposed in this ticket cover those test cases.  As a future part of adding test coverage for feeds, I would like to add a new &lt;code&gt;common.php&lt;/code&gt; to &lt;code&gt;/tests/feed/&lt;/code&gt; to help make things more obvious.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Because the functionality is different isn't this even more reason to add unit tests for Atom?
&lt;/p&gt;
&lt;p&gt;
Also looking and &lt;code&gt;the_title_rss()&lt;/code&gt; is also used in &lt;a href="https://core.trac.wordpress.org/browser/branches/4.5/src/wp-admin/includes/export.php#L426"&gt;src/wp-admin/includes/export.php#L426&lt;/a&gt;, sadly there are zero export unit tests at the moment, there is a patch adding export unit tests in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/22435" title="#22435: enhancement: Export API (new)"&gt;#22435&lt;/a&gt; but they are dependant on the new Export API enhancements in that ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36703 (Correct method override information in WP_Widget class documentation) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Fri, 29 Apr 2016 01:25:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36703#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36703#comment:1/1461893102679416</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36713 (Check the number of arguments before calling call_user_func_array()) created</title>
      
        <dc:creator>lgedeon</dc:creator>

      <pubDate>Fri, 29 Apr 2016 01:20:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36713</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36713/1461892805484003</guid>
      <description>&lt;p&gt;
If you do not send enough args to an action, filter or callback, WordPress implodes. We can prevent this by checking the function we are about to call to see how many args it requires.
&lt;/p&gt;
&lt;p&gt;
Here is concept code that I will convert to a patch if the idea is approved:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;helper_count_required_args&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$function&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="nv"&gt;$arg_counts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;is_scalar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$function&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="nv"&gt;$function&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;serialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$function&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$arg_counts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;br&amp;gt;arg_counts: "&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nb"&gt;var_export&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$arg_counts&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$arg_counts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;is_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$function&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;function_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$function&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ReflectionFunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$function&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$function&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nv"&gt;$function&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;method_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$function&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nv"&gt;$function&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ReflectionMethod&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$function&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nv"&gt;$function&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$arg_counts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$arg_counts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$r&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;getNumberOfRequiredParameters&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
One concern I can see with this is that it will slow things down a bit, but at the same time it might prevent a few problems.
&lt;/p&gt;
&lt;p&gt;
To keep down overhead, I suggest we do the check when the hook is added not when it is run. We could even increase the fourth parameter ($accepted_args) automatically if that is what the function really requires.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36707 (Add pre_get_blogs_of_user filter.) updated</title>
      
        <dc:creator>jtsternberg</dc:creator>

      <pubDate>Fri, 29 Apr 2016 01:07:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36707#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36707#comment:5/1461892040749776</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Should we start with &lt;code&gt;false&lt;/code&gt; instead and allow for the return of an empty array?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Actually yah, that seems like a good idea, though it probably should be &lt;code&gt;null&lt;/code&gt; in keeping with the precedent of other &lt;code&gt;'pre_*&lt;/code&gt; filters in WordPress.
&lt;/p&gt;
&lt;p&gt;
Also, it looks like the static variable is a no-go?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35791 (WP_Site_Query class) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 29 Apr 2016 00:19:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35791#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35791#comment:33/1461889172043480</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35791/35791-class.2.patch" title="Attachment '35791-class.2.patch' in Ticket #35791"&gt;35791-class.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35791/35791-class.2.patch" title="Download"&gt;​&lt;/a&gt; fixes some bugs/inconsistencies and includes minor improvements.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;use &lt;code&gt;sites&lt;/code&gt; as cache group, similar to &lt;code&gt;WP_Site&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;pass site IDs to &lt;code&gt;_prime_site_caches()&lt;/code&gt; instead of network IDs
&lt;/li&gt;&lt;li&gt;&lt;code&gt;$orderby&lt;/code&gt; support for &lt;code&gt;site__in&lt;/code&gt; and &lt;code&gt;network__in&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;removed &lt;code&gt;$found_orderby_blog_id&lt;/code&gt; variable (unused)
&lt;/li&gt;&lt;li&gt;removed &lt;code&gt;$filtered_where_clause&lt;/code&gt; property (unused)
&lt;/li&gt;&lt;li&gt;simplified search clause SQL process (AND is no longer prepended, so we don't need to remove it afterwards)
&lt;/li&gt;&lt;li&gt;sort ascending by default (since default sort is by site ID)
&lt;/li&gt;&lt;li&gt;use class property &lt;code&gt;$date_query&lt;/code&gt; to store &lt;code&gt;WP_Date_Query&lt;/code&gt; object
&lt;/li&gt;&lt;li&gt;fixed docs for &lt;code&gt;$orderby&lt;/code&gt; argument and &lt;code&gt;$order&lt;/code&gt; argument
&lt;/li&gt;&lt;li&gt;added docs for &lt;code&gt;parse_site_query&lt;/code&gt; action
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>35791-class.2.patch attached to Ticket #35791</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 29 Apr 2016 00:13:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35791/35791-class.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35791/35791-class.2.patch/1461888792081172</guid>
      <description>&lt;p&gt;
some fixes and improvements for WP_Site_Query
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36406 ($network_wide is unreliable) updated</title>
      
        <dc:creator>mensmaximus</dc:creator>

      <pubDate>Fri, 29 Apr 2016 00:09:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36406#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36406#comment:6/1461888577064424</guid>
      <description>&lt;p&gt;
After some more investigation I can definitely say passing &lt;code&gt;true&lt;/code&gt; to &lt;code&gt;do_action( "activate_{$plugin}" );&lt;/code&gt; in plugins.php line 166 solves the described problem.
&lt;/p&gt;
&lt;p&gt;
The question now is how can we determine whether the plugin activation was started on the network admin screen? &lt;code&gt;is_network_admin()&lt;/code&gt; is not working in case &lt;code&gt;error_scrape&lt;/code&gt; because &lt;code&gt;WP_NETWORK_ADMIN&lt;/code&gt; is not defined and &lt;code&gt;$GLOBALS['current_screen']-&amp;gt;in_admin( 'network' )&lt;/code&gt; is empty. I even tried to pass &lt;code&gt;is_network_admin()&lt;/code&gt; as an argument to &lt;code&gt;$iframe_url&lt;/code&gt; in &lt;code&gt;/wp-admin/plugins.php&lt;/code&gt; line 438.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>