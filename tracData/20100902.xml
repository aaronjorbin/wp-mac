<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #5919 (Password reset improvements) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 02 Sep 2010 23:45:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5919#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5919#comment:16/1283471153000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
5919.2.diff:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;make the user enter the new password twice
&lt;/li&gt;&lt;li&gt;don't send an email with the new password
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>5919.2.diff attached to Ticket #5919</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 02 Sep 2010 23:44:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5919/5919.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5919/5919.2.diff/1283471089000000</guid>
      <description>&lt;p&gt;
input new password twice
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14306 (Custom Taxonomies not associated to Custom Post Type on Export) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 02 Sep 2010 23:37:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14306#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14306#comment:2/1283470667000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12180" title="#12180: defect (bug): Custom taxonomies for custom post types exported but not tied to posts (closed: fixed)"&gt;#12180&lt;/a&gt; (related) closed again.
&lt;/p&gt;
&lt;p&gt;
For patches, see &lt;a class="ext-link" href="http://core.trac.wordpress.org/#HowtoSubmitPatches"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/#HowtoSubmitPatches&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12180 (Custom taxonomies for custom post types exported but not tied to posts) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 02 Sep 2010 23:36:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12180#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12180#comment:5/1283470605000000</guid>
      <description>fixed: &lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14306" title="#14306: defect (bug): Custom Taxonomies not associated to Custom Post Type on Export (closed: fixed)"&gt;#14306&lt;/a&gt; for 3.1.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #12891 (Advanced multi-taxonomy WP_Query()s) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Thu, 02 Sep 2010 23:35:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12891#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12891#comment:14/1283470527000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14306 (Custom Taxonomies not associated to Custom Post Type on Export) updated</title>
      
        <dc:creator>ajferg</dc:creator>

      <pubDate>Thu, 02 Sep 2010 23:33:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14306#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14306#comment:1/1283470435000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi Jeffikus,
&lt;/p&gt;
&lt;p&gt;
I've also had this problem.  I'm not sure how to submit a patch, exactly, but I think I've found a fix.
&lt;/p&gt;
&lt;p&gt;
In /wp-admin/includes/export.php, there's a function wxr_post_taxonomy() about line 253
&lt;/p&gt;
&lt;p&gt;
Replace this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$taxonomies = get_object_taxonomies( 'post' );
$terms = wp_get_post_terms( $post-&amp;gt;ID, $taxonomies );
&lt;/pre&gt;&lt;p&gt;
With this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$taxonomies = get_object_taxonomies( $post-&amp;gt;post_type );
$terms = wp_get_object_terms($post-&amp;gt;ID, $taxonomies);
&lt;/pre&gt;&lt;p&gt;
See if that fixes your issue?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14770 (Clean Up Admin CSS Files) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Thu, 02 Sep 2010 23:30:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14770#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14770#comment:1/1283470235000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'd like to add "change all the id-based styles to class-based styles".  It looks like there are currently over 2500 #'s in the wp-admin/css/*.dev.css files.  The problem is that this makes it a LOT more work to correctly emulate existing styles in the admin.
&lt;/p&gt;
&lt;p&gt;
For example, try to re-create something like the custom fields post meta box, and you either have to reuse IDs like postcustom and postcustomstuff (which isn't valid, and causes a lot of JS issues), or you have to copy/paste and duplicate a ton of CSS.  Using classes would fix all this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5919 (Password reset improvements) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 02 Sep 2010 23:21:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5919#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5919#comment:15/1283469677000000</guid>
      <description>&lt;p&gt;
No, I mean, typing in the password twice.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5919 (Password reset improvements) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 02 Sep 2010 23:18:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5919#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5919#comment:14/1283469539000000</guid>
      <description>&lt;p&gt;
Logging them in automatically would be good.
&lt;/p&gt;
&lt;p&gt;
As for confirmation, if you mean an AYS, they would have already opened the email and clicked on the link, which I think is confirmation enough.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14759 (Improve the way oEmbed deals with caching) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Thu, 02 Sep 2010 23:16:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14759#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14759#comment:7/1283469392000000</guid>
      <description>&lt;p&gt;
The other issue is when embeds are used outside of posts, in the sidebar for example. Where do we cache to? Currently it caches sorta randomly (whatever &lt;code&gt;$post&lt;/code&gt; happens to be set to at the time).
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14759#comment:6" title="Comment 6"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Alternatively, WP could flush postmeta by key when we know a few that are invalid during upgrades. Btw, is it that much of a big deal? I haven't tested, but I would assume that Vimeo made sure the old oEmbed code would continue to work.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We can't flush by service. The meta key is &lt;code&gt;_oembed_md5-hash-of-url-and-args&lt;/code&gt;. On post save, &lt;code&gt;_oembed_*&lt;/code&gt; are deleted for a post.
&lt;/p&gt;
&lt;p&gt;
Here's some code though that deletes all oEmbed caches: &lt;a class="ext-link" href="http://core.trac.wordpress.org/attachment/ticket/10337/10337.10.patch"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/attachment/ticket/10337/10337.10.patch&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If you need postmeta to expire, the easy approach is to an expire date tied to it in a separate postmeta (much like we do for transients in the options table: _$key_expires). Ideally, the stuff key in question gets detected and its parent key gets stored accordingly in memcache.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That'd require a heavy rewrite of post meta.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5919 (Password reset improvements) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 02 Sep 2010 23:15:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5919#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5919#comment:13/1283469336000000</guid>
      <description>&lt;p&gt;
I guess redirecting them to wp-admin might not always make sense such as in the case of subscribes, or the desire to limit them to wp-login.php and no further, but I don't see why they shouldn't be provided with the login cookies and then choose to go whence they came.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5919 (Password reset improvements) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 02 Sep 2010 23:11:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5919#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5919#comment:12/1283469080000000</guid>
      <description>&lt;p&gt;
Why can't it log them in automatically, then show an admin notice that says your password has been reset?
&lt;/p&gt;
&lt;p&gt;
We need two inputs, including a confirmation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5919 (Password reset improvements) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 02 Sep 2010 23:09:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5919#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5919#comment:11/1283468965000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="ext-link" href="http://core.trac.wordpress.org/attachment/ticket/5919/5919.diff"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;5919.diff&lt;/a&gt;:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;User clicks the link in the Reset Password Mail
&lt;/li&gt;&lt;li&gt;User is presented with an input, where they can set a new password
&lt;/li&gt;&lt;li&gt;User sees this message: &lt;code&gt;Your password has been reset. Log in&lt;/code&gt;
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
The user still receives an email with the new passord. Not sure if that's still necessary.
&lt;/p&gt;
&lt;p&gt;
Potential improvements:
&lt;/p&gt;
&lt;p&gt;
Add a password generator in step 2.
&lt;/p&gt;
&lt;p&gt;
Instead of a link, show the login form directly in step 3.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>5919.diff attached to Ticket #5919</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 02 Sep 2010 23:02:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5919/5919.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5919/5919.diff/1283468539000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14487 (Update #user_info a:active, #footer a:active) updated</title>
      
        <dc:creator>JohnONolan</dc:creator>

      <pubDate>Thu, 02 Sep 2010 22:49:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14487#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14487#comment:2/1283467759000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Good point!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14308 (wp_insert_user in 3.0 is not backwards compatible) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 02 Sep 2010 22:40:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14308#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14308#comment:4/1283467239000000</guid>
      <description>&lt;p&gt;
Cross referencing &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/14767" title="#14767: defect (bug): wp_create_user() does not check for a valid email address (new)"&gt;#14767&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14767 (wp_create_user() does not check for a valid email address) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 02 Sep 2010 22:40:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14767#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14767#comment:3/1283467223000000</guid>
      <description>&lt;p&gt;
Closed &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14417" title="#14417: defect (bug): wp_create_user throwing exceptions for empty emaild address (closed: duplicate)"&gt;#14417&lt;/a&gt; as a duplicate.
&lt;/p&gt;
&lt;p&gt;
We should make email addresses required and enforce uniqueness. I think that will be necessary with &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5919" title="#5919: enhancement: Password reset improvements (closed: fixed)"&gt;#5919&lt;/a&gt; with being able to log in with an email (though unsure if that is covered there).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14417 (wp_create_user throwing exceptions for empty emaild address) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 02 Sep 2010 22:39:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14417#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14417#comment:1/1283467141000000</guid>
      <description>duplicate: &lt;p&gt;
&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/14767" title="#14767: defect (bug): wp_create_user() does not check for a valid email address (new)"&gt;#14767&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Email addresses should not be optional.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14145 (Allow custom post types to be a submenu) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 02 Sep 2010 22:37:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14145#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14145#comment:7/1283467027000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14145#comment:6" title="Comment 6"&gt;t31os_&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Would you not consider the "Add New" link to be essential or would you consider having to navigate to the edit page first to click the "Add New" link there to be adequate?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I would not, at all. As I said above, it comes down to the use case. Only if it makes sense for the post type to appear as a single submenu, without Add New and without taxonomies, should the plugin do it. We owe them that flexibility and their ability to make a decision.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I've also recently noticed a page not existing as a submenu item also renders that page inaccessible also due to a check performed in the &lt;code&gt;user_can_access_admin_page&lt;/code&gt; function (IIRC) which in part validates access to a page based on the given page having a value inside the submenu array (came across this problem when moving menu items around myself). Did you test access to admin pages that don't have submenu items?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not sure what you mean there. Example code?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14767 (wp_create_user() does not check for a valid email address) updated</title>
      
        <dc:creator>mrwiblog</dc:creator>

      <pubDate>Thu, 02 Sep 2010 22:35:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14767#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14767#comment:2/1283466924000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The nearest thing I could find was &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14417" title="#14417: defect (bug): wp_create_user throwing exceptions for empty emaild address (closed: duplicate)"&gt;#14417&lt;/a&gt;, and there's also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14308" title="#14308: defect (bug): wp_insert_user in 3.0 is not backwards compatible (closed: wontfix)"&gt;#14308&lt;/a&gt; which is in 3.1. Looks like there's a bit of cleaning up that could be done in that function.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14770 (Clean Up Admin CSS Files) created</title>
      
        <dc:creator>JohnONolan</dc:creator>

      <pubDate>Thu, 02 Sep 2010 22:34:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14770</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14770/1283466862000000</guid>
      <description>&lt;p&gt;
The current admin CSS files have become old and extremely bloated, the .dev files contain no comments or structure and stuff has pretty much just been thrown onto the end for a while now.
&lt;/p&gt;
&lt;p&gt;
This ticket is to clean up all admin CSS files to make them much easier to maintain, reduce bloat, consolodate extraneous files, and provide better support for admin color schemes.
&lt;/p&gt;
&lt;p&gt;
Also a possibility of looking at some dynamically generated rules for pulling in styles.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14145 (Allow custom post types to be a submenu) updated</title>
      
        <dc:creator>t31os_</dc:creator>

      <pubDate>Thu, 02 Sep 2010 22:33:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14145#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14145#comment:6/1283466797000000</guid>
      <description>&lt;p&gt;
Would you not consider the "Add New" link to be essential or would you consider having to navigate to the edit page first to click the "Add New" link there to be adequate?
&lt;/p&gt;
&lt;p&gt;
I've also recently noticed a page not existing as a submenu item also renders that page inaccessible also due to a check performed in the &lt;code&gt;user_can_access_admin_page&lt;/code&gt; function (IIRC) which in part validates access to a page based on the given page having a value inside the submenu array (came across this problem when moving menu items around myself). Did you test access to admin pages that don't have submenu items?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14758 (Do not run kses on display filters for front page views) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 02 Sep 2010 22:32:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14758#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14758#comment:8/1283466735000000</guid>
      <description>&lt;p&gt;
A description doesn't fall into an attribute, so it wouldn't be escaped.
&lt;/p&gt;
&lt;p&gt;
Try doing the same thing in post content.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14758 (Do not run kses on display filters for front page views) updated</title>
      
        <dc:creator>demetris</dc:creator>

      <pubDate>Thu, 02 Sep 2010 22:31:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14758#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14758#comment:7/1283466696000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14758#comment:6" title="Comment 6"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14758#comment:5" title="Comment 5"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I believe we are still properly escaping in attributes and such.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
[SNIP] I would assume &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15559" title="Do not run kses on display filters for front page views. see #14758"&gt;[15559]&lt;/a&gt; allows the alert to show.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It does.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14731 (wp-signup.php does not validate) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 02 Sep 2010 22:30:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14731#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14731#comment:3/1283466623000000</guid>
      <description>&lt;p&gt;
Right, the string is split up. Should be "Your address will be %s" with that value sprintf'd in.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6492 (Guids No Longer Have Permalink Format) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Thu, 02 Sep 2010 22:22:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6492#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6492#comment:49/1283466154000000</guid>
      <description>&lt;p&gt;
Whoops, I left a var_dump in there from testing. Just remove that line.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6492 (Guids No Longer Have Permalink Format) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Thu, 02 Sep 2010 22:20:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6492#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6492#comment:48/1283466041000000</guid>
      <description>&lt;p&gt;
Might be worth using a v3 UUID in the URL Namespace, as defined by RFC 4122. Here's some easy code to do that, just pass it a valid URL (like the permalink):
&lt;/p&gt;
&lt;pre class="wiki"&gt;function uuid_v3_url($url) {
	$nhex = '6ba7b8119dad11d180b400c04fd430c8'; // Namespace_URL as defined in RFC 4122 (6ba7b811-9dad-11d1-80b4-00c04fd430c8)
	$nstr = '';
	for($i = 0; $i &amp;lt; strlen($nhex); $i+=2) {
		$nstr .= chr(hexdec($nhex[$i].$nhex[$i+1]));
	}
	var_dump($nstr);
	$hash = md5($nstr . $name);
	$uuid = sprintf('%08s-%04s-%04x-%04x-%12s',
		substr($hash, 0, 8),
		substr($hash, 8, 4),
		(hexdec(substr($hash, 12, 4)) &amp;amp; 0x0fff) | 0x3000,
		(hexdec(substr($hash, 16, 4)) &amp;amp; 0x3fff) | 0x8000,
		substr($hash, 20, 12)
	);
	return $uuid;
}
&lt;/pre&gt;&lt;p&gt;
Example usage:
echo uuid_v3_url('&lt;a class="ext-link" href="http://example.com"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com&lt;/a&gt;');
&lt;/p&gt;
&lt;p&gt;
This form of UUID is based on the uniqueness of the URL. Giving it the same URL will give you the same result every time.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14758 (Do not run kses on display filters for front page views) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 02 Sep 2010 22:20:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14758#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14758#comment:6/1283466040000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14758#comment:5" title="Comment 5"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I believe we are still properly escaping in attributes and such.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Try manually updating, into your database, a category and set its description to:
&lt;/p&gt;
&lt;pre class="wiki"&gt;XSS&amp;lt;script&amp;gt;alert('Evil script that exploits an IE security hole');&amp;lt;/script&amp;gt;
&lt;/pre&gt;&lt;p&gt;
And then visit that category on your site's front page. Assuming it gets displayed on your theme, I would assume &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15559" title="Do not run kses on display filters for front page views. see #14758"&gt;[15559]&lt;/a&gt; allows the alert to show.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14731 (wp-signup.php does not validate) updated</title>
      
        <dc:creator>sorich87</dc:creator>

      <pubDate>Thu, 02 Sep 2010 22:17:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14731#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14731#comment:2/1283465841000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Broken? Here is the complete code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	if ( !is_user_logged_in() ) {
		print '&amp;lt;p&amp;gt;(&amp;lt;strong&amp;gt;' . __( 'Your address will be ' );
		if ( !is_subdomain_install() )
			print $current_site-&amp;gt;domain . $current_site-&amp;gt;path . __( 'sitename' );
		else
			print __( 'domain.' ) . $site_domain . $current_site-&amp;gt;path;
		echo '.&amp;lt;/strong&amp;gt;) ' . __( 'Must be at least 4 characters, letters and numbers only. It cannot be changed, so choose carefully!' ) . '&amp;lt;/p&amp;gt;';
	}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14145 (Allow custom post types to be a submenu) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 02 Sep 2010 22:11:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14145#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14145#comment:5/1283465496000000</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14769 (API for "Settings" action link on plugins.php) created</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 02 Sep 2010 22:10:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14769</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14769/1283465435000000</guid>
      <description>&lt;p&gt;
Plugins should be able to register a "Settings" actions link that will then take them to their plugin settings page.
&lt;/p&gt;
&lt;p&gt;
We should try to hook into add_options_page() as well, just by taking the first one that the plugin registers. Probably not really doable to ascertain which plugin calls that function however, without running a backtrace. Maybe try matching the slug with the plugin basename.
&lt;/p&gt;
&lt;p&gt;
Someone is encouraged to run with this before I get to it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14768 (Incorrect wp_nav_menu behavior when theme_location is set but no menus ...) created</title>
      
        <dc:creator>almostdaniel</dc:creator>

      <pubDate>Thu, 02 Sep 2010 22:00:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14768</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14768/1283464811000000</guid>
      <description>&lt;p&gt;
The Codex Function Reference for &lt;strong&gt;wp_nav_menu&lt;/strong&gt; states:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Given a theme_location parameter, the function displays the menu assigned to that location, or nothing if no such location exists or no menu is assigned to it.
&lt;/pre&gt;&lt;p&gt;
In my theme functions.php, I have registered two nav menu locations:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	register_nav_menus( array(
		'primary' =&amp;gt; __( 'Primary Navigation' ),
		'secondary' =&amp;gt; __( 'Secondary Navigation' ),
	) );
&lt;/pre&gt;&lt;p&gt;
In my theme header.php, I call for the location menus:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_nav_menu( array( 'container' =&amp;gt; 'div', 'container_id' =&amp;gt; 'index-nav', 'theme_location' =&amp;gt; 'secondary' ) );
wp_nav_menu( array( 'container' =&amp;gt; 'div', 'container_id' =&amp;gt; 'toc-nav', 'theme_location' =&amp;gt; 'primary' ) );
&lt;/pre&gt;&lt;p&gt;
I do not have any menus created or assigned to those locations. However, based on the Codex, I expect that nothing will be displayed.
&lt;/p&gt;
&lt;p&gt;
However, the &lt;strong&gt;wp_nav_menu&lt;/strong&gt; functions are falling back to the callback function, &lt;strong&gt;wp_page_menu&lt;/strong&gt;. That decision is made in this part of the &lt;strong&gt;wp_nav_menu&lt;/strong&gt; function:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	// If no menu was found or if the menu has no items and no location was requested, call the fallback_cb if it exists
	if ( ( !$menu || is_wp_error($menu) || ( isset($menu_items) &amp;amp;&amp;amp; empty($menu_items) &amp;amp;&amp;amp; !$args-&amp;gt;theme_location ) )
		&amp;amp;&amp;amp; ( function_exists($args-&amp;gt;fallback_cb) || is_callable( $args-&amp;gt;fallback_cb ) ) ) {
&lt;/pre&gt;&lt;p&gt;
This logic overrides the statement in the Codex. If by this point no menu has been found (and it won't be, because each of the checks before get overrided by there being a &lt;code&gt;$args-&amp;gt;theme_location&lt;/code&gt; set), I automatically use the callback function–no matter if I have specified a theme_location or not. This is due to the first OR parameter "&lt;code&gt;!$menu || ...&lt;/code&gt;". The only way my theme_location specification prevents this is if a menu &lt;em&gt;was&lt;/em&gt; found. But that's impossible because theme_location prevents it from being found.
&lt;/p&gt;
&lt;p&gt;
I think the pattern from the previous checks should be carried on to this final check. Not sure if this would break some other logic, but it would at least match the Codex description.
&lt;/p&gt;
&lt;pre class="wiki"&gt;	// If no menu was found or if the menu has no items, and no location was requested, call the fallback_cb if it exists
	if ( ( !$menu || is_wp_error($menu) || ( isset($menu_items) &amp;amp;&amp;amp; empty($menu_items)  ) )
		&amp;amp;&amp;amp; ( function_exists($args-&amp;gt;fallback_cb) || is_callable( $args-&amp;gt;fallback_cb ) )
		&amp;amp;&amp;amp; !$args-&amp;gt;theme_location) {
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14767 (wp_create_user() does not check for a valid email address) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 02 Sep 2010 21:53:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14767#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14767#comment:1/1283464418000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This reminds me of a ticket or two. Not sure if there are any duplicates though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6492 (Guids No Longer Have Permalink Format) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 02 Sep 2010 21:53:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6492#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6492#comment:47/1283464402000000</guid>
      <description>&lt;p&gt;
here's a php implementation for v4 uuids in PHP 5.3, in case it helps:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	/**
	 * Generates random bytes for use in UUIDs and password salts, using
	 * (when available) a cryptographically strong random number generator.
	 *
	 * @param integer $bytes The number of random bytes to generate
	 * @return string Random bytes
	 */
	public static function random($bytes) {
		$source = static::$_source ?: static::_source();
		return $source($bytes);
	}
	/**
	 * Initializes Crypto::$_source using the best available random
	 * number generator.
	 *
	 * When available, /dev/urandom and COM gets used on *unix and
	 * Windows systems, respectively.
	 *
	 * If all else fails, a Mersenne Twister gets used. (Strictly
	 * speaking, this fallback is inadequate, but good enough.)
	 *
	 * @return Closure The random number generator.
	 */
	protected static function _source() {
		switch (true) {
			case isset(static::$_source);
				return static::$_source;
			case is_readable('/dev/urandom') &amp;amp;&amp;amp; $fp = fopen('/dev/urandom', 'rb'):
				return static::$_source = function($bytes) use (&amp;amp;$fp) {
					return fread($fp, $bytes);
				};
			case class_exists('COM', 0):
				// http://msdn.microsoft.com/en-us/library/aa388182(VS.85).aspx
				try {
					$com = new COM('CAPICOM.Utilities.1');
					return static::$_source = function($bytes) use ($com) {
						return base64_decode($com-&amp;gt;GetRandom($bytes,0));
					};
				} catch (Exception $e) {
				}
			default:
				// fallback to using mt_rand() if all else fails
				return static::$_source = function($bytes) {
					$rand = '';
					for ($i = 0; $i &amp;lt; $bytes; $i++) {
						$rand .= chr(mt_rand(0, 255));
					}
					return $rand;
				};
		}
	}
	/**
	 * UUID related constants
	 */
	const clearVer = 15;  // 00001111  Clears all bits of version byte
	const version4 = 64;  // 01000000  Sets the version bit
	const clearVar = 63;  // 00111111  Clears relevant bits of variant byte
	const varRFC   = 128; // 10000000  The RFC 4122 variant
	/**
	 * Generates an RFC 4122-compliant version 4 UUID.
	 *
	 * @return string The string representation of an RFC 4122-compliant, version 4 UUID.
	 * @link http://www.ietf.org/rfc/rfc4122.txt
	 */
	public static function uuid() {
		$uuid = Crypto::random(16);
		// Set version
		$uuid[6] = chr(ord($uuid[6]) &amp;amp; static::clearVer | static::version4);
		// Set variant
		$uuid[8] = chr(ord($uuid[8]) &amp;amp; static::clearVar | static::varRFC);
		// Return the uuid's string representation
		return bin2hex(substr($uuid, 0, 4)) . '-'
			. bin2hex(substr($uuid, 4, 2)) . '-'
			. bin2hex(substr($uuid, 6, 2)) . '-'
			. bin2hex(substr($uuid, 8, 2)) . '-'
			. bin2hex(substr($uuid, 10, 6));
	}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14758 (Do not run kses on display filters for front page views) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 02 Sep 2010 21:52:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14758#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14758#comment:5/1283464364000000</guid>
      <description>&lt;p&gt;
I believe we are still properly escaping in attributes and such.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14758 (Do not run kses on display filters for front page views) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 02 Sep 2010 21:48:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14758#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14758#comment:4/1283464108000000</guid>
      <description>&lt;p&gt;
Isn't this contrary to security best practices? I mean, the database is obviously not supposed to contain insecure data. But it remains an untrusted source: if an SQL injection prone plugin allows anything malicious into it, this ticket ensures we're removing our last line of defense against XSS vulnerabilities and so forth.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10588 (Use WP HTTP API in IXR_Client) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 02 Sep 2010 21:48:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10588#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10588#comment:9/1283464087000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm going to ensure this makes it into 3.1 :-)
&lt;/p&gt;
&lt;p&gt;
Thanks for the updated patch
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12706 (Custom post status bugs) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 02 Sep 2010 21:44:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12706#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12706#comment:10/1283463888000000</guid>
      <description>&lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Someone is free to start working on this before I get to it.
&lt;/p&gt;
&lt;p&gt;
I want post statuses to be registered to a post type. That's one thing that gets me.
&lt;/p&gt;
&lt;p&gt;
We also have like 18 properties but still need more based on things I noticed when trying to utilize what was there. So we should figure out a way to properly handle everything.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14318 (post_status API improvements) closed</title>
      
        <dc:creator>ptahdunbar</dc:creator>

      <pubDate>Thu, 02 Sep 2010 21:42:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14318#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14318#comment:2/1283463733000000</guid>
      <description>duplicate: &lt;p&gt;
This looks like a dup of &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/12706" title="#12706: task (blessed): Custom post status bugs (reopened)"&gt;#12706&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #12891 (Advanced multi-taxonomy WP_Query()s) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Thu, 02 Sep 2010 21:39:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12891#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12891#comment:13/1283463549000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I will bless and take responsibility for this one.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>registration.php.patch attached to Ticket #14767</title>
      
        <dc:creator>mrwiblog</dc:creator>

      <pubDate>Thu, 02 Sep 2010 21:38:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14767/registration.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14767/registration.php.patch/1283463528000000</guid>
      <description>&lt;p&gt;
Patch for wp-includes/registration.php
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14767 (wp_create_user() does not check for a valid email address) created</title>
      
        <dc:creator>mrwiblog</dc:creator>

      <pubDate>Thu, 02 Sep 2010 21:38:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14767</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14767/1283463503000000</guid>
      <description>&lt;p&gt;
When creating a new user an invalid email address (for example user@) will result in a zero-length string in the email field of the users table. If another new user is subsequently created with another invalid email address the error returned is "This email address is already registered."
&lt;/p&gt;
&lt;p&gt;
It would be better for wp_create_user() to check if a valid email address has been given and return a more descriptive error. I attach a patch file for wp-includes/registration.php to include this functionality.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14766 (New Hooks for add / update / delete / get metadata in 3.1) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Thu, 02 Sep 2010 21:37:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14766#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14766#comment:3/1283463432000000</guid>
      <description>&lt;p&gt;
L'chaim!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14766 (New Hooks for add / update / delete / get metadata in 3.1) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Thu, 02 Sep 2010 21:36:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14766#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14766#comment:2/1283463373000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'll bless and take responsibility for this one.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11420 (Easy within-site linking from new content) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 02 Sep 2010 21:35:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11420#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11420#comment:12/1283463349000000</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14746 (Post Formats) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 02 Sep 2010 21:35:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14746#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14746#comment:39/1283463326000000</guid>
      <description>&lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11420 (Easy within-site linking from new content) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 02 Sep 2010 21:28:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11420#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11420#comment:11/1283462882000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5919 (Password reset improvements) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 02 Sep 2010 21:24:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5919#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5919#comment:10/1283462657000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12718 (Better structure for admin menu) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 02 Sep 2010 21:05:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12718#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12718#comment:11/1283461550000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11420 (Easy within-site linking from new content) updated</title>
      
        <dc:creator>jeffr0</dc:creator>

      <pubDate>Thu, 02 Sep 2010 20:44:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11420#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11420#comment:10/1283460246000000</guid>
      <description>&lt;p&gt;
As for plugin inspiration, you might want to check out Insights by Vladimir Prelovac which not only provides the ability to search for previous blog content, but has other sources of info available as well readily available within a meta box on the Post Writing screen.
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/insights/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/insights/&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11420 (Easy within-site linking from new content) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 02 Sep 2010 20:42:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11420#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11420#comment:9/1283460135000000</guid>
      <description>&lt;p&gt;
I imagine a new core shortcode backing this which people can easily enter by hand as well with obvious arguments.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11420 (Easy within-site linking from new content) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 02 Sep 2010 20:41:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11420#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11420#comment:8/1283460083000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11420 (Easy within-site linking from new content) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 02 Sep 2010 20:41:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11420#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11420#comment:7/1283460065000000</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/link-to-post/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/link-to-post/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.thatwebguyblog.com/post/sweet_links_for_wordpress_tinymce_advanced"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.thatwebguyblog.com/post/sweet_links_for_wordpress_tinymce_advanced&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9568 (Allow users to log in using their email address) updated</title>
      
        <dc:creator>beaulebens</dc:creator>

      <pubDate>Thu, 02 Sep 2010 20:23:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9568#comment:55</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9568#comment:55/1283458995000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Self promotion: &lt;a class="ext-link" href="http://wordpress.org/extend/plugins/wp-email-login/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/wp-email-login/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14763 (Introduce is_blog_admin()) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Thu, 02 Sep 2010 19:59:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14763#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14763#comment:4/1283457574000000</guid>
      <description>&lt;p&gt;
Oh yeah, right! :-) Forgot about that part of the mix-up. I had remember the switch from "blog" to "site", but apparently in the wrong place. Sorry.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14763 (Introduce is_blog_admin()) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 02 Sep 2010 19:56:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14763#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14763#comment:3/1283457411000000</guid>
      <description>&lt;p&gt;
In the code, we're quite consistent with "blog" meaning site, and "site" meaning network. Also, is_site_admin() already exists, it was MU's is_super_admin(). Using "site" here would be very confusing when working with the rest of the MU code that includes things like site_id and such.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9296 (Settings API &amp; Permalink Settings Page Bug) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 02 Sep 2010 19:41:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9296#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9296#comment:12/1283456498000000</guid>
      <description>&lt;p&gt;
I think I'd rather drop the requirement to post to options.php.  Move the validation and update logic into a function that can be called from options-permalink.php, maybe.  Make the options pages use the registration API so we don't have to maintain a big array of all default options.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>tagcodes.php attached to Ticket #14481</title>
      
        <dc:creator>deadowl</dc:creator>

      <pubDate>Thu, 02 Sep 2010 19:11:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14481/tagcodes.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14481/tagcodes.php/1283454677000000</guid>
      <description>&lt;p&gt;
Took the suggestion of using filters as an interface, fixed some parsing bugs, put a leading underscore in front of internal functions, changed function names to use "tagcode" instead of "shortcode"
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10142 (Add metadata support for taxonomy terms) updated</title>
      
        <dc:creator>jeremyclarke</dc:creator>

      <pubDate>Thu, 02 Sep 2010 19:11:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10142#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10142#comment:16/1283454669000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
+1, not every user needs this but many of us do and we need something that we can count on working forever.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14763 (Introduce is_blog_admin()) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Thu, 02 Sep 2010 18:31:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14763#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14763#comment:2/1283452291000000</guid>
      <description>&lt;p&gt;
Should all of that be "site" instead of "blog"?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14759 (Improve the way oEmbed deals with caching) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 02 Sep 2010 18:04:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14759#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14759#comment:6/1283450665000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14759" title="#14759: enhancement: Improve the way oEmbed deals with caching (closed: fixed)"&gt;Viper007Bond&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
A good example of this is Vimeo. Anyone who embedded a Vimeo embed in their post before a few weeks ago got &lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt;-based embeds. However now Vimeo gives out &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; based ones. The only way currently to update the old embeds to the new HTML (without using a few lines of code) is to edit all of the posts and re-save them to trigger a cache update. That's painful.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Alternatively, WP could flush postmeta by key when we know a few that are invalid during upgrades. Btw, is it that much of a big deal? I haven't tested, but I would assume that Vimeo made sure the old oEmbed code would continue to work.
&lt;/p&gt;
&lt;p&gt;
If you need postmeta to expire, the easy approach is to an expire date tied to it in a separate postmeta (much like we do for transients in the options table: _$key_expires). Ideally, the stuff key in question gets detected and its parent key gets stored accordingly in memcache.
&lt;/p&gt;
&lt;p&gt;
I'm in agreement with filosofo though: it makes little sense to keep refreshing the data.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14766 (New Hooks for add / update / delete / get metadata in 3.1) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Thu, 02 Sep 2010 17:35:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14766#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14766#comment:1/1283448900000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>meta_filters.patch attached to Ticket #14766</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Thu, 02 Sep 2010 17:34:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14766/meta_filters.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14766/meta_filters.patch/1283448878000000</guid>
      <description>&lt;p&gt;
SVN Patch for /trunk/wp-includes/meta.php
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14766 (New Hooks for add / update / delete / get metadata in 3.1) created</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Thu, 02 Sep 2010 17:33:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14766</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14766/1283448823000000</guid>
      <description>&lt;p&gt;
I suggest adding new hooks for each of these functions. See the attached patch for the changes I'm suggesting here. Please note, I'm using the {ACTION}_{METATYPE}_metadata format for the filter names since some actions are being applied with the {ACTION}_{METATYPE}_meta which would cause conflicts.
&lt;/p&gt;
&lt;p&gt;
What does this allow? This allows plugins to intercept this function and return their own values and / or do their own functions for Post Types, among the other data types.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14758 (Do not run kses on display filters for front page views) updated</title>
      
        <dc:creator>demetris</dc:creator>

      <pubDate>Thu, 02 Sep 2010 17:28:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14758#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14758#comment:3/1283448496000000</guid>
      <description>&lt;p&gt;
Ryan, how do you measure the performance of filters?
&lt;/p&gt;
&lt;p&gt;
(Just curious to know and learn.  When I try new things I check with the WP-Profile plugin -- &lt;a class="ext-link" href="http://devel.kostdoktorn.se/wp-profile-plugin"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://devel.kostdoktorn.se/wp-profile-plugin&lt;/a&gt; -- by Johan Eenfeldt.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14764 ("Check for Updates" button) updated</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Thu, 02 Sep 2010 16:43:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14764#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14764#comment:1/1283445805000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
+1 For this.
&lt;/p&gt;
&lt;p&gt;
Particularly because there are times you &lt;em&gt;know&lt;/em&gt; an update is available according to the repository, but it doesn't show up in your "Update" section until a few hours later.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14765 (SQL Error filtering posts by category from admin (edit.php)) created</title>
      
        <dc:creator>EduardRoccatello</dc:creator>

      <pubDate>Thu, 02 Sep 2010 16:21:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14765</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14765/1283444488000000</guid>
      <description>&lt;p&gt;
Hello,
&lt;/p&gt;
&lt;p&gt;
I'm facing this issue with WP 3.0.1.
I've no plugins installed but I've custom post types.
&lt;/p&gt;
&lt;p&gt;
SELECT SQL_CALC_FOUND_ROWS wp_posts.* FROM wp_posts INNER JOIN wp_term_relationships ON (wp_posts.ID = wp_term_relationships.object_id) INNER JOIN wp_term_taxonomy ON (wp_term_relationships.term_taxonomy_id = wp_term_taxonomy.term_taxonomy_id) WHERE 1=1 AND wp_term_taxonomy.taxonomy = 'category' AND wp_term_taxonomy.term_id IN ('5') AND wp_posts.post_type = 'post' AND (wp_posts.post_status = 'publish' OR wp_posts.post_status = 'future' OR wp_posts.post_status = 'draft' OR wp_posts.post_status = 'pending' OR wp_posts.post_status = 'private') GROUP BY wp_posts.ID ORDER BY wp_posts.post_date DESC LIMIT 0, 20
&lt;/p&gt;
&lt;p&gt;
Removing GROUP BY wp_posts.ID the query works in PhpMyAdmin.
Any hint?
&lt;/p&gt;
&lt;p&gt;
Feel free to ask me for details if needed!!!
Thanks!
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14764 ("Check for Updates" button) created</title>
      
        <dc:creator>jane</dc:creator>

      <pubDate>Thu, 02 Sep 2010 15:35:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14764</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14764/1283441712000000</guid>
      <description>&lt;p&gt;
On the update screens, we should provide an overall status and action combination, not just the not-yet-acted-on actions (updates that have not been carried out). That is, something like "WordPress checked for new updates &lt;em&gt;n&lt;/em&gt; hours ago. [Check Again]" This would touch update-core.php and plugins.php.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14758 (Do not run kses on display filters for front page views) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 02 Sep 2010 15:06:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14758#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14758#comment:2/1283439970000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15559" title="Do not run kses on display filters for front page views. see #14758"&gt;[15559]&lt;/a&gt;) Do not run kses on display filters for front page views. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14758" title="#14758: enhancement: Do not run kses on display filters for front page views (closed: fixed)"&gt;#14758&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [15559]: Do not run kses on display filters for front page views. see #14758</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 02 Sep 2010 15:06:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15559</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15559/1283439967591695</guid>
      <description>&lt;p&gt;
Do not run kses on display filters for front page views. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14758" title="#14758: enhancement: Do not run kses on display filters for front page views (closed: fixed)"&gt;#14758&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14763 (Introduce is_blog_admin()) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 02 Sep 2010 15:03:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14763#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14763#comment:1/1283439821000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15558" title="is_blog_admin(). fixes #14763"&gt;[15558]&lt;/a&gt;) is_blog_admin(). fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14763" title="#14763: defect (bug): Introduce is_blog_admin() (closed: fixed)"&gt;#14763&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [15558]: is_blog_admin(). fixes #14763</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 02 Sep 2010 15:03:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15558</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15558/1283439819392748</guid>
      <description>&lt;p&gt;
is_blog_admin(). fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14763" title="#14763: defect (bug): Introduce is_blog_admin() (closed: fixed)"&gt;#14763&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14763 (Introduce is_blog_admin()) created</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 02 Sep 2010 15:03:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14763</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14763/1283439787000000</guid>
      <description>&lt;p&gt;
To compliment is_network_admin(). Have is_admin() return true for any admin page, network or blog.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14762 (Improve the intuitivity for setting the featured image) created</title>
      
        <dc:creator>waltervos</dc:creator>

      <pubDate>Thu, 02 Sep 2010 12:37:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14762</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14762/1283431068000000</guid>
      <description>&lt;p&gt;
Right now, when setting a featured image you simply enter the same modal window as when uploading/inserting and image. When clicking 'show' next to an image on the gallery tab you get the same options as you get when uploading/inserting an image. All we really need to see there is an image preview and a button that says something like 'Use as featured image'. The same goes for when you upload an image to use it as a featured image, you get all of the options. I regularly work with clients that find this behaviour confusing, they usually want to click the button 'Insert into post/page'.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14761 (unregister_post_type()) created</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 02 Sep 2010 12:00:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14761</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14761/1283428817000000</guid>
      <description>&lt;p&gt;
Two use cases:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Remove a core post type. Means that the admin menus should respond in kind, though certain aspects of core like query/rewrite might not like this. Not the main use case regardless.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;Removing a post type of another plugin, or potentially more likely, a parent theme.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Example barebones function: &lt;a class="ext-link" href="http://wordpress.pastebin.com/VexHkgig"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.pastebin.com/VexHkgig&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Related, unregister_taxonomy() &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11058" title="#11058: enhancement: Add unregister_taxonomy_for_object_type() (closed: fixed)"&gt;#11058&lt;/a&gt; and unregister_taxonomy_for_object_type(): &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14482" title="#14482: enhancement: Should be able to unregister_taxonomy_for_object_type (closed: duplicate)"&gt;#14482&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14760 (wp_get_shortlink not working on pages) created</title>
      
        <dc:creator>mattsay</dc:creator>

      <pubDate>Thu, 02 Sep 2010 11:07:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14760</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14760/1283425662000000</guid>
      <description>&lt;p&gt;
wp_get_shortlink doesn't return anything on pages.
&lt;/p&gt;
&lt;p&gt;
reason:
&lt;/p&gt;
&lt;pre class="wiki"&gt;2196   if ( isset($post-&amp;gt;post_type) &amp;amp;&amp;amp; 'post' == $post-&amp;gt;post_type )
2197         $shortlink = home_url('?p=' . $post-&amp;gt;ID);
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14759 (Improve the way oEmbed deals with caching) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 02 Sep 2010 08:31:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14759#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14759#comment:5/1283416291000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14752 (Warn after theme activation if wp_head/footer is missing) updated</title>
      
        <dc:creator>kretzschmar</dc:creator>

      <pubDate>Thu, 02 Sep 2010 04:53:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14752#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14752#comment:6/1283403216000000</guid>
      <description>&lt;p&gt;
Themes are automatically checked after upload and reviewed. This is be the place to check for things like that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14727 (@license tag removal in xmlrpc.php) closed</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Thu, 02 Sep 2010 04:48:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14727#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14727#comment:5/1283402880000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15557" title="This file was mistakenly labeled as being GPLv2-only. fixes #14727"&gt;[15557]&lt;/a&gt;) This file was mistakenly labeled as being GPLv2-only. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14727" title="#14727: defect (bug): @license tag removal in xmlrpc.php (closed: fixed)"&gt;#14727&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [15557]: This file was mistakenly labeled as being GPLv2-only. fixes #14727</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Thu, 02 Sep 2010 04:47:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15557</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15557/1283402877626181</guid>
      <description>&lt;p&gt;
This file was mistakenly labeled as being GPLv2-only. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14727" title="#14727: defect (bug): @license tag removal in xmlrpc.php (closed: fixed)"&gt;#14727&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14752 (Warn after theme activation if wp_head/footer is missing) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Thu, 02 Sep 2010 01:47:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14752#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14752#comment:5/1283392036000000</guid>
      <description>&lt;p&gt;
I think hakre has a good point: at that point it's too late.  This feedback expects too much of the end user.  When confronted with such an error message, he has to then decide what it means, whether it's worth doing anything about, and if so, what to do.
&lt;/p&gt;
&lt;p&gt;
Also, I have a hard time believing this is a widespread problem, which I remember coming across a few times in 2005 and 2006, but not much since.  Haven't we won the war by now?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14759 (Improve the way oEmbed deals with caching) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Thu, 02 Sep 2010 01:37:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14759#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14759#comment:4/1283391441000000</guid>
      <description>&lt;p&gt;
Why is it lame?  For the vast majority of people, the content of a post (and hence its video markup) won't change ever again from a short time after the post is published.  It doesn't make much sense to keep refreshing the data as each successive transient expires for something (the post) that remains static over that time.
&lt;/p&gt;
&lt;p&gt;
Actually I think it would be neat to expand that idea and offer a transient-like cache and API specific to each post, so that you can expire the cache only when a post object itself changes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6492 (Guids No Longer Have Permalink Format) reopened</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 02 Sep 2010 01:24:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6492#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6492#comment:46/1283390693000000</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #14759 (Improve the way oEmbed deals with caching) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 02 Sep 2010 01:24:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14759#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14759#comment:3/1283390658000000</guid>
      <description>&lt;p&gt;
I like the idea of these expiring, but my first take is that this storage solution has its own drawbacks. Storing them with postmeta is flexible and is tied to the post, versus having an ever-growing number of transients, which often will be stored in the options table.
&lt;/p&gt;
&lt;p&gt;
From a more practical perspective, that also means new queries for the transient, as they're neither autoloaded like options or queried as part of the post cache like postmeta.
&lt;/p&gt;
&lt;p&gt;
But again, I do like the idea of these expiring and being updated (assuming of course proper oEmbed is returned on background refresh).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6492 (Guids No Longer Have Permalink Format) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 02 Sep 2010 01:07:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6492#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6492#comment:45/1283389655000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think this is a good idea to move to. Especially now that we're bumping minimum requirements (and have to the point where we can use UUID now).
&lt;/p&gt;
&lt;p&gt;
Perhaps getting a UUID should be a specific function or $wpdb method?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13258 (wp_dropdown_categories() uses $term-&gt;id instead of $term-&gt;name for ...) updated</title>
      
        <dc:creator>t31os_</dc:creator>

      <pubDate>Thu, 02 Sep 2010 00:14:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13258#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13258#comment:7/1283386456000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14759 (Improve the way oEmbed deals with caching) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Wed, 01 Sep 2010 23:50:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14759#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14759#comment:2/1283385018000000</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14759 (Improve the way oEmbed deals with caching) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Wed, 01 Sep 2010 23:48:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14759#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14759#comment:1/1283384938000000</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14759 (Improve the way oEmbed deals with caching) created</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Wed, 01 Sep 2010 23:47:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14759</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14759/1283384850000000</guid>
      <description>&lt;p&gt;
As Matt pointed to me today, caching oEmbed results to post meta is kinda lame.
&lt;/p&gt;
&lt;p&gt;
I originally did this because I didn't want the HTML in old posts changing on it's own, say for example if the oEmbed provider got compromised. However I think that's extremely unlikely since we only whitelist major websites that can be trusted.
&lt;/p&gt;
&lt;p&gt;
Perhaps instead we should use transients to cache this data. That way when embed HTML is updated, posts will eventually be updated too due to expiring caches. I'm thinking a cache time of a week would be good, but with some random +/- to make sure multiple caches don't all expire at once.
&lt;/p&gt;
&lt;p&gt;
A good example of this is Vimeo. Anyone who embedded a Vimeo embed in their post before a few weeks ago got &lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt;-based embeds. However now Vimeo gives out &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; based ones. The only way currently to update the old embeds to the new HTML (without using a few lines of code) is to edit all of the posts and re-save them to trigger a cache update. That's painful.
&lt;/p&gt;
&lt;p&gt;
Alternate suggestions welcome though.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>ploobers</dc:creator>

      <pubDate>Wed, 01 Sep 2010 21:56:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:49/1283378180000000</guid>
      <description>&lt;p&gt;
&lt;em&gt;If we accept the custom post types are WordPress' equivalent of a "relation" (relations are viewed as "tables"&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/1" title="New repository initialized by cvs2svn."&gt;[1]&lt;/a&gt;) in the relational model for "large shared data banks" as written about by E. F. Codd in 1970&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/2" title="*** empty log message ***
"&gt;[2]&lt;/a&gt; then this pattern is one of the most fundamental pattern in relational databases that exist. This concept is fundamental to every relational database system ever built, not some "&lt;/em&gt;edge&lt;em&gt;" use case.&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
I think that Mike phrased it great right here. Custom post types demand to be treated as a related entries in a relational database.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) reopened</title>
      
        <dc:creator>ploobers</dc:creator>

      <pubDate>Wed, 01 Sep 2010 21:52:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:48/1283377959000000</guid>
      <description>&lt;p&gt;
I know that there has been a lot said on the issue, and I don't think that there is much more to be said in terms of why this should exist. I don't see how this is separable from custom post types at all. If we are going to have potential dozens of custom post types (I have 15 in a site I am working on, with plans for the future implementation of another 15 or so), then linking them together in a one to one relationship is absolutely necessary.
&lt;/p&gt;
&lt;p&gt;
Without custom post types, people had to hack around using categories to try and simulate custom post types. It was obviously a need that was recognized by the WP community and addressed in 3.0. Being able to store connections, and even more so, to be able to store specific details about each connection, makes custom post types a much more flexible solution.
&lt;/p&gt;
&lt;p&gt;
In my personal case, I am developing a soccer equipment site. I have
-Brands
-Leagues
-Clubs
-Players
-Shoes
-Balls
etc.
&lt;/p&gt;
&lt;p&gt;
Brands can sponsor specific leagues, clubs and/or players. That can change over time, so I need to store along with the connection start and end dates for the sponsorship. On the other hand, shoes are always going to be tied to one specific brand.
&lt;/p&gt;
&lt;p&gt;
Clubs can belong to multiple leagues, for example the English Premier League and Champions League. Those associations also potentially change per year.
&lt;/p&gt;
&lt;p&gt;
Players move around be between different clubs and brands, plus they also change which shoes they are wearing at any given point.
&lt;/p&gt;
&lt;p&gt;
That's just a small view into the current site I am building, and though I realize that not everyone is building that type of site, I do believe that over 50% of people that use custom post types will want to connect them. When I am viewing a brand, I want to be able to show a list of all the different connected post types, whether they are sponsored leagues, clubs or players, and also their related equipment that they manufacture.
&lt;/p&gt;
&lt;p&gt;
As scribu has shown with his Posts 2 Posts plugin, it is fairly easy to implement such a solution, and since most of the coding is done, almost trivial to integrate with the WordPress core. To ignore it or to write it off as an 'edge case' is simply short sighted.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #14758 (Do not run kses on display filters for front page views) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 01 Sep 2010 21:34:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14758#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14758#comment:1/1283376844000000</guid>
      <description>&lt;p&gt;
It's also worth noting that we're often already escaping these values, and that if the person has access to exploit the database, you're hosed anyway.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>14758.diff attached to Ticket #14758</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 01 Sep 2010 21:33:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14758/14758.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14758/14758.diff/1283376799000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14758 (Do not run kses on display filters for front page views) created</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 01 Sep 2010 21:28:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14758</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14758/1283376512000000</guid>
      <description>&lt;p&gt;
Several display filters run wp_kses_data and other heavyweight functions. These functions are already run when saving.  They were added to the display filters as a defense-in-depth for the possibility of an exploit sneaking things into the DB.  Running these on the display causes a serious performance hit, however.  wp_list_bookmarks() running kses on the link fields can burn up 10% of the total page load time.  Let's limit running these functions to admin page displays.  Displaying bad fields in the admin is more dangerous since those fields can cover their tracks.  We can lose the belt and suspenders approach for front page displays where performance is more critical.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14372 (Option to load comments asynchronously, for speed) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 01 Sep 2010 20:50:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14372#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14372#comment:12/1283374201000000</guid>
      <description>&lt;p&gt;
Nice. I'm all for it, then.
&lt;/p&gt;
&lt;p&gt;
If we add the &amp;lt;meta&amp;gt; tag to single.php (only when there are comments), we won't have to change any other front-end markup.
&lt;/p&gt;
&lt;p&gt;
Of course, that's just the first step.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 01 Sep 2010 20:37:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:47/1283373459000000</guid>
      <description>&lt;p&gt;
I see what you meant now with linking to an additional post or term, but that would add one or more additional rows per connection.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 01 Sep 2010 20:35:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:46/1283373341000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Of course you might need the second table for what effectively would be taxonomy meta but it seems that taxmeta was getting thumbs up for 3.1 so that could be moot?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not really, because to have metadata per connection, you would need a third column in the wp_term_relationships table.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13471 (Pagination in Blog Post Won't Display Past Page 1) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 01 Sep 2010 20:32:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13471#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13471#comment:16/1283373166000000</guid>
      <description>&lt;p&gt;
As an additional enhancement to this: It should actually confirm that category_name is equal to the proper path. Otherwise, /fake-category/real-category/ will not redirect to /real-parent/real-category/.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 01 Sep 2010 20:24:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:45/1283372651000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
However, why do you really need two new tables? Wouldn't one work? The one table could link two posts with a third ID that links to a taxonomy_term or another post for context.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Main reason is that it's meant to allow arbitrary data, like creation date, etc. Also, it's a lot easier to CRUD, using the metadata_*() functions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Wed, 01 Sep 2010 20:09:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:44/1283371759000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14513#comment:43" title="Comment 43"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That's funny, because I'm also moving my Posts 2 Posts plugin away from taxonomies. Not because of instability, but because there was no clean way to add additional information per connection. So, the next version will have not one, but two custom tables: wp_p2p and wp_p2pmeta.
&lt;/p&gt;
&lt;p&gt;
Due to the second table, you can connect the same two posts more than one time, but with different metadata.
&lt;/p&gt;
&lt;p&gt;
Here's the discussion that led to this change:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://wordpress.org/support/topic/plugin-posts-2-posts-how-to-add-info-to-connection"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/plugin-posts-2-posts-how-to-add-info-to-connection&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Glad the use-cases becoming evident.
&lt;/p&gt;
&lt;p&gt;
However, why do you really need &lt;strong&gt;&lt;em&gt;two&lt;/em&gt;&lt;/strong&gt; new tables?  Wouldn't one work?  The one table could link two posts with a third ID that links to a taxonomy_term or another post for context.
&lt;/p&gt;
&lt;p&gt;
Of course you might need the second table for what effectively would be taxonomy meta but it seems that taxmeta was getting thumbs up for 3.1 so that could be moot?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 01 Sep 2010 19:25:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:43/1283369116000000</guid>
      <description>&lt;p&gt;
That's funny, because I'm also moving my Posts 2 Posts plugin away from taxonomies. Not because of instability, but because there was no clean way to add additional information per connection. So, the next version will have not one, but two custom tables: wp_p2p and wp_p2pmeta.
&lt;/p&gt;
&lt;p&gt;
Due to the second table, you can connect the same two posts more than one time, but with different metadata.
&lt;/p&gt;
&lt;p&gt;
Here's the discussion that led to this change:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://wordpress.org/support/topic/plugin-posts-2-posts-how-to-add-info-to-connection"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/plugin-posts-2-posts-how-to-add-info-to-connection&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14752 (Warn after theme activation if wp_head/footer is missing) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 01 Sep 2010 19:22:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14752#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14752#comment:4/1283368923000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Might be better as part of the health check plugin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14752 (Warn after theme activation if wp_head/footer is missing) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Wed, 01 Sep 2010 19:19:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14752#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14752#comment:3/1283368778000000</guid>
      <description>&lt;p&gt;
As a plugin developer, I'd love this.
&lt;/p&gt;
&lt;p&gt;
There are just so many users with themes which are lacking one of the two hooks.
Then they blame my plugin, when the JavaScript is not working...
Which is no surprise, as it is never included without the hooks, as it is included using wp_enqueue_script().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14757 (users with no posts are not exported) created</title>
      
        <dc:creator>sillybean</dc:creator>

      <pubDate>Wed, 01 Sep 2010 18:14:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14757</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14757/1283364871000000</guid>
      <description>&lt;p&gt;
I just exported a large standalone site and imported into a multisite setup, and I discovered that a number of users who hadn't yet posted anything didn't get moved to the new site.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14756 (Bug adding users in multisite) updated</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Wed, 01 Sep 2010 18:05:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14756#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14756#comment:2/1283364326000000</guid>
      <description>&lt;p&gt;
The network/site confusion was fixed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15310" title="s/site/network/ in user-new.php."&gt;[15310]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Also, part B) works for me. Is it a specific user name/email combo or are all failing?
&lt;/p&gt;
&lt;p&gt;
(Maybe the check in user-new.php lines 58/59 should use &lt;code&gt;username_exists&lt;/code&gt; and &lt;code&gt;email_exists&lt;/code&gt; like &lt;code&gt;wpmu_validate_user_signup&lt;/code&gt; instead of the direct query)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14435 (Network Admin) updated</title>
      
        <dc:creator>sillybean</dc:creator>

      <pubDate>Wed, 01 Sep 2010 17:30:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14435#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14435#comment:28/1283362251000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Didn't mean to delete the version...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14746 (Post Formats) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 01 Sep 2010 17:29:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14746#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14746#comment:38/1283362170000000</guid>
      <description>&lt;p&gt;
A "template" does not have to map to a particular file.  It could be used in a has_template() check or the theme might need it only for a template-$template class emitted in get_post_class().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14435 (Network Admin) updated</title>
      
        <dc:creator>sillybean</dc:creator>

      <pubDate>Wed, 01 Sep 2010 17:29:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14435#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14435#comment:27/1283362163000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Am I overlooking something, or is there no longer a way to promote someone to superadmin in the new user screens?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14755 (more than 5 custom post types screws up menu_position parameter) updated</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Wed, 01 Sep 2010 17:29:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14755#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14755#comment:1/1283362145000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/12718" title="#12718: enhancement: Better structure for admin menu (reopened)"&gt;#12718&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14666" title="#14666: task (blessed): Create reliable way to remove admin menus and submenus (closed: fixed)"&gt;#14666&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14756 (Bug adding users in multisite) updated</title>
      
        <dc:creator>jane</dc:creator>

      <pubDate>Wed, 01 Sep 2010 17:28:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14756#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14756#comment:1/1283362123000000</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14746 (Post Formats) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 01 Sep 2010 17:27:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14746#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14746#comment:37/1283362052000000</guid>
      <description>&lt;p&gt;
We could turn this into a general template loading mechanism that would replace Page Template.  Register template files for a given query and "type" setting.  For page template back compat, we check the old meta setting and see if the template there corresponds to a registered one.  For themes that use the registration API the Page Template headers could be ignored so that we don't show both.  Themes could remove the Page Template headers once they are no longer concerned with &amp;lt; 3.1 back compat.
&lt;/p&gt;
&lt;p&gt;
Some possible API:
&lt;/p&gt;
&lt;pre class="wiki"&gt;// Register a template to be loaded for single queries for a particular post type
// where the post has a given template_tag.
register_template_file($template_tag, $post_type, $file);
register_template('aside', array('description' =&amp;gt; __('Short, inconsequential statement about what you just ate.'), 'name' =&amp;gt; __('Aside'), 'post_types' =&amp;gt; array('post', 'page') );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14756 (Bug adding users in multisite) created</title>
      
        <dc:creator>jane</dc:creator>

      <pubDate>Wed, 01 Sep 2010 17:27:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14756</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14756/1283362052000000</guid>
      <description>&lt;p&gt;
In 3.0 multisite (site in question is wordcamp.org), am having trouble adding new users to an individual site. When you click Add new User, you get:
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;You can add new users to your site in two ways:&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;em&gt; 1. Enter the username and email address of an existing user on this site.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;em&gt;2. Enter the username and the email address of a person who is not already a member of this site. Choose the username carefully, it cannot be changed.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;em&gt;That person will be sent an email asking them to click a link confirming the invite. New users will then be sent an email with a randomly generated password and a login link.&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
A) We should update that text to say network instead of site.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
B) When I entered someone's username and email who was already in the network user system, instead of adding them to site, I get two error messages:&lt;br /&gt;
&lt;em&gt;Sorry, that username already exists'' &lt;br /&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;Sorry, that email address is already used''
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
Catch-22.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14755 (more than 5 custom post types screws up menu_position parameter) created</title>
      
        <dc:creator>stunnaboi</dc:creator>

      <pubDate>Wed, 01 Sep 2010 17:13:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14755</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14755/1283361222000000</guid>
      <description>&lt;p&gt;
On a personal 3.01 install I have 7 custom post types registered and notice that the 5th and 7th fall below the Comments menu item.  It was pointed out to me on the wp-testers email list that the menu is probably constructed as an indexed array.  Pages is &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20" title="#20: defect (bug): Templates area does't work if wp install dir is changed (closed: fixed)"&gt;#20&lt;/a&gt;, Comments is &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25" title="#25: defect (bug): Missing http:// with website for user profile (closed: fixed)"&gt;#25&lt;/a&gt;, so these extra post types get assigned the 2 free indices after 25: 26 &amp;amp; 27, which puts them below Comments.  Not a huge deal, but restricts neat organization in the admin on highly customized sites.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>14754.2.patch attached to Ticket #14754</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 01 Sep 2010 17:00:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14754/14754.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14754/14754.2.patch/1283360459000000</guid>
      <description>&lt;p&gt;
some more lines
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14746 (Post Formats) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 01 Sep 2010 16:48:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14746#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14746#comment:36/1283359724000000</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Wed, 01 Sep 2010 16:40:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:42/1283359244000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14513#comment:41" title="Comment 41"&gt;momo360modena&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Fun !
&lt;/p&gt;
&lt;p&gt;
I just find this topic today.
&lt;/p&gt;
&lt;p&gt;
With my team, we worked on a plugin with "cloned taxonomy" but after 3 months and lot's of problem with big DB, multisites, we decided to create a table for relation and we published the plugin :
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks for commenting. Glad to get some additional validation.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/relation-post-types/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/relation-post-types/&lt;/a&gt;
The implementation is not completed (missing AJAX in admin, a complete integration with WP_Query) but it is already very functional.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'll definitely check it out.
&lt;/p&gt;
&lt;p&gt;
-Mike
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14633 (Error Message for incorrect Username during registration/sign up) updated</title>
      
        <dc:creator>labedford</dc:creator>

      <pubDate>Wed, 01 Sep 2010 16:40:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14633#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14633#comment:4/1283359240000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14633#comment:3" title="Comment 3"&gt;mrmist&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I guess you're talking about that error, as it's the only one I could see.  I doubt, though, that making this error more specific will help that much.  If someone doesn't understand the concept of "only letters and numbers" saying "no punctuation" probably won't help them.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The error message I get is exactly as I posted it - not the one shown.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14746 (Post Formats) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 01 Sep 2010 16:39:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14746#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14746#comment:35/1283359193000000</guid>
      <description>&lt;p&gt;
After seeing how diversely different themes are using this functionality, I don't think Type is appropriate.  This is not always used to type the content.  Often it is specifying pure window dressing.  "Featured", for example, isn't a content type.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14752 (Warn after theme activation if wp_head/footer is missing) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 01 Sep 2010 16:38:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14752#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14752#comment:2/1283359119000000</guid>
      <description>&lt;p&gt;
Looks like testing material to me. Something a theme author can verify it's stuff prior to release in quality control. Better to educate a theme-author then the user who might just does not get what this all is about (too technical).
&lt;/p&gt;
&lt;p&gt;
The workflow suggested is making the user the tester when it's already too late: Theme distributed and the error thrown means a full roundtrip from user -&amp;gt; themer -&amp;gt; user.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>14754.patch attached to Ticket #14754</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 01 Sep 2010 16:33:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14754/14754.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14754/14754.patch/1283358802000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14754 (add_query_arg() refactoring) created</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 01 Sep 2010 16:32:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14754</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14754/1283358740000000</guid>
      <description>&lt;p&gt;
The function add_query_arg() looks like that it could benefit from a refactoring. Especially the handling of optional parameters (did introduce PHP 4 that language feature?) can benefit by a sligh touch-up.
&lt;/p&gt;
&lt;p&gt;
Attached patch reflects only the first few lines of the function.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14746 (Post Formats) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 01 Sep 2010 16:31:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14746#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14746#comment:34/1283358679000000</guid>
      <description>&lt;p&gt;
Actually, a new taxonomy does not create a new query because we slurp all of the posts terms across all taxonomies in one go.  So that eliminates that argument against a taxonomy. Since a taxonomy would allow plugins to more easily add their own types and will make querying more flexible, I say we go with a taxonomy.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>momo360modena</dc:creator>

      <pubDate>Wed, 01 Sep 2010 15:08:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:41/1283353707000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Fun !
&lt;/p&gt;
&lt;p&gt;
I just find this topic today.
&lt;/p&gt;
&lt;p&gt;
With my team, we worked on a plugin with "cloned taxonomy" but after 3 months and lot's of problem with big DB, multisites, we decided to create a table for relation and we published the plugin :
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/relation-post-types/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/relation-post-types/&lt;/a&gt;
The implementation is not completed (missing AJAX in admin, a complete integration with WP_Query) but it is already very functional.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14424 (Eliminate dynamic function definitions, ie create_function) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 01 Sep 2010 15:06:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14424#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14424#comment:3/1283353577000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14750 (Add menus, menu items to import and export) updated</title>
      
        <dc:creator>shawnparker</dc:creator>

      <pubDate>Wed, 01 Sep 2010 15:01:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14750#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14750#comment:4/1283353295000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14753 (Automatic Upgrade Breaks when Owner in *NIX is not Web Server user) created</title>
      
        <dc:creator>captbrando</dc:creator>

      <pubDate>Wed, 01 Sep 2010 13:57:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14753</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14753/1283349458000000</guid>
      <description>&lt;p&gt;
After troubleshooting an automatic upgrade issue off and on for about a year, I think I have finally discovered the issue that caused the auto upgrade to fail.
&lt;/p&gt;
&lt;p&gt;
IN this setup, I had a user with their own directory and site. Their unix user ID owned the directory and files, and the webserver's group had write access to all the files (verified in the apache config that it was using that group).
&lt;/p&gt;
&lt;p&gt;
The automatic upgrade ONLY worked when I changed the user ownership to that of the webserver user ID.  I did nothing to permissions, just changed who owned the file, then the automatic upgrade worked.  This should not be how wordpress works, as from a permissions perspective, it has access to modify anything inside those directories (under the group write permission bit).  I'm not sure WHICH file changed the behavior, but when I changed all the wp* files recursively to be owned by the webserver, it worked.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14752 (Warn after theme activation if wp_head/footer is missing) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 01 Sep 2010 12:14:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14752#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14752#comment:1/1283343276000000</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14752 (Warn after theme activation if wp_head/footer is missing) created</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 01 Sep 2010 12:10:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14752</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14752/1283343037000000</guid>
      <description>&lt;p&gt;
After theme activation, we can reliably test for wp_head() and wp_footer() with an HTTP call to the front page.
&lt;/p&gt;
&lt;p&gt;
We should do that and check for two things:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;That wp_head() and wp_footer() are present in the theme.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;That they are in the correct location, immediately before &amp;lt;/head&amp;gt; and &amp;lt;/body&amp;gt;.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Then throw a warning that the theme may not function properly (with a link to a Codex page?) because it is not using the API correctly.
&lt;/p&gt;
&lt;p&gt;
Is this core material?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #12914 (Update the Right Now box when publishing via QuickDraft) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 01 Sep 2010 11:30:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12914#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12914#comment:4/1283340633000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch here, but it needs an update. Also if QuickPress is changed in the 3.1 cycle then we will need to take that/this into account.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12636 (Update sample output of a custom date via ajax) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 01 Sep 2010 11:28:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12636#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12636#comment:1/1283340516000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Need to handle $_POST better in admin ajax.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14746 (Post Formats) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 01 Sep 2010 08:10:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14746#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14746#comment:33/1283328611000000</guid>
      <description>&lt;p&gt;
Post Phylum: Mollusca :)
&lt;/p&gt;
&lt;p&gt;
Sounds a lot like what P2 does already, and Twenty Ten in a way inside the loop. But, it could be a unique way to use taxonomies to provide a decision making API that extends into other areas of post_type/taxonomy-term relationships.
&lt;/p&gt;
&lt;p&gt;
If plugins could create custom post types, and then use a taxonomy and its terms to shape/shift the post river on the fly with custom loop parts base on the term names, that could be a neat little setup.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14751 (Comment count cache is never invalidated using memcache) created</title>
      
        <dc:creator>TomUK</dc:creator>

      <pubDate>Wed, 01 Sep 2010 08:06:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14751</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14751/1283328360000000</guid>
      <description>&lt;p&gt;
This ticket is loosely related to my previous ticket (which has now been fixed) at &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14713" title="#14713: defect (bug): Comment cache is never invalidated when new comments are approved or added (closed: fixed)"&gt;#14713&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The comment counts (most noticeable is the count of comments pending moderation in the Admin area) are cached in the WordPress cache - but the cache for each of these never expires and is never updated.
&lt;/p&gt;
&lt;p&gt;
This causes problems when using memcached as the cache is persistent.
&lt;/p&gt;
&lt;p&gt;
function wp_count_comments in wp-includes/comment.php uses the cache as follows:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	$count = wp_cache_get("comments-{$post_id}", 'counts');
	if ( false !== $count )
		return $count;
&lt;/pre&gt;&lt;p&gt;
If the cache doesn't exist, it counts the comments then sets the cache using:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_cache_set("comments-{$post_id}", $stats, 'counts');
&lt;/pre&gt;&lt;p&gt;
As far as I can see, this cache never gets changed, and never expires. This means that the comment counts across WordPress never get updated, so for example the admins on my site don't  know if there are any pending comments as the count will be stuck at whatever it was when I first started memcached.
&lt;/p&gt;
&lt;p&gt;
I have added the following fix to my functions.php:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function fixCommentCountCache($postID){
    wp_cache_delete('comments-'.$postID, 'counts'); //delete the count cache for this comment
    wp_cache_delete('comments-0', 'counts'); //delete the global count cache
}
add_action('wp_update_comment_count', 'fixCommentCountCache');
add_action('comment_post', 'fixCommentCountCache');
&lt;/pre&gt;&lt;p&gt;
I've attached it to the action to update the count of comments in the database for a particular post - which handles updating (deleting) the cache when a comment is moderated, and also to the comment_post action which deletes the cache when a comment is added so that the pending moderation count will be updated.
&lt;/p&gt;
&lt;p&gt;
I'm not sure what functions to put this in core code? Perhaps wp_update_comment_count_now() and wp_new_comment(), where the above two actions are called?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14746 (Post Formats) updated</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Wed, 01 Sep 2010 07:04:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14746#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14746#comment:32/1283324662000000</guid>
      <description>&lt;p&gt;
I like this. I could have used this exact thing in my last site refresh. Instead of this I ended up adding a post custom field, which is clunky in the extreme. So +1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14699 (Optimize SQL resulting from custom taxonomy queries) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 01 Sep 2010 06:33:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14699#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14699#comment:7/1283322810000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Nice. I guess the only reason we didn't use subqueries before is that they weren't supported by MySQL then.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14750 (Add menus, menu items to import and export) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Wed, 01 Sep 2010 05:46:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14750#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14750#comment:3/1283320005000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14750 (Add menus, menu items to import and export) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 01 Sep 2010 05:32:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14750#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14750#comment:2/1283319176000000</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14750 (Add menus, menu items to import and export) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 01 Sep 2010 05:32:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14750#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14750#comment:1/1283319120000000</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14750 (Add menus, menu items to import and export) created</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 01 Sep 2010 05:28:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14750</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14750/1283318917000000</guid>
      <description>&lt;h2 id="Export"&gt;Export&lt;/h2&gt;
&lt;p&gt;
Menus and their menu items should be included in the WXR. Switching can_export to true should mostly rectify this.
&lt;/p&gt;
&lt;p&gt;
However, that introduces some issues. Including them in the post type and taxonomy dropdowns is not intuitive. You either need to export everything, or just export the menu tax and item PT (and you need to know to select both). Not every post type is going to be "content" that belongs in the dropdown, but that doesn't mean it shouldn't be somehow portable. (Same with taxonomies.)
&lt;/p&gt;
&lt;p&gt;
Thus to me it makes sense that can_export might need to be split into A) showing it in the export UI, and B) can it be included in the WXR file. We can then handle our own UI, perhaps with a checkbox, "Export menus." Or something.
&lt;/p&gt;
&lt;p&gt;
That of course brings up another concern, which is that menu items have associated posts, which means they need to also be exported. So really you should not be able to export just menus and menu items, unless of course all of your menu items are custom links (but how can we know that?). Ironically, a simplified export.php from 2.9 would have served us well here, as we'd always just export everything.
&lt;/p&gt;
&lt;h2 id="Import"&gt;Import&lt;/h2&gt;
&lt;p&gt;
Offering a patch for import is particularly challenging, because we'll not only need to map the post-taxonomy relationships (which the importer should handle for menus out of the box) but also the relationships between a menu item and the associated post or term. That introduces new problems. What happens when the associated post or term is not included in the WXR file? Does the menu item convert to a custom link? (Is there any indication that it became broken on import?) Or do we decline to import the menu item? (What about children menu items?)
&lt;/p&gt;
&lt;p&gt;
Clearly a lot of questions here. I think it is pretty safe to say that we do want menus exportable (they are much more like content than basic settings), but the implementation will not be easy.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Suggestions and patches strongly welcome.&lt;/strong&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14749 (Scrollbar position jumping in the Appearance-&gt;Editor newcontent textarea) updated</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Wed, 01 Sep 2010 05:26:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14749#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14749#comment:1/1283318764000000</guid>
      <description>&lt;p&gt;
i can confirm this. It's fairly annoying. Workaround is to use ie compatibility view though so have resisted raising.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14747 (Wordpress MU Displays Blank Page When No Theme Selected) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 01 Sep 2010 04:41:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14747#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14747#comment:4/1283316085000000</guid>
      <description>worksforme: &lt;p&gt;
This is the only report I've seen. It is supposed to work, and I can confirm it works in 3.0.1.
&lt;/p&gt;
&lt;p&gt;
Closing as worksforme. You can re-open with steps to reproduce if you can replicate it and you feel it is a bug, but you may want to try the multisite forum on the support forums: &lt;a class="ext-link" href="http://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14747 (Wordpress MU Displays Blank Page When No Theme Selected) updated</title>
      
        <dc:creator>riscphree</dc:creator>

      <pubDate>Wed, 01 Sep 2010 04:40:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14747#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14747#comment:3/1283316010000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14747#comment:1" title="Comment 1"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I was under the impression that disabling a theme across the network will not deactivate the theme on any site for which it is currently active. In fact that's how it worked last time I tested. Can you test using the Twenty Ten theme?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well, it was most certainly the problem earlier today, but I am now having problems replicating the issue. I will try again tomorrow, but I would like to know if anyone has seen or had this problem.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12180 (Custom taxonomies for custom post types exported but not tied to posts) reopened</title>
      
        <dc:creator>ajferg</dc:creator>

      <pubDate>Wed, 01 Sep 2010 03:47:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12180#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12180#comment:4/1283312836000000</guid>
      <description>&lt;p&gt;
This problem is still occurring in 3.0.1
&lt;/p&gt;
&lt;p&gt;
I have custom post types (product) and custom non-hierarchical taxonomy (category).  When I export, both Products and Categories are exported, but the products have no category association. I've checked the generated XML file, and taxonomy information is present for Posts, but not my custom Product post-type.
&lt;/p&gt;
&lt;p&gt;
I'm not sure exactly how to submit a patch, but I think I managed to fix the issue in my local copy.
&lt;/p&gt;
&lt;p&gt;
In /wp-admin/includes/export.php, there's a function wxr_post_taxonomy() about line 253
&lt;/p&gt;
&lt;p&gt;
Replace this:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
$taxonomies = get_object_taxonomies( 'post' );
$terms = wp_get_post_terms( $post-&amp;gt;ID, $taxonomies );
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
With this:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
$taxonomies = get_object_taxonomies( $post-&amp;gt;post_type );
$terms = wp_get_object_terms($post-&amp;gt;ID, $taxonomies);
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The original code limits taxonomies to those associated with the 'post' post-type.  This fix seeks taxonomies associated with whatever post-type this object may be.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #14749 (Scrollbar position jumping in the Appearance-&gt;Editor newcontent textarea) created</title>
      
        <dc:creator>Giant Slayer</dc:creator>

      <pubDate>Wed, 01 Sep 2010 01:32:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14749</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14749/1283304730000000</guid>
      <description>&lt;p&gt;
As I am editing code in the Appearance Editor main textarea called newcontent, the scrollbar slider will jump upward to a new position moving the current line being edited down.
&lt;/p&gt;
&lt;p&gt;
On a vista machine using ie8 with wp3.0.1 and the 2010 theme, a single character stroke will move the scrollbar up 3 lines.
&lt;/p&gt;
&lt;p&gt;
On an xp machine using ie8 with wp3.0.1 and a custom theme, a single character stroke will move the scrollbar up 8 lines.  Ocasionally the scrollbar will only move 1 line and every keystroke will bring the down.  Pasting text can and often does bring the line being edited below the visible area of the textarea.
&lt;/p&gt;
&lt;p&gt;
It is very frustrating when it jumps around like this.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item>
   </channel>
</rss>