<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #2591 (users can enter dangerous serialized strings) updated</title>
      
        <dc:creator>random</dc:creator>

      <pubDate>Fri, 24 Mar 2006 22:50:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2591</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2591/1143240649000000</guid>
      <description>&lt;p&gt;
Instead of throwing an error if is_serialized() is true, that string could be double-serialized -- I mean, if I self-identify as a serialized array, who are you to stop me putting that in my bio? ;)
&lt;/p&gt;
&lt;p&gt;
Seriously though, I think the Right way is to ensure that something saved as a string isn't unserialized, not to put a fence up to keep certain types of strings out. Short of an ugly meta_value_type column I don't see a non-hackish way to do that, though, so +1 for Mark's latest patch.
&lt;/p&gt;
&lt;p&gt;
David, running unserialize() on everything kind of defeats the purpose of having an is_serialized() function at all. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>single_objects.3658.diff attached to Ticket #2585</title>
      
        <dc:creator>abhay</dc:creator>

      <pubDate>Fri, 24 Mar 2006 19:27:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2585/single_objects.3658.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2585/single_objects.3658.diff/1143228421000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2585 (Add is() function that checks for single object queries.) updated</title>
      
        <dc:creator>abhay</dc:creator>

      <pubDate>Fri, 24 Mar 2006 19:26:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2585</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2585/1143228385000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Do we want to also change all the existing is_single(), is_attachment(), is_page() calls?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2592 (Add selected list of categories option to function get_bookmarks()) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 24 Mar 2006 19:22:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2592</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2592/1143228144000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/3658" title="Retrieve bookmarks for multiple cats.  Props MichaelH. fixes #2592"&gt;[3658]&lt;/a&gt;) Retrieve bookmarks for multiple cats.  Props MichaelH. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2592" title="#2592: defect (bug): Add selected list of categories option to function get_bookmarks() (closed: fixed)"&gt;#2592&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [3658]: Retrieve bookmarks for multiple cats.  Props MichaelH. fixes #2592</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 24 Mar 2006 19:22:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/3658</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/3658/1143228142447286</guid>
      <description>&lt;p&gt;
Retrieve bookmarks for multiple cats.  Props MichaelH. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2592" title="#2592: defect (bug): Add selected list of categories option to function get_bookmarks() (closed: fixed)"&gt;#2592&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #1669 (Patch to "wp_list_pages" to add the opposite of "exclude" (called "only")) closed</title>
      
        <dc:creator>MichaelH</dc:creator>

      <pubDate>Fri, 24 Mar 2006 16:54:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/1669</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/1669/1143219285000000</guid>
      <description>fixed: &lt;p&gt;
This ticket is resolved by &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/3655" title="Add include param to get_posts(), get_categories(), get_pages(), and ..."&gt;changeset:3655&lt;/a&gt; that added the ability to include a selected page or pages in function get_pages().  So, with wp_list_pages(), a parameter of 'include=3,4' will present just pages IDs 3 and 4.
&lt;/p&gt;
&lt;p&gt;
Guess it's okay to change this to fixed even though it is assigned to Mark, and request bg's mark as Closed.
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #2591 (users can enter dangerous serialized strings) updated</title>
      
        <dc:creator>davidhouse</dc:creator>

      <pubDate>Fri, 24 Mar 2006 16:47:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2591</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2591/1143218873000000</guid>
      <description>&lt;p&gt;
This might be a bit simpler:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function is_serialized($arg) {
    return unserliaze($arg) !== false;
}
&lt;/pre&gt;&lt;p&gt;
See &lt;a class="ext-link" href="http://us2.php.net/unserialize"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://us2.php.net/unserialize&lt;/a&gt; for an explanation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2526 (WP DB Backup plugin is using $user_level instead of capabilities) updated</title>
      
        <dc:creator>MichaelH</dc:creator>

      <pubDate>Fri, 24 Mar 2006 15:00:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2526</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2526/1143212459000000</guid>
      <description>&lt;p&gt;
Thanks robmiller--with latest patch it works--only users with the administrator role can access the Manage-&amp;gt;Backup option.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>admin-functions.php.diff attached to Ticket #2568</title>
      
        <dc:creator>Sewar</dc:creator>

      <pubDate>Fri, 24 Mar 2006 14:47:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2568/admin-functions.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2568/admin-functions.php.diff/1143211651000000</guid>
      <description>&lt;p&gt;
Oops, I forget add admin-functions.php to patch, it contain patch for edit timestamp in post/page editing.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2588 (Movable Type Importer) updated</title>
      
        <dc:creator>dneto</dc:creator>

      <pubDate>Fri, 24 Mar 2006 13:26:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2588</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2588/1143206796000000</guid>
      <description>&lt;p&gt;
Ryan,
&lt;/p&gt;
&lt;p&gt;
I've used the old (modified) import-mt.php AND it allowed me to import POST IDs AND my table has the "auto-increment" option, but the comments were not correctly "attached" to their posts. Just to let you know that it's possible, but I'm not a PHP geek to modify it to do the right thing.
&lt;/p&gt;
&lt;p&gt;
Still waiting for comments.
&lt;/p&gt;
&lt;p&gt;
Regards
Daniel Neto
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2591 (users can enter dangerous serialized strings) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 24 Mar 2006 11:43:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2591</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2591/1143200630000000</guid>
      <description>&lt;p&gt;
First stab at &lt;code&gt;is_serialized()&lt;/code&gt; and associated code.  Noticed that a lot of the object/array serialization stuff was duplicated, so I made and used a new function &lt;code&gt;prepare_data()&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
I also made &lt;code&gt;maybe_unserialize()&lt;/code&gt; first check &lt;code&gt;is_serialized()&lt;/code&gt; because it should be faster to run the small grep than do the unserialization... because most options are not serialized.
&lt;/p&gt;
&lt;p&gt;
Post meta that is serialized is simply not shown to the user.
&lt;/p&gt;
&lt;p&gt;
on options.php, serialized data is marked as such, and the value is not editable.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>serialization.diff attached to Ticket #2591</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 24 Mar 2006 11:40:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2591/serialization.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2591/serialization.diff/1143200453000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2591 (users can enter dangerous serialized strings) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 24 Mar 2006 10:15:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2591</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2591/1143195347000000</guid>
      <description>&lt;p&gt;
Hm, possible solution, but it'd have to be more permanent than that, as a DB password change would effectively kill the blog.
&lt;/p&gt;
&lt;p&gt;
Still working on my patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2591 (users can enter dangerous serialized strings) updated</title>
      
        <dc:creator>skeltoac</dc:creator>

      <pubDate>Fri, 24 Mar 2006 09:58:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2591</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2591/1143194330000000</guid>
      <description>&lt;p&gt;
How about prepending a hash of the DB password or some such server secret to all serialized values, then unserializing only the values that matched that key?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2591 (users can enter dangerous serialized strings) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 24 Mar 2006 09:17:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2591</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2591/1143191869000000</guid>
      <description>&lt;p&gt;
You know what?  Serializing everything is really more trouble than it is worth.  It will break dozens of plugins, and make troubleshooting a nightmare.  Manually editing the options table will be a hellish experience.
&lt;/p&gt;
&lt;p&gt;
The problem (i.e. the security risk) is this:  serialized objects/arrays are inserted into the database as simple text, but are interpreted as objects/arrays when coming out.  We need to recognize when someone is trying to do that, and block it.
&lt;/p&gt;
&lt;p&gt;
So what we need is a function that can detect serialized data WITHOUT doing an acual unserialize test on it.  I've seen several GPL functions that do that, using various techniques.  So what I'm going to do is find all such GPL functions, merge them (if necessary) and use that is_serialized() check for the update/add/delete functions so that it rejects serialized data.  Next, I'll need to make changes to options.php and post meta so that it doesn't display serialized data.  For example, the feeds that are stored in the options table show up in options.php, and you can save them.  Honestly, serialized data is a bear to edit, and I really don't think anyone is going to miss it if we just have the value field deactivated and maybe write "array" or "object" and ignore those fields on update.
&lt;/p&gt;
&lt;p&gt;
How's that sound?  I just really don't think that serializing plain text strings is a good move in terms of usability and backwards compatability.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>optionsphp-serialize.diff attached to Ticket #2591</title>
      
        <dc:creator>random</dc:creator>

      <pubDate>Fri, 24 Mar 2006 08:12:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2591/optionsphp-serialize.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2591/optionsphp-serialize.diff/1143187958000000</guid>
      <description>&lt;p&gt;
options.php magic serialization example
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2591 (users can enter dangerous serialized strings) updated</title>
      
        <dc:creator>random</dc:creator>

      <pubDate>Fri, 24 Mar 2006 08:02:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2591</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2591/1143187373000000</guid>
      <description>&lt;p&gt;
There's a serialize call in delete_usermeta() as well as update_usermeta(), and let's not forget postmeta.
&lt;/p&gt;
&lt;p&gt;
Speaking of postmeta, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/3656" title="Add meta_key and meta_value options to get_posts() and get_pages(). ..."&gt;changeset:3656&lt;/a&gt; added querying by meta_value, so that'd need changing too. (Speaking of which, is querying going to be a problem elsewhere?)
&lt;/p&gt;
&lt;p&gt;
For options.php, we could unserialize and gettype() the result, reserialize if necessary for display, but add a hidden
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;input type="hidden" name="type[$option_name]" value="array" /&amp;gt;
&lt;/pre&gt;&lt;p&gt;
field (or similar) to keep track of what's already serialized when the data gets sent back.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2596 (Need a way to limit size of uploads) created</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 24 Mar 2006 06:46:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2596</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2596/1143182769000000</guid>
      <description>&lt;p&gt;
It appears that the &lt;code&gt;fileupload_maxk&lt;/code&gt; setting used in WP 1.5.x is no longer used in WP 2.x, which means that there is easy way to limit the size of uploads.  It'd at least be nice for this to be hookable by a plugin.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #2595 (Option of "action" with value "update" is being added to options table) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 24 Mar 2006 05:23:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2595</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2595/1143177786000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Fix unsets $_POST&lt;a class="missing wiki"&gt;$wpvar?&lt;/a&gt;; in the "WP vars to set" loop.  Anything that we're running through this loop (only "action") we don't want showing up as an option.
&lt;/p&gt;
&lt;p&gt;
People who already have it added are stuck with it, but it'd be silly to write code to remove it... it does no harm.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>kill_action_option.diff attached to Ticket #2595</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 24 Mar 2006 05:20:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2595/kill_action_option.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2595/kill_action_option.diff/1143177638000000</guid>
      <description>&lt;p&gt;
Kill the "action" option
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2591 (users can enter dangerous serialized strings) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 24 Mar 2006 05:16:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2591</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2591/1143177378000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Okay, I kludged it and made it skip serialization on options.php
&lt;/p&gt;
&lt;p&gt;
Also, user options are now serialized on update, which is really the area where there is the most danger of a malicious attack (someone with a subscriber profile inserts a 1 million member array and crashes the server).
&lt;/p&gt;
&lt;p&gt;
I thought of other ways of avoiding double serialization... there are GPL is_serialized() functions floating around, but they'd likely leave openings for abuse, as well as cause a lot of extra cycles on option updates... so a kludge for /wp-admin/options.php might actually be the best way.  Thoughts?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>serialize_all_options-TAKE_2.diff attached to Ticket #2591</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 24 Mar 2006 05:11:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2591/serialize_all_options-TAKE_2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2591/serialize_all_options-TAKE_2.diff/1143177110000000</guid>
      <description>&lt;p&gt;
Take 2
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2595 (Option of "action" with value "update" is being added to options table) created</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 24 Mar 2006 05:08:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2595</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2595/1143176925000000</guid>
      <description>&lt;p&gt;
the hidden form field on &lt;code&gt;wp-admin/options.php&lt;/code&gt; with name "action" and value "update" is causing an option of that name and value to be added to the options table.  Oops!
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #2591 (users can enter dangerous serialized strings) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 24 Mar 2006 04:48:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2591</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2591/1143175684000000</guid>
      <description>&lt;p&gt;
I'm testing out the uploaded patch on a local SVN test install.  It serializes in update_option() and add_option() in every case (not just object and array).
&lt;/p&gt;
&lt;p&gt;
Problem: using the secret "options.php" page will destroy your options table.  The serialized strings are re-serialized, and serialized arrays are serialized as a string.  We'll have to make a special case for this page, and skip serialization.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>serialize_all_options.diff attached to Ticket #2591</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 24 Mar 2006 04:40:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2591/serialize_all_options.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2591/serialize_all_options.diff/1143175254000000</guid>
      <description>&lt;p&gt;
Serialize all option values
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2591 (users can enter dangerous serialized strings) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 24 Mar 2006 03:53:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2591</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2591/1143172418000000</guid>
      <description>&lt;p&gt;
As long as plugins are using the API, it should be fine.  I can think of one place in WP where the API is not used, (direct query in wp-settings.php:123) but it just checks that there is a value, it doesn't use the value itself.
&lt;/p&gt;
&lt;p&gt;
As for upgrading of existing strings, couldn't we just let it happen naturally?  We'd still be passing stuff through the "maybe unserialize" function, so it'd just get upgraded whenever it was updated.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2589 (WP DB Backup core tables should reflect new and deleted tables) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 24 Mar 2006 01:19:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2589</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2589/1143163175000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/3657" title="Update table list in backup plugin. Props abhay and westi. fixes #2589"&gt;[3657]&lt;/a&gt;) Update table list in backup plugin. Props abhay and westi. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2589" title="#2589: defect (bug): WP DB Backup core tables should reflect new and deleted tables (closed: fixed)"&gt;#2589&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [3657]: Update table list in backup plugin. Props abhay and westi. fixes #2589</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 24 Mar 2006 01:19:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/3657</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/3657/1143163173283366</guid>
      <description>&lt;p&gt;
Update table list in backup plugin. Props abhay and westi. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2589" title="#2589: defect (bug): WP DB Backup core tables should reflect new and deleted tables (closed: fixed)"&gt;#2589&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #2589 (WP DB Backup core tables should reflect new and deleted tables) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 24 Mar 2006 01:15:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2589</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2589/1143162940000000</guid>
      <description>&lt;p&gt;
Eventually, upgrade will drop the linkcategories table. I've been holding off on dropping the table until the bookmark design settled.  That has quieted down though, so maybe the time to drop is near.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2589 (WP DB Backup core tables should reflect new and deleted tables) updated</title>
      
        <dc:creator>MichaelH</dc:creator>

      <pubDate>Fri, 24 Mar 2006 00:46:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2589</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2589/1143161168000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
While testing westi's fix on a 2.0.2 to 2.1-alpha1 upgrade, I was reminded that the linkcategories table is being left, intact, on upgrades.  With this fix, that table will show in the "You may choose to include any of the following tables" column of WP DB Backup.
&lt;/p&gt;
&lt;p&gt;
Any idea on what to do there, if anything?
&lt;/p&gt;
&lt;p&gt;
Also, any opinion about bumping the Version from 1.7 to 1.7.something?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2594 (Post sidebar overlaps left area boxes) updated</title>
      
        <dc:creator>cre8d</dc:creator>

      <pubDate>Thu, 23 Mar 2006 22:58:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2594</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2594/1143154734000000</guid>
      <description>&lt;p&gt;
It was the Ultimate Tag Warrior Plugin which caused the layout problem.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2594 (Post sidebar overlaps left area boxes) closed</title>
      
        <dc:creator>cre8d</dc:creator>

      <pubDate>Thu, 23 Mar 2006 22:58:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2594</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2594/1143154714000000</guid>
      <description>wontfix</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #2594 (Post sidebar overlaps left area boxes) created</title>
      
        <dc:creator>cre8d</dc:creator>

      <pubDate>Thu, 23 Mar 2006 22:43:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2594</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2594/1143153810000000</guid>
      <description>&lt;p&gt;
When creating/editing a post and the categories box is open, the right sidebar overlaps the left content area - in particular the upload a file area.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #2589 (WP DB Backup core tables should reflect new and deleted tables) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 23 Mar 2006 22:02:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2589</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2589/1143151379000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I have tested this and it works fine for me.
&lt;/p&gt;
&lt;p&gt;
The cron list of tables was still missing "link2cat" so i have added that in a new patch and moved this list of tables to a class attribute storing them in an array near the top of the file so they are easy to find for updates and only in one place!
&lt;/p&gt;
&lt;p&gt;
I think this is good to go for commit
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>2589.diff attached to Ticket #2589</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 23 Mar 2006 21:59:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2589/2589.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2589/2589.diff/1143151157000000</guid>
      <description>&lt;p&gt;
New patch updated to use a single array
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2593 (The walk_tree family should be a class) updated</title>
      
        <dc:creator>davidhouse</dc:creator>

      <pubDate>Thu, 23 Mar 2006 21:15:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2593</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2593/1143148532000000</guid>
      <description>&lt;p&gt;
More stuff should probably be converted to use this, for example:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Plugin listing in admin
&lt;/li&gt;&lt;li&gt;Bookmark listing
&lt;/li&gt;&lt;li&gt;Post/page listing in admin
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Might be nice to build some paging into it as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>walk-tree-class.php attached to Ticket #2593</title>
      
        <dc:creator>davidhouse</dc:creator>

      <pubDate>Thu, 23 Mar 2006 21:12:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2593/walk-tree-class.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2593/walk-tree-class.php/1143148376000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2593 (The walk_tree family should be a class) created</title>
      
        <dc:creator>davidhouse</dc:creator>

      <pubDate>Thu, 23 Mar 2006 21:12:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2593</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2593/1143148361000000</guid>
      <description>&lt;p&gt;
Here's a patch that refactors the new walk_tree() functions into a class. Extend the class to create a walker (examples included of categories and pages). Create an instance and call walk() to return the output, then echo or whatever.
&lt;/p&gt;
&lt;p&gt;
Just look at the code :)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #2591 (users can enter dangerous serialized strings) updated</title>
      
        <dc:creator>masquerade</dc:creator>

      <pubDate>Thu, 23 Mar 2006 20:37:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2591</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2591/1143146220000000</guid>
      <description>&lt;p&gt;
nevermind that last bit, I misread, my brain is fried.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2591 (users can enter dangerous serialized strings) updated</title>
      
        <dc:creator>masquerade</dc:creator>

      <pubDate>Thu, 23 Mar 2006 20:28:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2591</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2591/1143145688000000</guid>
      <description>&lt;p&gt;
Am I missing something? If we serialized everything, wouldn't we unserialize everything as well? Why would anyone have to worry about parsing strings, wouldn't a string be returned?
&lt;/p&gt;
&lt;p&gt;
+1 for serializing everything.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2526 (WP DB Backup plugin is using $user_level instead of capabilities) updated</title>
      
        <dc:creator>robmiller</dc:creator>

      <pubDate>Thu, 23 Mar 2006 19:46:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2526</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2526/1143143194000000</guid>
      <description>&lt;p&gt;
Oops, spoke rather too soon. This one should be fine :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>2526.2.diff attached to Ticket #2526</title>
      
        <dc:creator>robmiller</dc:creator>

      <pubDate>Thu, 23 Mar 2006 19:46:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2526/2526.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2526/2526.2.diff/1143143173000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2526 (WP DB Backup plugin is using $user_level instead of capabilities) updated</title>
      
        <dc:creator>robmiller</dc:creator>

      <pubDate>Thu, 23 Mar 2006 19:36:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2526</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2526/1143142606000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Fixed and tested.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>2526.diff attached to Ticket #2526</title>
      
        <dc:creator>robmiller</dc:creator>

      <pubDate>Thu, 23 Mar 2006 19:36:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2526/2526.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2526/2526.diff/1143142587000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2591 (users can enter dangerous serialized strings) updated</title>
      
        <dc:creator>skeltoac</dc:creator>

      <pubDate>Thu, 23 Mar 2006 19:31:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2591</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2591/1143142314000000</guid>
      <description>&lt;p&gt;
random's suggestion is one I've also proposed. The counter-argument was that it would make it difficult for non-PHP scripts to make use of string data in our options tables.
&lt;/p&gt;
&lt;p&gt;
I think it's pretty trivial to parse a PHP serialized string, so we shouldn't worry about non-PHP programs integrating with our options tables. Serializing every option is fine by me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2592 (Add selected list of categories option to function get_bookmarks()) updated</title>
      
        <dc:creator>davidhouse</dc:creator>

      <pubDate>Thu, 23 Mar 2006 16:37:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2592</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2592/1143131878000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2592 (Add selected list of categories option to function get_bookmarks()) updated</title>
      
        <dc:creator>MichaelH</dc:creator>

      <pubDate>Thu, 23 Mar 2006 16:35:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2592</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2592/1143131710000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch to function get_bookmarks(), allows a parameter such as 'category=1,3,7' to return only bookmarks belonging to those three categories.
&lt;/p&gt;
&lt;p&gt;
Also, changed so that &lt;code&gt;$category = ''&lt;/code&gt; returns ALL categories (previously, &lt;code&gt;$category = -1&lt;/code&gt;  returned ALL).  This required adding line in get_links() to pass $category correctly when calling get_bookmarks().
&lt;/p&gt;
&lt;p&gt;
Also fixed problem in get_links_list() to report bookmarks that only belong to a "child category" by adding &amp;amp;hierarchial=0 to the parameter list when calling get_categories().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>selected_cats_for_get_bookmarks.diff attached to Ticket #2592</title>
      
        <dc:creator>MichaelH</dc:creator>

      <pubDate>Thu, 23 Mar 2006 16:32:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2592/selected_cats_for_get_bookmarks.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2592/selected_cats_for_get_bookmarks.diff/1143131561000000</guid>
      <description>&lt;p&gt;
Selected categories for get_bookmarks
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2004 (Pages page should page) updated</title>
      
        <dc:creator>robmiller</dc:creator>

      <pubDate>Thu, 23 Mar 2006 16:08:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2004</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2004/1143130080000000</guid>
      <description>&lt;p&gt;
This would be pretty complex in terms of the hierarchy - wouldn't you end up having to generate the full hierarchy then chop the list down to the first X entries?
&lt;/p&gt;
&lt;p&gt;
If the consideration is screen space, then perhaps some kind of tree view might be better?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2592 (Add selected list of categories option to function get_bookmarks()) created</title>
      
        <dc:creator>MichaelH</dc:creator>

      <pubDate>Thu, 23 Mar 2006 15:04:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2592</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2592/1143126279000000</guid>
      <description>&lt;p&gt;
In anticipation of the template function: wp_list_bookmarks (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2587" title="#2587: defect (bug): New template function: wp_list_bookmarks() (closed: fixed)"&gt;ticket:2587&lt;/a&gt;), add the option to return bookmarks belonging to a selected list of categories.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #2591 (users can enter dangerous serialized strings) updated</title>
      
        <dc:creator>random</dc:creator>

      <pubDate>Thu, 23 Mar 2006 13:39:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2591</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2591/1143121181000000</guid>
      <description>&lt;p&gt;
Another possible solution is to just serialize everything, including strings.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2588 (Movable Type Importer) updated</title>
      
        <dc:creator>dneto</dc:creator>

      <pubDate>Thu, 23 Mar 2006 13:32:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2588</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2588/1143120742000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I attached a file with just a part of my posts. I've modified my Movable Type exporter to include the POSTID field, just after the AUTHOR field. So, the WP importer may read this field correctly and import it.
&lt;/p&gt;
&lt;p&gt;
And what about the stripping tags? Are they really gonna be stripped from all over the import proccess?
&lt;/p&gt;
&lt;p&gt;
Thanks for your feedback!
Daniel Neto
Rio de Janeiro - Brazil
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>embromaction.zip attached to Ticket #2588</title>
      
        <dc:creator>dneto</dc:creator>

      <pubDate>Thu, 23 Mar 2006 13:27:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2588/embromaction.zip</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2588/embromaction.zip/1143120455000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2591 (users can enter dangerous serialized strings) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Thu, 23 Mar 2006 10:11:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2591</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2591/1143108695000000</guid>
      <description>&lt;p&gt;
But what about plugins?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2591 (users can enter dangerous serialized strings) updated</title>
      
        <dc:creator>davidhouse</dc:creator>

      <pubDate>Thu, 23 Mar 2006 10:05:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2591</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2591/1143108310000000</guid>
      <description>&lt;p&gt;
We should probably get smart and maintain a list of what can be unserialised and what is just plain text. No untrusted data should ever be unserialised.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2591 (users can enter dangerous serialized strings) created</title>
      
        <dc:creator>random</dc:creator>

      <pubDate>Thu, 23 Mar 2006 09:38:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2591</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2591/1143106724000000</guid>
      <description>&lt;p&gt;
Users can enter serialized objects etc. as strings in (e.g.) the "first name" field on the profile page, and these strings aren't necessarily safe to unserialized.
&lt;/p&gt;
&lt;p&gt;
For example, serialized objects run the magic _ _wakeup() function when they're unserialized. If the PDO extension is enabled -- and it is by default in PHP 5 -- you can cause a fatal error with this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;O:3:"PDO":0:{}
&lt;/pre&gt;&lt;p&gt;
Much worse, you can enter something like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;a:100000000:{}
&lt;/pre&gt;&lt;p&gt;
i.e., an array with 100,000,000 elements. PHP doesn't know they're empty, so it starts eating up memory. In my test it crashed Apache.
&lt;/p&gt;
&lt;p&gt;
Either way, it's a problem. I think it's best to add something to maybe_unserialize(), since just sanitizing input will still leave plugins vulnerable down the road.
&lt;/p&gt;
&lt;p&gt;
I'm not adding a patch since I can only think of hacks like checking for /&lt;sup&gt;O:/ or that the number of elements doesn't go over some arbitrary limit. Thoughts?
&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;
Maybe a type-hinting field for the setting, so something input as a string isn't unserialized?
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://ilia.ws/archives/107-Another-unserialize-abuse.html"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;More info here.&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>2561f.diff attached to Ticket #2561</title>
      
        <dc:creator>mdawaffe</dc:creator>

      <pubDate>Thu, 23 Mar 2006 08:15:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2561/2561f.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2561/2561f.diff/1143101702000000</guid>
      <description>&lt;p&gt;
fixes some bugs reported by ryan and mark
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2590 (New Filter: comment_post_redirect) updated</title>
      
        <dc:creator>davidhouse</dc:creator>

      <pubDate>Thu, 23 Mar 2006 07:56:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2590</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2590/1143100584000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Err, meant to add this last time :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2590 (New Filter: comment_post_redirect) updated</title>
      
        <dc:creator>davidhouse</dc:creator>

      <pubDate>Thu, 23 Mar 2006 07:55:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2590</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2590/1143100546000000</guid>
      <description>&lt;p&gt;
Why not.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>2561e.diff attached to Ticket #2561</title>
      
        <dc:creator>mdawaffe</dc:creator>

      <pubDate>Thu, 23 Mar 2006 04:43:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2561/2561e.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2561/2561e.diff/1143089022000000</guid>
      <description>&lt;p&gt;
Fix new meta after update a different meta bug
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #1496 (wp-settings.php should dl() mysql.so if it's not loaded as an extension) updated</title>
      
        <dc:creator>SteamedPenguin</dc:creator>

      <pubDate>Thu, 23 Mar 2006 04:23:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/1496</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/1496/1143087839000000</guid>
      <description>&lt;p&gt;
On its own, no, but there are some additions to the 1.5 branch that are adding up to another 1.5 release. Maybe not a 1.5.3, but a 1.5.2.1 wouldn't hurt.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>2561d.diff attached to Ticket #2561</title>
      
        <dc:creator>mdawaffe</dc:creator>

      <pubDate>Thu, 23 Mar 2006 04:12:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2561/2561d.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2561/2561d.diff/1143087148000000</guid>
      <description>&lt;p&gt;
Fix first meta bug.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2561 (AJAX Admin) updated</title>
      
        <dc:creator>mdawaffe</dc:creator>

      <pubDate>Thu, 23 Mar 2006 01:31:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2561</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2561/1143077483000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'd like to get this reviewed and altered by others and committed if appropriate.  Users, plugins and potentially bookmarks can be spun off to their own tickets.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2561 (AJAX Admin) updated</title>
      
        <dc:creator>mdawaffe</dc:creator>

      <pubDate>Thu, 23 Mar 2006 01:26:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2561</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2561/1143077213000000</guid>
      <description>&lt;p&gt;
2561c.diff
&lt;/p&gt;
&lt;p&gt;
Delete
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Posts on Manage-&amp;gt;Posts
&lt;/li&gt;&lt;li&gt;Pages on Manage-&amp;gt;Pages
&lt;/li&gt;&lt;li&gt;Comments on Manage-&amp;gt;Posts: click on comments # link for a particular post
&lt;/li&gt;&lt;li&gt;Categories on Manage-&amp;gt;Categories
&lt;/li&gt;&lt;li&gt;Comments on Manage-&amp;gt;Comments
&lt;/li&gt;&lt;li&gt;Comments on Manage-&amp;gt;Awaiting Moreration (Delete Just this comment)
&lt;/li&gt;&lt;li&gt;Bookmarks on Bookmarks-&amp;gt;Manage Bookmarks
&lt;/li&gt;&lt;li&gt;Custom Fields on Write-&amp;gt;Post/Page
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
"Dim" (change the coler of)
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Comments when moderating through Manage-&amp;gt;Posts: click on comments # link for a particular post
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Update
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Individual Custom Fields on Write-&amp;gt;Post/Page
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Add
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Categories through Write-&amp;gt;Post/Page or Bookmarks-&amp;gt;Add Bookmarks
&lt;/li&gt;&lt;li&gt;Categories from Manage-&amp;gt;Categories
&lt;/li&gt;&lt;li&gt;New Custom Fields from Write-&amp;gt;Post/Page
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Does not do anything with plugins as above.  Does not do user addition, which will be a little tricky with the current way users are listed.
&lt;/p&gt;
&lt;p&gt;
Needs
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Better wp-admin.css for category UL on Write-&amp;gt;Post/Page / Bookmarks-&amp;gt;Add Bookmarks (fine in FF, ugly in IE).
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
This latest patch tested only in FF 1.0.5.1/Max OS X
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>2561c.diff attached to Ticket #2561</title>
      
        <dc:creator>mdawaffe</dc:creator>

      <pubDate>Thu, 23 Mar 2006 01:25:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2561/2561c.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2561/2561c.diff/1143077149000000</guid>
      <description>&lt;p&gt;
No plugins.  Better everything else.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2587 (New template function: wp_list_bookmarks()) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 23 Mar 2006 00:59:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2587</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2587/1143075598000000</guid>
      <description>&lt;p&gt;
Yes and yes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2590 (New Filter: comment_post_redirect) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Thu, 23 Mar 2006 00:49:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2590</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2590/1143074975000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch is up.  2nd opinion?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>comment_post_redirect-HOOK.diff attached to Ticket #2590</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Thu, 23 Mar 2006 00:48:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2590/comment_post_redirect-HOOK.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2590/comment_post_redirect-HOOK.diff/1143074893000000</guid>
      <description>&lt;p&gt;
$location = apply_filters('comment_post_redirect', $location, $comment);
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2590 (New Filter: comment_post_redirect) created</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Thu, 23 Mar 2006 00:47:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2590</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2590/1143074823000000</guid>
      <description>&lt;p&gt;
comment_post_redirect is a filter on the $location that is wp_redirect()ed after a successful comment.  It also passes the $comment object as a second value.
&lt;/p&gt;
&lt;p&gt;
Use case: modify the URI that people go do, to do one of many things, including passing a message.  for instance, you could add ?message=1 and then have wp_head look for $_GET&lt;a class="missing wiki"&gt;message?&lt;/a&gt; == "1" and do a JS alert or something.  You could notify of spam, or moderation.  Or, on spam or moderation, you could redirect to a captcha or something to allow someone to redeem themselves.  Would really be quite useful.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item>
   </channel>
</rss>