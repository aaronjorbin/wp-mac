<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #36995 (Support for Service Workers) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 22 Jun 2018 23:16:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36995#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36995#comment:17/1529709389481013</guid>
      <description>&lt;p&gt;
Initial pull request in feature plugin to add core support for service workers: &lt;a class="ext-link" href="https://github.com/xwp/pwa-wp/pull/14"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/pwa-wp/pull/14&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44440 (Case sensitive/insensitive bug) updated</title>
      
        <dc:creator>dingdang</dc:creator>

      <pubDate>Fri, 22 Jun 2018 22:16:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44440#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44440#comment:3/1529705816657101</guid>
      <description>&lt;p&gt;
In Windows also prefix setting in wp-config.php is lowered case, while in Linux it s mixed ("pReFiX_"). Thus after a migration (copy of the files and database from Windows to Linux) everyhing would work on the frontend as the prefix would match (lower case), the only problem is that in options and usersmeta tables it is in uppercase. After a successful login an error message "You don't have access to that page" appears (even with correct login/password).
Manual fix of the prefix case in these two tables fixes the problem.
&lt;/p&gt;
&lt;p&gt;
The bug is in Windows environment - as the table prefix is converted to lower case (as well in wp-config.php), the values in the two mentioned tables should be lower case as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43999 (Add Telegram and Whatsapp support to Social Media Menu) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 22 Jun 2018 21:28:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43999#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43999#comment:1/1529702933099264</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by cpasqualini. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1529702931000359"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44440 (Case sensitive/insensitive bug) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 22 Jun 2018 21:26:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44440#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44440#comment:2/1529702786203561</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by pbiron. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1529702784000447"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44440 (Case sensitive/insensitive bug) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 22 Jun 2018 21:25:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44440#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44440#comment:1/1529702716361292</guid>
      <description>&lt;p&gt;
My envs:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;windows 10 pro
&lt;ul&gt;&lt;li&gt;WP 4.9.6
&lt;/li&gt;&lt;li&gt;MySQL 5.7.10 (engine=InnoDB, db collation utf8mb4_unicode_520_ci)
&lt;/li&gt;&lt;li&gt;PHP 5.6.36
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;linux (Kernel Version 2.6.32-673.26.1.lve1.4.29.el6.x86_64, I think it's centOS but not positive)
&lt;ul&gt;&lt;li&gt;WP 4.9.6
&lt;/li&gt;&lt;li&gt;MySQL 5.6.39 (engine=MyISAM, db collation utf8mb4_unicode_520_ci)
&lt;/li&gt;&lt;li&gt;PHP 5.6.20
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I can confirm:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;in windows, I end up with table names like &lt;code&gt;prefix_xxx&lt;/code&gt;; while in linux I end up with table names like &lt;code&gt;pReFiX_xxx&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;the values in the &lt;code&gt;option_name&lt;/code&gt; and &lt;code&gt;meta_name&lt;/code&gt; columns of the relevant rows of &lt;code&gt;$wpdb-&amp;gt;options&lt;/code&gt; and &lt;code&gt;$wpdb-&amp;gt;usermeta&lt;/code&gt; are &lt;code&gt;pReFiX_xxx&lt;/code&gt; in both windows and linux
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
However, I can &lt;strong&gt;not&lt;/strong&gt; replicate the problem of "loses its role and access is forbidden" on linux.  I am able to access admin funcs (i.e., create posts, etc) in both windows &amp;amp; linux envs.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43974 (Both personal data request processes should follow the same convention) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 22 Jun 2018 20:30:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43974#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43974#comment:6/1529699419502192</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44101 (Personal Data Erasure Workflow - Make the Erasure Fulfilled ...) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 22 Jun 2018 20:30:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44101#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44101#comment:5/1529699400613695</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43738 (Make the personal data Export/Delete functionality available in ...) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 22 Jun 2018 20:28:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43738#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43738#comment:23/1529699331047275</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43967 (Admin emails after email confirmation don't work for data privacy requests) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 22 Jun 2018 20:28:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43967#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43967#comment:35/1529699310306564</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44001 (oEmbed two click / local emoji scripts) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 22 Jun 2018 20:27:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44001#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44001#comment:9/1529699254163029</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44373 (Add a privacy setting to disable comment cookie consent) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 22 Jun 2018 20:26:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44373#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44373#comment:1/1529699176510698</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44222 (Add Archive state to data erasure requests) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 22 Jun 2018 20:25:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44222#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44222#comment:3/1529699118110476</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44052 (Missing parameter type for `login_header()`) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 22 Jun 2018 20:23:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44052#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44052#comment:10/1529698995318116</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
None of the patches so far seem like a complete solution. The two main items here we should change to fix the original described problem:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The default for &lt;code&gt;$wp_error&lt;/code&gt; should be changed to &lt;code&gt;null&lt;/code&gt; to properly reflect the functions documentation. The &lt;code&gt;@param&lt;/code&gt; tag description should also be changed to "Optional. The error to pass. Default is a new empty error."
&lt;/li&gt;&lt;li&gt;The &lt;code&gt;if ( empty( $wp_error ) )&lt;/code&gt; conditional should be changed to check &lt;code&gt;! is_wp_error( $wp_error )&lt;/code&gt; to ensure any passed value other than an instance of &lt;code&gt;WP_Error&lt;/code&gt; is turned into one.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44440 (Case sensitive/insensitive bug) created</title>
      
        <dc:creator>dingdang</dc:creator>

      <pubDate>Fri, 22 Jun 2018 20:21:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44440</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44440/1529698902539471</guid>
      <description>&lt;p&gt;
This has been discovered while migrating a site from a Windows server to Linux server. The key to the bug is to have a table prefix with capital letters, for example pReFiX.
On the Windows server (however unknown database server/version) this end in LOWER CASE table prefixes while at the same time several table cells still keep the UPPER CASE version of the value "pReFiX":
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;one - in table "prefix_options" called "pReFiX_user_roles"
&lt;/li&gt;&lt;li&gt;several - in table "prefix_usermeta" like "pReFiX_capabilities", "pReFiX_user_level" etc
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
In wp-config.php the prefix is lowercase.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;This somehow works on the Windows server
&lt;/li&gt;&lt;li&gt;When such a site is migrated to a Linux server, a user can log in but then because of the credentials mismatch it loses its role and access is forbidden.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
To fix this one must manually replace all occurrences of UPPERCASE prefix to LOWERCASE.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44181 (The input field id username_or_email_to_export should be something ...) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 22 Jun 2018 20:11:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44181#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44181#comment:1/1529698267430103</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43910 (Add actions and filters so plugins can easily extend export/erasure ...) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 22 Jun 2018 20:08:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43910#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43910#comment:11/1529698131989828</guid>
      <description>&lt;p&gt;
Adding this here so I don't forget. Actions could be added to &lt;code&gt;_wp_privacy_completed_request()&lt;/code&gt; for before and after data requests being marked completed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44038 (Change personal data export path stored in request meta to relative paths) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 22 Jun 2018 20:05:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44038#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44038#comment:5/1529697943264238</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>44044.diff attached to Ticket #44044</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 22 Jun 2018 20:04:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44044/44044.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44044/44044.diff/1529697869062815</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44044 ($allowed_tags and $allowed_protocols  in ...) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 22 Jun 2018 20:04:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44044#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44044#comment:7/1529697841490931</guid>
      <description>&lt;p&gt;
@TZ Media good catch on this. I am wondering if massaging this to use &lt;code&gt;wp_kses_allowed_html()&lt;/code&gt; and &lt;code&gt;wp_allowed_protocols()&lt;/code&gt; is a better approach than introducing two new filters.
&lt;/p&gt;
&lt;p&gt;
I think the the &lt;code&gt;$allowedtags&lt;/code&gt; list in &lt;code&gt;wp_kses_allowed_html()&lt;/code&gt; is a pretty basic list we may be able to utilize. Allowing basic formatting tags could potentially open the door for plugins to style the export files, and these tags could indicate important structural aspects of the data (&lt;code&gt;acronym&lt;/code&gt;, &lt;code&gt;cite&lt;/code&gt;, or &lt;code&gt;abbr&lt;/code&gt;, for example) and may be better left in the export.
&lt;/p&gt;
&lt;p&gt;
Incoming patch with this approach for thoughts and testing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44438 (Prevent Admin Bar Items From Wrapping if There's More Items Than the ...) updated</title>
      
        <dc:creator>joyously</dc:creator>

      <pubDate>Fri, 22 Jun 2018 19:37:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44438#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44438#comment:1/1529696221198548</guid>
      <description>&lt;p&gt;
It's not exactly usable if you don't know what those items are.
&lt;/p&gt;
&lt;p&gt;
I agree that it's not very usable the other way either.
&lt;/p&gt;
&lt;p&gt;
The problem is that the admin bar should be for admin items, but plugins put other stuff in there. That's why themes (in the .org repo) are not allowed to affect the admin bar. Plugins should have some restrictions also.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44356 (Privacy settings page is listing non published pages) closed</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 22 Jun 2018 19:26:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44356#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44356#comment:8/1529695560758369</guid>
      <description>worksforme: &lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44356#comment:6" title="Comment 6"&gt;f2cmb&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Maybe something that can throw an alert to the user, based on the status page or an option, could help webmasters to avoid sending an email with no link ?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That is the goal in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/44320" title="#44320: enhancement: Inform users when their site's privacy policy is not publicly visible (new)"&gt;#44320&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I am still unable to reproduce the issue that you are describing. I am going to close this out as &lt;code&gt;worksforme&lt;/code&gt;. If someone else is able to reproduce this we can reopen it.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #44096 (REST API: Taxonomy and term endpoints should use correct permission checks) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Fri, 22 Jun 2018 19:25:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44096#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44096#comment:2/1529695558902573</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44439 (TinyMCE font and size select drop downs do not populate with default ...) created</title>
      
        <dc:creator>petersykim</dc:creator>

      <pubDate>Fri, 22 Jun 2018 19:25:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44439</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44439/1529695517841748</guid>
      <description>&lt;p&gt;
TinyMCE font and size select drop downs do not populate with default font family and size when altered with editor-style.css.  Even when I choose the default font family and size, it does not stay in the drop down.  The only way to make the selection stay is to first choose alternate font family and size, and then select the defaults again.
&lt;/p&gt;
&lt;p&gt;
This bug was not present in 4.9.5 (I tested it on multiple sites to be sure).  It seems to be a new bug introduced with 4.9.6.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44193 (Export Data request "Action Confirmed" email gets trimmed in gmail) closed</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 22 Jun 2018 19:16:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44193#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44193#comment:4/1529694962814929</guid>
      <description>wontfix: &lt;p&gt;
I don't think there is much we can do here. I just did some tests, and it only seems to happen when the emails are grouped (when there is more than one email with the same subject).
&lt;/p&gt;
&lt;p&gt;
The only scenario that seems at risk of seeing this behavior is an administrator as multiple users confirm requests. Users receiving multiple confirmation requests or deletion requests will be rare. If this proves more common, we can reopen and investigate.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Patch for admin-bar.css attached to Ticket #44438</title>
      
        <dc:creator>KZeni</dc:creator>

      <pubDate>Fri, 22 Jun 2018 18:04:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44438/Patch%20for%20admin-bar.css</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44438/Patch%20for%20admin-bar.css/1529690679536376</guid>
      <description>&lt;p&gt;
Simply what needs to be added to wp-includes/css/admin-bar.css and then also included in the resulting admin-bar.min.css (probably before the first @media query in the CSS)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44438 (Prevent Admin Bar Items From Wrapping if There's More Items Than the ...) created</title>
      
        <dc:creator>KZeni</dc:creator>

      <pubDate>Fri, 22 Jun 2018 18:03:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44438</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44438/1529690585316455</guid>
      <description>&lt;p&gt;
I have a few sites where the number of plugins, etc. being used on the site has lead to the admin toolbar on a desktop browser wrapping to a second line. This then makes it so the drop down menu for the first row of items can't be accessed since the user then has the hover be hijacked by the second row item which is overlaid on top of the resulting drop down. This seems like a rather serious usability bug that should be addressed.
&lt;/p&gt;
&lt;p&gt;
I have a proposed patch which would make the desktop size of the admin bar use flex layout in conjunction with overflow &amp;amp; text-overflow to make it so this problem isn't encountered. Meanwhile, the tablet &amp;amp; mobile sizes for the admin bar are unaffected due to the @media query being used to isolate this to 782px or wider browsers).
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;strong&gt;Screenshot of before (current WordPress behavior):&lt;/strong&gt; &lt;a class="ext-link" href="https://cloudup.com/cXkSHQN1UbX"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/cXkSHQN1UbX&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;Notice that moving the mouse down on the My Sites drop down can be intercepted by the Forms menu &amp;amp; the same can be said for the Performance menu being intercepted by the secondary menu items; this becomes more of an issue with narrower browsers &amp;amp; with more items in the admin bar.)
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Screenshot after (using the exact CSS I'm proposing here):&lt;/strong&gt; &lt;a class="ext-link" href="https://cloudup.com/cEO--F1sMsC"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/cEO--F1sMsC&lt;/a&gt;
&lt;ul&gt;&lt;li&gt;Everything is accessible, nothing is wrapping, and the icons are still visible where the full text cannot be shown; was better than before visually &amp;amp; in terms of usability.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44223 (Add privacy_url to get_bloginfo()) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 22 Jun 2018 18:02:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44223#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44223#comment:4/1529690559584057</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@fixw welcome to Trac!
&lt;/p&gt;
&lt;p&gt;
Following up on @swissspidy's comment above, do you have a reasoning you can detail?
&lt;/p&gt;
&lt;p&gt;
While there are several values for &lt;code&gt;get_bloginfo()&lt;/code&gt; that just return a URL from a dedicated function (&lt;code&gt;pingback_url&lt;/code&gt;, &lt;code&gt;stylesheet_url&lt;/code&gt;, &lt;code&gt;stylesheet_directory&lt;/code&gt;, to name a few), no new values have been introduced to &lt;code&gt;get_bloginfo()&lt;/code&gt; in over 11 years when &lt;code&gt;comments_atom_url&lt;/code&gt; was introduced (&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/4928" title="Atom comments feed. First pass.  Props kurtmckee and rob1n.  fixes #1785"&gt;r4928&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
I also vote to close this out in favor of using &lt;code&gt;get_privacy_policy_url()&lt;/code&gt; directly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44114 (GDPR - Provide upload mechanism for admins to supplement the data ...) updated</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Fri, 22 Jun 2018 17:51:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44114#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44114#comment:9/1529689882830714</guid>
      <description>&lt;p&gt;
Sounds good thanks @desrosj
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44114 (GDPR - Provide upload mechanism for admins to supplement the data ...) closed</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 22 Jun 2018 17:42:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44114#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44114#comment:8/1529689348948637</guid>
      <description>wontfix: &lt;p&gt;
The consensus is plugin land for this right now. If things change, we can reopen and re-evaluate.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #44043 (Framework for logging/retrieving a users consent state) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 22 Jun 2018 17:41:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44043#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44043#comment:36/1529689284593613</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44012 (Store the agreed-to-privacy-policy date/timestamp to help prove GDPR ...) closed</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 22 Jun 2018 17:39:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44012#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44012#comment:12/1529689178391882</guid>
      <description>invalid: &lt;p&gt;
Closing this out based on the feedback above. Consent is not required for a privacy policy because it is not a contract.
&lt;/p&gt;
&lt;p&gt;
@johnstonphilip moving forward, I recommend following these two tickets for the consent logging and opt-in concepts: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/44043" title="#44043: enhancement: Framework for logging/retrieving a users consent state (new)"&gt;#44043&lt;/a&gt;, &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/43797" title="#43797: enhancement: Logging for GDPR privacy/security (assigned)"&gt;#43797&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #44425 (Add WP_CACHE_KEY_SALT to WordPress.org secret-key service) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Fri, 22 Jun 2018 17:29:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44425#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44425#comment:2/1529688559414912</guid>
      <description>&lt;p&gt;
WordPress code does not contain "WP_CACHE_KEY_SALT" anywhere in it. Is this for a plugin or something? Seems like the plugin should generate the salt in this case.
&lt;/p&gt;
&lt;p&gt;
Additionally, the WordPress.org API isn't generally used to generate these anymore, core generates these values itself on installation. The salt API still exists as a fallback, but hopefully the random-compat library is now considered random enough to not rely on external sources of entropy.
&lt;/p&gt;
&lt;p&gt;
Also, if we were to modify the API, then we probably would want to add it to a 1.2 endpoint, not the existing 1.1 one. Just so we're not sending out values that are not actually needed.
&lt;/p&gt;
&lt;p&gt;
So, unless there's a really good reason behind this that I don't know about, I'm guessing this is a wontfix.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44425 (Add WP_CACHE_KEY_SALT to WordPress.org secret-key service) updated</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Fri, 22 Jun 2018 17:21:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44425#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44425#comment:1/1529688066796737</guid>
      <description>&lt;p&gt;
I cross-posted this to a new Meta ticket at &lt;a class="ext-link" href="https://meta.trac.wordpress.org/ticket/3678"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://meta.trac.wordpress.org/ticket/3678&lt;/a&gt; for the API changes.
&lt;/p&gt;
&lt;p&gt;
On the Core side, shall we add &lt;code&gt;WP_CACHE_KEY_SALT&lt;/code&gt; to &lt;code&gt;wp-config-sample.php&lt;/code&gt;, &lt;code&gt;wp-admin/setup-config.php&lt;/code&gt;, &lt;code&gt;wp-admin/maint/repair.php&lt;/code&gt;, etc?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44429 (WP-CLI incompatibility with wp_redirect( https://... )) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Fri, 22 Jun 2018 16:44:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44429#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44429#comment:9/1529685853593227</guid>
      <description>&lt;p&gt;
Also, I'm not sure whether or not it matters if the HTTP scheme is &lt;code&gt;https&lt;/code&gt; or &lt;code&gt;http&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44429-generic-cli.diff attached to Ticket #44429</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Fri, 22 Jun 2018 16:32:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44429/44429-generic-cli.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44429/44429-generic-cli.diff/1529685178491167</guid>
      <description>&lt;p&gt;
change test for generic test for CLI
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44139 (i18n: "About" disambiguation) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 22 Jun 2018 15:49:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44139#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44139#comment:13/1529682565374176</guid>
      <description>&lt;p&gt;
@desrosj FYI That patch will still result in 1 string, just with two translator conments. It would still need a context using _x()
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44429 (WP-CLI incompatibility with wp_redirect( https://... )) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Fri, 22 Jun 2018 15:42:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44429#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44429#comment:8/1529682175276276</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44429#comment:7" title="Comment 7"&gt;schlessera&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@afragen I'd say it is actually an issue in the plugin that causes the redirect. Basically, the plugin does a "web-request-only" operation when it is not actually dealing with a web request.
&lt;/p&gt;
&lt;p&gt;
That being said, there's a general assumption with WordPress that the code is only ever run in a web server context, so it is an easy trap for plugin developers to fall into... which means it might make sense to fix it from within Core.
&lt;/p&gt;
&lt;p&gt;
However, if this is to be fixed in Core, I would suggest fixing it in a more general way by checking for the &lt;code&gt;cli&lt;/code&gt; SAPI, not for WP-CLI specifically.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I can create another patch that does this check instead.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I have to admit that I ignore what the possible combinations of use cases vs environments are, though, so I'm a bit worried we will just break something else in the process.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
And that’s precisely my problem too. I can’t really see all the far reaching effects this might have. On the surface it would seem to be straightforward as it would simply skip the function if the user is using a CLI.
&lt;/p&gt;
&lt;p&gt;
Is there ever a use case for a redirect when using the CLI?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44429 (WP-CLI incompatibility with wp_redirect( https://... )) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Fri, 22 Jun 2018 15:36:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44429#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44429#comment:7/1529681781890118</guid>
      <description>&lt;p&gt;
@afragen I'd say it is actually an issue in the plugin that causes the redirect. Basically, the plugin does a "web-request-only" operation when it is not actually dealing with a web request.
&lt;/p&gt;
&lt;p&gt;
That being said, there's a general assumption with WordPress that the code is only ever run in a web server context, so it is an easy trap for plugin developers to fall into... which means it might make sense to fix it from within Core.
&lt;/p&gt;
&lt;p&gt;
However, if this is to be fixed in Core, I would suggest fixing it in a more general way by checking for the &lt;code&gt;cli&lt;/code&gt; SAPI, not for WP-CLI specifically.
&lt;/p&gt;
&lt;p&gt;
I have to admit that I ignore what the possible combinations of use cases vs environments are, though, so I'm a bit worried we will just break something else in the process.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40969 (RFE: get_template_part() to return something or warn when nothing found) updated</title>
      
        <dc:creator>tferry</dc:creator>

      <pubDate>Fri, 22 Jun 2018 15:30:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40969#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40969#comment:5/1529681443468287</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44429 (WP-CLI incompatibility with wp_redirect( https://... )) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Fri, 22 Jun 2018 15:30:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44429#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44429#comment:6/1529681422685364</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The question arises, is this an issue in WP-CLI or in core? I don’t have a deep enough understanding of WP-CLI to be able to make that determination.
&lt;/p&gt;
&lt;p&gt;
Any thoughts @schlessera ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44188 (Error in the deployed update GDPR) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 22 Jun 2018 15:10:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44188#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44188#comment:8/1529680251748794</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>password on mobile - overlap with eye.png attached to Ticket #42888</title>
      
        <dc:creator>boemedia</dc:creator>

      <pubDate>Fri, 22 Jun 2018 15:05:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42888/password%20on%20mobile%20-%20overlap%20with%20eye.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42888/password%20on%20mobile%20-%20overlap%20with%20eye.png/1529679906052093</guid>
      <description>&lt;p&gt;
On mobile, password and eye-icon overlap
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>longer password not visible in field.png attached to Ticket #42888</title>
      
        <dc:creator>boemedia</dc:creator>

      <pubDate>Fri, 22 Jun 2018 15:04:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42888/longer%20password%20not%20visible%20in%20field.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42888/longer%20password%20not%20visible%20in%20field.png/1529679878536127</guid>
      <description>&lt;p&gt;
Long passwords are partly hidden due to small field, large font and 'eye' taking some space
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42888 (Add a "Show" button next to password fields on mobile) updated</title>
      
        <dc:creator>boemedia</dc:creator>

      <pubDate>Fri, 22 Jun 2018 15:03:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42888#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42888#comment:22/1529679780977917</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
With the help of @adamsilverstein (thanks a lot!), I installed a clean local dev environment and tested the patch again. It now works fine, and I think it would be a great improvement for usability.
&lt;/p&gt;
&lt;p&gt;
Two things to take in consideration:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;with super long passwords (that seem to be trendy these days ;)), the box is not showing the full length of characters. The font size is rather large compared to the field size. Do we need to restrict the login and password box to this size, or could it be slightly bigger? That, combined with a smaller font size maybe?
&lt;/li&gt;&lt;li&gt;on mobile view, the 'eye' overlaps with the password field. Either give the 'eye' a white background, but ideally, here a bigger field size would be better too.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
See my screenshots for clarification.
&lt;/p&gt;
&lt;p&gt;
Additonial: with other languages, show/hide may be longer words and will take up even more space.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44341 (Replace  _deprecated_function( 'add_filter' ) with ...) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 22 Jun 2018 14:55:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44341#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44341#comment:5/1529679320526472</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@ianbelanger &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44341/44341.3.diff" title="Attachment '44341.3.diff' in Ticket #44341"&gt;44341.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44341/44341.3.diff" title="Download"&gt;​&lt;/a&gt; looks good. A few minor changes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Instead of putting the inline documentation before the &lt;code&gt;if()&lt;/code&gt; statement, can there be a docblock above each &lt;code&gt;apply_filter_deprecated()&lt;/code&gt; call? Putting it before each filter call would make it harder to miss.
&lt;/li&gt;&lt;li&gt;There should be a &lt;code&gt;@param string $content&lt;/code&gt; line in the docblocks describing the parameter.
&lt;/li&gt;&lt;li&gt;The empy &lt;code&gt;* &lt;/code&gt; line after &lt;code&gt;@deprecated&lt;/code&gt; should not be there.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44379 (GDPR filters should provide either $request or $request_id) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 22 Jun 2018 14:47:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44379#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44379#comment:11/1529678842336022</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44133 (Should the Data Export indicate when we have no information on the user) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 22 Jun 2018 14:46:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44133#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44133#comment:16/1529678795634709</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44133/44133.5.diff" title="Attachment '44133.5.diff' in Ticket #44133"&gt;44133.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44133/44133.5.diff" title="Download"&gt;​&lt;/a&gt; is a refresh with the following changes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Only run the &lt;code&gt;wp_privacy_personal_data_email_content&lt;/code&gt; filter on the email content sent with a successful export file link.
&lt;/li&gt;&lt;li&gt;Introduce the &lt;code&gt;wp_privacy_personal_data_email_content_no_data&lt;/code&gt; filter for filtering the email text sent when no data is found.
&lt;/li&gt;&lt;li&gt;Only fire the &lt;code&gt;wp_privacy_personal_data_export_file&lt;/code&gt; action when data is found for exporting.
&lt;/li&gt;&lt;li&gt;Add the &lt;code&gt;$request&lt;/code&gt; variable as a parameter for the &lt;code&gt;wp_privacy_personal_data_export_file&lt;/code&gt; action.
&lt;/li&gt;&lt;li&gt;Introduce the &lt;code&gt;wp_privacy_personal_data_export_no_data&lt;/code&gt; action that fires when no data is found for the request. This will allow plugins to perform custom code when a request data has been gathered and determined to be empty.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>44133.5.diff attached to Ticket #44133</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 22 Jun 2018 14:40:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44133/44133.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44133/44133.5.diff/1529678430028198</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40364 (Improve site creation in multisite) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 22 Jun 2018 14:05:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40364#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40364#comment:48/1529676308621318</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/40364/40364.10.diff" title="Attachment '40364.10.diff' in Ticket #40364"&gt;40364.10.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/40364/40364.10.diff" title="Download"&gt;​&lt;/a&gt; does the following:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Introduce additional unit tests to test the changes comprehensively. In particular:
&lt;ul&gt;&lt;li&gt;Test normalizing site data works as expected.
&lt;/li&gt;&lt;li&gt;Test validating site data works as expected.
&lt;/li&gt;&lt;li&gt;Ensure that site status hooks are executed as expected, both on insert and update.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;In &lt;code&gt;wp_validate_site_data()&lt;/code&gt;, ensure a network ID is passed. For &lt;code&gt;wp_insert_site()&lt;/code&gt; and &lt;code&gt;wp_update_site()&lt;/code&gt; this will never fail, as the network ID will be auto-populated if not given, but since the function stands on its own, it should be checked.
&lt;/li&gt;&lt;li&gt;Fix a bug in &lt;code&gt;wp_validate_site_data()&lt;/code&gt; that prevents the &lt;code&gt;domain_exists()&lt;/code&gt; check if one of the required values is missing (that will already cause a failure anyway).
&lt;/li&gt;&lt;li&gt;Reinstate the &lt;code&gt;domain_exists()&lt;/code&gt; check into &lt;code&gt;wpmu_create_blog()&lt;/code&gt;. This allows us to change the error code for the same issue in &lt;code&gt;wp_validate_site_data()&lt;/code&gt; to a more appropriate &lt;code&gt;site_taken&lt;/code&gt; (currently &lt;code&gt;blog_taken&lt;/code&gt;), and also reduces the chance for unexpected issues by bailing as early as it currently happens in such cases.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I think this is ready to be committed. @jeremyfelt @spacedmonkey If you could give it a final review, that would be great!
&lt;/p&gt;
&lt;p&gt;
Afterwards, I'll focus on &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/41333" title="#41333: enhancement: Implement `wp_initialize_site()` and `wp_uninitialize_site()` (reopened)"&gt;#41333&lt;/a&gt; and &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/42252" title="#42252: enhancement: Use more granular caching for common queries in `WP_Site_Query` (assigned)"&gt;#42252&lt;/a&gt;, which should also make it into 5.0.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44133 (Should the Data Export indicate when we have no information on the user) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 22 Jun 2018 14:02:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44133#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44133#comment:15/1529676166646208</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44133 (Should the Data Export indicate when we have no information on the user) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 22 Jun 2018 14:02:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44133#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44133#comment:14/1529676148078885</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch is no longer applying cleanly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>40364.10.diff attached to Ticket #40364</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 22 Jun 2018 14:02:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40364/40364.10.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40364/40364.10.diff/1529676133899904</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44139 (i18n: "About" disambiguation) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 22 Jun 2018 13:58:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44139#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44139#comment:12/1529675897121271</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>44139.2.diff attached to Ticket #44139</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 22 Jun 2018 13:57:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44139/44139.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44139/44139.2.diff/1529675853203471</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44321 (REST API: Expose revision count and last revision ID on Post response) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Fri, 22 Jun 2018 13:33:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44321#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44321#comment:9/1529674395910447</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In &lt;code&gt;44321.2.diff&lt;/code&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Uses &lt;code&gt;'fields' =&amp;gt; 'ids'&lt;/code&gt; when fetching revisions to improve performance.
&lt;/li&gt;&lt;li&gt;Includes &lt;code&gt;id&lt;/code&gt; attribute in &lt;code&gt;predecessor&lt;/code&gt; to avoid needing to parse a URL.
&lt;/li&gt;&lt;li&gt;Adds unit tests.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>44321.2.diff attached to Ticket #44321</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Fri, 22 Jun 2018 13:30:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44321/44321.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44321/44321.2.diff/1529674228771345</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44321 (REST API: Expose revision count and last revision ID on Post response) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Fri, 22 Jun 2018 13:18:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44321#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44321#comment:8/1529673533310103</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
We should also only expose this data when &lt;code&gt;context=edit&lt;/code&gt; (which is a deficiency in the current Gutenberg implementation).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ah, this isn't possible because &lt;code&gt;$request&lt;/code&gt; isn't passed through to &lt;code&gt;prepare_links()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I suppose it's a non-issue to include the revision id in public data. In theory, this could be deduced by iterating ids on the revisions endpoint and looking at &lt;code&gt;401&lt;/code&gt; vs &lt;code&gt;404&lt;/code&gt; response headers. However, the revision count isn't public data. I don't see any issues with disclosing it, but something worth noting at the least.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24730 (Introduce a timezone-retrieval method) updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Fri, 22 Jun 2018 12:52:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24730#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24730#comment:7/1529671939713038</guid>
      <description>&lt;p&gt;
Hm hm, I thought about going through DateTime() before but wrongly assumed that would fail on 5.2. The approach does seem to work on 5.2.17 from a quick test!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24730 (Introduce a timezone-retrieval method) updated</title>
      
        <dc:creator>remcotolsma</dc:creator>

      <pubDate>Fri, 22 Jun 2018 12:33:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24730#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24730#comment:6/1529670805847666</guid>
      <description>&lt;p&gt;
Maybe a solution to support PHP &amp;gt; 5.2 &amp;lt; 5.5.10:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;wp_get_timezone&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$timezone_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_option&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'timezone_string'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$timezone_string&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;DateTimeZone&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$timezone_string&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nv"&gt;$gmt_offset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_option&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'gmt_offset'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$hours&lt;/span&gt;      &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;$gmt_offset&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;$minutes&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$gmt_offset&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;$gmt_offset&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$offset&lt;/span&gt;     &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'%+03d:%02d'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$hours&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$minutes&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;version_compare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;PHP_VERSION&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'5.5.10'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;DateTime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$offset&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$date&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;getTimezone&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;DateTimeZone&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$offset&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>44437.diff attached to Ticket #44437</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Fri, 22 Jun 2018 12:32:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44437/44437.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44437/44437.diff/1529670754027683</guid>
      <description>&lt;p&gt;
Proposed patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44437 (Invocation parameter types are not compatible with declared) created</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Fri, 22 Jun 2018 12:30:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44437</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44437/1529670624351224</guid>
      <description>&lt;p&gt;
In &lt;code&gt;class-wp-rest-post-types-controller.php&lt;/code&gt; the type of parameter &lt;code&gt;$post_type&lt;/code&gt; in function &lt;code&gt;prepare_item_for_response&lt;/code&gt; is declared as &lt;code&gt;stdClass&lt;/code&gt;.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="nx"&gt;param&lt;/span&gt; &lt;span class="k"&gt;stdClass&lt;/span&gt; &lt;span class="nv"&gt;$post_type&lt;/span&gt; &lt;span class="nx"&gt;Post&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;prepare_item_for_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$post_type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The function has been called twice in the class file:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;get_item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nv"&gt;$obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_post_type_object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'type'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="o"&gt;...&lt;/span&gt;
   &lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;prepare_item_for_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
and
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;get_items&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="o"&gt;...&lt;/span&gt;
   &lt;span class="k"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;get_post_types&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="s1"&gt;'object'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$obj&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="o"&gt;...&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="nv"&gt;$post_type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;prepare_item_for_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Since &lt;code&gt;$obj&lt;/code&gt; is a known type, i.e. &lt;code&gt;WP_Post_Type&lt;/code&gt; can we declare the parameter &lt;code&gt;$post_type&lt;/code&gt; type as &lt;code&gt;WP_Post_Type&lt;/code&gt; instead of &lt;code&gt;stdClass&lt;/code&gt; ?
&lt;/p&gt;
&lt;p&gt;
Also, the object of this class is used in &lt;code&gt;wp-includes/rest-api.php&lt;/code&gt; for registering route but the function in question is never invoked in the system separately.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #40969 (RFE: get_template_part() to return something or warn when nothing found) updated</title>
      
        <dc:creator>tferry</dc:creator>

      <pubDate>Fri, 22 Jun 2018 10:41:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40969#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40969#comment:4/1529664081773309</guid>
      <description>&lt;p&gt;
I agree with @sphakka - I've also run into this issue and it would be useful for &lt;code&gt;get_template_part&lt;/code&gt; not to fail silently, so we have the option to check the return value.
&lt;/p&gt;
&lt;p&gt;
I've attached a patch to pass on the return value from &lt;code&gt;locate_template&lt;/code&gt;, as suggested.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>40969.diff attached to Ticket #40969</title>
      
        <dc:creator>tferry</dc:creator>

      <pubDate>Fri, 22 Jun 2018 10:38:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40969/40969.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40969/40969.diff/1529663901165973</guid>
      <description>&lt;p&gt;
updates get_template_part to return the value of locate_template
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44436 (Incompatibility of WordPress basic coding standards.) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Fri, 22 Jun 2018 10:30:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44436#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44436#comment:2/1529663453978953</guid>
      <description>&lt;p&gt;
Thank you for letting me know and close the ticket!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44436 (Incompatibility of WordPress basic coding standards.) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 22 Jun 2018 10:21:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44436#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44436#comment:1/1529662897925143</guid>
      <description>invalid: &lt;p&gt;
Hello @subrataemfluence, thanks for your patch.
&lt;/p&gt;
&lt;p&gt;
random_compat is a third-party library (&lt;a class="ext-link" href="https://github.com/paragonie/random_compat"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/paragonie/random_compat&lt;/a&gt;) thus we do not change the files. It's also excluded in the PHPCS ruleset, see &lt;a href="https://core.trac.wordpress.org/browser/trunk/phpcs.xml.dist?rev=43348&amp;amp;marks=48#L31"&gt;https://core.trac.wordpress.org/browser/trunk/phpcs.xml.dist?rev=43348&amp;amp;marks=48#L31&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>44436.diff attached to Ticket #44436</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Fri, 22 Jun 2018 10:15:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44436/44436.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44436/44436.diff/1529662541573808</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44436 (Incompatibility of WordPress basic coding standards.) created</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Fri, 22 Jun 2018 10:11:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44436</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44436/1529662311323568</guid>
      <description>&lt;p&gt;
File name: &lt;code&gt;src/wp-includes/random_compat/byte_safe_strings.php&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Above file is heavily missing basic WordPress coding standards rules.
Proposed patch added.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44426 (Privacy policy for a plugin isn't saved when a policy page isn't created) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 22 Jun 2018 10:10:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44426#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44426#comment:1/1529662227150582</guid>
      <description>worksforme: &lt;p&gt;
Hi @PerS, thanks for the ticket.
&lt;/p&gt;
&lt;p&gt;
Yes, this is intended. The suggested policy content added by plugins is cached so we can detect when it changes and alert the site admins. Then they can re-visit the privacy policy guide and update their policy.
&lt;/p&gt;
&lt;p&gt;
If a policy page is not created (or if it is "externally managed" as on some multisite installs) there is no point in tracking these changes for each individual site. The first time an admin goes to the privacy policy guide they will see the latest content from plugins.
&lt;/p&gt;
&lt;p&gt;
When a site owner uses an external policy and/or doesn't want to use the built-in functionality, they would have to either create a draft page (so they can access the privacy policy guide) or find other means to maintain their policy.
&lt;/p&gt;
&lt;p&gt;
Closing as worksforme. Feel free to reopen if you come across some specific user case that is adversely affected by this.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #44435 (Add Action / Filter in Post Details page for Screen Meta Links) created</title>
      
        <dc:creator>mohdjafarcedcoss</dc:creator>

      <pubDate>Fri, 22 Jun 2018 09:58:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44435</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44435/1529661538266968</guid>
      <description>&lt;p&gt;
We can add action/filter in wordpress backend for Screen Meta Links so that using plugin we can add our own links with screen meta links.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44434 (oEmbed start pulling in iframes from any websites) updated</title>
      
        <dc:creator>drivdigital</dc:creator>

      <pubDate>Fri, 22 Jun 2018 09:55:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44434#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44434#comment:5/1529661345640746</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
You can write the url in the visual tab and have the oEmbed kick in with no way to remove it. Only if you decide you're creating a link and click the link button can you get around it.
&lt;/p&gt;
&lt;p&gt;
Also, this shouldn't be happing by default – it should be detecting it has oEmbed and asking &lt;strong&gt;'should this link show a preview'&lt;/strong&gt;, not just overwriting and embedding.
&lt;/p&gt;
&lt;p&gt;
I feel like it's perhaps a feature that is needs a setting in the MEDIA to control this. I don't believe it should be enabled by default with a plugin to disable it.
&lt;/p&gt;
&lt;p&gt;
— 
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44434#comment:4" title="Comment 4"&gt;TZ Media&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi @drivdigital
&lt;/p&gt;
&lt;p&gt;
I suggest that you don't simply paste the link into the plain text, but instead set it as a link via the editor. This way, there's no embed created, and the reader can click on the link to open the linked site directly, without having to copy the URL into a new browser window or so.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44434 (oEmbed start pulling in iframes from any websites) updated</title>
      
        <dc:creator>TZ Media</dc:creator>

      <pubDate>Fri, 22 Jun 2018 09:43:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44434#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44434#comment:4/1529660597030420</guid>
      <description>&lt;p&gt;
Hi @drivdigital
&lt;/p&gt;
&lt;p&gt;
I suggest that you don't simply paste the link into the plain text, but instead set it as a link via the editor. This way, there's no embed created, and the reader can click on the link to open the linked site directly, without having to copy the URL into a new browser window or so.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44434 (oEmbed start pulling in iframes from any websites) updated</title>
      
        <dc:creator>drivdigital</dc:creator>

      <pubDate>Fri, 22 Jun 2018 09:13:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44434#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44434#comment:3/1529658837148723</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44434 (oEmbed start pulling in iframes from any websites) updated</title>
      
        <dc:creator>drivdigital</dc:creator>

      <pubDate>Fri, 22 Jun 2018 08:52:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44434#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44434#comment:2/1529657568967984</guid>
      <description>&lt;p&gt;
To circumvent the oEmbeds, i've just had to go through this page &amp;amp; change the markup to not include any &lt;a class="ext-link" href="https://"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://&lt;/a&gt; in the visible text.
&lt;/p&gt;
&lt;p&gt;
Here is an example not on a client site for testing: &lt;a class="ext-link" href="https://drivdigital.no/cookies/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://drivdigital.no/cookies/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44434 (oEmbed start pulling in iframes from any websites) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 22 Jun 2018 08:46:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44434#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44434#comment:1/1529657173046508</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Which sites are being embedded and where does that happen? Can you please share the exact URL of a site where this happens? Or at least a screenshot?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
These are not websites on a list of the oEmbed providers form the codex, these are just regular websites.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Since version 4.4, WordPress has oEmbed discovery activated by default. WordPress itself is an oEmbed provider, too. This means you can easily embed posts from other WordPress sites in your blog.
&lt;/p&gt;
&lt;p&gt;
To disable this behaviour, you can install a plugin like &lt;a class="ext-link" href="https://wordpress.org/plugins/disable-embeds/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Disable Embeds&lt;/a&gt;. You'll still be able to embed YouTube videos and the like, but not other WordPress sites. Also, other WordPress sites won't be able to embed your site.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I've got a privacy policy page that is now flooded with oembeds
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't see anything on &lt;a class="ext-link" href="https://www.fjellrevenshop.no/personvernerklaering-fjellrevenshop-no/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.fjellrevenshop.no/personvernerklaering-fjellrevenshop-no/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44434 (oEmbed start pulling in iframes from any websites) created</title>
      
        <dc:creator>drivdigital</dc:creator>

      <pubDate>Fri, 22 Jun 2018 08:40:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44434</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44434/1529656810775540</guid>
      <description>&lt;p&gt;
I have a page of URLs on wordpress based websites.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://fjellrevenshop.no"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://fjellrevenshop.no&lt;/a&gt;
http:/drivdigital.no
&lt;/p&gt;
&lt;p&gt;
These are now showing an iframe of the site, overlapping the content. These are not websites on a list of the oEmbed providers form the codex, these are just regular websites.
&lt;/p&gt;
&lt;p&gt;
Why are sites being pulled into the content and embedded? Why is there no ability to disable Links?
&lt;/p&gt;
&lt;p&gt;
This feature makes sense when it was just youtube or twitter, but all link now pull in anything seems very strange.
&lt;/p&gt;
&lt;p&gt;
I've got a privacy policy page that is now flooded with oembeds
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44383 (Deprecate the media_buttons_context filter with apply_filters_deprecated()) updated</title>
      
        <dc:creator>zsiderov</dc:creator>

      <pubDate>Fri, 22 Jun 2018 08:35:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44383#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44383#comment:12/1529656549141135</guid>
      <description>&lt;p&gt;
Does any of you know if I want to contribute to JavaScript/React where I can find more information about it? Will I filter the bug tracker or?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44383 (Deprecate the media_buttons_context filter with apply_filters_deprecated()) updated</title>
      
        <dc:creator>zsiderov</dc:creator>

      <pubDate>Fri, 22 Jun 2018 08:16:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44383#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44383#comment:11/1529655401686877</guid>
      <description>&lt;p&gt;
Sweet, thx for the tips @birgire. I will have a look at the outputs and share them back 😊
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44433 (Error in code comment for delete_metadata()) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Fri, 22 Jun 2018 07:55:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44433#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44433#comment:4/1529654145814295</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://meta.trac.wordpress.org//intertrac/ticket%3A3677" title="ticket:3677 in Making WordPress.org Trac"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;#meta3677&lt;/a&gt; was marked as a duplicate
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44433 (Error in code comment for delete_metadata()) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Fri, 22 Jun 2018 07:14:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44433#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44433#comment:3/1529651692382144</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44433 (Error in code comment for delete_metadata()) updated</title>
      
        <dc:creator>dilipbheda</dc:creator>

      <pubDate>Fri, 22 Jun 2018 06:53:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44433#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44433#comment:2/1529650417502303</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Updated patch for this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44433.patch attached to Ticket #44433</title>
      
        <dc:creator>dilipbheda</dc:creator>

      <pubDate>Fri, 22 Jun 2018 06:52:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44433/44433.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44433/44433.patch/1529650370419626</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43328 (Add support for Web App Manifests) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 22 Jun 2018 06:35:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43328#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43328#comment:7/1529649315374874</guid>
      <description>&lt;p&gt;
Initial PR which ports Jetpack's implementation with some iterations: &lt;a class="ext-link" href="https://github.com/xwp/pwa-wp/pull/13"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/pwa-wp/pull/13&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44433 (Error in code comment for delete_metadata()) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Fri, 22 Jun 2018 05:11:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44433#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44433#comment:1/1529644262966472</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looks like &lt;code&gt;null&lt;/code&gt; is missing the closing backtick here &lt;a href="https://core.trac.wordpress.org/browser/tags/4.9/src/wp-includes/meta.php#L299"&gt;https://core.trac.wordpress.org/browser/tags/4.9/src/wp-includes/meta.php#L299&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44433 (Error in code comment for delete_metadata()) created</title>
      
        <dc:creator>cliffpaulick</dc:creator>

      <pubDate>Fri, 22 Jun 2018 05:02:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44433</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44433/1529643760528656</guid>
      <description>&lt;p&gt;
Missing tick causes documentation error. Screenshot of &lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/delete_metadata/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/reference/functions/delete_metadata/&lt;/a&gt; at time of creating this ticket: &lt;a class="ext-link" href="https://cl.ly/3d3Y2x0s1W3a"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cl.ly/3d3Y2x0s1W3a&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44339 (Emoji: Update Twemoji to 11.0) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Fri, 22 Jun 2018 04:50:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44339#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44339#comment:19/1529643000654025</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44339#comment:18" title="Comment 18"&gt;kraftbj&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;code&gt;rm -rf node_nodules &amp;amp;&amp;amp; npm cache clear -force &amp;amp;&amp;amp; npm install&lt;/code&gt; didn't give me a &lt;code&gt;sha512&lt;/code&gt;. I haven't dug into it beyond that though.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Maybe also try deleting the &lt;code&gt;package-lock.json&lt;/code&gt; file, at the moment this issue seems &lt;em&gt;more like art than science&lt;/em&gt; :(
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44432 (Sometimes, an array is passed to the get_callback provided to ...) created</title>
      
        <dc:creator>salzano</dc:creator>

      <pubDate>Fri, 22 Jun 2018 04:41:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44432</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44432/1529642519869325</guid>
      <description>&lt;p&gt;
When using register_rest_field() to add fields to terms in the WordPress REST API, the $object sent to your get_callback function will be an array instead of an object like the documentation describes.
&lt;/p&gt;
&lt;p&gt;
An object will still be passed, sometimes, too. Here is an example of how I work around this problem:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	function add_api_term_fields() {
		//location-phone-hours
		register_rest_field( 'location', 'location-phone-hours', array(
			'get_callback'    =&amp;gt; array( $this, 'get_term_meta_via_rest' ),
			'update_callback' =&amp;gt; array( $this, 'set_term_meta_via_rest' ),
			'schema'          =&amp;gt; array(
				'description' =&amp;gt; __( 'An array of phone numbers and hours of operation for this location.', 'inventory-portal' ),
				'type'        =&amp;gt; 'string',
				'context'     =&amp;gt; array( 'view', 'edit' ),
			),
		) );
	}
	static function get_term_meta_via_rest( $term, $attr, $request, $object_type ) {
		$term_id = 0;
		if(  is_array( $term ) ) {
			$term_id = $term['id']
		} else {
			$term_id = $term-&amp;gt;term_id;
		}
		return maybe_serialize( get_term_meta( $term_id, $attr, true ) );
	}
&lt;/pre&gt;&lt;p&gt;
Why is this happening? See the definition of prepare_item_for_response() method on line 683 of wp-includes/rest-api/endpoints/class-wp-rest-terms-controller.php. The call to add_additional_fields_to_object() on line 725 is the method that passes an array to your get_callback.
&lt;/p&gt;
&lt;p&gt;
Perhaps this is an acceptable design. I believe the only reference to the data type of $object in the documentation is this comment &lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/register_rest_field/#comment-2260"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/reference/functions/register_rest_field/#comment-2260&lt;/a&gt;. It certainly feels like a bug.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44422 (Missing @return tag and wrong parameter reference in function/method ...) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Fri, 22 Jun 2018 03:36:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44422#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44422#comment:3/1529638568832043</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looks good, thanks @subrataemfluence
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44424 (PHPDoc comments and @return tags missing at many places) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Fri, 22 Jun 2018 03:34:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44424#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44424#comment:1/1529638498339200</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Screen Shot 2018-06-22 at 12.01.09 pm.png attached to Ticket #44431</title>
      
        <dc:creator>startsat60</dc:creator>

      <pubDate>Fri, 22 Jun 2018 02:40:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44431/Screen%20Shot%202018-06-22%20at%2012.01.09%20pm.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44431/Screen%20Shot%202018-06-22%20at%2012.01.09%20pm.png/1529635243662410</guid>
      <description>&lt;p&gt;
Paragraph style menu rapidly becomes unusable when entering medium/long posts
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Screen Shot 2018-06-22 at 11.40.58 am.png attached to Ticket #44431</title>
      
        <dc:creator>startsat60</dc:creator>

      <pubDate>Fri, 22 Jun 2018 02:39:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44431/Screen%20Shot%202018-06-22%20at%2011.40.58%20am.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44431/Screen%20Shot%202018-06-22%20at%2011.40.58%20am.png/1529635199592002</guid>
      <description>&lt;p&gt;
Paragraph style menu opening in incorrect location when scrolled a bit
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Screen Shot 2018-06-22 at 11.40.41 am.png attached to Ticket #44431</title>
      
        <dc:creator>startsat60</dc:creator>

      <pubDate>Fri, 22 Jun 2018 02:39:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44431/Screen%20Shot%202018-06-22%20at%2011.40.41%20am.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44431/Screen%20Shot%202018-06-22%20at%2011.40.41%20am.png/1529635167190404</guid>
      <description>&lt;p&gt;
Paragraph style menu opening in correct location when not scrolled
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Screen Shot 2018-06-22 at 11.37.26 am.png attached to Ticket #44431</title>
      
        <dc:creator>startsat60</dc:creator>

      <pubDate>Fri, 22 Jun 2018 02:38:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44431/Screen%20Shot%202018-06-22%20at%2011.37.26%20am.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44431/Screen%20Shot%202018-06-22%20at%2011.37.26%20am.png/1529635124003246</guid>
      <description>&lt;p&gt;
Remaining stuck when scroll down past the main content textarea
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Screen Shot 2018-06-22 at 11.36.59 am.png attached to Ticket #44431</title>
      
        <dc:creator>startsat60</dc:creator>

      <pubDate>Fri, 22 Jun 2018 02:38:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44431/Screen%20Shot%202018-06-22%20at%2011.36.59%20am.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44431/Screen%20Shot%202018-06-22%20at%2011.36.59%20am.png/1529635089344324</guid>
      <description>&lt;p&gt;
Remaining stuck when scrolling up to the page title field
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Screen Shot 2018-06-22 at 11.35.41 am.png attached to Ticket #44431</title>
      
        <dc:creator>startsat60</dc:creator>

      <pubDate>Fri, 22 Jun 2018 02:37:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44431/Screen%20Shot%202018-06-22%20at%2011.35.41%20am.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44431/Screen%20Shot%202018-06-22%20at%2011.35.41%20am.png/1529635064506647</guid>
      <description>&lt;p&gt;
Unsticking in random location
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Screen Shot 2018-06-22 at 11.35.28 am.png attached to Ticket #44431</title>
      
        <dc:creator>startsat60</dc:creator>

      <pubDate>Fri, 22 Jun 2018 02:37:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44431/Screen%20Shot%202018-06-22%20at%2011.35.28%20am.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44431/Screen%20Shot%202018-06-22%20at%2011.35.28%20am.png/1529635036780398</guid>
      <description>&lt;p&gt;
Sticking on scroll
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Screen Shot 2018-06-22 at 11.34.06 am.png attached to Ticket #44431</title>
      
        <dc:creator>startsat60</dc:creator>

      <pubDate>Fri, 22 Jun 2018 02:36:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44431/Screen%20Shot%202018-06-22%20at%2011.34.06%20am.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44431/Screen%20Shot%202018-06-22%20at%2011.34.06%20am.png/1529635018340933</guid>
      <description>&lt;p&gt;
Failing to stick on scroll
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Screen Shot 2018-06-22 at 11.33.42 am.png attached to Ticket #44431</title>
      
        <dc:creator>startsat60</dc:creator>

      <pubDate>Fri, 22 Jun 2018 02:36:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44431/Screen%20Shot%202018-06-22%20at%2011.33.42%20am.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44431/Screen%20Shot%202018-06-22%20at%2011.33.42%20am.png/1529634993475457</guid>
      <description>&lt;p&gt;
Initial page load
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44431 (Post editor toolbar: inconsistent and bugged sticky behaviour, and; ...) created</title>
      
        <dc:creator>startsat60</dc:creator>

      <pubDate>Fri, 22 Jun 2018 02:35:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44431</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44431/1529634947966852</guid>
      <description>&lt;p&gt;
The MCE editor toolbar exhibits inconsistent and incorrect sticky behaviour on scroll. There are three patterns I've observed:
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;&lt;strong&gt;1)&lt;/strong&gt; If you wait for more than a few seconds before scrolling, the editor toolbar will not stick, and you'll need to scroll up to make any changes on medium-long posts.&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;&lt;strong&gt;2)&lt;/strong&gt; If you scroll within approximately 1 sec of the toolbar appearing, it will stick to the top of the window, and will never unstick, causing it to cover the Title field, preventing it from being edited, and also when scrolling down past the main content textarea, it will remain stuck and will overlap subsequent fields as well.&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;&lt;strong&gt;3)&lt;/strong&gt; In the "goldilocks zone" between the above time periods, it's possible to have the toolbar stick when scrolling, then unstick, and it will remain in the location where it became unstuck, usually in the middle of the main content textarea.&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Initial page load&lt;/strong&gt;
&lt;img src="https://s.w.org/style/trac/common/attachment.png" alt="No image &amp;#34;etNrM5q&amp;#34; attached to Ticket #44431" crossorigin="anonymous" title="No image &amp;#34;etNrM5q&amp;#34; attached to Ticket #44431" /&gt;
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Along a similar vein, the paragraph style menu positioning is also incorrectly implemented. It appears that the logic to determine its position is:
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;&lt;strong&gt;1)&lt;/strong&gt; Take the Y page offset for the paragraph style menu button&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;&lt;strong&gt;2)&lt;/strong&gt; Apply this offset to the fixed menu as its top style property&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
This is only legitimate when the user does not scroll. As soon as the user scrolls, whether the toolbar sticks or not, the page offset of the menu button applied as the top offset of the menu will cause the menu to appear entirely disconnected from the button.
&lt;/p&gt;
&lt;p&gt;
If the toolbar is not stuck, then the menu will always at least still be visible, because it's not possible to click the menu button once it has been scrolled out of view, and its page offset will be small enough that the menu will still appear within the window.
&lt;/p&gt;
&lt;p&gt;
However, if the toolbar is not initially visible before scrolling, or if it sticks on scroll, then the menu will be placed outside of the viewable window, making it inaccessible.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
We have the following active plugins that interact with the post add/edit form: TinyMCE Advanced v4.7.11, Advanced Custom Fields Pro v5.5.10, and Gravity Forms v2.1.3.9. Deactivating any/all of these plugins had no discernible impact on the above behaviour.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44400 (Adjust `sandbox` attribute for Sutori embeds via oEmbed discovery) closed</title>
      
        <dc:creator>yoran</dc:creator>

      <pubDate>Fri, 22 Jun 2018 02:05:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44400#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44400#comment:4/1529633150101029</guid>
      <description>wontfix</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #44429 (WP-CLI incompatibility with wp_redirect( https://... )) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 21 Jun 2018 22:29:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44429#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44429#comment:5/1529620152988210</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by afragen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1529620151000356"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44429 (WP-CLI incompatibility with wp_redirect( https://... )) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Thu, 21 Jun 2018 22:22:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44429#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44429#comment:4/1529619723397420</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44429 (WP-CLI incompatibility with wp_redirect( https://... )) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Thu, 21 Jun 2018 22:06:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44429#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44429#comment:3/1529618791172486</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>44429.diff attached to Ticket #44429</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Thu, 21 Jun 2018 22:05:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44429/44429.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44429/44429.diff/1529618703586902</guid>
      <description>&lt;p&gt;
test for WP_CLI in wp_redirect() and exit early
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44429 (WP-CLI incompatibility with wp_redirect( https://... )) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Thu, 21 Jun 2018 22:04:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44429#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44429#comment:2/1529618654953827</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This issue has occurred in a number of plugins.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://wordpress.org/support/topic/_serverhttp_host-is-undefined-when-access-site-via-wp-cli/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/_serverhttp_host-is-undefined-when-access-site-via-wp-cli/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/johngodley/redirection/issues/222"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/johngodley/redirection/issues/222&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/SiteGround/sg-cachepress/issues/38"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/SiteGround/sg-cachepress/issues/38&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44428 (update_object_term_cache) updated</title>
      
        <dc:creator>sllimrovert</dc:creator>

      <pubDate>Thu, 21 Jun 2018 22:02:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44428#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44428#comment:4/1529618521597539</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44428 (update_object_term_cache) updated</title>
      
        <dc:creator>sllimrovert</dc:creator>

      <pubDate>Thu, 21 Jun 2018 22:01:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44428#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44428#comment:3/1529618489433035</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44428#comment:2" title="Comment 2"&gt;boonebgorges&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi @sllimrovert - Thanks for the ticket and for the test!
&lt;/p&gt;
&lt;p&gt;
Have a look at &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43049" title="Taxonomy: Ensure that invalid term objects are discarded in ..."&gt;[43049]&lt;/a&gt; &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42691" title="#42691: defect (bug): WP_Term_Query get_terms generates invalid sql queries (closed: fixed)"&gt;#42691&lt;/a&gt; - it's likely that this is what fixed the bug in trunk.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, that's likely what fixed it in trunk.  Will that be released on a 4.9.x release, or waiting until 5.0?
&lt;/p&gt;
&lt;p&gt;
No matter for me really, I used the &lt;code&gt;pre_get_posts&lt;/code&gt; filter to always set &lt;code&gt;$query-&amp;gt;query_vars['update_post_term_cache']&lt;/code&gt; to false for my use case.
&lt;/p&gt;
&lt;p&gt;
Feel free to close this if you feel that's appropriate.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44428 (update_object_term_cache) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 21 Jun 2018 21:56:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44428#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44428#comment:2/1529618167265317</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @sllimrovert - Thanks for the ticket and for the test!
&lt;/p&gt;
&lt;p&gt;
Have a look at &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43049" title="Taxonomy: Ensure that invalid term objects are discarded in ..."&gt;[43049]&lt;/a&gt; &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42691" title="#42691: defect (bug): WP_Term_Query get_terms generates invalid sql queries (closed: fixed)"&gt;#42691&lt;/a&gt; - it's likely that this is what fixed the bug in trunk.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38323 (Reconsider $object_subtype handling in `register_meta()`) closed</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Thu, 21 Jun 2018 21:06:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38323#comment:86</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38323#comment:86/1529615211768356</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43378" title="REST API: Support meta registration for specific object subtypes.
 ..."&gt;43378&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Support meta registration for specific object subtypes.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Introduce an &lt;code&gt;object_subtype&lt;/code&gt; argument to the args array for &lt;code&gt;register_meta()&lt;/code&gt; which can be used to limit meta registration to a single subtype (e.g. a custom post type or taxonomy, vs all posts or taxonomies).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Introduce &lt;code&gt;register_post_meta()&lt;/code&gt; and &lt;code&gt;register_term_meta()&lt;/code&gt; wrapper methods for &lt;code&gt;register_meta&lt;/code&gt; to provide a convenient interface for the common case of registering meta for a specific taxonomy or post type. These methods work the way plugin developers have often expected &lt;code&gt;register_meta&lt;/code&gt; to function, and should be used in place of direct &lt;code&gt;register_meta&lt;/code&gt; where possible.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props flixos90, tharsheblows, spacedmonkey.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38323" title="#38323: enhancement: Reconsider $object_subtype handling in `register_meta()` (closed: fixed)"&gt;#38323&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [43378]: REST API: Support meta registration for specific object subtypes.  ...</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Thu, 21 Jun 2018 21:06:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43378</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43378/1529615210637720</guid>
      <description>&lt;p&gt;
REST API: Support meta registration for specific object subtypes.
&lt;/p&gt;
&lt;p&gt;
Introduce an &lt;code&gt;object_subtype&lt;/code&gt; argument to the args array for &lt;code&gt;register_meta()&lt;/code&gt; which can be used to limit meta registration to a single subtype (e.g. a custom post type or taxonomy, vs all posts or taxonomies).
&lt;/p&gt;
&lt;p&gt;
Introduce &lt;code&gt;register_post_meta()&lt;/code&gt; and &lt;code&gt;register_term_meta()&lt;/code&gt; wrapper methods for &lt;code&gt;register_meta&lt;/code&gt; to provide a convenient interface for the common case of registering meta for a specific taxonomy or post type. These methods work the way plugin developers have often expected &lt;code&gt;register_meta&lt;/code&gt; to function, and should be used in place of direct &lt;code&gt;register_meta&lt;/code&gt; where possible.
&lt;/p&gt;
&lt;p&gt;
Props flixos90, tharsheblows, spacedmonkey.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38323" title="#38323: enhancement: Reconsider $object_subtype handling in `register_meta()` (closed: fixed)"&gt;#38323&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #44429 (WP-CLI incompatibility with wp_redirect( https://... )) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Thu, 21 Jun 2018 21:04:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44429#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44429#comment:1/1529615044047335</guid>
      <description>&lt;p&gt;
There is likely an error in &lt;a href="https://core.trac.wordpress.org/home/rsed43dqsw/public_html/wp-content/plugins/force-https-littlebizzy/core/redirect.php:68"&gt;https://core.trac.wordpress.org/home/rsed43dqsw/public_html/wp-content/plugins/force-https-littlebizzy/core/redirect.php:68&lt;/a&gt; that needs to return when using in WP-CLI.
&lt;/p&gt;
&lt;p&gt;
The issue is &lt;code&gt;wp_redirect()&lt;/code&gt; doesn’t play well with HTTPS and WP-CLI and you will need to modify the code to exit early and not perform the &lt;code&gt;wp_redirect()&lt;/code&gt; call when using in WP-CLI.
&lt;/p&gt;
&lt;p&gt;
Adding something like the following at the beginning of that &lt;code&gt;redirect()&lt;/code&gt; function should fix it.
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( defined( 'WP_CLI' ) &amp;amp;&amp;amp; WP_CLI ) {
    return;
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44429 (WP-CLI incompatibility with wp_redirect( https://... )) created</title>
      
        <dc:creator>ecahost7</dc:creator>

      <pubDate>Thu, 21 Jun 2018 20:43:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44429</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44429/1529613811907255</guid>
      <description>&lt;p&gt;
Hello,
&lt;/p&gt;
&lt;p&gt;
My wordpress wouldn't update and I see errors below,
I also trying to update my site URL to include www to it but I can't change it due update failure.
&lt;/p&gt;
&lt;pre class="wiki"&gt;Warning: The system could not load some of this WordPress installation’s data. Certain sections of this interface may not function correctly.
(XID nw85up) The system failed to run the wp-cli batch commands with the following issues: Warning: Some code is trying to do a URL redirect.
Backtrace:
#0 WP_CLI\Utils\wp_redirect_handler(https://)
#1 call_user_func_array(WP_CLI\Utils\wp_redirect_handler, Array ([0] =&amp;gt; https://)) called at [/home/rsed43dqsw/public_html/wp-includes/class-wp-hook.php:288]
#2 WP_Hook-&amp;gt;apply_filters(https://, Array ([0] =&amp;gt; https://,[1] =&amp;gt; 301)) called at [/home/rsed43dqsw/public_html/wp-includes/plugin.php:203]
#3 apply_filters(wp_redirect, https://, 301) called at [/home/rsed43dqsw/public_html/wp-includes/pluggable.php:1196]
#4 wp_redirect(https://, 301) called at [/home/rsed43dqsw/public_html/wp-content/plugins/force-https-littlebizzy/core/redirect.php:91]
#5 FHTTPS_Core_Redirect-&amp;gt;redirect() called at [/home/rsed43dqsw/public_html/wp-content/plugins/force-https-littlebizzy/core/redirect.php:68]
#6 FHTTPS_Core_Redirect-&amp;gt;start()
#7 call_user_func_array(Array ([0] =&amp;gt; FHTTPS_Core_Redirect Object (),[1] =&amp;gt; start), Array ([0] =&amp;gt; )) called at [/home/rsed43dqsw/public_html/wp-includes/class-wp-hook.php:286]
#8 WP_Hook-&amp;gt;apply_filters(, Array ([0] =&amp;gt; )) called at [/home/rsed43dqsw/public_html/wp-includes/class-wp-hook.php:310]
#9 WP_Hook-&amp;gt;do_action(Array ([0] =&amp;gt; )) called at [/home/rsed43dqsw/public_html/wp-includes/plugin.php:453]
#10 do_action(plugins_loaded) called at [/home/rsed43dqsw/public_html/wp-settings.php:327]
#11 require(/home/rsed43dqsw/public_html/wp-settings.php) called at [phar:///usr/local/cpanel/3rdparty/share/wp-cli/wp-cli.phar/php/WP_CLI/Runner.php:1174]
#12 WP_CLI\Runner-&amp;gt;load_wordpress() called at [phar:///usr/local/cpanel/3rdparty/share/wp-cli/wp-cli.phar/php/WP_CLI/Runner.php:1100]
#13 WP_CLI\Runner-&amp;gt;start() called at [phar:///usr/local/cpanel/3rdparty/share/wp-cli/wp-cli.phar/php/WP_CLI/Bootstrap/LaunchRunner.php:23]
#14 WP_CLI\Bootstrap\LaunchRunner-&amp;gt;process(WP_CLI\Bootstrap\BootstrapState Object ([] =&amp;gt; Array ())) called at [phar:///usr/local/cpanel/3rdparty/share/wp-cli/wp-cli.phar/php/bootstrap.php:75]
#15 WP_CLI\bootstrap() called at [phar:///usr/local/cpanel/3rdparty/share/wp-cli/wp-cli.phar/php/wp-cli.php:23]
#16 include(phar:///usr/local/cpanel/3rdparty/share/wp-cli/wp-cli.phar/php/wp-cli.php) called at [phar:///usr/local/cpanel/3rdparty/share/wp-cli/wp-cli.phar/php/boot-phar.php:8]
#17 include(phar:///usr/local/cpanel/3rdparty/share/wp-cli/wp-cli.phar/php/boot-phar.php) called at [/usr/local/cpanel/3rdparty/share/wp-cli/wp-cli.phar:4]
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44416 (`compact()` will throw notice for undefined variables in PHP 7.3) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 21 Jun 2018 20:34:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44416#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44416#comment:3/1529613291556349</guid>
      <description>&lt;p&gt;
Dove into &lt;code&gt;wp_insert_post()&lt;/code&gt;. Notices being thrown for the following variables not existing:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;$filter&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;$context&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;$ID&lt;/code&gt; (&lt;code&gt;$post_ID&lt;/code&gt; is used instead)
&lt;/li&gt;&lt;li&gt;&lt;code&gt;$file&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;$post_mime_type&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;$category&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;$comment_count&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;$ancestors&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;$page_template&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;$tags_input&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The first &lt;code&gt;compact()&lt;/code&gt; call is causing all of the issues. This is because it is passing &lt;code&gt;array_keys( $postarr )&lt;/code&gt; to the call, so all indexes passed to the function may not be represented in variable form. The second &lt;code&gt;compact()&lt;/code&gt; call is not causing any issues because those variable names are manually defined in the &lt;code&gt;compact()&lt;/code&gt; call and all exist.
&lt;/p&gt;
&lt;p&gt;
The result of the first &lt;code&gt;compact()&lt;/code&gt; call is passed to the &lt;code&gt;wp_insert_post_parent&lt;/code&gt; filter, which attempts to prevent hierarchy loops. Core has one function that hooks into this filter, but it does not even use the result of the &lt;code&gt;compact()&lt;/code&gt; call.
&lt;/p&gt;
&lt;p&gt;
I think there are a few options here.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Make sure all documented &lt;code&gt;$postarr&lt;/code&gt; arguments get a defined variable&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
This would fix the notice for all core values, but it would not fix issues where a plugin or theme is passing a custom value to &lt;code&gt;$postarr&lt;/code&gt;. While some variables can just be moved above this first call (&lt;code&gt;$post_mime_type&lt;/code&gt;, for example), it would also require defining new variables only for the purpose of avoiding a PHP notice, which makes me sway away from this option.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Manually define the variables to compact in the third argument of &lt;code&gt;wp_insert_post_parent&lt;/code&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
This would ensure that PHP notices are never thrown (similar to the second call to &lt;code&gt;compact()&lt;/code&gt; further down). But, it could cause a backwards compatibility issue. A value being used by a filter could start to be excluded. This is not a very well known or used filter, so communication in a Make post ahead of time could help prevent issues with this change. The filter could also be deprecated in favor of a new one. But this would not fix the notices.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14356 (Better string for onbeforeunload event dialog) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 21 Jun 2018 20:01:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14356#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14356#comment:14/1529611312722926</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44428 (update_object_term_cache) updated</title>
      
        <dc:creator>sllimrovert</dc:creator>

      <pubDate>Thu, 21 Jun 2018 19:48:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44428#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44428#comment:1/1529610533925165</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>test-object-cache-bug.php attached to Ticket #44428</title>
      
        <dc:creator>sllimrovert</dc:creator>

      <pubDate>Thu, 21 Jun 2018 19:30:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44428/test-object-cache-bug.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44428/test-object-cache-bug.php/1529609438687428</guid>
      <description>&lt;p&gt;
Unit test for issue
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44428 (update_object_term_cache) created</title>
      
        <dc:creator>sllimrovert</dc:creator>

      <pubDate>Thu, 21 Jun 2018 19:30:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44428</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44428/1529609403702071</guid>
      <description>&lt;p&gt;
I have a situation where I want to limit access to terms based on some meta about the current user.  There's a filter ( 'get_terms_args' ) for when I call &lt;code&gt;get_terms()&lt;/code&gt; that I can use to prevent that from returning the terms I don't want to let them have.  However, I also want to prevent when calling &lt;code&gt;get_term&lt;/code&gt; on a specific term.
&lt;/p&gt;
&lt;p&gt;
There's a filter in there called &lt;code&gt;'get_term'&lt;/code&gt; that I can use.  I return &lt;code&gt;null&lt;/code&gt; when the user doesn't have access to it.
&lt;/p&gt;
&lt;p&gt;
With that filter in place, if I call &lt;code&gt;get_posts()&lt;/code&gt;, I get a fatal error within the &lt;code&gt;update_object_term_cache()&lt;/code&gt; function.
&lt;/p&gt;
&lt;p&gt;
I've attached a test case which shows the error.
&lt;/p&gt;
&lt;pre class="wiki"&gt;1) FeedsByTag\test\TermObjectCache::testObjectTermCache
Trying to get property of non-object
/Users/trevor/Sites/dev/wordpress-develop/src/wp-includes/taxonomy.php:3183
&lt;/pre&gt;&lt;p&gt;
The bug exists in 4.9.6.
&lt;/p&gt;
&lt;p&gt;
It does NOT occur in &lt;code&gt;master&lt;/code&gt;, so something has fixed this for the 5.0 release.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44427 (Introduce lazy-loading API for media and other elements) updated</title>
      
        <dc:creator>tabrisrp</dc:creator>

      <pubDate>Thu, 21 Jun 2018 17:58:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44427#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44427#comment:1/1529603901885398</guid>
      <description>&lt;p&gt;
As the developer of a performance optimization plugin, I definitely relate with points 3 and 4, which are recurring issues for both our development &amp;amp; support teams.
&lt;/p&gt;
&lt;p&gt;
Having a standardized lazy-loading API in core would greatly reduce the conflicts we encounter, and reduce our need to consistently &amp;amp; accurately parse the HTML content of pages to detect and rewrite lazy-loadable media assets.
&lt;/p&gt;
&lt;p&gt;
I believe it would also help solve difficult situations like lazy-loading background images, a common user-requested feature, which is hard to get around without a core standard.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35214 (Custom Comment Types) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 21 Jun 2018 17:55:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35214#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35214#comment:20/1529603757694382</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by tharsheblows. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1529603757000134"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42069 (Saving metadata fails (randomly) if equal value already exists) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 21 Jun 2018 17:46:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42069#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42069#comment:9/1529603200820495</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by adamsilverstein. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1529603199000760"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38323 (Reconsider $object_subtype handling in `register_meta()`) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 21 Jun 2018 17:46:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38323#comment:85</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38323#comment:85/1529603181689113</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by kadamwhite. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1529603180000625"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44387 (Add support for site meta in `register_meta()`) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 21 Jun 2018 17:45:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44387#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44387#comment:1/1529603123214827</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by flixos90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1529603122000064"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42069 (Saving metadata fails (randomly) if equal value already exists) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 21 Jun 2018 17:44:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42069#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42069#comment:8/1529603099046594</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44427 (Introduce lazy-loading API for media and other elements) created</title>
      
        <dc:creator>mor10</dc:creator>

      <pubDate>Thu, 21 Jun 2018 17:31:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44427</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44427/1529602301730733</guid>
      <description>&lt;h2 id="Synopsis"&gt;Synopsis&lt;/h2&gt;
&lt;p&gt;
Lazy-loading of media and other elements (iframes, embeds, etc) is a performance best practice. Currently, various plugins including Jetpack, and themes including WP Rig ship lazy loading features to improve performance. These solutions rely on conditionally rewriting the HTML for images and other media as it is being loaded from core which is sub-optimal.
&lt;/p&gt;
&lt;h2 id="Proposal"&gt;Proposal&lt;/h2&gt;
&lt;p&gt;
Introduce a lazy-loading API in core which lazy-loads media and other elements out of the box based on various conditions, with an opt-out feature in the Customizer. This takes the onus of having extensive knowledge of performance optimization and how to add lazy-loading to your site off the shoulders of the end-user and gives developers control over how and when content is lazy-loaded.
&lt;/p&gt;
&lt;p&gt;
The lazy-loading API should allow theme- and plugin developers detailed control over how lazy-loading works. As an example, the AMP plugin would disable core lazy-loading and replace it with its own custom method. Another example: A theme developer may choose to immediately load the featured image of the first post in an index or archive template while all other images are lazy-loaded.
&lt;/p&gt;
&lt;h2 id="Whythisisntpluginterritory"&gt;Why this isn't plugin territory&lt;/h2&gt;
&lt;p&gt;
Lazy-loading is currently considered plugin territory. I disagree for a couple of reasons:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Lazy-loading is performance best-practice: &lt;a class="ext-link" href="https://developers.google.com/web/fundamentals/performance/lazy-loading-guidance/images-and-video/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developers.google.com/web/fundamentals/performance/lazy-loading-guidance/images-and-video/&lt;/a&gt;.
&lt;/li&gt;&lt;li&gt;WordPress should not put the onus on site-owners to have in-depth knowledge of performance best-practices and how to meet them.
&lt;/li&gt;&lt;li&gt;With no consistent API, plugins and themes may introduce different and conflicting solutions to the same problem which in turn causes unexpected behavior for the end-user.
&lt;/li&gt;&lt;li&gt;Lazy-loading introduced at plugin/theme level forces aggressive rewriting of content which would be more consistently performed at core.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44238 (Add protected param to register meta) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 21 Jun 2018 17:27:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44238#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44238#comment:5/1529602037757721</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by spacedmonkey. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1529602037000160"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43941 (Add default value to register meta) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 21 Jun 2018 17:26:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43941#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43941#comment:3/1529601988630551</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by spacedmonkey. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1529601987000593"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44426 (Privacy policy for a plugin isn't saved when a policy page isn't created) created</title>
      
        <dc:creator>PerS</dc:creator>

      <pubDate>Thu, 21 Jun 2018 17:12:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44426</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44426/1529601123341054</guid>
      <description>&lt;p&gt;
If a policy page isn't created and you call &lt;code&gt;wp_add_privacy_policy_content('plugin name', 'privacy content')&lt;/code&gt; from a plugin, the privacy content isn't saved in the &lt;code&gt;_wp_suggested_privacy_policy_content&lt;/code&gt; cache.
&lt;/p&gt;
&lt;p&gt;
This might be by design, but it would be very nice to be able to grab all privacy policies for activated plugins even if you don't (want to) use the WordPress policy page, especially on a multisite.
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44425 (Add WP_CACHE_KEY_SALT to WordPress.org secret-key service) created</title>
      
        <dc:creator>paulschreiber</dc:creator>

      <pubDate>Thu, 21 Jun 2018 16:52:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44425</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44425/1529599924403814</guid>
      <description>&lt;p&gt;
Currently, the WordPress.org secret-key service
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://api.wordpress.org/secret-key/1.1/salt/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://api.wordpress.org/secret-key/1.1/salt/&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
generates &lt;code&gt;AUTH_KEY&lt;/code&gt;, &lt;code&gt;SECURE_AUTH_KEY&lt;/code&gt;, &lt;code&gt;LOGGED_IN_KEY&lt;/code&gt;, &lt;code&gt;NONCE_KEY&lt;/code&gt;, &lt;code&gt;AUTH_SALT&lt;/code&gt;, &lt;code&gt;SECURE_AUTH_SALT&lt;/code&gt;, &lt;code&gt;LOGGED_IN_SALT&lt;/code&gt; and &lt;code&gt;NONCE_SALT&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
It would be helpful if it also generated &lt;code&gt;WP_CACHE_KEY_SALT&lt;/code&gt;. That way, people who install the object-cache.php drop-in would be less likely to experience unexpected behaviour.
&lt;/p&gt;
&lt;p&gt;
See also:
&lt;a class="ext-link" href="https://github.com/Automattic/wp-memcached/issues/31"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/Automattic/wp-memcached/issues/31&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>44424.diff attached to Ticket #44424</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 21 Jun 2018 15:44:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44424/44424.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44424/44424.diff/1529595878562223</guid>
      <description>&lt;p&gt;
Proposed patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Tickets #40951,​44417 batch updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 21 Jun 2018 15:44:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=40951%2C44417</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=40951%2C44417/1529595854824404</guid>
      <description>duplicate: &lt;p&gt;
You can add that filter on your own install if you like, but in core the goal is consistency between the Text widgets and the post editor. The solutions were debated extensively in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40951" title="#40951: defect (bug): New Text Widget - Switching Between Visual/Text Editor Strips Out Code (closed: fixed)"&gt;#40951&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #44424 (PHPDoc comments and @return tags missing at many places) created</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 21 Jun 2018 15:44:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44424</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44424/1529595843584318</guid>
      <description>&lt;p&gt;
Function/methods and property declarations are missing PHPDoc comment and &lt;code&gt;@return&lt;/code&gt; tags at many places of &lt;code&gt;src/wp-includes/pomo/translations.php&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Proposed patch added.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44233 (Add missing unit tests for exporting personal data by username or ...) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 21 Jun 2018 15:24:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44233#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44233#comment:6/1529594680250668</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44233/44233.diff" title="Attachment '44233.diff' in Ticket #44233"&gt;44233.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44233/44233.diff" title="Download"&gt;​&lt;/a&gt; combines the uncommitted tests from the three patches into one and contains the following changes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Added a test in &lt;code&gt;wpPrivacyDeleteOldExportFiles.php&lt;/code&gt; that tests file deletion when the expiration time period is filtered.
&lt;/li&gt;&lt;li&gt;Changed &lt;code&gt;@since&lt;/code&gt; tag to &lt;code&gt;4.9.7&lt;/code&gt; in &lt;code&gt;Tests_Privacy_WpPrivacyProcessPersonalDataExportPage&lt;/code&gt; and &lt;code&gt;Tests_Privacy_wpPrivacyGeneratePersonalDataExportFile&lt;/code&gt; classes. Not sure if this &lt;code&gt;@since&lt;/code&gt; should match the function or test introduction version (thinking the test).
&lt;/li&gt;&lt;li&gt;Removed variable declarations for &lt;code&gt;$filtered_response&lt;/code&gt; in test methods that did not utilize the variable in &lt;code&gt;wpPrivacyProcessPersonalDataExportPage&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Move &lt;code&gt;register_custom_personal_data_exporters()&lt;/code&gt; closer to the top of the class &lt;code&gt;Tests_Privacy_WpPrivacyProcessPersonalDataExportPage&lt;/code&gt; class where it is used.
&lt;/li&gt;&lt;li&gt;Add a skip condition to &lt;code&gt;Tests_Privacy_wpPrivacyGeneratePersonalDataExportFile-&amp;gt;setUp()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Replace &lt;code&gt;@unlink()&lt;/code&gt; call with a &lt;code&gt;wp_delete_file()&lt;/code&gt; call.
&lt;/li&gt;&lt;li&gt;Move &lt;code&gt;$exception_was_thrown&lt;/code&gt; variables in each test method within the &lt;code&gt;Tests_Privacy_wpPrivacyGeneratePersonalDataExportFile&lt;/code&gt; class to a class property to avoid repeating in every method.
&lt;/li&gt;&lt;li&gt;Added checks that the export file was actually created for success scenario test methods in the &lt;code&gt;Tests_Privacy_wpPrivacyGeneratePersonalDataExportFile&lt;/code&gt; class.
&lt;/li&gt;&lt;li&gt;Log the created export file on the &lt;code&gt;&lt;/code&gt; action in a class property within the &lt;code&gt;Tests_Privacy_wpPrivacyGeneratePersonalDataExportFile&lt;/code&gt; class and use it to test that the file exists after calling the function.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I set up a &lt;a class="ext-link" href="https://travis-ci.org/desrosj/wordpress-develop/builds/395055138"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;branch on my `wordpress-develop` fork to show the tests passing&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Remaining items:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;There are some PHP 5.2 failures that I am looking into.
&lt;/li&gt;&lt;li&gt;The &lt;code&gt;test_wp_privacy_generate_personal_data_export_file_detects_cannot_create_index()&lt;/code&gt; and &lt;code&gt;test_wp_privacy_generate_personal_data_export_file_detects_cannot_write_html()&lt;/code&gt; test methods are failing locally for me but passing on Travis. I think this is permissions related. Going to look into a more system independent way to set up these test methods.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>44233.diff attached to Ticket #44233</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 21 Jun 2018 15:19:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44233/44233.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44233/44233.diff/1529594378764016</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44422 (Missing @return tag and wrong parameter reference in function/method ...) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 21 Jun 2018 15:14:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44422#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44422#comment:2/1529594063740850</guid>
      <description>&lt;p&gt;
I have uploaded modified patch. Please let me know if this looks OK.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44422#comment:1" title="Comment 1"&gt;netweb&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Can you remove the spacing between the types please @subrataemfluence i.e. &lt;code&gt;string|false&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44422-2.diff attached to Ticket #44422</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 21 Jun 2018 15:13:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44422/44422-2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44422/44422-2.diff/1529593999327787</guid>
      <description>&lt;p&gt;
Updated patch with extra spaces removed.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44339 (Emoji: Update Twemoji to 11.0) updated</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Thu, 21 Jun 2018 15:07:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44339#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44339#comment:18/1529593679798322</guid>
      <description>&lt;p&gt;
&lt;code&gt;rm -rf node_nodules &amp;amp;&amp;amp; npm cache clear -force &amp;amp;&amp;amp; npm install&lt;/code&gt; didn't give me a &lt;code&gt;sha512&lt;/code&gt;. I haven't dug into it beyond that though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23165 (Admin validation errors on form nonce element IDs (_wpnonce)) updated</title>
      
        <dc:creator>aeboi80</dc:creator>

      <pubDate>Thu, 21 Jun 2018 14:40:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23165#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23165#comment:13/1529592053891449</guid>
      <description>&lt;p&gt;
I am encountering this as well. It appears there has not been an official resolution to this in many years. Has any further thought be given to this in the past 6 months?
&lt;/p&gt;
&lt;p&gt;
WP: 4.9.6
&lt;/p&gt;
&lt;p&gt;
WooCommerce: 3.4
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://www.dropbox.com/s/ob5n1e3cqxs3zxd/2018-06-21%20at%2010.38%20AM.jpeg"&gt;&lt;img src="https://www.dropbox.com/s/ob5n1e3cqxs3zxd/2018-06-21%20at%2010.38%20AM.jpeg" alt="https://www.dropbox.com/s/ob5n1e3cqxs3zxd/2018-06-21%20at%2010.38%20AM.jpeg" crossorigin="anonymous" title="https://www.dropbox.com/s/ob5n1e3cqxs3zxd/2018-06-21%20at%2010.38%20AM.jpeg" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 21 Jun 2018 13:40:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:91</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:91/1529588437888138</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43316#comment:90" title="Comment 90"&gt;aduth&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
...I'm confused by the proposed flow where an error is returned from the endpoint (when deleting identical autosaves).
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Do we really need to return an error? Can't we just treat it as though it were successful even if in-fact the server is ensuring there are no redundant revisions?
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
Yeah, generally the autosave logic is pretty complex. I'd be happy if we can streamline it a bit (for the API), if possible.
&lt;/p&gt;
&lt;p&gt;
Deleting an autosave revision when the content is identical to the post_content is done for two reasons:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;It ensures there aren't any revisions with no diff/without any changes.
&lt;/li&gt;&lt;li&gt;It reduces the number of revisions.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Don't think the second reason matters much, but the first is confusing when viewing revisions, so this behaviour makes sense.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol start="2"&gt;&lt;li&gt;Because we delete the revision and then return immediately with an error, isn't it true that we're not simply not storing redundant revision, we're in fact destroying a revision without having anything new to serve in its place?
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
Yes, technically there is no reason to delete the old autosave revision. Even then, what should be returned for such requests? Seems we have to return the "old" autosave ID? Then the autosave revision content will be different from the submitted content.
&lt;/p&gt;
&lt;p&gt;
Another option is to standardize on always returning the post_ID of the actual post being edited. Currently this is the case for drafts (same user) when the post is updated, but the returned ID is the autosave revision ID when draft for different user or published post. Thinking it will probably be best to always return the "real" post_ID for all autosave requests.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44230 (Export Personal Data Flaw) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Thu, 21 Jun 2018 13:23:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44230#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44230#comment:7/1529587435338431</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44230#comment:6" title="Comment 6"&gt;psycleuk&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Following up on this again, as there has been no response to concerns about the data file being public and only obscured from general access.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Let's say you know the user's email that you are after. You'd still have to find the time-window that the zip is available + the hash.
&lt;/p&gt;
&lt;p&gt;
The only way to have everything is to actually have access to the user's e-mail. And then there's seriously nothing 'we' can do about it.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
After further review of the process, i believe there is another flaw. A user does not need to log into the site the confirm the request, all they need to do it click the link in the email. The process flow assumes that the person clicking the link in the email will always be the person who triggered the request, but if the users email account is compromised it may not be the case.
&lt;/p&gt;
&lt;p&gt;
The current process flow would allow as user to request data from a WordPress site without ever logging into the site to confirm who they are, all they would need access to is the email with the confirmation link.
&lt;/p&gt;
&lt;p&gt;
Given that the data being requested is about a user of the site and will therefore have an account on the site, surely the safest process to ensure data security is to have the user log into their account at each step to confirm they are the correct user.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
A user does not need to log in to a website because he might not have an account. For example comments don't require user registration, so there's no need for a login to retrieve that data, you just need the e-mail address that you made the comments with. There are plenty of use-cases that will never require actual 'registration' or even actual 'access' to an application/website that collects data.
&lt;/p&gt;
&lt;p&gt;
If a users e-mail is compromised as you say, then the attacker would probably have access on all of the subjects data already. The users e-mail security isn't our problem I believe nor we can do anything about it. On the other hand most companies that I know handling important data, do require extra validation measures i.e. by phone as well first before even they reach the point of e-mail validation (if they don't want to skip it) etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42785 (Change default of `show_in_rest` in register_post_type and ...) updated</title>
      
        <dc:creator>andizer</dc:creator>

      <pubDate>Thu, 21 Jun 2018 13:06:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42785#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42785#comment:35/1529586413599243</guid>
      <description>&lt;p&gt;
I was looking at the latest diff file and I have one point of consideration. I discovered the following being used twice, why not wrapping this a function, make it reusable?
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$show_in_rest_default&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'public'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'publicly_queryable'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$show_in_rest_default&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Another thing to consider is assigning the if-statement directly to the variable:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$show_in_rest_default&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'public'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'publicly_queryable'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44422 (Missing @return tag and wrong parameter reference in function/method ...) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Thu, 21 Jun 2018 13:02:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44422#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44422#comment:1/1529586145335570</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Can you remove the spacing between the types please @subrataemfluence i.e. &lt;code&gt;string|false&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44383 (Deprecate the media_buttons_context filter with apply_filters_deprecated()) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 21 Jun 2018 12:57:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44383#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44383#comment:10/1529585860370480</guid>
      <description>&lt;p&gt;
Awesome to hear you've decided to dive into WordPress development.
&lt;/p&gt;
&lt;p&gt;
There are also many ways to help with tickets; like patching, testing, refreshing, documentation, designing, etc.
&lt;/p&gt;
&lt;p&gt;
I'm sure creating themes and plugins is a good way to better understand WordPress mechanics.
&lt;/p&gt;
&lt;p&gt;
Also helping out on support forums, can enhance debugging skills.
&lt;/p&gt;
&lt;p&gt;
The &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Core Contributor Handbook&lt;/a&gt; is also very helpful, regarding core contributions.
&lt;/p&gt;
&lt;p&gt;
---
&lt;/p&gt;
&lt;p&gt;
Maybe this can help how to approach the PHP errors/notices:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://codex.wordpress.org/Debugging_in_WordPress"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Debugging_in_WordPress&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
There are also plugins, like &lt;em&gt;Query Monitor&lt;/em&gt;, that display it in an easy to read manner.
&lt;/p&gt;
&lt;p&gt;
---
&lt;/p&gt;
&lt;p&gt;
I have already created a another ticket &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/44406" title="#44406: defect (bug): Mismatch in the default value of the optional replacement argument in ... (new)"&gt;#44406&lt;/a&gt; regarding the input mismatch.
&lt;/p&gt;
&lt;p&gt;
---
&lt;/p&gt;
&lt;p&gt;
It seems that using &lt;code&gt;'media_buttons'&lt;/code&gt; for the replacement input, is currently more suitable than using &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
@zsiderov maybe you could checkout those outputs, so we have them documented here?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44421 (Missing @return tag in function/method PHPDoc comment) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Thu, 21 Jun 2018 12:57:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44421#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44421#comment:2/1529585840726005</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44230 (Export Personal Data Flaw) updated</title>
      
        <dc:creator>psycleuk</dc:creator>

      <pubDate>Thu, 21 Jun 2018 12:20:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44230#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44230#comment:6/1529583632910339</guid>
      <description>&lt;p&gt;
Following up on this again, as there has been no response to concerns about the data file being public and only obscured from general access.
&lt;/p&gt;
&lt;p&gt;
After further review of the process, i believe there is another flaw. A user does not need to log into the site the confirm the request, all they need to do it click the link in the email. The process flow assumes that the person clicking the link in the email will always be the person who triggered the request, but if the users email account is compromised it may not be the case.
&lt;/p&gt;
&lt;p&gt;
The current process flow would allow as user to request data from a WordPress site without ever logging into the site to confirm who they are, all they would need access to is the email with the confirmation link.
&lt;/p&gt;
&lt;p&gt;
Given that the data being requested is about a user of the site and will therefore have an account on the site, surely the safest process to ensure data security is to have the user log into their account at each step to confirm they are the correct user.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44423 (Unicode characters in get string breaks pagination) created</title>
      
        <dc:creator>jessepearson</dc:creator>

      <pubDate>Thu, 21 Jun 2018 11:59:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44423</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44423/1529582360040462</guid>
      <description>&lt;p&gt;
This was found when working with this plugin: [Ajax-Enabled Enhanced Layered Navigation](&lt;a class="ext-link" href="https://woocommerce.com/products/ajax-layered-navigation/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://woocommerce.com/products/ajax-layered-navigation/&lt;/a&gt;) .
&lt;/p&gt;
&lt;p&gt;
If there are unicode characters used in a parameter in a get string, then it breaks pagination by not allowing access to page 2+.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Set your blog posts to display 1 per page
&lt;/li&gt;&lt;li&gt;View blog
&lt;/li&gt;&lt;li&gt;Append this to the url in address bar and hit enter: &lt;code&gt;?dddd%D7%99%D7%A6%D7%A8%D7%9F=metabo&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Once page reloads, try to go to page 2
&lt;/li&gt;&lt;li&gt;You should receive a too many redirects error
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>44422.diff attached to Ticket #44422</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 21 Jun 2018 11:37:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44422/44422.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44422/44422.diff/1529581043586384</guid>
      <description>&lt;p&gt;
Proposed patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44422 (Missing @return tag and wrong parameter reference in function/method ...) created</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 21 Jun 2018 11:35:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44422</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44422/1529580913095506</guid>
      <description>&lt;p&gt;
File name: &lt;code&gt;src/wp-includes/pomo/streams.php&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Wrong parameter name reference
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="sd"&gt;/**
* ...
* @param integer count How many elements should be read
* ...
*/&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;readint32array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$count&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Missing &lt;code&gt;@return&lt;/code&gt; tag.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="sd"&gt;/**
* @param int $bytes
*/&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$bytes&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;fread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;_f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$bytes&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44421 (Missing @return tag in function/method PHPDoc comment) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 21 Jun 2018 11:08:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44421#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44421#comment:1/1529579298901779</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>44421.diff attached to Ticket #44421</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 21 Jun 2018 11:06:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44421/44421.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44421/44421.diff/1529579180186337</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44421 (Missing @return tag in function/method PHPDoc comment) created</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 21 Jun 2018 11:06:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44421</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44421/1529579171687079</guid>
      <description>&lt;p&gt;
&lt;code&gt;@return&lt;/code&gt; tag is missing in function/method PHPDoc comment.
&lt;/p&gt;
&lt;pre class="wiki"&gt;File: src/wp-includes/pomo/mo.php
&lt;/pre&gt;&lt;p&gt;
Functions that missing &lt;code&gt;@return&lt;/code&gt; tag are:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;import_from_file&lt;/code&gt;, &lt;code&gt;&amp;amp;make_entry&lt;/code&gt;, &lt;code&gt;import_from_reader&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Proposed patch uploaded.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44420 (Missing doc in property declaration) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Thu, 21 Jun 2018 10:36:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44420#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44420#comment:2/1529577394393450</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44420 (Missing doc in property declaration) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 21 Jun 2018 10:32:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44420#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44420#comment:1/1529577160296709</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/44410" title="#44410: defect (bug): Properties in class missing type definition and description in DOC comments (new)"&gt;#44410&lt;/a&gt;, &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/44411" title="#44411: enhancement: Add property doc in child class (new)"&gt;#44411&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44420.diff attached to Ticket #44420</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 21 Jun 2018 10:31:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44420/44420.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44420/44420.diff/1529577083271045</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44420 (Missing doc in property declaration) created</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 21 Jun 2018 10:31:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44420</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44420/1529577070234228</guid>
      <description>&lt;p&gt;
No public property in class &lt;code&gt;class-wp-widget-form-customize-control.php&lt;/code&gt; is associated with inline documentation.
&lt;/p&gt;
&lt;pre class="wiki"&gt;File: src/wp-includes/customize/class-wp-widget-form-customize-control.php
&lt;/pre&gt;&lt;p&gt;
Proposed patch uploaded.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44417 (Text widget breaks code sometimes, and it's inconsistent) updated</title>
      
        <dc:creator>programmin</dc:creator>

      <pubDate>Thu, 21 Jun 2018 08:15:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44417#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44417#comment:2/1529568926439744</guid>
      <description>&lt;p&gt;
That works there, but still many people are using text widget system.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;remove_filter('widget_text_content', 'wptexturize');
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
makes it not output the weird ampersand inconsistently in the one example but not the other, so the bug is in that function.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35667 (Maximum execution time error in WP_Text_Diff_Renderer_Table) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 21 Jun 2018 06:37:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35667#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35667#comment:15/1529563079782204</guid>
      <description>&lt;p&gt;
I've run into this on some other posts, so I did some performance work on it, in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35667/35667.4.diff" title="Attachment '35667.4.diff' in Ticket #35667"&gt;35667.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35667/35667.4.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
As has been noted on this ticket, &lt;code&gt;compute_string_distance()&lt;/code&gt; is slow, which is caused by a combination of the &lt;code&gt;count_chars()&lt;/code&gt; calls (mostly on very long lines), and the difference calculation, for all lines. A simple cache of these values reduces the total time spent in &lt;code&gt;compute_string_distance()&lt;/code&gt; by 50%, more if there are any repeated lines in either of the posts.
&lt;/p&gt;
&lt;p&gt;
Using &lt;code&gt;md5()&lt;/code&gt; to generate the cache keys gives us fixed length keys, which causes future lookups to be much faster, and memory usage to be lower, provided the average line length is &amp;lt; 32 chars.
&lt;/p&gt;
&lt;p&gt;
The second slow part is in &lt;code&gt;interleave_changed_lines()&lt;/code&gt;, when adding blank lines for padding. &lt;code&gt;array_splice()&lt;/code&gt; is a super expensive function call, calling it in a loop causes a significant slowdown. Instead, we can call it once with an array of blank lines to insert.
&lt;/p&gt;
&lt;p&gt;
Running on &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35667/revision1.txt" title="Attachment 'revision1.txt' in Ticket #35667"&gt;revision1.txt&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35667/revision1.txt" title="Download"&gt;​&lt;/a&gt; / &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35667/revision1.txt" title="Attachment 'revision1.txt' in Ticket #35667"&gt;revision1.txt&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35667/revision1.txt" title="Download"&gt;​&lt;/a&gt;, it reduces a call to &lt;code&gt;wp_text_diff()&lt;/code&gt; from 1 second to 0.1 second. It does cause an increase in memory usage, approximately 3MB for this test case.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35667.4.diff attached to Ticket #35667</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 21 Jun 2018 06:35:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35667/35667.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35667/35667.4.diff/1529562901590774</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>44411.class-wp-customize-upload-control.diff attached to Ticket #44411</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 21 Jun 2018 06:18:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44411/44411.class-wp-customize-upload-control.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44411/44411.class-wp-customize-upload-control.diff/1529561891469658</guid>
      <description>&lt;p&gt;
Proposed patch for class-wp-customize-upload-control.php
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>44411.class-wp-customize-image-control.diff attached to Ticket #44411</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 21 Jun 2018 06:17:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44411/44411.class-wp-customize-image-control.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44411/44411.class-wp-customize-image-control.diff/1529561869059369</guid>
      <description>&lt;p&gt;
Proposed patch for class-wp-customize-image-control.php
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>35667.3.diff attached to Ticket #35667</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 21 Jun 2018 06:07:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35667/35667.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35667/35667.3.diff/1529561237865653</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>35667.2.diff attached to Ticket #35667</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 21 Jun 2018 06:04:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35667/35667.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35667/35667.2.diff/1529561057104430</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>44410-4.diff attached to Ticket #44410</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 21 Jun 2018 05:46:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44410/44410-4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44410/44410-4.diff/1529559962752198</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44410 (Properties in class missing type definition and description in DOC comments) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 21 Jun 2018 05:45:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44410#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44410#comment:6/1529559946252690</guid>
      <description>&lt;p&gt;
Silly mistake with &lt;code&gt;@since&lt;/code&gt; version.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44407 (Please add page_attributes_meta_box_parent action to meta-boxes.php) updated</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Thu, 21 Jun 2018 04:56:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44407#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44407#comment:2/1529557008787831</guid>
      <description>&lt;p&gt;
I wanted to inject a grandparent selector in that position, I relied heavily on ajax for the logic so simply injected it via jQuery instead. With that though there was slim pickings for targetting so ended up having to traverse up from &lt;code&gt;$('label.post-attributes-label[for="parent_id"])&lt;/code&gt; and created &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/44408" title="#44408: enhancement: Add classes to .post-attributes-label-wrapper paragraphs to make them ... (new)"&gt;#44408&lt;/a&gt; to address that and make it easier to target/manipulate the individual attributes via css/js.&lt;br /&gt;
So I'm able to jQuery what I needed for this specific ticket can be minor if anything&lt;br /&gt;
Thank you
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44419 (Custom classes and markup for pagination) created</title>
      
        <dc:creator>sami.keijonen</dc:creator>

      <pubDate>Thu, 21 Jun 2018 04:55:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44419</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44419/1529556954830523</guid>
      <description>&lt;p&gt;
In most cases we can modify outputted classes and markup, so that we can have naming convention we want. &lt;a class="ext-link" href="https://webdesign.tutsplus.com/tutorials/quick-tip-bem-naming-and-wordpress-filters-for-navigation--cms-31268?_ga=2.172652963.1871067249.1529556196-1741110366.1504949040"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Navigation is a good example&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
But using &lt;code&gt;the_posts_pagination()&lt;/code&gt; function there are no filters to modify output. For example this kind of markup and classes should be possible but I think it's not at the moment:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;nav class="pagination pagination--posts" role="navigation"&amp;gt;
&amp;lt;h2 class="pagination__title screen-reader-text"&amp;gt;Posts Navigation&amp;lt;/h2&amp;gt;
    &amp;lt;ul class="pagination__items"&amp;gt;
        &amp;lt;li class="pagination__item pagination__item--current"&amp;gt;&amp;lt;span aria-current="page" class="page-numbers current"&amp;gt;Page 1&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;li class="pagination__item pagination__item--number"&amp;gt;&amp;lt;a class="page-numbers" href="http://foxland-products.test/blog/page/2/"&amp;gt;Page 2&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;li class="pagination__item pagination__item--dots"&amp;gt;&amp;lt;span class="page-numbers dots"&amp;gt;…&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;li class="pagination__item pagination__item--number"&amp;gt;&amp;lt;a class="page-numbers" href="http://foxland-products.test/blog/page/5/"&amp;gt;Page 5&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;li class="pagination__item pagination__item--next"&amp;gt;&amp;lt;a class="next page-numbers" href="http://foxland-products.test/blog/page/2/"&amp;gt;Next page →&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
    &amp;lt;/ul&amp;gt;
&amp;lt;/nav&amp;gt;
&lt;/pre&gt;&lt;p&gt;
To sum it up:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;You can't add custom classes.
&lt;/li&gt;&lt;li&gt;There is no way to add wrapping &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;I get lost when trying to figure out Singular-post, posts and comment pagination.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
With that said I'm sure there is a way to add all these things in backwards compatible way but I need to look the code first before I can suggest something.
&lt;/p&gt;
&lt;p&gt;
At first look pagination functions seems messy:)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>44410-3.diff attached to Ticket #44410</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 21 Jun 2018 04:50:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44410/44410-3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44410/44410-3.diff/1529556639436065</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44410 (Properties in class missing type definition and description in DOC comments) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 21 Jun 2018 04:50:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44410#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44410#comment:5/1529556626852257</guid>
      <description>&lt;p&gt;
Thank you @westonruter ! I have uploaded the modified patch. Hope this is OK now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Fix fs_unavailable error.png attached to Ticket #44418</title>
      
        <dc:creator>ecomevo</dc:creator>

      <pubDate>Thu, 21 Jun 2018 04:11:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44418/Fix%20fs_unavailable%20error.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44418/Fix%20fs_unavailable%20error.png/1529554266763901</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44418 (fs_unavailable while auto-updating plugins) created</title>
      
        <dc:creator>ecomevo</dc:creator>

      <pubDate>Thu, 21 Jun 2018 04:10:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44418</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44418/1529554226415116</guid>
      <description>&lt;p&gt;
This is a follow-up to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38024" title="#38024: defect (bug): fs_unavailable while auto-updating several plugins in a row (closed: fixed)"&gt;#38024&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
This happens when plugins are updated automatically in the background (see attached screenshot).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36824 (do_all_pings function queries all posts) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Thu, 21 Jun 2018 03:15:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36824#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36824#comment:37/1529550915746389</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've refreshed this patch and would like to see if we can get this in finally. This is a performance optimization as opposed to a strict enhancement.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36824.7.diff attached to Ticket #36824</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Thu, 21 Jun 2018 03:09:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36824/36824.7.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36824/36824.7.diff/1529550543991094</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44012 (Store the agreed-to-privacy-policy date/timestamp to help prove GDPR ...) updated</title>
      
        <dc:creator>johnstonphilip</dc:creator>

      <pubDate>Thu, 21 Jun 2018 01:02:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44012#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44012#comment:11/1529542923610250</guid>
      <description>&lt;p&gt;
Thanks for clarifying. As long as there's a place to store agreements somewhere I think that will be very helpful.
&lt;/p&gt;
&lt;p&gt;
If there's a separate ticket where those general agreements will be stored, can that be linked here to help point people there who might end up here looking for it?
&lt;/p&gt;
&lt;p&gt;
P.S. Why don't you need a lawyer for GDPR?
&lt;/p&gt;
&lt;p&gt;
P.P.S. I'm Canadian...so maybe "Americanism" is a "Europeanism"? lol
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44417 (Text widget breaks code sometimes, and it's inconsistent) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 21 Jun 2018 00:00:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44417#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44417#comment:1/1529539232971707</guid>
      <description>&lt;p&gt;
@programmin I assume this code similarly has problems as post content? You should be putting JS code inside of a Custom HTML widget not the Text widget.
&lt;/p&gt;
&lt;p&gt;
For more, see &lt;a class="ext-link" href="https://make.wordpress.org/core/2017/08/01/fixes-to-text-widget-and-introduction-of-custom-html-widget-in-4-8-1/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2017/08/01/fixes-to-text-widget-and-introduction-of-custom-html-widget-in-4-8-1/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>