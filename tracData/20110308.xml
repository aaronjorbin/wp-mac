<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #16764 (PHP5-port - wpdb class) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 08 Mar 2011 23:46:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16764#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16764#comment:2/1299627963639298</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I beg your pardon westi, wpdb is one of the classes that get's replaced more often. This can benefit from visiblity and interface. It's not introducing a different paradigm at least the changes suggested here were not intended to do so.
&lt;/p&gt;
&lt;p&gt;
The opposite is the case, it's a try to only do minimal changes so that overall code can benefit without introducing too much new things, e.g. a factory for wpdb or similar. The ticket here is just a very lightweight refactoring suggestion.
&lt;/p&gt;
&lt;p&gt;
However, you're totally right that PHP 5 is backwards comptabile with classes that do not make use of interfaces and visibility. The downside is, that you can only program against concrete classes and all methods and members are public.
&lt;/p&gt;
&lt;p&gt;
Wpdb has been designed with private members in mind and thanks to PHP 5, that paradigm can now be reflected even in code and not only in documentation. That's far away from a feature request.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16758.2.patch attached to Ticket #16758</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 08 Mar 2011 23:37:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16758/16758.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16758/16758.2.patch/1299627476137743</guid>
      <description>&lt;p&gt;
with _deprecated_function() call#
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16757 (Removal of wpdb::supports_collation()) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 08 Mar 2011 23:29:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16757#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16757#comment:9/1299626946852298</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16757#comment:8" title="Comment 8"&gt;westi&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Please update the patch to adhere to the Coding style and to include the arguments directly in the function call rather than defining variables for single usage.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Updated the patch, please review.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16757.3.patch attached to Ticket #16757</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 08 Mar 2011 23:28:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16757/16757.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16757/16757.3.patch/1299626909955080</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16282 (PHP catchable error with get_term_link and WP3.1RC2) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 08 Mar 2011 23:10:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16282#comment:63</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16282#comment:63/1299625845611633</guid>
      <description>&lt;p&gt;
Reference: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16464" title="#16464: defect (bug): get_term_by() returns WP_Error as well (closed: fixed)"&gt;#16464&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16717" title="#16717: defect (bug): Wrong error handling in query.php::get_posts() (closed: fixed)"&gt;#16717&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16464 (get_term_by() returns WP_Error as well) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 08 Mar 2011 23:07:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16464#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16464#comment:7/1299625670478973</guid>
      <description>&lt;p&gt;
Duplicate: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16717" title="#16717: defect (bug): Wrong error handling in query.php::get_posts() (closed: fixed)"&gt;#16717&lt;/a&gt;, Related &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17506" title="Check for WP_Error return from get_term_by().  Props fabifott, ..."&gt;[17506]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17507" title="Check for WP_Error return from get_term_by().  Props fabifott, ..."&gt;[17507]&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16717 (Wrong error handling in query.php::get_posts()) reopened</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 08 Mar 2011 23:05:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16717#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16717#comment:6/1299625531175126</guid>
      <description>&lt;p&gt;
hmm, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16464" title="#16464: defect (bug): get_term_by() returns WP_Error as well (closed: fixed)"&gt;#16464&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Function should not return WP_Error. We've discussed that before.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #16728 (Canonical redirect ?category_name= to ?cat=) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 08 Mar 2011 23:04:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16728#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16728#comment:8/1299625455104046</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16652 (network_site_url() does not use main site) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 08 Mar 2011 22:56:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16652#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16652#comment:5/1299625005256244</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17511" title="Anchor network and user admins at the network domain and path rather ..."&gt;[17511]&lt;/a&gt;) Anchor network and user admins at the network domain and path rather than at the main site.  Makes the redirects consistent with network_admin_url().  fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16652" title="#16652: defect (bug): network_site_url() does not use main site (closed: fixed)"&gt;#16652&lt;/a&gt; for 3.1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [17511]: Anchor network and user admins at the network domain and path rather ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 08 Mar 2011 22:56:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17511</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17511/1299625003205072</guid>
      <description>&lt;p&gt;
Anchor network and user admins at the network domain and path rather than at the main site.  Makes the redirects consistent with network_admin_url().  fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16652" title="#16652: defect (bug): network_site_url() does not use main site (closed: fixed)"&gt;#16652&lt;/a&gt; for 3.1
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16652 (network_site_url() does not use main site) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 08 Mar 2011 22:56:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16652#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16652#comment:4/1299624974390930</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17510" title="Anchor network and user admins at the network domain and path rather ..."&gt;[17510]&lt;/a&gt;) Anchor network and user admins at the network domain and path rather than at the main site.  Makes the redirects consistent with network_admin_url().  fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16652" title="#16652: defect (bug): network_site_url() does not use main site (closed: fixed)"&gt;#16652&lt;/a&gt; for trunk
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [17510]: Anchor network and user admins at the network domain and path rather ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 08 Mar 2011 22:56:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17510</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17510/1299624972351562</guid>
      <description>&lt;p&gt;
Anchor network and user admins at the network domain and path rather than at the main site.  Makes the redirects consistent with network_admin_url().  fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16652" title="#16652: defect (bug): network_site_url() does not use main site (closed: fixed)"&gt;#16652&lt;/a&gt; for trunk
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16588 (is_admin_bar_showing can return true when it isn't) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 08 Mar 2011 22:49:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16588#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16588#comment:6/1299624557312406</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17509" title="Don't show admin bar on login screen. Props nacin. fixes #16588 for 3.1"&gt;[17509]&lt;/a&gt;) Don't show admin bar on login screen. Props nacin. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16588" title="#16588: defect (bug): is_admin_bar_showing can return true when it isn't (closed: fixed)"&gt;#16588&lt;/a&gt; for 3.1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [17509]: Don't show admin bar on login screen. Props nacin. fixes #16588 for 3.1</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 08 Mar 2011 22:49:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17509</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17509/1299624554937971</guid>
      <description>&lt;p&gt;
Don't show admin bar on login screen. Props nacin. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16588" title="#16588: defect (bug): is_admin_bar_showing can return true when it isn't (closed: fixed)"&gt;#16588&lt;/a&gt; for 3.1
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16588 (is_admin_bar_showing can return true when it isn't) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 08 Mar 2011 22:48:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16588#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16588#comment:5/1299624487635927</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17508" title="Don't show admin bar on login screen. Props nacin. fixes #16588 for trunk"&gt;[17508]&lt;/a&gt;) Don't show admin bar on login screen. Props nacin. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16588" title="#16588: defect (bug): is_admin_bar_showing can return true when it isn't (closed: fixed)"&gt;#16588&lt;/a&gt; for trunk
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [17508]: Don't show admin bar on login screen. Props nacin. fixes #16588 for trunk</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 08 Mar 2011 22:48:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17508</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17508/1299624485519200</guid>
      <description>&lt;p&gt;
Don't show admin bar on login screen. Props nacin. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16588" title="#16588: defect (bug): is_admin_bar_showing can return true when it isn't (closed: fixed)"&gt;#16588&lt;/a&gt; for trunk
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14949 (Login gives false assurance of having logged out) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 08 Mar 2011 22:47:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14949#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14949#comment:10/1299624465078279</guid>
      <description>&lt;p&gt;
IIRC, the reason it shows when logged in is so that you can upgrade from non-SSL to SSL cookies, or vice-versa. I think any patch would have to accommodate allowing logged in users to log in again if their cookies do not match the is_ssl() state when visiting the login page.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16793 (Bulk inline post edit doesn't show categories or tags if the CPT ...) reopened</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 08 Mar 2011 22:14:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16793#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16793#comment:7/1299622455316431</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #16793 (Bulk inline post edit doesn't show categories or tags if the CPT ...) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 08 Mar 2011 22:12:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16793#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16793#comment:6/1299622377565867</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/16793/16793.3.diff" title="Attachment '16793.3.diff' in Ticket #16793"&gt;16793.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/16793/16793.3.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Contrary to popular belief, &lt;code&gt;$('some selector', context)&lt;/code&gt; is not faster than &lt;code&gt;context.find('some selector')&lt;/code&gt;. It's just harder to read.
&lt;/p&gt;
&lt;p&gt;
Also, there was a callback written twice, once for &lt;code&gt;qeRow.keyup&lt;/code&gt; and again for &lt;code&gt;bulkRow.keyup&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16793.3.diff attached to Ticket #16793</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 08 Mar 2011 22:10:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16793/16793.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16793/16793.3.diff/1299622256022393</guid>
      <description>&lt;p&gt;
selector cleanup + DRY
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16717 (Wrong error handling in query.php::get_posts()) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 08 Mar 2011 22:07:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16717#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16717#comment:5/1299622028202975</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17507" title="Check for WP_Error return from get_term_by().  Props fabifott, ..."&gt;[17507]&lt;/a&gt;) Check for WP_Error return from get_term_by().  Props fabifott, kawauso, nacin. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16717" title="#16717: defect (bug): Wrong error handling in query.php::get_posts() (closed: fixed)"&gt;#16717&lt;/a&gt; for 3.1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [17507]: Check for WP_Error return from get_term_by().  Props fabifott, ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 08 Mar 2011 22:07:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17507</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17507/1299622026318673</guid>
      <description>&lt;p&gt;
Check for WP_Error return from get_term_by().  Props fabifott, kawauso, nacin. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16717" title="#16717: defect (bug): Wrong error handling in query.php::get_posts() (closed: fixed)"&gt;#16717&lt;/a&gt; for 3.1
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16717 (Wrong error handling in query.php::get_posts()) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 08 Mar 2011 22:06:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16717#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16717#comment:4/1299621997027256</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17506" title="Check for WP_Error return from get_term_by().  Props fabifott, ..."&gt;[17506]&lt;/a&gt;) Check for WP_Error return from get_term_by().  Props fabifott, kawauso, nacin. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16717" title="#16717: defect (bug): Wrong error handling in query.php::get_posts() (closed: fixed)"&gt;#16717&lt;/a&gt; for trunk
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [17506]: Check for WP_Error return from get_term_by().  Props fabifott, ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 08 Mar 2011 22:06:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17506</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17506/1299621995124214</guid>
      <description>&lt;p&gt;
Check for WP_Error return from get_term_by().  Props fabifott, kawauso, nacin. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16717" title="#16717: defect (bug): Wrong error handling in query.php::get_posts() (closed: fixed)"&gt;#16717&lt;/a&gt; for trunk
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16703 (Post permalinks that include %category% should not query the category) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 08 Mar 2011 22:03:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16703#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16703#comment:11/1299621833505934</guid>
      <description>fixed</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16703 (Post permalinks that include %category% should not query the category) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 08 Mar 2011 22:02:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16703#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16703#comment:10/1299621766314662</guid>
      <description>&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17505" title="Don't perform taxonomy queries for single post requests. Props scribu. ..."&gt;[17505]&lt;/a&gt; for 3.1.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [17505]: Don't perform taxonomy queries for single post requests. Props scribu. ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 08 Mar 2011 22:02:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17505</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17505/1299621732474888</guid>
      <description>&lt;p&gt;
Don't perform taxonomy queries for single post requests. Props scribu. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16703" title="#16703: defect (bug): Post permalinks that include %category% should not query the category (closed: fixed)"&gt;#16703&lt;/a&gt; for trunk
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16703 (Post permalinks that include %category% should not query the category) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 08 Mar 2011 22:01:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16703#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16703#comment:9/1299621703778386</guid>
      <description>&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17504" title="Don't perform taxonomy queries for single post requests. Props scribu. ..."&gt;[17504]&lt;/a&gt; for trunk
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16793 (Bulk inline post edit doesn't show categories or tags if the CPT ...) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 08 Mar 2011 22:01:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16793#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16793#comment:5/1299621681463043</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17504" title="Don't perform taxonomy queries for single post requests. Props scribu. ..."&gt;[17504]&lt;/a&gt;) Don't perform taxonomy queries for single post requests. Props scribu. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16793" title="#16793: defect (bug): Bulk inline post edit doesn't show categories or tags if the CPT ... (closed: fixed)"&gt;#16793&lt;/a&gt; for trunk
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [17504]: Don't perform taxonomy queries for single post requests. Props scribu. ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 08 Mar 2011 22:01:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17504</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17504/1299621679334330</guid>
      <description>&lt;p&gt;
Don't perform taxonomy queries for single post requests. Props scribu. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16793" title="#16793: defect (bug): Bulk inline post edit doesn't show categories or tags if the CPT ... (closed: fixed)"&gt;#16793&lt;/a&gt; for trunk
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>16793.2.diff attached to Ticket #16793</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 08 Mar 2011 21:58:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16793/16793.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16793/16793.2.diff/1299621526968806</guid>
      <description>&lt;p&gt;
optimize selectors
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16659 (Admin bar shows up when clicking preview link after theme installation) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 08 Mar 2011 21:54:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16659#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16659#comment:5/1299621290671632</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17503" title="Mark theme preview iframe as a preview_iframe so that the admin bar ..."&gt;[17503]&lt;/a&gt;) Mark theme preview iframe as a preview_iframe so that the admin bar doesn't show.  Props tetele. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16659" title="#16659: defect (bug): Admin bar shows up when clicking preview link after theme installation (closed: fixed)"&gt;#16659&lt;/a&gt; for 3.1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [17503]: Mark theme preview iframe as a preview_iframe so that the admin bar ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 08 Mar 2011 21:54:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17503</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17503/1299621288533588</guid>
      <description>&lt;p&gt;
Mark theme preview iframe as a preview_iframe so that the admin bar doesn't show.  Props tetele. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16659" title="#16659: defect (bug): Admin bar shows up when clicking preview link after theme installation (closed: fixed)"&gt;#16659&lt;/a&gt; for 3.1
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16659 (Admin bar shows up when clicking preview link after theme installation) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 08 Mar 2011 21:54:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16659#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16659#comment:4/1299621248667566</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17502" title="Mark theme preview iframe as a preview_iframe so that the admin bar ..."&gt;[17502]&lt;/a&gt;) Mark theme preview iframe as a preview_iframe so that the admin bar doesn't show.  Props tetele. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16659" title="#16659: defect (bug): Admin bar shows up when clicking preview link after theme installation (closed: fixed)"&gt;#16659&lt;/a&gt; for trunk
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [17502]: Mark theme preview iframe as a preview_iframe so that the admin bar ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 08 Mar 2011 21:54:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17502</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17502/1299621245952450</guid>
      <description>&lt;p&gt;
Mark theme preview iframe as a preview_iframe so that the admin bar doesn't show.  Props tetele. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16659" title="#16659: defect (bug): Admin bar shows up when clicking preview link after theme installation (closed: fixed)"&gt;#16659&lt;/a&gt; for trunk
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16740 (Calling wpmu_delete_blog with $blog_id delete all database tables) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 08 Mar 2011 21:49:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16740#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16740#comment:6/1299620961721464</guid>
      <description>&lt;p&gt;
Older MU installs will have a wp_1_* prefix for blog ID 1.  These patches would prevent deleting that blog even though it isn't dangerous.  Probably not worth caring about, however.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16756 (PHP5-port - Access Violations on wpdb::$prefix) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 08 Mar 2011 21:46:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16756#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16756#comment:7/1299620790799544</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16768 (PHP5-port - Class Constructors Review for 3.2) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 08 Mar 2011 21:46:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16768#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16768#comment:4/1299620779097132</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16782 (PHP5-Port - WP_Error Class) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 08 Mar 2011 21:46:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16782#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16782#comment:9/1299620769418575</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16781 (is_wp_error() simplification) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 08 Mar 2011 21:45:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16781#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16781#comment:2/1299620758338384</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16767 (PHP5-port - De-Reference as needed.) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 08 Mar 2011 21:45:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16767#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16767#comment:3/1299620743426283</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16697 (WordPress up to version 3.1 does not work with MySQL sql_mode = TRADITIONAL) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 08 Mar 2011 21:37:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16697#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16697#comment:2/1299620263667342</guid>
      <description>duplicate: &lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14978" title="#14978: feature request: MySQL strict mode (closed: maybelater)"&gt;#14978&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8857" title="#8857: enhancement: Make WP MySQL strict mode compliant (closed: wontfix)"&gt;#8857&lt;/a&gt; and other tickets.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16627 (Rewrite query vars are stripped from custom taxonomy page URLs via ...) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 08 Mar 2011 21:33:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16627#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16627#comment:2/1299620021767772</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16798 (Admin bar edit action is affected by query_posts, tax_query) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 08 Mar 2011 21:31:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16798#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16798#comment:3/1299619912675333</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16798#comment:2" title="Comment 2"&gt;kanuck54&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If that's supposed to be the idea there, I would expect the "edit" link to disappear entirely. It doesn't make a lot of sense to offer me the opportunity to edit whichever of the many categories happens to be last in the list; it's confusing.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No argument there.  It is not very useful or predictable.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16754 (PHP5-port - srand()) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 08 Mar 2011 21:31:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16754#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16754#comment:1/1299619898839821</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16753 (PHP5-port - microtime() use) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 08 Mar 2011 21:31:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16753#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16753#comment:2/1299619880464158</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16800 (Number of comments in dashboard is not the same as that on articles) created</title>
      
        <dc:creator>pykko</dc:creator>

      <pubDate>Tue, 08 Mar 2011 21:02:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16800</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16800/1299618159239689</guid>
      <description>&lt;p&gt;
I'm using Wordpress 3.1 on a self hosted website.
&lt;/p&gt;
&lt;p&gt;
On a particular post I compared the number of comments that appear in Dashboard (after clicking "show more comments" till the end) with the real number shown on that post.
&lt;/p&gt;
&lt;p&gt;
To my stupefaction, the number shown in dashboard is smaller. I have 49 comments on my article, and dashboard on that article shows only 35.
&lt;/p&gt;
&lt;p&gt;
I think this is a bug. Can you investigate and fix ?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16798 (Admin bar edit action is affected by query_posts, tax_query) updated</title>
      
        <dc:creator>kanuck54</dc:creator>

      <pubDate>Tue, 08 Mar 2011 20:09:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16798#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16798#comment:2/1299614972977588</guid>
      <description>&lt;p&gt;
If that's supposed to be the idea there, I would expect the "edit" link to disappear entirely. It doesn't make a lot of sense to offer me the opportunity to edit whichever of the many categories happens to be last in the list; it's confusing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16795 (Add `wp-image` to images in posts) closed</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 08 Mar 2011 19:39:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16795#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16795#comment:4/1299613175069286</guid>
      <description>wontfix: &lt;p&gt;
Hi Cyberskull,
&lt;/p&gt;
&lt;p&gt;
I can understand that you might want to have that to more easy create your theme or modify your homepage. However the feature you request is rather trivial to do, I've added a plugin that you can use (tested with PHP 5.3.5) that does the job.
&lt;/p&gt;
&lt;p&gt;
Additionally there is a patch that modifies media.php with what you asked for.
&lt;/p&gt;
&lt;p&gt;
If in future you have a problem with your site and you do not know how to do something, please first talk with other worpdress users, e.g. in the &lt;a class="ext-link" href="http://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;support forums&lt;/a&gt; or sites like &lt;a class="ext-link" href="http://wordpress.stackexchange.com/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;wordpress answers&lt;/a&gt;. It's not that I want to prevent you from opening a ticket but it's not always clear upfront if a certain issue demands a ticket or can be solved individually with a plugin and in case there is more demand over time could become part of wordpress.
&lt;/p&gt;
&lt;p&gt;
I'm sure that you would have found a solution for your problem on the bespoken sites pretty quickly.
&lt;/p&gt;
&lt;p&gt;
So please do not feel offended if I close now the ticket. If you think it's really a bummer, you can consider re-opening it. But for now I would rate this as plugin-material.
&lt;/p&gt;
&lt;p&gt;
Additionally: This is not a fix, but as long as CSS 3 is an option for you, you can make use of &lt;a class="ext-link" href="http://www.w3.org/TR/css3-selectors/#attribute-substrings"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;attribute susbtring selectors&lt;/a&gt; probably.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>wp-image.php attached to Ticket #16795</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 08 Mar 2011 19:31:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16795/wp-image.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16795/wp-image.php/1299612683807432</guid>
      <description>&lt;p&gt;
Plugin Variant - Works as MU-Plugin as well
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16798 (Admin bar edit action is affected by query_posts, tax_query) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 08 Mar 2011 19:30:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16798#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16798#comment:1/1299612647109470</guid>
      <description>&lt;p&gt;
That all sounds like expected behavior.  "Edit Category" shows because a taxonomy was queried, not a particular post.  Linking to "/wp-admin/edit.php?taxonomy=category&amp;amp;tag_ID=14" would likely be more useful than linking to edit-tags.php, but either way showing Edit Category is correct here.
&lt;/p&gt;
&lt;p&gt;
If you don't want the admin bar and other areas to reflect queries made within your template, use get_posts() instead of query_posts().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16795.patch attached to Ticket #16795</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 08 Mar 2011 19:30:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16795/16795.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16795/16795.patch/1299612646222933</guid>
      <description>&lt;p&gt;
Trivial to patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16799 (Bloated Custom Menus) created</title>
      
        <dc:creator>kingkool68</dc:creator>

      <pubDate>Tue, 08 Mar 2011 19:26:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16799</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16799/1299612399042657</guid>
      <description>&lt;p&gt;
tl;dr = WordPress should limit the size of auto generated descriptions for menus. Ideally there should be no menu item descriptions.
&lt;/p&gt;
&lt;p&gt;
I'm working on a project that uses a lot of custom menus. So many custom menus in fact that editing them nearly brings my server to it's knees. (10 menus x 70 items each maximum 2 levels deep)
&lt;/p&gt;
&lt;p&gt;
The biggest problem I found is WordPress loads a description with each menu item. I had to turn off JavaScript to even see this field and that's when I saw large blobs of content are being loaded with each and every menu items.
&lt;/p&gt;
&lt;p&gt;
When loading one menu Firebug clocked the HTML page weighing in at 2.3MB. I went to my database and ran the following SQL to remove the offending blurbs of bloated text...
&lt;/p&gt;
&lt;p&gt;
UPDATE &lt;code&gt;posts&lt;/code&gt; SET &lt;code&gt;post_content&lt;/code&gt; = &lt;em&gt; WHERE &lt;code&gt;post_type&lt;/code&gt; LIKE 'nav_menu_item';
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
This reduced the page weight by half to 1.1MB. The menu still took a bit to load but now I could save it back to the database successfully.
&lt;/p&gt;
&lt;p&gt;
Other work arounds to make custom menus usable included raising the max execution time for PHP on my server and increasing the $_POST and $_GET size limit.
&lt;/p&gt;
&lt;p&gt;
Custom menus need to go on diet.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16660 (Post body disappears after publish) updated</title>
      
        <dc:creator>semrocc</dc:creator>

      <pubDate>Tue, 08 Mar 2011 19:11:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16660#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16660#comment:15/1299611510196471</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16797 (Edit Tags admin + custom post type + custom taxonomy) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 08 Mar 2011 19:10:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16797#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16797#comment:1/1299611416637461</guid>
      <description>&lt;p&gt;
The incorrect count has been mentioned before: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14076" title="#14076: defect (bug): Misleading post count on taxonomy screen (closed: duplicate)"&gt;#14076&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16798 (Admin bar edit action is affected by query_posts, tax_query) created</title>
      
        <dc:creator>kanuck54</dc:creator>

      <pubDate>Tue, 08 Mar 2011 19:09:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16798</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16798/1299611341084549</guid>
      <description>&lt;p&gt;
I don't know if this part is a bug, but I'm guessing yes:
&lt;/p&gt;
&lt;p&gt;
If I run &lt;code&gt;query_posts()&lt;/code&gt; in a custom post type's template, I lose the admin bar's "edit" action.
&lt;/p&gt;
&lt;p&gt;
This part, however, is definitely a bug:
&lt;/p&gt;
&lt;p&gt;
If I include a &lt;code&gt;tax_query&lt;/code&gt; in my &lt;code&gt;query_posts()&lt;/code&gt;, my edit link actually &lt;em&gt;changes&lt;/em&gt; to an edit link for the last item in the array that was given to the &lt;code&gt;tax_query&lt;/code&gt;, with the label "Edit Category."
&lt;/p&gt;
&lt;p&gt;
Here's the minimum offending code to reproduce, placed into a custom post type template:
&lt;/p&gt;
&lt;pre class="wiki"&gt;query_posts( array(
	'post_type' =&amp;gt; 'fp_toy',
	'tax_query' =&amp;gt; array(
		array(
			'taxonomy' =&amp;gt; 'fp_gender',
			'field' =&amp;gt; 'ID',
			'terms' =&amp;gt; array(14)
		)
	),
) );
&lt;/pre&gt;&lt;p&gt;
Now my "Edit Toy" button says "Edit Category" instead, and points to &lt;code&gt;edit-tags.php?action=edit&amp;amp;taxonomy=fp_gender&amp;amp;tag_ID=14&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Ideally I would expect the admin bar's edit action to be unaffected by what happens inside the template. And I definitely don't expect a completely unrelated action to show up instead!
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16797 (Edit Tags admin + custom post type + custom taxonomy) created</title>
      
        <dc:creator>kanuck54</dc:creator>

      <pubDate>Tue, 08 Mar 2011 17:20:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16797</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16797/1299604830798809</guid>
      <description>&lt;p&gt;
I've registered the custom post type &lt;code&gt;fp_toy&lt;/code&gt;, and the custom taxonomy &lt;code&gt;fp_milestone&lt;/code&gt;. Both have &lt;code&gt;show_ui&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt;. I have the &lt;code&gt;fp_milestone&lt;/code&gt; taxonomy associated with both &lt;code&gt;fp_toy&lt;/code&gt; and &lt;code&gt;post&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
If I click Toys &amp;gt; Milestones in the admin, the URL is &lt;code&gt;edit-tags.php?taxonomy=fp_milestone&amp;amp;post_type=fp_toy&lt;/code&gt;; but in the navigation menu, it appears that I'm in Posts &amp;gt; Milestones. (This is minor, but may help with diagnosis.)
&lt;/p&gt;
&lt;p&gt;
Worse, in the list of Milestones, I see an automatically populated column named "Toy," which would be correct if it were indicating the number of Toys per Milestone; but it is counting &lt;code&gt;all&lt;/code&gt; posts associated with a Milestone, not just those with a &lt;code&gt;post_type&lt;/code&gt; of &lt;code&gt;fp_toy&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Worst of all, clicking this (incorrect) post count should take me to &lt;code&gt;edit.php?fp_milestone=create&amp;amp;post_type=fp_toy&lt;/code&gt;; instead it's taking me to &lt;code&gt;edit.php?fp_milestone=create&amp;amp;post_type=post&lt;/code&gt;. The result is that I have no way (without URL manipulation) to see all Toys for a given Milestone.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16796 (_parse_meta_query with value 0) updated</title>
      
        <dc:creator>ptietz</dc:creator>

      <pubDate>Tue, 08 Mar 2011 15:44:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16796#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16796#comment:2/1299599059916500</guid>
      <description>&lt;p&gt;
okay, searched for the wrong term &amp;gt;.&amp;lt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12267 (Upgrade loop objects to provide identical presentational interfaces) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Tue, 08 Mar 2011 15:38:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12267#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12267#comment:42/1299598684157103</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12267#comment:39" title="Comment 39"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;pre class="wiki"&gt;function __call( $method, $args ) {
  array_unshift( $args, $this );
  return do_action_ref_array( "post_{$method}", $args );
}
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
Also, I think this in addition to making things devilishly hard to debug, misses one of the big benefits of this proposal, which is having the same set of standard properties and methods across different types of objects.
&lt;/p&gt;
&lt;p&gt;
For example, I want to be able to be able to return all sorts of objects after a search.  Then I should be able to iterate over all of them with links and summaries, etc., agnostic about the particular kind of object returned.  That way categories, posts, pages, custom post types, etc., can all be part of the Loop and use the same link, headline, and paragraph markup.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16796 (_parse_meta_query with value 0) closed</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Tue, 08 Mar 2011 15:37:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16796#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16796#comment:1/1299598654096840</guid>
      <description>duplicate: &lt;p&gt;
Replying to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16796" title="#16796: defect (bug): _parse_meta_query with value 0 (closed: duplicate)"&gt;ptietz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
(PS: This is my first bug report, so please excuse me, if I have done something wrong)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Report is good, but it has been reported a few times already. Thanks though.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16573" title="#16573: defect (bug): meta_query doesnt support &amp;#34;empty&amp;#34; values (closed: duplicate)"&gt;#16573&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16735" title="#16735: defect (bug): Querying against empty meta_value should work (closed: duplicate)"&gt;#16735&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15292" title="#15292: defect (bug): It's not possible to check for &amp;#34;meta_value = 0&amp;#34; in wp_query-&amp;gt;get_posts (closed: fixed)"&gt;#15292&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #12267 (Upgrade loop objects to provide identical presentational interfaces) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Tue, 08 Mar 2011 15:32:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12267#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12267#comment:41/1299598374669209</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12267#comment:39" title="Comment 39"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I was going to say it's going to be hard for multiple plugins to extend these classes.
&lt;/p&gt;
&lt;p&gt;
But then I figured we can use the &lt;code&gt;__call()&lt;/code&gt; magic method, since we're on PHP5 now:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function __call( $method, $args ) {
  array_unshift( $args, $this );
  return do_action_ref_array( "post_{$method}", $args );
}
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
We don't need that.  The descendant constructors can just assign the respective properties their object-specific values.
&lt;/p&gt;
&lt;p&gt;
For example, the ancestor class defines the &lt;code&gt;get_title&lt;/code&gt; method:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function get_title() {
   return $this-&amp;gt;_title;
}
&lt;/pre&gt;&lt;p&gt;
So for post objects upon instantiation:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$this-&amp;gt;_title = $this-&amp;gt;post_title;
&lt;/pre&gt;&lt;p&gt;
and for terms:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$this-&amp;gt;_title = $this-&amp;gt;name;
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16796 (_parse_meta_query with value 0) created</title>
      
        <dc:creator>ptietz</dc:creator>

      <pubDate>Tue, 08 Mar 2011 15:24:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16796</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16796/1299597885713438</guid>
      <description>&lt;p&gt;
Hey, guys.
&lt;/p&gt;
&lt;p&gt;
i found this when writing a hotel search, where you can search by stars, which is actually a custom field.
&lt;/p&gt;
&lt;p&gt;
So I created a little search script using WP_Query, which is now supporting "meta_query" since WP 3.1.
&lt;/p&gt;
&lt;p&gt;
But if there are 0 stars set, the meta_value is ignored.
This is because of what's happening in &lt;strong&gt;meta.php on line 461&lt;/strong&gt;, where the actual value "0" fails the !empty() condition.
&lt;/p&gt;
&lt;p&gt;
Hope, this helps. Greetings from Germany!
&lt;/p&gt;
&lt;p&gt;
(PS: This is my first bug report, so please excuse me, if I have done something wrong)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #13575 (wp_max_upload_size() is not taking memory limit into account) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 08 Mar 2011 15:14:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13575#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13575#comment:7/1299597283023164</guid>
      <description>&lt;p&gt;
Did run some tests now, lowering the memory_limit configuration value while having more memory in use than the set value will not fatal error. Method in patch looks save.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13575 (wp_max_upload_size() is not taking memory limit into account) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 08 Mar 2011 14:53:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13575#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13575#comment:6/1299596012269447</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13575#comment:4" title="Comment 4"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
A filter is not needed here, However, the ini_get() may return incorrect information, It may have been upped already by something such as WP_MEMORY_LIMIT.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I've uploaded some new patches that reflect both concerns, the filter and the original value. This still needs some tests (e.g. what happens if 64 MB are consumed but setting get's restored to 16 MB original value - would that do a fatal error?) but tries to address accessing the original settings value.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>13575.4.patch attached to Ticket #13575</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 08 Mar 2011 14:26:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13575/13575.4.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13575/13575.4.patch/1299594408998250</guid>
      <description>&lt;p&gt;
Better compare against -1 for no memory limit.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16769 (Make WP_Error extending Exception to make it throw-able) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Tue, 08 Mar 2011 14:20:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16769#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16769#comment:10/1299594046565672</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16769#comment:8" title="Comment 8"&gt;westi&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The real bug is that nothing actually checks for the WP_Error that is returned.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
One of the great things about thrown exceptions is that you can reduce the number of error checks.  Currently we have an error-checking structure roughly like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function a (){
   $b = b();
   if ( is_wp_error( $b ) ) {
      return $b;
   } else {
      $c = c( $b );
      if ( is_wp_error( $c ) ) {
         return $c;
      } else {
         echo $c-&amp;gt;property;
      }
}
function b (){...}
function c (){...}
$result = a();
if ( is_wp_error( $result ) ) {
   echo $result-&amp;gt;get_error_message();
}
&lt;/pre&gt;&lt;p&gt;
With thrown exceptions, we never have to check whether the returned object is an error object.  PHP takes care of that for us:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function a (){
   $b = b();
   $c = c( $b );
   echo $c-&amp;gt;property;
}
function b (){...}
function c (){...}
try {
   $result = a();
} catch( WP_Exception $err ) {
   echo $result-&amp;gt;getMessage();
}
&lt;/pre&gt;&lt;p&gt;
The second example is easier to grok and does less work to achieve the same result.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Switching to throwing the Error Object instead makes it harder to track error handling correctly in my experience.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
One simple thing we can do to address that is have different exception classes for different code purposes, and throw the relevant kind of exception:
&lt;/p&gt;
&lt;pre class="wiki"&gt;class WP_DB_Exception extends WP_Exception {}
class WP_Taxonomy_Exception extends WP_Exception {}
class WP_Capabilities_Exception extends WP_Exception {}
&lt;/pre&gt;&lt;p&gt;
So you might show a WP_DB_Exception message only when in debug mode, but always show the WP_Capabilities_Exception.  (These aren't great examples but you get the idea.)
&lt;/p&gt;
&lt;p&gt;
And there is the Exception &lt;code&gt;getTrace&lt;/code&gt; method if you really want to track the origin of the Exception in the code.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>13575.3.patch attached to Ticket #13575</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 08 Mar 2011 14:20:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13575/13575.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13575/13575.3.patch/1299594028614867</guid>
      <description>&lt;p&gt;
Updated patch reflecting original php.ini memory_limit value and only if memory_limit is active. W/o a filter.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>13575.2.patch attached to Ticket #13575</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 08 Mar 2011 14:19:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13575/13575.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13575/13575.2.patch/1299593974933133</guid>
      <description>&lt;p&gt;
Updated patch reflecting original php.ini memory_limit value and only if memory_limit is active. Containing a filter.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #13575 (wp_max_upload_size() is not taking memory limit into account) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 08 Mar 2011 13:51:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13575#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13575#comment:5/1299592279609931</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13575#comment:4" title="Comment 4"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
I &lt;a class="ext-link" href="http://core.trac.wordpress.org/attachment/ticket/13575/13575.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;added a demo script&lt;/a&gt; which outputs the following (Fedora 13):
&lt;/p&gt;
&lt;pre class="wiki"&gt;initial value: "128M"
new value: "42M"
old value: "128M"
current value: "42M"
original value: "128M"
&lt;/pre&gt;&lt;p&gt;
So the original value should be taken into account as that's the one that comes into play at times of the upload procedure.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>13575.php attached to Ticket #13575</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 08 Mar 2011 13:42:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13575/13575.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13575/13575.php/1299591773923321</guid>
      <description>&lt;p&gt;
ini_set(), ini_get() and ini_restore() php example
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16769 (Make WP_Error extending Exception to make it throw-able) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 08 Mar 2011 11:30:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16769#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16769#comment:9/1299583849213216</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16769#comment:8" title="Comment 8"&gt;westi&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The real bug is that nothing actually checks for the WP_Error that is returned.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If you consider that a bug, please open a ticket. We can reference it here while keeping the discussion on topic. The suggestion made in this ticket is not about rewriting the code wherever WP_Error is in use.
&lt;/p&gt;
&lt;p&gt;
This is not going to be constructive at the moment.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16787 (Removing title from a page (blank title) results in collapsed UI ...) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 08 Mar 2011 10:51:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16787#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16787#comment:3/1299581510077341</guid>
      <description>&lt;p&gt;
to me it looks like as if the wrapping element is not taking care of such. Adding a default title would probably the most easy hotfix or just adding good old &amp;amp;nbsp; to the output.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16794 (pomo/streams.php str_split() suggestion ?) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 08 Mar 2011 10:19:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16794#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16794#comment:4/1299579556619614</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16794#comment:2" title="Comment 2"&gt;mrasnika&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It seems that this "optimization" is not going to help at all since all arguments are passed by reference UNTIL/UNLESS they are modified:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;em&gt;PHP already optimises it - variables are assigned using copy-on-write, and objects are passed by reference&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://stackoverflow.com/questions/496669/are-php-strings-immutable"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://stackoverflow.com/questions/496669/are-php-strings-immutable&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
And as it's copy on write, it's even counter-productive to pass by reference to built-in functions as this does even increase the memory usage.
&lt;/p&gt;
&lt;p&gt;
If you need to be able to use more than 256MB of memory, you can use the working patch &lt;a class="ext-link" href="http://core.trac.wordpress.org/attachment/ticket/13847/13847.patch"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;13847.patch&lt;/a&gt; (Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13847" title="#13847: defect (bug): WP increasing the memory above other server limit (closed: fixed)"&gt;#13847&lt;/a&gt;) which replaces the hard-encoded memory limit value with a configure-able constant.
&lt;/p&gt;
&lt;p&gt;
However if you're looking for memory optimizations for pomo, extending classes could be overwrite parent functions and access their resources more optimized.
&lt;/p&gt;
&lt;p&gt;
A review of of the composition of the final objects might reveal some structural benefits as well, AFAIK POMO tries to combine single and multibyte string operations with string- or file-io.
&lt;/p&gt;
&lt;p&gt;
But that's structural and needs a refactoring plus testing if it really helps. So a lot of work.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16769 (Make WP_Error extending Exception to make it throw-able) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Tue, 08 Mar 2011 09:30:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16769#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16769#comment:8/1299576623231473</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16769#comment:7" title="Comment 7"&gt;filosofo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We currently have poor-man's exceptions in a number of places.  For example, &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-includes/ms-functions.php#L276"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;here&lt;/a&gt; a &lt;code&gt;WP_Error&lt;/code&gt; object is returned, but nothing in core WP does anything with that return value.  So upon error the logic branches, an error object is created, but nothing can be done with the helpful information in the way that a thrown exception could be caught.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The real bug is that nothing actually checks for the WP_Error that is returned.
&lt;/p&gt;
&lt;p&gt;
Switching to throwing the Error Object instead makes it harder to track error handling correctly in my experience.
&lt;/p&gt;
&lt;p&gt;
Ideally everywhere we could return a WP_Error we should be checking for it in the calling code and anywhere we don't is a bug.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16788 (Ampersands in e-mail address become invalid) updated</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Tue, 08 Mar 2011 07:24:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16788#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16788#comment:6/1299569064438617</guid>
      <description>&lt;p&gt;
Actually, upon further investigation, &lt;code&gt;sanitize_email()&lt;/code&gt; seems to be innocent.
&lt;/p&gt;
&lt;p&gt;
Here's a more accurate recap of the process:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;User data is sanitized before being saved to the database. &lt;code&gt;pre_user_email&lt;/code&gt; filter is applied to &lt;code&gt;user_email&lt;/code&gt;, which passes the email to &lt;code&gt;wp_filter_kses()&lt;/code&gt;. Here, the email address is mutilated the first time. (&lt;code&gt;t&amp;amp;est@test.com&lt;/code&gt; becomes &lt;code&gt;t&amp;amp;amp;est@test.com&lt;/code&gt;)
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;When the user info is displayed in &lt;code&gt;wp-admin/users.php&lt;/code&gt;, &lt;code&gt;sanitize_user_object()&lt;/code&gt; is called, which in turn applies &lt;code&gt;user_email&lt;/code&gt; filter to &lt;code&gt;user_email&lt;/code&gt;. This results in &lt;code&gt;wp_kses&lt;/code&gt; being called when &lt;code&gt;is_admin()&lt;/code&gt;, thus, double-escape the email address (&lt;code&gt;t&amp;amp;amp;est@test.com&lt;/code&gt; becomes &lt;code&gt;t&amp;amp;amp;ampest@test.com&lt;/code&gt;).
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>patchCategoryWalkerSkippedCategory.patch attached to Ticket #16792</title>
      
        <dc:creator>samo9789</dc:creator>

      <pubDate>Tue, 08 Mar 2011 07:16:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16792/patchCategoryWalkerSkippedCategory.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16792/patchCategoryWalkerSkippedCategory.patch/1299568573395419</guid>
      <description>&lt;p&gt;
patch for described minor bug
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16788 (Ampersands in e-mail address become invalid) updated</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Tue, 08 Mar 2011 06:59:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16788#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16788#comment:5/1299567571296336</guid>
      <description>&lt;p&gt;
Network Users table don't have this issue. This is because in &lt;code&gt;class-wp-users-list-table.php&lt;/code&gt;, we &lt;code&gt;sanitize_user_object()&lt;/code&gt; before outputting user details, while in &lt;code&gt;class-wp-ms-users-list-table.php&lt;/code&gt;, we don't. That being said, I still think it's appropriate to sanitize user object in Network Users table as well before printing out.
&lt;/p&gt;
&lt;p&gt;
When user object is sanitized, &lt;code&gt;user_email&lt;/code&gt; filter is applied on the user's email. As a result, the email address is passed through &lt;code&gt;sanitize_email()&lt;/code&gt;, resulting in &lt;code&gt;t&amp;amp;amp;est@eamann.com&lt;/code&gt;. Now if you're in the admin panel, &lt;code&gt;wp_filter_kses()&lt;/code&gt; will further mutilate the email address, resulting in &lt;code&gt;t&amp;amp;amp;ampest@eamann.com&lt;/code&gt;. See &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-includes/default-filters.php#L53"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;this code&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16692 (Add hook to allow plugins to implement custom $wp-&gt;parse_request() ...) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 08 Mar 2011 06:52:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16692#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16692#comment:13/1299567158995658</guid>
      <description>&lt;p&gt;
I've thought about it and it's just not the same thing.
&lt;/p&gt;
&lt;p&gt;
I think the reason all these approaches feel clunky is because the part you're interested in, the rewrite logic, should be in WP_Rewrite in the first place.
&lt;/p&gt;
&lt;p&gt;
So, a better approach would be to create a match_rule() method in WP_Rewrite and then hook that to a 'match_rule' action called from parse_request().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12267 (Upgrade loop objects to provide identical presentational interfaces) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Tue, 08 Mar 2011 06:33:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12267#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12267#comment:40/1299566039461369</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12267#comment:36" title="Comment 36"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There wouldn't be a WP_Page_Object, since then it would only be fair to have a different class for each post type, which isn't obvious how to do or even necessary.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Then I am confused by the examples I've seen thus far on this ticket.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12267#comment:39" title="Comment 39"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
But then I figured we can use the &lt;code&gt;__call()&lt;/code&gt; magic method, since we're on PHP5 now:
...
Hooks save the day again. :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Nice.  That technique might be useful &lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/16692#comment:12"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;elsewhere&lt;/a&gt; too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16787 (Removing title from a page (blank title) results in collapsed UI ...) updated</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Tue, 08 Mar 2011 06:33:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16787#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16787#comment:2/1299566000672344</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
A quick fix would be adding CSS min-height to the title (patch attached). Another direction would be outputting a default title such as &lt;code&gt;(No title)&lt;/code&gt; to keep the title box occupied when there's nothing there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16692 (Add hook to allow plugins to implement custom $wp-&gt;parse_request() ...) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Tue, 08 Mar 2011 06:33:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16692#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16692#comment:12/1299565990409096</guid>
      <description>&lt;p&gt;
Maybe we could use a similar strategy as &lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/12267?replyto=39#comment:39"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;here&lt;/a&gt;?  @scribu, would you mind attempting to apply it?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16787.diff attached to Ticket #16787</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Tue, 08 Mar 2011 06:32:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16787/16787.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16787/16787.diff/1299565933639238</guid>
      <description>&lt;p&gt;
set &lt;code&gt;min-height&lt;/code&gt; for menu item title
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16662 (Permalinks not working with 'category') updated</title>
      
        <dc:creator>ashfame</dc:creator>

      <pubDate>Tue, 08 Mar 2011 05:32:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16662#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16662#comment:19/1299562346575902</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16662#comment:18" title="Comment 18"&gt;greuben&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16662#comment:17" title="Comment 17"&gt;ashfame&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16662#comment:15" title="Comment 15"&gt;greuben&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
16662.3.diff will not work as expected if you have not reverted &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/16918" title="Add WP Rewrite root to front of add_permastruct() call when adding a ..."&gt;[16918]&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Also, make sure you've flushed your rewrite rules (just visit Settings -&amp;gt; Permalinks)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I tried your patch (also reverted &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/16918" title="Add WP Rewrite root to front of add_permastruct() call when adding a ..."&gt;[16918]&lt;/a&gt;) on one of the affected sites but still category and tags pages return 404. Please note that Advanced Permalinks plugin (known to cause issues with WP 3.1) was in use when it was upgraded, so it might have to do something with that. Its disabled at the moment.
&lt;/p&gt;
&lt;p&gt;
I recreated my .htaccess file after making changes in files. Anything else that I should try?
&lt;/p&gt;
&lt;pre class="wiki"&gt;Permalink custom structure: /%postname%/
Category base: cat
Tag base:
&lt;/pre&gt;&lt;p&gt;
&lt;strong&gt;Edit&lt;/strong&gt;: My forum thread detailing things is &lt;a class="ext-link" href="http://wordpress.org/support/topic/wordpress-category-gives-404-after-moving-to-a-different-domain?replies=22"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/wordpress-category-gives-404-after-moving-to-a-different-domain?replies=22&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I've just tried it with /%postname%/ permalink and 'cat' as category base. It is working for me.
&lt;/p&gt;
&lt;p&gt;
Permalinks are broken only if I use that "Advanced Permalinks" plugin. After disabling it did you flush rewrite rules?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes I resaved my permalinks. I think they get flushed on visiting the permalinks setting page only or I need to do that explicitly?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16795 (Add `wp-image` to images in posts) updated</title>
      
        <dc:creator>cyberskull</dc:creator>

      <pubDate>Tue, 08 Mar 2011 03:34:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16795#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16795#comment:3/1299555243236329</guid>
      <description>&lt;p&gt;
Mainly I wanted a way to automatically style images from my wordpress media library while ignoring plug-in images in the content area.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16791 (Save timestamp of user's last login to usermeta) updated</title>
      
        <dc:creator>joelhardi</dc:creator>

      <pubDate>Tue, 08 Mar 2011 03:10:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16791#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16791#comment:2/1299553803952192</guid>
      <description>&lt;p&gt;
Fair enough, thanks for considering it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16795 (Add `wp-image` to images in posts) updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Tue, 08 Mar 2011 02:36:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16795#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16795#comment:2/1299551814286762</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I have no problem selecting all images within posts by CSS. Like this, for Twenty Ten:
&lt;/p&gt;
&lt;p&gt;
.entry-content img {}
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16795 (Add `wp-image` to images in posts) updated</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Tue, 08 Mar 2011 02:31:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16795#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16795#comment:1/1299551519025602</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Within a theme you can use other CSS rules for that, such as '#content .post img'.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16794 (pomo/streams.php str_split() suggestion ?) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 08 Mar 2011 02:22:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16794#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16794#comment:3/1299550976597556</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16461 (CSS3 gradient replacements for images and rework existing) updated</title>
      
        <dc:creator>cyberskull</dc:creator>

      <pubDate>Tue, 08 Mar 2011 01:02:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16461#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16461#comment:8/1299546174897858</guid>
      <description>&lt;p&gt;
I did the same for the admin bar in trac &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16726" title="#16726: enhancement: Admin Bar CSS gradient update (closed: fixed)"&gt;#16726&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16795 (Add `wp-image` to images in posts) created</title>
      
        <dc:creator>cyberskull</dc:creator>

      <pubDate>Tue, 08 Mar 2011 01:00:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16795</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16795/1299546053734204</guid>
      <description>&lt;p&gt;
Currently an image in in a post has the class of "image-SIZE wp-image-INT" to something like "wp-library-image image-SIZE wp-image-INT" so we can have a class for all images inserted into a post so we don't have to awkwardly code CSS for the various &lt;code&gt;image-SIZEs&lt;/code&gt; and the &lt;code&gt;wp-image-INTs&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16793 (Bulk inline post edit doesn't show categories or tags if the CPT ...) updated</title>
      
        <dc:creator>markmcwilliams</dc:creator>

      <pubDate>Tue, 08 Mar 2011 00:56:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16793#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16793#comment:4/1299545803329688</guid>
      <description>&lt;p&gt;
OK so I was holding it wrong, I can confirm the initial error, and that the patch works! :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16793 (Bulk inline post edit doesn't show categories or tags if the CPT ...) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 08 Mar 2011 00:53:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16793#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16793#comment:3/1299545592106547</guid>
      <description>&lt;p&gt;
Note that we're talking about the Edit option in the dropdown, not the quick action Edit link on each post.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16793 (Bulk inline post edit doesn't show categories or tags if the CPT ...) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 08 Mar 2011 00:51:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16793#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16793#comment:2/1299545483236857</guid>
      <description>&lt;p&gt;
If you're using Chrome, without the patch, you should also be getting a JS error in the console:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;Uncaught TypeError: Cannot read property 'firstChild' of null&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16793 (Bulk inline post edit doesn't show categories or tags if the CPT ...) updated</title>
      
        <dc:creator>markmcwilliams</dc:creator>

      <pubDate>Tue, 08 Mar 2011 00:27:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16793#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16793#comment:1/1299544022428595</guid>
      <description>&lt;p&gt;
I found it worked before, and after Scribu; unless I'm holding it wrong?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16791 (Save timestamp of user's last login to usermeta) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 08 Mar 2011 00:22:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16791#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16791#comment:1/1299543727921490</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This definitely isn't UI option material. Sounds like a good plugin, I really don't see the need to implement this or any overhead especially when core isn't going to use this data.
&lt;/p&gt;
&lt;p&gt;
I imagine BuddyPress already does this (re community sites) by tracking points of activity.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16794 (pomo/streams.php str_split() suggestion ?) updated</title>
      
        <dc:creator>mrasnika</dc:creator>

      <pubDate>Tue, 08 Mar 2011 00:10:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16794#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16794#comment:2/1299543022877080</guid>
      <description>&lt;p&gt;
It seems that this "optimization" is not going to help at all since all arguments are passed by reference UNTIL/UNLESS they are modified:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;em&gt;PHP already optimises it - variables are assigned using copy-on-write, and objects are passed by reference&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://stackoverflow.com/questions/496669/are-php-strings-immutable"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://stackoverflow.com/questions/496669/are-php-strings-immutable&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16794 (pomo/streams.php str_split() suggestion ?) updated</title>
      
        <dc:creator>mrasnika</dc:creator>

      <pubDate>Mon, 07 Mar 2011 23:44:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16794#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16794#comment:1/1299541466755122</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16794 (pomo/streams.php str_split() suggestion ?) created</title>
      
        <dc:creator>mrasnika</dc:creator>

      <pubDate>Mon, 07 Mar 2011 23:44:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16794</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16794/1299541442968998</guid>
      <description>&lt;p&gt;
Hi, just passing along an idea that was suggested to me:  we have a log which crashes with this --
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;Fatal error: Out of memory (allocated 23855104) (tried to allocate 9 bytes) in /var/www/html/wp-includes/pomo/streams.php on line 86&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
If you look at that line:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/tags/3.1/wp-includes/pomo/streams.php#L86"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/browser/tags/3.1/wp-includes/pomo/streams.php#L86&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
you will see that it is a simple str_split(). How about if the $string argument is passed by reference ? The problem as it is explained to me is that right now the $string argument is passed by value, e.g. it is copied, so if this is a large string, it is going to take double space when it is used as an argument; instead if it is used as an argument passed by reference it will not take any extra space at all.
&lt;/p&gt;
&lt;p&gt;
What do you think, would this help POMO_Reader::str_split() work with large strings ?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>16793.diff attached to Ticket #16793</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 07 Mar 2011 23:25:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16793/16793.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16793/16793.diff/1299540319720234</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16793 (Bulk inline post edit doesn't show categories or tags if the CPT ...) created</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 07 Mar 2011 23:24:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16793</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16793/1299540296728140</guid>
      <description>&lt;ol&gt;&lt;li&gt;Register a CPT that doesn't support titles:
&lt;/li&gt;&lt;/ol&gt;&lt;pre class="wiki"&gt;add_action( 'init', function() {
	register_post_type( 'foo', array(
		'show_ui' =&amp;gt; true,
		'label' =&amp;gt; 'Foo',
		'supports' =&amp;gt; array( 'editor' ),
		'taxonomies' =&amp;gt; array( 'category', 'post_tag' )
	) );
} );
&lt;/pre&gt;&lt;ol start="2"&gt;&lt;li&gt;Create a 'foo' post.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="3"&gt;&lt;li&gt;Go to wp-admin/edit.php?post_type=foo and choose the 'Edit' bulk action.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Expected behaviour: shows the category checkbox list and the tag textarea.
&lt;/p&gt;
&lt;p&gt;
Actual behaviour: only the status dropdown is shown.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14380 (Caption shortcode inserts inline style forcing width of containing div) updated</title>
      
        <dc:creator>smerriman</dc:creator>

      <pubDate>Mon, 07 Mar 2011 23:14:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14380#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14380#comment:5/1299539678410452</guid>
      <description>&lt;p&gt;
The inline width is necessary. The point of using an inline width is to allow captions which are wider than the image itself to wrap. There is no way to accomplish this with CSS alone if you get rid of the inline style.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13847 (WP increasing the memory above other server limit) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 07 Mar 2011 23:11:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13847#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13847#comment:28/1299539506966359</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13847#comment:27" title="Comment 27"&gt;wpmuguru&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13847#comment:26" title="Comment 26"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13847#comment:25" title="Comment 25"&gt;wpmuguru&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Thanks for providing a patch, it's missing wp-includes/media.php, right? Any ideas how to deal with it?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I did the patch for the wp-admin/* area. I would not expect an admin_area_ filter to be used in any of the files in wp-includes. If there is something you feel needs to be patched in wp-includes, a second patch to files in wp-includes won't interfere with the one I've uploaded above.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I have one patch provided already, probably it's usefull to combine the constants with the filter. So it's possible to configure the maximum memory allowed via wp-config.php and give plugins some flexibility as well. What do you think?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13847 (WP increasing the memory above other server limit) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Mon, 07 Mar 2011 23:00:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13847#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13847#comment:27/1299538828732419</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13847#comment:26" title="Comment 26"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13847#comment:25" title="Comment 25"&gt;wpmuguru&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Thanks for providing a patch, it's missing wp-includes/media.php, right? Any ideas how to deal with it?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I did the patch for the wp-admin/* area. I would not expect an admin_area_ filter to be used in any of the files in wp-includes. If there is something you feel needs to be patched in wp-includes, a second patch to files in wp-includes won't interfere with the one I've uploaded above.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16788 (Ampersands in e-mail address become invalid) updated</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Mon, 07 Mar 2011 22:59:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16788#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16788#comment:4/1299538747958070</guid>
      <description>&lt;p&gt;
Also, the new user email sent to the admin states the following:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
New user registration on your site WordPress Test Site:
&lt;/p&gt;
&lt;p&gt;
Username: thisisatest
&lt;/p&gt;
&lt;p&gt;
E-mail: &lt;code&gt;t&amp;amp;amp;est@eamann.com&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16788 (Ampersands in e-mail address become invalid) updated</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Mon, 07 Mar 2011 22:57:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16788#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16788#comment:3/1299538666982343</guid>
      <description>&lt;p&gt;
I can verify this bug exists.
&lt;/p&gt;
&lt;p&gt;
Testing on WordPress 3.2-bleeding.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Attempted to register user with email &lt;code&gt;t&amp;amp;est@eamann.com&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;User was registered with no visible errors
&lt;/li&gt;&lt;li&gt;Registered user is listed with email &lt;code&gt;t&amp;amp;ampest@eamann.com&lt;/code&gt; in WordPress admin
&lt;/li&gt;&lt;li&gt;Mailto mousover lists &lt;code&gt;mailto:t&amp;amp;ampest@eamann.com&lt;/code&gt; as the link
&lt;/li&gt;&lt;li&gt;Editing the user lists &lt;code&gt;t&amp;amp;est@eamann.com&lt;/code&gt; as the email address &lt;strong&gt;&amp;lt;- This is correct!
&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;Updating the user with &lt;code&gt;t&amp;amp;est@eamann.com&lt;/code&gt; doesn't change any of the above behavior
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16789 (admin memory_limit being reset) closed</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 07 Mar 2011 22:50:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16789#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16789#comment:1/1299538251542107</guid>
      <description>duplicate: &lt;p&gt;
Duplicate: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13847" title="#13847: defect (bug): WP increasing the memory above other server limit (closed: fixed)"&gt;#13847&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #13847 (WP increasing the memory above other server limit) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 07 Mar 2011 22:49:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13847#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13847#comment:26/1299538196897823</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13847#comment:25" title="Comment 25"&gt;wpmuguru&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Thanks for providing a patch, it's missing wp-includes/media.php, right? Any ideas how to deal with it?
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16789" title="#16789: defect (bug): admin memory_limit being reset (closed: duplicate)"&gt;#16789&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16788 (Ampersands in e-mail address become invalid) updated</title>
      
        <dc:creator>jfarthing84</dc:creator>

      <pubDate>Mon, 07 Mar 2011 22:42:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16788#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16788#comment:2/1299537730686832</guid>
      <description>&lt;p&gt;
Upon registration.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16792 (CategoryWalker, if cat_name is empty, do not append the empty a tag to ...) updated</title>
      
        <dc:creator>samo9789</dc:creator>

      <pubDate>Mon, 07 Mar 2011 22:38:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16792#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16792#comment:1/1299537526904320</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
This is my first contribution to an existing open source project. I hope I respected the ticket creation and patch submission process and that this can help improve Wordpress. I hope someone will review this correction.
&lt;/p&gt;
&lt;p&gt;
Take care,
samo9789
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16792 (CategoryWalker, if cat_name is empty, do not append the empty a tag to ...) created</title>
      
        <dc:creator>samo9789</dc:creator>

      <pubDate>Mon, 07 Mar 2011 22:36:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16792</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16792/1299537389490059</guid>
      <description>&lt;p&gt;
If the theme is customized to skip some categories by doing something like add_filter('list_cats', 'hideSomeCatgory') and returning a null or an empty string as cat name, the CategoryWalker will append an empty html element to the output
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16662 (Permalinks not working with 'category') updated</title>
      
        <dc:creator>greuben</dc:creator>

      <pubDate>Mon, 07 Mar 2011 22:35:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16662#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16662#comment:18/1299537347387096</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16662#comment:17" title="Comment 17"&gt;ashfame&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16662#comment:15" title="Comment 15"&gt;greuben&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
16662.3.diff will not work as expected if you have not reverted &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/16918" title="Add WP Rewrite root to front of add_permastruct() call when adding a ..."&gt;[16918]&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Also, make sure you've flushed your rewrite rules (just visit Settings -&amp;gt; Permalinks)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I tried your patch (also reverted &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/16918" title="Add WP Rewrite root to front of add_permastruct() call when adding a ..."&gt;[16918]&lt;/a&gt;) on one of the affected sites but still category and tags pages return 404. Please note that Advanced Permalinks plugin (known to cause issues with WP 3.1) was in use when it was upgraded, so it might have to do something with that. Its disabled at the moment.
&lt;/p&gt;
&lt;p&gt;
I recreated my .htaccess file after making changes in files. Anything else that I should try?
&lt;/p&gt;
&lt;pre class="wiki"&gt;Permalink custom structure: /%postname%/
Category base: cat
Tag base:
&lt;/pre&gt;&lt;p&gt;
&lt;strong&gt;Edit&lt;/strong&gt;: My forum thread detailing things is &lt;a class="ext-link" href="http://wordpress.org/support/topic/wordpress-category-gives-404-after-moving-to-a-different-domain?replies=22"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/wordpress-category-gives-404-after-moving-to-a-different-domain?replies=22&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I've just tried it with /%postname%/ permalink and 'cat' as category base. It is working for me.
&lt;/p&gt;
&lt;p&gt;
Permalinks are broken only if I use that "Advanced Permalinks" plugin. After disabling it did you flush rewrite rules?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16790 (Functional spec for wpautop) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 07 Mar 2011 22:19:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16790#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16790#comment:2/1299536362645314</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16791 (Save timestamp of user's last login to usermeta) created</title>
      
        <dc:creator>joelhardi</dc:creator>

      <pubDate>Mon, 07 Mar 2011 22:19:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16791</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16791/1299536359759358</guid>
      <description>&lt;p&gt;
Right now there's no way to tell when a user last logged in, or even if they've ever logged in.
&lt;/p&gt;
&lt;p&gt;
My suggestion is to simply store a 'last_login' timestamp in usermeta (similar to the way bbPress stores a 'last_posted' timestamp when a user posts). The usermeta row would be initially absent, then be inserted when a user first logs in, and then be updated on every successful login.
&lt;/p&gt;
&lt;p&gt;
I haven't written a patch but am happy to do so if this task is blessed or has a reasonable chance for inclusion in core. It should be very straightforward.
&lt;/p&gt;
&lt;p&gt;
I see a wide range of possible uses for this small bit of user info. For instance, a plugin could delete, deactivate, email an "are you there? please come back" message or flag a user after a certain period of inactivity. Or, a plugin could add a column to the users screen, allowing the table to sort by login date so that site admins could check out who's been on the site. Community-type sites might choose to publicly display a list like "Users logged in today."
&lt;/p&gt;
&lt;p&gt;
When WordPress is employed as a blog, it's easy to track how active users are by how often they comment (or post). However, I've talked to a bunch of site owners who use WordPress differently, requiring users to register and log in just to read certain pages -- their users &lt;em&gt;never&lt;/em&gt; comment or post, but they have no way to tell what user accounts are being used or are abandoned.
&lt;/p&gt;
&lt;p&gt;
There are plugins such as &lt;a class="ext-link" href="http://wordpress.org/extend/plugins/login-logger/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Login Logger&lt;/a&gt; that add this functionality, but I'm suggesting adding it to core because (a) it's trivial and (b) there's a big advantage to having this data live in a standard place so that all users and plugin authors can make use of it (vs. having plugins make up their own way to store and access this information). For instance, I'm the author of a plugin that deletes users after a certain period of inactivity, but I don't want my plugin to get into the business of hooking into logins and inserting into the database, I just want to make small use of this information.
&lt;/p&gt;
&lt;h3 id="PossibleconsIcanthinkof"&gt;Possible cons I can think of&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;This would mean an INSERT or UPDATE to the database on every successful login, which could create load/contention issues on very busy sites, particularly with MyISAM. I don't believe that writes to the usermeta table are frequent enough to be a problem, but it's a possibility.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;There may be privacy issues to consider ... personally I think saving only last login time (vs. storing all logins) is pretty benign, but I thought I'd mention it. I think the average user already expects this sort of basic information is stored when they log into a website.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="3"&gt;&lt;li&gt;For the above reasons you might prefer to make this an optional feature, disabled by default, which would mean adding a checkbox on one of the Settings pages. I know reducing clutter on these pages and avoiding featuritis are big WordPress goals, so that's a possible issue. I can code it either way, but I think it's simplest and most useful to just add the feature and not make it a settings option.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Thanks for considering my feature request!
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16790 (Functional spec for wpautop) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 07 Mar 2011 22:19:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16790#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16790#comment:1/1299536352253667</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Although not directly relevant, it's good to remember that the HTML runs through kses afterwards, which can alter it significantly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16790 (Functional spec for wpautop) created</title>
      
        <dc:creator>mrclay</dc:creator>

      <pubDate>Mon, 07 Mar 2011 22:06:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16790</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16790/1299535590570953</guid>
      <description>&lt;p&gt;
I've put together an algorithm-based &lt;a class="ext-link" href="http://www.mrclay.org/wpautop-functional-specification/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;functional spec&lt;/a&gt; that I hope could be useful in maintaining wpautop. Also might be handy is this combination of &lt;a class="ext-link" href="http://code.google.com/p/mrclay/source/browse/trunk/tests/php/MrClay/AutoP/wpautop-fails.in.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;wpautop failure cases&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The algorithm is based on work I've started on a DOMDocument-based implementation (a project I contribute to needs an MIT-licensed version), and although it's incomplete and slow, it does a bang-up job so far.
&lt;/p&gt;
&lt;p&gt;
DOMDocument may just be too slow or strict in its parsing to allow the variety of markup that wpautop needs to accept, but it's ace at the level of surgical precision needed to do this right.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16789 (admin memory_limit being reset) created</title>
      
        <dc:creator>lonnylot</dc:creator>

      <pubDate>Mon, 07 Mar 2011 21:15:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16789</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16789/1299532535093178</guid>
      <description>&lt;p&gt;
When we set the PHP memory_limit in wp-admin/admin.php we call the filter 'admin_memory_limit' which allows us to modify the memory_limit to a higher or lower number.
&lt;/p&gt;
&lt;p&gt;
There are individual functions that modify the PHP memory_limit which are used in the admin, but do not apply the filter.
&lt;/p&gt;
&lt;p&gt;
Places include:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;wp-includes/media.php line 253
&lt;/li&gt;&lt;li&gt;wp-admin/includes/file.php line 566
&lt;/li&gt;&lt;li&gt;wp-admin/includes/image-edit.php lines 394, 499
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16788 (Ampersands in e-mail address become invalid) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 07 Mar 2011 20:41:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16788#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16788#comment:1/1299530506927250</guid>
      <description>&lt;p&gt;
Where is this occurring?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16788 (Ampersands in e-mail address become invalid) created</title>
      
        <dc:creator>jfarthing84</dc:creator>

      <pubDate>Mon, 07 Mar 2011 20:01:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16788</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16788/1299528098009782</guid>
      <description>&lt;p&gt;
When an e-mail address contains an ampersand, WordPress improperly escapes the ampersand invalidating the e-mail address.
&lt;/p&gt;
&lt;p&gt;
Example: h&amp;amp;f@… becomes h&amp;amp;amp;amp@…
&lt;/p&gt;
&lt;p&gt;
First of all, the proper HTML entity for "&amp;amp;" is &lt;strong&gt;&amp;amp;amp;&lt;/strong&gt;. Where did the extra &lt;strong&gt;amp&lt;/strong&gt; come from?
&lt;/p&gt;
&lt;p&gt;
Also, an ampersand is a valid character in an e-mail address and should not be escaped. Escaping it could be a completely different e-mail address.
&lt;/p&gt;
&lt;p&gt;
I have not dug into the code to find out where this is happening but I'd assume in &lt;strong&gt;sanitize_email()&lt;/strong&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16769 (Make WP_Error extending Exception to make it throw-able) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Mon, 07 Mar 2011 19:36:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16769#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16769#comment:7/1299526564923600</guid>
      <description>&lt;p&gt;
We currently have poor-man's exceptions in a number of places.  For example, &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-includes/ms-functions.php#L276"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;here&lt;/a&gt; a &lt;code&gt;WP_Error&lt;/code&gt; object is returned, but nothing in core WP does anything with that return value.  So upon error the logic branches, an error object is created, but nothing can be done with the helpful information in the way that a thrown exception could be caught.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16769 (Make WP_Error extending Exception to make it throw-able) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 07 Mar 2011 19:05:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16769#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16769#comment:6/1299524733394132</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16769#comment:5" title="Comment 5"&gt;westi&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Switching to an Exception and throwing it changes the whole way in which we use WP_Error.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well actually prior to PHP 5 exceptions were not available but the suggestion given with the patch is not changing much so far, it's just extending the current.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm not convinced we need to do this.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;What is the benefit?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
To have an WP based, throw-able error class. If you don't know what the benefit of a concrete exception class is, please let us know.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;How is this backwards compatible with old code?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
I expect it to be 100% compatible. The WP_Error class can be instantiated as known and returned from functions. If you see some scenarios where this should not be the case, please report them in this ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16786 (Setting permalinks programatically breaks custom post type URL's) updated</title>
      
        <dc:creator>nerx</dc:creator>

      <pubDate>Mon, 07 Mar 2011 19:02:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16786#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16786#comment:2/1299524523633834</guid>
      <description>&lt;p&gt;
Just to mention:  &lt;em&gt;$permalink_structure&lt;/em&gt; will collapse if you use it to modify!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16787 (Removing title from a page (blank title) results in collapsed UI ...) updated</title>
      
        <dc:creator>nerx</dc:creator>

      <pubDate>Mon, 07 Mar 2011 19:00:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16787#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16787#comment:1/1299524432990118</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Test results: True. UI Collapse. (Only 3.1, doesn't happen in other versions!)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16786 (Setting permalinks programatically breaks custom post type URL's) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 07 Mar 2011 18:55:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16786#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16786#comment:1/1299524125271048</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It's important when you're calling modify_permalinks() as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16662 (Permalinks not working with 'category') updated</title>
      
        <dc:creator>ashfame</dc:creator>

      <pubDate>Mon, 07 Mar 2011 18:47:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16662#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16662#comment:17/1299523665393751</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16662#comment:15" title="Comment 15"&gt;greuben&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
16662.3.diff will not work as expected if you have not reverted &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/16918" title="Add WP Rewrite root to front of add_permastruct() call when adding a ..."&gt;[16918]&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Also, make sure you've flushed your rewrite rules (just visit Settings -&amp;gt; Permalinks)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I tried your patch (also reverted &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/16918" title="Add WP Rewrite root to front of add_permastruct() call when adding a ..."&gt;[16918]&lt;/a&gt;) on one of the affected sites but still category and tags pages return 404. Please note that Advanced Permalinks plugin (known to cause issues with WP 3.1) was in use when it was upgraded, so it might have to do something with that. Its disabled at the moment.
&lt;/p&gt;
&lt;p&gt;
I recreated my .htaccess file after making changes in files. Anything else that I should try?
&lt;/p&gt;
&lt;pre class="wiki"&gt;Permalink custom structure: /%postname%/
Category base: cat
Tag base:
&lt;/pre&gt;&lt;p&gt;
&lt;strong&gt;Edit&lt;/strong&gt;: My forum thread detailing things is &lt;a class="ext-link" href="http://wordpress.org/support/topic/wordpress-category-gives-404-after-moving-to-a-different-domain?replies=22"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/wordpress-category-gives-404-after-moving-to-a-different-domain?replies=22&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>wp-menu-bug.jpg attached to Ticket #16787</title>
      
        <dc:creator>jafoca</dc:creator>

      <pubDate>Mon, 07 Mar 2011 17:44:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16787/wp-menu-bug.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16787/wp-menu-bug.jpg/1299519873956801</guid>
      <description>&lt;p&gt;
screenshot showing collapsed menu item
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16787 (Removing title from a page (blank title) results in collapsed UI ...) created</title>
      
        <dc:creator>jafoca</dc:creator>

      <pubDate>Mon, 07 Mar 2011 17:43:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16787</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16787/1299519809030356</guid>
      <description>&lt;p&gt;
This minor issue has to do with the custom menu interface and titleless pages pages - this is handled somewhat gracefully when you initially create a titleless page using (pending) placeholder text, so I thought I would report it.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Issue preconditions&lt;/strong&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;WordPress 3.1
&lt;/li&gt;&lt;li&gt;Page created with title and body text
&lt;/li&gt;&lt;li&gt;Page added to a custom menu and saved&lt;br /&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;strong&gt;Steps to recreate&lt;/strong&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;remove title from the page from one of the "edit page" UIs
&lt;/li&gt;&lt;li&gt;visit the Menus interface
&lt;/li&gt;&lt;li&gt;you should now see a collapsed menu item in the menu creation interface (screenshot attached&lt;br /&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Tested In: Chrome OSX 10.0.648.127 | Firefox OSX 3.6.13
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>modify_permalinks.php attached to Ticket #16786</title>
      
        <dc:creator>gilbitron</dc:creator>

      <pubDate>Mon, 07 Mar 2011 15:59:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16786/modify_permalinks.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16786/modify_permalinks.php/1299513543771968</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16786 (Setting permalinks programatically breaks custom post type URL's) created</title>
      
        <dc:creator>gilbitron</dc:creator>

      <pubDate>Mon, 07 Mar 2011 15:58:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16786</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16786/1299513525689428</guid>
      <description>&lt;p&gt;
Using a function to programatically set permalinks (see attached) breaks custom post type URL's. A 404 page is displayed instead.
&lt;/p&gt;
&lt;p&gt;
Visiting the Permalinks settings page fixes the issue (you don't even need to save the permalinks settings).
&lt;/p&gt;
&lt;p&gt;
It turns out that you need to call $wp_rewrite-&amp;gt;flush_rules() on the following page load for it to work, even though this is called at the end of the modify_permalinks() function.
&lt;/p&gt;
&lt;p&gt;
Possibly related to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16736" title="#16736: defect (bug): Rewrite rules are generated inconsistently for custom taxonomies and ... (closed: fixed)"&gt;#16736&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16660 (Post body disappears after publish) updated</title>
      
        <dc:creator>semrocc</dc:creator>

      <pubDate>Mon, 07 Mar 2011 15:55:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16660#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16660#comment:14/1299513318380827</guid>
      <description>&lt;p&gt;
On occasion, I have also come across this page error from within the admin...it may be related:
&lt;/p&gt;
&lt;p&gt;
Message: 'ignore_rpc' is undefined
Line: 13
Char: 5360
Code: 0
URI: &lt;a class="ext-link" href="http://www.mywebsite.com/wp-includes/js/tinymce/wp-tinymce.php?c=1&amp;amp;ver=3393"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.mywebsite.com/wp-includes/js/tinymce/wp-tinymce.php?c=1&amp;amp;ver=3393&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;*
This appears to be tied to the spell-check as well.
&lt;/strong&gt;&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16785 (Move cleanup of old auto-drafts to wp_cron) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 07 Mar 2011 14:32:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16785#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16785#comment:1/1299508348637548</guid>
      <description>&lt;p&gt;
Maybe this could be tied to the trash emptying job?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16705 (Unclear wording: "An administrator must always approve the comment ") updated</title>
      
        <dc:creator>joe.woidpress</dc:creator>

      <pubDate>Mon, 07 Mar 2011 14:29:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16705#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16705#comment:3/1299508190151100</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16705#comment:2" title="Comment 2"&gt;linuxologos&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Related &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/6286" title="#6286: enhancement: Proposed changes to &amp;#34;E-mail me whenever&amp;#34; Discussion Options (new)"&gt;#6286&lt;/a&gt; ?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It's certainly related, although I think there's an extra aspect in my ticket relating to who the "administrator" is who needs to approve the comment.
&lt;/p&gt;
&lt;p&gt;
My ticket addresses the "An administrator must always approve the comment" option while the other ticket addresses the email notification options.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16785 (Move cleanup of old auto-drafts to wp_cron) created</title>
      
        <dc:creator>prettyboymp</dc:creator>

      <pubDate>Mon, 07 Mar 2011 14:22:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16785</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16785/1299507727711220</guid>
      <description>&lt;p&gt;
get_default_post_to_edit() currently runs a query to delete old auto-draft posts.  This doesn't need to be run every time a new post is created and should be converted to a cron task that runs once a day at most.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16756 (PHP5-port - Access Violations on wpdb::$prefix) updated</title>
      
        <dc:creator>Backie</dc:creator>

      <pubDate>Mon, 07 Mar 2011 14:01:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16756#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16756#comment:6/1299506483239965</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7756 (AJAX saving method instead of reloading the page) updated</title>
      
        <dc:creator>Backie</dc:creator>

      <pubDate>Mon, 07 Mar 2011 13:39:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7756#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7756#comment:7/1299505199560451</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12267 (Upgrade loop objects to provide identical presentational interfaces) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 07 Mar 2011 13:18:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12267#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12267#comment:39/1299503918558593</guid>
      <description>&lt;p&gt;
I was going to say it's going to be hard for multiple plugins to extend these classes.
&lt;/p&gt;
&lt;p&gt;
But then I figured we can use the &lt;code&gt;__call()&lt;/code&gt; magic method, since we're on PHP5 now:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function __call( $method, $args ) {
  array_unshift( $args, $this );
  return do_action_ref_array( "post_{$method}", $args );
}
&lt;/pre&gt;&lt;p&gt;
Hooks save the day again. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12267 (Upgrade loop objects to provide identical presentational interfaces) updated</title>
      
        <dc:creator>jaredwilli</dc:creator>

      <pubDate>Mon, 07 Mar 2011 13:08:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12267#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12267#comment:38/1299503319797050</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12267#comment:36" title="Comment 36"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There wouldn't be a WP_Page_Object, since then it would only be fair to have a different class for each post type, which isn't obvious how to do or even necessary.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's where I believe that a more abstracted class would be useful, posts,pages,custom types should, I think, use one central class, and depending on types, hierarchical or not, etc. w/e, have a child class for doing that stuff, and then that way, you can create any page or post type by creating new objects off of that sort of class hierarchy. Having "post" and "page" is much too generic to be predefined as builtin types if you ask me. since no one knows really what to call other "post types" or content types, post types is the most used, which contains the word 'post' in what everyone calls cpt's, which is a built in 'type' for 'posts'.
&lt;/p&gt;
&lt;p&gt;
I think posts could even be hierarchically broken down somehow, since posts is more or less, blog posts or site articles of w/e. and now with cpts posts could be anything, so it sort of adds a hierarchy to the type itself upon adding a cpt to your site.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12267 (Upgrade loop objects to provide identical presentational interfaces) updated</title>
      
        <dc:creator>jaredwilli</dc:creator>

      <pubDate>Mon, 07 Mar 2011 12:59:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12267#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12267#comment:37/1299502774912592</guid>
      <description>&lt;p&gt;
Just wanted to add my two-cents on this cuz it's been a pet-peeve of mine ever since the introduction of cpt's + taxonomies (since 3.0). I've been wishing the WP_Object were more flexible, abstracted, or just simply not so confined by the predefined structure of  posts/pages/comments/tags/categories....
&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
And it I think it would make more sense to me to do $post-&amp;gt;title, $post-&amp;gt;oontent if instead of the_title() etc. (I too $like-&amp;gt;thisway(), $post-&amp;gt;query_var-&amp;gt;slug better). since there is already $post-&amp;gt;ID, I know there's the_ID(), but it seems silly to have procedural functions to do such things that would be easier to do as an interface. More widely functioning classes, that serve a broader spectrum of things (posts, pages, comments, custom post types, taxonomies, hell even custom comment types, page types, or areas for widget types with stereo types...) The future is not predefined why try to do so in the present. The more control and personalization the better since people will always try to make sites in new, unexplored ways that haven't been done yet.
&lt;/p&gt;
&lt;p&gt;
I also agree with what &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12267#comment:35" title="Comment 35"&gt;mikeschinkel&lt;/a&gt; pointed out. I get that there's WP_Object, but seems idk, ocd maybe? to keep 'WP_Object' and just add _Post or _Page to the end. Wouldn't be the first time words in a function or class name were reorganized.
&lt;/p&gt;
&lt;p&gt;
I'd love it if this were implemented into 3.2, or 3.1.1 even? &amp;lt;/ramble&amp;gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15237 (Settings -&gt; Permalinks blank on PHP 5.3.2) updated</title>
      
        <dc:creator>ollieread</dc:creator>

      <pubDate>Mon, 07 Mar 2011 12:58:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15237#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15237#comment:16/1299502695659258</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
If you're running PHP as CGI you won't have access to the apache PHP API so apache_get_modules() will fail. On top of this, if you're using Apache 2.2+ mod_rewrite is statically compiled so it won't show up in phpinfo(8) either.
&lt;/p&gt;
&lt;p&gt;
I had this issue and after recompiling PHP and removing the 'Compiled as CGI option' I was able to view the permalinks page again.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16769 (Make WP_Error extending Exception to make it throw-able) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Mon, 07 Mar 2011 12:50:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16769#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16769#comment:5/1299502234587303</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Switching to an Exception and throwing it changes the whole way in which we use WP_Error.
&lt;/p&gt;
&lt;p&gt;
I'm not convinced we need to do this.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;What is the benefit?
&lt;/li&gt;&lt;li&gt;How is this backwards compatible with old code?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16784 (Introduce post_type_archive_description()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 07 Mar 2011 12:09:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16784#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16784#comment:4/1299499767139621</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Nevermind, I see there already is a 'description' arg.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16784 (Introduce post_type_archive_description()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 07 Mar 2011 12:07:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16784#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16784#comment:3/1299499665548566</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
post_type_archive_description() would require a place to store the description in the first place. Maybe a 'archive_description' arg on register_post_type() ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16784 (Introduce post_type_archive_description()) updated</title>
      
        <dc:creator>thomask</dc:creator>

      <pubDate>Mon, 07 Mar 2011 10:54:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16784#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16784#comment:2/1299495243434678</guid>
      <description>&lt;p&gt;
sorry, have not noticed &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16075" title="#16075: task (blessed): Add Post Type Archives support in Nav Menus (closed: fixed)"&gt;#16075&lt;/a&gt;. Ad (2) - the post_type_archive_title is great, i have missed it and is probably exactly what i thought, what should be added then is also post_type_archive_description function.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16784 (Introduce post_type_archive_description()) updated</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Mon, 07 Mar 2011 10:45:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16784#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16784#comment:1/1299494741636682</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/16784" title="#16784: enhancement: Introduce post_type_archive_description() (new)"&gt;thomask&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol&gt;&lt;li&gt;it is not possible to add it using Nav menus (except direct Custom link)
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16075" title="#16075: task (blessed): Add Post Type Archives support in Nav Menus (closed: fixed)"&gt;#16075&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol start="2"&gt;&lt;li&gt;if using the standard archive.php page, the common function for getting archive page name (e.g. single_tag_title) or description (e.g. tag_description) do not work - the best now is to use get_queried_object()-&amp;gt;name resp. get_queried_object()-&amp;gt;description
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
&lt;code&gt;post_type_archive_title&lt;/code&gt;. There is no way that &lt;code&gt;single_tag_title&lt;/code&gt; is supposed to work as it is clearly for use with tag archives. You can also use &lt;code&gt;is_post_type_archive&lt;/code&gt; to determine if the current page is a post type archive.
&lt;/p&gt;
&lt;p&gt;
Suggesting close as dupe of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16075" title="#16075: task (blessed): Add Post Type Archives support in Nav Menus (closed: fixed)"&gt;#16075&lt;/a&gt; for the first problem.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16784 (Introduce post_type_archive_description()) created</title>
      
        <dc:creator>thomask</dc:creator>

      <pubDate>Mon, 07 Mar 2011 10:36:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16784</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16784/1299494200691569</guid>
      <description>&lt;p&gt;
if using the standard archive.php page, the common function for getting archive page name (e.g. single_tag_title) or description (e.g. tag_description) do not work - the best now is to use get_queried_object()-&amp;gt;name resp. get_queried_object()-&amp;gt;description
&lt;/p&gt;
&lt;p&gt;
Also it is not obvious, that when you create a custom post type and taxonomy (with public=true) they are not visible on menu navigation page - you must make them visible using the top View menu (it took me a while to realize it)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16769 (Make WP_Error extending Exception to make it throw-able) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 07 Mar 2011 09:47:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16769#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16769#comment:4/1299491220245713</guid>
      <description>&lt;p&gt;
I've attached a patch that extends WP_Error from Exception.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16769.2.patch attached to Ticket #16769</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 07 Mar 2011 09:46:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16769/16769.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16769/16769.2.patch/1299491176530195</guid>
      <description>&lt;p&gt;
Making WP_Error extending Exception (Updated)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>16769.patch attached to Ticket #16769</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 07 Mar 2011 09:44:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16769/16769.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16769/16769.patch/1299491088241646</guid>
      <description>&lt;p&gt;
Making WP_Error extending Exception
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>16782.4.patch attached to Ticket #16782</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 07 Mar 2011 09:37:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16782/16782.4.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16782/16782.4.patch/1299490676272934</guid>
      <description>&lt;p&gt;
Like previous plus WP_Error extending Exception
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12267 (Upgrade loop objects to provide identical presentational interfaces) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 07 Mar 2011 09:34:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12267#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12267#comment:36/1299490463309838</guid>
      <description>&lt;p&gt;
There wouldn't be a WP_Page_Object, since then it would only be fair to have a different class for each post type, which isn't obvious how to do or even necessary.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16772 (Enabling support for Gallery format removed Gallery custom post type) closed</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Mon, 07 Mar 2011 09:33:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16772#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16772#comment:6/1299490404223840</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16782 (PHP5-Port - WP_Error Class) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 07 Mar 2011 09:13:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16782#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16782#comment:8/1299489237336642</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16782#comment:6" title="Comment 6"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I see the value in throwing exceptions, but I don't see why we couldn't just throw WP_Error instances.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
At the time being, WP_Error is not throw-able and to throw it is not an accepted practice. Not that I want to prevent you or anybody else doing so, infact I've suggested that in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16769" title="#16769: enhancement: Make WP_Error extending Exception to make it throw-able (closed: wontfix)"&gt;#16769&lt;/a&gt; but I haven't done any test-code and I can not even say if that does rudimentary work or not.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That's why I closed the other ticket.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ok, I can understand that now, but please keep in mind that this ticket is not about making WP_Error extending Exception but to just port the class to PHP5 for the constructor and visibility.
&lt;/p&gt;
&lt;p&gt;
For the constructor though it looks like everybody in this ticket agrees so far that throwing an exception in case for a incomplete instantiation is good.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16764 (PHP5-port - wpdb class) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Mon, 07 Mar 2011 08:27:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16764#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16764#comment:1/1299486441136384</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This change is going to create a lot of unnecessary churn in the code.
&lt;/p&gt;
&lt;p&gt;
The whole point to me of requiring PHP5 is not to then rewrite the whole of WordPress using a different paradigm but to be able to use PHP5 functionality more freely when adding new features or making incremental improvements.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16757 (Removal of wpdb::supports_collation()) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Mon, 07 Mar 2011 08:24:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16757#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16757#comment:8/1299486281431680</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Please update the patch to adhere to the Coding style and to include the arguments directly in the function call rather than defining variables for single usage.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16783 (Do not output title attributes with wp_list_pages()) created</title>
      
        <dc:creator>bergius</dc:creator>

      <pubDate>Mon, 07 Mar 2011 08:14:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16783</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16783/1299485653904592</guid>
      <description>&lt;p&gt;
Standard output from wp_list_pages() is this:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;a href="/page/" title="Page"&amp;gt;Page&amp;lt;/a&amp;gt;
&lt;/p&gt;
&lt;p&gt;
The title attribute is superfluous when it's exactly the same as the page title. Will be read like "Page – Page" with a screen reader.
&lt;/p&gt;
&lt;p&gt;
Can't see any reason why Wordpress should output this.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16469 (Cannot pass in ID for get_term_link() if using custom taxonomy) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 07 Mar 2011 08:02:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16469#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16469#comment:15/1299484954575694</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16469#comment:14" title="Comment 14"&gt;mikeschinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16469#comment:11" title="Comment 11"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If someone passes a (string)'1' in as the term_id, they're doing it wrong, OR an API call is returning the data in the incorrect format.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
For the record, my example showing &lt;code&gt;'1'&lt;/code&gt; was for simplicity of example; my use-cases have been being returned as a string from something else, like &lt;code&gt;$_GET['term_id']&lt;/code&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The correct fix here, is to verify that ALL term objects being returned return the term_id as a integer, that'll fix most of these casting problems (ie. It may return a string '1' instead of (int)1)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
WordPress can't force &lt;code&gt;$_GET['term_id']&lt;/code&gt; to return a numeric.  Sure the developer can cast it as &lt;code&gt;(int)&lt;/code&gt;, but they have to know that it needs to be cast; hence the crux of the problem.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well no, Because that's not a term object is it? It's your data, as a plugin developer it's your responsibility to pass the correct parameters to functions. The documentation *may* (I havn't read it) may need to stress the fact it requires a integer value to be passed, not a numeric string.
&lt;/p&gt;
&lt;p&gt;
Upon reading some of the documentation:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;get_term(): &lt;code&gt; * @param int|object $term If integer, will get from database. If object will apply filters and return $term.&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;get_term_link(): &lt;code&gt;* @param object|int|string $term&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
In both cases you need to read the documentation, and then possibly read the first few lines of the function if you're not used to "int" meaning a literal integer..
&lt;/p&gt;
&lt;p&gt;
Simple fact here, Is that the function cannot change to accept a numerical string for ID lookups, nor can any of the Taxonomy API's which accept multiple data types be changed to accept numerical strings (those which only take int's seem to all cast them appropriately). so ultimately, the only change needed here is better education, through more documentation or more forceful hints as to the datatypes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16469 (Cannot pass in ID for get_term_link() if using custom taxonomy) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Mon, 07 Mar 2011 07:04:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16469#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16469#comment:14/1299481496501843</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16469#comment:11" title="Comment 11"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If someone passes a (string)'1' in as the term_id, they're doing it wrong, OR an API call is returning the data in the incorrect format.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
For the record, my example showing &lt;code&gt;'1'&lt;/code&gt; was for simplicity of example; my use-cases have been being returned as a string from something else, like &lt;code&gt;$_GET['term_id']&lt;/code&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The correct fix here, is to verify that ALL term objects being returned return the term_id as a integer, that'll fix most of these casting problems (ie. It may return a string '1' instead of (int)1)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
WordPress can't force &lt;code&gt;$_GET['term_id']&lt;/code&gt; to return a numeric.  Sure the developer can cast it as &lt;code&gt;(int)&lt;/code&gt;, but they have to know that it needs to be cast; hence the crux of the problem.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14162 (Introduce WP_Term class) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Mon, 07 Mar 2011 07:00:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14162#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14162#comment:12/1299481225431442</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12267 (Upgrade loop objects to provide identical presentational interfaces) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Mon, 07 Mar 2011 06:52:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12267#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12267#comment:35/1299480721271325</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Can I propose &lt;code&gt;WP_Post_Object&lt;/code&gt; and &lt;code&gt;WP_Page_Object&lt;/code&gt; instead of &lt;code&gt;WP_Object_Post&lt;/code&gt; and &lt;code&gt;WP_Object_Page&lt;/code&gt;?  I know non-English speakers whose languages would favor the latter will disagree but AFAIK there's no place else in WordPress where classes are named in that way and I think it might be confusing for less skilled programmers.  FWIW.
&lt;/p&gt;
&lt;p&gt;
Also &lt;code&gt;$post-&amp;gt;labels-&amp;gt;singular_name&lt;/code&gt; works nicely for surfacing &lt;code&gt;Post&lt;/code&gt; vs.&lt;code&gt; post&lt;/code&gt;, etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>12821.3.diff attached to Ticket #12821</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Mon, 07 Mar 2011 05:40:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12821/12821.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12821/12821.3.diff/1299476404084786</guid>
      <description>&lt;p&gt;
&lt;code&gt;depth&lt;/code&gt; is not an argument of &lt;code&gt;get_pages()&lt;/code&gt; or &lt;code&gt;get_posts()&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12821 (Merge get_posts() and get_pages()) updated</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Mon, 07 Mar 2011 05:37:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12821#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12821#comment:33/1299476276391954</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12821#comment:32" title="Comment 32"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Ok, but 'child_of' and 'depth' will actually be handled in WP_Query, no? So it's redundant to set them as defaults in get_posts().
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Actually &lt;code&gt;depth&lt;/code&gt; is an argument for &lt;code&gt;wp_dropdown_pages()&lt;/code&gt;, so I'm removing it from &lt;code&gt;get_posts()&lt;/code&gt; in an upcoming patch.
&lt;/p&gt;
&lt;p&gt;
But there are other arguments such as &lt;code&gt;offset&lt;/code&gt;, &lt;code&gt;meta_key&lt;/code&gt;, &lt;code&gt;meta_value&lt;/code&gt; etc. which are being set as defaults in &lt;code&gt;get_posts()&lt;/code&gt; but are also checked and handled in WP_Query. Putting &lt;code&gt;child_of&lt;/code&gt; as a default there does no harm and simply makes it more obvious which arguments and default values a WP developer can use with &lt;code&gt;get_posts()&lt;/code&gt;. That being said, I don't really mind if it's considered redundant and gets removed.
&lt;/p&gt;
&lt;p&gt;
I'm more concerned with whether there's any wrong assumption I made when merging the two functions. I tested the patch and it seems like it returns the correct results. But there might be edge cases of &lt;code&gt;get_pages()&lt;/code&gt; that I don't know about, let alone performance issues.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12821 (Merge get_posts() and get_pages()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 07 Mar 2011 05:04:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12821#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12821#comment:32/1299474299209291</guid>
      <description>&lt;p&gt;
Ok, but 'child_of' and 'depth' will actually be handled in WP_Query, no? So it's redundant to set them as defaults in get_posts().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14162 (Introduce WP_Term class) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 07 Mar 2011 05:01:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14162#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14162#comment:11/1299474105277490</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16745 (doubled replace in setup_postdata) updated</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Mon, 07 Mar 2011 05:01:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16745#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16745#comment:3/1299474100210358</guid>
      <description>&lt;p&gt;
I'm sorry, but, what?
&lt;/p&gt;
&lt;p&gt;
Could you write a better description for this ticket? And what do your patches have anything to do with the URL you posted?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16469 (Cannot pass in ID for get_term_link() if using custom taxonomy) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 07 Mar 2011 05:01:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16469#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16469#comment:13/1299474091158856</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14162" title="#14162: task (blessed): Introduce WP_Term class (closed: fixed)"&gt;#14162&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16469 (Cannot pass in ID for get_term_link() if using custom taxonomy) updated</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Mon, 07 Mar 2011 04:56:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16469#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16469#comment:12/1299473815592758</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16469#comment:11" title="Comment 11"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
is_int != is_numeric in the Term API. Theres the possibility of having Numeric slugs.
&lt;/p&gt;
&lt;p&gt;
The correct fix here, is to verify that ALL term objects being returned return the term_id as a integer, that'll fix most of these casting problems (ie. It may return a string '1' instead of (int)1)
&lt;/p&gt;
&lt;p&gt;
If someone passes a (string)'1' in as the term_id, they're doing it wrong, OR an API call is returning the data in the incorrect format.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That makes sense. I didn't know term slug could be numeric.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16774 (Remember list view/excerpt view setting) updated</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Mon, 07 Mar 2011 04:53:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16774#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16774#comment:1/1299473624483427</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
+1
&lt;/p&gt;
&lt;p&gt;
Post list tables should remember display mode just like plugin list table does. Attached patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16774.diff attached to Ticket #16774</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Mon, 07 Mar 2011 04:52:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16774/16774.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16774/16774.diff/1299473522552886</guid>
      <description>&lt;p&gt;
remember previous view mode
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16469 (Cannot pass in ID for get_term_link() if using custom taxonomy) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 07 Mar 2011 04:36:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16469#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16469#comment:11/1299472566025266</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
If you pass in a numeric string, is_int() still returns false, while is_numeric() returns true. So it's safer to use is_numeric() here.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
is_int != is_numeric in the Term API. Theres the possibility of having Numeric slugs.
&lt;/p&gt;
&lt;p&gt;
The correct fix here, is to verify that ALL term objects being returned return the term_id as a integer, that'll fix most of these casting problems (ie. It may return a string '1' instead of (int)1)
&lt;/p&gt;
&lt;p&gt;
If someone passes a (string)'1' in as the term_id, they're doing it wrong, OR an API call is returning the data in the incorrect format.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16469 (Cannot pass in ID for get_term_link() if using custom taxonomy) updated</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Mon, 07 Mar 2011 04:23:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16469#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16469#comment:10/1299471819231976</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
If you pass in a numeric string, &lt;code&gt;is_int()&lt;/code&gt; still returns false, while &lt;code&gt;is_numeric()&lt;/code&gt; returns true. So it's safer to use &lt;code&gt;is_numeric()&lt;/code&gt; here.
&lt;/p&gt;
&lt;p&gt;
I also found that &lt;code&gt;is_int()&lt;/code&gt; is used in several other functions. Should we look into those functions as well so that confusion like this won't happen again?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16469.diff attached to Ticket #16469</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Mon, 07 Mar 2011 04:19:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16469/16469.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16469/16469.diff/1299471591524990</guid>
      <description>&lt;p&gt;
use &lt;code&gt;is_numeric()&lt;/code&gt; instead of &lt;code&gt;is_int()&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12821 (Merge get_posts() and get_pages()) updated</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Mon, 07 Mar 2011 04:13:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12821#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12821#comment:31/1299471183492166</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12821#comment:30" title="Comment 30"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What I mean is that get_posts() should remain unchanged.
&lt;/p&gt;
&lt;p&gt;
Any get_pages() specific args, like 'include' should be converted to the standard ones (&lt;code&gt;'post__in'&lt;/code&gt;) inside get_pages(), before calling get_posts() or WP_Query.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
'include' is not a get_pages() specific argument. The inline documentation of &lt;code&gt;get_posts()&lt;/code&gt; specifies that 'include' is an argument, as does &lt;a class="ext-link" href="http://codex.wordpress.org/Template_Tags/get_posts"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;our codex&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
In my patch, &lt;code&gt;get_pages()&lt;/code&gt;  call &lt;code&gt;get_posts()&lt;/code&gt;, so converting args like &lt;code&gt;include&lt;/code&gt; inside &lt;code&gt;get_pages()&lt;/code&gt; before passing into &lt;code&gt;get_posts()&lt;/code&gt; would result into duplicate code.
&lt;/p&gt;
&lt;p&gt;
Also, I think &lt;code&gt;get_pages()&lt;/code&gt; should become a wrapper of &lt;code&gt;get_posts()&lt;/code&gt;, in the sense that &lt;code&gt;get_posts()&lt;/code&gt; should process arguments that are associated with hierarchical post types. In other words, whatever arguments that &lt;code&gt;get_pages()&lt;/code&gt; can handle, &lt;code&gt;get_posts()&lt;/code&gt; itself must also be able to handle.
&lt;/p&gt;
&lt;p&gt;
There are indeed some non-standard arguments in &lt;code&gt;get_pages()&lt;/code&gt; such as &lt;code&gt;post_parent&lt;/code&gt;, &lt;code&gt;sort_order&lt;/code&gt;, &lt;code&gt;number&lt;/code&gt; etc. but as you can see in the patch, they all get mapped into standard arguments (&lt;code&gt;parent&lt;/code&gt;, &lt;code&gt;order&lt;/code&gt;, &lt;code&gt;numberposts&lt;/code&gt; etc.) for get_posts().
&lt;/p&gt;
&lt;p&gt;
Other arguments like &lt;code&gt;child_of&lt;/code&gt;, &lt;code&gt;depth&lt;/code&gt; should be supported by &lt;code&gt;get_posts()&lt;/code&gt; in case the developer wants to use it with a hierarchical post type.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16469 (Cannot pass in ID for get_term_link() if using custom taxonomy) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 07 Mar 2011 03:22:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16469#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16469#comment:9/1299468148584480</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16782 (PHP5-Port - WP_Error Class) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 07 Mar 2011 03:20:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16782#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16782#comment:7/1299468030092703</guid>
      <description>&lt;p&gt;
In hindsight, I should have done it the other way around. Anyway...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16782 (PHP5-Port - WP_Error Class) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 07 Mar 2011 03:19:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16782#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16782#comment:6/1299467984366734</guid>
      <description>&lt;p&gt;
I see the value in throwing exceptions, but I don't see why we couldn't just throw WP_Error instances.
&lt;/p&gt;
&lt;p&gt;
That's why I closed the other ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16772 (Enabling support for Gallery format removed Gallery custom post type) updated</title>
      
        <dc:creator>10sexyapples</dc:creator>

      <pubDate>Mon, 07 Mar 2011 03:07:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16772#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16772#comment:5/1299467268350623</guid>
      <description>&lt;p&gt;
Well, I'm happy to report that my gut instinct regarding it being something to do with capabilities proved correct, that, and that my face is red with embarrassment at the moment for jumping to the conclusion that this was a bug instead of my own failing somewhere. Turns out I've been foiled again by working til my eyes are crossed ...
&lt;/p&gt;
&lt;pre class="wiki"&gt;'capabilities' =&amp;gt; $capabilities,
&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;
is your friend.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Apparently once I got down that far in assigning capabilities to my custom post types, after the fact, I neglected to copy paste that one in.
&lt;/p&gt;
&lt;p&gt;
My apologies again for wasting your time and thank you so much for being so understanding and helpful.
I'll keep trying to wear the big pants til they fit ... ;-)
Angie
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16779 (Ignore capitalization during login) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Mon, 07 Mar 2011 03:05:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16779#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16779#comment:1/1299467139089075</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This would certainly be an improvement to keep dumbfounded users from being locked out of their site simply because they didn't remember they used mixed case, or not.
&lt;/p&gt;
&lt;p&gt;
Wondering if there is a valid reason why this would cause a legacy issue?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16772 (Enabling support for Gallery format removed Gallery custom post type) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 07 Mar 2011 02:53:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16772#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16772#comment:4/1299466436438253</guid>
      <description>&lt;p&gt;
Post some code that shows the problem, and we'll see if we can figure out what is going on.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16772 (Enabling support for Gallery format removed Gallery custom post type) updated</title>
      
        <dc:creator>10sexyapples</dc:creator>

      <pubDate>Mon, 07 Mar 2011 02:46:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16772#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16772#comment:3/1299465960607240</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Alright, so, I went through with a fine-toothed comb and there are no codes out of place, but, to be sure, I removed everything from the theme down to just index, header and footer with the only thing in the functions file being the registration of the custom post types, and all plugins off, and still my gallery menu item is no where to be found.
&lt;/p&gt;
&lt;p&gt;
I created a new custom post type and it showed up in the menu just fine as it should. I then typed in the url for the missing post_type and got the cheatin'uh? message. I'm completely stumped and not to savvy at troubleshooting anything to do with the admin side of things. I looked at the core code pulling in the menu, and can't see anything I can use to troubleshoot.
&lt;/p&gt;
&lt;p&gt;
I'm at a standstill on this. It really makes no sense whatsoever, but, as I'm at the tail end of this site and it's on the verge of golive ... and I'm lucky enough that only two posts have been made in the gallery post type admin, I am going to recreate a new custom post type that doesn't reference the word gallery ... tsa_gallery for the post_type itself and move forward.
&lt;/p&gt;
&lt;p&gt;
I'm not one to leave cobwebs hanging about though, so, will keep at this until it's worked out. Is there any kind of debug function I can run to test what is being returned when the admin menu is called there? I'm going to move over to support once I hear back from you ... I obviously jumped the gun coming straight here. My apologies for that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16471 (Support default values for non-existant query vars in get_query_var() et al) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Mon, 07 Mar 2011 02:43:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16471#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16471#comment:3/1299465826988118</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16469 (Cannot pass in ID for get_term_link() if using custom taxonomy) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Mon, 07 Mar 2011 02:41:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16469#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16469#comment:8/1299465704240958</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
+1. I have stumbled onto this problem where it fails when &lt;code&gt;$term-&amp;gt;term_id = '1';&lt;/code&gt; but not when &lt;code&gt;$term-&amp;gt;term_id = 1;&lt;/code&gt; and I spent considerable time debugging to figure out why. It would IMO be nice it the &lt;code&gt;term_id&lt;/code&gt; was cast to &lt;code&gt;(int)&lt;/code&gt; inside the function.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16782 (PHP5-Port - WP_Error Class) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 07 Mar 2011 02:33:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16782#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16782#comment:5/1299465211941600</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16782#comment:4" title="Comment 4"&gt;filosofo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think there are at least two possible benefits to using exceptions in WP:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
thanks for your feedback. Next to these two cases, how should be dealt with the invalid return statements we have in some constructors? With exceptions as I suggested or do you have some other idea?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16782 (PHP5-Port - WP_Error Class) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Mon, 07 Mar 2011 02:22:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16782#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16782#comment:4/1299464575708463</guid>
      <description>&lt;p&gt;
I think there are at least two possible benefits to using exceptions in WP:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;It would allow us to handle error conditions in fewer places, which means more consistent error handling.
&lt;/li&gt;&lt;li&gt;It's probably much faster to catch exceptions at a few points than to do the many &lt;code&gt;is_wp_error&lt;/code&gt; checks we do now, because we could write code that assumes a certain type of return value and let PHP handle the branch in logic when the exception is thrown instead.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16524 (No documentation (not possible?) to add plugins to Trac) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Mon, 07 Mar 2011 02:20:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16524#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16524#comment:4/1299464450303199</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16614 (Allow blog privacy to be set in wp_config.php) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Mon, 07 Mar 2011 02:19:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16614#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16614#comment:8/1299464377729609</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16614#comment:4" title="Comment 4"&gt;kanuck54&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
My main issue with that solution is that &lt;code&gt;wp-content/&lt;/code&gt; is typically synched between live and dev environments; so ultimately, if I write a theme function or a plug-in, it's going to have to look at a constant defined in each config file anyway.
&lt;/p&gt;
&lt;p&gt;
And should my plug-in or theme wind up deactivated during a live-to-dev migration, the worst case scenario is that I could potentially have a broken dev site being indexed by a search engine.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@kanuck54 - As a way to handle what you need you might consider using the plugin I published &lt;strong&gt;&lt;a class="ext-link" href="http://wordpress.stackexchange.com/questions/119/easily-move-a-wordpress-install-from-development-to-production/182#182"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;here&lt;/a&gt;&lt;/strong&gt;. With it you could add a &lt;code&gt;'blog_public'&lt;/code&gt; element and a hook for the one-click webhost migration to assign the setting the proper value for each applicable specific webhost.  When I get a chance I might even add that into my next update of the plugin.
&lt;/p&gt;
&lt;p&gt;
If you need help getting it set up feel free to contact me; you can find my contact info on the site where I posted the plugin.
&lt;/p&gt;
&lt;p&gt;
Hope this helps.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16782 (PHP5-Port - WP_Error Class) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 07 Mar 2011 02:15:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16782#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16782#comment:3/1299464147740111</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16782#comment:2" title="Comment 2"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't see any benefit in having a WP_Exception class.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That concrete class is just to make visible that it's an exception thrown from WP. Can be replaced with any other exception class (see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16769" title="#16769: enhancement: Make WP_Error extending Exception to make it throw-able (closed: wontfix)"&gt;#16769&lt;/a&gt;), but that's out of the scope of this ticket. I therefore added another patch that is just throwing an exception.
&lt;/p&gt;
&lt;p&gt;
Do you see a benefit in throwing an exception at all?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16782.3.patch attached to Ticket #16782</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 07 Mar 2011 02:15:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16782/16782.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16782/16782.3.patch/1299464133520827</guid>
      <description>&lt;p&gt;
Standard PHP Exception
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16778 (wordpress is leaking user/blog information during wp_version_check()) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Mon, 07 Mar 2011 02:09:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16778#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16778#comment:10/1299463764297589</guid>
      <description>&lt;p&gt;
For the record, this code was added to WordPress as part of the merging of WordPress MU (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11644" title="#11644: task (blessed): multiple blogs &amp;amp; sites / merge WPMU (closed: fixed)"&gt;#11644&lt;/a&gt;). WordPress MU included the number of blogs and users when calling the api at wordpres.org.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://trac.mu.wordpress.org/browser/tags/2.9.2/wp-includes/update.php#L47"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://trac.mu.wordpress.org/browser/tags/2.9.2/wp-includes/update.php#L47&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16624 (Cache for WP_HTTP) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Mon, 07 Mar 2011 02:07:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16624#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16624#comment:1/1299463672782774</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16778 (wordpress is leaking user/blog information during wp_version_check()) updated</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Mon, 07 Mar 2011 01:54:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16778#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16778#comment:9/1299462845099641</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16778#comment:8" title="Comment 8"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Yes, that’s a better name. Added another update.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>wp-includes--update.php.2.diff attached to Ticket #16778</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Mon, 07 Mar 2011 01:53:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16778/wp-includes--update.php.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16778/wp-includes--update.php.2.diff/1299462782123202</guid>
      <description>&lt;p&gt;
Renamed filter to 'wp_version_check_query_variables'
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16769 (Make WP_Error extending Exception to make it throw-able) reopened</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 07 Mar 2011 01:46:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16769#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16769#comment:3/1299462390559023</guid>
      <description>&lt;p&gt;
This is not a duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16782" title="#16782: enhancement: PHP5-Port - WP_Error Class (closed: wontfix)"&gt;#16782&lt;/a&gt;, re-opening to keep things apart preventing clutter
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #12672 (Provide Multisite stats to api.wordpress.org) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 07 Mar 2011 01:43:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12672#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12672#comment:17/1299462206420330</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16778" title="#16778: enhancement: wordpress is leaking user/blog information during wp_version_check() (closed: fixed)"&gt;#16778&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16778 (wordpress is leaking user/blog information during wp_version_check()) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 07 Mar 2011 01:40:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16778#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16778#comment:8/1299462039333505</guid>
      <description>&lt;p&gt;
Thanks for providing a patch, I could review it, probably it's better fitting to name the filter &lt;code&gt;wp_version_check_query_variables&lt;/code&gt; instead of &lt;code&gt;update_core_data_send&lt;/code&gt; as this does not modify the core data send with request headers.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16782 (PHP5-Port - WP_Error Class) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 07 Mar 2011 01:25:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16782#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16782#comment:2/1299461125125295</guid>
      <description>&lt;p&gt;
I don't see any benefit in having a WP_Exception class.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16769 (Make WP_Error extending Exception to make it throw-able) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 07 Mar 2011 01:24:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16769#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16769#comment:2/1299461095015182</guid>
      <description>duplicate: &lt;p&gt;
Closing as dup of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16782" title="#16782: enhancement: PHP5-Port - WP_Error Class (closed: wontfix)"&gt;#16782&lt;/a&gt;, to keep discussion in one place.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>16782.2.patch attached to Ticket #16782</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 07 Mar 2011 01:16:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16782/16782.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16782/16782.2.patch/1299460561385444</guid>
      <description>&lt;p&gt;
Second port, similar to first one, constructor cleaned up and a missed @access tag removed.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16782 (PHP5-Port - WP_Error Class) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 07 Mar 2011 01:04:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16782#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16782#comment:1/1299459865349222</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Please review the patch. I would like to get feedback on the issue: How to deal with constructors return something which is not possible with PHP. Normally it's thrown an exception which is something new, therefore the patch contains a general WP_Exception.
&lt;/p&gt;
&lt;p&gt;
Feedback appreciated. The WP_Error class is a nice and small class to start with such IMHO.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16781 (is_wp_error() simplification) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 07 Mar 2011 01:01:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16781#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16781#comment:1/1299459675384342</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16782" title="#16782: enhancement: PHP5-Port - WP_Error Class (closed: wontfix)"&gt;#16782&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16769 (Make WP_Error extending Exception to make it throw-able) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 07 Mar 2011 00:59:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16769#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16769#comment:1/1299459589408347</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16782" title="#16782: enhancement: PHP5-Port - WP_Error Class (closed: wontfix)"&gt;#16782&lt;/a&gt; - Contains a patch with a WP_Exception class.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16768 (PHP5-port - Class Constructors Review for 3.2) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 07 Mar 2011 00:56:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16768#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16768#comment:3/1299459400759119</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16782" title="#16782: enhancement: PHP5-Port - WP_Error Class (closed: wontfix)"&gt;#16782&lt;/a&gt; - contains constructor changes for WP_Error, interesting case for having the constructor "returning" something (e.g. empty string) which is not possible and can be seen in other constructors inside wordpress as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>wp-includes--update.php.diff attached to Ticket #16778</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Mon, 07 Mar 2011 00:55:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16778/wp-includes--update.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16778/wp-includes--update.php.diff/1299459314013775</guid>
      <description>&lt;p&gt;
Fixed patch introducing a filter.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>16782.patch attached to Ticket #16782</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 07 Mar 2011 00:53:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16782/16782.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16782/16782.patch/1299459182722288</guid>
      <description>&lt;p&gt;
First port with a new WP_Exception thrown in constructor as it can not return &lt;em&gt; as written previously.
&lt;/em&gt;&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16782 (PHP5-Port - WP_Error Class) created</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 07 Mar 2011 00:45:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16782</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16782/1299458715893633</guid>
      <description>&lt;p&gt;
A port of the class to PHP5.
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16781" title="#16781: enhancement: is_wp_error() simplification (closed: invalid)"&gt;#16781&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/6768" title="#6768: defect (bug): Punctuation can break photo uploads (closed: worksforme)"&gt;#6768&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16769" title="#16769: enhancement: Make WP_Error extending Exception to make it throw-able (closed: wontfix)"&gt;#16769&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16778 (wordpress is leaking user/blog information during wp_version_check()) updated</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Mon, 07 Mar 2011 00:34:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16778#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16778#comment:7/1299458086296949</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12672" title="#12672: enhancement: Provide Multisite stats to api.wordpress.org (closed: fixed)"&gt;#12672&lt;/a&gt; for more information. We need a filter for the data.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16781.2.patch attached to Ticket #16781</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 07 Mar 2011 00:22:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16781/16781.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16781/16781.2.patch/1299457351416030</guid>
      <description>&lt;p&gt;
with subclassing
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>16781.patch attached to Ticket #16781</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 07 Mar 2011 00:21:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16781/16781.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16781/16781.patch/1299457262621664</guid>
      <description>&lt;p&gt;
w/o subclassing
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16781 (is_wp_error() simplification) created</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 07 Mar 2011 00:20:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16781</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16781/1299457217384254</guid>
      <description>&lt;p&gt;
please review. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2600" title="#2600: defect (bug): WP_Error class for returning errors (closed: fixed)"&gt;#2600&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/3667" title="WP_Error. fixes #2600"&gt;[3667]&lt;/a&gt;, &lt;a class="ext-link" href="http://php.net/manual/en/function.is-a.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;is_a()&lt;/a&gt;, &lt;a class="ext-link" href="http://www.php.net/manual/en/function.is-subclass-of.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;is_subclass_of()&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16778 (wordpress is leaking user/blog information during wp_version_check()) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 07 Mar 2011 00:02:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16778#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16778#comment:6/1299456132218807</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16778#comment:3" title="Comment 3"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16778#comment:2" title="Comment 2"&gt;vimishor&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I suppose that some statistics are generated using this information. And besides, this information can be used to plan future updates.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Correct.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Can you please reference the changeset when this came in?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16778 (wordpress is leaking user/blog information during wp_version_check()) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 07 Mar 2011 00:01:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16778#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16778#comment:5/1299456087511044</guid>
      <description>&lt;p&gt;
Thanks for reporting the issue.
&lt;/p&gt;
&lt;p&gt;
So far I can only say that I did not see an opt-in nor any information which information is to be transferred and for which use.
&lt;/p&gt;
&lt;p&gt;
The information you reported is obviously not necessary for the update procedure.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>