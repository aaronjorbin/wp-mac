<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #39875 (PDF previews overwrite existing images with the same name.) updated</title>
      
        <dc:creator>gitlost</dc:creator>

      <pubDate>Thu, 23 Feb 2017 23:45:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39875#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39875#comment:12/1487893541846673</guid>
      <description>&lt;p&gt;
Re patch note that &lt;code&gt;PATHINFO_FILENAME&lt;/code&gt; is not UTF-8 safe (same problem as &lt;code&gt;basename()&lt;/code&gt; and &lt;code&gt;PATHINFO_BASENAME&lt;/code&gt;).
&lt;/p&gt;
&lt;p&gt;
I still see no reason for using a random string.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39953 (REST API: Do not update date when preparing post if date is known to ...) updated</title>
      
        <dc:creator>nerrad</dc:creator>

      <pubDate>Thu, 23 Feb 2017 23:34:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39953#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39953#comment:3/1487892851426059</guid>
      <description>&lt;p&gt;
Thanks for explaining things, I was aware of how things worked on the WP side of things but clarifying what prompted the proposal in this ticket helps.
&lt;/p&gt;
&lt;p&gt;
After the explanation I'm still wary of the need for an flag for auto-updating (whatever its called) on the endpoint.  I believe we need to be careful about controlling behaviour of data properties based on some other flag in the package.  It's more predictable and sets expectations better I think if the behaviour of the endpoint is that whatever you have the date set at on that field during an update is what gets saved.
&lt;/p&gt;
&lt;p&gt;
Practically that means that its up to the consumer to save the current &lt;code&gt;post_date_gmt&lt;/code&gt; value to the equivalent of "now" in the PUT call if they want that to be the publish date (when publishing) the post.
&lt;/p&gt;
&lt;p&gt;
The other concern with setting a flag for controlling this behaviour is whether this is something applicable only on the post endpoint, or if its something that would apply to any custom post type (pages? menus?) If its only on the "posts" endpoint, then that does changing the schema for a post_type request depending on what "type" it is matter?  If it's including it on every post_type response, is it a fair assumption that all post types will follow the same behaviour patterns as a post?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39953 (REST API: Do not update date when preparing post if date is known to ...) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 23:18:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39953#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39953#comment:2/1487891892605396</guid>
      <description>&lt;p&gt;
When you create a draft in WP, whether via &lt;code&gt;wp-admin&lt;/code&gt; or the REST API, it has a &lt;code&gt;post_date_gmt&lt;/code&gt; value of &lt;code&gt;0000-00-00 00:00:00&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
When you update the draft again, most importantly when you publish it, WP looks for this special value of &lt;code&gt;post_date_gmt&lt;/code&gt;.  If it's present, the post date is reset to the current timestamp (&lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/post.php#L3110"&gt;ref&lt;/a&gt;).  Usually this is what you want (by default, a post is dated when it's published, not when its draft is created).
&lt;/p&gt;
&lt;p&gt;
This behavior dates back to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/8920" title="Set post_date for drafts. see #5698"&gt;[8920]&lt;/a&gt;, we can't change it in the WP internals.
&lt;/p&gt;
&lt;p&gt;
If you update the date of the draft before publishing it, whether via &lt;code&gt;wp-admin&lt;/code&gt; or the REST API, both the &lt;code&gt;post_date&lt;/code&gt; and &lt;code&gt;post_date_gmt&lt;/code&gt; fields are set to the new date you've specified.  It's currently possible to undo this operation and set the date back to "floating" in &lt;code&gt;wp-admin&lt;/code&gt;, but this hasn't been possible via any public release of the REST API.
&lt;/p&gt;
&lt;p&gt;
After &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38883" title="#38883: defect (bug): Shim post_date_gmt for drafts / empty dates in the REST API (closed: fixed)"&gt;#38883&lt;/a&gt;, there's no way to tell via the REST API whether a post actually has an internal &lt;code&gt;post_date_gmt&lt;/code&gt; value of &lt;code&gt;0000-00-00 00:00:00&lt;/code&gt; or not, because if it does, we use the &lt;code&gt;post_date&lt;/code&gt; field to calculate and provide a reasonable value for &lt;code&gt;date_gmt&lt;/code&gt;.  Guaranteeing a usable value in the &lt;code&gt;date_gmt&lt;/code&gt; field is many times more useful than being able to know the status of this internal flag.
&lt;/p&gt;
&lt;p&gt;
The new field proposed in this ticket would contain (and allow updating) this extra piece of information about the internal state of a post.  If the new field has a value of &lt;code&gt;true&lt;/code&gt;, then the post is a draft with a &lt;code&gt;post_date_gmt&lt;/code&gt; value of &lt;code&gt;0000-00-00 00:00:00&lt;/code&gt;; otherwise, the new field is &lt;code&gt;false&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Something like &lt;code&gt;date_floating&lt;/code&gt; might make a better name for this field.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39959 (Clarify parameters for callbacks for `register_rest_field()`) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 23 Feb 2017 22:50:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39959#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39959#comment:1/1487890209813571</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39959 (Clarify parameters for callbacks for `register_rest_field()`) created</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 23 Feb 2017 22:49:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39959</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39959/1487890179667319</guid>
      <description>&lt;p&gt;
There is an issue going on with &lt;code&gt;register_rest_field()&lt;/code&gt; in combination with the &lt;code&gt;WP_REST_Meta_Fields&lt;/code&gt; classes: The method &lt;code&gt;WP_REST_Meta_Fields::register_field()&lt;/code&gt; uses callbacks that accept an object ID only. However, the REST controller methods that handle the additional fields always pass an object to these callbacks.
&lt;/p&gt;
&lt;p&gt;
Working with metadata via the REST API is still possible now, since the &lt;code&gt;WP_REST_Meta_Fields::register_field()&lt;/code&gt; method is never used in Core, instead metadata is handled manually by each controller. So it is now a minor issue, but I think we should figure out what kind of parameters the &lt;code&gt;register_rest_field()&lt;/code&gt; callbacks can accept (I could not find anything clear in the documentation) and then actually use &lt;code&gt;WP_REST_Meta_Fields::register_field()&lt;/code&gt;, as I don't think there's a point in handling meta manually if we have this method already available in a more abstracted way.
&lt;/p&gt;
&lt;p&gt;
Furthermore, this inconsistency gets more critical once developers start writing their own endpoints for custom object types that use their own metadata table. One might assume that the &lt;code&gt;WP_REST_Meta_Fields&lt;/code&gt; base class can be leveraged to handle meta automatically, but because of the inconsistencies now, doing this would likely cause fatal errors and confusion.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39701 (Do not allow editing users from a different site in REST API) reopened</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 23 Feb 2017 22:39:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39701#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39701#comment:28/1487889547820913</guid>
      <description>&lt;p&gt;
Reopening for back-porting to 4.7.3.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39701 (Do not allow editing users from a different site in REST API) closed</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 23 Feb 2017 22:36:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39701#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39701#comment:27/1487889415410434</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40106" title="REST API: Do not allow access to users from a different site in ..."&gt;40106&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Do not allow access to users from a different site in multisite.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It has been unintendedly possible to both view and edit users from a different site than the current site in multisite environments. Moreover, when passing roles to a user in an update request, that user would implicitly be added to the current site.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This changeset removes the incorrect behavior for now in order to be able to provide a proper REST API workflow for managing multisite users in the near future. Related unit tests have been adjusted as well.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props jnylen0, jeremyfelt, johnjamesjacoby.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39701" title="#39701: defect (bug): Do not allow editing users from a different site in REST API (closed: fixed)"&gt;#39701&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40106]: REST API: Do not allow access to users from a different site in ...</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 23 Feb 2017 22:36:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40106</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40106/1487889414925711</guid>
      <description>&lt;p&gt;
REST API: Do not allow access to users from a different site in multisite.
&lt;/p&gt;
&lt;p&gt;
It has been unintendedly possible to both view and edit users from a different site than the current site in multisite environments. Moreover, when passing roles to a user in an update request, that user would implicitly be added to the current site.
&lt;/p&gt;
&lt;p&gt;
This changeset removes the incorrect behavior for now in order to be able to provide a proper REST API workflow for managing multisite users in the near future. Related unit tests have been adjusted as well.
&lt;/p&gt;
&lt;p&gt;
Props jnylen0, jeremyfelt, johnjamesjacoby.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39701" title="#39701: defect (bug): Do not allow editing users from a different site in REST API (closed: fixed)"&gt;#39701&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39958 (Comment reply/cancel links work badly when comment form is above the ...) created</title>
      
        <dc:creator>smerriman</dc:creator>

      <pubDate>Thu, 23 Feb 2017 22:36:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39958</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39958/1487889385214028</guid>
      <description>&lt;p&gt;
If the comment form is below the list of comments, as in default WP themes, reply and cancel links work as follows:
&lt;/p&gt;
&lt;p&gt;
When you click reply, the form moves directly under the comment (page doesn't scroll).
When you click cancel, the form jumps back to original position (page doesn't scroll).
&lt;/p&gt;
&lt;p&gt;
Consider any theme where the comment form is output before the list of comments. (This is a standard request, to make it easier for people to comment without having to scroll through lots of existing comments first).
&lt;/p&gt;
&lt;p&gt;
When you click reply, the form moves from its original position to under the comment, causing the whole page to scroll up a significant amount. The textarea gets focus, meaning if it has scrolled off the top of the screen as is quite likely, the page jumps to ensure it is visible, but you don't see important things like the reply heading, cancel link, or comment label.
&lt;/p&gt;
&lt;p&gt;
When you click cancel, the form reverts back to its original position, jumping the whole page content down significantly, often leaving you in a completely random part of the page.
&lt;/p&gt;
&lt;p&gt;
This is very disorientating from a user perspective. I'm not sure what a workaround is - perhaps some way of saving your vertical position prior to a click and restoring it after a click to make it look like there is no jump.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39701 (Do not allow editing users from a different site in REST API) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 23 Feb 2017 22:18:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39701#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39701#comment:26/1487888305419406</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39701#comment:24" title="Comment 24"&gt;jnylen0&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@ocean90 in the absence of further feedback I would like to move forward with this change.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yep, go ahead. Thanks for the page!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27555 (Make tag post meta box more accessible) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 23 Feb 2017 21:55:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27555#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27555#comment:37/1487886928201031</guid>
      <description>&lt;p&gt;
@cyclic thanks for your comment. In WordPress, that link has been changed in a button element with a &lt;code&gt;type="button"&lt;/code&gt;attribute and as such, it doesn't have any default action to prevent. Previously, it was an anchor tag and thus it needed a &lt;code&gt;return false&lt;/code&gt; to prevent the link default action.
&lt;/p&gt;
&lt;p&gt;
For accessibility reasons, links that are not real links and instead perform an action should be buttons. In the last months, &lt;a href="https://core.trac.wordpress.org/query?keywords=~semantic-buttons"&gt;WordPress has changed many non-links in buttons&lt;/a&gt; and still there are many other ones to change. Ideally, the plugin you mentioned should follow core's best practices and change its link in a button :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38207 (Disable Trackbacks by Default Keep Pingbacks On) updated</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Thu, 23 Feb 2017 21:28:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38207#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38207#comment:6/1487885291833921</guid>
      <description>&lt;p&gt;
+100 Yep it should be disabled by default.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38207#comment:4" title="Comment 4"&gt;karmatosed&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
+1 for disabling trackbacks by default.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39957 (Image EXIF data from phone pictures) updated</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Thu, 23 Feb 2017 20:53:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39957#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39957#comment:1/1487883201831454</guid>
      <description>&lt;p&gt;
@donnaWPadmin
&lt;/p&gt;
&lt;p&gt;
Related.
&lt;a href="https://core.trac.wordpress.org/ticket/37140"&gt;https://core.trac.wordpress.org/ticket/37140&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>20170124_124800.jpg attached to Ticket #39957</title>
      
        <dc:creator>donnaWPadmin</dc:creator>

      <pubDate>Thu, 23 Feb 2017 20:51:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39957/20170124_124800.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39957/20170124_124800.jpg/1487883070444148</guid>
      <description>&lt;p&gt;
one of the problematic images when used in WordPress
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39957 (Image EXIF data from phone pictures) created</title>
      
        <dc:creator>donnaWPadmin</dc:creator>

      <pubDate>Thu, 23 Feb 2017 20:50:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39957</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39957/1487883031218836</guid>
      <description>&lt;p&gt;
WordPress seems to be "tossing" the orientation exif data on my images. I've done some testing with some images. When the image is taken with the phone sideways, and the orientation for both the image and the thumbnail says "rotate 90 degrees CW" ...the image is NOT rotated in WordPress Admin area (media library, etc) ...but if I take the link of the image, and open the image directly in my browser, it is rotated directly.
&lt;/p&gt;
&lt;p&gt;
It took me a long time to figure this out, as I had sliders, and 1/2 the images I took with my phone were all wacked out sideways...first it was the slider, then it was a plugin...but it's none of those, it's actually wordpress itself that is doing the damage.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39933 (WP_REST_Request::get_param() doesn't work for getting body params on ...) updated</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Thu, 23 Feb 2017 20:45:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39933#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39933#comment:13/1487882739598110</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
39933.6.diff​ is a slightly cleaner patch which avoids modifying the assert statement to include a message. This isn't really necessary because PHPUnit will still provide the failing request method for us:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
ah, cool. Also wasn't aware data sets provided that. Great.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24251 (Reconsider SVG inclusion to get_allowed_mime_types) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 23 Feb 2017 20:30:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24251#comment:74</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24251#comment:74/1487881814068098</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by enshrined. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487881811001717"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39956 (Featured Images don't work in Press This) created</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Thu, 23 Feb 2017 20:29:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39956</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39956/1487881795239098</guid>
      <description>&lt;p&gt;
Featured Image is a nicer datapoint than inserting the image HTML into a post's content.
&lt;/p&gt;
&lt;p&gt;
The media workflow for Featured Image doesn't actually save anything via AJAX, it just returns HTML that gets blobbed into that page, and is then coincidentally associated on save. This works on the Post Edit screen because there is a meta box for the AJAX to interact with. In Press This, there is no target for the HTML, rendering the Featured Image workflow moot.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39954 (REST API: Improve date updates if both `date` and `date_gmt` are set) updated</title>
      
        <dc:creator>nerrad</dc:creator>

      <pubDate>Thu, 23 Feb 2017 20:26:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39954#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39954#comment:2/1487881578397773</guid>
      <description>&lt;p&gt;
&lt;strong&gt;Ideally&lt;/strong&gt; &lt;code&gt;post_date&lt;/code&gt; should be a readonly field.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39954 (REST API: Improve date updates if both `date` and `date_gmt` are set) updated</title>
      
        <dc:creator>nerrad</dc:creator>

      <pubDate>Thu, 23 Feb 2017 20:19:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39954#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39954#comment:1/1487881169877930</guid>
      <description>&lt;p&gt;
I would prefer either:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;if both are specified, prefer gmt value over date value.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
OR
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;throw an error if both are specified.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
From a back compat standpoint, the latter option seems safer.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39953 (REST API: Do not update date when preparing post if date is known to ...) updated</title>
      
        <dc:creator>nerrad</dc:creator>

      <pubDate>Thu, 23 Feb 2017 20:17:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39953#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39953#comment:1/1487881044359189</guid>
      <description>&lt;p&gt;
I'm still trying to decipher what the purpose of this ticket is so looking for clarification.
&lt;/p&gt;
&lt;p&gt;
So are you saying prior to the changes in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38883" title="#38883: defect (bug): Shim post_date_gmt for drafts / empty dates in the REST API (closed: fixed)"&gt;#38883&lt;/a&gt;, the marker for whether a date got set to the current date when a draft post has its status changed is the &lt;code&gt;post_date_gmt&lt;/code&gt; field being &lt;code&gt;0000-00-00 00:00:00&lt;/code&gt; and AFTER the changes, that field has an actual specified date so there's no reliable marker to indicate updating the post to the current time of when the request is changing the post status?
&lt;/p&gt;
&lt;p&gt;
If so, I'm not sure I like the idea of adding a flag.  Instead I think the client should be responsible for setting the date period.  I realize there may be implications with this stance but I don't want to respond to those until I know that my interpretation of the purpose for this ticket is correct.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39933 (WP_REST_Request::get_param() doesn't work for getting body params on ...) reopened</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 20:09:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39933#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39933#comment:12/1487880596081851</guid>
      <description>&lt;p&gt;
Reopening for backport to 4.7 branch.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39933 (WP_REST_Request::get_param() doesn't work for getting body params on ...) closed</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 20:09:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39933#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39933#comment:11/1487880551884836</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40105" title="REST API: Correctly parse body parameters for DELETE requests.
DELETE ..."&gt;40105&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Correctly parse body parameters for DELETE requests.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
DELETE was inadvertently omitted from the list of non-POST HTTP methods that should be able to accept body parameters.  Parameters passed to DELETE requests as JSON are already parsed correctly; this commit fixes &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; parameters as well.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props mnelson4.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39933" title="#39933: defect (bug): WP_REST_Request::get_param() doesn't work for getting body params on ... (closed: fixed)"&gt;#39933&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40105]: REST API: Correctly parse body parameters for DELETE requests.  DELETE ...</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 20:09:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40105</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40105/1487880551393122</guid>
      <description>&lt;p&gt;
REST API: Correctly parse body parameters for DELETE requests.
&lt;/p&gt;
&lt;p&gt;
DELETE was inadvertently omitted from the list of non-POST HTTP methods that should be able to accept body parameters.  Parameters passed to DELETE requests as JSON are already parsed correctly; this commit fixes &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; parameters as well.
&lt;/p&gt;
&lt;p&gt;
Props mnelson4.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39933" title="#39933: defect (bug): WP_REST_Request::get_param() doesn't work for getting body params on ... (closed: fixed)"&gt;#39933&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39955 (Media details: HTML character shown as code) created</title>
      
        <dc:creator>Irian</dc:creator>

      <pubDate>Thu, 23 Feb 2017 20:05:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39955</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39955/1487880313559446</guid>
      <description>&lt;p&gt;
In the media details screen, the 'uploaden by' information shows html entities encoded (Hoover &amp;amp; Hitch is shown as Hoover &amp;amp;amp; Hitch).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39933 (WP_REST_Request::get_param() doesn't work for getting body params on ...) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 20:02:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39933#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39933#comment:10/1487880135196056</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39933/39933.6.diff" title="Attachment '39933.6.diff' in Ticket #39933"&gt;39933.6.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39933/39933.6.diff" title="Download"&gt;​&lt;/a&gt; is a slightly cleaner patch which avoids modifying the &lt;code&gt;assert&lt;/code&gt; statement to include a message.  This isn't really necessary because PHPUnit will still provide the failing request method for us:
&lt;/p&gt;
&lt;pre class="wiki"&gt;1) Tests_REST_Request::test_non_post_body_parameters with data set #2 ('DELETE')
Failed asserting that null matches expected 'bar'.
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>39933.6.diff attached to Ticket #39933</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 20:01:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39933/39933.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39933/39933.6.diff/1487880067986271</guid>
      <description>&lt;p&gt;
A little more test cleanup
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39630 (PDF Thumbnails in Media Library Don't Fall Back to Full Size) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 23 Feb 2017 19:54:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39630#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39630#comment:1/1487879661131620</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487879658001660"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38883 (Shim post_date_gmt for drafts / empty dates in the REST API) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 23 Feb 2017 19:53:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38883#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38883#comment:20/1487879630369854</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1487879626004965"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38883 (Shim post_date_gmt for drafts / empty dates in the REST API) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 19:52:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38883#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38883#comment:19/1487879557385131</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38883#comment:13" title="Comment 13"&gt;jnylen0&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If a GMT date is updated for a draft, we can either assume or verify that the corresponding &lt;code&gt;post_*_gmt&lt;/code&gt; field is all zeroes, then make the requested change to the non-GMT field instead (backing out the site's timezone offset).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I've since changed my mind about this.  For 4.7.3 we should preserve the existing behavior: updating either &lt;code&gt;date&lt;/code&gt; or &lt;code&gt;date_gmt&lt;/code&gt; represents the client's explicit intent to set the date rather than have WP update it based on a zero &lt;code&gt;post_date_gmt&lt;/code&gt; field.
&lt;/p&gt;
&lt;p&gt;
If the behavior to determine whether a draft has a zero &lt;code&gt;post_date_gmt&lt;/code&gt; is missed, we can add a new field for this later on (&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/39953" title="#39953: enhancement: REST API: Do not update date when preparing post if date is known to ... (new)"&gt;#39953&lt;/a&gt;).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If both &lt;code&gt;date&lt;/code&gt; and &lt;code&gt;date_gmt&lt;/code&gt; are specified in an update, and it's a draft, and this would lead to different values for the date... I guess that should probably be an error.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This should be a separate ticket as well (&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/39954" title="#39954: enhancement: REST API: Improve date updates if both `date` and `date_gmt` are set (new)"&gt;#39954&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
Other changes in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38883/38883.2.diff" title="Attachment '38883.2.diff' in Ticket #38883"&gt;38883.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38883/38883.2.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Fix the sign of the timezone offset
&lt;/li&gt;&lt;li&gt;Add better, more direct tests including a non-zero timezone offset
&lt;/li&gt;&lt;li&gt;Clean up comments and tests (remove some duplicate test logic)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
So I think this is pretty much ready to go.  If anyone has any feedback please leave it ASAP because this needs to land in 4.7.3.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39954 (REST API: Improve date updates if both `date` and `date_gmt` are set) created</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 19:51:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39954</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39954/1487879501385074</guid>
      <description>&lt;p&gt;
Currently, if you set both the &lt;code&gt;date&lt;/code&gt; and &lt;code&gt;date_gmt&lt;/code&gt; fields when creating or updating a &lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php#L996"&gt;post&lt;/a&gt; or &lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/rest-api/endpoints/class-wp-rest-comments-controller.php#L1119"&gt;comment&lt;/a&gt;, the &lt;code&gt;date&lt;/code&gt; field will take precedence and the &lt;code&gt;date_gmt&lt;/code&gt; field will be ignored.
&lt;/p&gt;
&lt;p&gt;
This behavior isn't ideal because when either of these two dates is specified, the other is also updated based on the site's timezone offset.
&lt;/p&gt;
&lt;p&gt;
If both &lt;code&gt;date&lt;/code&gt; and &lt;code&gt;date_gmt&lt;/code&gt; are specified, &lt;strong&gt;and&lt;/strong&gt; the two values do not match according to the site's current timezone offset, there are a couple of options for improving the behavior:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Update the date fields exactly as requested, even though they will not match the site's current timezone offset.
&lt;/li&gt;&lt;li&gt;Return an error.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39694 (wp_check_filetype() returns false for html files) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 23 Feb 2017 19:51:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39694#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39694#comment:2/1487879486488008</guid>
      <description>&lt;p&gt;
Hi @onnimonni. This is probably related to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39550" title="#39550: defect (bug): Some Non-image files fail to upload after 4.7.1 (closed: fixed)"&gt;#39550&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39953 (REST API: Do not update date when preparing post if date is known to ...) created</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 19:47:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39953</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39953/1487879264203366</guid>
      <description>&lt;p&gt;
If the &lt;code&gt;post_date_gmt&lt;/code&gt; field for a draft is &lt;code&gt;0000-00-00 00:00:00&lt;/code&gt;, WP core uses this as a marker to update the date of the draft to the current time whenever the post is updated.  See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5698#comment:14" title="#5698: defect (bug): Set timestamps for unpublished posts (closed: fixed)"&gt;ticket:5698#comment:14&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
After &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38883" title="#38883: defect (bug): Shim post_date_gmt for drafts / empty dates in the REST API (closed: fixed)"&gt;#38883&lt;/a&gt;, there's not a way to determine whether a post is in this status (being able to use the &lt;code&gt;date_gmt&lt;/code&gt; field is far more important).  To restore this ability (and also add the ability to modify this status, which has never been present in the REST API), we need to add a new boolean field.
&lt;/p&gt;
&lt;p&gt;
Storing this piece of information ("should we update the date of this post when it's saved?") in a separate field is the way this functionality should have been implemented from the beginning.  It's probably too late to make this change for WP core, but we can at least provide a better design in the REST API.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39875 (PDF previews overwrite existing images with the same name.) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 23 Feb 2017 19:47:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39875#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39875#comment:11/1487879232900076</guid>
      <description>&lt;p&gt;
Updated the patch per discussion in this week's dev chat (&lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487877384001584"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/core-media/p1487877384001584&lt;/a&gt;). Leave the original file name intact, but add a random string, and &lt;code&gt;-pdf&lt;/code&gt; to the end.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39883 (Code hooking on `image_downsize` can no longer assume the file is an image) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 23 Feb 2017 19:45:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39883#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39883#comment:6/1487879105330274</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>39875.2.diff attached to Ticket #39875</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 23 Feb 2017 19:44:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39875/39875.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39875/39875.2.diff/1487879071991467</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39883 (Code hooking on `image_downsize` can no longer assume the file is an image) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 23 Feb 2017 19:42:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39883#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39883#comment:5/1487878949571352</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487878947001635"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38883.2.diff attached to Ticket #38883</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 19:37:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38883/38883.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38883/38883.2.diff/1487878622692978</guid>
      <description>&lt;p&gt;
Corrected sign of timezone offset; added more tests; other minor cleanup
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39875 (PDF previews overwrite existing images with the same name.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 23 Feb 2017 19:16:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39875#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39875#comment:10/1487877394939267</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487877392001585"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39552 (SVG upload support broken in 4.7.1) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 23 Feb 2017 19:15:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39552#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39552#comment:32/1487877346122226</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487877344001581"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 23 Feb 2017 19:15:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:122</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:122/1487877332560435</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/32417#comment:120" title="Comment 120"&gt;gonom9&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@karmatosed Fixed the bug of ignoring changes of title and caption in both &lt;a href="https://core.trac.wordpress.org/attachment/ticket/32417/32417.16.diff"&gt;32417.16.diff&lt;/a&gt; and &lt;a class="ext-link" href="https://gist.github.com/taggon/d381e421b743eb5f0e71d225ea18fffa"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the plugin&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@gonom9 Is this the right approach? Is this not resulting in the title and caption being duplicated in the widget vs. what is stored in the attachment? To eliminate that duplication I reverted &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/215/commits/0bb0f579d1a5ec686624981b9a1fc9ce12307eea"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;that commit&lt;/a&gt; and added a &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/215/commits/dd038c5238a2f4e358222a6ac9d8e2a360cde8b7"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;new one&lt;/a&gt; which takes a different approach to explicitly refresh the widget partial in the preview whenever the form is re-rendered. Note that this doesn't account for the case where a user may change an attachment's caption but then close the modal without hitting the Add button.
&lt;/p&gt;
&lt;p&gt;
Really this is starting to touch on &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37887" title="#37887: enhancement: Make attachments atomic until a Customizer session is published (new)"&gt;#37887&lt;/a&gt; where there is a problem previewing with the media modal. When a change is made in the media modal (such as to the caption) the change is written to the DB immediately. This will be somewhat unexpected in the customizer context because everything should be &lt;em&gt;previewed&lt;/em&gt; until hitting Save &amp;amp; Publish.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 23 Feb 2017 19:11:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:111</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:111/1487877074512833</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487877072001570"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39516 (Media grid upload errors display below the grid.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 23 Feb 2017 19:06:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39516#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39516#comment:25/1487876801158743</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487876798001566"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37140 (Rotating images doesn't adjust orientation for imagick) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 23 Feb 2017 19:05:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37140#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37140#comment:34/1487876731964040</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487876729001560"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27555 (Make tag post meta box more accessible) updated</title>
      
        <dc:creator>cyclic</dc:creator>

      <pubDate>Thu, 23 Feb 2017 18:38:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27555#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27555#comment:36/1487875129503602</guid>
      <description>&lt;p&gt;
This change includes removing "return false" from the click handler on $( '.tagcloud-link' ):
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/commit/5c555e5d10d57c69b41c2eb5e5fae383805cef88#diff-9d47a87c240c1d10701cd6a02b28aa1bL199"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/commit/5c555e5d10d57c69b41c2eb5e5fae383805cef88#diff-9d47a87c240c1d10701cd6a02b28aa1bL199&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Previously an anchor tag with that class could have any href and it wouldn't make a difference. Now the href must be "javascript:;" to accommodate the fact that the handler no longer returns false. Is that a bug or is there a reason it was removed?
&lt;/p&gt;
&lt;p&gt;
The specific case I'm looking at is in the bp-event-organiser plugin which relies on the tags-box library:
&lt;/p&gt;
&lt;p&gt;
wp_enqueue_script:
&lt;a class="ext-link" href="https://github.com/cuny-academic-commons/bp-event-organiser/blob/master/includes/wp-frontend-admin-screen/wp-frontend-admin-screen.php#L448"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/cuny-academic-commons/bp-event-organiser/blob/master/includes/wp-frontend-admin-screen/wp-frontend-admin-screen.php#L448&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
the markup which includes the class "tagcloud" with an href of "#titlediv", which the browser obeys after upgrading WP to include the new tags-box (previously the href was ignored due to "return false"):
&lt;a class="ext-link" href="https://github.com/cuny-academic-commons/bp-event-organiser/blob/master/includes/wp-frontend-admin-screen/abstraction-metabox.php#L476"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/cuny-academic-commons/bp-event-organiser/blob/master/includes/wp-frontend-admin-screen/abstraction-metabox.php#L476&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39854 (REST API: Add gmt_offset to base /wp-json response) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 23 Feb 2017 18:15:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39854#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39854#comment:6/1487873718468143</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1487873716004958"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39854 (REST API: Add gmt_offset to base /wp-json response) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 18:12:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39854#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39854#comment:5/1487873578936594</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@sagarkbhatt thanks for working on this, though I think it is going to take a couple more iterations to get it finished.
&lt;/p&gt;
&lt;p&gt;
Currently, I can visit e.g. &lt;a class="ext-link" href="https://nylen.io/wp-dev/wp-json?context=edit"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://nylen.io/wp-dev/wp-json?context=edit&lt;/a&gt; without authentication.  Your latest patch would change that request to return an error, which I don't think is a good idea.
&lt;/p&gt;
&lt;p&gt;
One way to work around this would be to just add the additional arguments if the request is correctly authenticated.  This is backwards-compatible; however, it isn't very discoverable.  Marking as &lt;code&gt;dev-feedback&lt;/code&gt; to get other contributors' opinions here.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;current_user_can( 'edit_posts' )&lt;/code&gt; looks like a reasonable authentication check here, though I think simply &lt;code&gt;is_user_logged_in()&lt;/code&gt; would also work.
&lt;/p&gt;
&lt;p&gt;
I don't think &lt;code&gt;wp_parse_args&lt;/code&gt; is the right function to use here, and we want to make sure the code reads well even after other values are added.  Maybe something like this would work:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;if ( 'edit' === $request['context'] ) {
    if ( is_user_logged_in() ) {
        $available['gmt_offset'] = get_option( 'gmt_offset' );
    }
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Finally, as noted before, we need unit tests for this change.  I can think of several cases to test:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Unauthenticated request: &lt;code&gt;gmt_offset&lt;/code&gt; does not appear in the response.
&lt;/li&gt;&lt;li&gt;Request with insufficient authentication: &lt;code&gt;gmt_offset&lt;/code&gt; does not appear in the response.
&lt;/li&gt;&lt;li&gt;Authenticated request: &lt;code&gt;gmt_offset&lt;/code&gt; does appear in the response.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;gmt_offset&lt;/code&gt; should always be a number, regardless of whether it is set or the &lt;code&gt;timezone_string&lt;/code&gt; is set instead.  (I don't recall exactly how this works, maybe we don't have to do anything special here.)
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39952 (Category Dropdown Widget: required spacing issue on attachments template) created</title>
      
        <dc:creator>tribalNerd</dc:creator>

      <pubDate>Thu, 23 Feb 2017 17:50:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39952</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39952/1487872213148051</guid>
      <description>&lt;p&gt;
This issue only happens on the attachments.php template, all other primary templates don't appear to have the issue.
&lt;/p&gt;
&lt;p&gt;
When using the category widget as a dropdown, the select statement looks like: &amp;lt;selectname='cat' rather than &amp;lt;select name='cat'
&lt;/p&gt;
&lt;p&gt;
The file, category-template.php output statement is:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;select &lt;/span&gt;&lt;span class="si"&gt;$required&lt;/span&gt;&lt;span class="s2"&gt; name='&lt;/span&gt;&lt;span class="si"&gt;$name&lt;/span&gt;&lt;span class="s2"&gt;' id='&lt;/span&gt;&lt;span class="si"&gt;$id&lt;/span&gt;&lt;span class="s2"&gt;' class='&lt;/span&gt;&lt;span class="si"&gt;$class&lt;/span&gt;&lt;span class="s2"&gt;' &lt;/span&gt;&lt;span class="si"&gt;$tab_index_attribute&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Removing $required corrects the issue.
&lt;/p&gt;
&lt;p&gt;
Setting required to true also corrects the issue.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;categories_dropdown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'required'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'widget_categories_dropdown_args'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'categories_dropdown'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Which returns:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;select required="" name="cat" id="cat" class="postform"&amp;gt;
&lt;/pre&gt;&lt;p&gt;
While this does correct the issue, the required="" isn't correct either, it should be: required without the =""
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It should also have aria-required="true" for Safari.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39950 (window is reloaded after changing page_for_posts in Customizer even ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 23 Feb 2017 17:37:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39950#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39950#comment:1/1487871475203328</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Actually, the preview isn't refreshing, but rather it is changing the URL to the page you just switched to. This is intentional. See this snippet in &lt;code&gt;customize-controls.js&lt;/code&gt;:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="c1"&gt;// Change the previewed URL to the selected page when changing the page_for_posts.
&lt;/span&gt;&lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'page_for_posts'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;setting&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;pageId&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;pageId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;pageId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;pageId&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;previewer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;previewUrl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;home&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;'?page_id='&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;pageId&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
This behavior was introduced in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30677" title="#30677: enhancement: Customizer: Setting Front page does not work (closed: fixed)"&gt;#30677&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39933 (WP_REST_Request::get_param() doesn't work for getting body params on ...) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 17:29:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39933#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39933#comment:9/1487870989709373</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39933/39933.5.diff" title="Attachment '39933.5.diff' in Ticket #39933"&gt;39933.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39933/39933.5.diff" title="Download"&gt;​&lt;/a&gt; looks good and tests out well for me.  I merged the previous patch files into one (easier to deal with this way), did a bit more cleanup, and skipped the PHPDoc on the data provider method as I don't think it's necessary.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38207 (Disable Trackbacks by Default Keep Pingbacks On) updated</title>
      
        <dc:creator>egyptimhotep</dc:creator>

      <pubDate>Thu, 23 Feb 2017 17:25:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38207#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38207#comment:5/1487870748164354</guid>
      <description>&lt;p&gt;
+1 for this
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39933.5.diff attached to Ticket #39933</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 17:20:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39933/39933.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39933/39933.5.diff/1487870442591592</guid>
      <description>&lt;p&gt;
Unify previous patch files; further tests cleanup
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39947 (REST API: Sticky post query returns unsticky posts when no posts are sticky) updated</title>
      
        <dc:creator>ryelle</dc:creator>

      <pubDate>Thu, 23 Feb 2017 17:20:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39947#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39947#comment:5/1487870421253409</guid>
      <description>&lt;p&gt;
I've added a patch with the is_array check from &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39947#comment:2" title="Comment 2"&gt;this comment&lt;/a&gt;, plus some tests. I also changed &lt;code&gt;$args['post__in'] = array( -1 );&lt;/code&gt; to &lt;code&gt;0&lt;/code&gt;, because wp_query runs absint over the &lt;code&gt;post__in&lt;/code&gt; array, and so was converting it to post ID 1.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39947.diff attached to Ticket #39947</title>
      
        <dc:creator>ryelle</dc:creator>

      <pubDate>Thu, 23 Feb 2017 17:16:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39947/39947.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39947/39947.diff/1487870169340731</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>blobfolio</dc:creator>

      <pubDate>Thu, 23 Feb 2017 17:03:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:110</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:110/1487869421985522</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39550#comment:108" title="Comment 108"&gt;kontur&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Yes, I understand. At any rate, this bug pretty much renders a plugin of mine useless, since it is centred around uploading and displaying webfonts, all of which, I think, require that the accepted mime type gets augmented, and then successfully passes this check - which currently it doesn't, or seemingly only sporadic on some installations.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You could add a filter to your plugin to specifically bypass the issue only for font files, either re-implementing a looser &lt;code&gt;finfo&lt;/code&gt; check (but again for font files I don't expect that will work consistently), or just rebuilding the ext/type data by passing the original filename back through &lt;code&gt;wp_check_filetype&lt;/code&gt;. Take a look at this function for inspiration: &lt;a class="ext-link" href="https://github.com/Blobfolio/blob-common/blob/master/wp/functions-behavior.php#L31"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/Blobfolio/blob-common/blob/master/wp/functions-behavior.php#L31&lt;/a&gt;  Obviously all the class stuff is a bit out of scope for your needs, but if you remove 75% of it you should have what you need.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39875 (PDF previews overwrite existing images with the same name.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 23 Feb 2017 16:59:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39875#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39875#comment:9/1487869193297122</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by desrosj. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487869191001461"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39947 (REST API: Sticky post query returns unsticky posts when no posts are sticky) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 16:55:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39947#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39947#comment:4/1487868908884929</guid>
      <description>&lt;p&gt;
I would say that we need to get it committed to trunk today or tomorrow at the very latest.  A bit of a stretch, but potentially doable.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
if there are no sticky posts set
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I guess we need to know what &lt;code&gt;get_option( 'sticky_posts' )&lt;/code&gt; returns in this case, and what other values it might return.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 23 Feb 2017 16:54:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:109</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:109/1487868848210625</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by jjj. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487868845001453"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39947 (REST API: Sticky post query returns unsticky posts when no posts are sticky) updated</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Thu, 23 Feb 2017 16:53:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39947#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39947#comment:3/1487868815273691</guid>
      <description>&lt;p&gt;
@jnylen0 I am +1 on getting this fixed as soon as possible, I milestoned for 4.7.4 because I thought we'd missed the cutoff -- but let's see what we can do :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39947 (REST API: Sticky post query returns unsticky posts when no posts are sticky) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 16:52:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39947#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39947#comment:2/1487868767355559</guid>
      <description>&lt;p&gt;
@kadamwhite what do you think about getting this into 4.7.3 if we can get it patched quickly enough?
&lt;/p&gt;
&lt;p&gt;
@ryelle are you available to write a patch and unit tests for this change today?
&lt;/p&gt;
&lt;p&gt;
As for the patch, I would suggest something like this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$sticky_posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_option&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'sticky_posts'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nb"&gt;is_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$sticky_posts&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$sticky_posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'sticky'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// ...
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39701 (Do not allow editing users from a different site in REST API) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 23 Feb 2017 16:41:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39701#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39701#comment:25/1487868097004724</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I agree with @jnylen0 here. While it's certainly not optimal that this behavior has been introduced at all, it would be much worse if we had to live with it long-term, so I think it's a necessary fix. I think providing a changelog like the above will be sufficient documentation for anyone who uses the REST API currently to edit or view users from another site (which should be a low number considering that this feature and generally any multisite functionality have never been documented).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>kontur</dc:creator>

      <pubDate>Thu, 23 Feb 2017 16:38:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:108</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:108/1487867904896390</guid>
      <description>&lt;p&gt;
Yes, I understand. At any rate, this bug pretty much renders a plugin of mine useless, since it is centred around uploading and displaying webfonts, all of which, I think, require that the accepted mime type gets augmented, and then successfully passes this check - which currently it doesn't, or seemingly only sporadic on some installations.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39550#comment:107" title="Comment 107"&gt;blobfolio&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39550#comment:106" title="Comment 106"&gt;kontur&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Even when passing in my augmented mimes again as $overwrites [...] finfo returns the type for my uploaded woff as ""application/octet-stream", which contradicts the mime received from the file extension which wp_check_filetype() correctly extracted, alas $ext and $type get set to false, which triggers the error message then.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, in general, &lt;code&gt;application/octet-stream&lt;/code&gt;, &lt;code&gt;text/plain&lt;/code&gt;, and anything falsey like &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;FALSE&lt;/code&gt;, or &lt;code&gt;""&lt;/code&gt; should basically be treated as a lack of &lt;code&gt;finfo&lt;/code&gt; support rather than a hard-stop error.
&lt;/p&gt;
&lt;p&gt;
At any rate, the role of &lt;code&gt;finfo&lt;/code&gt; in the upload process is going to have to be diminished quite a bit from its 4.7.1 implementation. It can be used to reliably detect certain limited types of deception, but because the WordPress core only natively supports a single ext:mime mapping, it can't be used for broader validation.
&lt;/p&gt;
&lt;p&gt;
The WOFF spec does include magic number support, but since the format has been associated with a half-dozen different MIME types over the years, even if PHP does produce a match, it might not be the one match WordPress is looking for.
&lt;/p&gt;
&lt;p&gt;
There is, however, potential for plugins to provide a more robust &lt;code&gt;finfo()&lt;/code&gt;-based validation process. Depending on how this ticket plays out, I'll put something together for everyone. ;)
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39701 (Do not allow editing users from a different site in REST API) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 16:30:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39701#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39701#comment:24/1487867447760888</guid>
      <description>&lt;p&gt;
I created a "Changelog" document for the REST API handbook.  It's live at &lt;a class="ext-link" href="https://developer.wordpress.org/rest-api/changelog/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/rest-api/changelog/&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
@ocean90 in the absence of further feedback I would like to move forward with this change.  It has been planned and documented for several weeks now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>blobfolio</dc:creator>

      <pubDate>Thu, 23 Feb 2017 16:28:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:107</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:107/1487867302512842</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39550#comment:106" title="Comment 106"&gt;kontur&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Even when passing in my augmented mimes again as $overwrites [...] finfo returns the type for my uploaded woff as ""application/octet-stream", which contradicts the mime received from the file extension which wp_check_filetype() correctly extracted, alas $ext and $type get set to false, which triggers the error message then.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, in general, &lt;code&gt;application/octet-stream&lt;/code&gt;, &lt;code&gt;text/plain&lt;/code&gt;, and anything falsey like &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;FALSE&lt;/code&gt;, or &lt;code&gt;""&lt;/code&gt; should basically be treated as a lack of &lt;code&gt;finfo&lt;/code&gt; support rather than a hard-stop error.
&lt;/p&gt;
&lt;p&gt;
At any rate, the role of &lt;code&gt;finfo&lt;/code&gt; in the upload process is going to have to be diminished quite a bit from its 4.7.1 implementation. It can be used to reliably detect certain limited types of deception, but because the WordPress core only natively supports a single ext:mime mapping, it can't be used for broader validation.
&lt;/p&gt;
&lt;p&gt;
The WOFF spec does include magic number support, but since the format has been associated with a half-dozen different MIME types over the years, even if PHP does produce a match, it might not be the one match WordPress is looking for.
&lt;/p&gt;
&lt;p&gt;
There is, however, potential for plugins to provide a more robust &lt;code&gt;finfo()&lt;/code&gt;-based validation process. Depending on how this ticket plays out, I'll put something together for everyone. ;)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39561 (REST API JavaScript client: Correct name route discovery for custom ...) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 16:05:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39561#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39561#comment:13/1487865945421123</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@adamsilverstein let's go with &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39561/39561.5.diff" title="Attachment '39561.5.diff' in Ticket #39561"&gt;39561.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39561/39561.5.diff" title="Download"&gt;​&lt;/a&gt; here.  Only minor changes from your last patch: removed the PHPUnit test fix as that's a separate change addressed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40104" title="REST API: Ensure that tests pass if extra endpoints are registered.
 ..."&gt;[40104]&lt;/a&gt;, and added a comment about the &lt;code&gt;assert &amp;amp;&amp;amp; assert.equal&lt;/code&gt; fix.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39561.5.diff attached to Ticket #39561</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 16:04:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39561/39561.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39561/39561.5.diff/1487865848556633</guid>
      <description>&lt;p&gt;
Just the new tests (and the QUnit fix)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>kontur</dc:creator>

      <pubDate>Thu, 23 Feb 2017 15:53:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:106</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:106/1487865222296992</guid>
      <description>&lt;p&gt;
Even when passing in my augmented mimes again as $overwrites (which I shouldn't have to) in &lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/functions.php#L2326"&gt;https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/functions.php#L2326&lt;/a&gt; finfo returns the type for my uploaded woff as ""application/octet-stream", which contradicts the mime received from the file extension which wp_check_filetype() correctly extracted, alas $ext and $type get set to false, which triggers the error message then.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39264 (Add WP-API JS Client unit tests to core) reopened</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 15:52:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39264#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39264#comment:49/1487865122480076</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39264#comment:44" title="Comment 44"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I expect there'll be diverging changes/new features in trunk/4.8 then merging this to 4.7 in order to ensure that the stable release has this proper test coverage available to it too seems like the right thing to do here.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I should have said something about this in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39264#comment:40" title="Comment 40"&gt;comment:40&lt;/a&gt; but this is my thinking as well.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39264 (Add WP-API JS Client unit tests to core) closed</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 15:49:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39264#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39264#comment:48/1487864985285802</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40104" title="REST API: Ensure that tests pass if extra endpoints are registered.
 ..."&gt;40104&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Ensure that tests pass if extra endpoints are registered.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Many plugins and themes use the WP core test suite to run their unit tests, so the API tests shouldn't fail if there are extra endpoints registered in non-core namespaces.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props rachelbaker.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39264" title="#39264: enhancement: Add WP-API JS Client unit tests to core (closed: fixed)"&gt;#39264&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40104]: REST API: Ensure that tests pass if extra endpoints are registered.  ...</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 23 Feb 2017 15:49:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40104</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40104/1487864984796071</guid>
      <description>&lt;p&gt;
REST API: Ensure that tests pass if extra endpoints are registered.
&lt;/p&gt;
&lt;p&gt;
Many plugins and themes use the WP core test suite to run their unit tests, so the API tests shouldn't fail if there are extra endpoints registered in non-core namespaces.
&lt;/p&gt;
&lt;p&gt;
Props rachelbaker.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39264" title="#39264: enhancement: Add WP-API JS Client unit tests to core (closed: fixed)"&gt;#39264&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Tickets #39550,​39951 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 23 Feb 2017 15:49:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=39550%2C39951</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=39550%2C39951/1487864943092826</guid>
      <description>duplicate: &lt;p&gt;
Hi @kontur, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
Thanks for the report, we're already tracking this issue in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39550" title="#39550: defect (bug): Some Non-image files fail to upload after 4.7.1 (closed: fixed)"&gt;#39550&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #39951 (upload_mimes hook does not work for woff files with media_handle_upload()) created</title>
      
        <dc:creator>kontur</dc:creator>

      <pubDate>Thu, 23 Feb 2017 15:26:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39951</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39951/1487863605657779</guid>
      <description>&lt;p&gt;
I have extended allowed upload mime types as explained (&lt;a class="ext-link" href="https://codex.wordpress.org/Plugin_API/Filter_Reference/upload_mimes"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Plugin_API/Filter_Reference/upload_mimes&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
Using get_allowed_mime_types() I can confirm those get registered correctly.
&lt;/p&gt;
&lt;p&gt;
However, media_handle_upload() still results in an error: "Sorry, this file type is not permitted for security reasons."
&lt;/p&gt;
&lt;p&gt;
media_handle_upload() calls wp_handle_upload() (&lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-admin/includes/media.php?rev=40103#L281"&gt;https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-admin/includes/media.php?rev=40103#L281&lt;/a&gt;) and in that function wp_check_file_and_ext is called (&lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-admin/includes/file.php?rev=40103#L342"&gt;https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-admin/includes/file.php?rev=40103#L342&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
However, reading the documentation for wp_check_filetype_and_ext() (&lt;a class="ext-link" href="https://codex.wordpress.org/Function_Reference/wp_check_filetype_and_ext"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Function_Reference/wp_check_filetype_and_ext&lt;/a&gt;) states:
Currently this function only supports validating images known to getimagesize().
&lt;/p&gt;
&lt;p&gt;
Maybe this is or is not the reason that the extended mime types have no effect. Either way, adding the mime type for woff does not allow those uploads, which seems like a clear bug.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36934 (Use of get_the_excerpt($post) is broken if post has no excerpt and you ...) updated</title>
      
        <dc:creator>achbed</dc:creator>

      <pubDate>Thu, 23 Feb 2017 15:22:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36934#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36934#comment:40/1487863353026555</guid>
      <description>&lt;p&gt;
Is it a good thing or a bad thing that the only issue I have with this latest patch is the value for &lt;code&gt;@since&lt;/code&gt; in the docblock in &lt;code&gt;src/wp-includes/formatting.php&lt;/code&gt;?
&lt;/p&gt;
&lt;p&gt;
Thanks for all the long hard looks @swissspidy ! This one's been a doozy because of all the core WP_Post and WP_Query changes required.  I think it sets us all on a better footing though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 23 Feb 2017 14:20:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:121</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:121/1487859627941328</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/32417#comment:118" title="Comment 118"&gt;karmatosed&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;There's a weird difference in behaviour between images and video. If I click an image it takes me to change the media, if I click a video it plays.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Yep, I'd totally second some improvements here. See also second point on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32417#comment:97" title="#32417: feature request: Add new core media widget (closed: fixed)"&gt;#comment:97&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Above said, if we do keep clicking to change an image, I also have queries about it's discoverability. It's hidden unless you actually do click.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
+ 1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>gonom9</dc:creator>

      <pubDate>Thu, 23 Feb 2017 13:47:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:120</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:120/1487857620987411</guid>
      <description>&lt;p&gt;
@karmatosed Fixed the bug of ignoring changes of title and caption in both &lt;a href="https://core.trac.wordpress.org/attachment/ticket/32417/32417.16.diff"&gt;32417.16.diff&lt;/a&gt; and &lt;a class="ext-link" href="https://gist.github.com/taggon/d381e421b743eb5f0e71d225ea18fffa"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the plugin&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>32417.16.diff attached to Ticket #32417</title>
      
        <dc:creator>gonom9</dc:creator>

      <pubDate>Thu, 23 Feb 2017 13:30:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32417/32417.16.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32417/32417.16.diff/1487856608561330</guid>
      <description>&lt;p&gt;
Fix: Changing title and caption of the image don't reflect in the widget
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39944 (Site wp_X_user_roles option not updated when network settings change) updated</title>
      
        <dc:creator>sanchothefat</dc:creator>

      <pubDate>Thu, 23 Feb 2017 13:24:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39944#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39944#comment:1/1487856242912394</guid>
      <description>&lt;p&gt;
On further discussion with colleagues it seems this *should* be handled in capabilities.php however a bunch of the capabilities listed in schema.php are not reflected in that file - for example &lt;code&gt;list_users&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I guess a patch here will just be a case of going through the extra roles added in schema.php that aren't present in the &lt;code&gt;map_meta_cap()&lt;/code&gt; switch statement.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39947 (REST API: Sticky post query returns unsticky posts when no posts are sticky) updated</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Thu, 23 Feb 2017 13:21:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39947#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39947#comment:1/1487856111033047</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36934 (Use of get_the_excerpt($post) is broken if post has no excerpt and you ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 23 Feb 2017 13:20:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36934#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36934#comment:39/1487856012613311</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36934/36934.3.diff" title="Attachment '36934.3.diff' in Ticket #36934"&gt;36934.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36934/36934.3.diff" title="Download"&gt;​&lt;/a&gt; is a refreshed patch against trunk that applies cleanly and also makes all tests pass.
&lt;/p&gt;
&lt;p&gt;
The main thing I changed was similar to the change in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/30085" title="Improve global variable setting in `setup_postdata()`.
 ..."&gt;[30085]&lt;/a&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( ! $page || $post-&amp;gt;ID !== get_queried_object_id() ) {
    $page = 1;
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13340 (wpautop breaks inline MathMl) updated</title>
      
        <dc:creator>hughie.molloy</dc:creator>

      <pubDate>Thu, 23 Feb 2017 12:58:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13340#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13340#comment:14/1487854720763071</guid>
      <description>&lt;p&gt;
&amp;lt;math&amp;gt; tag has been a support element in HTML5 since 2011. &lt;a class="ext-link" href="https://www.w3.org/wiki/HTML/Elements/math"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.w3.org/wiki/HTML/Elements/math&lt;/a&gt;
Please consider reopening this as it makes a huge difference to inline formatting.
&lt;/p&gt;
&lt;p&gt;
Purposed:
&lt;a style="padding:0; border:none" href="http://i.imgur.com/HwB7yvx.png"&gt;&lt;img src="http://i.imgur.com/HwB7yvx.png" alt="http://i.imgur.com/HwB7yvx.png" crossorigin="anonymous" title="http://i.imgur.com/HwB7yvx.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Current:
&lt;a style="padding:0; border:none" href="http://i.imgur.com/18Xtcj2.png"&gt;&lt;img src="http://i.imgur.com/18Xtcj2.png" alt="http://i.imgur.com/18Xtcj2.png" crossorigin="anonymous" title="http://i.imgur.com/18Xtcj2.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Plain Text:
&amp;lt;h3&amp;gt;Quantum quandary&amp;lt;/h3&amp;gt;At first sight, magnetic monopoles seem to be incompatible with quantum mechanics. That is because in quantum mechanics, electromagnetic fields have to be described in terms of a scalar potential &amp;lt;math xmlns="&lt;a class="ext-link" href="http://www.w3.org/1998/Math/MathML"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.w3.org/1998/Math/MathML&lt;/a&gt;"&amp;gt;&amp;lt;mi&amp;gt;ϕ&amp;lt;/mi&amp;gt;&amp;lt;/math&amp;gt; and vector potential &amp;lt;math xmlns="&lt;a class="ext-link" href="http://www.w3.org/1998/Math/MathML"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.w3.org/1998/Math/MathML&lt;/a&gt;"&amp;gt;&amp;lt;mi mathvariant="bold"&amp;gt;A&amp;lt;/mi&amp;gt;&amp;lt;/math&amp;gt;. The magnetic field is given by the curl of the vector potential, &amp;lt;math xmlns="&lt;a class="ext-link" href="http://www.w3.org/1998/Math/MathML"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.w3.org/1998/Math/MathML&lt;/a&gt;"&amp;gt;&amp;lt;mi mathvariant="bold"&amp;gt;B&amp;lt;/mi&amp;gt;&amp;lt;mo&amp;gt;=&amp;lt;/mo&amp;gt;&amp;lt;mi mathvariant="bold"&amp;gt;∇&amp;lt;/mi&amp;gt;&amp;lt;mo&amp;gt;×&amp;lt;/mo&amp;gt;&amp;lt;mi mathvariant="bold"&amp;gt;A&amp;lt;/mi&amp;gt;&amp;lt;/math&amp;gt;, and it follows from elementary vector calculus that the field must then be sourceless, &amp;lt;math xmlns="&lt;a class="ext-link" href="http://www.w3.org/1998/Math/MathML"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.w3.org/1998/Math/MathML&lt;/a&gt;"&amp;gt;&amp;lt;mi mathvariant="bold"&amp;gt;∇&amp;lt;/mi&amp;gt;&amp;lt;mo&amp;gt;.&amp;lt;/mo&amp;gt;&amp;lt;mi mathvariant="bold"&amp;gt;B&amp;lt;/mi&amp;gt;&amp;lt;mo&amp;gt;=&amp;lt;/mo&amp;gt;&amp;lt;mn&amp;gt;0&amp;lt;/mn&amp;gt;&amp;lt;/math&amp;gt;. In other words, magnetic field lines cannot end. So how can there be magnetic monopoles?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36934.3.diff attached to Ticket #36934</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 23 Feb 2017 12:51:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36934/36934.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36934/36934.3.diff/1487854266430881</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #25349 (Can't retrieve calculated excerpt bound by &lt;!--more--&gt; on single page view) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 23 Feb 2017 12:42:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25349#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25349#comment:20/1487853725846550</guid>
      <description>&lt;p&gt;
Related: &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/36934" title="#36934: defect (bug): Use of get_the_excerpt($post) is broken if post has no excerpt and you ... (reviewing)"&gt;#36934&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #21894,​25349 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 23 Feb 2017 12:40:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=21894%2C25349</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=21894%2C25349/1487853630727074</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21894" title="#21894: defect (bug): &amp;lt;!--more--&amp;gt; tag does nothing in secondary loops when is_single because ... (closed: duplicate)"&gt;#21894&lt;/a&gt; was marked as a duplicate.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>gonom9</dc:creator>

      <pubDate>Thu, 23 Feb 2017 12:24:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:119</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:119/1487852655141644</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/32417#comment:116" title="Comment 116"&gt;celloexpressions&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Most default themes (and as a result, likely other themes) that implement custom styles for the MediaElement players scope their CSS to &lt;code&gt;.hentry&lt;/code&gt; to have higher specificity than the MediaElement styling provided by WordPress. This custom styling needs to apply to widgets too, ideally without making theme changes. This is a blocker for shipping I think, and if theme changes are required I'm not sure that we should release this feature in a minor release (unless theme outreach happens for a period of time prior).
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
It sounds like we should assume every theme developers want to use the same style of media elements on both content and widget area. But we don't assume that for any other widget content such as menus and links.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Thu, 23 Feb 2017 12:21:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:118</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:118/1487852512876916</guid>
      <description>&lt;p&gt;
Overall, this feels like a great, useful thing for users. I can see them really finding this solves a problem and a resolves a common need to install something extra.
&lt;/p&gt;
&lt;p&gt;
I did some testing and here is my feedback (I tried to focus on things not already reported):
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Changing the title and caption of the image didn't reflect in the widget until I changed the title itself of widget
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/El4Jf4e00u.gif"&gt;&lt;img src="https://cldup.com/El4Jf4e00u.gif" alt="https://cldup.com/El4Jf4e00u.gif" crossorigin="anonymous" title="https://cldup.com/El4Jf4e00u.gif" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I love they are responsive but I can created a 200px wide image, uploaded it and it became very stretched - even worse on tablet sizes:
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/KdM0QcSt0W.png"&gt;&lt;img width="80%" alt="https://cldup.com/KdM0QcSt0W.png" title="https://cldup.com/KdM0QcSt0W.png" crossorigin="anonymous" src="https://cldup.com/KdM0QcSt0W.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/0O0-OQAV90.png"&gt;&lt;img width="80%" alt="https://cldup.com/0O0-OQAV90.png" title="https://cldup.com/0O0-OQAV90.png" crossorigin="anonymous" src="https://cldup.com/0O0-OQAV90.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Is there any way we can stay true to the original size?
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;There's a weird difference in behaviour between images and video. If I click an image it takes me to change the media, if I click a video it plays. This is in the widget sidebar here:
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/Cb2J4Us9UY.png"&gt;&lt;img width="50%" alt="https://cldup.com/Cb2J4Us9UY.png" title="https://cldup.com/Cb2J4Us9UY.png" crossorigin="anonymous" src="https://cldup.com/Cb2J4Us9UY.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I would suggest remove ability to play video here and make it that you can play in preview. Otherwise it's a confusing experience having 2 different behaviours.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Above said, if we do keep clicking to change an image, I also have queries about it's discoverability. It's hidden unless you actually do click.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;I would very much suggest we keep 'Add an image, video, or audio to your sidebar'. It's well explained and will benefit users.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;I tested all default themes myself and agree with @melchoyce's comments. Here is a visual record using both a video and image, to add to Mel's:
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/Y9SO521Urx.png"&gt;&lt;img src="https://cldup.com/Y9SO521Urx.png" alt="https://cldup.com/Y9SO521Urx.png" crossorigin="anonymous" title="https://cldup.com/Y9SO521Urx.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #36934,​39949 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 23 Feb 2017 12:04:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=36934%2C39949</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=36934%2C39949/1487851463788052</guid>
      <description>duplicate: &lt;p&gt;
Yeah a &lt;code&gt;WP_Post::get_excerpt()&lt;/code&gt; method or something like that might be possible. But let's keep the discussion at &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/36934" title="#36934: defect (bug): Use of get_the_excerpt($post) is broken if post has no excerpt and you ... (reviewing)"&gt;#36934&lt;/a&gt; :-)
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #39950 (window is reloaded after changing page_for_posts in Customizer even ...) created</title>
      
        <dc:creator>martinmalinda</dc:creator>

      <pubDate>Thu, 23 Feb 2017 12:02:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39950</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39950/1487851364717932</guid>
      <description>&lt;p&gt;
I am setting up postMessage transport like this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$wp_customize-&amp;gt;get_setting( 'page_for_posts' )-&amp;gt;transport = 'postMessage';
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
My hook function ins theme-customize.js is invoked, but the window gets refreshed immediately afterward which prevents doing anything meaningful.
&lt;/p&gt;
&lt;p&gt;
It's also happening for page_on_front and probably show_on_front settings.
&lt;/p&gt;
&lt;p&gt;
postMessage works correctly for other components for me.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21573 (NOBLOGREDIRECT interfering with 404 errors) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 23 Feb 2017 11:03:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21573#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21573#comment:25/1487847837928630</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by mbootsman. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487847833010141"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39949 (get_the_excerpt() in a widget doesn't work as intended) updated</title>
      
        <dc:creator>madhatter2099</dc:creator>

      <pubDate>Thu, 23 Feb 2017 11:02:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39949#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39949#comment:2/1487847744546666</guid>
      <description>&lt;p&gt;
Yes, it sounds like the same issue.
&lt;/p&gt;
&lt;p&gt;
If I explicitly set an excerpt then it will display properly. It only seems to be when there's no excerpt that it doesn't get the correct excerpt. Using the apply_filters() function most likely isn't working since
&lt;code&gt; get_post_field('post_excerpt', $post) &lt;/code&gt;
returns an empty string, which get_the_excerpt() won't know what to do with. I found the solution on another site so I'm not confident it's a proper solution anyway, I'd rather focus on getting the get_the_excerpt() function working.
&lt;/p&gt;
&lt;p&gt;
I also see no reason that the WP_Post Class couldn't have an excerpt method added to it which either returns the excerpt or generates one.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39949 (get_the_excerpt() in a widget doesn't work as intended) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 23 Feb 2017 10:50:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39949#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39949#comment:1/1487847012459550</guid>
      <description>&lt;p&gt;
Hey there,
&lt;/p&gt;
&lt;p&gt;
Welcome to Trac.
&lt;/p&gt;
&lt;p&gt;
Sounds like you're affected by &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/36934" title="#36934: defect (bug): Use of get_the_excerpt($post) is broken if post has no excerpt and you ... (reviewing)"&gt;#36934&lt;/a&gt;. Basically, because of the way WordPress store some stuff in globals, the excerpt is built based on the wrong post object.
&lt;/p&gt;
&lt;p&gt;
What happens when you explicitly add an excerpt for that post and display it?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39949 (get_the_excerpt() in a widget doesn't work as intended) created</title>
      
        <dc:creator>madhatter2099</dc:creator>

      <pubDate>Thu, 23 Feb 2017 10:43:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39949</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39949/1487846638165380</guid>
      <description>&lt;p&gt;
I'm trying to print out the excerpt for a page in a widget. The excerpt isn't explicitly set in the post, but is successfully added on other pages (ie on the category page I can use the_excerpt() and one will be created.
&lt;/p&gt;
&lt;p&gt;
Inside a widget I'm trying to use
&lt;/p&gt;
&lt;pre class="wiki"&gt;get_the_excerpt($post)
&lt;/pre&gt;&lt;p&gt;
where $post is a WP_Post object. Instead of returning the excerpt for the given post the function returns the excerpt for the current post.
&lt;/p&gt;
&lt;p&gt;
I then tried using the apply_filters() function as follows:
&lt;/p&gt;
&lt;pre class="wiki"&gt;apply_filters('get_the_excerpt', get_post_field('post_excerpt', $post))
&lt;/pre&gt;&lt;p&gt;
and was met with the same problem. I also tried passing in the post ID instead of the object but get the same incorrect excerpt. I don't think this is what should be happening, I expect to get back an excerpt from the given post, not the current page's excerpt.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39948 (is_singular inline docs summary issue with the docs parser) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 23 Feb 2017 10:29:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39948#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39948#comment:3/1487845768389530</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40103" title="Docs: Update the description of `is_singular()` and ..."&gt;40103&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Update the description of &lt;code&gt;is_singular()&lt;/code&gt; and &lt;code&gt;WP_Query::is_singular()&lt;/code&gt; to be parsed correctly by developer.wordpress.org.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props grapplerulrich.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39948" title="#39948: defect (bug): is_singular inline docs summary issue with the docs parser (closed: fixed)"&gt;#39948&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40103]: Docs: Update the description of `is_singular()` and ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 23 Feb 2017 10:29:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40103</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40103/1487845767884549</guid>
      <description>&lt;p&gt;
Docs: Update the description of &lt;code&gt;is_singular()&lt;/code&gt; and &lt;code&gt;WP_Query::is_singular()&lt;/code&gt; to be parsed correctly by developer.wordpress.org.
&lt;/p&gt;
&lt;p&gt;
Props grapplerulrich.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39948" title="#39948: defect (bug): is_singular inline docs summary issue with the docs parser (closed: fixed)"&gt;#39948&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39948 (is_singular inline docs summary issue with the docs parser) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 23 Feb 2017 10:29:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39948#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39948#comment:2/1487845752064867</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32966 (Admin footer text is misplaced in plugins.php and plugin-install.php) closed</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 23 Feb 2017 09:57:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32966#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32966#comment:4/1487843839161479</guid>
      <description>worksforme: &lt;p&gt;
Looks like this has been fixed in the meantime.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>fix-39926-2.diff attached to Ticket #39926</title>
      
        <dc:creator>BjornW</dc:creator>

      <pubDate>Thu, 23 Feb 2017 09:52:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39926/fix-39926-2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39926/fix-39926-2.diff/1487843537529488</guid>
      <description>&lt;p&gt;
Set the fields variable to 'all' for further use
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39926 (wp_get_object_terms should return WP_Error on wrong fields argument or ...) updated</title>
      
        <dc:creator>BjornW</dc:creator>

      <pubDate>Thu, 23 Feb 2017 09:51:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39926#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39926#comment:3/1487843491225931</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39926#comment:2" title="Comment 2"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm actually OK with the SQL error being generated in this case - it's a developer error which they'll otherwise get no notification of, garbage in = garbage out type thing.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree with the sentiment of 'garbage in, garbage out'. My initial approach towards solving this was to send an explicit error back instead of letting the code continue executing and generating invalid SQL. However a default fall-back seems more elegant and still conveys the message towards the developer that something is not right. Happy to hear you agree on this approach :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39926/fix-39926.diff" title="Attachment 'fix-39926.diff' in Ticket #39926"&gt;fix-39926.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39926/fix-39926.diff" title="Download"&gt;​&lt;/a&gt; is the route taken, the &lt;code&gt;default:&lt;/code&gt; should be added to the &lt;code&gt;all&lt;/code&gt; branch of the &lt;code&gt;switch&lt;/code&gt; (not duplicating it by itself), and it could probably set &lt;code&gt;$args['fields']&lt;/code&gt; to &lt;code&gt;'all'&lt;/code&gt; for later use?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I see the appeal of not duplicating lines of code, however mixing explicit valid field values with a default 'catch all' does not seem right to me. The 'default' in the switch is now explicitly used as a catch all, as you'd expect it to do. That's why I opted for adding a default to the switch instead of combining it. What do you think about this reasoning?
&lt;/p&gt;
&lt;p&gt;
I've updated my patch to include settings the fields value to 'all' to make sure any further use of the variable will continue as intended.
&lt;/p&gt;
&lt;p&gt;
ps: Thanks for your quick review &amp;amp; feedback!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39935 (rest-api not working on PHP Built-in server instance) updated</title>
      
        <dc:creator>MattyRob</dc:creator>

      <pubDate>Thu, 23 Feb 2017 09:48:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39935#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39935#comment:3/1487843325762921</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@thinkholic
&lt;/p&gt;
&lt;p&gt;
Your project sounds ambitious - good luck with it - perhaps using the REST-API would allow you to interact with the WordPress core cleanly. You might find this resource helpful:
&lt;a class="ext-link" href="https://developer.wordpress.org/rest-api/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/rest-api/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Based on your last comment above - do you now have the REST-API links working? Can we close the ticket?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39948 (is_singular inline docs summary issue with the docs parser) updated</title>
      
        <dc:creator>grapplerulrich</dc:creator>

      <pubDate>Thu, 23 Feb 2017 09:41:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39948#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39948#comment:1/1487842890417429</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39948 (is_singular inline docs summary issue with the docs parser) created</title>
      
        <dc:creator>grapplerulrich</dc:creator>

      <pubDate>Thu, 23 Feb 2017 09:33:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39948</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39948/1487842435361131</guid>
      <description>&lt;p&gt;
The inline docs for is_singular is not being parsed correctly as the parser stops as the first dot instead of going to the end of the line.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;Is the query for an existing single post of any post type (post, attachment, page, ... )?&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/is_singular/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/reference/functions/is_singular/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I expect it is easier to fix the inline documentation then to fix the parser.
&lt;/p&gt;
&lt;p&gt;
A potential fix: &lt;code&gt;Is the query for an existing single post of any post type (post, attachment, page, custom post types)?&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 23 Feb 2017 08:29:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:117</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:117/1487838587268966</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/32417#comment:116" title="Comment 116"&gt;celloexpressions&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Seeing as we have clickable placeholders, and &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/34323" title="#34323: enhancement: Make customizer media control placeholders clickable (assigned)"&gt;#34323&lt;/a&gt; is still unresolved, we need an accessibility review
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Uh, apparently I missed that. Can't see a clickable placeholder, @celloexpressions could you please guide me a bit? :)
&lt;/p&gt;
&lt;p&gt;
Some additional issues:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;this point from my previous comment is still unresolved: "Usability: there are no instructions that, when clicking on an image preview, users can change the media". It would be a nice improvement to do something similar to what the featured image meta box does.
&lt;/li&gt;&lt;li&gt;image preview: ti's a clickable &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element so it won't be listed as an interactive control by assistive technologies. The featured image meta box instead, wraps the image in a link which is not ideal but it's better
&lt;/li&gt;&lt;li&gt;image: WordPress doesn't set the title attribute on images, I'm not sure why the media widget should do that. Also, in the last months we've been removing title attributes all over the places since they don't add any great value. I'd suggest to don't use title attributes
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39939 (A Contributor cannot preview their own post if it's scheduled) updated</title>
      
        <dc:creator>dhanendran</dc:creator>

      <pubDate>Thu, 23 Feb 2017 05:36:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39939#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39939#comment:3/1487828185777824</guid>
      <description>&lt;p&gt;
Instead of creating a new &lt;code&gt;cap&lt;/code&gt; and patching it in several places, can we create a common hook which can alter the &lt;code&gt;cap&lt;/code&gt; permissions. In this case, we can use a filter to remove &lt;code&gt;Edit&lt;/code&gt; and &lt;code&gt;Quick Edit&lt;/code&gt; from &lt;code&gt;edit_post&lt;/code&gt; capability. So user use only &lt;code&gt;preview&lt;/code&gt; option.
&lt;/p&gt;
&lt;p&gt;
Just a thought...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>0004-blegh-add-a-phpdoc-comment-over-data-provider-just-e.patch attached to Ticket #39933</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Thu, 23 Feb 2017 05:01:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39933/0004-blegh-add-a-phpdoc-comment-over-data-provider-just-e.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39933/0004-blegh-add-a-phpdoc-comment-over-data-provider-just-e.patch/1487826111665007</guid>
      <description>&lt;p&gt;
adds a PHPdoc to the data provider method which I forgot in the previous commit
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Thu, 23 Feb 2017 04:57:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:116</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:116/1487825860428724</guid>
      <description>&lt;p&gt;
I made a few fixes on GitHub, along with some technical review comments. Here are a few usability questions I have/things I didn't want to change in the patch yet:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Most default themes (and as a result, likely other themes) that implement custom styles for the MediaElement players scope their CSS to &lt;code&gt;.hentry&lt;/code&gt; to have higher specificity than the MediaElement styling provided by WordPress. This custom styling needs to apply to widgets too, ideally without making theme changes. This is a blocker for shipping I think, and if theme changes are required I'm not sure that we should release this feature in a minor release (unless theme outreach happens for a period of time prior). There are a few options here:
&lt;/li&gt;&lt;/ul&gt;&lt;ol&gt;&lt;li&gt;Add a &lt;code&gt;.hentry&lt;/code&gt; class to the media widget container for all of them. Not semantic with the intent of that class and might risk causing other issues if themes use that class for other styling.
&lt;/li&gt;&lt;li&gt;Finally fix the core-provided and default MediaElement styles to load before theme styles or somehow have lower specificity so that a container isn't needed. However, themes that scope to &lt;code&gt;.hentry&lt;/code&gt; would still need to be updated to removed that.
&lt;/li&gt;&lt;li&gt;Update all bundled themes' CSS for custom MediaElement styles (may include color schemes in some cases) to also style media widgets. Start substantial theme developer outreach regarding this requirement (I know I've done this in several themes, there are likely many others). Unfortunately, this is something that was a pretty bad idea in terms of how themes should have done things, but this is the route that bundled themes suggested around the time that Audio and Video support were added to core.
&lt;/li&gt;&lt;/ol&gt;&lt;ul&gt;&lt;li&gt;Not all bundled themes have the above issue; I quickly found these: &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/master/wp-content/themes/twentyfourteen/style.css#L1348"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/master/wp-content/themes/twentyfourteen/style.css#L1348&lt;/a&gt;, &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/master/wp-content/themes/twentythirteen/style.css#L1229"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/master/wp-content/themes/twentythirteen/style.css#L1229&lt;/a&gt;, &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/master/wp-content/themes/twentyseventeen/style.css#L2801"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/master/wp-content/themes/twentyseventeen/style.css#L2801&lt;/a&gt;.
&lt;/li&gt;&lt;li&gt;There is partial, broken support for file types other than images, audio, and video. I'd suggest falling back to an assumed type of "document", linking the title to the media file (and using the file name if the title is blank). For PDFs we should also be able to show a thumbnail and link that with the title/filename being optional, for sites that support PDF thumbnails as of 4.7. I would guess that PDFs would be used more than video here, even, so we should support that since we can fairly easily. If nothing else we need to show an error message if we don't/can't support a particular file type at all.
&lt;/li&gt;&lt;li&gt;FYI I added an icon and updated the widget description to better align with other core widgets - see screenshot. The menu widget is an exception here, as well as with its naming, apparently. We might want to fix that while we're at it.
&lt;/li&gt;&lt;li&gt;Do we need the text "Add an image, video, or audio to your sidebar." in the actual widget controls? That seems redundant and works against &lt;code&gt;Strive for Simplicity&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Seeing as we have clickable placeholders, and &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/34323" title="#34323: enhancement: Make customizer media control placeholders clickable (assigned)"&gt;#34323&lt;/a&gt; is still unresolved, we need an accessibility review still, cc @afercia. (for what it's worth I think the approach for clickable placeholders here is appropriate for all users)
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>0003-use-a-data-provider-to-make-rest-unit-test-code-a-bi.patch attached to Ticket #39933</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Thu, 23 Feb 2017 04:57:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39933/0003-use-a-data-provider-to-make-rest-unit-test-code-a-bi.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39933/0003-use-a-data-provider-to-make-rest-unit-test-code-a-bi.patch/1487825823448038</guid>
      <description>&lt;p&gt;
Use a data provider for rest request unit test
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>0002-use-WP-spacing-instead-of-PSR-spacing.patch attached to Ticket #39933</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Thu, 23 Feb 2017 04:47:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39933/0002-use-WP-spacing-instead-of-PSR-spacing.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39933/0002-use-WP-spacing-instead-of-PSR-spacing.patch/1487825265621314</guid>
      <description>&lt;p&gt;
fixes spacing issue from previous commit
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>32417-add-widgets-context.png attached to Ticket #32417</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Thu, 23 Feb 2017 04:45:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32417/32417-add-widgets-context.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32417/32417-add-widgets-context.png/1487825151310863</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37646 (Make wp-settings.php a series of do_actions()) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Thu, 23 Feb 2017 04:41:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37646#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37646#comment:10/1487824889674314</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37646" title="#37646: enhancement: Make wp-settings.php a series of do_actions() (new)"&gt;johnjamesjacoby&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
An interesting proposal.  On the surface I like it.
&lt;/p&gt;
&lt;p&gt;
OTOH I see several causes for concern that I don't think you covered. &lt;em&gt;(If you did, blame my lack of reading comprehension on longish tickets. :-) )&lt;/em&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;strong&gt;The first problem is chicken-and-egg&lt;/strong&gt;.  Assuming you are not talking about wholesale reorganization of &lt;code&gt;wp-settings.php&lt;/code&gt; then most of your &lt;code&gt;do_action()&lt;/code&gt; calls occur before &lt;code&gt;mu-plugins&lt;/code&gt; are loaded, so where are you could to call &lt;code&gt;add_action()&lt;/code&gt;? &lt;code&gt;advanced-cache.php&lt;/code&gt; is called early, but not early enough for your example.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
And do we want to pollute &lt;code&gt;advanced-cache.php&lt;/code&gt; with site-custom add-action calls?  Minially you'd need &lt;code&gt;bootstrap.php&lt;/code&gt; file early, but even it could not be called before constants are defined unless it was to be placed in the site root where ABSPATH points, and not good if you moved WordPress core into a subfolder for Composer sake.
&lt;/p&gt;
&lt;ol start="2"&gt;&lt;li&gt;While I do like the&lt;strong&gt; idea of hooking, your approach is problematic IMO&lt;/strong&gt;. It is equivalent to approaches I have seen with some themes, like &lt;em&gt;(early)&lt;/em&gt; Thesis &lt;em&gt;(when I still used it)&lt;/em&gt; that caused emmense heartaches. And in &lt;code&gt;admin-filter.php&lt;/code&gt;, not an approach I think we should emulate.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Basically with approach you posted a reader of the code cannot know what &lt;strong&gt;default&lt;/strong&gt; code will be executed without looking in another file, or they must run it under a debugger to be able to tell. That makes static analysis of the code more difficult and  makes it much harder to learn.
&lt;/p&gt;
&lt;p&gt;
Better would be something like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;require WP_CONTENT_DIR . '/bootstrap.php';
add_action( 'wp_settings_load_versions',     'wp_settings_load_versions' );
add_action( 'wp_settings_load_constants',    'wp_settings_load_constants' );
add_action( 'wp_settings_load_translations', 'wp_settings_load_translations' );
add_action( 'wp_settings_load_environment',  'wp_settings_load_environment' );
add_action( 'wp_settings_load_early',        'wp_settings_load_early' );
add_action( 'wp_settings_load_database',     'wp_settings_load_database' );
if ( apply_filters( 'do_bootstrap', true ) ) {
	do_action( 'wp_settings_load_versions' );
	do_action( 'wp_settings_load_constants' );
	do_action( 'wp_settings_load_translations' );
	do_action( 'wp_settings_load_environment' );
	do_action( 'wp_settings_load_early' );
	do_action( 'wp_settings_load_database' );
}
&lt;/pre&gt;&lt;p&gt;
Or even better:
&lt;/p&gt;
&lt;pre class="wiki"&gt;require WP_CONTENT_DIR . '/bootstrap.php';
$bootstraps = array(
	'wp_settings_load_versions',
	'wp_settings_load_constants',
	'wp_settings_load_translations',
	'wp_settings_load_environment',
	'wp_settings_load_early',
	'wp_settings_load_database',
);
foreach( $bootstraps as $bootstrap ) {
	add_action( $bootstrap, $bootstrap );
	if ( apply_filters( 'do_bootstrap', true, $bootstrap ) ) {
		do_action( $bootstrap );
	}
}
&lt;/pre&gt;&lt;p&gt;
Then elsewhere:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function wp_settings_load_versions() {
	// Load versions
}
function wp_settings_load_constants() {
	// Load constants
}
function wp_settings_load_translations() {
	// Load translations
}
function wp_settings_load_environment() {
	// Load environment
}
function wp_settings_load_early() {
	// Load early
}
function wp_settings_load_database() {
	// Load database
}
&lt;/pre&gt;&lt;p&gt;
With the above any reader of WordPress core code could more easily determine what is being called by default during bootstrap rather than having to hope they have found all the appropriate needles in the haystack that is the WordPress core codebase.
&lt;/p&gt;
&lt;ol start="3"&gt;&lt;li&gt;I assume you are aware of the &amp;lt;a href="&lt;a class="ext-link" href="http://becircle.com/drupal_7_line_by_line_part_2_bootstrap"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://becircle.com/drupal_7_line_by_line_part_2_bootstrap&lt;/a&gt;"&amp;gt;prior art in Drupal&amp;lt;/a&amp;gt; with it's bootstrap process?  Not saying their's is an approach to emulate but maybe they have learned some things we don't want to repeat that might be available to learn from their public writings on the topic?
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37646 (Make wp-settings.php a series of do_actions()) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Thu, 23 Feb 2017 03:52:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37646#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37646#comment:9/1487821946004456</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37646#comment:5" title="Comment 5"&gt;jorbin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
My biggest worry with tying all includes to actions is that it would make all of WordPress pluggable and that feels like a great way to increase breakage on updates.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I definitely can see @jorbin's perspective.  Making WordPress easier to break has the potential for rogue plugin author to break sites for  users unable to fix the problem or even understand the problem, and that makes WordPress look bad, in users eyes and in the eyes of a press who likes to sensationalize problems.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37646#comment:6" title="Comment 6"&gt;DrewAPicture&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There's an immense upside in enabling proverbial forks of WordPress to do what they wish with how WordPress is loaded
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
And yet I definitely see @DrewAPicture's perspective, because I am usually in this position of wanting to get WordPress to work they way I need it to work for a highly customized site yet I am stymied because of some limitation baked into core. For those of us building custom sites for businesses, this lack of flexibility turns out to be a huge downside and perpetuates the &lt;em&gt;"WordPress is just a blog"&lt;/em&gt; mentality among IT professionals and those business people who parrot them.
&lt;/p&gt;
&lt;p&gt;
What's the middle ground?
&lt;/p&gt;
&lt;p&gt;
I've often thought that there should be something that a plugin can't to and a theme can't do but that a custom site builder could do to turn on &lt;em&gt;"unsafe"&lt;/em&gt; features, such as having a constant defined in &lt;code&gt;wp-config.php&lt;/code&gt; that, once defined, allows custom site builders to shoot themselves in the foot, if we so desire. But themes and plugins could not do it unless they get the their end-users to manually update &lt;code&gt;wp-config.php&lt;/code&gt;, which most won't want to do because of the bad user experience required.   OTOH I've never before proposed it because I always feared that too many people would see it as not &lt;em&gt;"the WordPress way."&lt;/em&gt;  FWIW.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38907 (Add `path_is_absolute` filter.) updated</title>
      
        <dc:creator>tmatsuo</dc:creator>

      <pubDate>Thu, 23 Feb 2017 02:17:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38907#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38907#comment:1/1487816236514844</guid>
      <description>&lt;p&gt;
Or, even, if the path starts with one of the registered stream wrappers, can &lt;code&gt;path_is_absolute&lt;/code&gt; just return true? You can use &lt;code&gt;stream_get_wrappers&lt;/code&gt; to get the registered protocols.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39947 (REST API: Sticky post query returns unsticky posts when no posts are sticky) created</title>
      
        <dc:creator>ryelle</dc:creator>

      <pubDate>Thu, 23 Feb 2017 01:46:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39947</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39947/1487814370789032</guid>
      <description>&lt;p&gt;
When getting sticky posts from the API (for example, &lt;code&gt;site.com/wp-json/wp/v2/posts?sticky=true&lt;/code&gt;), if there are no sticky posts set, the query just returns all posts — as if &lt;code&gt;sticky&lt;/code&gt; was not set. I was expecting an empty array. If there are sticky posts, it behaves as expected, only returning the sticky posts.
&lt;/p&gt;
&lt;p&gt;
The source seems to be &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php#L222"&gt;this check in WP_REST_Posts_Controller&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39933 (WP_REST_Request::get_param() doesn't work for getting body params on ...) updated</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Thu, 23 Feb 2017 00:22:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39933#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39933#comment:8/1487809355424544</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Whitespace in the tests looks off,
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Oh right, I think I used spaces instead of tabs. I can fix
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
we can use a PHPUnit data provider to make the tests cleaner.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Oh I actually wasn't even aware of data providers. Makes a lot of sense. This is one reason I'm glad to participate in core!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39701 (Do not allow editing users from a different site in REST API) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Wed, 22 Feb 2017 23:54:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39701#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39701#comment:23/1487807683342190</guid>
      <description>&lt;p&gt;
The current multisite handling in the users endpoint makes little to no sense.  It's not something we can remotely consider enabling on WP.com, for example.  I'd like to get to a place where we can.
&lt;/p&gt;
&lt;p&gt;
This, and a few other specific parts of the REST API never should have shipped in 4.7.  They're things we wish we would have addressed, but didn't have time.  IMO, not making these fixes soon after 4.7 is more harmful to the future reliability and maintainability of the API.
&lt;/p&gt;
&lt;p&gt;
The necessary first step for this particular change is to have the REST API default to single-site mode for all operations, then add multisite support in a careful and reasoned manner.  Our public document for this specific change is here:  &lt;a class="ext-link" href="https://make.wordpress.org/core/2017/02/08/improving-the-rest-api-users-endpoint-for-multisite-in-4-7-3-and-4-8/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2017/02/08/improving-the-rest-api-users-endpoint-for-multisite-in-4-7-3-and-4-8/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I'm not sure that we ever created a public document for larger API changes after 4.7, but at the very least it's been discussed in dev chats, and @pento and I agreed that we would make limited backwards-incompatible fixes into the first few 4.7.x releases to provide a solid foundation for future development.
&lt;/p&gt;
&lt;p&gt;
The REST API still has a few ugly quirks remaining that we need to fix ASAP before people start depending on these behaviors.  I wish we had caught and fixed them all before 4.7, but we didn't.  If I had anticipated that we would lose the capability to make these fixes, I would have pushed back much harder about including the API in 4.7.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
At the very least, can we create a page which mentions all the API changes at &lt;a class="ext-link" href="https://developer.wordpress.org/rest-api/changelog"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/rest-api/changelog&lt;/a&gt; (or something similar)?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm OK with this, as well as adding any missing &lt;code&gt;@since&lt;/code&gt; annotations.  I'll get the page started within the next few days.
&lt;/p&gt;
&lt;p&gt;
I don't expect this specific change to be a cause for concern because we are doing it early enough in the history of the REST API, which is really important.  If I'm wrong about that, then let's address it by creating a plugin that preserves the ability to add users in multisite.
&lt;/p&gt;
&lt;p&gt;
To summarize, this change is something that should've been done before 4.7, and if we don't do this first step now, it essentially means that the REST API will never support multisite installations in a sane and consistent manner.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>32417.15.diff attached to Ticket #32417</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 22 Feb 2017 23:45:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32417/32417.15.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32417/32417.15.diff/1487807106547519</guid>
      <description>&lt;p&gt;
Δ &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/215/files/cc2f420..a63e90e"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/215/files/cc2f420..a63e90e&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Wed, 22 Feb 2017 23:42:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:115</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:115/1487806963907700</guid>
      <description>&lt;p&gt;
Just ran through the latest patch on all default themes. It looks good! Check out the gallery here: &lt;a class="ext-link" href="https://cloudup.com/cXEWkWKwUIN"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/cXEWkWKwUIN&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
There were only two places where it might be weird:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;The dark color scheme clashes a little with Twenty Thirteen's footer background color (&lt;a class="ext-link" href="https://cloudup.com/i676cwYz-zs"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/i676cwYz-zs&lt;/a&gt;)
&lt;/li&gt;&lt;li&gt;Twenty Fourteen's &lt;code&gt;Primary Sidebar&lt;/code&gt; is very thin, so the controls get awkwardly pushed outside of the container (&lt;a class="ext-link" href="https://cloudup.com/iuc3brESgnG"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/iuc3brESgnG&lt;/a&gt;)
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39886 (Invalid jQuery Live Event in handlers.min.js file.) updated</title>
      
        <dc:creator>MMDeveloper</dc:creator>

      <pubDate>Wed, 22 Feb 2017 23:39:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39886#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39886#comment:3/1487806767663632</guid>
      <description>&lt;p&gt;
I figured that,
&lt;/p&gt;
&lt;p&gt;
The plugin I'm using uses the old library. Yes the library does work if you change the function name.  I've only seen this issue once in the last few years of being a WordPress developer. Its a relatively quick fix, If I had to I guess I can manually update them when I need to but if you can do it as part of the next release that would be appreciated.
&lt;/p&gt;
&lt;p&gt;
Tom
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39886#comment:1" title="Comment 1"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi @MMDeveloper, welcome to WordPress Trac! Thanks for the ticket.
&lt;/p&gt;
&lt;p&gt;
FWIW, SWFUpload is no longer used by core, it's only included for compatibility with older plugins or themes, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16668#comment:2" title="Comment 2 for #16668: enhancement: SWFUpload 2.2.1 (closed: wontfix)"&gt;comment:2:ticket:16668&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The latest fix to &lt;code&gt;handlers.js&lt;/code&gt; was 3 years ago in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27243" title="Remove a few unnecessary jQuery selectors added in [27239]. Playlists ..."&gt;[27243]&lt;/a&gt;. I guess we could fix the deprecated &lt;code&gt;.live()&lt;/code&gt; method, but does it still work otherwise?
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39701 (Do not allow editing users from a different site in REST API) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 22 Feb 2017 23:36:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39701#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39701#comment:22/1487806600781426</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This type of change reminds me of &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1479937964003961"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;a question I had asked before the merge&lt;/a&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I've one concern/question about the REST API. Is there already a document how we deal with future API changes? Does a change mean we've to bump it to v2.1 or v3? Do we need a special deprecation policy?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't think this question was ever answered which is kind of a bummer. Please point me to a public document if I'm wrong.
&lt;/p&gt;
&lt;p&gt;
This and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40078" title="REST API: Cast revision author ID to int.
The `post_author` field is ..."&gt;[40078]&lt;/a&gt; are breaking our back-compat rule. While we did type changes in the past we always documented the changes with a changelog entry in a &lt;code&gt;@since&lt;/code&gt; annotation. The patch and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40078" title="REST API: Cast revision author ID to int.
The `post_author` field is ..."&gt;[40078]&lt;/a&gt; don't include anything like that.
I'm worried about the fact that changes like these are harming the reliability of the API. It's no longer a plugin, it's part of core. It's not beta, it's a stable version (at least that's my assumption, otherwise the API wouldn't be in core).
&lt;/p&gt;
&lt;p&gt;
At the very least, can we create a page which mentions all the API changes at &lt;a class="ext-link" href="https://developer.wordpress.org/rest-api/changelog"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/rest-api/changelog&lt;/a&gt; (or something similar)? Keep in mind that the API allows other services to interact with WordPress whose maintainer don't necessarily read our make blogs.
&lt;/p&gt;
&lt;p&gt;
The REST API already supports &lt;code&gt;rest_handle_deprecated_function()&lt;/code&gt; and &lt;code&gt;rest_handle_deprecated_argument()&lt;/code&gt; can we use that here or introduce a new header which contains a deprecation notice?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38474 (wp_signups.activation_key stores activation keys in plain text) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 22 Feb 2017 23:14:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38474#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38474#comment:5/1487805242276344</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39933 (WP_REST_Request::get_param() doesn't work for getting body params on ...) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Wed, 22 Feb 2017 23:11:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39933#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39933#comment:7/1487805087012305</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Whitespace in the tests looks off, and we can use a &lt;a class="ext-link" href="https://phpunit.de/manual/current/en/writing-tests-for-phpunit.html#writing-tests-for-phpunit.data-providers"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PHPUnit data provider&lt;/a&gt; to make the tests cleaner.
&lt;/p&gt;
&lt;p&gt;
Neither of those are difficult to fix.  I'm not sure yet whether we can do it, but I'm going to look at getting this into 4.7.3.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38474 (wp_signups.activation_key stores activation keys in plain text) updated</title>
      
        <dc:creator>bor0</dc:creator>

      <pubDate>Wed, 22 Feb 2017 23:02:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38474#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38474#comment:4/1487804523279580</guid>
      <description>&lt;p&gt;
@SergeyBiryukov could you please review/provide your input on this?
&lt;/p&gt;
&lt;p&gt;
Probably not that big of a security issue, as someone that has access to the db has access to all of the content more or less. However, if they use an activation key they can login and upload files, delete files, etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39933 (WP_REST_Request::get_param() doesn't work for getting body params on ...) updated</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Wed, 22 Feb 2017 22:33:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39933#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39933#comment:6/1487802795482105</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>0001-for-39933.-Allows-for-passing-a-request-body-in-DELE.patch attached to Ticket #39933</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Wed, 22 Feb 2017 22:32:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39933/0001-for-39933.-Allows-for-passing-a-request-body-in-DELE.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39933/0001-for-39933.-Allows-for-passing-a-request-body-in-DELE.patch/1487802737911110</guid>
      <description>&lt;p&gt;
allows you to pass request body on DELETE requests over the REST API
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>gonom9</dc:creator>

      <pubDate>Wed, 22 Feb 2017 22:17:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:114</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:114/1487801873126866</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/32417#comment:112" title="Comment 112"&gt;westonruter&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I want to amend the patch with some additional changes, but I don't want to step on your toes and have to manually resolve conflicts between patch files.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Please do it. The PR works great. I'll continue to work on the PR if I have any. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39939 (A Contributor cannot preview their own post if it's scheduled) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 22 Feb 2017 22:17:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39939#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39939#comment:2/1487801854041719</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39939#comment:1" title="Comment 1"&gt;dhanendran&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We don't have any specific &lt;code&gt;cap&lt;/code&gt; for previewing a post.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Good point. This reminds me that I started work on this a while ago but ended up down a rabbit hole: &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/33240" title="#33240: enhancement: Introduce a capability for previewing posts (assigned)"&gt;#33240&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39946 (Private posts can be sticky when bulk editing them from wp-admin/edit.php) updated</title>
      
        <dc:creator>imath</dc:creator>

      <pubDate>Wed, 22 Feb 2017 22:11:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39946#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39946#comment:2/1487801486048992</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39946 (Private posts can be sticky when bulk editing them from wp-admin/edit.php) updated</title>
      
        <dc:creator>imath</dc:creator>

      <pubDate>Wed, 22 Feb 2017 22:10:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39946#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39946#comment:1/1487801457553441</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>39946.patch attached to Ticket #39946</title>
      
        <dc:creator>imath</dc:creator>

      <pubDate>Wed, 22 Feb 2017 22:10:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39946/39946.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39946/39946.patch/1487801430796114</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39946 (Private posts can be sticky when bulk editing them from wp-admin/edit.php) created</title>
      
        <dc:creator>imath</dc:creator>

      <pubDate>Wed, 22 Feb 2017 22:10:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39946</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39946/1487801400102431</guid>
      <description>&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/ZsJC4iH0GM.png"&gt;&lt;img src="https://cldup.com/ZsJC4iH0GM.png" alt="https://cldup.com/ZsJC4iH0GM.png" crossorigin="anonymous" title="https://cldup.com/ZsJC4iH0GM.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Although it's not possible to inline-edit a Private post to be sticky or to Publish a private post as sticky from the Publish meta box, as shown on the above screen capture, it's possible to do it using the Bulk edit action of the &lt;code&gt;wp-admin/edit.php&lt;/code&gt; screen.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #12423 (Include default code editor) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 22 Feb 2017 21:59:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12423#comment:59</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12423#comment:59/1487800746912991</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by westonruter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487800743009881"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39692 (Fix missing assignment of menus on theme switch) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Wed, 22 Feb 2017 21:50:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39692#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39692#comment:12/1487800208348098</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39692#comment:11" title="Comment 11"&gt;jonathanbardo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think we should rework the original description to better reflect the issue because I don't think this is a regression rather than adding new UI in the customizer to deal with unassigned menu when doing theme switch.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Can you elaborate on this? I don't think this ticket will require any new UI, based on what I proposed in #4.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39692 (Fix missing assignment of menus on theme switch) updated</title>
      
        <dc:creator>jonathanbardo</dc:creator>

      <pubDate>Wed, 22 Feb 2017 21:47:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39692#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39692#comment:11/1487800029447062</guid>
      <description>&lt;p&gt;
Hey @melchoyce,
&lt;/p&gt;
&lt;p&gt;
Sorry for the late reply, I was on vacations in a country with no internet :( I should be able to look into this pretty soon. I think we should rework the original description to better reflect the issue because I don't think this is a regression rather than adding new UI in the customizer to deal with unassigned menu when doing theme switch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16778 (wordpress is leaking user/blog information during wp_version_check()) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 22 Feb 2017 21:38:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16778#comment:91</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16778#comment:91/1487799539782357</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by mattyrob. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487799537009773"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39945 (WP_Query::get_posts fails to correctly sanitize 'posts_per_page') created</title>
      
        <dc:creator>biisent</dc:creator>

      <pubDate>Wed, 22 Feb 2017 21:34:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39945</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39945/1487799241712037</guid>
      <description>&lt;p&gt;
WP_Query::get_posts fails to correctly sanitize the 'posts_per_page' argument when a negative value in range (-2, -1) is supplied.
&lt;/p&gt;
&lt;h2 id="Example"&gt;Example&lt;/h2&gt;
&lt;p&gt;
The following get_posts query causes an exception:
&lt;/p&gt;
&lt;pre class="wiki"&gt;get_posts(array('posts_per_page' =&amp;gt; '-1.5'));
&lt;/pre&gt;&lt;p&gt;
Exception: WordPress database error You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-1' at line 1 for query SELECT   wp_posts.ID FROM wp_posts  WHERE 1=1  AND wp_posts.post_type = 'post' AND ((wp_posts.post_status = 'publish'))  ORDER BY wp_posts.post_date DESC LIMIT 0, -1 made by get_posts, WP_Query-&amp;gt;query, WP_Query-&amp;gt;get_posts
&lt;/p&gt;
&lt;h2 id="Cause"&gt;Cause&lt;/h2&gt;
&lt;p&gt;
Incomplete sanitization in WP_Query::get_posts(), line 1775 - 1779:
&lt;/p&gt;
&lt;pre class="wiki"&gt;    $q['posts_per_page'] = (int) $q['posts_per_page'];
    if ( $q['posts_per_page'] &amp;lt; -1 )
        $q['posts_per_page'] = abs($q['posts_per_page']);
    elseif ( $q['posts_per_page'] == 0 )
        $q['posts_per_page'] = 1;
&lt;/pre&gt;&lt;p&gt;
&lt;/p&gt;
&lt;h2 id="Impact"&gt;Impact&lt;/h2&gt;
&lt;p&gt;
Some plugins (e.g. Woocommerce) initialize the posts_per_page argument with user supplied values and may suffer from an information disclosure vulnerability, depending on the webserver configuration.
Confirmed on the latest Wordpress version 4.7.2.
&lt;/p&gt;
&lt;p&gt;
First reported at 19.02.2017 to security[at]wordpress.org without response (not nice!), so I assume you do not consider this security relevant in accordance with e.g. &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/testing/reporting-security-vulnerabilities/#why-are-there-path-disclosures-when-directly-loading-certain-files"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/handbook/testing/reporting-security-vulnerabilities/#why-are-there-path-disclosures-when-directly-loading-certain-files&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 22 Feb 2017 21:12:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:113</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:113/1487797958699916</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by westonruter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487797955009647"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37140 (Rotating images doesn't adjust orientation for imagick) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Wed, 22 Feb 2017 21:11:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37140#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37140#comment:33/1487797869965314</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37140#comment:32" title="Comment 32"&gt;sanchothefat&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi Mike, yeah I think that's fine, I confirmed they all work so probably just we can just use the upside down one as that's the most common problem.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks! Will take care of it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #21819,​21492,​39096,​39128,​39254,​39430,​39461,​39665,​39715,​39758,​39770 batch updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 22 Feb 2017 21:10:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=21819%2C21492%2C39096%2C39128%2C39254%2C39430%2C39461%2C39665%2C39715%2C39758%2C39770</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=21819%2C21492%2C39096%2C39128%2C39254%2C39430%2C39461%2C39665%2C39715%2C39758%2C39770/1487797856077589</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 22 Feb 2017 20:53:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:112</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:112/1487796813044726</guid>
      <description>&lt;p&gt;
@gonom9 I applied your latest patch to the previous pull request I prepared: &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/215"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/215&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
If it works for you, it would be great for collaboration if you'd be able to push up subsequent changes to the pull request itself. I added you as a writer to the repo.
&lt;/p&gt;
&lt;p&gt;
I want to amend the patch with some additional changes, but I don't want to step on your toes and have to manually resolve conflicts between patch files.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>32417.14.diff attached to Ticket #32417</title>
      
        <dc:creator>gonom9</dc:creator>

      <pubDate>Wed, 22 Feb 2017 20:29:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32417/32417.14.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32417/32417.14.diff/1487795390400319</guid>
      <description>&lt;p&gt;
The scale option is removed and all media will be responsive by default.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Wed, 22 Feb 2017 20:15:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:111</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:111/1487794501252276</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/32417#comment:110" title="Comment 110"&gt;gonom9&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@melchoyce
The upload issue is filed as &lt;a href="https://core.trac.wordpress.org/ticket/39550"&gt;#39550&lt;/a&gt;. All of the other bugs are fixed in &lt;a href="https://core.trac.wordpress.org/attachment/ticket/32417/32417.13.diff"&gt;32417.13.diff&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ah, thanks. :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Any reason why we can't just apply "scale to fit width" automatically and not make it an option at all?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I added it as an option because I thought someone may want to show media in a specific size.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Can we change it to apply automatically to videos, and remove the option entirely?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>gonom9</dc:creator>

      <pubDate>Wed, 22 Feb 2017 20:10:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:110</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:110/1487794254668336</guid>
      <description>&lt;p&gt;
@melchoyce
The upload issue is filed as &lt;a href="https://core.trac.wordpress.org/ticket/39550"&gt;#39550&lt;/a&gt;. All of the other bugs are fixed in &lt;a href="https://core.trac.wordpress.org/attachment/ticket/32417/32417.13.diff"&gt;32417.13.diff&lt;/a&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Any reason why we can't just apply "scale to fit width" automatically and not make it an option at all?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I added it as an option because I thought someone may want to show media in a specific size.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Never forget &lt;a class="ext-link" href="https://gist.github.com/taggon/d381e421b743eb5f0e71d225ea18fffa"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the plugin&lt;/a&gt;. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>32417.13.diff attached to Ticket #32417</title>
      
        <dc:creator>gonom9</dc:creator>

      <pubDate>Wed, 22 Feb 2017 20:10:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32417/32417.13.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32417/32417.13.diff/1487794209459360</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39933 (WP_REST_Request::get_param() doesn't work for getting body params on ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 22 Feb 2017 19:53:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39933#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39933#comment:5/1487793213513324</guid>
      <description>&lt;p&gt;
@jnylen0 My comment wasn't an argument against this. I wanted to add some context/background so people know &lt;em&gt;why&lt;/em&gt; something is that way.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39933 (WP_REST_Request::get_param() doesn't work for getting body params on ...) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Wed, 22 Feb 2017 19:51:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39933#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39933#comment:4/1487793075195214</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39933#comment:2" title="Comment 2"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
it's not supported because many servers don't support it, or something like that. The only thing I could find right now was &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1455121876002422"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/core-restapi/p1455121876002422&lt;/a&gt; though.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This isn't a good argument not to support something, IMO.  We support plenty of functionality that some servers may not allow, usually with appropriate fallbacks and documentation.  One example is the &lt;code&gt;_method&lt;/code&gt; parameter documented &lt;a class="ext-link" href="https://developer.wordpress.org/rest-api/using-the-rest-api/global-parameters/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;here&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39933#comment:3" title="Comment 3"&gt;mnelson4&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Do you think I should hold off making a patch until there is some more discussion?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I would go ahead and submit the patch, that will help us get it fixed more quickly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32378 (Image Uploads automatically puts "Olympus Digital Camera" as caption) updated</title>
      
        <dc:creator>tpnotes</dc:creator>

      <pubDate>Wed, 22 Feb 2017 19:36:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32378#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32378#comment:17/1487792201582072</guid>
      <description>&lt;p&gt;
I still argue against fiddling around with EXIF data with WordPress. It is not WordPress Business. I as a photographer want to have total control, which metadata are going with my images online and do not want any system to decide on its own, if those metadata are "appropriate".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32378 (Image Uploads automatically puts "Olympus Digital Camera" as caption) updated</title>
      
        <dc:creator>tpnotes</dc:creator>

      <pubDate>Wed, 22 Feb 2017 19:31:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32378#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32378#comment:16/1487791877130030</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/32378#comment:12" title="Comment 12"&gt;crabsandwich&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Any more WP orientated input on this topic would be much appreciated or would @tpnotes please aid me in batch editing exif's in photoshop for this purpose.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Access your images with Bridge, highlight any image you want und just delete the according entry in the metadata panel in the lower right.
&lt;/p&gt;
&lt;p&gt;
If you use Lightroom for managing your images, you can define an import preset, which does it on import automatically.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22744 (Media search doesn't include file name) updated</title>
      
        <dc:creator>sashman13</dc:creator>

      <pubDate>Wed, 22 Feb 2017 19:22:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22744#comment:68</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22744#comment:68/1487791375296936</guid>
      <description>&lt;p&gt;
Appreciate your reply and all your hard work.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39944 (Site wp_X_user_roles option not updated when network settings change) created</title>
      
        <dc:creator>sanchothefat</dc:creator>

      <pubDate>Wed, 22 Feb 2017 19:11:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39944</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39944/1487790660842072</guid>
      <description>&lt;p&gt;
When a new site is created there is a call to &lt;code&gt;populate_roles()&lt;/code&gt; which builds and saves a site option called &lt;code&gt;wp_X_user_roles&lt;/code&gt; where &lt;code&gt;X&lt;/code&gt; is the blog ID.
&lt;/p&gt;
&lt;p&gt;
If you have "Administrators can add new users" unchecked and create a site, then check it and create another site - the two new sites will have different user roles arrays, the first of which will no longer represent the chosen network settings.
&lt;/p&gt;
&lt;p&gt;
WP should handle updating the &lt;code&gt;wp_X_user_roles&lt;/code&gt; option across the network when either the &lt;code&gt;add_new_users&lt;/code&gt; or the &lt;code&gt;registration&lt;/code&gt; site options change.
&lt;/p&gt;
&lt;p&gt;
The following is an intermediate workaround for this but isn't necessarily very scalable:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="sd"&gt;/**
 * Currently when network settings are updated the capabilties for each
 * site stay as they were at the time of creation
 *
 * @action wpmuadminedit Runs before options are updated
 */&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'wpmuadminedit'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$do_update_roles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'add_new_users'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;get_site_option&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'add_new_users'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$do_update_roles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'registration'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;get_site_option&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'registration'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$do_update_roles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nv"&gt;$do_update_roles&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="sd"&gt;/**
         * Runs after settings have been updated
         */&lt;/span&gt;
        &lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'update_wpmu_options'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="c1"&gt;// Need populate_roles() function
&lt;/span&gt;                &lt;span class="k"&gt;require_once&lt;/span&gt; &lt;span class="nx"&gt;ABSPATH&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/wp-admin/includes/schema.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;function_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'get_sites'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nv"&gt;$blog_ids&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_sites&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                                &lt;span class="s1"&gt;'fields'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'ids'&lt;/span&gt;
                        &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nv"&gt;$blog_ids&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;array_map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$site&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$site&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'blog_id'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
                        &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;wp_get_sites&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="c1"&gt;// Call populate_roles() for each site
&lt;/span&gt;                &lt;span class="k"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$blog_ids&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$blog_id&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nx"&gt;switch_to_blog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$blog_id&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                        &lt;span class="nx"&gt;populate_roles&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                        &lt;span class="nx"&gt;restore_current_blog&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Any thoughts on the best way to update this option? Eg. when visiting the individual site admin, could we somehow tell if that network setting has been changed since the last run of &lt;code&gt;populate_roles()&lt;/code&gt;?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>20899.4.diff attached to Ticket #20899</title>
      
        <dc:creator>stevenkword</dc:creator>

      <pubDate>Wed, 22 Feb 2017 19:01:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/20899/20899.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/20899/20899.4.diff/1487790073827065</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39886 (Invalid jQuery Live Event in handlers.min.js file.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 22 Feb 2017 18:58:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39886#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39886#comment:2/1487789902479741</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20899 (is_home() should be able to be true when is_feed()) updated</title>
      
        <dc:creator>stevenkword</dc:creator>

      <pubDate>Wed, 22 Feb 2017 18:58:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20899#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20899#comment:25/1487789886683893</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/20899/20899.4.diff" title="Attachment '20899.4.diff' in Ticket #20899"&gt;20899.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/20899/20899.4.diff" title="Download"&gt;​&lt;/a&gt; builds upon a patch created in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39157" title="#39157: defect (bug): Feed returns 404 when there are no posts (closed: fixed)"&gt;#39157&lt;/a&gt; as an attempt to solve this problem by adding two new getter methods and modifying the wp_query conditionals.  This allows for the ability to distinguish between a home page and a home feed as well as between a custom feed and a regular feed.  This solution should protect against the regression mentioned by @danielbachhuber and @swissspidy above.  Unit test pass as of 4.7.2.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37140 (Rotating images doesn't adjust orientation for imagick) updated</title>
      
        <dc:creator>sanchothefat</dc:creator>

      <pubDate>Wed, 22 Feb 2017 18:53:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37140#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37140#comment:32/1487789633906180</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37140#comment:30" title="Comment 30"&gt;mikeschroder&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Have a question -- @sanchothefat, do you think it's necessary to test all 8 rotations you've uploaded, or to help keep tests lean, do you think it's sufficient to pick one rotation, and use that?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hi Mike, yeah I think that's fine, I confirmed they all work so probably just we can just use the upside down one as that's the most common problem.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34373 (Don't set is_home=&gt;true in WP_Query during REST request) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 22 Feb 2017 18:46:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34373#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34373#comment:11/1487789186772553</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by user-267. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1487789184004882"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12423 (Include default code editor) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Wed, 22 Feb 2017 18:31:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12423#comment:58</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12423#comment:58/1487788303413941</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12423 (Include default code editor) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 22 Feb 2017 18:30:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12423#comment:57</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12423#comment:57/1487788224073280</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-editor by joen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1487788220005183"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4575 (Add functions to return the last-modified timestamp of a category/tag) updated</title>
      
        <dc:creator>stevenkword</dc:creator>

      <pubDate>Wed, 22 Feb 2017 18:17:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4575#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4575#comment:51/1487787423758458</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>4575_8.diff attached to Ticket #4575</title>
      
        <dc:creator>stevenkword</dc:creator>

      <pubDate>Wed, 22 Feb 2017 18:16:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/4575/4575_8.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/4575/4575_8.diff/1487787396581688</guid>
      <description>&lt;p&gt;
Refresh @ 4.7.2
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39886 (Invalid jQuery Live Event in handlers.min.js file.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 22 Feb 2017 18:16:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39886#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39886#comment:1/1487787378223758</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @MMDeveloper, welcome to WordPress Trac! Thanks for the ticket.
&lt;/p&gt;
&lt;p&gt;
FWIW, SWFUpload is no longer used by core, it's only included for compatibility with older plugins or themes, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16668#comment:2" title="Comment 2 for #16668: enhancement: SWFUpload 2.2.1 (closed: wontfix)"&gt;comment:2:ticket:16668&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The latest fix to &lt;code&gt;handlers.js&lt;/code&gt; was 3 years ago in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27243" title="Remove a few unnecessary jQuery selectors added in [27239]. Playlists ..."&gt;[27243]&lt;/a&gt;. I guess we could fix the deprecated &lt;code&gt;.live()&lt;/code&gt; method, but does it still work otherwise?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39935 (rest-api not working on PHP Built-in server instance) updated</title>
      
        <dc:creator>thinkholic</dc:creator>

      <pubDate>Wed, 22 Feb 2017 18:16:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39935#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39935#comment:2/1487787363397747</guid>
      <description>&lt;p&gt;
HI @MattyRob
&lt;/p&gt;
&lt;p&gt;
Thanks! for your reply.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
First is that the REST API is now a core part of WordPress activated by default in WordPress 4.7.x so why the need for the plugin?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Actually, I was planing to develop a command-line tool for introduce a different approach and a process for custom WordPress development. I am more of a nodejs developer and working on WordPress stuffs too since in early stage of the WordPress.
&lt;/p&gt;
&lt;p&gt;
The focus of my project is mainly for code generation and a deployment solution. Right now, I am developing a wrapper for it.
&lt;/p&gt;
&lt;p&gt;
I am thinking to integrate &lt;code&gt;WP-CLI&lt;/code&gt; as a core of the project to archive some functions without re-inventing the wheel.
&lt;/p&gt;
&lt;p&gt;
It seems, I am about to face a WordPress trademark policy violation because of the name I put to it. [Thanks to @danielbachhuber for reminding me that :)]. So I also going to change the name.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If you are not using Permalinks you'll need to use a link like this &lt;a class="ext-link" href="http://example.com/?rest_route=/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com/?rest_route=/&lt;/a&gt;, if permalinks are enabled you can use a prettier link like this, &lt;a class="ext-link" href="http://example.com/wp-json/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com/wp-json/&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Actually, I have enabled the Permalinks. Anyway, &lt;code&gt;?rest_route&lt;/code&gt; is working fine.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Wed, 22 Feb 2017 17:53:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:109</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:109/1487786018117858</guid>
      <description>&lt;p&gt;
Some notes from testing the latest patch:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Getting an error: &lt;code&gt;Notice: Undefined index: align in /srv/www/wordpress-develop/src/wp-includes/widgets/class-wp-widget-media.php on line 81&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Still seeing a download button on videos (though not audio anymore): &lt;a class="ext-link" href="https://cloudup.com/cKZaX_kri8j"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/cKZaX_kri8j&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Some (not all) of the mp3s I'm trying to upload are telling me, "Sorry, this file type is not permitted for security reasons." Any ideas why?
&lt;/li&gt;&lt;li&gt;Any reason why we can't just apply "scale to fit width" automatically and not make it an option at all?
&lt;/li&gt;&lt;li&gt;I was able to select a PDF to add to the widget (which didn't work once I added it, unsurprisingly). Can we hide unsupported media types when you open the media library to choose a file for the widget?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39933 (WP_REST_Request::get_param() doesn't work for getting body params on ...) updated</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Wed, 22 Feb 2017 17:23:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39933#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39933#comment:3/1487784202592412</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;blockquote&gt;
&lt;p&gt;
Can you put up a patch and unit tests?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
sure @jnylen0 
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I recall some discussion where it was said it's not supported because many servers don't support it, or something like that
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@swissspidy I dunno. Do you think I should hold off making a patch until there is some more discussion?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39943 (Update jQuery UI to 1.12.x) created</title>
      
        <dc:creator>lexhair</dc:creator>

      <pubDate>Wed, 22 Feb 2017 16:54:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39943</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39943/1487782470289427</guid>
      <description>&lt;p&gt;
Some nice enhancements in the jQuery 1.12.x library over 1.11.4 (current bundled version). Was coding a form with the controlgroup widget in jQuery UI 1.12.x only to realize the bundled jQuery UI didn't support it. Wound up using the now deprecated buttonset widget so I'll have to go back eventually.
&lt;/p&gt;
&lt;p&gt;
First ticket in a while for me. Keep up the great work!
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27404 (Widget Customizer: Allow adding inactive widgets to widget areas) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Wed, 22 Feb 2017 16:35:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27404#comment:62</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27404#comment:62/1487781316733864</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27404#comment:61" title="Comment 61"&gt;folletto&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think that we can test that... and if it works, we have a good simple win. If it's not it's fairly easy to add headers or similar solutions from that design. :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed. I think we should try this out. If it's bad, we'll make some adjustments, or scrap it and rethink.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39942 (Restored Post may steal slug to published Post) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 22 Feb 2017 15:49:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39942#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39942#comment:1/1487778555679400</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by ziodave. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487778552009541"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39912 (Image empty alt attributes get stripped out when editing the image ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 22 Feb 2017 15:43:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39912#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39912#comment:10/1487778238630682</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-tinymce by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-tinymce/p1487778236000083"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39942 (Restored Post may steal slug to published Post) created</title>
      
        <dc:creator>ziodave</dc:creator>

      <pubDate>Wed, 22 Feb 2017 15:37:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39942</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39942/1487777830762250</guid>
      <description>&lt;p&gt;
Steps to reproduce:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Create a Post 1 with title "Post",
&lt;/li&gt;&lt;li&gt;Assign the slug 'post' to Post 1,
&lt;/li&gt;&lt;li&gt;Publish Post 1,
&lt;/li&gt;&lt;li&gt;Unpublish Post 1 by setting it as 'Draft', then Update,
&lt;/li&gt;&lt;li&gt;After Update, Trash Post 1,
&lt;/li&gt;&lt;li&gt;Repeat 1-5 for Post 2,
&lt;/li&gt;&lt;li&gt;Create a Post 3 with title "Post",
&lt;/li&gt;&lt;li&gt;Assign the slug 'post' to Post 3,
&lt;/li&gt;&lt;li&gt;Publish Post 3,
&lt;/li&gt;&lt;li&gt;Now restore Post 2,
&lt;/li&gt;&lt;li&gt;Open/Reload the edit screen for Post 3,
&lt;/li&gt;&lt;li&gt;It'll show 'post-2' as slug,
&lt;/li&gt;&lt;li&gt;Saving/Updating Post 3 will change the slug from 'post' to 'post-2'.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Probably the following functions participate in the issue:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;wp_add_trashed_suffix_to_post_name_for_post&lt;/code&gt;, which is checking for
&lt;/li&gt;&lt;/ul&gt;&lt;pre class="wiki"&gt;if ( '__trashed' === substr( $post-&amp;gt;post_name, -9 ) ) {
&lt;/pre&gt;&lt;p&gt;
while Post 2 has &lt;code&gt;post__trashed-2&lt;/code&gt; as post name
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;wp_unique_post_slug&lt;/code&gt;, which is not checking the uniqueness of the slug if the post is &lt;code&gt;draft&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19770 (Implement browser-side resizing with Plupload) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 22 Feb 2017 15:27:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19770#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19770#comment:11/1487777257515920</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by sergey. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487777255001449"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39941 (Allow using Content-Security-Policy without unsafe-inline) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 22 Feb 2017 15:21:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39941#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39941#comment:3/1487776911528416</guid>
      <description>&lt;p&gt;
Ah sorry, I didn't click through to your plugin. The nonce attribute approach is interesting. Is this widely supported by browsers? Can the same nonce be re-used for all script tags?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39941 (Allow using Content-Security-Policy without unsafe-inline) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 22 Feb 2017 15:18:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39941#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39941#comment:2/1487776729758401</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the patch, Tom.
&lt;/p&gt;
&lt;p&gt;
The resulting output of &lt;code&gt;inline_js()&lt;/code&gt; still includes inline &lt;code&gt;&amp;lt;script&amp;gt; ... &amp;lt;/script&amp;gt;&lt;/code&gt; tags. Can you let us know how this allows a CSP without &lt;code&gt;unsafe-inline&lt;/code&gt; to be implemented?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39941 (Allow using Content-Security-Policy without unsafe-inline) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 22 Feb 2017 15:18:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39941#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39941#comment:1/1487776706691527</guid>
      <description>&lt;p&gt;
How does this change anything? &lt;code&gt;inline_js()&lt;/code&gt; still prints &lt;code&gt;&amp;lt;script&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt; tags. Because of that, I think it's really a duplicate of &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/32067" title="#32067: feature request: Remove inline javascript from WP-Core to allow CSP protection (accepted)"&gt;#32067&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39939 (A Contributor cannot preview their own post if it's scheduled) updated</title>
      
        <dc:creator>dhanendran</dc:creator>

      <pubDate>Wed, 22 Feb 2017 15:11:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39939#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39939#comment:1/1487776306609848</guid>
      <description>&lt;p&gt;
We don't have any specific &lt;code&gt;cap&lt;/code&gt; for previewing a post. If we enable &lt;code&gt;edit_post&lt;/code&gt; then &lt;code&gt;contributor&lt;/code&gt; may edit the approved post and it may published on scheduled time before reviewed it again.
&lt;/p&gt;
&lt;p&gt;
So the possible solution would be, we can add additional condition while showing the &lt;code&gt;preview&lt;/code&gt; link and post preview &lt;code&gt;cap&lt;/code&gt; change.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>inline-js-patch.diff attached to Ticket #39941</title>
      
        <dc:creator>tomdxw</dc:creator>

      <pubDate>Wed, 22 Feb 2017 15:11:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39941/inline-js-patch.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39941/inline-js-patch.diff/1487776264383558</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39941 (Allow using Content-Security-Policy without unsafe-inline) created</title>
      
        <dc:creator>tomdxw</dc:creator>

      <pubDate>Wed, 22 Feb 2017 15:10:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39941</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39941/1487776232612840</guid>
      <description>&lt;p&gt;
Currently when using Content-Security-Policy with WordPress, you must use the &lt;code&gt;unsafe-inline&lt;/code&gt; directive because there are a lot of blocks of inline JavaScript in WordPress core. This means that the browser cannot protect the user from attacks using XSS vulnerabilities. This is an unsatisfying situation because XSS vulnerabilities can be found in a great number of WordPress plugins.
&lt;/p&gt;
&lt;p&gt;
The patch I’m providing today makes it possible to write a plugin which uses CSP without &lt;code&gt;unsafe-inline&lt;/code&gt;. Such a plugin would make the vast majority of XSS vulnerabilities found in WP plugins useless to an attacker.
&lt;/p&gt;
&lt;p&gt;
I’ve just added one new function: &lt;code&gt;inline_js()&lt;/code&gt;. Now instead of writing &lt;code&gt;&amp;lt;script&amp;gt;doSomething()&amp;lt;/script&amp;gt;&lt;/code&gt;, you would write &lt;code&gt;&amp;lt;?php inline_js(‘doSomething()’) ?&amp;gt;&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I’ve changed enough instances of inline JavaScript to use &lt;code&gt;inline_js()&lt;/code&gt; that you can try it out:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Apply this patch to WordPress
&lt;/li&gt;&lt;li&gt;Install and activate this plugin: &lt;a class="ext-link" href="https://gist.github.com/tomdxw/e2aee45ad5cb2a309c6bd0fc213efb97"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gist.github.com/tomdxw/e2aee45ad5cb2a309c6bd0fc213efb97&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Visit /wp-admin/
&lt;/li&gt;&lt;li&gt;If you have any plugins or themes activated which add inline JavaScript to the admin interface you’ll see that those have been blocked (in the console tab of developer tools).
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I’ve only changed some instances of inline JavaScript in this patch - enough to prove that it will work.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22744 (Media search doesn't include file name) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Wed, 22 Feb 2017 14:44:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22744#comment:67</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22744#comment:67/1487774653529992</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22744#comment:66" title="Comment 66"&gt;sashman13&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Thanks for the feedback, @sashman13. See &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/39358" title="#39358: defect (bug): Media search speed has been dramatically reduced (reopened)"&gt;#39358&lt;/a&gt; for discussion about how to disable this feature on larger sites.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39940 (get_terms(): post_type arguments) updated</title>
      
        <dc:creator>Compute</dc:creator>

      <pubDate>Wed, 22 Feb 2017 14:41:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39940#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39940#comment:2/1487774465444590</guid>
      <description>&lt;p&gt;
Thanks for the links!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #18106,​39940 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 22 Feb 2017 14:35:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=18106%2C39940</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=18106%2C39940/1487774101810422</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18106" title="#18106: feature request: get_terms of posts in a specific post_type (closed: wontfix)"&gt;#18106&lt;/a&gt;, see also &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/38280" title="#38280: enhancement: Make term count for a specific object type available (new)"&gt;#38280&lt;/a&gt; and &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/32942" title="#32942: defect (bug): Taxomony term list counts do not respect post_type parameter (new)"&gt;#32942&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #22744 (Media search doesn't include file name) updated</title>
      
        <dc:creator>sashman13</dc:creator>

      <pubDate>Wed, 22 Feb 2017 14:33:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22744#comment:66</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22744#comment:66/1487773988069152</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22744#comment:31" title="Comment 31"&gt;joemcgill&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Some preliminary testing on a site with ~14k attachments and ~18k posts, this change increased the main query time from 60.7ms to 187.6ms, which may be acceptable since this is only applied in an admin context, but testing on installs with a larger number of posts/attachments would be appreciated.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This change is proving very problematic on one of our larger client sites.  They have 886k posts and close to 13 million postmeta entries with well over 2 million attachments.  The query generated by this increased their media search time from 10 seconds to 25 seconds and worse yet, is locking the postmeta table in the MYISAM engine for the entirety of the query due to the outer join and tmp table.  The previous search lock was insignificant.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Wed, 22 Feb 2017 14:18:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:131</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:131/1487773097646111</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:130" title="Comment 130"&gt;jb510&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote&gt;
&lt;p&gt;
I think content blocks are one of the best proposals to come along in quite a while, but they have nothing to do with this ticket or what this ticket aims to provide.  Content blocks, are for organizing/controlling/editing content that falls within the post_content space.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Note that I'm not referring to the "content blocks" within the editor in recent mockups and prototypes, but the broader idea encompassing shortcodes and widgets that existed before that. See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/33473" title="#33473: feature request: Shortcodes + Widgets + Nav Menus. Unified &amp;#34;component&amp;#34; API (aka Content ... (new)"&gt;#33473&lt;/a&gt;. If I'm understanding that content blocks idea correctly, they were intended to have a broader scope than just the post content. It would also for example include widgets and sidebars, which would basically become another form of content block and content block areas. The whole template could basically be made of of different content areas where content blocks could be added.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39940 (get_terms(): post_type arguments) created</title>
      
        <dc:creator>Compute</dc:creator>

      <pubDate>Wed, 22 Feb 2017 13:55:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39940</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39940/1487771703916633</guid>
      <description>&lt;p&gt;
When a taxonomy is shared across multiple post_types these are counted as a total of both.
&lt;/p&gt;
&lt;p&gt;
For instance:
&lt;/p&gt;
&lt;p&gt;
My custom category "discipline" is used on the post_types "course" and "summer_course".
&lt;/p&gt;
&lt;p&gt;
On one discipline the courses have 4 and the summer_courses have 7. In the backend the count is then "11" but when clicking the link on the course discipline I see only 4.
&lt;/p&gt;
&lt;p&gt;
Another bad thing about this is how hide_empty is working. If the courses has 6 courses with a discipline but summer_courses don't, the get_terms() will shown the discipline as not empty. It would be nice to specify which post_types should be including.
&lt;/p&gt;
&lt;p&gt;
I've found this solution but I really think that there should be a fix for more core as well:
&lt;a class="ext-link" href="https://dfactory.eu/get_terms-post-type/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://dfactory.eu/get_terms-post-type/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19629 (return option for media_sideload_image) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Wed, 22 Feb 2017 13:22:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19629#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19629#comment:31/1487769731685533</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;code&gt;sideload_id_19629.diff&lt;/code&gt; looks good to me
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39939 (A Contributor cannot preview their own post if it's scheduled) created</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 22 Feb 2017 12:52:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39939</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39939/1487767922540371</guid>
      <description>&lt;p&gt;
Steps to reproduce:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;A Contributor writes a post and submits it for review. At this point they can preview their post.
&lt;/li&gt;&lt;li&gt;An Editor or Administrator approves the post and schedules it for publication at a later date.
&lt;/li&gt;&lt;li&gt;The contributor viewing the Posts listing table can no longer preview their post.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Previously: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33694" title="#33694: defect (bug): Capability missing for editing scheduled posts created by one self ... (closed: fixed)"&gt;#33694&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>gonom9</dc:creator>

      <pubDate>Wed, 22 Feb 2017 12:45:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:108</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:108/1487767524634604</guid>
      <description>&lt;p&gt;
Changes in &lt;a href="https://core.trac.wordpress.org/attachment/ticket/32417/32417.12.diff"&gt;32417.12.diff&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Updated &lt;code&gt;wp-media-widget.js&lt;/code&gt; to follow jshint-style.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; are auto-initialized after selective refresh.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
@melchoyce The download icon never show up.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
@westonruter Thanks for all of your advice. I was hoping you could review my latest patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>32417.12.diff attached to Ticket #32417</title>
      
        <dc:creator>gonom9</dc:creator>

      <pubDate>Wed, 22 Feb 2017 12:43:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32417/32417.12.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32417/32417.12.diff/1487767394416703</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39935 (rest-api not working on PHP Built-in server instance) updated</title>
      
        <dc:creator>MattyRob</dc:creator>

      <pubDate>Wed, 22 Feb 2017 11:30:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39935#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39935#comment:1/1487763007398273</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@thinkholic
&lt;/p&gt;
&lt;p&gt;
I have to admit I don't fully understand the processes you are following but 2 thoughts have occurred to me with respect to your issues that may or may not help.
&lt;/p&gt;
&lt;p&gt;
First is that the REST API is now a core part of WordPress activated by default in WordPress 4.7.x so why the need for the plugin?
&lt;/p&gt;
&lt;p&gt;
Second, is what URL are you using to access the API? If you are not using Permalinks you'll need to use a link like this &lt;code&gt;http://example.com/?rest_route=/&lt;/code&gt;, if permalinks are enabled you can use a prettier link like this, &lt;code&gt;http://example.com/wp-json/&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37217 (get_network_by_path should use WP_Network_Query) closed</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Wed, 22 Feb 2017 10:41:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37217#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37217#comment:11/1487760081296512</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40102" title="Multisite: Use `WP_Network_Query` in `WP_Network::get_by_path()`.
An ..."&gt;40102&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Multisite: Use &lt;code&gt;WP_Network_Query&lt;/code&gt; in &lt;code&gt;WP_Network::get_by_path()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
An additional unit test has been introduced to verify the method works properly when using an external object cache.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props spacedmonkey, jeremyfelt.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37217" title="#37217: enhancement: get_network_by_path should use WP_Network_Query (closed: fixed)"&gt;#37217&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40102]: Multisite: Use `WP_Network_Query` in `WP_Network::get_by_path()`.  An ...</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Wed, 22 Feb 2017 10:41:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40102</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40102/1487760080792468</guid>
      <description>&lt;p&gt;
Multisite: Use &lt;code&gt;WP_Network_Query&lt;/code&gt; in &lt;code&gt;WP_Network::get_by_path()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
An additional unit test has been introduced to verify the method works properly when using an external object cache.
&lt;/p&gt;
&lt;p&gt;
Props spacedmonkey, jeremyfelt.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37217" title="#37217: enhancement: get_network_by_path should use WP_Network_Query (closed: fixed)"&gt;#37217&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>39854.2.patch attached to Ticket #39854</title>
      
        <dc:creator>sagarkbhatt</dc:creator>

      <pubDate>Wed, 22 Feb 2017 10:11:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39854/39854.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39854/39854.2.patch/1487758319287757</guid>
      <description>&lt;p&gt;
This patch wil show gmt_offset only when context=edit
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Tickets #34466,​39938 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 22 Feb 2017 09:57:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=34466%2C39938</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=34466%2C39938/1487757433527368</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/34466" title="#34466: feature request: wp_register_form, wp_lost_password_form function (new)"&gt;#34466&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #34466 (wp_register_form, wp_lost_password_form function) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 22 Feb 2017 09:56:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34466#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34466#comment:6/1487757375939242</guid>
      <description>&lt;p&gt;
&lt;code&gt;wp_register_form()&lt;/code&gt; should probably be &lt;code&gt;wp_registration_form()&lt;/code&gt;, for consistency with &lt;code&gt;wp_registration_url()&lt;/code&gt; introduced in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17950" title="#17950: enhancement: Introduce wp_registration_url() (closed: fixed)"&gt;#17950&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34466 (wp_register_form, wp_lost_password_form function) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 22 Feb 2017 09:54:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34466#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34466#comment:5/1487757283847201</guid>
      <description>&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/23279" title="#23279: enhancement: Add templates to style registration, signup, activation, login and ... (new)"&gt;#23279&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23279 (Add templates to style registration, signup, activation, login and ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 22 Feb 2017 09:54:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23279#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23279#comment:21/1487757266450786</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23279#comment:20" title="Comment 20"&gt;magicroundabout&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I can do a wp_login_form() but I can't do a wp_lostpassword_form() or a wp_registration_form() - more template tags like this would help us build our own forms in page templates.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/34466" title="#34466: feature request: wp_register_form, wp_lost_password_form function (new)"&gt;#34466&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #34466,​39937 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 22 Feb 2017 09:52:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=34466%2C39937</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=34466%2C39937/1487757128316501</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/34466" title="#34466: feature request: wp_register_form, wp_lost_password_form function (new)"&gt;#34466&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #39938 (wp_reset_password_form function similar to wp_login_form) created</title>
      
        <dc:creator>Horttcore</dc:creator>

      <pubDate>Wed, 22 Feb 2017 09:51:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39938</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39938/1487757094687043</guid>
      <description>&lt;p&gt;
It should be easier for adding a front end rest password form then with plugins.
At the moment there is the function wp_login_form() which helps a lot for creating a front end login.
There should be something similar for the reset password form.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39934 (WordPress current version 4.7.2 effected by Malware?) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Wed, 22 Feb 2017 09:49:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39934#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39934#comment:2/1487756964579737</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39937 (wp_register_form function similar to wp_login_form) created</title>
      
        <dc:creator>Horttcore</dc:creator>

      <pubDate>Wed, 22 Feb 2017 09:49:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39937</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39937/1487756956571018</guid>
      <description>&lt;p&gt;
It should be easier for adding a front end registration form then with plugins.
At the moment there is the function wp_login_form() which helps a lot for creating a front end login.
There should be something similar for the registration form.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #33003 (making simplepie class resistant to leading whitespace feed issues) updated</title>
      
        <dc:creator>ssuess</dc:creator>

      <pubDate>Wed, 22 Feb 2017 09:49:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33003#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33003#comment:4/1487756943909555</guid>
      <description>&lt;p&gt;
Will this ever be added to core? It really helps.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39934 (WordPress current version 4.7.2 effected by Malware?) closed</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Wed, 22 Feb 2017 09:48:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39934#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39934#comment:1/1487756935665947</guid>
      <description>invalid: &lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
This sounds like an overly strict firewall rule (or a false positive in the firewall rules you are running), and not a problem with WordPress core.
&lt;/p&gt;
&lt;p&gt;
I've tested with our own setups, which also run Sonicwalls without any problems on stock WordPress installs.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39936 (I18n Translation Error for 'Menu Kopfzeile' and 'Menu Top') updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 22 Feb 2017 09:47:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39936#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39936#comment:3/1487756855186542</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39936 (I18n Translation Error for 'Menu Kopfzeile' and 'Menu Top') updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 22 Feb 2017 09:47:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39936#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39936#comment:2/1487756839281821</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39928 (selecting pages/post from the menu gets an 'oops that page can't be ...) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 22 Feb 2017 09:44:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39928#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39928#comment:2/1487756657944018</guid>
      <description>invalid: &lt;p&gt;
Hello @andyetheregoi, welcome to WordPress Trac!
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There appears to be a problem finding pages at my site.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This Trac is used for enhancements and bug reporting for the WordPress core software. Please try the &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;support forums&lt;/a&gt; to get help with your site.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39936 (I18n Translation Error for 'Menu Kopfzeile' and 'Menu Top') closed</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 22 Feb 2017 09:43:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39936#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39936#comment:1/1487756624853285</guid>
      <description>invalid: &lt;p&gt;
Hey there,
&lt;/p&gt;
&lt;p&gt;
"Menu Kopfzeile" and "Menu Top" are the names of the menus that you as a user entered, just so you can recognize them better. Just click on it and see that you can edit the name.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Screenshots.zip attached to Ticket #39936</title>
      
        <dc:creator>renesigi</dc:creator>

      <pubDate>Wed, 22 Feb 2017 09:40:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39936/Screenshots.zip</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39936/Screenshots.zip/1487756433364319</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39936 (I18n Translation Error for 'Menu Kopfzeile' and 'Menu Top') created</title>
      
        <dc:creator>renesigi</dc:creator>

      <pubDate>Wed, 22 Feb 2017 09:39:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39936</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39936/1487756345540710</guid>
      <description>&lt;p&gt;
My Language setting for the WP Admin Language (Dashboard) is en_US.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
By selecting Dashboard &amp;gt; Appearance &amp;gt; Customize &amp;gt; Menues, the following is shown:
&lt;a class="ext-link" href="https://drive.google.com/open?id=0B5lCUIR59Tl5LTRfUmRsdlNfY3c"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://drive.google.com/open?id=0B5lCUIR59Tl5LTRfUmRsdlNfY3c&lt;/a&gt;
&lt;br /&gt;
The two entries 'Menu Kopfzeile' and 'Menu Top' are not translated accordingly.
&lt;/p&gt;
&lt;p&gt;
I've checked this by selecting it_IT and de_CH as WP Admin Language.
&lt;/p&gt;
&lt;p&gt;
Kind Regards
&lt;/p&gt;
&lt;p&gt;
PS: Could you give me a hit on how to solve this problem.
&lt;/p&gt;
&lt;p&gt;
See here for it_IT: &lt;a class="ext-link" href="https://drive.google.com/open?id=0B5lCUIR59Tl5WTMwX0p1UEpRSXc"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://drive.google.com/open?id=0B5lCUIR59Tl5WTMwX0p1UEpRSXc&lt;/a&gt; and here for de_CH: &lt;a class="ext-link" href="https://drive.google.com/open?id=0B5lCUIR59Tl5NUNJcmFaQjhYUVU"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://drive.google.com/open?id=0B5lCUIR59Tl5NUNJcmFaQjhYUVU&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Conclusion:
&lt;/p&gt;
&lt;p&gt;
Independent of the chosen language, the two entries are always shown as mentioned.
&lt;/p&gt;
&lt;p&gt;
Kind Regards
&lt;/p&gt;
&lt;p&gt;
PS: Could you give me a hint, how to solve this problem quickly!?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39928 (selecting pages/post from the menu gets an 'oops that page can't be ...) updated</title>
      
        <dc:creator>pratikgandhi</dc:creator>

      <pubDate>Wed, 22 Feb 2017 09:07:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39928#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39928#comment:1/1487754442216087</guid>
      <description>&lt;p&gt;
Hello Andyetheregoi,
&lt;/p&gt;
&lt;p&gt;
I found that the issue is with your permalink structure. When I checked your site's default post which is 'Hello world' is also showing 404 page and the url has comma and the / in it.
&lt;/p&gt;
&lt;p&gt;
Thanks
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39701 (Do not allow editing users from a different site in REST API) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Wed, 22 Feb 2017 09:04:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39701#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39701#comment:21/1487754241877386</guid>
      <description>&lt;p&gt;
@ocean90 Correct, that has been removed since we need to work on a real implementation for adding/removing users to/from sites. As discussed before, the way the API currently handles this was not put much effort into for 4.7 as other issues were more important. Multisite functionality should not be considered supported at this point, and we would definitely bring this functionality back in a better way in 4.8.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39701 (Do not allow editing users from a different site in REST API) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 22 Feb 2017 09:00:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39701#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39701#comment:20/1487754028741206</guid>
      <description>&lt;p&gt;
I see that &lt;code&gt;test_update_existing_network_user_on_sub_site_adds_user_to_site()&lt;/code&gt; is removed, does that mean I can't add an existing user to a site anymore?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39701 (Do not allow editing users from a different site in REST API) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Wed, 22 Feb 2017 08:55:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39701#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39701#comment:19/1487753729626798</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for reviewing @jnylen0! I'll commit it today.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38341 (Hide 'Empty Trash' button when trash is already empty) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 22 Feb 2017 08:08:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38341#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38341#comment:15/1487750884022383</guid>
      <description>&lt;p&gt;
Thanks @printsachen1 and good catch with the restore! I think it should be easy to make it work in that scenario, provided that the JS isn't that big of a mess.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39933 (WP_REST_Request::get_param() doesn't work for getting body params on ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 22 Feb 2017 08:07:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39933#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39933#comment:2/1487750821835739</guid>
      <description>&lt;p&gt;
According to the &lt;a class="ext-link" href="https://developer.wordpress.org/rest-api/requests/#body-params"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;documentation&lt;/a&gt;, "Body parameters can and should be used for POST, PUT, and DELETE requests."
&lt;/p&gt;
&lt;p&gt;
However, I recall some discussion where it was said it's not supported because many servers don't support it, or something like that. The only thing I could find right now was &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1455121876002422"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/core-restapi/p1455121876002422&lt;/a&gt; though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32378 (Image Uploads automatically puts "Olympus Digital Camera" as caption) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 22 Feb 2017 07:56:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32378#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32378#comment:15/1487750170255135</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
That's pretty neat, thanks @dmsnell!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39935 (rest-api not working on PHP Built-in server instance) created</title>
      
        <dc:creator>thinkholic</dc:creator>

      <pubDate>Wed, 22 Feb 2017 07:07:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39935</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39935/1487747230143743</guid>
      <description>&lt;p&gt;
HI. I use PHP built-in server for wordpress development instea of using WAMP/MAMP like stack.
&lt;/p&gt;
&lt;p&gt;
I noticed rest-api not working on PHP built-in server and it getting no error or warning messages too.
&lt;/p&gt;
&lt;p&gt;
Reproduce Steps:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Get fresh copy of WordPress latest
&lt;/li&gt;&lt;li&gt;Create DB and update wp-config.php
&lt;/li&gt;&lt;li&gt;Run the server with &lt;code&gt;php -S localhost:8888 ./&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Install &lt;code&gt;rest-api&lt;/code&gt; plugin
&lt;/li&gt;&lt;li&gt;Try to get results with 'localhost:8888/wp-json`
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Actually I use to run these steps with &lt;a class="ext-link" href="https://github.com/thinkholic/wordpress-cli/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/thinkholic/wordpress-cli/&lt;/a&gt; tool. I am doing some improvement on it and found the issue.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>SonicWALL   Blocked by Anti Spyware.png attached to Ticket #39934</title>
      
        <dc:creator>dinakar516</dc:creator>

      <pubDate>Wed, 22 Feb 2017 06:00:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39934/SonicWALL%20%20%20Blocked%20by%20Anti%20Spyware.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39934/SonicWALL%20%20%20Blocked%20by%20Anti%20Spyware.png/1487743229208508</guid>
      <description>&lt;p&gt;
Malware/Virus
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39934 (WordPress current version 4.7.2 effected by Malware?) created</title>
      
        <dc:creator>dinakar516</dc:creator>

      <pubDate>Wed, 22 Feb 2017 06:00:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39934</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39934/1487743208961337</guid>
      <description>&lt;p&gt;
All my wordpress websites running on Version 4.7.2 blocked by SonicWall from this morning when contacted my Network Administrator he said it was effected by a malware and this malware is in blacklist so this is why SonicWall blocking this website, the below is the screenshot for the error.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://pho.to/Aceei"&gt;&lt;img src="http://pho.to/Aceei" alt="http://pho.to/Aceei" crossorigin="anonymous" title="http://pho.to/Aceei" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39933 (WP_REST_Request::get_param() doesn't work for getting body params on ...) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Wed, 22 Feb 2017 05:51:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39933#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39933#comment:1/1487742706405803</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Nice find, @mnelson4 - I think it's just an oversight, and I'd like to get it fixed.  Can you put up a patch and unit tests?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39933 (WP_REST_Request::get_param() doesn't work for getting body params on ...) created</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Wed, 22 Feb 2017 05:41:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39933</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39933/1487742091530519</guid>
      <description>&lt;p&gt;
You cannot pass a request body on DELETE requests, although it seems to be admissible (see &lt;a class="ext-link" href="http://stackoverflow.com/questions/299628/is-an-entity-body-allowed-for-an-http-delete-request"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://stackoverflow.com/questions/299628/is-an-entity-body-allowed-for-an-http-delete-request&lt;/a&gt;), and when deleting posts it should be possible (eg you can provide a "force" argument, but it gets ignored unless it's included in the querystring.)
&lt;/p&gt;
&lt;p&gt;
The problem seems to be that &lt;code&gt;WP_REST_Request::get_parameter_order()&lt;/code&gt; doesn't list &lt;code&gt;DELETE&lt;/code&gt; as one of the methods that can pass a body in its variable &lt;code&gt;$accepts_body_data&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Is the idea to just always provide the DELETE's parameters in the querystring? (eg that's how I saw it done here: &lt;a class="ext-link" href="https://github.com/WP-API/WP-API/issues/789#issuecomment-73986884"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WP-API/WP-API/issues/789#issuecomment-73986884&lt;/a&gt;). If so I guess that's ok although I couldn't find it documented. ...But also, just adding &lt;code&gt;DELETE&lt;/code&gt; to the &lt;code&gt;$accepts_body_data&lt;/code&gt; array is an easy change too, right? From my own testing that change got it to work how I had hoped.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39753 (wp_mail() under PHP 7 hosted on Windows creates malformed email messages) updated</title>
      
        <dc:creator>Andy Schmidt</dc:creator>

      <pubDate>Wed, 22 Feb 2017 03:50:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39753#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39753#comment:8/1487735400355810</guid>
      <description>&lt;p&gt;
Yes, I have worked my way upstream (securing fixes for PHP 7.0/7.1 and in PHPmailer 6), so that each step will use appropriate behavior. Being consistent throughout will avoid this problem flipping back and forth every so often.
&lt;/p&gt;
&lt;p&gt;
So, let me just point to the PHP manual for mail():
&lt;a class="ext-link" href="http://php.net/manual/en/function.mail.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://php.net/manual/en/function.mail.php&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
PHP states clearly that both data as well as header ought to be terminated with \r\n.
&lt;/p&gt;
&lt;p&gt;
It seems that at some point, WordPress should commit to follow the prescribed behavior as much as possible while being mindful about backward incompatibility with legacy Linux systems.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39701 (Do not allow editing users from a different site in REST API) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Wed, 22 Feb 2017 03:34:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39701#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39701#comment:18/1487734458349893</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is good to go for 4.7.3.  We should get it committed to trunk within the next day or so, @flixos90 do you want to do that or shall I?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37923 (Introduce shared wp_blogmeta database table for multisite installation) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Wed, 22 Feb 2017 02:53:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37923#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37923#comment:16/1487731997502970</guid>
      <description>&lt;p&gt;
I have updated my "patch" . Here are the changes
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Better type checking of an array
&lt;/li&gt;&lt;li&gt;Fallback to options if database isn't updated
&lt;/li&gt;&lt;li&gt;Add db_version to list of options
&lt;/li&gt;&lt;li&gt;Added a start to the migration of data
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>sitemeta1.php attached to Ticket #37923</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Wed, 22 Feb 2017 02:42:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37923/sitemeta1.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37923/sitemeta1.php/1487731350216688</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39754 (`_post_format_get_terms()` can overwrite names of terms in other taxonomies) updated</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Wed, 22 Feb 2017 02:05:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39754#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39754#comment:1/1487729156140450</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19755 (Redundant blog_versions table) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Wed, 22 Feb 2017 02:04:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19755#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19755#comment:9/1487729097925876</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I updated the patch for this. The new patch is very simple.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Don't create table on new sites installs
&lt;/li&gt;&lt;li&gt;Check to see if table exists before writing to it.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This needs testing. Both creating a new site, an existing site with the table and with the table manually removed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39932.diff attached to Ticket #39932</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Wed, 22 Feb 2017 02:03:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39932/39932.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39932/39932.diff/1487729018342735</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39932 (`get_terms()` with `name` and without `taxonomy` generates warning) created</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Wed, 22 Feb 2017 02:03:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39932</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39932/1487728998549724</guid>
      <description>&lt;p&gt;
On a clean install, calling &lt;code&gt;get_terms( array( 'name' =&amp;gt; array( 'uncategorized' ) ) )&lt;/code&gt; generates a warning: &lt;code&gt;reset() expects parameter 1 to be array, null given in...class-wp-term-query.php on line 481&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Earlier in &lt;code&gt;WP_Term_Query::get_terms()&lt;/code&gt;, the &lt;code&gt;$taxonomies&lt;/code&gt; variable is set to &lt;code&gt;$args['taxonomy']&lt;/code&gt;, but that argument is &lt;code&gt;null&lt;/code&gt; by default.
&lt;/p&gt;
&lt;p&gt;
The attached patch would cast &lt;code&gt;$args['taxonomy']&lt;/code&gt; to an array before assigning it to &lt;code&gt;$taxonomies&lt;/code&gt;. Casting to an array fixes the warning and seems consistent to me with the use of &lt;code&gt;$taxonomies&lt;/code&gt; throughout the method, which tends to assume it's an array.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>19755.2.patch attached to Ticket #19755</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Wed, 22 Feb 2017 02:01:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19755/19755.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19755/19755.2.patch/1487728904483728</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Tickets #13158,​39924 batch updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 22 Feb 2017 01:50:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=13158%2C39924</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=13158%2C39924/1487728225387341</guid>
      <description>duplicate: &lt;p&gt;
Hi @hainey and welcome to Trac,
&lt;/p&gt;
&lt;p&gt;
Unfortunately race conditions such as this are a well known (amongst some) issue with WordPress's cron system - It's not designed to be used in a scenario where it's likely events are to be registered in such a way that a race condition could be hit.
&lt;/p&gt;
&lt;p&gt;
This is a duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/13158" title="#13158: defect (bug): Cron : some events may not be scheduled (new)"&gt;#13158&lt;/a&gt;, however you may also be interested in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15148" title="#15148: enhancement: Cron Storage Abstraction (closed: wontfix)"&gt;#15148&lt;/a&gt;. There exist alternative storage options for WordPress cron events though, one such option that I use (and WordPress.org also uses) is &lt;a class="ext-link" href="https://github.com/humanmade/Cavalcade"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Cavalcade&lt;/a&gt; - a separate daemon which runs on the server on top of wp-cli and guarantees (more or less) that jobs get scheduled and run.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #39753 (wp_mail() under PHP 7 hosted on Windows creates malformed email messages) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 22 Feb 2017 01:37:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39753#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39753#comment:7/1487727441827837</guid>
      <description>&lt;p&gt;
Reading &lt;a class="ext-link" href="https://github.com/PHPMailer/PHPMailer/issues/953"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/PHPMailer/PHPMailer/issues/953&lt;/a&gt; it sounds like this ended up being a bug in PHP 7.0/7.1 and will be fixed in the NEXT stable releases (7.0.17/7.1.3) for both branches.
&lt;/p&gt;
&lt;p&gt;
I'd like to suggest that this is potentially something which we could skip working around, and assume that the minority of people using PHP 7.x on windows are more likely to update to recent releases - especially considering the level of breakage encountered in these scenario's.
&lt;/p&gt;
&lt;table class="wiki"&gt;
&lt;tr&gt;If we do add a fix here however, we should specifically limit the fix to affected versions + environments (ie. Windows only, and PHP 7.x &amp;lt;= 7.0.16 &lt;td&gt; 7.1.2).
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35210 (Add notification area to Customizer) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 22 Feb 2017 01:03:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35210#comment:113</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35210#comment:113/1487725399517341</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Moving to 4.8 milestone due to dependency on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39896" title="#39896: enhancement: Customizer: Allow users to Draft changes before Publishing (closed: fixed)"&gt;#39896&lt;/a&gt; per melchoyce:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to westonruter:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
So, is this then a clear use case for the global notification area (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35210" title="#35210: enhancement: Add notification area to Customizer (closed: fixed)"&gt;#35210&lt;/a&gt;)?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, I think it is. I went with @karmatosed's design proposal from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35210#comment:26" title="#35210: enhancement: Add notification area to Customizer (closed: fixed)"&gt;ticket:35210#comment:26&lt;/a&gt; because I still find it the most simple and clear version.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@melchoyce @karmatosed It is simple, but two questions:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;What about when a user is not at the root of the customizer but instead has a panel open? Will the notification area just not be visible in that case?
&lt;/li&gt;&lt;li&gt;What if there is more than one notification needing to be displayed? Or would we only allow one to be displayed at a time? Or if there are multiple, would they just stack vertically?
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18561 (Better Way to Insert Things Below Individual Posts) updated</title>
      
        <dc:creator>jb510</dc:creator>

      <pubDate>Wed, 22 Feb 2017 00:26:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18561#comment:130</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18561#comment:130/1487723160380974</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18561#comment:129" title="Comment 129"&gt;jdgrimes&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I that this idea is partly missing the mark, and at this point, time would be better spent pursuing the idea of content blocks, which would allow plugins to make bits of content available, and users would be able to arrange them around the post as they see fit. Rather than the location being hard-coded by the plugin based on assumptions about what the theme will look like...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
I think content blocks are one of the best proposals to come along in quite a while, but they have nothing to do with this ticket or what this ticket aims to provide.  Content blocks, are for organizing/controlling/editing content that falls within the post_content space.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This ticket, as I understand it,  is about adding a universal hook for adding non-content outside the post_content space. I.e. Share buttons, related posts, ads, but so, calls to action, and anything else one might dream up. StudioPress's Genesis theme has an entry_header and entry_footer hook, its more like those, but as you've seen above the idea is to have it be a non-location specific "extras" or "intents".  I still don't really see how those get used effectively in practice but love the concept.
&lt;/p&gt;
&lt;p&gt;
The problem is the idea that plugins can use these, without accounting for what fits where...  I think we would be better using before/after and letting plugins offer a setting to select which should be used, and with what priority.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>