<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #34729 (Use short CURIEs instead of full URIs) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 21 Mar 2016 23:26:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34729#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34729#comment:30/1458602769686787</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by joehoyle. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1458602767000873"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34729 (Use short CURIEs instead of full URIs) updated</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Mon, 21 Mar 2016 23:25:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34729#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34729#comment:29/1458602719979081</guid>
      <description>&lt;p&gt;
Added patch with maximum backwards compatibility. This makes the method easier to Shim in the rest api and also provides a way to get the non-compact links just as before. If needed we could also add the ability for the client to specify if it wants curies or not. Also, if anything was internally using &lt;code&gt;get_response_links&lt;/code&gt; that method is still now available, unchanged.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>34729.5.diff attached to Ticket #34729</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Mon, 21 Mar 2016 23:23:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34729/34729.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34729/34729.5.diff/1458602626429008</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36123 (Screen Options not shown on mobile) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Mon, 21 Mar 2016 23:01:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36123#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36123#comment:2/1458601302041076</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35022 (WP allows Unicode 0x00a0 spaces in editor but shortcode parser can't ...) updated</title>
      
        <dc:creator>steevithak</dc:creator>

      <pubDate>Mon, 21 Mar 2016 22:54:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35022#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35022#comment:21/1458600843336326</guid>
      <description>&lt;p&gt;
lol, good point, the main thing is to fix that 00a0 character. As long as that gets done my users will be happy. So any version of the fix that will allow the patch to be accepted is OK with me! :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36289 (WP Speak assertive message and Firefox + NVDA bug) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 21 Mar 2016 22:40:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36289#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36289#comment:1/1458600014364130</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1458600011000246"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35022 (WP allows Unicode 0x00a0 spaces in editor but shortcode parser can't ...) updated</title>
      
        <dc:creator>gitlost</dc:creator>

      <pubDate>Mon, 21 Mar 2016 22:38:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35022#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35022#comment:20/1458599895759357</guid>
      <description>&lt;p&gt;
Hi, I think a big issue here is backward compatibility. If one was specing shortcodes now it would make sense to restrict names drastically, similar to PHP variable names or whatever. But until &lt;a href="https://core.trac.wordpress.org/changeset/34745"&gt;this change&lt;/a&gt; (see also the &lt;a class="ext-link" href="https://make.wordpress.org/core/2015/09/29/shortcode-roadmap-draft-two/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Shortcode Road Map Draft Two&lt;/a&gt; New Restriction on Shortcode Names and the codex &lt;a class="ext-link" href="https://codex.wordpress.org/Shortcode_API#Names"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Shortcode API Names&lt;/a&gt;) there wasn't any formal restriction on what characters could be used in shortcode names - things just didn't (or did) work.
&lt;/p&gt;
&lt;p&gt;
The restrictions introduced were pretty minimal, and it seems more in keeping to continue this minimalism, hence the suggestion just to add &lt;code&gt;\x{00A0}&lt;/code&gt; (and perhaps &lt;code&gt;\x{200B}&lt;/code&gt;) rather than use &lt;code&gt;\s&lt;/code&gt;. (Note that the list of chars you linked to are actually matched by &lt;code&gt;\s&lt;/code&gt; in UTF-8 mode, along with LF, VT, FF and CR. The quasi-whitespaces that aren't that one might think should be are &lt;code&gt;U+200B&lt;/code&gt;,&lt;code&gt;U+200C&lt;/code&gt;, &lt;code&gt;U+200D&lt;/code&gt;, &lt;code&gt;U+2060&lt;/code&gt; and &lt;code&gt;U+FEFF&lt;/code&gt; - &lt;a class="ext-link" href="https://en.wikipedia.org/wiki/Whitespace_character"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://en.wikipedia.org/wiki/Whitespace_character&lt;/a&gt;.)
&lt;/p&gt;
&lt;p&gt;
Similarly with switching to use &lt;code&gt;\w&lt;/code&gt;, which also in UTF-8 mode could have performance issues in needing to look up large Unicode tables.
&lt;/p&gt;
&lt;p&gt;
Plus the particular use-case here is TinyMCE inserting &lt;code&gt;U+00A0&lt;/code&gt; into content, so adding other stuff could be seen as creep. And besides personally I use the Mongolian Vowel Separator in all my shortcode names.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35973 (Imagick HHVM compatibility) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Mon, 21 Mar 2016 22:37:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35973#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35973#comment:27/1458599867765878</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36289 (WP Speak assertive message and Firefox + NVDA bug) created</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 21 Mar 2016 22:36:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36289</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36289/1458599802443262</guid>
      <description>&lt;p&gt;
Looks like Firefox and NVDA have a weird behavior with the assertive live region used for &lt;code&gt;wp.a11y.speak()&lt;/code&gt;. To make things more clear, I've prepared a short video:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://cloudup.com/cxI6TBs0xaa"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/cxI6TBs0xaa&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Video direct link if you can't see it in the player:
&lt;a class="ext-link" href="https://cldup.com/GcWiYceo7x.mp4"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cldup.com/GcWiYceo7x.mp4&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
In the video, I'm just opening two "popup" modal dialogs used in WordPress. When the modal dialogs open, NVDA announces "Alert" and stops. Worth reminding &lt;code&gt;wp.a11y.speak()&lt;/code&gt; uses two live regions that are injected in the DOM, the second one has an ARIA &lt;code&gt;role="alert"&lt;/code&gt; and an &lt;code&gt;aria-live="assertive"&lt;/code&gt; ARIA property. Worth also noting:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;seems it happens only with Firefox + NVDA
&lt;/li&gt;&lt;li&gt;tested with Internet Explorer 11 and NVDA and couldn't reproduce
&lt;/li&gt;&lt;li&gt;tested with Internet Explorer 11 and JAWS and couldn't reproduce
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The good news: IMHO this is not a WordPress bug. As far as I know, the specification says that &lt;code&gt;role=alert&lt;/code&gt; should be processed like an assertive live region, that means screen readers should monitor changes in the content of the live region. No content change happens here, so nothing should be announced.
&lt;/p&gt;
&lt;p&gt;
The bad news: looks like screen reader support for live regions is inconsistent.
&lt;/p&gt;
&lt;p&gt;
Turns out the CSS &lt;code&gt;overflow: hidden&lt;/code&gt; set on the body when opening modal dialogs (and also in the Customizer) triggers this behavior. My only guess is that Firefox rebuilds something in the accessibility tree when the body gets an overflow other than "visible" and NVDA announces the live region even if there's no change in the content.
&lt;/p&gt;
&lt;p&gt;
It would be great to hear the experts thoughts and recommendations, will try to ask around. Also, prepared two tests on Codepen, the first one tries to reproduce what happens in WordPress:
&lt;a class="ext-link" href="http://s.codepen.io/afercia/debug/mPRKLa"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://s.codepen.io/afercia/debug/mPRKLa&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
the second one is a very simplified case, all that it does is toggling overflow with different values on the body and also on a DIV that contains an assertive live region:
&lt;a class="ext-link" href="http://s.codepen.io/afercia/debug/zqZyKe"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://s.codepen.io/afercia/debug/zqZyKe&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Would be great to find a workaround to improve the users experience, even if maybe this is something that should be reported upstream. I'd like to collect some feedback and then perhaps open a ticket upstream.
Any thoughts more than welcome :)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #31792 (register_uninstall_hook causes large #s of unnecessary updates to ...) updated</title>
      
        <dc:creator>jeichorn</dc:creator>

      <pubDate>Mon, 21 Mar 2016 22:35:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31792#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31792#comment:14/1458599714209245</guid>
      <description>&lt;p&gt;
So it turns out there are a bunch of entries like that in the array, but they are all from plugins that are no longer installed.
&lt;/p&gt;
&lt;p&gt;
But it seems that just sitting around is enough to cause the problem.
&lt;/p&gt;
&lt;p&gt;
So i guess the correct fix is too cleanup the uninstall_plugins option.  Is that the sort of cleanup thats reasonable to do as part of the upgrade process?  Or something that is best handled outside of wordpress?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35857 (Add QUnit tests for Customizer preview, including Selective Refresh) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Mon, 21 Mar 2016 22:31:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35857#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35857#comment:10/1458599480534746</guid>
      <description>&lt;p&gt;
Fine with this riding, as it's only a ticket for tests, and they're not bounded by RC.
Better testing for new features is always good.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35571 (Update TinyMCE and jQuery UI button styles) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Mon, 21 Mar 2016 22:25:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35571#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35571#comment:14/1458599117146301</guid>
      <description>&lt;p&gt;
+1
&lt;/p&gt;
&lt;p&gt;
Thanks! :D
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34851 (Flex Sizes In WP_Customize_Cropped_Image_Control Not Working) updated</title>
      
        <dc:creator>coreymckrill4ttf</dc:creator>

      <pubDate>Mon, 21 Mar 2016 22:13:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34851#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34851#comment:7/1458598396315912</guid>
      <description>&lt;p&gt;
@westonruter works for me!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #27355,​35855 batch updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 21 Mar 2016 21:58:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=27355%2C35855</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=27355%2C35855/1458597484361458</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37040" title="Customize: Require opt-in for selective refresh of widgets.
* ..."&gt;37040&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Customize: Require opt-in for selective refresh of widgets.&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Introduces &lt;code&gt;customize-selective-refresh-widgets&lt;/code&gt; theme support feature and adds to themes.
&lt;/li&gt;&lt;li&gt;Introduces &lt;code&gt;customize_selective_refresh&lt;/code&gt; arg for &lt;code&gt;WP_Widget::$widget_options&lt;/code&gt; and adds to all core widgets.
&lt;/li&gt;&lt;li&gt;Remove &lt;code&gt;selective_refresh&lt;/code&gt; from being a component that can be removed via &lt;code&gt;customize_loaded_components&lt;/code&gt; filter.
&lt;/li&gt;&lt;li&gt;Add &lt;code&gt;WP_Customize_Widgets::get_selective_refreshable_widgets()&lt;/code&gt; and &lt;code&gt;WP_Customize_Widgets::is_widget_selective_refreshable()&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Fix default &lt;code&gt;selector&lt;/code&gt; for &lt;code&gt;Partial&lt;/code&gt; instances.
&lt;/li&gt;&lt;li&gt;Implement and improve Masronry sidebar refresh logic in Twenty Thirteen and Twenty Fourteen, including preservation of initial widget position after refresh.
&lt;/li&gt;&lt;li&gt;Re-initialize ME.js when refreshing &lt;code&gt;Twenty_Fourteen_Ephemera_Widget&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27355" title="#27355: task (blessed): Customizer: Add framework for selective refresh (partial preview refreshes) (closed: fixed)"&gt;#27355&lt;/a&gt;.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35855" title="#35855: task (blessed): Let selective refresh component be required but be opt-in for ... (closed: fixed)"&gt;#35855&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [37040]: Customize: Require opt-in for selective refresh of widgets.  * ...</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 21 Mar 2016 21:58:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37040</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37040/1458597482339446</guid>
      <description>&lt;p&gt;
Customize: Require opt-in for selective refresh of widgets.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Introduces &lt;code&gt;customize-selective-refresh-widgets&lt;/code&gt; theme support feature and adds to themes.
&lt;/li&gt;&lt;li&gt;Introduces &lt;code&gt;customize_selective_refresh&lt;/code&gt; arg for &lt;code&gt;WP_Widget::$widget_options&lt;/code&gt; and adds to all core widgets.
&lt;/li&gt;&lt;li&gt;Remove &lt;code&gt;selective_refresh&lt;/code&gt; from being a component that can be removed via &lt;code&gt;customize_loaded_components&lt;/code&gt; filter.
&lt;/li&gt;&lt;li&gt;Add &lt;code&gt;WP_Customize_Widgets::get_selective_refreshable_widgets()&lt;/code&gt; and &lt;code&gt;WP_Customize_Widgets::is_widget_selective_refreshable()&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Fix default &lt;code&gt;selector&lt;/code&gt; for &lt;code&gt;Partial&lt;/code&gt; instances.
&lt;/li&gt;&lt;li&gt;Implement and improve Masronry sidebar refresh logic in Twenty Thirteen and Twenty Fourteen, including preservation of initial widget position after refresh.
&lt;/li&gt;&lt;li&gt;Re-initialize ME.js when refreshing &lt;code&gt;Twenty_Fourteen_Ephemera_Widget&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27355" title="#27355: task (blessed): Customizer: Add framework for selective refresh (partial preview refreshes) (closed: fixed)"&gt;#27355&lt;/a&gt;.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35855" title="#35855: task (blessed): Let selective refresh component be required but be opt-in for ... (closed: fixed)"&gt;#35855&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #34870 (dbDelta Not Specifying Key Length Duplicate Indexes) updated</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Mon, 21 Mar 2016 21:32:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34870#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34870#comment:10/1458595923669054</guid>
      <description>&lt;p&gt;
Oh cool. So what you did sounds good to me
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35571 (Update TinyMCE and jQuery UI button styles) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Mon, 21 Mar 2016 21:16:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35571#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35571#comment:13/1458595018192774</guid>
      <description>&lt;p&gt;
Sure, if it's okay, will do this tomorrow morning (Europe).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>wordpress_bug.png attached to Ticket #36288</title>
      
        <dc:creator>georgemou</dc:creator>

      <pubDate>Mon, 21 Mar 2016 20:21:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36288/wordpress_bug.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36288/wordpress_bug.png/1458591667948789</guid>
      <description>&lt;p&gt;
Photo of what PHP error messages appear
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36288 (Bug Found when you update plugins...) created</title>
      
        <dc:creator>georgemou</dc:creator>

      <pubDate>Mon, 21 Mar 2016 20:20:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36288</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36288/1458591604286692</guid>
      <description>&lt;p&gt;
If you leave the checkbox(s) when you go to update a plugin php errors appear and a success message appears but no plugins where updated...
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36287 (Password strength meter unreliable) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 21 Mar 2016 20:19:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36287#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36287#comment:1/1458591590308365</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @n13design, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36287" title="#36287: defect (bug): Password strength meter unreliable (closed: wontfix)"&gt;n13design&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is there a way to adjust the settings for the password strength?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That would somewhat defeat the entire purpose if what constituted "strong" could be altered. A weak password is still weak even if you change the UI so it tells you it's strong. A seven character password is not considered strong due to its short length.
&lt;/p&gt;
&lt;p&gt;
Note that WordPress' password strength meter uses &lt;a class="ext-link" href="https://github.com/dropbox/zxcvbn"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the zxcvbn library&lt;/a&gt; from Dropbox, which is well trusted. You may want to take a read through &lt;a class="ext-link" href="https://blogs.dropbox.com/tech/2012/04/zxcvbn-realistic-password-strength-estimation/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the announcement post for zxcvbn&lt;/a&gt; for more details.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36286 (Create usernames with dots) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 21 Mar 2016 19:55:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36286#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36286#comment:1/1458590136780389</guid>
      <description>&lt;p&gt;
Duplicate of &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/17904" title="#17904: defect (bug): Multisite has more restrictions on user login character set (assigned)"&gt;#17904&lt;/a&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36287 (Password strength meter unreliable) created</title>
      
        <dc:creator>n13design</dc:creator>

      <pubDate>Mon, 21 Mar 2016 19:49:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36287</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36287/1458589790704026</guid>
      <description>&lt;p&gt;
I'm using the WooCommerce plugin.  I reached out the the plugin developer and they said they use WordPress's meter for password strength.  &lt;a class="ext-link" href="https://wordpress.org/support/topic/password-strength-not-working"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/password-strength-not-working&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Following the password hints I've found it difficult to meet the medium strength password. I've not been able to get a 7 character password to pass. Sometimes the meter says the password is medium or strong and then after making the password longer it says it's weak.
&lt;/p&gt;
&lt;p&gt;
One example of a password that was labeled weak is I used a random string of three letters with the first capitalized. Then the @ symbol. Followed by 3 numbers and an exclamation. According to the password tips this should be approved. In a password I had a string of three numbers and for some reason 194 was considered weak but 195 was medium. Then certain random strings of letters weren't approved either.  I'm not seeing why these random entries are blacklisted.
&lt;/p&gt;
&lt;p&gt;
Is there a way to adjust the settings for the password strength?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #17239 (create username with dots) updated</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Mon, 21 Mar 2016 19:35:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17239#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17239#comment:7/1458588948607378</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17239#comment:4" title="Comment 4"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In a later release we can drop the dot stripping.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I've opened &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36286" title="#36286: enhancement: Create usernames with dots (closed: duplicate)"&gt;#36286&lt;/a&gt; for this
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36285 (Inconsistency between the filters that can be used to override the ...) updated</title>
      
        <dc:creator>gnotaras</dc:creator>

      <pubDate>Mon, 21 Mar 2016 19:14:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36285#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36285#comment:2/1458587694917922</guid>
      <description>&lt;p&gt;
Another point that I think is worth mentioning in this ticket is that the final HTML code of the &lt;code&gt;caption&lt;/code&gt; shortcode is not filterable, while the final HTML code of the &lt;code&gt;video&lt;/code&gt; and &lt;code&gt;audio&lt;/code&gt; shortcodes is. I had filed another ticket (&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36270" title="#36270: enhancement: Allow filtering of the final HTML output of media related shortcodes (new)"&gt;#36270&lt;/a&gt;) about it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36286 (Create usernames with dots) created</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Mon, 21 Mar 2016 18:43:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36286</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36286/1458585837928884</guid>
      <description>&lt;p&gt;
In &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17239" title="#17239: defect (bug): create username with dots (closed: fixed)"&gt;#17239&lt;/a&gt;, @ryan said:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Not allowing dots is a holdover from when the user name and domain were one and the same. That said, for now let's make network/user-new.php use wpmu_validate_user_signup(). In a later release we can drop the dot stripping.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Let's do that now.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36285 (Inconsistency between the filters that can be used to override the ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 21 Mar 2016 18:43:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36285#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36285#comment:1/1458585833759142</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36284 (Video shortcode should exclusively use the 'src' attribute for the ...) updated</title>
      
        <dc:creator>gnotaras</dc:creator>

      <pubDate>Mon, 21 Mar 2016 18:40:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36284#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36284#comment:2/1458585618812182</guid>
      <description>&lt;p&gt;
Yeap, that's right. I'm starting to rethink about it..
&lt;/p&gt;
&lt;p&gt;
BTW, this is also the case on the &lt;code&gt;audio&lt;/code&gt; shortcode.
&lt;/p&gt;
&lt;p&gt;
I think passing the attachment ID to the filtering function would solve many problems.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36284 (Video shortcode should exclusively use the 'src' attribute for the ...) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 21 Mar 2016 18:35:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36284#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36284#comment:1/1458585305919777</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
But how to you want to handle multiple sources for one video?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35571 (Update TinyMCE and jQuery UI button styles) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Mon, 21 Mar 2016 18:24:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35571#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35571#comment:12/1458584687662447</guid>
      <description>&lt;p&gt;
@iseulde @helen: Can you please review this? Wondering if it's still on track to land for 4.5.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35689 (Pagination issue on front page after 4.4.1 update) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Mon, 21 Mar 2016 18:23:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35689#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35689#comment:8/1458584586640218</guid>
      <description>&lt;p&gt;
Should it be assigned to someone else? If so, any suggestions?
&lt;/p&gt;
&lt;p&gt;
Is this something that can be punted from 4.5, or is it a blocker?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36285 (Inconsistency between the filters that can be used to override the ...) created</title>
      
        <dc:creator>gnotaras</dc:creator>

      <pubDate>Mon, 21 Mar 2016 18:15:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36285</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36285/1458584159508090</guid>
      <description>&lt;p&gt;
Currently, in order to override the default output of the &lt;code&gt;caption&lt;/code&gt;, &lt;code&gt;video&lt;/code&gt; and &lt;code&gt;audio&lt;/code&gt; shortcodes, you have to use the following respectively:
&lt;/p&gt;
&lt;pre class="wiki"&gt;
apply_filters( 'img_caption_shortcode', '', $attr, $content );
apply_filters( 'wp_audio_shortcode_override', '', $attr, $content, $instance );
apply_filters( 'wp_video_shortcode_override', '', $attr, $content, $instance );
&lt;/pre&gt;&lt;p&gt;
Imho, there should be some consistency between these regarding the following:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;hook name.
&lt;/li&gt;&lt;li&gt;arguments passed to the filtering function.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Also, it would be very useful if the attachment ID was also passed to the filtering function.
&lt;/p&gt;
&lt;p&gt;
Right now, the attachment ID of images can be obtained from &lt;code&gt;$attr['id']&lt;/code&gt;, which gives &lt;code&gt;attachment_IDNUMBER&lt;/code&gt;, while the ID of video and audio attachments can only be obtained by using the media file URL found in the &lt;code&gt;$attr&lt;/code&gt; array and directly querying the database in order to get the post ID based on the &lt;code&gt;guid&lt;/code&gt; field.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36284 (Video shortcode should exclusively use the 'src' attribute for the ...) created</title>
      
        <dc:creator>gnotaras</dc:creator>

      <pubDate>Mon, 21 Mar 2016 17:52:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36284</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36284/1458582777949266</guid>
      <description>&lt;p&gt;
I notice that when adding videos to the content using the 'Add Media' dialog, the URL of the video is added to an attribute named after the video's extension. For instance:
&lt;/p&gt;
&lt;pre class="wiki"&gt;[video width="480" height="360" mp4="http://example.com/uploads/video.mp4"][/video]
&lt;/pre&gt;&lt;p&gt;
This makes absolutely no sense. The expected would be:
&lt;/p&gt;
&lt;pre class="wiki"&gt;[video width="480" height="360" src="http://example.com/uploads/video.mp4"][/video]
&lt;/pre&gt;&lt;p&gt;
The problem with using an attribute named &lt;code&gt;mp4&lt;/code&gt; is that, if you try to process the $attr array as passed to the &lt;code&gt;wp_video_shortcode_override&lt;/code&gt; filter, things stop making any sense as you have to guess the attribute name based on a URL that is the value of that attribute!
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36262 (Page Restore Autosave Not Working) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Mon, 21 Mar 2016 16:40:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36262#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36262#comment:1/1458578420574203</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@jawad96
&lt;/p&gt;
&lt;p&gt;
Thanks for the bug report. I tested in trunk and was unable to reproduce this bug (I haven't tried 4.4.2)
&lt;/p&gt;
&lt;p&gt;
I created and published a page, then made some changes which were autosaved. I left and revisited the page, followed the 'unsaved changes' warning link and clicked to restore the autosave. My autosaved changes where restored after clicking the 'Restore this Autosave' button.
&lt;/p&gt;
&lt;p&gt;
Can you please try to see if this issue is reproducible with the default theme active and all plugins disabled?
&lt;/p&gt;
&lt;p&gt;
Thanks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35022 (WP allows Unicode 0x00a0 spaces in editor but shortcode parser can't ...) updated</title>
      
        <dc:creator>steevithak</dc:creator>

      <pubDate>Mon, 21 Mar 2016 16:34:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35022#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35022#comment:19/1458578072795679</guid>
      <description>&lt;p&gt;
Sounds good, I like the idea of consolidating the char list in one place as a define. I chose \s because it seemed to cover the most cases in the smallest space. However, in addition to 200B, I found this list of quasi-whitespace Unicode chars that are not recognized \s:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://stackoverflow.com/questions/3469080/match-whitespace-but-not-newlines-perl"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://stackoverflow.com/questions/3469080/match-whitespace-but-not-newlines-perl&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Maybe an alternate/easier way is to consider a shortcode terminator character to be *any* character that's not legal for use in the shortcode name? Maybe something like ^\w+ (or whatever the appropriate list is if not \w)?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36283 (wp-embeds is using the smallest thumbnail image size for regular posts) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 21 Mar 2016 16:29:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36283#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36283#comment:2/1458577750586562</guid>
      <description>&lt;p&gt;
Hey there,
&lt;/p&gt;
&lt;p&gt;
Thanks for your report and welcome to trac! We're already tracking this issue in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36239" title="#36239: defect (bug): wp-embed image size is using the smallest image or it sometimes uses ... (new)"&gt;#36239&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #36239,​36283 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 21 Mar 2016 16:28:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=36239%2C36283</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=36239%2C36283/1458577712729065</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36239" title="#36239: defect (bug): wp-embed image size is using the smallest image or it sometimes uses ... (new)"&gt;#36239&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>wp-embed-displays-very-large-blurry-thumbnail.jpg attached to Ticket #36283</title>
      
        <dc:creator>mbzo2006</dc:creator>

      <pubDate>Mon, 21 Mar 2016 16:09:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36283/wp-embed-displays-very-large-blurry-thumbnail.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36283/wp-embed-displays-very-large-blurry-thumbnail.jpg/1458576573598539</guid>
      <description>&lt;p&gt;
wp-embed displays blurry featured image
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36283 (wp-embeds is using the smallest thumbnail image size for regular posts) created</title>
      
        <dc:creator>mbzo2006</dc:creator>

      <pubDate>Mon, 21 Mar 2016 16:08:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36283</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36283/1458576520528896</guid>
      <description>&lt;p&gt;
Unfortunately, WordPress’s core feature is picking up the post thumbnail size instead of theme’s image size / featured image so the result is a blurry image stretched across the main content area.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #32246 (Fix a variety of phpDoc issues) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Mon, 21 Mar 2016 15:35:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32246#comment:325</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32246#comment:325/1458574516510603</guid>
      <description>&lt;p&gt;
@ramiy: Please create new tickets for specifically-targeted docs fixes. I would say probably a ticket per file would work.
&lt;/p&gt;
&lt;p&gt;
This ticket is sort of a mishmash of stuff we run across now and then, and at 320+ commits/comments and counting, it's not really a great place to upload patches. Loading the page in the browser alone takes a good bit of memory :-)
&lt;/p&gt;
&lt;p&gt;
Let's do separate tickets for targeted fixes by file.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36269 (WordPress 4.4.2 Gallery Ordering) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Mon, 21 Mar 2016 14:52:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36269#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36269#comment:2/1458571933753654</guid>
      <description>&lt;p&gt;
@aj@… can you also tell us your browser and OS version and whether your are using a touch screen computer?
&lt;/p&gt;
&lt;p&gt;
Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36236 (JS error &amp; odd behaviour when attempting to set image as 'site icon') updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Mon, 21 Mar 2016 14:48:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36236#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36236#comment:6/1458571705008916</guid>
      <description>&lt;p&gt;
@davetgreen Can you test against trunk to see if you can reproduce the issue there as well?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36281 (Importer Fails to import menu items in PHP7) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 21 Mar 2016 14:13:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36281#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36281#comment:1/1458569608864626</guid>
      <description>&lt;i&gt;Description&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>class-wp-widget-factory.php.patch attached to Ticket #32246</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Mon, 21 Mar 2016 12:10:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32246/class-wp-widget-factory.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32246/class-wp-widget-factory.php.patch/1458562257933416</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21602 (redirect_canonical can lead to infinite loop on index navigation if ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 21 Mar 2016 12:08:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21602#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21602#comment:28/1458562092082724</guid>
      <description>&lt;p&gt;
I'm thinking &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36280" title="Canonical / Query: Restore the `is_404()` check in ..."&gt;[36280]&lt;/a&gt; should probably be applied to trunk, and something (possibly &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/21602/21602.2.diff" title="Attachment '21602.2.diff' in Ticket #21602"&gt;21602.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/21602/21602.2.diff" title="Download"&gt;​&lt;/a&gt;) done first thing in 4.6 to allow for soak time.
&lt;/p&gt;
&lt;p&gt;
The problem is that these edgecase environments aren't often using non-stable releases, so it's hard to catch early on.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>class-wp-widget.php.patch attached to Ticket #32246</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Mon, 21 Mar 2016 12:06:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32246/class-wp-widget.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32246/class-wp-widget.php.patch/1458562012929099</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>class-wp-oembed-controller.php.patch attached to Ticket #32246</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Mon, 21 Mar 2016 11:56:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32246/class-wp-oembed-controller.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32246/class-wp-oembed-controller.php.patch/1458561386207345</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>class-oembed.php.patch attached to Ticket #32246</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Mon, 21 Mar 2016 11:41:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32246/class-oembed.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32246/class-oembed.php.patch/1458560477544487</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #34870 (dbDelta Not Specifying Key Length Duplicate Indexes) updated</title>
      
        <dc:creator>mikejolley</dc:creator>

      <pubDate>Mon, 21 Mar 2016 10:40:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34870#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34870#comment:9/1458556844059312</guid>
      <description>&lt;p&gt;
@mnelson4 thats what I did in my patch above.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #10823,​36282 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 21 Mar 2016 09:34:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=10823%2C36282</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=10823%2C36282/1458552871173449</guid>
      <description>duplicate: &lt;p&gt;
Hi @fbgm, welcome to Trac!
&lt;/p&gt;
&lt;p&gt;
Thanks for the report, we're already tracking this issue in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/10823" title="#10823: defect (bug): Bad handling of ampersand in post titles (new)"&gt;#10823&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #32246 (Fix a variety of phpDoc issues) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Mon, 21 Mar 2016 09:21:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32246#comment:324</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32246#comment:324/1458552090311049</guid>
      <description>&lt;p&gt;
New docs for &lt;code&gt;WP_Feed_Cache&lt;/code&gt;, &lt;code&gt;WP_Feed_Cache_Transient&lt;/code&gt;, &lt;code&gt;WP_SimplePie_File&lt;/code&gt;, &lt;code&gt;WP_SimplePie_Sanitize_KSES&lt;/code&gt; classes, in &lt;strong&gt;wp-includes/class-feed.php&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;
Has patch. Needs review (@DrewAPicture).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34694 (Facilitate automated testing in context of pull requests and diffs) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 21 Mar 2016 09:17:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34694#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34694#comment:10/1458551869913652</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by ocean90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1458551867001179"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>class-feed.php.patch attached to Ticket #32246</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Mon, 21 Mar 2016 09:14:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32246/class-feed.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32246/class-feed.php.patch/1458551665931051</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36280 (HTTP API (Streams backend) secured proxy tunnels and chunked and zlib ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 21 Mar 2016 08:30:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36280#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36280#comment:3/1458549048234343</guid>
      <description>&lt;p&gt;
Requests is the work of @rmccue mostly and while it may seem like it's taken inspiration from WP_HTTP, it's not based on it, licensing and all :)
&lt;/p&gt;
&lt;p&gt;
I'm myself extremely hesitant to tell anyone to write new code for the WP_HTTP internals, as realistically I don't think we should continue working on it. It was once needed when the options were using cURL directly or &lt;code&gt;fsockopen()&lt;/code&gt; but today we have the opportunity to instead leverage a library which other applications also do, pushing changes upstream where needed, improving it for everyone.
I don't think Requests supports what you want to do here yet, but I think it would be a far better place for the effort to be directed.
&lt;/p&gt;
&lt;p&gt;
I don't know when, or if, Requests will be switched in for WP_HTTP, we've talked about it for a long(ish) time.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35855 (Let selective refresh component be required but be opt-in for ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 21 Mar 2016 07:55:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35855#comment:54</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35855#comment:54/1458546902990641</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by westonruter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1458546900000140"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35855 (Let selective refresh component be required but be opt-in for ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 21 Mar 2016 07:54:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35855#comment:53</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35855#comment:53/1458546873000586</guid>
      <description>&lt;p&gt;
&lt;em&gt;Drafted commit message:&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
Customize: Require opt-in for selective refresh of widgets.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Introduces &lt;code&gt;customize-selective-refresh-widgets&lt;/code&gt; theme support feature and adds to themes.
&lt;/li&gt;&lt;li&gt;Introduces &lt;code&gt;customize_selective_refresh&lt;/code&gt; arg for &lt;code&gt;WP_Widget::$widget_options&lt;/code&gt; and adds to all core widgets.
&lt;/li&gt;&lt;li&gt;Remove &lt;code&gt;selective_refresh&lt;/code&gt; from being a component that can be removed via &lt;code&gt;customize_loaded_components&lt;/code&gt; filter.
&lt;/li&gt;&lt;li&gt;Add &lt;code&gt;WP_Customize_Widgets::get_selective_refreshable_widgets()&lt;/code&gt; and &lt;code&gt;WP_Customize_Widgets::is_widget_selective_refreshable()&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Fix default &lt;code&gt;selector&lt;/code&gt; for &lt;code&gt;Partial&lt;/code&gt; instances.
&lt;/li&gt;&lt;li&gt;Implement and improve Masronry sidebar refresh logic in Twenty Thirteen and Twenty Fourteen, including preservation of initial widget position after refresh.
&lt;/li&gt;&lt;li&gt;Re-initialize ME.js when refreshing &lt;code&gt;Twenty_Fourteen_Ephemera_Widget&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27355" title="#27355: task (blessed): Customizer: Add framework for selective refresh (partial preview refreshes) (closed: fixed)"&gt;#27355&lt;/a&gt;.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35855" title="#35855: task (blessed): Let selective refresh component be required but be opt-in for ... (closed: fixed)"&gt;#35855&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35855 (Let selective refresh component be required but be opt-in for ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 21 Mar 2016 07:51:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35855#comment:52</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35855#comment:52/1458546718998631</guid>
      <description>&lt;p&gt;
In testing some more, I was surprised to learn that Twenty Fourteen also has a sidebar that renders widgets with Masonry. What's more is that both Twenty Eleven and Twenty Fourteen also include widgets which needed support. The Twenty Eleven ephemera widget just needed the &lt;code&gt;customize_selective_refresh&lt;/code&gt; flag added to the &lt;code&gt;$widget_options&lt;/code&gt;. The Twenty Fourteen ephemera widget, however, also needed support for re-initializing ME.js for the refreshed partials since they can contain video and audio elements.
&lt;/p&gt;
&lt;p&gt;
Also I realized I was reflowing Masonry incorrectly, and I found how to ensure that a refreshed widget retains the initial position as the previous container it replaces.
&lt;/p&gt;
&lt;p&gt;
See changes in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35855/35855.5.diff" title="Attachment '35855.5.diff' in Ticket #35855"&gt;35855.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35855/35855.5.diff" title="Download"&gt;​&lt;/a&gt; (&lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/compare/2916ef2...36d0bd9"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;diff&lt;/a&gt;), and &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/144/files?w=1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>30000.diff attached to Ticket #30000</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Mon, 21 Mar 2016 07:47:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/30000/30000.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/30000/30000.diff/1458546436080527</guid>
      <description>&lt;p&gt;
Patch from &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/pulls/189"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/pulls/189&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>35855.5.diff attached to Ticket #35855</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 21 Mar 2016 07:46:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35855/35855.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35855/35855.5.diff/1458546397548722</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/compare/2916ef2...36d0bd9"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/compare/2916ef2...36d0bd9&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35960 (Remove excess padding from .nav-tab-wrapper) updated</title>
      
        <dc:creator>WPCharitable</dc:creator>

      <pubDate>Mon, 21 Mar 2016 07:08:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35960#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35960#comment:3/1458544133297977</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35855 (Let selective refresh component be required but be opt-in for ...) updated</title>
      
        <dc:creator>ryankienstra</dc:creator>

      <pubDate>Mon, 21 Mar 2016 05:04:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35855#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35855#comment:51/1458536640014677</guid>
      <description>&lt;p&gt;
&lt;strong&gt;Tested With 3 Themes&lt;/strong&gt;
&lt;em&gt;Theme-Level Opt-In Works As Expected&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
The opt-in of the "Selective Refresh" feature works as @westonruter described it. The WordPress core themes now have an opt-in function &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/144/commits#diff-cb8ecc93525ecf9347f507fb3ccb0926R231"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;call&lt;/a&gt; for "Selective Refresh." And all of the core widgets refresh properly with this:
&lt;/p&gt;
&lt;p&gt;
"Archives," "Calendar," "Categories," "Custom Menu," "Meta," "Pages," "Recent Comments," "Recent Posts," "RSS," "Search," "Tag Cloud," and "Text."
&lt;/p&gt;
&lt;p&gt;
While refreshing, they quickly became lighter, and update with the new content. They have no effect on the surrounding widgets or content. The rest of the page is exactly the same.
&lt;/p&gt;
&lt;p&gt;
When commenting out the theme-level &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/144/files#diff-70824c0c03ec36b59fb60852857c75a0R118"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;opt-in code&lt;/a&gt;, "Selective Refresh" was disabled. The widgets reloaded as before, with a full-page refresh.
&lt;/p&gt;
&lt;p&gt;
I also tested disabling the widget-level opt-in for core widgets. For example, on in &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/144/files#diff-fcee08630028b6773a4da7070ab659baR29"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;class-wp-widget-archives.php&lt;/a&gt;, I commented out &lt;code&gt;'customize_selective_refresh' =&amp;gt; true,&lt;/code&gt;. This had the intended effect of refreshing the entire page on an "Archives" widget change. But the rest of the widgets still refreshed the same as before.
&lt;/p&gt;
&lt;p&gt;
And the same results occurred for this test on the &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/144/files#diff-3c74d6b3d344f435fbc486da938aa7cfR29"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;wp-widget-pages.php&lt;/a&gt; function with the theme &lt;a class="ext-link" href="https://wordpress.org/themes/twentysixteen/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Twenty Sixteen&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I tested this with @westonruter's commits to &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/144/commits"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress Core&lt;/a&gt; and &lt;a class="ext-link" href="https://github.com/xwp/twentysixteen/tree/trac-35855"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Twenty Sixteen&lt;/a&gt;. Using these commits, I tested the themes &lt;a class="ext-link" href="https://wordpress.org/themes/twentyfourteen/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Twenty Fourteen&lt;/a&gt;, &lt;a class="ext-link" href="https://wordpress.org/themes/twentyfifteen/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Twenty Fifteen&lt;/a&gt;, and &lt;a class="ext-link" href="https://wordpress.org/themes/twentysixteen/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Twenty Sixteen&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36280 (HTTP API (Streams backend) secured proxy tunnels and chunked and zlib ...) updated</title>
      
        <dc:creator>bobbywalters</dc:creator>

      <pubDate>Mon, 21 Mar 2016 04:12:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36280#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36280#comment:2/1458533549367835</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36280#comment:1" title="Comment 1"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Two initial things that stand out:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Using the PHP builtin stream filter 'dechunk'
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's available in PHP 5.3 and later, as we're still supporting PHP 5.2 that should have a feature check first.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Any content encoding handled by zlib is now done with the stream filter 'zlib.inflate' to handle on the fly decompression.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not always available, and once again needs to have a capability check on it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Adding in feature detection for the &lt;code&gt;'dechunk'&lt;/code&gt; and &lt;code&gt;'zlib.inflate'&lt;/code&gt; stream filters, creating custom filters, and registering those instead appears possible in order to maintain support with PHP 5.2. It seems many of the &lt;code&gt;stream_*&lt;/code&gt; functions were added in PHP 5. &lt;code&gt;stream_notification_callback&lt;/code&gt; was added in 5.2 but that should be allowed and would enable a path to non-blocking IO and multiple simultaneous requests.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Theoretically servers shouldn't respond with Chunked encoding if we don't ask for it, nor should they supply compressed content we haven't specified we can understand, so both of these shouldn't be an issue.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, I was testing requests with both HTTP/1.0 and HTTP/1.1 and other permutations with Accept-Encoding. The servers I was using in my testing all sent the correct data in the proper format as you mentioned most will.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Note that &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33055" title="#33055: task (blessed): Support Parallel HTTP Requests in WP_Http, et al (closed: fixed)"&gt;#33055&lt;/a&gt; is a proposal (which I believe most of us are behind) to deprecate and remove WP_HTTP in preference for a  more fleshed out library.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is the first time I've come across the Requests library. I quickly read over the code in GitHub so it's very possible I'm not seeing everything. It looks like a lot of the same code currently in WP_HTTP when going down the "fsockopen" (stream) transport path. The proxy, chunked, and decode handling all look very similar and would be missing the benefits of the patch in this ticket. Not to say Requests couldn't be updated with these proposed changes though.
&lt;/p&gt;
&lt;p&gt;
Since Guzzle was brought up, I'm not sure it handles tunneled proxy connections either. I haven't spent any time looking at their code but a couple of grep's aren't turning much up. So it's entirely possible I'm missing the HTTP CONNECT call for encrypted or open proxy connection tunneling. But, ultimately, like the other ticket discussed, getting Guzzle to run on PHP 5.2 would be a hefty task.
&lt;/p&gt;
&lt;p&gt;
If you're open to it, I'd like to take a crack at adding in the 5.2 compatibility to these patched changes (php_user_filter seems straight forward). I think the streams API can be leveraged and still maintain PHP 5.2 compatibility. Parallel/Multiple requests and the filter/hook cleanup would follow. This code should be useful no matter what given Requests has roots from WP_HTTP.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36282 (Title text between &amp; and ; removed from post_name in database) created</title>
      
        <dc:creator>fbgm</dc:creator>

      <pubDate>Mon, 21 Mar 2016 03:24:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36282</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36282/1458530688374477</guid>
      <description>&lt;p&gt;
If the title contains text between an ampersand (&amp;amp;) sign and a semicolon (;) that text is removed from the post_name in the database.
&lt;/p&gt;
&lt;p&gt;
Title &lt;strong&gt;text1 &amp;amp; text2 ; text3&lt;/strong&gt;
post_name =&amp;gt; &lt;strong&gt;text1-text3&lt;/strong&gt; expected &lt;strong&gt;text1-text2-text3&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://www.youtube.com/watch?v=zXsBytL4yOs"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.youtube.com/watch?v=zXsBytL4yOs&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36281 (Importer Fails to import menu items in PHP7) created</title>
      
        <dc:creator>mightyturtle</dc:creator>

      <pubDate>Mon, 21 Mar 2016 03:09:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36281</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36281/1458529744719738</guid>
      <description>&lt;p&gt;
The WordPress Importer plugin fails to import menu items at all with PHP 7 (any WP version). It's a pretty quick fix, though.
&lt;/p&gt;
&lt;p&gt;
I noticed this as part of writing a fix for the importer on wp-cli:
&lt;a class="ext-link" href="https://github.com/wp-cli/wp-cli/pull/2545#issuecomment-199026539"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/wp-cli/wp-cli/pull/2545#issuecomment-199026539&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
But it was noticed by others, a couple months ago, and a fix provided:
&lt;a class="ext-link" href="https://wordpress.org/support/topic/importer-fails-to-import-menu-items-in-php7?replies=6"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/importer-fails-to-import-menu-items-in-php7?replies=6&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Since PHP7 has now been officially released for a few months, we're going to see more and more PHP7 installs pop up.
&lt;/p&gt;
&lt;p&gt;
To sum it up:
wordpress-importer.php on line 798
Change:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$$meta['key'] = $meta['value'];
&lt;/pre&gt;&lt;p&gt;
To:
&lt;/p&gt;
&lt;pre class="wiki"&gt;${$meta['key']} = $meta['value'];
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #34945 (HTTPS website with HTTP images) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 21 Mar 2016 02:45:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34945#comment:63</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34945#comment:63/1458528314927743</guid>
      <description>fixed</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #35874 (XMLRPC: Draft posts are published immediately when changed to ...) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Mon, 21 Mar 2016 01:27:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35874#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35874#comment:29/1458523658111835</guid>
      <description>&lt;p&gt;
@rachelbaker Based on my reading of the ticket, unit tests, et al, &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35874/35874.2.diff" title="Attachment '35874.2.diff' in Ticket #35874"&gt;35874.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35874/35874.2.diff" title="Download"&gt;​&lt;/a&gt; attempts to give a simpler, more direct explanation of what's happening. Let me know if I got that wrong.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35874.2.diff attached to Ticket #35874</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Mon, 21 Mar 2016 01:25:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35874/35874.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35874/35874.2.diff/1458523542221321</guid>
      <description>&lt;p&gt;
Improved inline comments
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35855 (Let selective refresh component be required but be opt-in for ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 21 Mar 2016 01:23:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35855#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35855#comment:50/1458523418470100</guid>
      <description>&lt;p&gt;
If anyone could help test the patch in the next few hours, I'd be grateful. I want to commit it this evening (PDT).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36280 (HTTP API (Streams backend) secured proxy tunnels and chunked and zlib ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 21 Mar 2016 01:08:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36280#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36280#comment:1/1458522481833642</guid>
      <description>&lt;p&gt;
Two initial things that stand out:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Using the PHP builtin stream filter 'dechunk'
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's available in PHP 5.3 and later, as we're still supporting PHP 5.2 that should have a feature check first.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Any content encoding handled by zlib is now done with the stream filter 'zlib.inflate' to handle on the fly decompression.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not always available, and once again needs to have a capability check on it.
&lt;/p&gt;
&lt;p&gt;
Theoretically servers shouldn't respond with Chunked encoding if we don't ask for it, nor should they supply compressed content we haven't specified we can understand, so both of these shouldn't be an issue.
&lt;/p&gt;
&lt;p&gt;
Note that &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33055" title="#33055: task (blessed): Support Parallel HTTP Requests in WP_Http, et al (closed: fixed)"&gt;#33055&lt;/a&gt; is a proposal (which I believe most of us are behind) to deprecate and remove WP_HTTP in preference for a  more fleshed out library.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32246 (Fix a variety of phpDoc issues) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Mon, 21 Mar 2016 00:57:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32246#comment:323</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32246#comment:323/1458521866043298</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37039" title="Docs: Change the 'HTTPS' column header to 'Supports HTTPS' in the ..."&gt;37039&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Change the 'HTTPS' column header to 'Supports HTTPS' in the markdown providers tables in the hook doc for the &lt;code&gt;oembed_providers&lt;/code&gt; filter.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32246" title="#32246: task (blessed): Fix a variety of phpDoc issues (closed: fixed)"&gt;#32246&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37039]: Docs: Change the 'HTTPS' column header to 'Supports HTTPS' in the ...</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Mon, 21 Mar 2016 00:57:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37039</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37039/1458521865430081</guid>
      <description>&lt;p&gt;
Docs: Change the 'HTTPS' column header to 'Supports HTTPS' in the markdown providers tables in the hook doc for the &lt;code&gt;oembed_providers&lt;/code&gt; filter.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32246" title="#32246: task (blessed): Fix a variety of phpDoc issues (closed: fixed)"&gt;#32246&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36279 (Add an "add new menu" button to the menu locations section in the ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 21 Mar 2016 00:57:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36279#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36279#comment:1/1458521862121087</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Would the “Add Menu” button appear next to each location so that upon creating the new menu it would be assigned to that location? Or should there be just one button appearing after all of the location dropdowns for creating a new menu? Or should the nav menu locations section just be hidden until a nav menu is created? This gets into some of the UX problems with how menus are managed and how it's not intuitive for novices how theme locations relate to nav menus.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #35986,​36197 batch updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Mon, 21 Mar 2016 00:39:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=35986%2C36197</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=35986%2C36197/1458520785105460</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37038" title="Docs: Add Twitter timelines and moments to the table in the hook doc ..."&gt;37038&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Add Twitter timelines and moments to the table in the hook doc for the &lt;code&gt;oembed_provders&lt;/code&gt; filter, introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36954" title="oEmbed: Extend the provider list to support moments and timelines from ..."&gt;[36954]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36197" title="#36197: defect (bug): Update Twitter oEmbed URL (closed: fixed)"&gt;#36197&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35986" title="#35986: task (blessed): 4.5 Docs Audit (closed: fixed)"&gt;#35986&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [37038]: Docs: Add Twitter timelines and moments to the table in the hook doc ...</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Mon, 21 Mar 2016 00:39:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37038</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37038/1458520784265213</guid>
      <description>&lt;p&gt;
Docs: Add Twitter timelines and moments to the table in the hook doc for the &lt;code&gt;oembed_provders&lt;/code&gt; filter, introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36954" title="oEmbed: Extend the provider list to support moments and timelines from ..."&gt;[36954]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36197" title="#36197: defect (bug): Update Twitter oEmbed URL (closed: fixed)"&gt;#36197&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35986" title="#35986: task (blessed): 4.5 Docs Audit (closed: fixed)"&gt;#35986&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>36280.patch attached to Ticket #36280</title>
      
        <dc:creator>bobbywalters</dc:creator>

      <pubDate>Mon, 21 Mar 2016 00:30:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36280/36280.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36280/36280.patch/1458520202117313</guid>
      <description>&lt;p&gt;
First patch.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36280 (HTTP API (Streams backend) secured proxy tunnels and chunked and zlib ...) created</title>
      
        <dc:creator>bobbywalters</dc:creator>

      <pubDate>Mon, 21 Mar 2016 00:26:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36280</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36280/1458520006922035</guid>
      <description>&lt;p&gt;
The purpose of this ticket is to address concerns within the WP_Http_Streams class (wp-includes/class-wp-http-streams.php). And supply a patch to correct the defects, improve performance, and extend the available features as noted below.
&lt;/p&gt;
&lt;h2 id="ProxyRelated"&gt;Proxy Related&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;HTTPS requests through a proxy now create a properly secured tunnel with certificate validation possible. No longer have to use the Curl backend to properly tunnel HTTPS requests through the WP Remote API. No more &lt;code&gt;501 Not Implemented&lt;/code&gt; errors.
&lt;/li&gt;&lt;li&gt;Created filter &lt;code&gt;'proxy_tunnel'&lt;/code&gt; to alter which connections may be tunneled through a proxy using HTTP CONNECT.
&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="SSLTLSRelated"&gt;SSL/TLS Related&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Added filter &lt;code&gt;'stream_crypto_method'&lt;/code&gt; to decide which cryptography (crypto) method is used for handshake. Default is &lt;code&gt;STREAM_CRYPTO_METHOD_TLS_CLIENT&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Added &lt;code&gt;'peer_name'&lt;/code&gt; &lt;code&gt;'ssl'&lt;/code&gt; context parameter to enable peer name validation even over tunneled proxy connections.
&lt;/li&gt;&lt;li&gt;Added &lt;code&gt;'verify_peer_name'&lt;/code&gt; which is set based on &lt;code&gt;$ssl_verify&lt;/code&gt; in the event verification should be disabled.
&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="Transfer-Encoding:chunked"&gt;Transfer-Encoding: chunked&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Using the PHP builtin stream filter &lt;code&gt;'dechunk'&lt;/code&gt; to process response bodies transferred in a chunked fashion.
&lt;/li&gt;&lt;li&gt;Much faster streaming capability avoids having to read in the entire response and then perform logic to distinguish chunks (ie &lt;code&gt;WP_Http::chunkTransferDecode()&lt;/code&gt; is not used).
&lt;/li&gt;&lt;li&gt;The stream filter also corrects some of the handling found in &lt;code&gt;WP_Http::chunkTransferDecode()&lt;/code&gt; that prevented &lt;a class="ext-link" href="https://www.google.com"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.google.com&lt;/a&gt; from correctly being read. As a side note: I'm not sure what was throwing chunkTransferDecode off when reading &lt;a class="ext-link" href="https://www.google.com"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.google.com&lt;/a&gt; but it may have been the multibyte gzip data along with the 0 padded chunk sizes at the beginning. I didn't pursue trying to alter chunkTransferDecode since the &lt;code&gt;'dechunk'&lt;/code&gt; stream filter preforms the reads correctly.
&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="Content-Encoding:deflategzip"&gt;Content-Encoding: (deflate | gzip)&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Any content encoding handled by zlib is now done with the stream filter &lt;code&gt;'zlib.inflate'&lt;/code&gt; to handle on the fly decompression.
&lt;/li&gt;&lt;li&gt;This provides performance and resource utilization improvements especially when the &lt;code&gt;'limit_response_size'&lt;/code&gt; option is set.
&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="General"&gt;General&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;All options (&lt;code&gt;'stream'&lt;/code&gt;, &lt;code&gt;'decompress'&lt;/code&gt;, &lt;code&gt;'limit_response_size'&lt;/code&gt;, etc) are still honored.
&lt;/li&gt;&lt;li&gt;Reading responses with none, one, or both of &lt;code&gt;'Transfer-Encoding'&lt;/code&gt; and &lt;code&gt;'Content-Encoding'&lt;/code&gt; work on the fly and streaming.
&lt;/li&gt;&lt;li&gt;Both HTTP and HTTPS connections with and without a proxy involved work now.
&lt;/li&gt;&lt;li&gt;Redirects continue to work with the improved proxy tunneling even while switching between HTTP to HTTPS. As an example &lt;a class="ext-link" href="http://www.wordpress.org"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.wordpress.org&lt;/a&gt; performs a few redirects to drop the "www" and get over to https.
&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="Testing"&gt;Testing&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;Using a local instance of WordPress with a combination of WP-CLI eval-file scenarios along with clearing out the transients and using the admin console to search, view details, and download plugins.
&lt;/li&gt;&lt;li&gt;The previous bullet with a local Squid instance as setup out of the box Debian Jessie style. A simple Dockerfile was to get Squid running which could be shared. &lt;code&gt;wp-config.php&lt;/code&gt; was modified to define &lt;code&gt;WP_PROXY_HOST&lt;/code&gt; and &lt;code&gt;WP_PROXY_PORT&lt;/code&gt; to use the local Squid instance.
&lt;/li&gt;&lt;li&gt;As of right now I have not run the phpunit tests because I've never attempted to run them in WordPress. However, looking over &lt;a class="ext-link" href="https://develop.svn.wordpress.org/trunk/tests/phpunit/tests/http/base.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://develop.svn.wordpress.org/trunk/tests/phpunit/tests/http/base.php&lt;/a&gt; I don't immediately see anything that would be a problem.
&lt;/li&gt;&lt;li&gt;I could see some additional test cases being useful around HTTP SSL/TLS, chunked, and gzip handling. Then all of that with a proxy in play but I'm not sure how feasible proxy testing is.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I may have skipped over some of the finer points but that should be the majority of the changes and rationale behind them. Thanks in advance for looking over this information and the related code changes.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36279 (Add an "add new menu" button to the menu locations section in the ...) created</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 20 Mar 2016 21:08:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36279</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36279/1458508129180835</guid>
      <description>&lt;p&gt;
When there are no menus, or even if there are menus but a new menu needs to be created to add to a location, the flow from being on the locations section and realizing that a new menu should be created to go back and then add a new menu is awkward. Let's add the ability to add a new menu from the menu locations section directly.
&lt;/p&gt;
&lt;p&gt;
A button that focusing the new menu name control is likely the best approach, although this would still animate back out of the locations section, it still gives the option easier access and better flow.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36255 (Custom Logo: Crop UI) updated</title>
      
        <dc:creator>mor10</dc:creator>

      <pubDate>Sun, 20 Mar 2016 19:47:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36255#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36255#comment:32/1458503225792590</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36255#comment:31" title="Comment 31"&gt;celloexpressions&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't see much of a reason to also support image sizes other than providing back-compat for themes that have already adjusted in anticipation of 4.5, but I may be missing something.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
IMO this is a non-issue: As the feature is not finalized, any inclusion in an existing theme at this point is experimental. Providing a fallback for in-development experimental features in a finalized product makes no sense.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36272 (Adding media RSS module in wordpress feed) updated</title>
      
        <dc:creator>dingo_bastard</dc:creator>

      <pubDate>Sun, 20 Mar 2016 18:01:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36272#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36272#comment:3/1458496916908069</guid>
      <description>&lt;p&gt;
Oh, I didn't know about the existing ticket. Thanks for the heads up. I know about plugins, this one just seemed like something that should belong to the core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36278 (PHP Notice about use of deprecated - Version 4.5-beta4-37031) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 20 Mar 2016 17:32:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36278#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36278#comment:2/1458495145156488</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36278 (PHP Notice about use of deprecated - Version 4.5-beta4-37031) closed</title>
      
        <dc:creator>sidati</dc:creator>

      <pubDate>Sun, 20 Mar 2016 17:31:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36278#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36278#comment:1/1458495079922155</guid>
      <description>invalid: &lt;p&gt;
Plugin Problem, Sorry :)
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36278 (PHP Notice about use of deprecated - Version 4.5-beta4-37031) created</title>
      
        <dc:creator>sidati</dc:creator>

      <pubDate>Sun, 20 Mar 2016 17:28:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36278</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36278/1458494927073658</guid>
      <description>&lt;p&gt;
Hey There,
I got an notice error
&lt;/p&gt;
&lt;pre class="wiki"&gt;( ! ) Notice: add_object_page is &amp;lt;strong&amp;gt;deprecated&amp;lt;/strong&amp;gt; since version 4.5! Use add_menu_page() instead. in WordPress\wp-includes\functions.php on line 3662
&lt;/pre&gt;&lt;p&gt;
this notice became real issue when submitting forms in the admin screen, it causes :
&lt;/p&gt;
&lt;pre class="wiki"&gt;( ! ) Warning: Cannot modify header information - headers already sent by (output started at \WordPress\wp-includes\functions.php:3662) in WordPress\wp-includes\pluggable.php on line 1171
&lt;/pre&gt;&lt;p&gt;
Hope Fix it soon,
Thank you
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36276 (Refreshed Customizer preview iframe shows before initialized) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 20 Mar 2016 16:49:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36276#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36276#comment:4/1458492548087134</guid>
      <description>&lt;p&gt;
This sounds like it should work in theory. My primary concern would be whether this causes any accessibility issues, although I'm not sure how accessible the preview refreshing (or partial refreshing) is right now anyway.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35855.4.diff attached to Ticket #35855</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 20 Mar 2016 06:40:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35855/35855.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35855/35855.4.diff/1458456012228579</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27762 (Remove whitespace between menu items) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 20 Mar 2016 06:37:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27762#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27762#comment:13/1458455851519923</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Follow-up: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35107" title="#35107: defect (bug): wp_nav_menu outputs tags without line breaks in 4.4, causes strange ... (closed: fixed)"&gt;#35107&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35206" title="#35206: enhancement: Allow theme authors to control white space between menu items (closed: fixed)"&gt;#35206&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25756 (Add a filter to Auto Update debug email) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 20 Mar 2016 06:03:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25756#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25756#comment:6/1458453814328297</guid>
      <description>&lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35855 (Let selective refresh component be required but be opt-in for ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 20 Mar 2016 05:58:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35855#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35855#comment:49/1458453509193222</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by westonruter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1458453506000135"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35855 (Let selective refresh component be required but be opt-in for ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 20 Mar 2016 05:57:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35855#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35855#comment:48/1458453456341105</guid>
      <description>&lt;p&gt;
Based on my &lt;a href="https://core.trac.wordpress.org/ticket/35855#comment:46"&gt;comment above&lt;/a&gt; and the most recent &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1458401841000119"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;conversation on Slack&lt;/a&gt;, I've returned to using a single:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_theme_support( 'customize-selective-refresh-widgets' )
&lt;/pre&gt;&lt;p&gt;
instead of (multiple) call(s) to:
&lt;/p&gt;
&lt;pre class="wiki"&gt;register_sidebar( array( /*...*/ 'customize_selective_refresh' =&amp;gt; true ) )
&lt;/pre&gt;&lt;p&gt;
Widgets will still have the &lt;code&gt;customize_selective_refresh&lt;/code&gt; widget option to specify to indicate support at the widget level.
&lt;/p&gt;
&lt;p&gt;
I've also updated my Twenty Sixteen PR to use the theme support feature: &lt;a class="ext-link" href="https://github.com/WordPress/twentysixteen/pull/430"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/twentysixteen/pull/430&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The hope is that with a critical mass adoption, these supports flags can be added by default so that themes and widgets have to opt-out instead of opt-in. For now, however, there would be a large number of breakages for widgets in the Customizer preview if this is enabled by default.
&lt;/p&gt;
&lt;p&gt;
For patch review, please see diff with whitespace changes suppressed (since as part of this the selective refresh component is no longer included among those which can be filtered off): &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/144/files?w=1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/144/files?w=1&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I hope to commit this on Sunday (PDT) and then on Monday I plan to follow up with a post on Make Core and cross-post on Make Themes to document how theme and widget authors can add support and why they should do so.
&lt;/p&gt;
&lt;p&gt;
@MH-Themes please review the patch and check for compatibility with your code if no support flags are included.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35855.3.diff attached to Ticket #35855</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 20 Mar 2016 05:46:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35855/35855.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35855/35855.3.diff/1458452800472190</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36276 (Refreshed Customizer preview iframe shows before initialized) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 20 Mar 2016 05:20:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36276#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36276#comment:3/1458451201977654</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36276 (Refreshed Customizer preview iframe shows before initialized) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 20 Mar 2016 05:19:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36276#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36276#comment:2/1458451164029612</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by westonruter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1458451162000133"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36277 (4.4.2 using constructor method for WP_Widget deprecated since 4.3.0) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 20 Mar 2016 01:36:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36277#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36277#comment:1/1458437768811255</guid>
      <description>invalid: &lt;p&gt;
The errors you're seeing are not caused by WordPress, rather it's caused by a plugin you're running and theme.
&lt;/p&gt;
&lt;p&gt;
You'll need to update the Yoast SEO premium plugin, or contact them to file a bug report. The notices generated by the theme are only deprecated warnings, which you don't really need to worry about.
&lt;/p&gt;
&lt;p&gt;
For the reference of others, the errors within the originally attached file were:
&lt;/p&gt;
&lt;pre class="wiki"&gt;
Notice: register_sidebar was called incorrectly. No id was set in the
arguments array for the "Why Valence" sidebar. Defaulting to
"sidebar-5". Manually set the id to "sidebar-5" to silence this notice
and keep existing sidebar content. Please see Debugging in WordPress for
more information. (This message was added in version 4.2.0.) in
/srv/www/htdocs/wp-includes/functions.php on line 3792
Notice: The called constructor method for WP_Widget is deprecated since version 4.3.0! Use __construct() instead. in /srv/www/htdocs/wp-includes/functions.php on line 3624
Fatal error: Cannot instantiate abstract class WPSEO_Redirect_Manager in /srv/www/htdocs/wp-content/plugins/wordpress-seo-premium/premium/classes/class-post-slug-watcher.php on line 48
&lt;/pre&gt;&lt;p&gt;
This Trac is for reporting bugs within WordPress itself, and not plugins, as such I'm marking this as invalid.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #25756 (Add a filter to Auto Update debug email) updated</title>
      
        <dc:creator>StanfordGriffith</dc:creator>

      <pubDate>Sun, 20 Mar 2016 00:00:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25756#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25756#comment:5/1458432056443626</guid>
      <description>&lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Since this has been resolved, may I suggest updating the FAQ page with the question on it? &lt;a class="ext-link" href="https://wordpress.org/plugins/automatic-updater/faq/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/automatic-updater/faq/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Thank you.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>