<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>29722.2.patch attached to Ticket #29722</title>
      
        <dc:creator>Fab1en</dc:creator>

      <pubDate>Sun, 21 Sep 2014 23:51:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29722/29722.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29722/29722.2.patch/1411343488712451</guid>
      <description>&lt;p&gt;
Avoid warning when scalar value is passed but decode HTML entities
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>29722.patch attached to Ticket #29722</title>
      
        <dc:creator>Fab1en</dc:creator>

      <pubDate>Sun, 21 Sep 2014 23:33:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29722/29722.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29722/29722.patch/1411342413395188</guid>
      <description>&lt;p&gt;
Avoid warning when scalar value is passed
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29722 (wp_localize_script should be able to manage scalars) created</title>
      
        <dc:creator>Fab1en</dc:creator>

      <pubDate>Sun, 21 Sep 2014 23:29:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29722</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29722/1411342144633099</guid>
      <description>&lt;p&gt;
We should be able to do this :
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_localize_script( 'twentyfourteen-script', 'localized_variable', 1 );
&lt;/pre&gt;&lt;p&gt;
As of version 4.0, this is working : it generates a JavaScript scalar value, but a PHP Warning is thrown :
&lt;code&gt;Warning: Cannot use a scalar value as an array in /server/wordpress/versions/git-repo/src/wp-includes/class.wp-scripts.php on line 167&lt;/code&gt;
Note that the correct JavaScript code is output :
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;script type='text/javascript'&amp;gt;
/* &amp;lt;![CDATA[ */
var localized_variable = 1;
/* ]]&amp;gt; */
&amp;lt;/script&amp;gt;
&lt;/pre&gt;&lt;p&gt;
The warning is not triggered when the scalar variable is a string.
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_localize_script( 'twentyfourteen-script', 'localized_variable', 'a string' );
&lt;/pre&gt;&lt;p&gt;
This is just because strings can be accessed like arrays, but this is not the intended effect.
&lt;/p&gt;
&lt;p&gt;
A simple test for scalar values can fix that.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #28110 (Recently updated tab missing in Appearance-&gt;Themes) updated</title>
      
        <dc:creator>jcastaneda</dc:creator>

      <pubDate>Sun, 21 Sep 2014 23:20:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28110#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28110#comment:9/1411341623929066</guid>
      <description>&lt;p&gt;
I, too, am in favor of bringing back the recently updated tab.
&lt;/p&gt;
&lt;p&gt;
For many it is one thing to look for when it comes to picking out a theme or plugin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29663 (next_post_link &amp; previous_post_link Category exclude broken) updated</title>
      
        <dc:creator>posterworld</dc:creator>

      <pubDate>Sun, 21 Sep 2014 21:35:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29663#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29663#comment:13/1411335324813071</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;What is your default category?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Uncategorized
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Does "Uncategorized" still exist?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Yes
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;What term does &lt;code&gt;115&lt;/code&gt; represent?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
In my case is &lt;code&gt;78&lt;/code&gt;, the "to exclude" category named "poster"
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Is &lt;code&gt;78&lt;/code&gt; present in the category taxonomy?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Yes
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Do you have posts what that term as a category assigned to them?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
yes
&lt;/p&gt;
&lt;p&gt;
--
&lt;/p&gt;
&lt;p&gt;
Just in case I would like to add that in my case I have 3 categories that should show up while using the nav previous or next bar (Uncategorized, News and Design) so I'm using:
&lt;code&gt;&amp;lt;?php previous_post_link( '%link', '%title', FALSE, '78' ); ?&amp;gt;&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29274 (Plugin details show username instead of display name) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 21 Sep 2014 21:01:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29274#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29274#comment:16/1411333312906254</guid>
      <description>&lt;p&gt;
With &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/29274/29274.diff" title="Attachment '29274.diff' in Ticket #29274"&gt;29274.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/29274/29274.diff" title="Download"&gt;​&lt;/a&gt; the display name is still not displayed, by design?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18724 (Non functioning 'paged' input on plugin search) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 21 Sep 2014 20:48:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18724#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18724#comment:22/1411332518492667</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/18724/18724_kt.2.patch" title="Attachment '18724_kt.2.patch' in Ticket #18724"&gt;18724_kt.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/18724/18724_kt.2.patch" title="Download"&gt;​&lt;/a&gt; doesn't work for searches. &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/18724/18724.diff" title="Attachment '18724.diff' in Ticket #18724"&gt;18724.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/18724/18724.diff" title="Download"&gt;​&lt;/a&gt; looks better in this case.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/18724/18724.2.patch" title="Attachment '18724.2.patch' in Ticket #18724"&gt;18724.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/18724/18724.2.patch" title="Download"&gt;​&lt;/a&gt; is based on &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/18724/18724.diff" title="Attachment '18724.diff' in Ticket #18724"&gt;18724.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/18724/18724.diff" title="Download"&gt;​&lt;/a&gt; but removes the useless nonce and checks for &lt;code&gt;$pagenum&lt;/code&gt; &amp;lt;= &lt;code&gt;$total_pages&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>18724.2.patch attached to Ticket #18724</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 21 Sep 2014 20:27:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18724/18724.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18724/18724.2.patch/1411331252808853</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29663 (next_post_link &amp; previous_post_link Category exclude broken) updated</title>
      
        <dc:creator>gabrieldiggs</dc:creator>

      <pubDate>Sun, 21 Sep 2014 20:14:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29663#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29663#comment:12/1411330498497190</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
What is your default category?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Uncategorized (All categories unchecked by default in new posts)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Does "Uncategorized" still exist?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What term does 115 represent?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
News (Category)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is 115 present in the category taxonomy?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes (If taxonomy means category and tag lists)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Do you have posts with that term as a category assigned to them?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes (All posts are tagged with category 115 except posts in category 129 which are my radio show posts. Posts in category 115 may or may not have other categories as well. Posts in category 129 are only tagged with category 129 and nothing else.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29663 (next_post_link &amp; previous_post_link Category exclude broken) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Sun, 21 Sep 2014 19:59:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29663#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29663#comment:11/1411329542970974</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I am having a hard time reproducing this - the only way I could get it to break is if the default category is different than Uncategorized, Uncategorized is deleted, and the post has no category relationships (since &lt;code&gt;category&lt;/code&gt; is the default taxonomy) - the SQL will try to join on the taxonomy/post relationships, and if you didn't change the taxonomy, it will be category.
&lt;/p&gt;
&lt;p&gt;
Can you please describe more about your setup:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;What is your default category?
&lt;/li&gt;&lt;li&gt;Does "Uncategorized" still exist?
&lt;/li&gt;&lt;li&gt;What term does &lt;code&gt;115&lt;/code&gt; represent?
&lt;/li&gt;&lt;li&gt;Is &lt;code&gt;115&lt;/code&gt; present in the category taxonomy?
&lt;/li&gt;&lt;li&gt;Do you have posts what that term as a category assigned to them?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29717 (wp_check_invalid_utf8 - pcre tricks and failsafes, ...) updated</title>
      
        <dc:creator>askapache</dc:creator>

      <pubDate>Sun, 21 Sep 2014 19:37:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29717#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29717#comment:7/1411328249349513</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29717#comment:6" title="Comment 6"&gt;kitchin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Cool stuff. Comments:
&lt;/p&gt;
&lt;p&gt;
(1) I still think the old blog_charset check is clearest. No need to confuse people into having to look up obscure docs. Old code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;in_array( get_option( 'blog_charset' ), array( 'utf8', 'utf-8', 'UTF8', 'UTF-8' ) )
&lt;/pre&gt;&lt;p&gt;
vs. your new code
&lt;/p&gt;
&lt;pre class="wiki"&gt;stripos( $is_utf8, 'utf' ) !== false &amp;amp;&amp;amp; strpos( $is_utf8, '8' ) !== false
&lt;/pre&gt;&lt;p&gt;
(2) The WP code base never checks the result of ini_set() or @ini_set() but in this case it seems wise to do so. Hosts can disallow it. Most robust way is probably:
&lt;/p&gt;
&lt;pre class="wiki"&gt;static $mb_convert;
if ( function_exists( 'mb_convert_encoding' ) ) {
  @ini_set( 'mbstring.substitute_character', 'none' );
  $mb_convert = @ini_get( 'mbstring.substitute_character' ) === 'none';
}
&lt;/pre&gt;&lt;p&gt;
I don't imagine anybody is worried about changing that ini value with restoring it, but it should probably be noted in the inline doc as a side effect.
&lt;/p&gt;
&lt;p&gt;
As for WP coding standards nits, WP wants braces on all clauses (if ... {}). Also, no parentheses around function_exists() at line 775.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As the blog_charset check does only run once, I agree that the old code is better.  I also added your suggestion to verify that the ini value is correctly set to 'none' as part of the requirement for using mb_convert_encoding if iconv is unavailable.
&lt;/p&gt;
&lt;p&gt;
I also went ahead and added braces, and removed the parentheses from the function_exists statement, nice one.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>29717.4.patch attached to Ticket #29717</title>
      
        <dc:creator>askapache</dc:creator>

      <pubDate>Sun, 21 Sep 2014 19:33:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29717/29717.4.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29717/29717.4.patch/1411328013358630</guid>
      <description>&lt;p&gt;
29717.4.patch - kitchin2
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29710 (Add hooks to wpdb's insert(), update(), delete() and similar methods) updated</title>
      
        <dc:creator>borekb</dc:creator>

      <pubDate>Sun, 21 Sep 2014 19:01:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29710#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29710#comment:4/1411326069714459</guid>
      <description>&lt;p&gt;
Missed something obvious, sorry. The &lt;code&gt;'query'&lt;/code&gt; filter would not work for us because it is fired before the query executes. For the insert scenario, we need to do our work after the query was run.
&lt;/p&gt;
&lt;p&gt;
Let me ask the other way around - what would be the reasons not to include the proposed hooks? One reason that comes to mind is that list of available hooks would grow. Is there anything else I'm possibly missing? These hooks would still greatly help us, even if there might still be situation where we'll need to do something extra.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29597 (Media Grid View bulk deletion not respecting individual delete capabilities) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Sun, 21 Sep 2014 18:54:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29597#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29597#comment:5/1411325652728865</guid>
      <description>&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29755" title="Media Grid:
* In Bulk Edit mode, don't attempt to delete or trash an ..."&gt;[29755]&lt;/a&gt; missed the ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [29755]: Media Grid:   * In Bulk Edit mode, don't attempt to delete or trash an ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Sun, 21 Sep 2014 18:51:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/29755</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/29755/1411325501817629</guid>
      <description>&lt;p&gt;
Media Grid:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;In Bulk Edit mode, don't attempt to delete or trash an attachment that doesn't have a &lt;code&gt;delete&lt;/code&gt; nonce. The subsequent &lt;code&gt;_requery()&lt;/code&gt; will then properly display the attachment still present in the library.
&lt;/li&gt;&lt;li&gt;Remove all updated models from the selection at the same time to avoid async race conditions. The selection is reset when the grid's &lt;code&gt;select&lt;/code&gt; mode is deactivated, but this allows this view instance to be more portable.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This fix allows users to set caps on individual attachments without confusing the grid's library. This issue was present for bulk actions in general, had nothing to do with &lt;code&gt;MEDIA_TRASH&lt;/code&gt; specifically.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29597" title="#29597: defect (bug): Media Grid View bulk deletion not respecting individual delete capabilities (closed: fixed)"&gt;#29597&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #29710 (Add hooks to wpdb's insert(), update(), delete() and similar methods) updated</title>
      
        <dc:creator>borekb</dc:creator>

      <pubDate>Sun, 21 Sep 2014 18:26:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29710#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29710#comment:3/1411324011532392</guid>
      <description>&lt;p&gt;
No it is a good point. Our general problem is that we need to work with structured query data and the current 'query' filter makes this task quite hard. Clean WordPress installation strictly uses &lt;code&gt;insert()&lt;/code&gt;, &lt;code&gt;update()&lt;/code&gt; and similar methods but external plugins might use the generic &lt;code&gt;query()&lt;/code&gt; method, that's true.
&lt;/p&gt;
&lt;p&gt;
I'll discuss this further with my colleague to see if this ticket would actually help us or not. Thanks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29717 (wp_check_invalid_utf8 - pcre tricks and failsafes, ...) updated</title>
      
        <dc:creator>kitchin</dc:creator>

      <pubDate>Sun, 21 Sep 2014 18:20:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29717#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29717#comment:6/1411323600545275</guid>
      <description>&lt;p&gt;
Cool stuff. Comments:
&lt;/p&gt;
&lt;p&gt;
(1) I still think the old blog_charset check is clearest. No need to confuse people into having to look up obscure docs. Old code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;in_array( get_option( 'blog_charset' ), array( 'utf8', 'utf-8', 'UTF8', 'UTF-8' ) )
&lt;/pre&gt;&lt;p&gt;
vs. your new code
&lt;/p&gt;
&lt;pre class="wiki"&gt;stripos( $is_utf8, 'utf' ) !== false &amp;amp;&amp;amp; strpos( $is_utf8, '8' ) !== false
&lt;/pre&gt;&lt;p&gt;
(2) The WP code base never checks the result of ini_set() or @ini_set() but in this case it seems wise to do so. Hosts can disallow it. Most robust way is probably:
&lt;/p&gt;
&lt;pre class="wiki"&gt;static $mb_convert;
if ( function_exists( 'mb_convert_encoding' ) ) {
  @ini_set( 'mbstring.substitute_character', 'none' );
  $mb_convert = @ini_get( 'mbstring.substitute_character' ) === 'none';
}
&lt;/pre&gt;&lt;p&gt;
I don't imagine anybody is worried about changing that ini value with restoring it, but it should probably be noted in the inline doc as a side effect.
&lt;/p&gt;
&lt;p&gt;
As for WP coding standards nits, WP wants braces on all clauses (if ... {}). Also, no parentheses around function_exists() at line 775.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24093 (WP_Meta_Query is inefficient when referencing the same keys in "OR" query) updated</title>
      
        <dc:creator>sarukuku</dc:creator>

      <pubDate>Sun, 21 Sep 2014 18:11:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24093#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24093#comment:23/1411323093698614</guid>
      <description>&lt;p&gt;
It would be good to get this finally in. I happened to stuble on this when I was looking for an answer to a problem I have with a dynamically generated meta_query. When the amount of the meta_query arrays exceeds nine my local development server and my staging server both just freeze. The DB query seems to run indefinitely and I need to restart the MySQL server to get the site operational again.
&lt;/p&gt;
&lt;p&gt;
EDIT 1: I can confirm that vprat's latest patch fixes the issue on my development and test server.
&lt;/p&gt;
&lt;p&gt;
EDIT 2: The patch doesn't seem to break anything but cases WP to show errors on the admin side, example below.
&lt;/p&gt;
&lt;pre class="wiki"&gt;WordPress database error: [Unknown column 'mt1.meta_key' in 'where clause']
SELECT wp_posts.ID FROM wp_posts LEFT JOIN wp_postmeta AS mt0 ON (wp_posts.ID = mt0.post_id AND mt0.meta_key = '_searchwp_last_index') WHERE 1=1 AND wp_posts.post_type IN ('post', 'page', 'attachment', 'person', 'product', 'service_provider', 'q_and_a') AND ((wp_posts.post_status = 'publish' OR wp_posts.post_status = 'inherit')) AND ( mt0.post_id IS NULL AND mt1.meta_key = '_searchwp_skip' ) GROUP BY wp_posts.ID ORDER BY wp_posts.post_date DESC
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29602 (Video uploads from the media modal and media-new.php are broken on iOS) updated</title>
      
        <dc:creator>stephdau</dc:creator>

      <pubDate>Sun, 21 Sep 2014 17:54:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29602#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29602#comment:24/1411322097655090</guid>
      <description>&lt;p&gt;
I don't run iOS myself, but I just had the opportunity to try a video upload on a friend's shiny new iPhone 6.
&lt;/p&gt;
&lt;p&gt;
Tried to upload a 1 second video, but the process stayed stuck as &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/29602/slack_for_ios_upload.png" title="Attachment 'slack_for_ios_upload.png' in Ticket #29602"&gt;attachment:slack_for_ios_upload.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/29602/slack_for_ios_upload.png" title="Download"&gt;​&lt;/a&gt; shows (upload UX, no progress, no error).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>slack_for_ios_upload.png attached to Ticket #29602</title>
      
        <dc:creator>stephdau</dc:creator>

      <pubDate>Sun, 21 Sep 2014 17:52:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29602/slack_for_ios_upload.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29602/slack_for_ios_upload.png/1411321970377397</guid>
      <description>&lt;p&gt;
iOS 8 final against current trunk
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #28110 (Recently updated tab missing in Appearance-&gt;Themes) updated</title>
      
        <dc:creator>sakinshrestha</dc:creator>

      <pubDate>Sun, 21 Sep 2014 17:20:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28110#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28110#comment:8/1411320007840416</guid>
      <description>&lt;p&gt;
Yes, it will be nice to get back &lt;strong&gt;Recently Updated&lt;/strong&gt;. Thanks
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29717 (wp_check_invalid_utf8 - pcre tricks and failsafes, ...) updated</title>
      
        <dc:creator>askapache</dc:creator>

      <pubDate>Sun, 21 Sep 2014 17:10:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29717#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29717#comment:5/1411319405631690</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29717#comment:4" title="Comment 4"&gt;kitchin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The checks and ini_set() in the &lt;code&gt;if ($strip ) {}&lt;/code&gt; block only need to be run once.
&lt;/p&gt;
&lt;p&gt;
The stripos() is only run once so does not save much and is probably wrong, since it matches 'utf-16', 'utf-7', etc.
&lt;/p&gt;
&lt;p&gt;
Also the inline doc in the patch claims too much, while the old one said too little. Maybe this:
&lt;/p&gt;
&lt;pre class="wiki"&gt; * @return string If the string is valid UTF-8 or the blog_charset is not UTF-8, the string
 is returned unmodified. Otherwise, an empty string is returned, or optionally the string
 stripped of invalid chars.
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
Great feedback kitchin, I have just updated the patch to 29717.3.patch with all of your improvements.  Please check it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>29717.3.patch attached to Ticket #29717</title>
      
        <dc:creator>askapache</dc:creator>

      <pubDate>Sun, 21 Sep 2014 17:08:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29717/29717.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29717/29717.3.patch/1411319308575407</guid>
      <description>&lt;p&gt;
29717.3.patch - kitchin
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11725 (Add start and count attributes to gallery shortcode) updated</title>
      
        <dc:creator>nboehr</dc:creator>

      <pubDate>Sun, 21 Sep 2014 16:49:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11725#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11725#comment:30/1411318178550465</guid>
      <description>&lt;p&gt;
Because it seems that this functionality will never make it into the Wordpress Core, I created a plugin that does something similar: &lt;a class="ext-link" href="https://wordpress.org/plugins/limit-parameter-for-gallery-shortcode/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/limit-parameter-for-gallery-shortcode/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It should be possible to integrate offset functionality pretty easy. I will happily accept a patch for this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29716 (orderby for meta values is broken in 4.0) updated</title>
      
        <dc:creator>kitchin</dc:creator>

      <pubDate>Sun, 21 Sep 2014 14:14:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29716#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29716#comment:7/1411308849578360</guid>
      <description>&lt;p&gt;
But 'orderby' was not an array in 3.9. Was that the query you had in 3.9? It's easier if you paste in the old query than describe it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29716 (orderby for meta values is broken in 4.0) updated</title>
      
        <dc:creator>devarni</dc:creator>

      <pubDate>Sun, 21 Sep 2014 13:52:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29716#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29716#comment:6/1411307544721022</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29716#comment:5" title="Comment 5"&gt;kitchin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That's different. What was your query in 3.9 ?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It was the same query in 3.9
Besides the ordering thing, the OR relation is not working in 4.0 and the private records are returned!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29716 (orderby for meta values is broken in 4.0) updated</title>
      
        <dc:creator>kitchin</dc:creator>

      <pubDate>Sun, 21 Sep 2014 13:32:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29716#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29716#comment:5/1411306359733256</guid>
      <description>&lt;p&gt;
That's different. What was your query in 3.9 ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29716 (orderby for meta values is broken in 4.0) updated</title>
      
        <dc:creator>devarni</dc:creator>

      <pubDate>Sun, 21 Sep 2014 11:31:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29716#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29716#comment:4/1411299069112123</guid>
      <description>&lt;p&gt;
I think it has something to do with the meta_query... this breaks the order for unknown reasons in combination with the OR relation. This behavior is new with 4.0. Removing the meta_query ordering is working as expected.
&lt;/p&gt;
&lt;p&gt;
This is the example query:
If the meta key "is_private" or does not exist or if the value is empty the post should be queried.
This is not working with 4.0 anymore and the same time the orderby is not working correctly.
&lt;/p&gt;
&lt;pre class="wiki"&gt;$query_vars = array(
            'post_type' =&amp;gt; DG_POST_SLUG,
            'meta_key' =&amp;gt; DG_PREFIX . 'date',
            'orderby'  =&amp;gt; array('meta_value_num' =&amp;gt; 'DESC'),
            'posts_per_page' =&amp;gt; $posts_per_page,
            'paged' =&amp;gt; $page_no,
            'meta_query' =&amp;gt; array(
                'relation' =&amp;gt; 'OR',
                array(
                    'key' =&amp;gt; DG_PREFIX . 'is_private',
                    'compare' =&amp;gt; 'NOT EXISTS',
                ),
                array(
                    'key' =&amp;gt; DG_PREFIX . 'is_private',
                    'value' =&amp;gt; '',
                    'type' =&amp;gt; 'CHAR',
                    'compare' =&amp;gt; '='
                )
            ),
        );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29716 (orderby for meta values is broken in 4.0) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 21 Sep 2014 10:46:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29716#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29716#comment:3/1411296367832422</guid>
      <description>invalid: &lt;p&gt;
Thanks for the report, devarni, but this is indeed an invalid format. Either of kitchin's suggested formats will do the trick.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #29607 (image_add_caption() returns immediately if caption empty, preventing ...) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 21 Sep 2014 10:10:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29607#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29607#comment:9/1411294220580540</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29754" title="Pass the attachment ID to the 'image_add_caption_text' filter.
fixes ..."&gt;29754&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Pass the attachment ID to the 'image_add_caption_text' filter.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29607" title="#29607: enhancement: image_add_caption() returns immediately if caption empty, preventing ... (closed: fixed)"&gt;#29607&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [29754]: Pass the attachment ID to the 'image_add_caption_text' filter.  fixes ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 21 Sep 2014 10:10:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/29754</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/29754/1411294219606982</guid>
      <description>&lt;p&gt;
Pass the attachment ID to the 'image_add_caption_text' filter.
&lt;/p&gt;
&lt;p&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29607" title="#29607: enhancement: image_add_caption() returns immediately if caption empty, preventing ... (closed: fixed)"&gt;#29607&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #29607 (image_add_caption() returns immediately if caption empty, preventing ...) reopened</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 21 Sep 2014 09:58:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29607#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29607#comment:8/1411293480498769</guid>
      <description>&lt;p&gt;
Should we pass the attachment ID to the filter as well?
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #29607 (image_add_caption() returns immediately if caption empty, preventing ...) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 21 Sep 2014 09:55:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29607#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29607#comment:7/1411293309878336</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29753" title="Add 'image_add_caption_text' filter for changing the pre-parse caption ..."&gt;29753&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Add 'image_add_caption_text' filter for changing the pre-parse caption text before output to the editor.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
props collinsinternet, DrewAPicture.&lt;br /&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29607" title="#29607: enhancement: image_add_caption() returns immediately if caption empty, preventing ... (closed: fixed)"&gt;#29607&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [29753]: Add 'image_add_caption_text' filter for changing the pre-parse caption ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 21 Sep 2014 09:55:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/29753</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/29753/1411293308857383</guid>
      <description>&lt;p&gt;
Add 'image_add_caption_text' filter for changing the pre-parse caption text before output to the editor.
&lt;/p&gt;
&lt;p&gt;
props collinsinternet, DrewAPicture.
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29607" title="#29607: enhancement: image_add_caption() returns immediately if caption empty, preventing ... (closed: fixed)"&gt;#29607&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #29718 (Improved coverage for WP_Tax_Query unit tests) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sun, 21 Sep 2014 09:27:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29718#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29718#comment:1/1411291671469448</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Well, I'm impressed. Nice work.
&lt;/p&gt;
&lt;p&gt;
One thing I wonder about is whether we should embrace the idea of testing the "any" taxonomy instead of pigeon-holing our tests to specifically categories or tags.
&lt;/p&gt;
&lt;p&gt;
As usage of custom post types/taxonomies continues to grow, it might be worth taking a more dynamic tack to testing taxonomy APIs using random, factory-generated taxonomies (hierarchical or non-hierarchical as needed) whenever possible.
&lt;/p&gt;
&lt;p&gt;
I think my hesitation to using built-in taxonomies stems from the knowledge that there's a great deal of institutional and legacy support for those taxonomies in core. Sometimes we need to specifically test categories and tags, and that's a given. I just don't think that means we &lt;em&gt;always&lt;/em&gt; should.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29721 (Improve inline docs for get_post_types()) closed</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sun, 21 Sep 2014 08:54:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29721#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29721#comment:1/1411289678282334</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29752" title="Add some missing information to the inline docs for ..."&gt;29752&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Add some missing information to the inline docs for &lt;code&gt;get_post_types()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Improves the &lt;code&gt;@see&lt;/code&gt; reference for &lt;code&gt;register_post_type()&lt;/code&gt; to mention that it contains information about accepted arguments
&lt;/li&gt;&lt;li&gt;Adds a description of the accepted values for the &lt;code&gt;$operator&lt;/code&gt; parameter
&lt;/li&gt;&lt;li&gt;Fixes a typo
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29721" title="#29721: defect (bug): Improve inline docs for get_post_types() (closed: fixed)"&gt;#29721&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [29752]: Add some missing information to the inline docs for ...</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sun, 21 Sep 2014 08:54:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/29752</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/29752/1411289677079987</guid>
      <description>&lt;p&gt;
Add some missing information to the inline docs for &lt;code&gt;get_post_types()&lt;/code&gt;.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Improves the &lt;code&gt;@see&lt;/code&gt; reference for &lt;code&gt;register_post_type()&lt;/code&gt; to mention that it contains information about accepted arguments
&lt;/li&gt;&lt;li&gt;Adds a description of the accepted values for the &lt;code&gt;$operator&lt;/code&gt; parameter
&lt;/li&gt;&lt;li&gt;Fixes a typo
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29721" title="#29721: defect (bug): Improve inline docs for get_post_types() (closed: fixed)"&gt;#29721&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>29721.diff attached to Ticket #29721</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sun, 21 Sep 2014 08:51:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29721/29721.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29721/29721.diff/1411289485013830</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29721 (Improve inline docs for get_post_types()) created</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sun, 21 Sep 2014 08:50:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29721</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29721/1411289456187865</guid>
      <description>&lt;p&gt;
Attached patch fixes a typo in the &lt;code&gt;get_post_types()&lt;/code&gt; docs and adds a description for the accepted values of the &lt;code&gt;$operator&lt;/code&gt; parameter.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29607 (image_add_caption() returns immediately if caption empty, preventing ...) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sun, 21 Sep 2014 08:42:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29607#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29607#comment:6/1411288954468310</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
At first I was concerned about effectively running two filters in a row here, but after further consideration, the new filter really does provide something not currently available -- the ability to directly filter the pre-parse caption text before output to the editor.
&lt;/p&gt;
&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/29607/29607.3.patch" title="Attachment '29607.3.patch' in Ticket #29607"&gt;29607.3.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/29607/29607.3.patch" title="Download"&gt;​&lt;/a&gt;, I've reworded the long description a bit to clarify expected behavior in passing an empty value. I also changed the hook name to 'image_add_caption_text'.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>29607.3.patch attached to Ticket #29607</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sun, 21 Sep 2014 08:38:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29607/29607.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29607/29607.3.patch/1411288691753400</guid>
      <description>&lt;p&gt;
Rewording
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29716 (orderby for meta values is broken in 4.0) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 21 Sep 2014 06:45:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29716#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29716#comment:2/1411281905998333</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23912 (Add Composer package description) updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Sun, 21 Sep 2014 06:16:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23912#comment:92</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23912#comment:92/1411280192288860</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23912#comment:90" title="Comment 90"&gt;ericlewis&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Can someone give a brief summary of where we're at on this ticket?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
My take on summary in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23912#comment:86" title="Comment 86"&gt;86&lt;/a&gt; above still stands.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23912 (Add Composer package description) updated</title>
      
        <dc:creator>JohnPBloch</dc:creator>

      <pubDate>Sun, 21 Sep 2014 04:50:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23912#comment:91</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23912#comment:91/1411275000965703</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23912#comment:90" title="Comment 90"&gt;ericlewis&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Can someone give a brief summary of where we're at on this ticket?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As of now, the main sticking point (I think) is whether the main package's composer manifest is "clean" (meaning the "type" field is generic and it does not require an installer package) or not.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23912 (Add Composer package description) updated</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Sun, 21 Sep 2014 02:21:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23912#comment:90</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23912#comment:90/1411266061004452</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Can someone give a brief summary of where we're at on this ticket?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>jbrinley</dc:creator>

      <pubDate>Sun, 21 Sep 2014 01:58:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:71</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:71/1411264709316978</guid>
      <description>&lt;p&gt;
Just realized that the patch left in a bit of debugging code. Ignore 17817.6.patch, use 17817.6.2.patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>17817.6.2.patch attached to Ticket #17817</title>
      
        <dc:creator>jbrinley</dc:creator>

      <pubDate>Sun, 21 Sep 2014 01:56:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17817/17817.6.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17817/17817.6.2.patch/1411264598262016</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29717 (wp_check_invalid_utf8 - pcre tricks and failsafes, ...) updated</title>
      
        <dc:creator>kitchin</dc:creator>

      <pubDate>Sun, 21 Sep 2014 01:20:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29717#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29717#comment:4/1411262451528615</guid>
      <description>&lt;p&gt;
The checks and ini_set() in the &lt;code&gt;if ($strip ) {}&lt;/code&gt; block only need to be run once.
&lt;/p&gt;
&lt;p&gt;
The stripos() is only run once so does not save much and is probably wrong, since it matches 'utf-16', 'utf-7', etc.
&lt;/p&gt;
&lt;p&gt;
Also the inline doc in the patch claims too much, while the old one said too little. Maybe this:
&lt;/p&gt;
&lt;pre class="wiki"&gt; * @return string If the string is valid UTF-8 or the blog_charset is not UTF-8, the string
 is returned unmodified. Otherwise, an empty string is returned, or optionally the string
 stripped of invalid chars.
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29716 (orderby for meta values is broken in 4.0) updated</title>
      
        <dc:creator>kitchin</dc:creator>

      <pubDate>Sun, 21 Sep 2014 00:05:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29716#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29716#comment:1/1411257921959793</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Did that work in a development version of 4.0? The structure to use is:
&lt;/p&gt;
&lt;pre class="wiki"&gt;'meta_key' =&amp;gt; 'date',
'orderby' =&amp;gt; array('meta_value' =&amp;gt; 'DESC'),
&lt;/pre&gt;&lt;p&gt;
or the old style
&lt;/p&gt;
&lt;pre class="wiki"&gt;'meta_key' =&amp;gt; 'date',
'orderby' =&amp;gt; 'meta_value',
'order' =&amp;gt; 'DESC',
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>29717.2.patch attached to Ticket #29717</title>
      
        <dc:creator>askapache</dc:creator>

      <pubDate>Sat, 20 Sep 2014 23:30:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29717/29717.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29717/29717.2.patch/1411255817584895</guid>
      <description>&lt;p&gt;
29717.2.patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29720 (tinyMCE editor doesn't allow you to float a gallery left or right) created</title>
      
        <dc:creator>RDall</dc:creator>

      <pubDate>Sat, 20 Sep 2014 23:16:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29720</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29720/1411254977352081</guid>
      <description>&lt;p&gt;
If you add a gallery to WordPress the gallery clears both right and left. The tinyMCE editor doesn't allow you to float a gallery left or right regardless of the size of the gallery. This isn't a problem for 600 width content area and galleries that have 3 columns of photos which is the majority of the themes and the majority of gallery uses.
&lt;/p&gt;
&lt;p&gt;
But if you have a one of two column gallery this leaves a large amount of unused space.
&lt;/p&gt;
&lt;p&gt;
Looking at the Editor layouts for the default themes of twenty fourteen and twenty twelve. You can see in the editor that it takes up the full width of the editable content and if you try aligning left and aligning right nothing will happen.
&lt;/p&gt;
&lt;p&gt;
Twenty Fourteen &lt;a class="ext-link" href="http://cl.ly/image/1V2o1S010j2c"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://cl.ly/image/1V2o1S010j2c&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Twenty Twelve &lt;a class="ext-link" href="http://cl.ly/image/1w222U1F0q3W"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://cl.ly/image/1w222U1F0q3W&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
If we have 3 columns of photos this isn't a problem.
&lt;/p&gt;
&lt;p&gt;
But I have two user case scenario's where this might not be best.
&lt;/p&gt;
&lt;p&gt;
If you want to have three images vertically aligned and thumbnailed. You could do this easily if you made a gallery of one column. You could then float this small gallery left or right of the content. This is not currently possible.
&lt;/p&gt;
&lt;p&gt;
The issue is if you were using a wide format content area of a theme. Lets say 800 to 900 pixels wide. (I know we have a 600px as a good width for readability) but say you wanted to float your 2 col or 3 col gallery left of right in a wider screen view. Not currently possible.
&lt;/p&gt;
&lt;p&gt;
If it's possible with the new version of tinyMCE then this would be a great addition to galleries of WordPress.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29681 (Twenty Fourteen: Left Column Drops to the Bottom Way Too Soon) updated</title>
      
        <dc:creator>Quantumstate</dc:creator>

      <pubDate>Sat, 20 Sep 2014 22:54:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29681#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29681#comment:9/1411253694565239</guid>
      <description>&lt;p&gt;
Yes, gourd-head and close this problem.  I've found a far more advanced solution now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28968 (Twenty Fourteen: Flips to Tablet Mode Too Soon) closed</title>
      
        <dc:creator>Quantumstate</dc:creator>

      <pubDate>Sat, 20 Sep 2014 22:51:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28968#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28968#comment:13/1411253517439679</guid>
      <description>wontfix: &lt;p&gt;
Never mind.  I've found a far more advanced solution.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #29719 (Connection error to WordPress.org when HTTP calls disabled) created</title>
      
        <dc:creator>grapplerulrich</dc:creator>

      <pubDate>Sat, 20 Sep 2014 22:00:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29719</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29719/1411250425305618</guid>
      <description>&lt;p&gt;
When the  HTTP calls are disabled with either the filter or constant there is an connection error on &lt;code&gt;/wp-admin/update-core.php&lt;/code&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter( 'pre_http_request', '__return_true', 100 );
define( 'WP_HTTP_BLOCK_EXTERNAL', true );
&lt;/pre&gt;&lt;p&gt;
The error comes from &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/master/wp-includes/update.php#L457"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;wp-includes/update.php#L457&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29717 (wp_check_invalid_utf8 - pcre tricks and failsafes, ...) updated</title>
      
        <dc:creator>askapache</dc:creator>

      <pubDate>Sat, 20 Sep 2014 19:43:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29717#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29717#comment:3/1411242218144871</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29717#comment:2" title="Comment 2"&gt;miqrogroove&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Impressive.  So the main benefits are 10% faster and more compatibility?  Are there any systems currently running WordPress that need this patch?  A more concise, big picture description would help.
&lt;/p&gt;
&lt;p&gt;
Also, I learned in feedback from the 4.0 release that we need to specifically test PHP versions less than 5.4.9 and 5.3.19, because they exhibit crashes when PCRE is used to perform certain types of alternation and backtracking.  I found that version 5.2.13 is particularly easy to download.  It is not necessary to add unit tests for that, but we need to see that if someone posts a 10kb or 100kb block of text that it won't suddenly crash due to a server bug.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The updates don't actually change the behaviour of this function unless:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;You are one of those with a site with an older pcre lacking utf-8 support, in which case those 4 functions will now correctly filter and check for invalid utf.
&lt;/li&gt;&lt;li&gt;You use the &lt;code&gt;strip&lt;/code&gt; parameter to actually remove invalid utf for a plugin or theme, in which case it will now work correctly.  That was a bug fix.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Some folks have pcre compiled without utf support enabled or with utf-support missing, or disabled, so for them the '/u' doesn't work which results in essentially this entire check being skipped.
&lt;/p&gt;
&lt;p&gt;
This is also somewhat of a security issue, such as the whole IDN domain issues and other utf exploits.  The big big picture with this is to update the function to more easily developed and used, it hadn't been updated for quite a while.  This should make it easier to update/extend/move this function down the road, I think some people may have wrongly assumed that it was doing more than it was.  It's kind of a strange function, to take a string as input and either return it as is, or return a blank string in case of invalid utf-8.  But that's actually really clever, it's much safer and faster that way, just not so clear.
&lt;/p&gt;
&lt;p&gt;
I've noticed several plugins like disqus and yoast seo have started to build their own incarnations of this function, this update should help make clear what it is and isn't.
&lt;/p&gt;
&lt;p&gt;
I have tested on PHP 5.2, I approached this with extreme caution to avoid causing any issues.  IOW, this function will also work on 5.0.  The only reason it wouldn't work for php 4.x is that &lt;code&gt;stripos&lt;/code&gt; wasn't available as a builtin zend function until 5.0, but I noticed it's being used in several places in core so.. ( I am still used to having to code backwards for 4.x, so happy that's officially over for WP).
&lt;/p&gt;
&lt;p&gt;
The big change are the 2 new fallbacks to the original preg_match, including the custom regex, which will be the fallback for those with absolutely no utf pcre capability. It has to be a rarity for that to ever actually be needed, but that's the only possible issue I can see with regard to buffer issues or memory problems.  preg_match isn't as efficient as a builtin function such as strpos, but it is pretty darn efficient.
&lt;/p&gt;
&lt;p&gt;
The other big change is making the 'strip' parameter work, since it isn't actually being used by any core, it seems to have been forgotten about a little.  With it now working, I will start using it in plugins and themes to sanitize utf-8 (because this is super fast).  That's actually why I initially started on this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>29718.patch attached to Ticket #29718</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 20 Sep 2014 19:13:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29718/29718.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29718/29718.patch/1411240431483062</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29718 (Improved coverage for WP_Tax_Query unit tests) created</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 20 Sep 2014 19:13:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29718</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29718/1411240416477549</guid>
      <description>&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29560" title="#29560: enhancement: Improved coverage and performance for WP_Meta_Query unit tests (closed: fixed)"&gt;#29560&lt;/a&gt; for a related ticket.
&lt;/p&gt;
&lt;p&gt;
The quality and coverage of &lt;code&gt;WP_Tax_Query&lt;/code&gt; and &lt;code&gt;WP_Query::tax_query&lt;/code&gt; tests is pretty lackluster. This is problematic because it hinders future refactoring, and in particular it hamstrings the taxonomy roadmap.
&lt;/p&gt;
&lt;p&gt;
The attached patch is an initial attempt to introduce some sanity to these tests. I've done the following:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Written systematic tests for all public methods of &lt;code&gt;WP_Tax_Query&lt;/code&gt;. Coverage here is pretty much complete.
&lt;/li&gt;&lt;li&gt;Moved the tests in tests/phpunit/term/query.php that have to do with WP_Query into tests/phpunit/post/query.php. The latter file is kind of a junk drawer of tests, and should probably be broken up, but at least my changes here make it consistent.
&lt;/li&gt;&lt;li&gt;Add some more &lt;code&gt;WP_Query::tax_query&lt;/code&gt; tests, to cover a number of possible permutations: single vs multiple queries using AND and OR as the relation; various values for 'field'; various values for 'operator'
&lt;/li&gt;&lt;li&gt;Clean up existing tests for speed, relevance, better method names.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
As in the case of &lt;code&gt;WP_Meta_Query&lt;/code&gt;, the infinite permutations of query args make it impossible to write 100% test coverage, but this is a reasonable start.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29717 (wp_check_invalid_utf8 - pcre tricks and failsafes, ...) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Sat, 20 Sep 2014 18:45:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29717#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29717#comment:2/1411238725886419</guid>
      <description>&lt;p&gt;
Impressive.  So the main benefits are 10% faster and more compatibility?  Are there any systems currently running WordPress that need this patch?  A more concise, big picture description would help.
&lt;/p&gt;
&lt;p&gt;
Also, I learned in feedback from the 4.0 release that we need to specifically test PHP versions less than 5.4.9 and 5.3.19, because they exhibit crashes when PCRE is used to perform certain types of alternation and backtracking.  I found that version 5.2.13 is particularly easy to download.  It is not necessary to add unit tests for that, but we need to see that if someone posts a 10kb or 100kb block of text that it won't suddenly crash due to a server bug.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29518 (Fatal error in WP_Session_Tokens::hash_token()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 20 Sep 2014 18:10:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29518#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29518#comment:11/1411236607376395</guid>
      <description>&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29751" title="Add safeguards for when ext/hash is not compiled with PHP.
see ..."&gt;[29751]&lt;/a&gt; missed the ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29717 (wp_check_invalid_utf8 - pcre tricks and failsafes, ...) updated</title>
      
        <dc:creator>askapache</dc:creator>

      <pubDate>Sat, 20 Sep 2014 17:30:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29717#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29717#comment:1/1411234237739942</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29518 (Fatal error in WP_Session_Tokens::hash_token()) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 20 Sep 2014 17:28:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29518#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29518#comment:10/1411234098688338</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [29751]: Add safeguards for when ext/hash is not compiled with PHP.  see ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 20 Sep 2014 17:27:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/29751</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/29751/1411234066264180</guid>
      <description>&lt;p&gt;
Add safeguards for when ext/hash is not compiled with PHP.
&lt;/p&gt;
&lt;p&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29518" title="#29518: defect (bug): Fatal error in WP_Session_Tokens::hash_token() (closed: fixed)"&gt;#29518&lt;/a&gt;, for trunk.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>29717.patch attached to Ticket #29717</title>
      
        <dc:creator>askapache</dc:creator>

      <pubDate>Sat, 20 Sep 2014 17:24:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29717/29717.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29717/29717.patch/1411233857168692</guid>
      <description>&lt;p&gt;
29717.patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>29717.php.patch attached to Ticket #29717</title>
      
        <dc:creator>askapache</dc:creator>

      <pubDate>Sat, 20 Sep 2014 17:23:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29717/29717.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29717/29717.php.patch/1411233820729309</guid>
      <description>&lt;p&gt;
29717.wp_check_invalid_utf8.patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29717 (wp_check_invalid_utf8 - pcre tricks and failsafes, ...) created</title>
      
        <dc:creator>askapache</dc:creator>

      <pubDate>Sat, 20 Sep 2014 17:18:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29717</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29717/1411233493640454</guid>
      <description>&lt;p&gt;
Used in core in these 4 functions.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;esc_attr()
&lt;/li&gt;&lt;li&gt;esc_js()
&lt;/li&gt;&lt;li&gt;esc_html()
&lt;/li&gt;&lt;li&gt;sanitize_text_field()
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
It's the first function to execute for all 4, and especially for sanitize_text_field it gets called quite a bit and is pretty important.
&lt;/p&gt;
&lt;p&gt;
It's purpose is to check a string for invalid utf.  It utilizes preg_match with the '/u' modifier to parse both the pattern and subject for utf.  PCRE automatically checks both the pattern and subject for invalid utf, upon which it will exit with an error code/constant.
&lt;/p&gt;
&lt;p&gt;
The changes here:  Normally pcre is compiled with utf support.  It can also be compiled to disallow utf support, and it can be compiled without utf support.  If utf is compiled and enabled the '/u' modifier for preg_match is available which turns on the automatic utf validation.
&lt;/p&gt;
&lt;p&gt;
For older dists or those with utf support turned off at compile, there is a trick to enable the same functionality as the '/u' provides.
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.pcre.org/pcre.txt"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.pcre.org/pcre.txt&lt;/a&gt;
In  order  process  UTF-8 strings, you must build PCRE to include UTF-8
support in the code, and, in addition,  you  must  call  pcre_compile()
with  the  PCRE_UTF8  option  flag,  or the pattern must start with the
sequence (*UTF8). When either of these is the case,  both  the  pattern
and  any  subject  strings  that  are matched against it are treated as
UTF-8 strings instead of strings of 1-byte characters.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So the first change to this function was to allow a fallback to that pattern option trick in case '/u' wasnt supported.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;code&gt;@preg_match( '//u', '' ) !== false&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;@preg_match( '/(*UTF8)/', '' ) !== false&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Fallback to a regex that doesn't require UTF support, instead of using pcre utf validation it searches for it
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
I also wanted it to have better performance, especially due to its use in those 4 core functions I use often. I benchmarked it pretty thoroughly to try and gain more speed. This patch is about 10-20% faster.
&lt;/p&gt;
&lt;p&gt;
Many gains were from refactoring the logic and control structures, chaining within if statements using bools, and utilizing the static variables to the fullest.  This is especially crucial since this function gets called repeatedly.  I also gained some cycles by replacing an in_array() check with a &lt;code&gt;stripos&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
One of the bigger gains came from replacing the &lt;code&gt;strlen( $string ) == 0&lt;/code&gt; that ran on every run with.  Since the $string variable was already casted to a string, that should always work and keep things a little cheaper.
&lt;/p&gt;
&lt;pre class="wiki"&gt;$string = (string) $string;
// if string length is 0 (faster than strlen) return empty
if ( ! isset( $string[0] ) )
	return '';
&lt;/pre&gt;&lt;p&gt;
The final change was to the 2nd parameters $strip, which if true is supposed to strip the invalid utf out of the string and return the valid.  In core nowhere is that parameter being used (yet), which explains the deprecated looking iconv. Also added a fallback to use mb_convert_encoding in case iconv is missing.
&lt;/p&gt;
&lt;pre class="wiki"&gt;// try to use iconv if exists
if ( function_exists( 'iconv' ) )
	return @iconv( 'utf-8', 'utf-8//ignore', $string );
// otherwise try to use mb_convert_encoding, setting the substitue_character to none to mimic strip
if ( function_exists( 'mb_convert_encoding' ) ) {
	@ini_set( 'mbstring.substitute_character', 'none' );
	return @mb_convert_encoding( $string, 'utf-8', 'utf-8' );
}
&lt;/pre&gt;&lt;p&gt;
Here are some of the test strings I used, I also used the utf-8-test file at &lt;a class="ext-link" href="http://www.cl.cam.ac.uk/~mgk25/ucs/examples/UTF-8-test.txt"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.cl.cam.ac.uk/~mgk25/ucs/examples/UTF-8-test.txt&lt;/a&gt;.  I did testing on 4.0 using php 5.6, 5.4, 5.3, and 5.4.  I verified the output and the strip feature as well.  For all tests I had php error_reporting set to the max:
&lt;/p&gt;
&lt;pre class="wiki"&gt;ini_set( 'error_reporting', 2147483647 );
&lt;/pre&gt;&lt;pre class="wiki"&gt;$valid_utf = array(
	"\xc3\xb1", // 'Valid 2 Octet Sequence'
	"\xe2\x82\xa1", // 'Valid 3 Octet Sequence' =&amp;gt;
	"\xf0\x90\x8c\xbc", // 'Valid 4 Octet Sequence' =&amp;gt;
	"\xf8\xa1\xa1\xa1\xa1", //'Valid 5 Octet Sequence (but not Unicode!)' =&amp;gt;
	"\xfc\xa1\xa1\xa1\xa1\xa1", //'Valid 6 Octet Sequence (but not Unicode!)' =&amp;gt;
	"Iñtërnâtiônàlizætiøn\xf0\x90\x8c\xbcIñtërnâtiônàlizætiøn", // valid four octet id
	'Iñtërnâtiônàlizætiøn', // valid UTF-8 string
	"\xc3\xb1", // valid two octet id
	"Iñtërnâtiônàlizætiøn\xe2\x82\xa1Iñtërnâtiônàlizætiøn", // valid three octet id
);
$invalid_utf = array(
	"\xc3\x28", //'Invalid 2 Octet Sequence' =&amp;gt;
	"\xa0\xa1", //'Invalid Sequence Identifier' =&amp;gt;
	"\xe2\x28\xa1", //'Invalid 3 Octet Sequence (in 2nd Octet)' =&amp;gt;
	"\xe2\x82\x28", //'Invalid 3 Octet Sequence (in 3rd Octet)' =&amp;gt;
	"\xf0\x28\x8c\xbc", //'Invalid 4 Octet Sequence (in 2nd Octet)' =&amp;gt;
   "\xf0\x90\x28\xbc", // 'Invalid 4 Octet Sequence (in 3rd Octet)' =&amp;gt;
	"\xf0\x28\x8c\x28", //'Invalid 4 Octet Sequence (in 4th Octet)' =&amp;gt;
	chr(0xE3) . chr(0x80) . chr(0x22), // Invalid malformed because 0x22 is not a valid second trailing byte following the leading byte 0xE3. http://www.unicode.org/reports/tr36/
	chr(0xF8) . chr(0x80) . chr(0x80) . chr(0x80) . chr(0x80), // Invalid UTF-8, overlong 5 byte encoding.
	chr(0xD0) . chr(0x01), // High code-point without trailing characters.
	chr(0xC0) . chr(0x80), // Overlong encoding of code point 0
	chr(0xF8) . chr(0x80) . chr(0x80) . chr(0x80) . chr(0x80), // Overlong encoding of 5 byte encoding
	chr(0xFC) . chr(0x80) . chr(0x80) . chr(0x80) . chr(0x80) . chr(0x80),  // Overlong encoding of 6 byte encoding
	chr(0xD0) . chr(0x01), // High code-point without trailing characters
	"Iñtërnâtiôn\xe9àlizætiøn", // invalid UTF-8 string
	"Iñtërnâtiônàlizætiøn\xfc\xa1\xa1\xa1\xa1\xa1Iñtërnâtiônàlizætiøn", // invalid six octet sequence
	"Iñtërnâtiônàlizætiøn\xf0\x28\x8c\xbcIñtërnâtiônàlizætiøn", // invalid four octet sequence
	"Iñtërnâtiônàlizætiøn \xc3\x28 Iñtërnâtiônàlizætiøn", // invalid two octet sequence
	"this is an invalid char '\xe9' here", // invalid ASCII string
	"Iñtërnâtiônàlizætiøn\xa0\xa1Iñtërnâtiônàlizætiøn", // invalid id between two and three
	"Iñtërnâtiônàlizætiøn\xf8\xa1\xa1\xa1\xa1Iñtërnâtiônàlizætiøn", //  invalid five octet sequence
	"Iñtërnâtiônàlizætiøn\xe2\x82\x28Iñtërnâtiônàlizætiøn", // invalid three octet sequence third
	"Iñtërnâtiônàlizætiøn\xe2\x28\xa1Iñtërnâtiônàlizætiøn", // invalid three octet sequence second
);
&lt;/pre&gt;&lt;hr /&gt;
&lt;p&gt;
Notes and more info:
&lt;/p&gt;
&lt;pre class="wiki"&gt;
	In  order  process  UTF-8 strings, you must build PCRE to include UTF-8
	support in the code, and, in addition,  you  must  call  pcre_compile()
	with  the  PCRE_UTF8  option  flag,  or the pattern must start with the
	sequence (*UTF8). When either of these is the case,  both  the  pattern
	and  any  subject  strings  that  are matched against it are treated as
	UTF-8 strings instead of strings of 1-byte characters.
   UTF-8 was devised in September 1992 by Ken Thompson, guided by design
   criteria specified by Rob Pike, with the objective of defining a UCS
   transformation format usable in the Plan9 operating system in a non-
   disruptive manner.
    Char. number range  |        UTF-8 octet sequence
      (hexadecimal)    |              (binary)
   --------------------+---------------------------------------------
   0000 0000-0000 007F | 0xxxxxxx
   0000 0080-0000 07FF | 110xxxxx 10xxxxxx
   0000 0800-0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx
   0001 0000-0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx
   A UTF-8 string is a sequence of octets representing a sequence of UCS
   characters.  An octet sequence is valid UTF-8 only if it matches the
   following syntax, which is derived from the rules for encoding UTF-8
   and is expressed in the ABNF of [RFC2234].
   UTF8-octets = *( UTF8-char )
   UTF8-char   = UTF8-1 / UTF8-2 / UTF8-3 / UTF8-4
   UTF8-1      = %x00-7F
   UTF8-2      = %xC2-DF UTF8-tail
   UTF8-3      = %xE0 %xA0-BF UTF8-tail / %xE1-EC 2( UTF8-tail ) /
                 %xED %x80-9F UTF8-tail / %xEE-EF 2( UTF8-tail )
   UTF8-4      = %xF0 %x90-BF 2( UTF8-tail ) / %xF1-F3 3( UTF8-tail ) /
                 %xF4 %x80-8F 2( UTF8-tail )
   UTF8-tail   = %x80-BF
&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="http://www.pcre.org/pcre.txt"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.pcre.org/pcre.txt&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://us1.php.net/manual/en/pcre.constants.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://us1.php.net/manual/en/pcre.constants.php&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://www.cl.cam.ac.uk/~mgk25/unicode.html#utf-8"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.cl.cam.ac.uk/~mgk25/unicode.html#utf-8&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://en.wikipedia.org/wiki/Unicode"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://en.wikipedia.org/wiki/Unicode&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://unicode.org/faq/utf_bom.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://unicode.org/faq/utf_bom.html&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://www.unicode.org/versions/Unicode6.1.0/ch03.pdf"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.unicode.org/versions/Unicode6.1.0/ch03.pdf&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://www.pcre.org/pcre.txt"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.pcre.org/pcre.txt&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://tools.ietf.org/rfc/rfc3629.txt"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://tools.ietf.org/rfc/rfc3629.txt&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://www.unicode.org/faq/utf_bom.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.unicode.org/faq/utf_bom.html&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://www.unicode.org/versions/Unicode5.2.0/ch03.pdf"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.unicode.org/versions/Unicode5.2.0/ch03.pdf&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://www.unicode.org/reports/tr36/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.unicode.org/reports/tr36/&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://tools.ietf.org/rfc/rfc3629.txt"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://tools.ietf.org/rfc/rfc3629.txt&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Related Tickets:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href="https://core.trac.wordpress.org/ticket/11175"&gt;https://core.trac.wordpress.org/ticket/11175&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a href="https://core.trac.wordpress.org/ticket/28786"&gt;https://core.trac.wordpress.org/ticket/28786&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29716 (orderby for meta values is broken in 4.0) created</title>
      
        <dc:creator>devarni</dc:creator>

      <pubDate>Sat, 20 Sep 2014 17:08:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29716</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29716/1411232906183334</guid>
      <description>&lt;p&gt;
'orderby' =&amp;gt; array(array('meta_key' =&amp;gt; 'date', 'order' =&amp;gt; 'DESC'))
&lt;/p&gt;
&lt;p&gt;
is not working anymore.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #24373 (WordPress Importer - Strict Standards compatibility) updated</title>
      
        <dc:creator>AndrewDon</dc:creator>

      <pubDate>Sat, 20 Sep 2014 16:28:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24373#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24373#comment:32/1411230513599094</guid>
      <description>&lt;p&gt;
Thank you much!
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/24373#comment:21" title="Comment 21"&gt;aubreypwd&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/24373#comment:20" title="Comment 20"&gt;unleashyourgeekinc&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Download &lt;code&gt;/trunk&lt;/code&gt; directly via &lt;a class="ext-link" href="http://downloads.wordpress.org/plugin/wordpress-importer.zip"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://downloads.wordpress.org/plugin/wordpress-importer.zip&lt;/a&gt; and upload (remember to deactivate and remove your current importer plugin) and see if that works. Per @nacin above this is fixed in trunk but just hasn't been tagged for release.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29708 (WordPress 4.0 decides whether the URL is http or httpS based on site ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sat, 20 Sep 2014 15:44:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29708#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29708#comment:4/1411227869223830</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is indeed a result of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28610" title="Force SSL on the frontend via canonical when the home URL uses the ..."&gt;[28610]&lt;/a&gt;. Altering &lt;code&gt;FORCE_SSL_ADMIN&lt;/code&gt; won't affect this behaviour.
&lt;/p&gt;
&lt;p&gt;
I'm inclined to say that this is a server configuration issue. Your load balancer should be letting your web server know that this is an HTTPS request.
&lt;/p&gt;
&lt;p&gt;
If your load balancer is running Nginx then this is achieved with the &lt;code&gt;HTTPS&lt;/code&gt; parameter of the &lt;code&gt;fastcgi_param&lt;/code&gt; directive. With CloudFlare, I'm not sure which setting needs configuring but it should be straight forward.
&lt;/p&gt;
&lt;p&gt;
The question is, is this a common enough misconfiguration to warrant reverting &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28610" title="Force SSL on the frontend via canonical when the home URL uses the ..."&gt;[28610]&lt;/a&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29715 (Not-unique accesskey values may break quick edit and bulk edit form ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 20 Sep 2014 15:42:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29715#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29715#comment:2/1411227741600330</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29715 (Not-unique accesskey values may break quick edit and bulk edit form ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 20 Sep 2014 15:40:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29715#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29715#comment:1/1411227640840099</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>29715.patch attached to Ticket #29715</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 20 Sep 2014 15:35:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29715/29715.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29715/29715.patch/1411227337219559</guid>
      <description>&lt;p&gt;
remove accesskey attributes from Quick Edit and Bulk Edit in posts, categories and tags listings
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29715 (Not-unique accesskey values may break quick edit and bulk edit form ...) created</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 20 Sep 2014 15:33:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29715</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29715/1411227208080985</guid>
      <description>&lt;p&gt;
Please try this in Chrome:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;go in the posts listing screen
&lt;/li&gt;&lt;li&gt;don't click anything, just activate the "s" accesskey (e.g. Alt + s on Windows)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
or:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;go in the posts listing screen
&lt;/li&gt;&lt;li&gt;click "Quick Edit" for a post
&lt;/li&gt;&lt;li&gt;activate the "s" accesskey (e.g. Alt + s on Windows)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
You've just submitted the whole inline-edit/bulk-edit form. &lt;a class="ext-link" href="https://cloudup.com/ck9MggKKb8e"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;see screenshot&lt;/a&gt;, notice all the parameters in your browser's address bar. When the page reloads, it will try to display posts based on those (mostly empty) parameters and the result will be 0 posts.
&lt;/p&gt;
&lt;p&gt;
Try the same in Firefox (Alt + Shift + s on Windows): nothing happens. Click "Quick Edit" and try Alt + Shift + c to cancel: Firefox won't even move the focus from the focused input.
&lt;/p&gt;
&lt;p&gt;
Browsers behaviour is really messy with not-unique accesskey values. As far as I see there are 3 places in WordPress where this happens:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;post listings
&lt;/li&gt;&lt;li&gt;categories and tags listings
&lt;/li&gt;&lt;li&gt;Quicktags in the edit post and new post screens
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
About 1 and 2, please notice that when you "Quick edit", the "inline edit" part of the form (hidden with CSS) gets cloned and populated. Of course, accesskey attributes get cloned too.
&lt;/p&gt;
&lt;p&gt;
The proposed patch simply removes accesskeys for 1 and 2. For a strong opinion about accesskeys, see &lt;a href="https://core.trac.wordpress.org/ticket/29358#comment:2"&gt;@joedolson comment&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
About Quicktags, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29358" title="#29358: defect (bug): Remove the 'accesskey` attributes from Quicktags buttons (closed: fixed)"&gt;#29358&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28173" title="#28173: defect (bug): Add Media shortcut in TinyMCE is not working properly (closed: fixed)"&gt;#28173&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21460" title="#21460: defect (bug): The accesskeys in Quicktags don't work in all browsers (closed: worksforme)"&gt;#21460&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
There's one more accesskey: the "p" on the Publish button. I'd suggest to remove that too unless there are strong opinions to keep it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29710 (Add hooks to wpdb's insert(), update(), delete() and similar methods) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sat, 20 Sep 2014 15:31:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29710#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29710#comment:2/1411227117153575</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
We had a chat about this in IRC prior to borekb opening this ticket. &lt;a class="ext-link" href="https://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-09-19&amp;amp;sort=asc#m926092"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Chat log here&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
My only concern with the proposed actions/filters is that not everything uses the &lt;code&gt;wpdb::insert()&lt;/code&gt; and &lt;code&gt;wpdb::update()&lt;/code&gt; methods. If a plugin on your site performs an INSERT or UPDATE using &lt;code&gt;wpdb::query()&lt;/code&gt;, then the proposed filters won't see that query. This means, for example, that if you're logging INSERTs using the proposed new filter then you'll also need to use the existing &lt;code&gt;query&lt;/code&gt; filter to guarantee you don't miss any INSERTs, thus rendering the proposed filters redundant.
&lt;/p&gt;
&lt;p&gt;
While the filters are a good idea in theory, I don't think they provide any actual benefit. I'm open to being swayed though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29358 (Remove the 'accesskey` attributes from Quicktags buttons) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 20 Sep 2014 14:40:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29358#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29358#comment:4/1411224038413019</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29358" title="#29358: defect (bug): Remove the 'accesskey` attributes from Quicktags buttons (closed: fixed)"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
When there are several instances of Quicktags on the page, using the "accesskey" shortcut will focus the corresponding button in the last instance, even if it's not visible.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Spent a whole day investigating on this :) and then came across this ticket.
Things are even trickier: Chrome will always try to activate the last instance but other browsers behave differently. Here's &lt;a class="ext-link" href="http://www.456bereastreet.com/archive/201005/if_you_use_the_accesskey_attribute_specify_unique_values/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;what happens in different browsers when two or more elements share the same accesskey value&lt;/a&gt;. That post is a bit old (2010) but still relevant and what applies to "Safari" it's valid for Chrome too.
&lt;/p&gt;
&lt;p&gt;
Btw what's described there it's just the basic behavior. I've run some tests and when elements are hidden or cloned things get weirder and weirder especially in Firefox.
&lt;/p&gt;
&lt;p&gt;
I'd definitely agree with @joedolson: remove them all, consider to implement instead keyboard shortcuts that match the ones used in TinyMCE (but is it worth?).
&lt;/p&gt;
&lt;p&gt;
Accesskeys may be useful (and it's still a matter of debate between experts) just when limited to a very small (no more than 4-5), easy to remember, set of main actions that are consistent across an application and when numeric values are used to reduce conflicts, for example:
0: Help
1: Skip to content
2: Navigation
3: Search
but any different use should be avoided anywhere.
Not to mention that using letters leads to language issues: for example, "b" and "i" suggest "bold" and "italic" but just for English speakers.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29714 (user_can_access_admin_page() returning false for edit.php?post_type=CPT) updated</title>
      
        <dc:creator>bobbingwide</dc:creator>

      <pubDate>Sat, 20 Sep 2014 13:00:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29714#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29714#comment:1/1411218003981689</guid>
      <description>&lt;p&gt;
&lt;strong&gt;Workaround&lt;/strong&gt;
The above fix can be implemented as a workaround.
&lt;/p&gt;
&lt;p&gt;
Create a filter function for "user_has_cap". In that filter function, when the capability being checked for is that which you have defined ( e.g. "edit_oik_sites"), add the following logic.
&lt;/p&gt;
&lt;pre class="wiki"&gt;global $pagenow;
if ( $pagenow == "edit.php" &amp;amp;&amp;amp; isset( $_REQUEST['post_type'] ) ) {
        $pagenow .= '?post_type=' . $_REQUEST['post_type' ];
}
&lt;/pre&gt;&lt;p&gt;
This will then allow the failing function ( user_can_access_admin_page() ) to return true.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29714 (user_can_access_admin_page() returning false for edit.php?post_type=CPT) created</title>
      
        <dc:creator>bobbingwide</dc:creator>

      <pubDate>Sat, 20 Sep 2014 12:30:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29714</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29714/1411216226278603</guid>
      <description>&lt;p&gt;
I have a Custom Post Type (CPT) for which I intend to allow registered subscribers the capability to edit posts, but not create posts or manage the custom taxonomies for the posts.
&lt;/p&gt;
&lt;p&gt;
In this example the CPT is "oik_site" - plural label "Sites"
&lt;/p&gt;
&lt;p&gt;
When the registered user is logged and viewing the Dashboard then the admin menu correctly shows the only available option; Sites - which invokes wp-admin/edit.php?post_type=oik_site
&lt;/p&gt;
&lt;p&gt;
When the user clicks on the link WordPress dies with "You do not have sufficient permissions to access this page."
&lt;/p&gt;
&lt;p&gt;
The expected result is that the user should be shown the list of sites, without the Add New button.
&lt;/p&gt;
&lt;p&gt;
I have tracked the problem down to what I believe to be a bug in user_can_access_admin_page().
&lt;/p&gt;
&lt;p&gt;
The "oik_site" CPT is defined with
&lt;/p&gt;
&lt;pre class="wiki"&gt;  $post_type_args['capability_type'] = 'oik_site';
  $post_type_args['capabilities'] = array( 'create_posts' =&amp;gt; 'create_oik_sites' );
  $post_type_args['map_meta_cap'] = true;
&lt;/pre&gt;&lt;p&gt;
The 'create_posts' capability is defined as 'create_oik_sites', overriding the default 'edit_oik_sites'.
&lt;/p&gt;
&lt;p&gt;
Subscribers are given the 'edit_oik_sites' capability only.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Where it goes wrong...&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
The processing in wp-admin/includes/menu.php has correctly checked the user's capability to "edit_oik_sites" and the admin menu has been simplified so that the 'All Sites' sub menu item is no longer displayed.
Since the user doesn't have either create_oik_sites nor manage_categories the Add New and Custom Taxonomy submenu items have been deleted.
Everything seems fine until we call user_can_access_admin_page().
Here it determines $parent to be null and $pagenow to be "edit.php".
&lt;/p&gt;
&lt;p&gt;
$wp_menu_nopriv is correctly set to the menu items that the subscriber cannot use
&lt;/p&gt;
&lt;pre class="wiki"&gt;    [edit.php] =&amp;gt; 1
    [upload.php] =&amp;gt; 1
    [link-manager.php] =&amp;gt; 1
    [edit.php?post_type=page] =&amp;gt; 1
    [edit-comments.php] =&amp;gt; 1
    ...
&lt;/pre&gt;&lt;p&gt;
Note: edit.php?post_type=oik_site IS NOT SET in the $wp_menu_nopriv array.
&lt;/p&gt;
&lt;p&gt;
Since these tests are true the function returns false.
&lt;/p&gt;
&lt;pre class="wiki"&gt; if ( empty( $parent) ) {
    if ( isset( $_wp_menu_nopriv[$pagenow] ) )
      return false;
&lt;/pre&gt;&lt;p&gt;
Had the second test taken into account the post_type being edited then this would not have failed.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Proposed fix&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Adding the following code after the test on empty( $parent ) gives the expected results.
&lt;/p&gt;
&lt;pre class="wiki"&gt;    if ( $pagenow == "edit.php" &amp;amp;&amp;amp; isset( $_REQUEST['post_type'] ) ) {
      $pagenow .= '?post_type=' . $_REQUEST['post_type' ];
    }
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21352 (wp_lostpassword_url() on multisite) updated</title>
      
        <dc:creator>oldmankit</dc:creator>

      <pubDate>Sat, 20 Sep 2014 10:20:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21352#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21352#comment:19/1411208445477521</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Anyway, on the site I'm working on, here is the plugin I put together that updates the lost password URL and the reset URL in the email that goes out to be for the site where the lost password request originated rather than the primary domain. It basically swaps out network_site_url() for site_url().
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://gist.github.com/strangerstudios/9487278"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gist.github.com/strangerstudios/9487278&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I tried this plugin but it didn't seem to have any effect. (Copied php file to plugins folder, as network admin I clicked 'Activate for all sites'.) The emails remained unchanged.
&lt;/p&gt;
&lt;p&gt;
I also tried patch &lt;a href="https://core.trac.wordpress.org/attachment/ticket/21352/lost_password_multisite_patch.diff"&gt;https://core.trac.wordpress.org/attachment/ticket/21352/lost_password_multisite_patch.diff&lt;/a&gt; attached to this bug, which also had no effect. The emails being sent to lost password users again remained unchanged.
&lt;/p&gt;
&lt;p&gt;
I wonder what I'm doing wrong.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20564 (Framework for storing revisions of Post Meta) updated</title>
      
        <dc:creator>Andrew Moawad</dc:creator>

      <pubDate>Sat, 20 Sep 2014 04:14:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20564#comment:112</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20564#comment:112/1411186461290739</guid>
      <description></description>
      <category>editedticket</category>
    </item><item>
      <title>11903.wp-admin.includes.misc.php.2.diff attached to Ticket #11903</title>
      
        <dc:creator>loushou</dc:creator>

      <pubDate>Sat, 20 Sep 2014 02:45:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11903/11903.wp-admin.includes.misc.php.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11903/11903.wp-admin.includes.misc.php.2.diff/1411181106009191</guid>
      <description>&lt;p&gt;
THE CORRECT PATCH. the first one was an earlier, bad version i had
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>11903.wp-admin.includes.misc.php.diff attached to Ticket #11903</title>
      
        <dc:creator>loushou</dc:creator>

      <pubDate>Sat, 20 Sep 2014 02:42:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11903/11903.wp-admin.includes.misc.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11903/11903.wp-admin.includes.misc.php.diff/1411180969928323</guid>
      <description>&lt;p&gt;
patch for the mod_rewrite config to only write the file when needed
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11903 (insert_with_markers is not threadsafe) updated</title>
      
        <dc:creator>loushou</dc:creator>

      <pubDate>Sat, 20 Sep 2014 02:42:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11903#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11903#comment:22/1411180928144307</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
After reading this whole thing, I totally agree that the right approach is to only write the config files when they actually have changes that need writing, instead of some other approach of limiting writing. A little digging shows that the IIS write functions already seem to do this. The mod_rewrite config writing function however does not seem to cover this yet.
&lt;/p&gt;
&lt;p&gt;
The function already checks if the block exists, but it does not make any distinction of whether it is the same block or not, and just blindly overwrites it. I adapted the function to test if the found block is the same block we are writing. If it is, we just don't write. If it is not the same block, then we replace it. Also if the file does not exist, or the block does not exist already, we still add it to the end of the file.
&lt;/p&gt;
&lt;p&gt;
Seems to work on 4.0+ (and the current nightly). Discuss.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29713 (In recurring problem, post edit box gets stuck at huge size) updated</title>
      
        <dc:creator>CK MacLeod</dc:creator>

      <pubDate>Sat, 20 Sep 2014 02:20:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29713#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29713#comment:2/1411179602234959</guid>
      <description>&lt;p&gt;
One additional note - after hacking class-wp-editor.php to a simple height setting, I get &lt;strong&gt;new&lt;/strong&gt; posts at a usable size - both when added and when saved - but older ones are still living large, and there is no text-area re-size handle in edit either on older or newer posts.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29713 (In recurring problem, post edit box gets stuck at huge size) updated</title>
      
        <dc:creator>CK MacLeod</dc:creator>

      <pubDate>Sat, 20 Sep 2014 01:45:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29713#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29713#comment:1/1411177537777905</guid>
      <description>&lt;p&gt;
Initial investigation suggests that the old hacks no longer work, and my attempts to change class-wp-editor.php at lines 131, 132, or 157 to lower height values have had no effect. Nor have I had any luck running
&lt;/p&gt;
&lt;pre class="wiki"&gt;setUserSetting('ed_size', 300);
&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;
via the browser console. After running it, the console tells me ed_size is 300, but the box is unchanged, still vertically larger than my screen. Refreshes, cache clearing, and deleting WP cookies have no effect. Same problem on Chrome.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Sat, 20 Sep 2014 01:27:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:70</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:70/1411176421040553</guid>
      <description>&lt;p&gt;
Saw this come through my e-mail and was so happy!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>rzen</dc:creator>

      <pubDate>Sat, 20 Sep 2014 01:24:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:69</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:69/1411176244502531</guid>
      <description>&lt;p&gt;
John, you magnificent and glorious man, these performance stats are excellent! I'm going to put it through some paces on the code where @sc0ttkclark and I first noticed the issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29713 (In recurring problem, post edit box gets stuck at huge size) created</title>
      
        <dc:creator>CK MacLeod</dc:creator>

      <pubDate>Sat, 20 Sep 2014 00:46:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29713</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29713/1411173993089140</guid>
      <description>&lt;p&gt;
Similar to a bug or defect affecting previous versions - see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23042" title="#23042: defect (bug): Post edit page may become almost unusable and textarea resize not saved (closed: fixed)"&gt;#23042&lt;/a&gt; for bug affecting 3.5, and reports of similar problems affecting 3.9 (#re-opened as &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28000" title="#28000: defect (bug): Editor frame becomes huge after dragging the corner to resize it (closed: fixed)"&gt;#28000&lt;/a&gt;), upon being widened too far (vertically for sure, not sure about horizontally), the editor box gets stuck: The re-size corner handles disappear, and there is no way to re-capture them (even after a re-install of WP).
&lt;/p&gt;
&lt;p&gt;
Fingers crossed the old solutions or something like them will work, but obviously not desirable behavior.
&lt;/p&gt;
&lt;p&gt;
(Discovered while using Firefox 32.0.1 - not yet checked on other browsers/versions, but, as noted, this isn't new.)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10743 (WP rewrite rule bug with &amp; in url path) closed</title>
      
        <dc:creator>loushou</dc:creator>

      <pubDate>Sat, 20 Sep 2014 00:45:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10743#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10743#comment:12/1411173938986442</guid>
      <description>worksforme: &lt;p&gt;
This problem is already solved in 4.0. Looks like a simple patch to the &lt;code&gt;WP_MatchesMapRegex()&lt;/code&gt; class solved the problem:
&lt;/p&gt;
&lt;pre class="wiki"&gt;  public function callback($matches) {
    $index = intval(substr($matches[0], 9, -1));
    return ( isset( $this-&amp;gt;_matches[$index] ) ? urlencode($this-&amp;gt;_matches[$index]) : '' );
  }
&lt;/pre&gt;&lt;p&gt;
The urlencode bit, on the return line, resolves the &amp;amp; issue.
&lt;/p&gt;
&lt;p&gt;
This should be closed.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #8905 (Category pagination broken with certain permalink structures) updated</title>
      
        <dc:creator>loushou</dc:creator>

      <pubDate>Sat, 20 Sep 2014 00:21:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8905#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8905#comment:13/1411172500410297</guid>
      <description>&lt;p&gt;
This is already fixed. Unless there is some new issue that is not clear here, then this should probably be closed. @SergeyBiryukov's reproduction steps produce the second page now, not a 404. It's not my place to close this, but I'm pretty sure it can be closed as resolved.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>