<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #8622 (HTTP API Fallover &amp; non-blocking order doesnt appear to be working) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 26 Mar 2011 23:55:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8622#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8622#comment:22/1301183739603033</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
That you've got a design problem doesn't come to your mind while your making that many words, right? (Not meant to sound rude, it's an actual question, not an attack, we need to deal with what we have so far)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No, I agree with you there, It's a design problem for unit testing that you have to filter which transport to use, it however, is not a design problem for users of the API as they should never attempt to (or have a need to) use a transport directly.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That might just work, however, it depends on what you mean by failure. If there is a network issue preventing any of the transports from working, then you'll blacklist all of the transports from being used. There would have to be a way to check by what errors are considered the Transport not working.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Which is exactly why we do not have fallover in core, it hasn't been there since day1 (even though it was intended) and there has been no need to add it.
&lt;/p&gt;
&lt;p&gt;
In most cases where a transport has failed, it's failed consistently (cURL and fsockopen) with the same error condition (DNS and no connectivity through that transport).
&lt;/p&gt;
&lt;p&gt;
To add fallover and enabled by default will increase the timeouts that users experience.
Whilst a user should never be waiting on a HTTP request to complete in general, we do force that upon them in the Updaters/Installers as well as a few other locations related to media. To wait for all the transports (or a 2nd transport) to fail in many cases would lead to a bad user experience ("Its Slow!")
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13777 (Consolidate WP_Http argument processing into a single class) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 26 Mar 2011 23:49:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13777#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13777#comment:10/1301183373423218</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Then my opinion remains the same, The Core HTTP API should require users call the handler (WP_HTTP) rather than subclasses directly, they should all have the same support on every system and if they don't, then the WP_HTTP handler should not allocate a request to one.
&lt;/p&gt;
&lt;p&gt;
I realise this may differ from your original intentions of the HTTP API, but my opinion is being based on what I feel is best for WordPress developers AND users as a whole; that is, that everything should "just work" and a plugin relying upon a certain transport does not fit that idea to me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16967 (Adding cat=-# removes sorting) closed</title>
      
        <dc:creator>greuben</dc:creator>

      <pubDate>Sat, 26 Mar 2011 23:48:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16967#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16967#comment:6/1301183281790923</guid>
      <description>duplicate: &lt;p&gt;
See &lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/16812#comment:9"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/ticket/16812#comment:9&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Patch on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16826" title="#16826: enhancement: Optimize SQL for term exclusions (closed: invalid)"&gt;#16826&lt;/a&gt; seems to solve this problem
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16967 (Adding cat=-# removes sorting) updated</title>
      
        <dc:creator>greuben</dc:creator>

      <pubDate>Sat, 26 Mar 2011 23:41:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16967#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16967#comment:5/1301182866275523</guid>
      <description>&lt;p&gt;
Dupe/Related to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16812" title="#16812: defect (bug): Taxonomy queries without joins ignore order by (closed: wontfix)"&gt;#16812&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Sat, 26 Mar 2011 23:02:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:23/1301180549637355</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16974#comment:22" title="Comment 22"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16974#comment:18" title="Comment 18"&gt;sc0ttkclark&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Gotcha, I see what you mean here though I believe &lt;a class="ext-link" href="http://wordpress.org/news/?p=100and"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/news/?p=100and&lt;/a&gt; itself is a bug and should be redirected to normalize 'p' in the query (and other places).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm pretty sure there's a canonical redirect in place for this case. If not, there should be.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Only redirects if you are using non-p permalinks. Like in the case of this site:
&lt;/p&gt;
&lt;p&gt;
pcgamingcorner.com/wordpress/?p=820and
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Mar 2011 22:59:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:22/1301180376224112</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16974#comment:18" title="Comment 18"&gt;sc0ttkclark&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Gotcha, I see what you mean here though I believe &lt;a class="ext-link" href="http://wordpress.org/news/?p=100and"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/news/?p=100and&lt;/a&gt; itself is a bug and should be redirected to normalize 'p' in the query (and other places).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm pretty sure there's a canonical redirect in place for this case. If not, there should be.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Sat, 26 Mar 2011 22:57:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:21/1301180268810465</guid>
      <description>&lt;p&gt;
You're the boss
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 26 Mar 2011 22:56:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:20/1301180217409226</guid>
      <description>&lt;p&gt;
At that point, why even use absint()? Or only use absint() after using is_numeric(). Core won't use this, and you're not required to leverage absint.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Sat, 26 Mar 2011 22:55:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:19/1301180125807586</guid>
      <description>&lt;p&gt;
Was thinking more (one more try), perhaps absint could have an additional variable, so it'd be like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function absint ($maybeint, $strict = false) {
    if ( $strict &amp;amp;&amp;amp; ! is_numeric ( trim ( $maybeint ) ) ) {
        return 0;
    }
    return abs( intval( $maybeint ) );
}
&lt;/pre&gt;&lt;p&gt;
This seems like a perfect solution, which wouldn't run the is_numeric / trim unless told to do so by the usage of absint($value,true);
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Sat, 26 Mar 2011 22:47:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:18/1301179673455135</guid>
      <description>&lt;p&gt;
Gotcha, I see what you mean here though I believe &lt;a class="ext-link" href="http://wordpress.org/news/?p=100and"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/news/?p=100and&lt;/a&gt; itself is a bug and should be redirected to normalize 'p' in the query (and other places). absint hides issues like this, which is what I'm against.
&lt;/p&gt;
&lt;p&gt;
I'll let it go, will put my own solution together for usage in my work.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Sat, 26 Mar 2011 22:44:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:17/1301179451203738</guid>
      <description>&lt;p&gt;
That's the way I was leading when talking to him in IRC as well.  I think &lt;code&gt;absint()&lt;/code&gt; is just used in too many places to make a change like this.
&lt;/p&gt;
&lt;p&gt;
I'd instead recommend that if a site wants to handle things differently they grab p and filter it before it gets processed normally.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 26 Mar 2011 22:24:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:16/1301178297098094</guid>
      <description>&lt;p&gt;
A change like this has huge potential cost, and offers no practical benefit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 26 Mar 2011 22:23:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:15/1301178209105750</guid>
      <description>&lt;p&gt;
Strong +1 for the wontfix.
&lt;/p&gt;
&lt;p&gt;
Imagine a ?p= URL that was made clickable, but the trailing whitespace was lost. &lt;a class="ext-link" href="http://wordpress.org/news/?p=100and"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/news/?p=100and&lt;/a&gt; would work. So would &lt;code&gt;http://wordpress.org/news/?p=100)&lt;/code&gt;, in systems where the ) becomes clickable.
&lt;/p&gt;
&lt;p&gt;
That's just one specific instance. I am also for wontfix on the theory basis. absint() doesn't perform validation, it performs sanitization. We're using core PHP functions here, so this is expected behavior. I see no reason to modify this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 26 Mar 2011 22:22:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:14/1301178120056456</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16974#comment:13" title="Comment 13"&gt;sc0ttkclark&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@westi - Why would you want ?p=100test to work?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Because urls end up getting bunched up against other text by accident in comments, emails etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Sat, 26 Mar 2011 22:19:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:13/1301177969326806</guid>
      <description>&lt;p&gt;
@westi - Why would you want ?p=100test to work? And what plugin / theme code would break from this? If anyone can give me an example, I'd love to see it because I just don't think there are any. Maybe that's me being naive, but I haven't heard anyone provide any use-cases for absint usage within core or plugins/themes which the result of absint should allow for non-numeric characters.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) closed</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 26 Mar 2011 22:15:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:12/1301177758285347</guid>
      <description>wontfix: &lt;p&gt;
I don't see a valid reason for changing this.
&lt;/p&gt;
&lt;p&gt;
In fact I see more valid reasons for keeping what we have.
&lt;/p&gt;
&lt;p&gt;
I would much rather that: &lt;a class="ext-link" href="http://wordpress.org/news/?p=100test"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/news/?p=100test&lt;/a&gt; still worked than didn't work and I don't want to possibly break a whole load of plugin / theme code just to chage this function to work how you think it should work rather than how it works.
&lt;/p&gt;
&lt;p&gt;
PHP is by design a loosely typed language and WP itself lives within this loosely typed world.
&lt;/p&gt;
&lt;p&gt;
The whole point of absint is to make sure that the thing you are treating as an integer really is treated as an integer not a string so that when you later use this value you get what you expect.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16923 ("Install from URL" for themes and plugins) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 26 Mar 2011 21:52:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16923#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16923#comment:7/1301176346577626</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="ext-link" href="http://api.wordpress.org/themes/malware-check/1.0/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://api.wordpress.org/themes/malware-check/1.0/&lt;/a&gt; now works.
&lt;/p&gt;
&lt;p&gt;
Accepts &lt;code&gt;$_GET['url']&lt;/code&gt;. Response codes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;-1 = it's a malformed URL. Ideally we should never send this to the API.
&lt;/li&gt;&lt;li&gt;0 = it's a blacklisted URL. This is currently populated with a few domains that offer spam/malware themes.
&lt;/li&gt;&lt;li&gt;1 = it passes the checks.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>16974.3.patch attached to Ticket #16974</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Sat, 26 Mar 2011 19:20:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16974/16974.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16974/16974.3.patch/1301167217791307</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11049 (Page Preview does not autosave page template) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 26 Mar 2011 19:19:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11049#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11049#comment:9/1301167193713401</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11049#comment:8" title="Comment 8"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That's not a glitch, it's a feature :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Oh, indeed. The patch itself has a glitch, in that it attempts to add post meta to the revision, but then pulls it from be post. Which works due to our API, but I'd think it'd be better to add it to the post directly, otherwise it masks what's going on.
&lt;/p&gt;
&lt;p&gt;
The lower level API will never change, so it's a convenient workaround.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Sat, 26 Mar 2011 19:19:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:11/1301167140089288</guid>
      <description>&lt;p&gt;
Absolutely correct @duck_, My wife and I just had a baby a week ago and have suffered the resulting #fail on a simple piece of code :)
&lt;/p&gt;
&lt;p&gt;
Patching now..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11049 (Page Preview does not autosave page template) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 26 Mar 2011 19:11:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11049#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11049#comment:8/1301166668447099</guid>
      <description>&lt;p&gt;
That's not a glitch, it's a feature :)
&lt;/p&gt;
&lt;p&gt;
This came up shortly after we added revisions, in some circumstances post meta was attached to the revision and not the actual post, so the meta was more or less "lost".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11616 (Text copied form visual editor don't store font color) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 26 Mar 2011 18:56:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11616#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11616#comment:9/1301165774365539</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11616#comment:8" title="Comment 8"&gt;solarissmoke&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
...so I'm not sure it's a good idea.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agree. Don't think it's a good idea to allow pasting of arbitrary HTML in the Visual editor. Apart from the security concerns, it can conflict with the current theme (CSS) and break the front end.
&lt;/p&gt;
&lt;p&gt;
Also it is very easy to add for people that really need that. All settings are available &lt;a class="ext-link" href="http://tinymce.moxiecode.com/wiki.php/Plugin:paste"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;here&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Sat, 26 Mar 2011 18:50:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:10/1301165452679365</guid>
      <description>&lt;p&gt;
The logic of your if statement appears to be the wrong way around, &lt;code&gt;! is_numeric&lt;/code&gt; surely.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16054 (Back to Authors and Users should say Back to Users) updated</title>
      
        <dc:creator>PeteMall</dc:creator>

      <pubDate>Sat, 26 Mar 2011 18:48:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16054#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16054#comment:2/1301165287694724</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Mar 2011 18:44:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:9/1301165075796423</guid>
      <description>&lt;p&gt;
Yeah, there's no built-in function for strict casting. Might have to resort to a simple regex, since most cases where absint() is used is for validating a database ID.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8622 (HTTP API Fallover &amp; non-blocking order doesnt appear to be working) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Sat, 26 Mar 2011 18:38:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8622#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8622#comment:21/1301164719171707</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/8622#comment:19" title="Comment 19"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As for unit testing,
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Very simple to do. Filter the ::test() methods to select which transport you wish to test, test, remove filters, rinse repeat.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If you are writing your tests this way, then you are doing functional testing. If you aren't unit testing the individual transports as well, then you are doing it wrong.
&lt;/p&gt;
&lt;p&gt;
&lt;br /&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/8622#comment:19" title="Comment 19"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
My suggestion here is to push the changes needed through &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16870" title="#16870: enhancement: consider disabling HTTP transport after multiple failed requests (closed: maybelater)"&gt;#16870&lt;/a&gt;, specifically, when a transport fails, progressivly mark it as unusable.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;br /&gt;
That might just work, however, it depends on what you mean by failure. If there is a network issue preventing any of the transports from working, then you'll blacklist all of the transports from being used. There would have to be a way to check by what errors are considered the Transport not working.
&lt;/p&gt;
&lt;p&gt;
Also, provided that the first transport should normally almost always work, you'd only ever be using the first transport. The failure might be network related and in which case the next transport might be unaffected by it. If you wish, you may fall back to two transports either fsockopen or streams with fsockopen as the preferred alternative if available.
&lt;/p&gt;
&lt;p&gt;
&lt;br /&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/8622#comment:19" title="Comment 19"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The alternative is to adding an extra parameter similar to the block of code &lt;a class="ext-link" href="http://core.trac.wordpress.org/attachment/ticket/8622/8622.4.diff"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;starting line 206 in this patch&lt;/a&gt;, which would be purely for a plugins usage.
&lt;/p&gt;
&lt;p&gt;
In core we're striving for a HTTP API which just works, plugin authors shouldn't have to do anything more than request it, and handle an error condition being returned, but at the same time, it shouldn't cause unnecessary slowdowns for the user, failing over to the next transport over and over on a plugin's request should not be possible.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Failing when the first transport fails and then conditionally preventing that transport from being used as opposed just dropping to the next available transport. I don't know, perhaps both might be better. I would say that if you are doing an HTTP request that is nonblocking, that performance and time doesn't really matter and what you want is the request to work regardless of how long it takes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Sat, 26 Mar 2011 18:36:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:8/1301164589577810</guid>
      <description>&lt;p&gt;
Went the direction if is_numeric vs is_int so that it would avoid issues with strings not being handles as numbers (is_int requires an integer)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Mar 2011 18:32:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:7/1301164379894663</guid>
      <description>&lt;p&gt;
Yeah, it seems &lt;code&gt;intval()&lt;/code&gt; is equivalent to using &lt;code&gt;(int)&lt;/code&gt;, so nevermind.
&lt;/p&gt;
&lt;p&gt;
Note that &lt;a class="ext-link" href="http://www.php.net/manual/en/function.is-numeric.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;is_numeric()&lt;/a&gt; will also match floats and other representations.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Sat, 26 Mar 2011 18:25:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:6/1301163956650883</guid>
      <description>&lt;p&gt;
@scribu - It is, I just believe that if $maybeint contains non-numeric characters it should return zero to avoid canonical issues with the values it deals with. Otherwise, a significant number of absint usages in WP Core would need additional checks to prevent the usage of non-numeric characters in their values.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Mar 2011 18:24:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:5/1301163854792589</guid>
      <description>&lt;p&gt;
The original commit for absint() also mentioned casting: &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6222" title="Introducing absint() for casting to an absolute integer. see #4762"&gt;[6222]&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13777 (Consolidate WP_Http argument processing into a single class) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Sat, 26 Mar 2011 18:18:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13777#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13777#comment:9/1301163520474329</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13777#comment:8" title="Comment 8"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
After reading your comment, The only other option I could understand is that you're suggesting moving all the processing to a separate class so that you can call WP_HTTP directly OR call a subclass directly?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes. Right now, if you want to use a Transport and want to send post data, something the WP_HTTP does automatically to set the headers and format the post data, if array; you'd have to duplicate that code before you use the Transport. Goes for other features of WP_HTTP::request() handling as well. Since the WP_HTTP::request() received / receives the majority of support and feature additions, it is better to consolidate all of the code to a single place (a later patch that I never uploaded used a function instead) and call it for each of the transports.
&lt;/p&gt;
&lt;p&gt;
In this way, the WP_HTTP::request() only handles calling the transports and passing the processed information. It would shorten the WP_HTTP::request() to a single action (there is a term used for OOP that I can't remember at the moment, meaning limiting a method and, or class to a single task or service). Right now the WP_HTTP::request() is doing two things, processing the args and running through the working transports.
&lt;/p&gt;
&lt;p&gt;
This ticket is to move the processing of the args out of WP_HTTP::request() to allow for the Transports to use the same code without duplication.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Mar 2011 18:16:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:4/1301163414190413</guid>
      <description>&lt;p&gt;
I always assumed that the definition for absint was &lt;code&gt;return abs( (int) $maybeint ) );&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Apparently not.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Sat, 26 Mar 2011 17:59:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:3/1301162359896345</guid>
      <description>&lt;p&gt;
We talked a little on IRC.  What he's trying to fix is that &lt;code&gt;absint( '123abc' )&lt;/code&gt; returns 123 but &lt;code&gt;absint( 'abc123' )&lt;/code&gt; returns 0.
&lt;/p&gt;
&lt;p&gt;
His original issue came from the fact that &lt;a class="ext-link" href="http://wordpress.org/news/?p=100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/news/?p=100&lt;/a&gt; is the same as &lt;a class="ext-link" href="http://wordpress.org/news/?p=100test"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/news/?p=100test&lt;/a&gt; but not the same as &lt;a class="ext-link" href="http://wordpress.org/news/?p=test100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/news/?p=test100&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16974.2.patch attached to Ticket #16974</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Sat, 26 Mar 2011 17:57:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16974/16974.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16974/16974.2.patch/1301162278169679</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Sat, 26 Mar 2011 17:53:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:2/1301162005961109</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Sat, 26 Mar 2011 17:50:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974#comment:1/1301161855028827</guid>
      <description>&lt;p&gt;
Oops, sorry for the tab difference, my editor is set to use spaces vs tabs.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16974.patch attached to Ticket #16974</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Sat, 26 Mar 2011 17:50:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16974/16974.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16974/16974.patch/1301161812769988</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16974 (absint to return 0 for values with non-numeric characters) created</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Sat, 26 Mar 2011 17:49:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16974</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16974/1301161795458425</guid>
      <description>&lt;p&gt;
Currently, if you put in a string into absint which contains non-numeric characters after numeric characters it will return the number before the non-numeric characters as the number, which I believe isn't the valid return for absint($maybeint)
&lt;/p&gt;
&lt;p&gt;
The solution I am proposing is to check if $maybeint isn't numeric, and if not then return 0;
&lt;/p&gt;
&lt;p&gt;
See the attached patch.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16972 (Input type radio losts its checked focus when metabox is dragged) updated</title>
      
        <dc:creator>ldebrouwer</dc:creator>

      <pubDate>Sat, 26 Mar 2011 17:35:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16972#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16972#comment:3/1301160948673076</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is a bug/feature in the jQuery UI sortable library ( has been since 1.5.x ). The sortable plugin clones the node being moved which resets the radio buttons.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16973.3.diff attached to Ticket #16973</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Mar 2011 17:22:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16973/16973.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16973/16973.3.diff/1301160133544291</guid>
      <description>&lt;p&gt;
more cleanup
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16973 (Introduce get_multipage_link()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Mar 2011 17:18:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16973#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16973#comment:2/1301159898389874</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/16973/16973.3.diff" title="Attachment '16973.3.diff' in Ticket #16973"&gt;16973.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/16973/16973.3.diff" title="Download"&gt;​&lt;/a&gt; does some cleanup in wp_link_pages() and also removes the &lt;code&gt;@private&lt;/code&gt; comment, since it's clearly used in the wild.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16973.2.diff attached to Ticket #16973</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Mar 2011 17:09:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16973/16973.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16973/16973.2.diff/1301159381029877</guid>
      <description>&lt;p&gt;
clearer logic
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16973 (Introduce get_multipage_link()) updated</title>
      
        <dc:creator>ldebrouwer</dc:creator>

      <pubDate>Sat, 26 Mar 2011 17:01:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16973#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16973#comment:1/1301158865110308</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It might be better to put $output on one line instead of concatenating another line to it on three occasions. Maybe even sprintf'ing it would be an even more elegant solution.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16971 (Creation of .htaccess file leads to a 500 Error) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 26 Mar 2011 16:22:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16971#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16971#comment:7/1301156570368114</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
OP said he could reproduce this on the 3.0 branch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16973.diff attached to Ticket #16973</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Mar 2011 16:12:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16973/16973.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16973/16973.diff/1301155924179338</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16973 (Introduce get_multipage_link()) created</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Mar 2011 16:11:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16973</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16973/1301155903025815</guid>
      <description>&lt;p&gt;
There currently is no function for retrieving the URL to a multipage part (a page with &lt;code&gt;&amp;lt;!--nextpage--&amp;gt;&lt;/code&gt;).
&lt;/p&gt;
&lt;p&gt;
The code is burried in a private helper function.
&lt;/p&gt;
&lt;p&gt;
Let's bring it to light.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16643 (Page Parent Dropdown in IE8) updated</title>
      
        <dc:creator>ramoonus</dc:creator>

      <pubDate>Sat, 26 Mar 2011 15:39:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16643#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16643#comment:20/1301153977733661</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16643#comment:16" title="Comment 16"&gt;solarissmoke&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Right, I've narrowed it further. The issue is with jQuery-ui-sortable (which operates on the parent page div - see &lt;code&gt;postbox.dev.js&lt;/code&gt;). For some reason it is really, really slow and it causes IE7/8 to fall over. There is a bug report over on &lt;a class="ext-link" href="http://bugs.jqueryui.com/ticket/5681"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;jQuery-ui trac&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
As for how to mitigate - only option seems to be to disable ui-sortable on that particular div for IE7/8. I'm working on a patch now to see whether it will work.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
might be fixed with and related to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16656" title="#16656: enhancement: jQuery UI 1.8.12 (closed: fixed)"&gt;#16656&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16920 (PHP5-Port: Take out unnecessary compat functions from diverse files) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 14:54:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16920#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16920#comment:6/1301151277524081</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16970" title="#16970: defect (bug): Remove PHP4 functionality from timezone selector code (closed: fixed)"&gt;#16970&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16970 (Remove PHP4 functionality from timezone selector code) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 14:52:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16970#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16970#comment:9/1301151176918443</guid>
      <description>&lt;p&gt;
Patch: Deprecate, kill the filter, return true, kill all code that handles when wp_timezone_supported() is false and replace wp_timezone_supported() with TRUE, remove dead code then.
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16920" title="#16920: defect (bug): PHP5-Port: Take out unnecessary compat functions from diverse files (closed: fixed)"&gt;#16920&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16972 (Input type radio losts its checked focus when metabox is dragged) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Mar 2011 14:52:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16972#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16972#comment:2/1301151160531899</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Confirmed. It happens in WP 3.0 too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16970.2.patch attached to Ticket #16970</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 14:49:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16970/16970.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16970/16970.2.patch/1301150989721035</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16971 (Creation of .htaccess file leads to a 500 Error) updated</title>
      
        <dc:creator>ramoonus</dc:creator>

      <pubDate>Sat, 26 Mar 2011 14:48:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16971#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16971#comment:6/1301150886941029</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16971#comment:4" title="Comment 4"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16971#comment:2" title="Comment 2"&gt;ramoonus&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
you say it also happens in other versions than 3.0.5
does that include 3.1?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I said: "other versions seem affected as well".
&lt;/p&gt;
&lt;p&gt;
I'm sure that &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/branches/3.1/wp-admin/includes/misc.php#L53"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;3.1&lt;/a&gt; is affected as well as the code looks the same.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16971.2.patch attached to Ticket #16971</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 14:40:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16971/16971.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16971/16971.2.patch/1301150412763831</guid>
      <description>&lt;p&gt;
Example only
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16972 (Input type radio losts its checked focus when metabox is dragged) updated</title>
      
        <dc:creator>depi</dc:creator>

      <pubDate>Sat, 26 Mar 2011 14:30:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16972#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16972#comment:1/1301149813812350</guid>
      <description>&lt;p&gt;
You can check this behavior for example on the Add Link page in WP-Admin where are some radio buttons.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16972 (Input type radio losts its checked focus when metabox is dragged) created</title>
      
        <dc:creator>depi</dc:creator>

      <pubDate>Sat, 26 Mar 2011 14:16:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16972</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16972/1301148965082193</guid>
      <description>&lt;p&gt;
This happens when I use a radio button in a metabox. Once I try to drag it to different position or just drag and let it go the checked focus is lost. (in code it of course still remain checked, but visually not)
&lt;/p&gt;
&lt;p&gt;
Bug not happens with other fields I tested (checkboxes, inputs, textareas)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16971 (Creation of .htaccess file leads to a 500 Error) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 13:52:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16971#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16971#comment:5/1301147541851505</guid>
      <description>&lt;p&gt;
The flow in that function could be simplified to first check if a file exists or not and handle everything related to file creation upfront.
&lt;/p&gt;
&lt;p&gt;
See the example attached which demonstrates this next to the following:
&lt;/p&gt;
&lt;p&gt;
Then the replacement of the area(s) defined by $marker could be buffered and thanks to that simplified as well.
&lt;/p&gt;
&lt;p&gt;
The second benefit of a buffer is that it can be written buffered to disc reducing I/O.
&lt;/p&gt;
&lt;p&gt;
The function can benefit from defining the input variables, it's a bit unclear if $insertion must or can be an array. Not addressed in the example, just came to my mind.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16971 (Creation of .htaccess file leads to a 500 Error) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 12:42:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16971#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16971#comment:4/1301143338563971</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16971#comment:2" title="Comment 2"&gt;ramoonus&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
you say it also happens in other versions than 3.0.5
does that include 3.1?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I said: "other versions seem affected as well".
&lt;/p&gt;
&lt;p&gt;
I'm sure that &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/branches/3.1/wp-admin/includes/misc.php#L53"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;3.1&lt;/a&gt; is affected as well as the code looks the same.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16970 (Remove PHP4 functionality from timezone selector code) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Mar 2011 12:16:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16970#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16970#comment:8/1301141771842190</guid>
      <description>&lt;p&gt;
+1 for what nacin said.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16971 (Creation of .htaccess file leads to a 500 Error) updated</title>
      
        <dc:creator>ramoonus</dc:creator>

      <pubDate>Sat, 26 Mar 2011 12:13:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16971#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16971#comment:3/1301141612849912</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16971 (Creation of .htaccess file leads to a 500 Error) updated</title>
      
        <dc:creator>ramoonus</dc:creator>

      <pubDate>Sat, 26 Mar 2011 12:13:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16971#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16971#comment:2/1301141597461482</guid>
      <description>&lt;p&gt;
you say it also happens in other versions than 3.0.5
does that include 3.1?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16643 (Page Parent Dropdown in IE8) updated</title>
      
        <dc:creator>ramoonus</dc:creator>

      <pubDate>Sat, 26 Mar 2011 12:11:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16643#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16643#comment:19/1301141505402159</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16643#comment:14" title="Comment 14"&gt;solarissmoke&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Tracked this down - it is being caused by jQuery 1.4.4. Switching back to 1.4.2 removes the problem.
&lt;/p&gt;
&lt;p&gt;
PS jQuery 1.5.1 seems to have the same issue as 1.4.4.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
and 1.5.2 (currently as RC)
but that won`t fix things until WP 3.2
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16963 (wp_enqueue_script bug in ie8) updated</title>
      
        <dc:creator>ramoonus</dc:creator>

      <pubDate>Sat, 26 Mar 2011 12:10:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16963#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16963#comment:5/1301141423078851</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16963#comment:4" title="Comment 4"&gt;jkmassel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
No, calling wp_enqueue_script('jquery') alone should always return the latest (1.4.4 in 3.1), correct? There are no plugins or methods to change the version.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
incorrect
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16971 (Creation of .htaccess file leads to a 500 Error) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 12:00:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16971#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16971#comment:1/1301140835629275</guid>
      <description>&lt;p&gt;
Patch against trunk.
&lt;/p&gt;
&lt;p&gt;
I'm not sure if FS_CHMOD_FILE is the correct value to refer to, for my case the 0644 (rw-r--r) would have done it which is the default for FS_CHMOD_FILE.
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10170" title="#10170: defect (bug): File Permissions on Creation (Plugin but might be Theme as well) (closed: fixed)"&gt;#10170&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16971.patch attached to Ticket #16971</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 12:00:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16971/16971.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16971/16971.patch/1301140818899267</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16971 (Creation of .htaccess file leads to a 500 Error) created</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 11:59:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16971</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16971/1301140791377283</guid>
      <description>&lt;p&gt;
Turning on permalinks can render the whole blog into a 500 error situation under certain conditions.
&lt;/p&gt;
&lt;p&gt;
The issue has been experienced with a WP 3.0.5 setup, other versions seem affected as well.
&lt;/p&gt;
&lt;p&gt;
The creation of the .htaccess file does not reflect the systems umask setting which can result in creating a file that is not accessible by the server.
&lt;/p&gt;
&lt;p&gt;
That triggers the 500 then.
&lt;/p&gt;
&lt;p&gt;
Normally WP chmod's all files it creates. This is not done with the .htaccess file if it did not existed already.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16827 (Network Users alternate row highlighting does not work properly) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 26 Mar 2011 10:00:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16827#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16827#comment:6/1301133623592093</guid>
      <description>&lt;p&gt;
Ok. It looks like the underlying bug that really needs fixing is this.
&lt;/p&gt;
&lt;p&gt;
The CSS files are output in different orders with SCRIPT_DEBUG enabled/disabled - which is why the CSS for this is being overridden by other CSS.
&lt;/p&gt;
&lt;p&gt;
That shouldn't happen because it makes testing of patches hard and gives different behvaiour between live/dev
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16827 (Network Users alternate row highlighting does not work properly) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 26 Mar 2011 09:30:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16827#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16827#comment:5/1301131824350659</guid>
      <description>&lt;p&gt;
With SCRIPT_DEBUG enabled I don't see this issue.
&lt;/p&gt;
&lt;p&gt;
So I just think we may need to re-compress some CSS.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12738 (Notice Helper) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 26 Mar 2011 09:20:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12738#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12738#comment:5/1301131259472491</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7652 (Merge all atom parsers) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 26 Mar 2011 08:41:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7652#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7652#comment:20/1301128906439740</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
There is great work on this ticket but it is going to need a fair chunk of testing so I don't think we should try and merge it in the 3.2 cycle - if I get time I will look at merging the Blogger importer changes into the plugin though
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14305 (Display file for localized versions as Drop-in) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 26 Mar 2011 08:37:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14305#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14305#comment:5/1301128662894141</guid>
      <description>&lt;p&gt;
When we commit this we should remove all the duplication of very similar code in &lt;code&gt;get_dropins&lt;/code&gt; and &lt;code&gt;get_mu_plugins&lt;/code&gt; etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11049 (Page Preview does not autosave page template) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 26 Mar 2011 08:32:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11049#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11049#comment:7/1301128341955325</guid>
      <description>&lt;p&gt;
Indeed. The patch works only due to a bit of a glitch -- update_post_meta() on a revision post ID ends up attaching the metadata to the post, not the revision. Calling update_metadata() on the revision ID itself is fine, we just have to then make sure we check the revision meta key using get_metadata().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15238 (XML-RPC class should have better documentation) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 26 Mar 2011 08:31:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15238#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15238#comment:7/1301128300209929</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Moving to 3.2 - documentation changes only
&lt;/p&gt;
&lt;p&gt;
Removing GCI as the task was never done for GCI
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11049 (Page Preview does not autosave page template) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 26 Mar 2011 08:29:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11049#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11049#comment:6/1301128197043106</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I would like to include this in 3.2
&lt;/p&gt;
&lt;p&gt;
Need to review if we need this much code or can just set the normal post_meta key on the revision that is going to be previewed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15448 (wp_mail() sets Content-Type header twice for multipart emails) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 26 Mar 2011 08:26:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15448#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15448#comment:13/1301127976098080</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I would like to roll this small enhancement from GCI into 3.2
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16970 (Remove PHP4 functionality from timezone selector code) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 26 Mar 2011 07:32:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16970#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16970#comment:7/1301124722585915</guid>
      <description>&lt;p&gt;
My opinion: Deprecate, kill the filter, return true, and kill all code that handles when wp_timezone_supported() is false.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11616 (Text copied form visual editor don't store font color) updated</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Sat, 26 Mar 2011 07:11:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11616#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11616#comment:8/1301123504238081</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
You have to set the option &lt;code&gt;paste_retain_style_properties&lt;/code&gt; for the TinyMCE paste plugin to retain styles copied from Word - which we currently don't (it seems like the plugin defaults must have changed at some point if it used to work before).
&lt;/p&gt;
&lt;p&gt;
I've added a patch that does this, however you have to disable two other options - &lt;code&gt;paste_remove_styles&lt;/code&gt; and &lt;code&gt;paste_remove_spans&lt;/code&gt; - for it to work. This could cause unintended side-effects, so I'm not sure it's a good idea.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10690 (WordPress does not support non-ascii characters in the domain name) updated</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Sat, 26 Mar 2011 07:08:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10690#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10690#comment:21/1301123316041811</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>11616.diff attached to Ticket #11616</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Sat, 26 Mar 2011 07:08:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11616/11616.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11616/11616.diff/1301123308288975</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16777 (media_sideload_image() doesn't upload in past "/year/month/" folders) updated</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Sat, 26 Mar 2011 05:31:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16777#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16777#comment:1/1301117512615501</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch makes &lt;code&gt;wp_handle_sideload()&lt;/code&gt; consistent with &lt;code&gt;wp_handle_upload()&lt;/code&gt;, using &lt;code&gt;post_date&lt;/code&gt; to determine the upload folder.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16777.diff attached to Ticket #16777</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Sat, 26 Mar 2011 05:30:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16777/16777.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16777/16777.diff/1301117425899167</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>14908.diff attached to Ticket #14908</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Sat, 26 Mar 2011 04:44:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14908/14908.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14908/14908.diff/1301114680001245</guid>
      <description>&lt;p&gt;
Updated patch - no need to pass by reference in PHP5
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10699 (Password Expose Bug in XML-RPC Debugging) updated</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Sat, 26 Mar 2011 04:30:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10699#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10699#comment:2/1301113851694596</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The XML-RPC logger currently logs raw incoming HTTP post data. In order to hide the password, you would need to parse the XML first to determine where it is before you could obfuscate it. This has the potential to obfuscate the wrong thing (especially if you're testing and your XML is not correct), in which case you would defeat the purpose of writing a debug log.
&lt;/p&gt;
&lt;p&gt;
Proposing wontfix. Maybe we could just add an extra warning in the inline docs: Don't use this in a production environment.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13841 (Some HTTP Transports do not respect transfer timeouts) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 26 Mar 2011 04:14:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13841#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13841#comment:15/1301112855788111</guid>
      <description>&lt;p&gt;
I'm finding that both fsockopen and Streams ignore the timeouts, as well as curl in some cases
&lt;/p&gt;
&lt;p&gt;
fsockopen: By adding the usage of &lt;code&gt;stream_get_meta_data()&lt;/code&gt; I'm questioning it's compatibility, the Streams class should generally be used in preference to this to start wtih, so the compatibility I'm questioning is systems where Streams is not available and it ultimately falls back to FSockopen.
&lt;/p&gt;
&lt;p&gt;
streams: the /2 does indeed seem to work as advertised, passing 4 in causes it to timeout after ~8s, with /2 it times out ~4seconds in.
&lt;/p&gt;
&lt;p&gt;
curl: seems to have problems with file streaming and timeouts
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16236 (Method to stream file downloads in HTTP API, to reduce update memory ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 26 Mar 2011 03:32:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16236#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16236#comment:38/1301110327726808</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17563" title="Correct logic for cURL Errors, add extra sanity protection in ..."&gt;[17563]&lt;/a&gt;) Correct logic for cURL Errors, add extra sanity protection in ::processHeaders to guard against null inputs. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16236" title="#16236: task (blessed): Method to stream file downloads in HTTP API, to reduce update memory ... (closed: fixed)"&gt;#16236&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [17563]: Correct logic for cURL Errors, add extra sanity protection in ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 26 Mar 2011 03:32:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17563</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17563/1301110325236925</guid>
      <description>&lt;p&gt;
Correct logic for cURL Errors, add extra sanity protection in ::processHeaders to guard against null inputs. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16236" title="#16236: task (blessed): Method to stream file downloads in HTTP API, to reduce update memory ... (closed: fixed)"&gt;#16236&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16855 (HTTP API No Follow Redirection) updated</title>
      
        <dc:creator>cogmios</dc:creator>

      <pubDate>Sat, 26 Mar 2011 02:55:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16855#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16855#comment:38/1301108108843758</guid>
      <description>&lt;p&gt;
Here is an update with a testset of 31.000 uri's I did on the same config as above:
&lt;/p&gt;
&lt;p&gt;
Error Messages or Blank:
&lt;/p&gt;
&lt;pre class="wiki"&gt;(empty)	873
Empty reply from server	18
&amp;lt;url&amp;gt; malformed	321 (probably my fault)
couldn't connect to host	153
Couldn't resolve host (... with name) : estimate: 25
&lt;/pre&gt;&lt;p&gt;
Error Codes:
&lt;/p&gt;
&lt;pre class="wiki"&gt;0	8 ()
200	18509 (OK)
300	2 (Multiple Choices)
301	5 (Moved Permanently)
304	2 (Not Modified) (huh?)
400	64 (Bad Request)
401	7 (Unauthorized)
403	166 (Forbidden)
404	2106 (Not Found) (various)
410	27 (Gone)
423	2  (Locked) (HUH?)
500	52 (Internal Server Error)
501	2  (Not Implemented)
502	11 (Bad Gateway)
503	8  (Service Unavailable)
504	2  (Gateway Timeout)
&lt;/pre&gt;&lt;p&gt;
So looks good. Have to check some of them for additional issues.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16955 (It's tricky to drag metaboxes) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Mar 2011 02:29:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16955#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16955#comment:7/1301106590266947</guid>
      <description>&lt;p&gt;
The dashboard modules don't seem to be affected either.
&lt;/p&gt;
&lt;p&gt;
So, that leaves only the post editing screen and the menu editing one.
&lt;/p&gt;
&lt;p&gt;
I'm guessing it's a CSS issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16970 (Remove PHP4 functionality from timezone selector code) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 02:26:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16970#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16970#comment:6/1301106379412129</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16970#comment:5" title="Comment 5"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What legitimate use-case would there be for adding a filter that returns false, in a PHP 5.2 context?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No idea, I only hear "Backwards Compatibility". But don't ask me because I'm for removing this function entirely personally and so I can not see a reason at all.
&lt;/p&gt;
&lt;p&gt;
@kawauso - functions could be disabled per ini (no idea which we need to check actually, in HTTP we check fopen but that's I/O related, so more or less informative)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16199 (plugin_dir_url - wrong directory for symlinks) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 02:19:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16199#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16199#comment:3/1301105999807008</guid>
      <description>&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16953" title="#16953: enhancement: Allow symlinked plugins (closed: fixed)"&gt;#16953&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>13841.patch attached to Ticket #13841</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 02:18:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13841/13841.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13841/13841.patch/1301105881705739</guid>
      <description>&lt;p&gt;
Refreshed against trunk
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #13841 (Some HTTP Transports do not respect transfer timeouts) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 02:17:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13841#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13841#comment:14/1301105860487784</guid>
      <description>&lt;p&gt;
See &lt;a class="ext-link" href="http://php.net/manual/en/function.fclose.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;fclose()&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="ext-link" href="http://www.php.net/manual/en/function.stream-get-meta-data.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;stream_get_meta_data()&lt;/a&gt; as well as &lt;a class="ext-link" href="http://php.net/manual/en/function.stream-set-timeout.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;stream_set_timeout()&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
When the stream times out, the 'timed_out' key of the array returned by stream_get_meta_data() is set to TRUE, although no error/warning is generated.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
See &lt;a class="ext-link" href="http://www.php.net/manual/en/context.http.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;HTTP context options&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
timeout float
&lt;/p&gt;
&lt;p&gt;
Read timeout in seconds, specified by a float (e.g. 10.5).
By default the default_socket_timeout php.ini setting is used.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Dividing by 2 makes not much sense to me, maybe sivel can say more. I've kept that in the refreshed patch.
&lt;/p&gt;
&lt;p&gt;
Next to all this, not much left in patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16885 (Warning emited in Header parsing when server does not specify a ...) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 01:51:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16885#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16885#comment:14/1301104307175366</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16885#comment:13" title="Comment 13"&gt;azizur&lt;/a&gt;:
Which transport is that? I get RSS Error: WP HTTP Error: Could not open handle for fopen() to &lt;a class="ext-link" href="http://my-disfunctional-url.org/news/feed/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://my-disfunctional-url.org/news/feed/&lt;/a&gt; on current trunk. Probably because of the transport or the recent changes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16970 (Remove PHP4 functionality from timezone selector code) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Mar 2011 01:49:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16970#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16970#comment:5/1301104180734773</guid>
      <description>&lt;p&gt;
What legitimate use-case would there be for adding a filter that returns false, in a PHP 5.2 context?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16970.diff attached to Ticket #16970</title>
      
        <dc:creator>kawauso</dc:creator>

      <pubDate>Sat, 26 Mar 2011 01:49:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16970/16970.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16970/16970.diff/1301104153750924</guid>
      <description>&lt;p&gt;
No need for function_exists checks anymore
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16909 (some Location headers are using relative url's (2)) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 01:48:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16909#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16909#comment:8/1301104138765045</guid>
      <description>&lt;p&gt;
/wp-admin/includes/dashboard.php:127 creates a redirect w/o an absolute URI.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10690 (WordPress does not support non-ascii characters in the domain name) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 01:43:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10690#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10690#comment:20/1301103786021328</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10690#comment:18" title="Comment 18"&gt;codestyling&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Can you specify &lt;code&gt;Ajax.Request&lt;/code&gt;? Is that of some javascript library?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16970 (Remove PHP4 functionality from timezone selector code) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 01:21:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16970#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16970#comment:4/1301102507508882</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16970 (Remove PHP4 functionality from timezone selector code) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 01:18:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16970#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16970#comment:3/1301102326896215</guid>
      <description>&lt;p&gt;
The function contains a filter, so core - even the function deprecates - can not assume that it always returns true.
&lt;/p&gt;
&lt;p&gt;
So the other code needs to stay in core. Until the function can be completely removed. (Which I suggest as the chance had been passed to deprecate this in 3.1 already in the know of the 3.2 php requirements commming.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16970.patch attached to Ticket #16970</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 01:16:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16970/16970.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16970/16970.patch/1301102199185754</guid>
      <description>&lt;p&gt;
Deprecate wp_timezone_supported()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16970 (Remove PHP4 functionality from timezone selector code) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Sat, 26 Mar 2011 01:02:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16970#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16970#comment:2/1301101336918669</guid>
      <description>&lt;p&gt;
We were talking about this on IRC, so I thought I'd throw in my two cents:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://us3.php.net/manual/en/datetime.installation.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;The manual&lt;/a&gt; says &lt;em&gt;There is no installation needed to use these functions; they are part of the PHP core.&lt;/em&gt; And the most recently added was in 5.2.0, so there's just no need for &lt;code&gt;wp_timezone_supported()&lt;/code&gt; anymore. I think it should just be deprecated and changed to return true (for plugins using it).  Obviously we should clean up core accordingly.
&lt;/p&gt;
&lt;p&gt;
For those that care, these are the functions that &lt;code&gt;wp_timezone_supported()&lt;/code&gt; checks for:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="http://php.net/date_create"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;date_create&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://php.net/date_default_timezone_set"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;date_default_timezone_set&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://php.net/timezone_identifiers_list"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;timezone_identifiers_list&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://php.net/timezone_open"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;timezone_open&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://php.net/timezone_offset_get"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;timezone_offset_get&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15377 (Allow screen_icon() to return not echo) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Sat, 26 Mar 2011 00:53:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15377#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15377#comment:7/1301100827521913</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16970 (Remove PHP4 functionality from timezone selector code) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Sat, 26 Mar 2011 00:53:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16970#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16970#comment:1/1301100797109670</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It's been a while since I contributed anything to core. I might as well take this on.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16970 (Remove PHP4 functionality from timezone selector code) created</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Sat, 26 Mar 2011 00:52:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16970</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16970/1301100745806959</guid>
      <description>&lt;p&gt;
All of the functions needed for the fancy timezone selector code are bundled with all versions of PHP since 5.2.0. This means we can deprecate &lt;code&gt;wp_timezone_supported()&lt;/code&gt; and remove all references to it in core as well as strip all of the PHP4 fallback code.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16967 (Adding cat=-# removes sorting) updated</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Sat, 26 Mar 2011 00:40:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16967#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16967#comment:4/1301100019959744</guid>
      <description>&lt;p&gt;
Couldn't reproduce when I tested earlier. On IRC the OP said no plugins enabled whilst he was testing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16969 (Stick admin bar to the top of the page, not the window) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Sat, 26 Mar 2011 00:37:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16969#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16969#comment:5/1301099829057302</guid>
      <description>&lt;p&gt;
To expound on what Nacin said about the wp.com argument, I think it's a valid argument because wp.com is a massive testing ground with tons of users.  I'm not saying it's not possible to do something BETTER than wp.com, but I think that ignoring what's working well on wp.com would be a big mistake.
&lt;/p&gt;
&lt;p&gt;
Having said that, I'm also against moving the bar to the top of the page.  The point of the bar is to have tools instantly available to you, not "nearby but out of sight".  I just think it would lose some effectiveness.
&lt;/p&gt;
&lt;p&gt;
I also wonder how many sites use a lot of url hashes, have users logged in often, AND want to keep the admin bar around for those users.  The admin bar seems like it's most useful for those that are working on the site.  If a site has a lot of logged in users that don't work on the site, and the admin bar is causing problems (like messing up url hash links), they could just hide the admin bar for all or at least most users.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8622 (HTTP API Fallover &amp; non-blocking order doesnt appear to be working) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Mar 2011 00:35:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8622#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8622#comment:20/1301099718131884</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/8622#comment:19" title="Comment 19"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As for unit testing,
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Very simple to do. Filter the ::test() methods to select which transport you wish to test, test, remove filters, rinse repeat. [...]
&lt;/p&gt;
&lt;p&gt;
In core we're striving for a HTTP API which just works, plugin authors shouldn't have to do anything more than request it, and handle an error condition being returned, but at the same time, it shouldn't cause unnecessary slowdowns for the user, failing over to the next transport over and over on a plugin's request should not be possible.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That you've got a design problem doesn't come to your mind while your making that many words, right? (Not meant to sound rude, it's an actual question, not an attack, we need to deal with what we have so far)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16967 (Adding cat=-# removes sorting) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Sat, 26 Mar 2011 00:24:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16967#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16967#comment:3/1301099091301898</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I also can't reproduce.  Here's some test code I used:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$my_query = new WP_Query('posts_per_page=10&amp;amp;orderby=date&amp;amp;order=DESC');
if ( $my_query-&amp;gt;have_posts() ) {
	echo "&amp;lt;h2&amp;gt;Without Cat=-###&amp;lt;/h2&amp;gt;";
	while ( $my_query-&amp;gt;have_posts() ) {
		$p = $my_query-&amp;gt;next_post();
		echo $p-&amp;gt;post_date . " : " . $p-&amp;gt;post_title . "&amp;lt;br /&amp;gt;\r\n";
	}
}
$my_query = new WP_Query('cat=-679&amp;amp;posts_per_page=10&amp;amp;orderby=date&amp;amp;order=DESC');
if ( $my_query-&amp;gt;have_posts() ) {
	echo "&amp;lt;h2&amp;gt;With Cat=-### DESC&amp;lt;/h2&amp;gt;";
	while ( $my_query-&amp;gt;have_posts() ) {
		$p = $my_query-&amp;gt;next_post();
		echo $p-&amp;gt;post_date . " : " . $p-&amp;gt;post_title . "&amp;lt;br /&amp;gt;\r\n";
	}
}
$my_query = new WP_Query('cat=-679&amp;amp;posts_per_page=10&amp;amp;orderby=date&amp;amp;order=ASC');
if ( $my_query-&amp;gt;have_posts() ) {
	echo "&amp;lt;h2&amp;gt;With Cat=-### ASC&amp;lt;/h2&amp;gt;";
	while ( $my_query-&amp;gt;have_posts() ) {
		$p = $my_query-&amp;gt;next_post();
		echo $p-&amp;gt;post_date . " : " . $p-&amp;gt;post_title . "&amp;lt;br /&amp;gt;\r\n";
	}
}
&lt;/pre&gt;&lt;p&gt;
And my output with some test data on a trunk site looked like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Without Cat=-###
2010-01-01 11:26:08 : Sample Post With Threaded Comments
2010-01-01 11:25:48 : Sample Post With Image Aligned Left
2010-01-01 11:25:27 : Sample Post With Image Aligned Right
2010-01-01 11:24:48 : Sample Post With Image Centered
2010-01-01 11:24:24 : Sample Post With an Unordered List
2010-01-01 11:24:00 : Sample Post With an Ordered List
2010-01-01 11:19:49 : Sample Post With a Blockquote
2010-01-01 01:19:42 : Sample Post With Headlines
2009-07-06 15:57:15 : Test Attachments
2009-06-22 13:12:29 : Caption issue
With Cat=-###
2009-07-06 15:57:15 : Test Attachments
2009-06-22 13:12:29 : Caption issue
2009-06-14 11:10:15 : Test Post 2
2009-06-14 11:09:52 : test post 1
2009-06-14 11:06:11 : Hello world!
2009-05-06 11:03:15 : Map Test
With Cat=-###
2009-05-06 11:03:15 : Map Test
2009-06-14 11:06:11 : Hello world!
2009-06-14 11:09:52 : test post 1
2009-06-14 11:10:15 : Test Post 2
2009-06-22 13:12:29 : Caption issue
2009-07-06 15:57:15 : Test Attachments
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16968 (Plugin Search for empty string can hide all Plugins) updated</title>
      
        <dc:creator>greuben</dc:creator>

      <pubDate>Fri, 25 Mar 2011 23:37:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16968#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16968#comment:2/1301096259375053</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8622 (HTTP API Fallover &amp; non-blocking order doesnt appear to be working) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 23:37:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8622#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8622#comment:19/1301096234868298</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
As for unit testing,
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Very simple to do. Filter the ::test() methods to select which transport you wish to test, test, remove filters, rinse repeat.
&lt;/p&gt;
&lt;p&gt;
My suggestion here is to push the changes needed through &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16870" title="#16870: enhancement: consider disabling HTTP transport after multiple failed requests (closed: maybelater)"&gt;#16870&lt;/a&gt;, specifically, when a transport fails, progressivly mark it as unusable.
&lt;/p&gt;
&lt;p&gt;
The alternative is to adding an extra parameter similar to the block of code &lt;a class="ext-link" href="http://core.trac.wordpress.org/attachment/ticket/8622/8622.4.diff"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;starting line 206 in this patch&lt;/a&gt;, which would be purely for a plugins usage.
&lt;/p&gt;
&lt;p&gt;
In core we're striving for a HTTP API which just works, plugin authors shouldn't have to do anything more than request it, and handle an error condition being returned, but at the same time, it shouldn't cause unnecessary slowdowns for the user, failing over to the next transport over and over on a plugin's request should not be possible.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16968.diff attached to Ticket #16968</title>
      
        <dc:creator>greuben</dc:creator>

      <pubDate>Fri, 25 Mar 2011 23:37:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16968/16968.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16968/16968.diff/1301096234594096</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #13777 (Consolidate WP_Http argument processing into a single class) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 23:31:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13777#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13777#comment:8/1301095885070585</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13777#comment:7" title="Comment 7"&gt;jacobsantos&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Come again? Perhaps you should review the existing code and this patch again. If I was unclear in the summary, then please ask where you need further information.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Then perhaps you should point out where I'm wrong in my comment.
&lt;/p&gt;
&lt;p&gt;
I've read the ticket, I've read the patch, and other than consolidating the Arguement processing int oa separate class, I cannot see any benefits.
&lt;/p&gt;
&lt;p&gt;
After reading your comment, The only other option I could understand is that you're suggesting moving all the processing to a separate class so that you can call WP_HTTP directly OR call a subclass directly?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16482 (Visibility: password-protected breaks with redirected domains) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 23:24:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16482#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16482#comment:5/1301095498175560</guid>
      <description>&lt;p&gt;
makes a bit more sense there.
&lt;/p&gt;
&lt;p&gt;
Also related, and I'll probably fix at the same time: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/16483" title="#16483: defect (bug): Visibility: password-protected exposes multiple pages (new)"&gt;#16483&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16967 (Adding cat=-# removes sorting) updated</title>
      
        <dc:creator>greuben</dc:creator>

      <pubDate>Fri, 25 Mar 2011 23:15:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16967#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16967#comment:2/1301094936153869</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Can't reproduce it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16511 (Incorrect dependencies for some jQuery UI components) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 25 Mar 2011 22:59:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16511#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16511#comment:1/1301093942422230</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8622 (HTTP API Fallover &amp; non-blocking order doesnt appear to be working) reopened</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Fri, 25 Mar 2011 22:47:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8622#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8622#comment:18/1301093278979622</guid>
      <description>&lt;p&gt;
The point of this and the patch was not getTransport() and postTransport(), it was the ability to allow fail-over to a transport when the transport itself has a problem. True, given the small amount who have problems with, it is safe to ignore this as a personal problem for those edge cases. However, it is nothing to add support for this since it has always been the original intention for even having the foreach in the code.
&lt;/p&gt;
&lt;p&gt;
As for unit testing, well, you can't really unit test WP_Test::request(), functional testing or acceptance testing, sure, however unit testing has to be done for each individual class and well, they weren't written for unit testing in mind, so you are still going to have issues unit testing the transports.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #13777 (Consolidate WP_Http argument processing into a single class) reopened</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Fri, 25 Mar 2011 22:23:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13777#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13777#comment:7/1301091781797723</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13777#comment:5" title="Comment 5"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't see any need for this.
&lt;/p&gt;
&lt;p&gt;
The WP_HTTP::request() method takes care of the incoming request and can handle processing the args. The processing of the args in each transport is specific to it's needs, to abstract the minimal code duplication will introduce more code and increase the churn rate of the existing code.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Come again? Perhaps you should review the existing code and this patch again. If I was unclear in the summary, then please ask where you need further information.
&lt;/p&gt;
&lt;p&gt;
Perhaps you should look at the transports again and see how they in fact do not duplicate the code in WP_HTTP::request() since it would lengthen the methods unnecessary. It has been a point of contention that you really can't call individual transports, because the majority of the processing in WP_HTTP::request() is not found in any of the other transports.
&lt;/p&gt;
&lt;p&gt;
I mean, I'm not going to update the patch, so if you wish to close it for that reason, then go ahead. However, it is advised in case someone else wishes to support this to give proper explanation. Also performance will be negligible or at least normal overhead given using objects.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;TL;DR&lt;/strong&gt; Reopening ticket because reason for closing is not supported by fact.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #16969 (Stick admin bar to the top of the page, not the window) updated</title>
      
        <dc:creator>WraithKenny</dc:creator>

      <pubDate>Fri, 25 Mar 2011 21:52:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16969#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16969#comment:4/1301089969976895</guid>
      <description>&lt;p&gt;
For a work-around, wrapping the #wrapper in another element, you can set:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;div style="
position: fixed;
top: 28px;
bottom: 0pt;
left: 0pt;
right: 0pt;
overflow: auto;"&amp;gt;
&amp;lt;div id="wrapper"&amp;gt;...&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Or using an id and a style element via the callback for &lt;code&gt;add_theme_support( 'admin-bar', array( 'callback' =&amp;gt; 'admin_bar_bump_callback') );&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16917 (Bump PHP and MySQL required versions) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Mar 2011 21:21:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16917#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16917#comment:8/1301088076372840</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17562" title="Bump readme system requirements. props duck_, see #16917."&gt;[17562]&lt;/a&gt;) Bump readme system requirements. props duck_, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16917" title="#16917: defect (bug): Bump PHP and MySQL required versions (closed: fixed)"&gt;#16917&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [17562]: Bump readme system requirements. props duck_, see #16917.</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Mar 2011 21:21:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17562</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17562/1301088074282493</guid>
      <description>&lt;p&gt;
Bump readme system requirements. props duck_, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16917" title="#16917: defect (bug): Bump PHP and MySQL required versions (closed: fixed)"&gt;#16917&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16917 (Bump PHP and MySQL required versions) updated</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Fri, 25 Mar 2011 21:19:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16917#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16917#comment:7/1301087989227580</guid>
      <description>&lt;p&gt;
Readme "System Requirements" need bumping too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16917.readme.diff attached to Ticket #16917</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Fri, 25 Mar 2011 21:19:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16917/16917.readme.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16917/16917.readme.diff/1301087965978474</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Changeset [17561]: Bump update-core and readme for 3.2.</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Mar 2011 21:14:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17561</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17561/1301087686100324</guid>
      <description>&lt;p&gt;
Bump update-core and readme for 3.2.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [17560]: 3.1.1 beta 1.</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Mar 2011 21:13:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17560</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17560/1301087618544025</guid>
      <description>&lt;p&gt;
3.1.1 beta 1.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16917 (Bump PHP and MySQL required versions) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Mar 2011 20:53:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16917#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16917#comment:6/1301086421454744</guid>
      <description>fixed: &lt;p&gt;
Replying to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16917" title="#16917: defect (bug): Bump PHP and MySQL required versions (closed: fixed)"&gt;markjaquith&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
To-do: update WP.org API to not offer WP &amp;gt;= 3.2 to anyone who doesn't meet the requirements.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Done: &lt;a class="ext-link" href="http://api.wordpress.org/core/version-check/1.5/?version=3.2"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://api.wordpress.org/core/version-check/1.5/?version=3.2&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16892 (make_clickable segfault) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 25 Mar 2011 20:51:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16892#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16892#comment:17/1301086280079640</guid>
      <description>&lt;p&gt;
16892.5.patch has been soaking on wp.com for a couple days.  Looking good so far. We probably need to @ silence ini_set() like we do everywhere else.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16846 (wp_dashboard_recent_comments can generate hundreds of queries) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 25 Mar 2011 20:41:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16846#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16846#comment:10/1301085707847333</guid>
      <description>&lt;p&gt;
Perhaps we can handle/review/fix the improvements from 16846-2.patch later.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16667 (Admin Bar CSS Override Bugs) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 25 Mar 2011 20:40:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16667#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16667#comment:22/1301085604475107</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16667#comment:19" title="Comment 19"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Agree, not sure why in my test it didn't show the first time.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13662 (Admin Menu Generation - Speedup, Cleanup) updated</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Fri, 25 Mar 2011 20:37:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13662#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13662#comment:6/1301085464275049</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Refreshed.
&lt;/p&gt;
&lt;p&gt;
Changes to original patch:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Check &lt;code&gt;$submenu[$item[2]]&lt;/code&gt; before assigning it to &lt;code&gt;$submenu_items&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Don't use &lt;code&gt;$menu_file&lt;/code&gt; for the menu links as query string may have been stripped (though the branch that was changed to use this is never executed in core from inspection)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
However, I would be surprised if this actually gives any noticeable performance enhancement.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>13662.diff attached to Ticket #13662</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Fri, 25 Mar 2011 20:34:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13662/13662.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13662/13662.diff/1301085266811741</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16667 (Admin Bar CSS Override Bugs) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 25 Mar 2011 20:33:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16667#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16667#comment:21/1301085213387787</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17559" title="Fix position of submenus when showing avatar, props johnjamesjacoby, ..."&gt;[17559]&lt;/a&gt;) Fix position of submenus when showing avatar, props johnjamesjacoby, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16667" title="#16667: defect (bug): Admin Bar CSS Override Bugs (closed: fixed)"&gt;#16667&lt;/a&gt; for 3.1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [17559]: Fix position of submenus when showing avatar, props johnjamesjacoby, ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 25 Mar 2011 20:33:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17559</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17559/1301085210782432</guid>
      <description>&lt;p&gt;
Fix position of submenus when showing avatar, props johnjamesjacoby, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16667" title="#16667: defect (bug): Admin Bar CSS Override Bugs (closed: fixed)"&gt;#16667&lt;/a&gt; for 3.1
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16667 (Admin Bar CSS Override Bugs) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 25 Mar 2011 20:32:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16667#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16667#comment:20/1301085129994469</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17558" title="Fix position of submenus when showing avatar, props johnjamesjacoby, ..."&gt;[17558]&lt;/a&gt;) Fix position of submenus when showing avatar, props johnjamesjacoby, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16667" title="#16667: defect (bug): Admin Bar CSS Override Bugs (closed: fixed)"&gt;#16667&lt;/a&gt; for trunk
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [17558]: Fix position of submenus when showing avatar, props johnjamesjacoby, ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 25 Mar 2011 20:32:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17558</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17558/1301085127278027</guid>
      <description>&lt;p&gt;
Fix position of submenus when showing avatar, props johnjamesjacoby, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16667" title="#16667: defect (bug): Admin Bar CSS Override Bugs (closed: fixed)"&gt;#16667&lt;/a&gt; for trunk
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16846 (wp_dashboard_recent_comments can generate hundreds of queries) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 25 Mar 2011 20:13:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16846#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16846#comment:9/1301084035623853</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17557" title="Fix discrepancy in the nested loop in the Recent Comments dashboard ..."&gt;[17557]&lt;/a&gt;) Fix discrepancy in the nested loop in the Recent Comments dashboard widget, props ocean90, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16846" title="#16846: defect (bug): wp_dashboard_recent_comments can generate hundreds of queries (closed: fixed)"&gt;#16846&lt;/a&gt; for 3.1.1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [17557]: Fix discrepancy in the nested loop in the Recent Comments dashboard ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 25 Mar 2011 20:13:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17557</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17557/1301084033291576</guid>
      <description>&lt;p&gt;
Fix discrepancy in the nested loop in the Recent Comments dashboard widget, props ocean90, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16846" title="#16846: defect (bug): wp_dashboard_recent_comments can generate hundreds of queries (closed: fixed)"&gt;#16846&lt;/a&gt; for 3.1.1
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16846 (wp_dashboard_recent_comments can generate hundreds of queries) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 25 Mar 2011 20:12:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16846#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16846#comment:8/1301083954706592</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17556" title="Fix discrepancy in the nested loop in the Recent Comments dashboard ..."&gt;[17556]&lt;/a&gt;) Fix discrepancy in the nested loop in the Recent Comments dashboard widget, props ocean90, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16846" title="#16846: defect (bug): wp_dashboard_recent_comments can generate hundreds of queries (closed: fixed)"&gt;#16846&lt;/a&gt; for trunk
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [17556]: Fix discrepancy in the nested loop in the Recent Comments dashboard ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 25 Mar 2011 20:12:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17556</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17556/1301083952429183</guid>
      <description>&lt;p&gt;
Fix discrepancy in the nested loop in the Recent Comments dashboard widget, props ocean90, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16846" title="#16846: defect (bug): wp_dashboard_recent_comments can generate hundreds of queries (closed: fixed)"&gt;#16846&lt;/a&gt; for trunk
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16969 (Stick admin bar to the top of the page, not the window) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 25 Mar 2011 20:02:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16969#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16969#comment:3/1301083336498677</guid>
      <description>&lt;p&gt;
It would make sense to have the admin bar always visible if it was dynamically updated with the number of comments awaiting moderation, for example, but since it's static, it doesn't make sense.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16969 (Stick admin bar to the top of the page, not the window) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 25 Mar 2011 19:59:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16969#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16969#comment:2/1301083174157163</guid>
      <description>&lt;p&gt;
Yes, it started from the url hashes drawback.
&lt;/p&gt;
&lt;p&gt;
But also, I don't think this particular implementation detail was seriously discussed. I would love to be proven wrong, though.
&lt;/p&gt;
&lt;p&gt;
&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Rare side effect, that won't be much alleviated with our own absolutely positioned div.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It doesn't have to be absolutely positioned: &lt;code&gt;$('body').prepend('#wpadminbar');&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is by design, so "you don't have to scroll to the top of the page"
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As I see it, the major goal is to have a series of useful links always &lt;em&gt;available&lt;/em&gt; on every page, in a consistent place, not necessarily &lt;em&gt;visible&lt;/em&gt; at all time.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13777 (Consolidate WP_Http argument processing into a single class) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 25 Mar 2011 19:55:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13777#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13777#comment:6/1301082934060289</guid>
      <description>&lt;p&gt;
Not to forget that unrolled code always has the better performance. ;)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16969 (Stick admin bar to the top of the page, not the window) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Mar 2011 19:52:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16969#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16969#comment:1/1301082737658889</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
PS: The fact that this is how it worked on wp.com is not a valid argument.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sure it is.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
other absolutely possitioned elements can be misaligned
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Rare side effect, that won't be much alleviated with our own absolutely positioned div.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
less vertical space for content
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
For logged in users only. This is by design, so "you don't have to scroll to the top of the page"
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
url hashes don't work properly
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Please report problems, not solutions. This is the problem you're trying to report, isn't it?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16667 (Admin Bar CSS Override Bugs) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Mar 2011 19:50:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16667#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16667#comment:19/1301082612518629</guid>
      <description>&lt;p&gt;
While &lt;code&gt;avatar &amp;gt; ul &amp;gt; ul&lt;/code&gt; would not be enough to cover an additional level of submenus, &lt;code&gt;ul ul&lt;/code&gt; should be enough.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16969 (Stick admin bar to the top of the page, not the window) created</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 25 Mar 2011 19:50:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16969</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16969/1301082600520034</guid>
      <description>&lt;p&gt;
I would like to contend that having the admin bar visible at all times, even when scrolling down the page has more drawbacks than benefits:
&lt;/p&gt;
&lt;p&gt;
Benefits:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;you don't have to scroll to the top of the page
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Drawbacks:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;less vertical space for content
&lt;/li&gt;&lt;li&gt;url hashes don't work properly
&lt;/li&gt;&lt;li&gt;other absolutely possitioned elements can be misaligned
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
If there are other benefits that I'm not seeing please mention them, or add a link to a discussion where they were mentioned.
&lt;/p&gt;
&lt;p&gt;
PS: The fact that this is how it worked on wp.com is not a valid argument.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #8833 (extract pluggable.php function logic into separate functions) updated</title>
      
        <dc:creator>dmeiser</dc:creator>

      <pubDate>Fri, 25 Mar 2011 19:49:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8833#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8833#comment:21/1301082561731248</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16667 (Admin Bar CSS Override Bugs) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 25 Mar 2011 19:48:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16667#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16667#comment:18/1301082505423671</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16667#comment:17" title="Comment 17"&gt;johnjamesjacoby&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Patch looks good. I would even add another &lt;code&gt;ul&lt;/code&gt; in there in case a plugin adds another level of submenus:
&lt;/p&gt;
&lt;pre class="wiki"&gt;#wpadminbar .quicklinks li#wp-admin-bar-my-account-with-avatar ul ul,
#wpadminbar .quicklinks li#wp-admin-bar-my-account-with-avatar ul ul ul {
 	left: 0;
}
&lt;/pre&gt;&lt;p&gt;
BTW without support for IE6 that would have been a lot simpler, but we are on the front end so... :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16842 (class-wp-list-table.php on line 140) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 25 Mar 2011 19:48:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16842#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16842#comment:5/1301082498031692</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16968 (Plugin Search for empty string can hide all Plugins) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 25 Mar 2011 19:46:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16968#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16968#comment:1/1301082370986642</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16968 (Plugin Search for empty string can hide all Plugins) created</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 25 Mar 2011 19:44:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16968</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16968/1301082296742912</guid>
      <description>&lt;p&gt;
I'm seeing something weird on trunk, I have checked against 3.0.5, it does not have that problem:
&lt;/p&gt;
&lt;p&gt;
Searching for a plugin that does not exists (e.g. "new version") will create an empty listing. Searching again with an empty search will remove the search and keep the empty listing.
&lt;/p&gt;
&lt;p&gt;
I would have expected the behavior that the list of plugins is visible again.
&lt;/p&gt;
&lt;p&gt;
Steps to reproduce:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Go to the "Plugins" page (Plugins -&amp;gt; Plugins)
&lt;/li&gt;&lt;li&gt;Enter "new version" into the search box and press the "Search Plugins" button right next to it.
&lt;/li&gt;&lt;li&gt;The page is requested again now displaying an empty plugins list.
&lt;/li&gt;&lt;li&gt;Delete "new version" from that search box (empty the search box) and press the "Search Plugins" button right next to it.
&lt;/li&gt;&lt;li&gt;The page is requested again now displaying an empty plugins list.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
It should not display an empty plugins list in (5.).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16966 (Query Causing MySQL to use all resources / crashes server) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 25 Mar 2011 19:24:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16966#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16966#comment:6/1301081050835710</guid>
      <description>invalid: &lt;p&gt;
After some back-and-forth with the reporter, we determined that it's not the query itself that's causing the spike.
&lt;/p&gt;
&lt;p&gt;
Probably some faulty plugin or combination.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16846 (wp_dashboard_recent_comments can generate hundreds of queries) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 25 Mar 2011 19:01:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16846#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16846#comment:7/1301079671475692</guid>
      <description>&lt;p&gt;
Tested 16846-2.patch with counts &amp;lt; 5, &amp;gt; 5, and 5.  It eliminates the extra queries and produces the same results.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16846 (wp_dashboard_recent_comments can generate hundreds of queries) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Mar 2011 18:59:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16846#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16846#comment:6/1301079588920726</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16966 (Query Causing MySQL to use all resources / crashes server) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 25 Mar 2011 18:36:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16966#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16966#comment:5/1301078210038663</guid>
      <description>&lt;p&gt;
Erm, if you're running it from the shell, you need to log into mysql first, using something like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;mysql -uYourMySQLUserName -pYourPassWord -D YourDataBaseName
&lt;/pre&gt;&lt;p&gt;
If you need more help, I'm in the #wordpress-dev IRC channel on freenode.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16966 (Query Causing MySQL to use all resources / crashes server) updated</title>
      
        <dc:creator>user65</dc:creator>

      <pubDate>Fri, 25 Mar 2011 18:30:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16966#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16966#comment:4/1301077815695805</guid>
      <description>&lt;p&gt;
Thought so, thanks.
&lt;/p&gt;
&lt;p&gt;
I ran it from the Command Shell in Webmin.
&lt;/p&gt;
&lt;p&gt;
This is what I got back:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;gt; SELECT SQL_CALC_FOUND_ROWS  wp_posts.* FROM wp_posts  INNER JOIN wp_term_relationships ON (wp_posts.ID = wp_term_relationships.object_id) INNER JOIN wp_term_taxonomy ON (wp_term_relationships.term_taxonomy_id = wp_term_taxonomy.term_taxonomy_id)  WHERE 1=1  AND wp_term_taxonomy.taxonomy = 'category' AND wp_term_taxonomy.term_id IN ('34') AND wp_posts.post_type = 'post' AND (wp_posts.post_status = 'publish' OR wp_posts.post_status = 'private') GROUP BY wp_posts.ID ORDER BY wp_posts.post_date DESC LIMIT 0, 10
bash: -c: line 0: syntax error near unexpected token `('
bash: -c: line 0: `SELECT SQL_CALC_FOUND_ROWS  wp_posts.* FROM wp_posts  INNER JOIN wp_term_relationships ON (wp_posts.ID = wp_term_relationships.object_id) INNER JOIN wp_term_taxonomy ON (wp_term_relationships.term_taxonomy_id = wp_term_taxonomy.term_taxonomy_id)  WHERE 1=1  AND wp_term_taxonomy.taxonomy = 'category' AND wp_term_taxonomy.term_id IN ('34') AND wp_posts.post_type = 'post' AND (wp_posts.post_status = 'publish' OR wp_posts.post_status = 'private') GROUP BY wp_posts.ID ORDER BY wp_posts.post_date DESC LIMIT 0, 10'
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16966 (Query Causing MySQL to use all resources / crashes server) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 25 Mar 2011 18:18:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16966#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16966#comment:3/1301077124088182</guid>
      <description>&lt;p&gt;
No, don't edit query.php.
&lt;/p&gt;
&lt;p&gt;
Easiest would be to run it using phpMyAdmin. There's a little "Profiling" checkbox that you should check.
&lt;/p&gt;
&lt;p&gt;
Of course, you can also run it through the command line, if you have shell access.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16966 (Query Causing MySQL to use all resources / crashes server) updated</title>
      
        <dc:creator>user65</dc:creator>

      <pubDate>Fri, 25 Mar 2011 18:12:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16966#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16966#comment:2/1301076720056490</guid>
      <description>&lt;p&gt;
First, thanks very much Scribu.
&lt;/p&gt;
&lt;p&gt;
Man I'm a newbie when it comes to this stuff, I just do php and minor sql stuff... Like setting up, restoring, and exporting db's and such. I am very bad when it comes to running queries.
&lt;/p&gt;
&lt;p&gt;
Now that is over with... I need to run this from mysql? or should I replace this in the query.php?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16966 (Query Causing MySQL to use all resources / crashes server) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 25 Mar 2011 17:51:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16966#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16966#comment:1/1301075497072148</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Here is the equivalent query from WP 3.0:
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT SQL_CALC_FOUND_ROWS  wp_posts.* FROM wp_posts  INNER JOIN wp_term_relationships ON (wp_posts.ID = wp_term_relationships.object_id) INNER JOIN wp_term_taxonomy ON (wp_term_relationships.term_taxonomy_id = wp_term_taxonomy.term_taxonomy_id)  WHERE 1=1  AND wp_term_taxonomy.taxonomy = 'category' AND wp_term_taxonomy.term_id IN ('34') AND wp_posts.post_type = 'post' AND (wp_posts.post_status = 'publish' OR wp_posts.post_status = 'private') GROUP BY wp_posts.ID ORDER BY wp_posts.post_date DESC LIMIT 0, 10
&lt;/pre&gt;&lt;p&gt;
Could you run it and see if it's substantially faster?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10690 (WordPress does not support non-ascii characters in the domain name) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 25 Mar 2011 17:46:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10690#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10690#comment:19/1301075174941162</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16967 (Adding cat=-# removes sorting) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 25 Mar 2011 17:40:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16967#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16967#comment:1/1301074801439326</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16967 (Adding cat=-# removes sorting) created</title>
      
        <dc:creator>jdingman</dc:creator>

      <pubDate>Fri, 25 Mar 2011 17:37:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16967</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16967/1301074625261097</guid>
      <description>&lt;p&gt;
When adding in cat=-20, it stops sorting
&lt;/p&gt;
&lt;pre class="wiki"&gt;$my_query = new WP_Query('cat=-20&amp;amp;posts_per_page=10&amp;amp;orderby=date&amp;amp;order=DESC');
&lt;/pre&gt;&lt;p&gt;
when I run it like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$my_query = new WP_Query('posts_per_page=10&amp;amp;orderby=date&amp;amp;order=DESC');
&lt;/pre&gt;&lt;p&gt;
it works like I expect it will.
&lt;/p&gt;
&lt;p&gt;
I tested it in the array format as well, and adding &lt;code&gt;category__not_in&lt;/code&gt; removes the sorting I add to it
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16482 (Visibility: password-protected breaks with redirected domains) updated</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Fri, 25 Mar 2011 17:30:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16482#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16482#comment:4/1301074230863633</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16482#comment:3" title="Comment 3"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Ideally, the best way to do this would be to POST the post_id along to wp-pass.php as well, and redirect to &lt;code&gt;get_permalink($post_id);&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Taken a slightly different approach by forcing _wp_http_referer to be the permalink. Was unable to quickly reproduce the problem for testing, but this should work.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16482._wp_http_referer.diff attached to Ticket #16482</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Fri, 25 Mar 2011 17:29:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16482/16482._wp_http_referer.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16482/16482._wp_http_referer.diff/1301074147227031</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16966 (Query Causing MySQL to use all resources / crashes server) created</title>
      
        <dc:creator>user65</dc:creator>

      <pubDate>Fri, 25 Mar 2011 16:28:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16966</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16966/1301070516230873</guid>
      <description>&lt;p&gt;
Hello, I have the following posts for information and resources:
&lt;a class="ext-link" href="http://wordpress.org/support/topic/database-maxing-cpu-usage-after-upgrade-to-31"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/database-maxing-cpu-usage-after-upgrade-to-31&lt;/a&gt;
&lt;a class="ext-link" href="http://wordpress.org/support/topic/mysql-slow-queries-wordpress-31"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/mysql-slow-queries-wordpress-31&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
My issue is that my host is telling me to move the wp-posts table to a different server, or different database... or SOMETHING. I dunno.
&lt;/p&gt;
&lt;p&gt;
There is a query that is eating up all of my resources, This only happened since upgrading to 3.1. This query is available in the post I started - Database Maxing CPU Usage after Upgrade to 3.1.
&lt;/p&gt;
&lt;p&gt;
I was thinking about using the modified query.php, but the ticket is a mess! &lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/10964"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/ticket/10964&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16885 (Warning emited in Header parsing when server does not specify a ...) updated</title>
      
        <dc:creator>azizur</dc:creator>

      <pubDate>Fri, 25 Mar 2011 15:34:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16885#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16885#comment:13/1301067288759047</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Not sure if this related and if it could be address at the time.
&lt;/p&gt;
&lt;p&gt;
When the fetching a url for rss which is unreachable you also get:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Warning: Invalid argument supplied for foreach() in {path-to}/wp-includes/class-http.php on line 362
RSS Error: A feed could not be found at http://my-disfunctional-url.org/news/feed/
&lt;/pre&gt;&lt;p&gt;
This is not helpful to average users/subscribers when they see this once they are re-directed to dashboard after login.
&lt;/p&gt;
&lt;p&gt;
Want to re-produce it?
Go to Dashboard and change the "WordPress Blog" or "Dashboard Primary" widget url to something that does not work.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14760 (wp_get_shortlink not working on pages) updated</title>
      
        <dc:creator>sillybean</dc:creator>

      <pubDate>Fri, 25 Mar 2011 14:57:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14760#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14760#comment:4/1301065034056860</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Updated patch removes some cruft and makes sure shortlinks are generated only for public post types.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>wp_get_shortlink-2.diff attached to Ticket #14760</title>
      
        <dc:creator>sillybean</dc:creator>

      <pubDate>Fri, 25 Mar 2011 14:55:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14760/wp_get_shortlink-2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14760/wp_get_shortlink-2.diff/1301064938998077</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16885 (Warning emited in Header parsing when server does not specify a ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 13:47:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16885#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16885#comment:12/1301060827434370</guid>
      <description>&lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16491 (Automatically backup database before updating) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 13:38:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16491#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16491#comment:4/1301060329742166</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16492 (Improvements to the Wordpress Update Process) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 13:37:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16492#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16492#comment:1/1301060252933723</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16482 (Visibility: password-protected breaks with redirected domains) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 13:36:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16482#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16482#comment:3/1301060195141121</guid>
      <description>&lt;p&gt;
This is caused by wp-post.php using &lt;code&gt;wp_safe_redirect(wp_get_referer());&lt;/code&gt; for the redirection.
&lt;/p&gt;
&lt;p&gt;
Since the referer is set to &lt;a class="ext-link" href="http://127"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://127&lt;/a&gt;... instead of &lt;a class="ext-link" href="http://localhost"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://localhost&lt;/a&gt;.. and i'm logged in, it'll redirect me to the WordPress admin.
&lt;/p&gt;
&lt;p&gt;
Ideally, the best way to do this would be to POST the post_id along to wp-pass.php as well, and redirect to &lt;code&gt;get_permalink($post_id);&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16482 (Visibility: password-protected breaks with redirected domains) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 13:33:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16482#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16482#comment:2/1301059988225162</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Confirmed.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Visited &lt;a class="ext-link" href="http://127.0.0.1/wordpress/password-protected-post/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://127.0.0.1/wordpress/password-protected-post/&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Entered password, Form submitted to &lt;a class="ext-link" href="http://localhost/wordpress/wp-pass.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://localhost/wordpress/wp-pass.php&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Redirected to &lt;a class="ext-link" href="http://localhost/wordpress/wp-admin/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://localhost/wordpress/wp-admin/&lt;/a&gt;
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16842 (class-wp-list-table.php on line 140) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 13:26:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16842#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16842#comment:4/1301059566138750</guid>
      <description>worksforme: &lt;p&gt;
Tracing &lt;code&gt;$args['total_items']&lt;/code&gt; back, it is set by &lt;code&gt;get_comments( ..count = true );&lt;/code&gt; the only way I can see this happening is with an out of date wp-includes/comment.php (Or of course, a plugin messing with things it shouldn't).
&lt;/p&gt;
&lt;p&gt;
Feel free to re-open this ticket with extra details to reproduce it.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16700 (Add a button for embedding flash videos) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Mar 2011 13:18:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16700#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16700#comment:14/1301059115636462</guid>
      <description>wontfix: &lt;p&gt;
Sounds like a good idea for a plugin.
&lt;/p&gt;
&lt;p&gt;
When the licensing issue was raised, it was decided we should simply remove it, rather than replace it, because so few used it.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16625 (wp_dropdown_categories reqs (consistent) option_none_value) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 13:15:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16625#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16625#comment:6/1301058940094910</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16887 (Increase the default number of maximum redirects to 20) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 13:14:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16887#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16887#comment:8/1301058870380698</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16855 (HTTP API No Follow Redirection) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 13:14:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16855#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16855#comment:37/1301058861727434</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16965 (Additional documentation for get_comment_meta) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 13:13:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16965#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16965#comment:3/1301058823890148</guid>
      <description>&lt;p&gt;
The $meta_key is not optional at present with the function as-is. You can however pass a blank string to it to retrieve all meta.
&lt;/p&gt;
&lt;p&gt;
Setting a default on $key would however allow that.
&lt;/p&gt;
&lt;pre class="wiki"&gt;function get_comment_meta($comment_id, $key, $single = false) {
   return get_metadata('comment', $comment_id, $key, $single);
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16965 (Additional documentation for get_comment_meta) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 25 Mar 2011 11:37:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16965#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16965#comment:2/1301053037483363</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14648 (Flash Uploader security error in IDN domains) updated</title>
      
        <dc:creator>codestyling</dc:creator>

      <pubDate>Fri, 25 Mar 2011 11:02:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14648#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14648#comment:9/1301050932553877</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
IDN handling is different related to Browsers! WebKit based browser like Safari and Chrome work with PunyCode URL's but others like IE, Firefox and Opera doesn't.
This is a problem of Cross Site Scripting detection and can be realize and tested, if the Blog is configured to an PunyCode Url. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
example out of a case I did investigate: &lt;br /&gt;
IDN: &lt;a class="ext-link" href="http://с-проект.рф"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://с-проект.рф&lt;/a&gt; &lt;br /&gt;
PunyCode: &lt;a class="ext-link" href="http://xn----jtbpoegeo.xn--p1ai"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://xn----jtbpoegeo.xn--p1ai&lt;/a&gt; &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If you  try to call a JSON request like this example with the generated admin_url() out of WordPress, which would become the PunyCode one:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	new Ajax.Request('http://xn----jtbpoegeo.xn--p1ai/wp-admin/admin-ajax.php' ?&amp;gt;',
		{
			parameters: {
				action: 'get_download_section'
			},
			onSuccess: function(transport) {
				elem.title=transport.responseJSON.title;
			},
			onFailure: function(transport) {
				alert('JSON security bug')
			}
		}
	);
&lt;/pre&gt;&lt;p&gt;
and the answer is correct 'application/json' with correct JSON content, than this fails on all browsers except WebKit based! &lt;br /&gt;
If you try it with the original IDN Url like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	new Ajax.Request('http://с-проект.рф/wp-admin/admin-ajax.php' ?&amp;gt;',
&lt;/pre&gt;&lt;p&gt;
it works now for all other browsers but fails now on WebKit based.
&lt;/p&gt;
&lt;p&gt;
My suggestion will be a conditional convertion back to IDN, if browser is &lt;strong&gt;not&lt;/strong&gt; WebKit based.
I did this inside my WordPress plugin "Codestyling Localization" and it works now in any case. I did use the class &lt;strong&gt;idna_convert&lt;/strong&gt; from Matthias Sommerfeld for easy decode of PunyCode admin url's in such a case.
&lt;/p&gt;
&lt;p&gt;
Please check it also in relation to &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/11734" title="#11734: defect (bug): trackback_rdf() for IDN (xn--) Domains produces invalid HTML (new)"&gt;#11734&lt;/a&gt; / &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/10690" title="#10690: defect (bug): WordPress does not support non-ascii characters in the domain name (reopened)"&gt;#10690&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14648" title="#14648: defect (bug): Flash Uploader security error in IDN domains (closed: wontfix)"&gt;#14648&lt;/a&gt; because this may also affect the flash uploader feeded with PunyCode url's instead of IDN for some browser!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10690 (WordPress does not support non-ascii characters in the domain name) reopened</title>
      
        <dc:creator>codestyling</dc:creator>

      <pubDate>Fri, 25 Mar 2011 11:01:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10690#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10690#comment:18/1301050896063724</guid>
      <description>&lt;p&gt;
IDN handling is different related to Browsers! WebKit based browser like Safari and Chrome work with PunyCode URL's but others like IE, Firefox and Opera doesn't.
This is a problem of Cross Site Scripting detection and can be realize and tested, if the Blog is configured to an PunyCode Url. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
example out of a case I did investigate: &lt;br /&gt;
IDN: &lt;a class="ext-link" href="http://с-проект.рф"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://с-проект.рф&lt;/a&gt; &lt;br /&gt;
PunyCode: &lt;a class="ext-link" href="http://xn----jtbpoegeo.xn--p1ai"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://xn----jtbpoegeo.xn--p1ai&lt;/a&gt; &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If you  try to call a JSON request like this example with the generated admin_url() out of WordPress, which would become the PunyCode one:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	new Ajax.Request('http://xn----jtbpoegeo.xn--p1ai/wp-admin/admin-ajax.php' ?&amp;gt;',
		{
			parameters: {
				action: 'get_download_section'
			},
			onSuccess: function(transport) {
				elem.title=transport.responseJSON.title;
			},
			onFailure: function(transport) {
				alert('JSON security bug')
			}
		}
	);
&lt;/pre&gt;&lt;p&gt;
and the answer is correct 'application/json' with correct JSON content, than this fails on all browsers except WebKit based! &lt;br /&gt;
If you try it with the original IDN Url like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	new Ajax.Request('http://с-проект.рф/wp-admin/admin-ajax.php' ?&amp;gt;',
&lt;/pre&gt;&lt;p&gt;
it works now for all other browsers but fails now on WebKit based.
&lt;/p&gt;
&lt;p&gt;
My suggestion will be a conditional convertion back to IDN, if browser is &lt;strong&gt;not&lt;/strong&gt; WebKit based.
I did this inside my WordPress plugin "Codestyling Localization" and it works now in any case. I did use the class &lt;strong&gt;idna_convert&lt;/strong&gt; from Matthias Sommerfeld for easy decode of PunyCode admin url's in such a case.
&lt;/p&gt;
&lt;p&gt;
Please check it also in relation to &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/11734" title="#11734: defect (bug): trackback_rdf() for IDN (xn--) Domains produces invalid HTML (new)"&gt;#11734&lt;/a&gt; / &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/10690" title="#10690: defect (bug): WordPress does not support non-ascii characters in the domain name (reopened)"&gt;#10690&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14648" title="#14648: defect (bug): Flash Uploader security error in IDN domains (closed: wontfix)"&gt;#14648&lt;/a&gt; because this may also affect the flash uploader feeded with PunyCode url's instead of IDN for some browser!
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #11734 (trackback_rdf() for IDN (xn--) Domains produces invalid HTML) updated</title>
      
        <dc:creator>codestyling</dc:creator>

      <pubDate>Fri, 25 Mar 2011 11:00:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11734#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11734#comment:5/1301050830247139</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
IDN handling is different related to Browsers! WebKit based browser like Safari and Chrome work with PunyCode URL's but others like IE, Firefox and Opera doesn't.
This is a problem of Cross Site Scripting detection and can be realize and tested, if the Blog is configured to an PunyCode Url. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
example out of a case I did investigate: &lt;br /&gt;
IDN: &lt;a class="ext-link" href="http://с-проект.рф"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://с-проект.рф&lt;/a&gt; &lt;br /&gt;
PunyCode: &lt;a class="ext-link" href="http://xn----jtbpoegeo.xn--p1ai"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://xn----jtbpoegeo.xn--p1ai&lt;/a&gt; &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If you  try to call a JSON request like this example with the generated admin_url() out of WordPress, which would become the PunyCode one:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	new Ajax.Request('http://xn----jtbpoegeo.xn--p1ai/wp-admin/admin-ajax.php' ?&amp;gt;',
		{
			parameters: {
				action: 'get_download_section'
			},
			onSuccess: function(transport) {
				elem.title=transport.responseJSON.title;
			},
			onFailure: function(transport) {
				alert('JSON security bug')
			}
		}
	);
&lt;/pre&gt;&lt;p&gt;
and the answer is correct 'application/json' with correct JSON content, than this fails on all browsers except WebKit based! &lt;br /&gt;
If you try it with the original IDN Url like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	new Ajax.Request('http://с-проект.рф/wp-admin/admin-ajax.php' ?&amp;gt;',
&lt;/pre&gt;&lt;p&gt;
it works now for all other browsers but fails now on WebKit based.
&lt;/p&gt;
&lt;p&gt;
My suggestion will be a conditional convertion back to IDN, if browser is &lt;strong&gt;not&lt;/strong&gt; WebKit based.
I did this inside my WordPress plugin "Codestyling Localization" and it works now in any case. I did use the class &lt;strong&gt;idna_convert&lt;/strong&gt; from Matthias Sommerfeld for easy decode of PunyCode admin url's in such a case.
&lt;/p&gt;
&lt;p&gt;
Please check it also in relation to &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/11734" title="#11734: defect (bug): trackback_rdf() for IDN (xn--) Domains produces invalid HTML (new)"&gt;#11734&lt;/a&gt; / &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/10690" title="#10690: defect (bug): WordPress does not support non-ascii characters in the domain name (reopened)"&gt;#10690&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14648" title="#14648: defect (bug): Flash Uploader security error in IDN domains (closed: wontfix)"&gt;#14648&lt;/a&gt; because this may also affect the flash uploader feeded with PunyCode url's instead of IDN for some browser!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16862 (Eliminating the reinstall-on-core-upgrade behavior (for Akismet and ...) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 25 Mar 2011 10:59:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16862#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16862#comment:7/1301050760236204</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14484#comment:20" title="Comment 20 for #14484: task (blessed): Make WordPress core updates only update the core (closed: fixed)"&gt;scribu&lt;/a&gt; noted:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The blessing: &lt;a class="ext-link" href="https://wpdevel.wordpress.com/2011/03/18/wordpress-3-2-the-plan-faster-lighter/#comment-17295"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wpdevel.wordpress.com/2011/03/18/wordpress-3-2-the-plan-faster-lighter/#comment-17295&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14466 (Widget position uses footer position styling) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 25 Mar 2011 10:57:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14466#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14466#comment:14/1301050629274497</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14466#comment:13" title="Comment 13"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Crazy idea: rename the admin #footer to #wpfooter, to match #wphead.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8847 (Odd "Older Entries" link problem) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 25 Mar 2011 10:55:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8847#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8847#comment:13/1301050526967510</guid>
      <description>&lt;p&gt;
-1 - HTTP URI paths are case-sensitive as well as many file-systems, especially server preferred ones.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14348 (If it's a HEAD request, stop after the head!) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 25 Mar 2011 10:51:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14348#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14348#comment:14/1301050302715929</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14348#comment:4" title="Comment 4"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I can easily picture a plugin overriding headers after an output buffer gets started or something similar. The patch exits too early.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
True output buffers will flush on exit.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I suspect anything short of output buffering, running the full WP, and discarding the output, will introduce potential issues. Alternatively we could close as wontfix or worksforme, since that would be what apache does already.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Confirmed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16960 (Problems with plugin readme.txt and update date) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 25 Mar 2011 10:34:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16960#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16960#comment:4/1301049291818095</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16960#comment:3" title="Comment 3"&gt;oferwald&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Ok, added whitespace and the description got updated, however the updated date is still wrong and is dating three versions back
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Re-tag the whole plugin in both the .php, the readme and the SVN tags. That should refresh.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16606.4.patch attached to Ticket #16606</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 25 Mar 2011 10:27:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16606/16606.4.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16606/16606.4.patch/1301048869214466</guid>
      <description>&lt;p&gt;
All checks, result truly filterable line in WP_Http_Curl::test() and WP_Http_ExtHttp::test()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16606 (WP_Http_Streams::test doesn't check enough to confirm if it can do HTTPS) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 25 Mar 2011 10:21:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16606#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16606#comment:5/1301048496461431</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16606#comment:4" title="Comment 4"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The Streams class only accepts &lt;a class="ext-link" href="http://"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://&lt;/a&gt; and &lt;a class="ext-link" href="https://"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://&lt;/a&gt; scheme's:
&lt;/p&gt;
&lt;pre class="wiki"&gt;		if ( 'http' != $arrURL['scheme'] &amp;amp;&amp;amp; 'https' != $arrURL['scheme'] )
			$url = preg_replace('|^' . preg_quote($arrURL['scheme'], '|') . '|', 'http', $url);
&lt;/pre&gt;&lt;p&gt;
That renders most of the content of these patches moot.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hm?
&lt;/p&gt;
&lt;p&gt;
As this is the public test() function, it should return false if you test it with a URL with a scheme that is not supported, than that function should first of all return false for that tested URL.
&lt;/p&gt;
&lt;p&gt;
If the class can technically not support the scheme of the URL because there is no stream wrapper for that scheme registered, it should return false. Existing wrappers are available via stream_get_wrappers().
&lt;/p&gt;
&lt;p&gt;
If you want to check for SSL transport, my stance is to make use of stream_get_transports() to check for SSL. That check is more generic than checking for the openssl extension in specific.
&lt;/p&gt;
&lt;p&gt;
I'll attach an updated patch that takes care of all of those.
&lt;/p&gt;
&lt;p&gt;
For your suggested fopen exists + ini_get exists + allow_url_fopen check I suggest we create a function in either a base class for all transports or into WP_HTTP as this is used more and more often.
&lt;/p&gt;
&lt;p&gt;
We could add some for SSL as well because until now, it's checked against the open_ssl library only. A -&amp;gt;has($what) like wpdb::has_cap() probably. Or on both classes, so that WP_Http can check on all supported transports. Could be added to blocking as well, just an idea.
&lt;/p&gt;
&lt;p&gt;
For what reason does the http stream transport class not support other wrappers btw?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14992 (When Object Caching is enabled switch_to_blog causes issues with some ...) updated</title>
      
        <dc:creator>simonwheatley</dc:creator>

      <pubDate>Fri, 25 Mar 2011 09:23:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14992#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14992#comment:16/1301044999285981</guid>
      <description>&lt;p&gt;
With a persistent Object Cache (i.e. a memcached implementation):
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Create a post ID 10 in blog 2
&lt;/li&gt;&lt;li&gt;From site 2, switch to blog 1
&lt;/li&gt;&lt;li&gt;Get post 10
&lt;/li&gt;&lt;li&gt;Restore current blog
&lt;/li&gt;&lt;li&gt;Go to site 2 and amend post 10
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
WP will have automatically flushed the post 10 in the object cache for blog 2, but it is persisting in it's previous state in the object cache for blog 1.
&lt;/p&gt;
&lt;p&gt;
I can't think of a sane solution to this problem, I think we just have to wait for the cache in blog 1 to expire. Caveat Auctor, I guess.
&lt;/p&gt;
&lt;p&gt;
Separately: There is a way to add the &lt;code&gt;$blog_id&lt;/code&gt; to W3TC Object Cache using the built in W3TC hooks, see &lt;a class="ext-link" href="http://wordpress.org/support/topic/plugin-w3-total-cache-w3-total-cache-multisite-setup-featured-posts-on-main-site-from-sub-sites/page/2?replies=33#post-2024407"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;this forum post&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16965 (Additional documentation for get_comment_meta) updated</title>
      
        <dc:creator>nprasath002</dc:creator>

      <pubDate>Fri, 25 Mar 2011 07:06:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16965#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16965#comment:1/1301036762050434</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13835 (XML-RPC API should return commentmeta values) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 06:55:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13835#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13835#comment:12/1301036124509186</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
P.S - i,m nt getting any updates about this ticket via email. how can i do that
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ensure your email is listed in the &lt;a class="ext-link" href="http://core.trac.wordpress.org/prefs"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;preferences&lt;/a&gt; and check the CC box when making a reply.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13835 (XML-RPC API should return commentmeta values) reopened</title>
      
        <dc:creator>nprasath002</dc:creator>

      <pubDate>Fri, 25 Mar 2011 06:49:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13835#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13835#comment:11/1301035780637656</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #13835 (XML-RPC API should return commentmeta values) closed</title>
      
        <dc:creator>nprasath002</dc:creator>

      <pubDate>Fri, 25 Mar 2011 06:47:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13835#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13835#comment:10/1301035643235492</guid>
      <description>fixed: &lt;p&gt;
THe documentation for get_comment_meta is not complete as the key value and the boolean is optional.
i created a ticket for that here
&lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/16965"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/ticket/16965&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Also i normally test with a java client and print to see whether i,m
getting the expected results
should i removed needs testing??
&lt;/p&gt;
&lt;p&gt;
P.S - i,m nt getting any updates about this ticket via email. how can i do that
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16125 (Tag cloud widget: hide dropdown when there's only one taxonomy) updated</title>
      
        <dc:creator>GautamGupta</dc:creator>

      <pubDate>Fri, 25 Mar 2011 06:41:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16125#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16125#comment:7/1301035290911955</guid>
      <description>&lt;p&gt;
Attached another patch based on nacin's recommendations.
&lt;/p&gt;
&lt;p&gt;
Should we return &lt;code&gt;'post_tag'&lt;/code&gt; in &lt;code&gt;_get_current_taxonomy()&lt;/code&gt; if no taxonomy was found saved in the options?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>comment_meta_doc.diff attached to Ticket #16965</title>
      
        <dc:creator>nprasath002</dc:creator>

      <pubDate>Fri, 25 Mar 2011 06:39:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16965/comment_meta_doc.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16965/comment_meta_doc.diff/1301035175322591</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>tag_cloud.diff attached to Ticket #16125</title>
      
        <dc:creator>GautamGupta</dc:creator>

      <pubDate>Fri, 25 Mar 2011 06:35:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16125/tag_cloud.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16125/tag_cloud.diff/1301034943194379</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16965 (Additional documentation for get_comment_meta) created</title>
      
        <dc:creator>nprasath002</dc:creator>

      <pubDate>Fri, 25 Mar 2011 06:34:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16965</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16965/1301034870960886</guid>
      <description>&lt;p&gt;
the documentation for get_comment_meta in comment.php can be improved.
The metakey and the single value are optional.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #13777 (Consolidate WP_Http argument processing into a single class) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 05:34:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13777#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13777#comment:5/1301031285803185</guid>
      <description>wontfix: &lt;p&gt;
I don't see any need for this.
&lt;/p&gt;
&lt;p&gt;
The WP_HTTP::request() method takes care of the incoming request and can handle processing the args. The processing of the args in each transport is specific to it's needs, to abstract the minimal code duplication will introduce more code and increase the churn rate of the existing code.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16606 (WP_Http_Streams::test doesn't check enough to confirm if it can do HTTPS) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 05:29:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16606#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16606#comment:4/1301030959054128</guid>
      <description>&lt;p&gt;
The Streams class only accepts &lt;a class="ext-link" href="http://"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://&lt;/a&gt; and &lt;a class="ext-link" href="https://"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://&lt;/a&gt; scheme's:
&lt;/p&gt;
&lt;pre class="wiki"&gt;		if ( 'http' != $arrURL['scheme'] &amp;amp;&amp;amp; 'https' != $arrURL['scheme'] )
			$url = preg_replace('|^' . preg_quote($arrURL['scheme'], '|') . '|', 'http', $url);
&lt;/pre&gt;&lt;p&gt;
That renders most of the content of these patches moot.
&lt;/p&gt;
&lt;p&gt;
Suggested:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	function test($args = array()) {
		$use = function_exists('fopen');
		if ( function_exists('ini_get') &amp;amp;&amp;amp; true != ini_get('allow_url_fopen') )
			$use = false;
		if ( !empty($args['ssl']) &amp;amp;&amp;amp; !extension_loaded('openssl') )
			$use = false;
		return apply_filters('use_streams_transport', $use, $args);
	}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13841 (Some HTTP Transports do not respect transfer timeouts) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 05:20:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13841#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13841#comment:13/1301030403601411</guid>
      <description>&lt;p&gt;
In the case of the Streams transport, do we need to be good citizens and close the file handle when it times out?
&lt;/p&gt;
&lt;p&gt;
There's code such as this being mentioned on php.net:
&lt;/p&gt;
&lt;pre class="wiki"&gt;    while (!feof($sock) &amp;amp;&amp;amp; !$info['timed_out']) {
         $file .= fgets($sock, 4096);
         $info = stream_get_meta_data($sock);
     }
     fclose($sock);
&lt;/pre&gt;&lt;p&gt;
Do you have some form of reference for the / 2 timeout as well? It'd be useful to have something to point to.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16947 (Author role should have "Stick this post to the front page" hidden) updated</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Fri, 25 Mar 2011 04:56:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16947#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16947#comment:1/1301029006855108</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Side note, it seems a bit weird that an author isn't allowed to unstick a public post, but can unstick it by making it private/protected.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16947.diff attached to Ticket #16947</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Fri, 25 Mar 2011 04:48:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16947/16947.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16947/16947.diff/1301028525043512</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16236 (Method to stream file downloads in HTTP API, to reduce update memory ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 02:42:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16236#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16236#comment:37/1301020942491001</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17555" title="First run of introducing Stream-To-File for the WP_HTTP API. Reduces ..."&gt;[17555]&lt;/a&gt;) First run of introducing Stream-To-File for the WP_HTTP API. Reduces memory consumption during file downloads. Implemented in download_url() for upgraders. Props sivel. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16236" title="#16236: task (blessed): Method to stream file downloads in HTTP API, to reduce update memory ... (closed: fixed)"&gt;#16236&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [17555]: First run of introducing Stream-To-File for the WP_HTTP API. Reduces ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 02:42:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17555</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17555/1301020940189895</guid>
      <description>&lt;p&gt;
First run of introducing Stream-To-File for the WP_HTTP API. Reduces memory consumption during file downloads. Implemented in download_url() for upgraders. Props sivel. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16236" title="#16236: task (blessed): Method to stream file downloads in HTTP API, to reduce update memory ... (closed: fixed)"&gt;#16236&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10646 (Admin Menus Shouldn't Jump Around on Pageload) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 25 Mar 2011 01:31:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10646#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10646#comment:16/1301016685055406</guid>
      <description>&lt;p&gt;
10646-3.patch is almost identical to 10646.2.diff except it uses only CSS to initially open/close the menus so it doesn't require any JS to run on DOM ready.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10646-3.patch attached to Ticket #10646</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 25 Mar 2011 01:28:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10646/10646-3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10646/10646-3.patch/1301016517926062</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16819 (Accessibility: Internal Linking behaviour in Editor / TinyMCE) updated</title>
      
        <dc:creator>stencil</dc:creator>

      <pubDate>Fri, 25 Mar 2011 01:18:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16819#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16819#comment:7/1301015880407218</guid>
      <description>&lt;p&gt;
@dd32 I understand the behaviour you mention, and yes it does differ from my 'issue' which is relating to text selected which matches the post title.
&lt;/p&gt;
&lt;p&gt;
Sorry, perhaps this is trivial. I'm just not keen on automatically adding title attributes to &lt;em&gt;every&lt;/em&gt; link.  I imagine most users will leave the assigned title text because it's been filled in for them.
&lt;/p&gt;
&lt;p&gt;
Perhaps a conditional in the JavaScript that if selection == post title don't auto fill the field?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16819 (Accessibility: Internal Linking behaviour in Editor / TinyMCE) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 00:59:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16819#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16819#comment:6/1301014782076464</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Auto-filling the title attribute with the exact (duplicate) content of the post name is the issue. The field should be left blank until the user enters useful information.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Correct me if I'm wrong here, But the only way to insert a link is to select some text (In this case, I selected "See what I said about myself") click the link button, Find a object to link to (In this case I linked to "About"), The result is that the Title attribute contains what the link is actually linking to which is in most cases going to be different from the selected text.
&lt;/p&gt;
&lt;p&gt;
Of course, If the text you're linking is exactly the same as the page title of the page you want to link to, you'll get your experienced duplicate title.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset in tests [344]: Mark the WPHTTP baseclass as hidden to prevent it being run when all ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 00:52:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/344/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/344/tests/1301014379154092</guid>
      <description>&lt;p&gt;
Mark the WPHTTP baseclass as hidden to prevent it being run when all test cases are run; Add a file streaming testcase.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16631 (Internal linking feature is not available when rich text editing is ...) updated</title>
      
        <dc:creator>jane</dc:creator>

      <pubDate>Fri, 25 Mar 2011 00:52:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16631#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16631#comment:5/1301014325725888</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16631 (Internal linking feature is not available when rich text editing is ...) updated</title>
      
        <dc:creator>jane</dc:creator>

      <pubDate>Fri, 25 Mar 2011 00:51:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16631#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16631#comment:4/1301014298989160</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
What I would actually like to see, and have talked about with @koopersmith (who did the internal linking feature, to answer @jsternberg's question), is not replicating internal linking in the html view, but putting linking up on the level of media insertion, so the same thing is available to both. Not in scope for 3.2, but would love for 3.3, and a plugin in the meantime would be great.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16819 (Accessibility: Internal Linking behaviour in Editor / TinyMCE) reopened</title>
      
        <dc:creator>stencil</dc:creator>

      <pubDate>Fri, 25 Mar 2011 00:46:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16819#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16819#comment:5/1301014000559231</guid>
      <description>&lt;p&gt;
When the Insert/edit link dialog box appears I see this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Enter the destination URL
URL [ http:// ]
Title [       ]
&lt;/pre&gt;&lt;p&gt;
I click on a post to link to eg. "Friday Travel Adventure", I get this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;URL [ http://mysite.com/friday-travel-adventure/ ]
Title [ Friday Travel Adventure ]
&lt;/pre&gt;&lt;p&gt;
Auto-filling the title attribute with the exact (duplicate) content of the post name is the issue.  The field should be left blank until the user enters useful information.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;See also&lt;/strong&gt;
&lt;a class="ext-link" href="http://www.456bereastreet.com/archive/200903/dont_duplicate_link_text_in_the_title_attribute/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.456bereastreet.com/archive/200903/dont_duplicate_link_text_in_the_title_attribute/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.w3.org/TR/WCAG20-TECHS/H33"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.w3.org/TR/WCAG20-TECHS/H33&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #16819 (Accessibility: Internal Linking behaviour in Editor / TinyMCE) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Mar 2011 00:30:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16819#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16819#comment:4/1301013014495956</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
If you click a post (as part of internal linking), the post title gets filled, but I'm really not sure what the report here is referring to.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16819 (Accessibility: Internal Linking behaviour in Editor / TinyMCE) updated</title>
      
        <dc:creator>jane</dc:creator>

      <pubDate>Fri, 25 Mar 2011 00:27:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16819#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16819#comment:3/1301012840337550</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16819 (Accessibility: Internal Linking behaviour in Editor / TinyMCE) closed</title>
      
        <dc:creator>jane</dc:creator>

      <pubDate>Fri, 25 Mar 2011 00:27:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16819#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16819#comment:2/1301012828564034</guid>
      <description>worksforme: &lt;p&gt;
Where are you seeing that? When I use internal linking it does not pre-fill the title field.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16964 (New function network_delete_option($option) to help keep option ...) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 25 Mar 2011 00:20:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16964#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16964#comment:6/1301012439263734</guid>
      <description>wontfix: &lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It seems to me that the onus should be on the plugin developers.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It really can't be though. Not at the scale that multisite can operate on.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The onus shouldn't be on plugin developers, or on super admins.
&lt;/p&gt;
&lt;p&gt;
It should be on WP Core, just like it is when a database upgrade is required.
&lt;/p&gt;
&lt;p&gt;
Yes, it might take two weeks to finish, but at least the super admin doesn't have to go running around for custom scripts to get the job done.
&lt;/p&gt;
&lt;p&gt;
Anyway, as nacin said, the approach provided in this ticket doesn't scale. Closing as wontfix.
&lt;/p&gt;
&lt;p&gt;
PS: Nacin can reply even with the ticket closed.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16964 (New function network_delete_option($option) to help keep option ...) updated</title>
      
        <dc:creator>philipwalton</dc:creator>

      <pubDate>Fri, 25 Mar 2011 00:02:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16964#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16964#comment:5/1301011359229493</guid>
      <description>&lt;p&gt;
Nacin, I guess that's true about sites with a very large number of blogs. Excellent point.
&lt;/p&gt;
&lt;p&gt;
When you say "This function isn't doing that either, mind you", what are you saying it's not doing? I'm not following you.
&lt;/p&gt;
&lt;p&gt;
Finally, do you advise -- as a general rule -- to not spend much time worrying about plugin cleanup on a multisite setup? If that is a general operating principle, it would certainly give me a lot less to worry about. (At least until network activation/uninstall hooks don't "suck")
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>