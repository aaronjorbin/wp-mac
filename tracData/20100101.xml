<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #11687 (Move Upload Files options to options-media.php) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Jan 2010 23:38:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11687#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11687#comment:1/1262389107000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="ext-link" href="http://core.trac.wordpress.org/attachment/ticket/11687/11687.diff"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;11687.diff&lt;/a&gt; moves Upload Files to options-media.php and gets rid of options-misc.php since it's empty.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>11687.diff attached to Ticket #11687</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Jan 2010 23:37:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11687/11687.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11687/11687.diff/1262389053000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11687 (Move Upload Files options to options-media.php) created</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Jan 2010 23:35:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11687</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11687/1262388938000000</guid>
      <description>&lt;p&gt;
Currently, the group of options related to file uploads is put in options-misc.php, when it should actually be in options-media.php.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11686 (Missing PHP Close Tag When Manually Creating Config) closed</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Fri, 01 Jan 2010 23:22:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11686#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11686#comment:3/1262388173000000</guid>
      <description>invalid: &lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10106" title="#10106: defect (bug): wp-config-sample.php missing closing PHP tag (closed: invalid)"&gt;#10106&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #11686 (Missing PHP Close Tag When Manually Creating Config) updated</title>
      
        <dc:creator>andrewturner</dc:creator>

      <pubDate>Fri, 01 Jan 2010 23:20:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11686#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11686#comment:2/1262388026000000</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11686 (Missing PHP Close Tag When Manually Creating Config) updated</title>
      
        <dc:creator>andrewturner</dc:creator>

      <pubDate>Fri, 01 Jan 2010 23:20:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11686#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11686#comment:1/1262388017000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11686 (Missing PHP Close Tag When Manually Creating Config) created</title>
      
        <dc:creator>andrewturner</dc:creator>

      <pubDate>Fri, 01 Jan 2010 23:19:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11686</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11686/1262387981000000</guid>
      <description>&lt;p&gt;
in 2.9.1 when you are prompted to manually create a wp-config.php file due to the various reasons, and it gives the user the code it was found that a closing php tag was missing ?&amp;gt;.
&lt;/p&gt;
&lt;p&gt;
It's easy to rectify, but could be an issue for those that are unsure.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11681 (Erratic Behavior When wp-includes/pomo Missing) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Fri, 01 Jan 2010 22:08:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11681#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11681#comment:1/1262383710000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I don't see how switching to require_once instead of include_once would fix this.
&lt;/p&gt;
&lt;p&gt;
The file which includes the NOOP_Translations class &lt;code&gt;wp-includes/pomo/translations.php&lt;/code&gt; has always existed and the way this is pulled in hasn't changed between 2.8 and 2.9.
&lt;/p&gt;
&lt;p&gt;
The content of the file has though - &lt;a class="ext-link" href="http://bit.ly/66oWKa"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://bit.ly/66oWKa&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Moving to 3.0 - I can see the argument for using require over include here as the content of the files is needed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11328 (Issue with double click on comment's text when quick edit is used) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 01 Jan 2010 21:23:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11328#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11328#comment:6/1262380989000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Fri, 01 Jan 2010 20:47:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:98</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:98/1262378831000000</guid>
      <description>&lt;p&gt;
&lt;strong&gt;@Denis-de-Bernardy: If, however, the purpose is to allow users to search for a $15-25 restaurants in an arbitrary location, even moderate amounts of data will reveal that the postmeta table is not appropriate to store those details. (Among other things, you'll want the geodata in a column of its own right, complete with a GIST index.)&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
I wasn't sure where you were going with that but now you've elaborated I agree completely. We discussed this issue on wp-hackers recently where we discussed storing custom fields in a custom table (like Pods and Drupal CCK) but how that Matt was completely against such an idea. I proposed there being the option for use custom fields for the 80 percentile case and a custom table for the 20 percentile case but the discussion died down after that.
&lt;/p&gt;
&lt;p&gt;
Maybe such an approach could make its way into a canonical plugin?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11328 (Issue with double click on comment's text when quick edit is used) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 01 Jan 2010 20:29:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11328#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11328#comment:5/1262377772000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11328#comment:4" title="Comment 4"&gt;richards1052&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is also a deeply annoying problem for me as well &amp;amp; I've replicated it on Firefox, Chrome &amp;amp; IE.  I use Vista.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What versions of IE and Firefox?
&lt;/p&gt;
&lt;p&gt;
Let me send a note to someone I know can test this on Vista. I couldn't on XP, but I'll try again.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11677 (Double-click comment shortcut wipes out any already open comment edit box) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 01 Jan 2010 20:21:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11677#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11677#comment:5/1262377301000000</guid>
      <description>duplicate: &lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11328" title="#11328: enhancement: Issue with double click on comment's text when quick edit is used (closed: duplicate)"&gt;#11328&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #11685 (Search flood exploit) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 01 Jan 2010 20:19:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11685#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11685#comment:6/1262377188000000</guid>
      <description>&lt;p&gt;
Just cross-referencing from #wp-dev channel:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2009-12-31&amp;amp;sort=asc"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2009-12-31&amp;amp;sort=asc&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.exploit-db.com/exploits/10825"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.exploit-db.com/exploits/10825&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11685 (Search flood exploit) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Jan 2010 19:52:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11685#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11685#comment:5/1262375530000000</guid>
      <description>&lt;p&gt;
That's what I thought. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11685 (Search flood exploit) closed</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Fri, 01 Jan 2010 19:49:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11685#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11685#comment:4/1262375384000000</guid>
      <description>wontfix: &lt;p&gt;
Whoops, should be &lt;code&gt;wontfix&lt;/code&gt; as it's technically not &lt;code&gt;invalid&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #11685 (Search flood exploit) reopened</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Fri, 01 Jan 2010 19:49:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11685#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11685#comment:3/1262375362000000</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #11685 (Search flood exploit) closed</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Fri, 01 Jan 2010 19:49:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11685#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11685#comment:2/1262375354000000</guid>
      <description>invalid: &lt;p&gt;
And really, if you want to screw over a WordPress site's database, then start doing taxonomy (tag) unions and such. That's way harder on the database as it requires a &lt;code&gt;JOIN&lt;/code&gt; rather than a simple &lt;code&gt;LIKE&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I'm just closin' this myself. If a core developer (Ryan/Andrew/etc.) disagrees, then they can reopen it.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #11685 (Search flood exploit) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Fri, 01 Jan 2010 19:44:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11685#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11685#comment:1/1262375061000000</guid>
      <description>&lt;p&gt;
I don't see how this is valid. You can throw random query strings onto any website to create load (search query or not). To prevent this would require logging of page requests by IP address and all that stuff and that's the job of a HTTPD in my option.
&lt;/p&gt;
&lt;p&gt;
Recommend closing as invalid.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11685 (Search flood exploit) created</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Jan 2010 19:34:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11685</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11685/1262374464000000</guid>
      <description>&lt;p&gt;
Just found this DOS attack:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://packetstormsecurity.org/filedesc/WPd0s.sh.txt.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://packetstormsecurity.org/filedesc/WPd0s.sh.txt.html&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It just makes a lot of requests with a random search string each time to prevent caching plugins from doing their job.
&lt;/p&gt;
&lt;p&gt;
Maybe WP should have some sort of flood protection against this?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>11684.diff attached to Ticket #11684</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 01 Jan 2010 19:28:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11684/11684.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11684/11684.diff/1262374087000000</guid>
      <description>&lt;p&gt;
untested
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11684 (Comment Moderation Should Count $url) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 01 Jan 2010 19:24:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11684#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11684#comment:2/1262373848000000</guid>
      <description>&lt;p&gt;
+1, but it's actually wrong to expect the anchor tag to be formatted that way. all browsers accept the following garbage, for instance:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;a
href
=
http://foo.com
&amp;gt;bar&amp;lt;/a&amp;gt;
&lt;/pre&gt;&lt;p&gt;
and I vaguely remember one or two coping with white space between the lesser than and the a:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;
a href="foo"&amp;gt;bar&amp;lt;/a&amp;gt;
&lt;/pre&gt;&lt;p&gt;
so, a better regexp might be:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$links = preg_match_all("/&amp;lt;\s*a[^&amp;gt;]*\shref\s*=[^&amp;gt;]*&amp;gt;/", apply_filters('comment_text',$comment));
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11683 (update_metadata() passes only the first meta_id) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Jan 2010 19:07:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11683#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11683#comment:3/1262372854000000</guid>
      <description>&lt;p&gt;
Come to think of it, I have no ideea why $meta_id is passed at all (and as the first parameter at that). It's not accesible from anywhere else in the API.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11684 (Comment Moderation Should Count $url) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Jan 2010 18:38:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11684#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11684#comment:1/1262371107000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>comment-moderation.3.patch attached to Ticket #11684</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Jan 2010 18:37:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11684/comment-moderation.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11684/comment-moderation.3.patch/1262371049000000</guid>
      <description>&lt;p&gt;
Use the 'i' (case-insensitive) regex modifier
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>comment-moderation.2.patch attached to Ticket #11684</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Fri, 01 Jan 2010 18:22:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11684/comment-moderation.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11684/comment-moderation.2.patch/1262370129000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>comment-moderation.patch attached to Ticket #11684</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Fri, 01 Jan 2010 18:20:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11684/comment-moderation.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11684/comment-moderation.patch/1262370025000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11684 (Comment Moderation Should Count $url) created</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Fri, 01 Jan 2010 18:11:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11684</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11684/1262369497000000</guid>
      <description>&lt;p&gt;
One of the biggest failings of the WordPress moderation system is that the comment_max_links option has never worked properly.  In older versions, it did not work at all.  In 2.8, it seems to only count the links in $comment correctly, so all the spams with links in $url don't get moderated.
&lt;/p&gt;
&lt;p&gt;
I've had to hack every version of comment.php to fix this, and it would be quite nice if it just worked out of the box.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11683 (update_metadata() passes only the first meta_id) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Jan 2010 18:11:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11683#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11683#comment:2/1262369482000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10905" title="#10905: defect (bug): Do not allow duplicate (post_id, meta_key, meta_value) rows in meta tables (closed: invalid)"&gt;#10905&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10905 (Do not allow duplicate (post_id, meta_key, meta_value) rows in meta tables) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Jan 2010 18:10:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10905#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10905#comment:16/1262369438000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11683" title="#11683: defect (bug): update_metadata() passes only the first meta_id (closed: fixed)"&gt;#11683&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11683 (update_metadata() passes only the first meta_id) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Jan 2010 18:07:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11683#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11683#comment:1/1262369259000000</guid>
      <description>&lt;p&gt;
Two solutions:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;update_usermeta() only updates the first value that it finds
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;update_usermeta() uses $wpdb-&amp;gt;get_col() instead of $wpdb-&amp;gt;get_var()
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
The first would create more severe backward compatibility issues than the second.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11683 (update_metadata() passes only the first meta_id) created</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Jan 2010 18:04:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11683</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11683/1262369079000000</guid>
      <description>&lt;p&gt;
Code to reproduce:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function update_metadata_action_test($meta_id) {
	var_dump($meta_id);
}
add_action('update_post_meta', 'update_metadata_action_test');
add_metadata('post', 1, 'mykey', 'value1');
add_metadata('post', 1, 'mykey', 'value2');
update_metadata('post', 1, 'mykey', 'new value');
&lt;/pre&gt;&lt;p&gt;
Expected result:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Array ( [0] =&amp;gt; 101 [1] =&amp;gt; 102 )
&lt;/pre&gt;&lt;p&gt;
Actual result:
&lt;/p&gt;
&lt;pre class="wiki"&gt;string(3) "101"
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10905 (Do not allow duplicate (post_id, meta_key, meta_value) rows in meta tables) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Jan 2010 17:28:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10905#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10905#comment:15/1262366924000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10905 (Do not allow duplicate (post_id, meta_key, meta_value) rows in meta tables) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Jan 2010 17:28:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10905#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10905#comment:14/1262366892000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Should add a check on update_metadata() too. This is how I think it should work:
&lt;/p&gt;
&lt;p&gt;
If by performing the update you end up with duplicates, delete the old value and return true.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10905.diff attached to Ticket #10905</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Jan 2010 17:23:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10905/10905.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10905/10905.diff/1262366629000000</guid>
      <description>&lt;p&gt;
add duplicate check for add_metadata()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11624 (Stop using $id global) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 01 Jan 2010 17:18:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11624#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11624#comment:5/1262366330000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11624#comment:3" title="Comment 3"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Such as?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Subscribe to comments comes to mind. Or at least it did in prior versions. I'm sure we'd find a few by looking.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 01 Jan 2010 17:14:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:97</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:97/1262366067000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9674#comment:95" title="Comment 95"&gt;filosofo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
However, I wonder (since you haven't elaborated) if the issues that make a "dozen products, 10k users, and 15k orders" problematic wouldn't also afflict a blog with multiple posts, 10k users, and 15k comments (or maybe instead 15k comment subscriptions or something).  In other words, wouldn't the refactoring necessarily to make wp_posts work for generic objects also benefit its use for posts?  (I'm curious about your answer even though it's obviously beyond the scope of this ticket).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Basically, if your goal is to merely list a few dozen restaurants in your community, then the posts table will work fine indeed.
&lt;/p&gt;
&lt;p&gt;
If, however, the purpose is to allow users to search for a $15-25 restaurants in an arbitrary location, even moderate amounts of data will reveal that the postmeta table is not appropriate to store those details. (Among other things, you'll want the geodata in a column of its own right, complete with a GIST index.)
&lt;/p&gt;
&lt;p&gt;
I think that we should make it very clear, if we change the terminology, that the posts table is only appropriate for other types of data if that table, rather than the postmeta table, is storing the key information.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10905 (Do not allow duplicate (post_id, meta_key, meta_value) rows in meta tables) updated</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Fri, 01 Jan 2010 16:39:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10905#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10905#comment:13/1262363980000000</guid>
      <description>&lt;p&gt;
Nope, but it's the only way to index such columns.
&lt;/p&gt;
&lt;p&gt;
The alternative (to the index) I guess is to introduce a check before such a row is inserted or updated, to see if it would produce a duplicate.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10905 (Do not allow duplicate (post_id, meta_key, meta_value) rows in meta tables) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Jan 2010 16:15:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10905#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10905#comment:12/1262362536000000</guid>
      <description>&lt;p&gt;
Hm, didn't know you could do that.
&lt;/p&gt;
&lt;p&gt;
Anyway, that doesn't help: checking only a fragment of the value doesn't guarantee it's the same value.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10905 (Do not allow duplicate (post_id, meta_key, meta_value) rows in meta tables) updated</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Fri, 01 Jan 2010 14:20:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10905#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10905#comment:11/1262355634000000</guid>
      <description>&lt;p&gt;
Actually reading up that length is bytes not chars so (40) is a lot.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10905 (Do not allow duplicate (post_id, meta_key, meta_value) rows in meta tables) updated</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Fri, 01 Jan 2010 14:18:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10905#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10905#comment:10/1262355533000000</guid>
      <description>&lt;p&gt;
The SQL is wrong..
&lt;/p&gt;
&lt;p&gt;
ALTER TABLE &lt;code&gt;wp_postmeta&lt;/code&gt; ADD UNIQUE (
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;code&gt;post_id&lt;/code&gt; ,
&lt;code&gt;meta_key&lt;/code&gt; ,
&lt;code&gt;meta_value&lt;/code&gt; (40)
);
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Would work.
&lt;/p&gt;
&lt;p&gt;
It's because meta_value is a blob. You have to specify the length of the part you want to index.  The example above would index the first 40 chars, you could go longer but it probably isn't necessary.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8553 (preg_replace_callback in do_shortcode returns empty for large posts) updated</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Fri, 01 Jan 2010 14:08:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8553#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8553#comment:50/1262354939000000</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;
I didn't try any other patches besides the pcre.backtrack_limit part, which did fix my problem.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah but increasing the backtrack limit is not an actual fix, just a workaround.  This ticket has twisted on for a while now but I reckon there is stuff in here that could probably fix it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11682 (wp_list_comments with callback argument add plethora HTML tag) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 01 Jan 2010 11:09:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11682#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11682#comment:1/1262344170000000</guid>
      <description>invalid: &lt;p&gt;
Thats due to the way nested comments are handled.
&lt;/p&gt;
&lt;p&gt;
You also need to define 'end-callback' for the closing tag. The 'callback' function should NOT close the item, end-callback does that, to allow for nested comments to be within the comment div/ul/etc.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #11682 (wp_list_comments with callback argument add plethora HTML tag) created</title>
      
        <dc:creator>pavolzetor</dc:creator>

      <pubDate>Fri, 01 Jan 2010 10:19:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11682</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11682/1262341191000000</guid>
      <description>&lt;p&gt;
wp_list_comments(array('style' =&amp;gt; 'div', 'avatar_size' =&amp;gt; 68, 'callback' =&amp;gt; 'mytheme_comments'));
&lt;/p&gt;
&lt;p&gt;
function mytheme_comments()
{
}
&lt;/p&gt;
&lt;p&gt;
layout (after each comment is WTF tag):
&lt;/p&gt;
&lt;p&gt;
&amp;lt;div class="commentlist"&amp;gt;
&lt;/p&gt;
&lt;p&gt;
&amp;lt;/div&amp;gt;&amp;lt;!-- WTF??? --&amp;gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;/div&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11328 (Issue with double click on comment's text when quick edit is used) updated</title>
      
        <dc:creator>richards1052</dc:creator>

      <pubDate>Fri, 01 Jan 2010 07:33:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11328#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11328#comment:4/1262331220000000</guid>
      <description>&lt;p&gt;
This is also a deeply annoying problem for me as well &amp;amp; I've replicated it on Firefox, Chrome &amp;amp; IE.  I use Vista.
&lt;/p&gt;
&lt;p&gt;
To replicate: go to comment page, hit Reply button for any published comment &amp;amp; open comment edit box, then highlight any word or phrase in original published comment, double-click.  The edit box for the published comment will open &amp;amp; wipe out the Reply edit box.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11677 (Double-click comment shortcut wipes out any already open comment edit box) updated</title>
      
        <dc:creator>richards1052</dc:creator>

      <pubDate>Fri, 01 Jan 2010 07:22:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11677#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11677#comment:4/1262330568000000</guid>
      <description>&lt;p&gt;
I've just tried replicating this on IE AND Chrome &amp;amp; it does it in both browsers.  I'm not sure why you weren't able to replicate it in IE.  If you want me to walk you through it step by step I can do that as well if it would help.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11677 (Double-click comment shortcut wipes out any already open comment edit box) updated</title>
      
        <dc:creator>richards1052</dc:creator>

      <pubDate>Fri, 01 Jan 2010 07:17:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11677#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11677#comment:3/1262330271000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Firefox &amp;amp; Vista.
&lt;/p&gt;
&lt;p&gt;
And the really weird thing about this is that Firefox is usually very good about retaining a pg. in its cache so that if something like this happens you can use the Back button to retrieve the page version you lost.  But when you do that it doesn't work.
&lt;/p&gt;
&lt;p&gt;
I have someone I work with on WP technical issues &amp;amp; he's been able to replicate it as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11680 (wp_load_image() out of memory) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 01 Jan 2010 07:05:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11680#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11680#comment:5/1262329545000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
that's 32MB, btw. the host must be ignoring your 128MB value.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hmm &lt;code&gt;allocated 39321600&lt;/code&gt; isnt that more like 37MiB? Is it possible the host server was literally, out of memory?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Fri, 01 Jan 2010 06:00:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:96</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:96/1262325629000000</guid>
      <description>&lt;p&gt;
Happy New Year all!
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9674#comment:92" title="Comment 92"&gt;jeremyclarke&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
@jeremyclarke your latest response was really excellent, filled with great insite.  If I can paraphrase basically it sounds like you are saying that instead of questioning the name of the container (i.e. the "post type") we should instead question the name of one type of post, specifically the "post" post type. Brilliant.
&lt;/p&gt;
&lt;p&gt;
This perspective may open up an whole new line of approach being that we discard the notion of "post" being sacred and instead think in generic terms of arbitrary post types and related capabilities. This could even demphasize "page" to address @janeforshort's previously stated concerns about that name.
&lt;/p&gt;
&lt;p&gt;
Consider that Wordpress currently has four "core" post types: Posts, Pages, Attachments and Revisions.  If we ignore "Revisions" for the moment as a special "meta" case then we find that each of these has an associated set of generally appropriate capabilities baked into the 2.9 core (ignoring the shared capabilities, and my list is nowhere near complete):
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Posts
&lt;ul&gt;&lt;li&gt;Excerpts
&lt;/li&gt;&lt;li&gt;Tags &amp;amp; Categories
&lt;/li&gt;&lt;li&gt;Send Trackbacks
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Pages
&lt;ul&gt;&lt;li&gt;Attributes (Parent Pages)
&lt;/li&gt;&lt;li&gt;Templates
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Attachment
&lt;ul&gt;&lt;li&gt;Image Editing
&lt;/li&gt;&lt;li&gt;Alternate Text
&lt;/li&gt;&lt;li&gt;Caption
&lt;/li&gt;&lt;li&gt;File URL
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Now envision instead of having all that baked into Wordpress we evolve to being able to define a new post type and assign it any of post type capabilities, or even all of them if desired.  Then the core post types would simply become four default post types provided by v3.0 but where any of them could have their capabilities added to or removed, or any post type could even be deleted by a site owner if desired.
&lt;/p&gt;
&lt;p&gt;
Imagine how nice if would be for a online magazine website, for example, they could keep Pages and Attachments, remove Posts and add Articles, Interviews, and Reviews. A product oriented website may have just Pages, Posts and Attachments and add Products.  A SAAS site may keep Pages and Attachments and add Services and add Support Requests.
&lt;/p&gt;
&lt;p&gt;
To avoid confusing with "post" and "post type" we could even deprecate "post" and add "blog" as Jeremy suggested (though I think it might be better to call it "blogpost", but that's a nit.)
&lt;/p&gt;
&lt;p&gt;
This approach could really make Wordpress a lot more open in terms of capabilities and provide a framework for plugin and theme developers to take Wordpress to the next level and I don't mean that to be hyperbole.  What do you say?
&lt;/p&gt;
&lt;p&gt;
-Mike Schinkel
&lt;/p&gt;
&lt;p&gt;
P.S. The post types plugin I'm working on could be the basis for incorporating a UI to manage post types into the core, if it is so desired. I'm happy to release it as a plugin when I'm done or I'd even be happier to contribute the work to the core (assuming some code review for Wordpress coding standards from some core developers.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11076 (Allow 'include' &amp; 'exclude' args to be arrays) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Jan 2010 01:32:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11076#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11076#comment:3/1262309573000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>get_terms.2.diff attached to Ticket #11076</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Jan 2010 01:31:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11076/get_terms.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11076/get_terms.2.diff/1262309506000000</guid>
      <description>&lt;p&gt;
Fix copy-paste error
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10263 (Single function for intermediate image sizes) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Jan 2010 01:26:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10263#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10263#comment:3/1262309218000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>get_intermediate_sizes.2.patch attached to Ticket #10263</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Jan 2010 01:26:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10263/get_intermediate_sizes.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10263/get_intermediate_sizes.2.patch/1262309174000000</guid>
      <description>&lt;p&gt;
compatible with &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12593" title="Add AYS popup when deleting media, fixes #11673 for 2.9"&gt;r12593&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11520 (print_scripts_l10n() should use json_encode()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Jan 2010 01:14:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11520#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11520#comment:5/1262308471000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11520#comment:2" title="Comment 2"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also perhaps we can standardize a way to pass data to JS and use that for translations making wp_localize_script() obsolete.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1 on that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11520 (print_scripts_l10n() should use json_encode()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Jan 2010 01:13:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11520#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11520#comment:4/1262308410000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
We're just defining a native JavaScript object, same as before. So no JSON support needed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11624 (Stop using $id global) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Jan 2010 01:10:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11624#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11624#comment:4/1262308201000000</guid>
      <description>&lt;p&gt;
Themes and plugins should be using get_the_ID() anyway.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11624 (Stop using $id global) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Jan 2010 01:09:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11624#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11624#comment:3/1262308149000000</guid>
      <description>&lt;p&gt;
Such as?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10837 (Add *_user_meta() functions) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Jan 2010 01:08:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10837#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10837#comment:12/1262308098000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10837#comment:10" title="Comment 10"&gt;arena&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
oh ! and missed this one :
&lt;/p&gt;
&lt;p&gt;
WP Mu has only one usermeta table and a postmeta table per blog ...
&lt;/p&gt;
&lt;p&gt;
so 3.0 still merging WP and WPµ ?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I guess we should wait until after most of the merging with MU is done.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10837 (Add *_user_meta() functions) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Jan 2010 01:06:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10837#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10837#comment:11/1262308015000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10837#comment:9" title="Comment 9"&gt;arena&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;patch should still change metakey value for compatibility with existing datas.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
No, it shouldn't. That's why we're adding a new set of functions: so that we don't have to worry about compatibility and be consistent with *_post_meta() functions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11287 ("Go back" link removed) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Jan 2010 01:03:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11287#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11287#comment:2/1262307824000000</guid>
      <description>&lt;p&gt;
After most edits, you get a $_REQUEST&lt;a class="missing wiki"&gt;_wpreferrer?&lt;/a&gt; or something similar.
&lt;/p&gt;
&lt;p&gt;
I don't know if that was used in the old code or not, but it would be a good start.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10905 (Do not allow duplicate (post_id, meta_key, meta_value) rows in meta tables) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Jan 2010 00:53:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10905#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10905#comment:9/1262307193000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10905#comment:6" title="Comment 6"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10905#comment:1" title="Comment 1"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
When trying to add a UNIQUE index to post_id, meta_key and meta_value I get an error:
&lt;/p&gt;
&lt;pre class="wiki"&gt;#1170 - BLOB/TEXT column 'meta_value' used in key specification without a key length
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
Can you please provide the SQL you used to create the key? That would be interesting.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class="wiki"&gt;ALTER TABLE `wp_postmeta` ADD UNIQUE (
`post_id` ,
`meta_key` ,
`meta_value`
);
&lt;/pre&gt;&lt;p&gt;
It was generated by phpMyAdmin, so I don't think the SQL is wrong.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11680 (wp_load_image() out of memory) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Jan 2010 00:46:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11680#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11680#comment:4/1262306766000000</guid>
      <description>&lt;p&gt;
I got the 128M value by doing &lt;code&gt;var_dump(ini_get('memory_limit'))&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11145 (No gallery tab after upload if post hasn't been saved yet) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Fri, 01 Jan 2010 00:14:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11145#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11145#comment:10/1262304864000000</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11145 (No gallery tab after upload if post hasn't been saved yet) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Fri, 01 Jan 2010 00:08:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11145#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11145#comment:9/1262304506000000</guid>
      <description>&lt;p&gt;
Tested 2.9.1-RC1.
&lt;/p&gt;
&lt;p&gt;
In a blank post, the image uploader appears normally.  I added 5 photos, clicked Save All Changes in the uploader, which then failed to close and looked a lot like OP's screenshot.  I then clicked on Save Draft and was sent straight to the Edit Posts screen.  Nothing was saved for the post.  The 5 images do appear in the Media Library, unattached.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11680 (wp_load_image() out of memory) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 31 Dec 2009 21:52:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11680#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11680#comment:3/1262296334000000</guid>
      <description>&lt;p&gt;
that's 32MB, btw. the host must be ignoring your 128MB value.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11680 (wp_load_image() out of memory) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 31 Dec 2009 21:51:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11680#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11680#comment:2/1262296295000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Thu, 31 Dec 2009 21:39:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:95</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:95/1262295568000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9674#comment:94" title="Comment 94"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Seriously, though. It's like to be frank... whoever tries to store anything in that table but data that is very similar to a post is bound to get experience huge problems.
&lt;br /&gt;
If that doesn't strike whoever, just give it a shot and try to store a product, with all of the necessary extra fields. Sounds simple? Great. Now create a dozen products, 10k users, and 15k orders spread on those various products. Try to make it scale. And good luck. (Tip: you're wasting your time.)
&lt;br /&gt;
The point I'd like to make is, keep this as post_type, not object_type or inanity_type. That table is for posts, or things very similar to posts. The name should NOT suggest that it's for generic types of data.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Your example seems unnecessarily extreme.  I've used custom post types already to make, for example, calendar events and restaurant listings without great difficulty. Events and restaurants are not posts.
&lt;/p&gt;
&lt;p&gt;
However, I wonder (since you haven't elaborated) if the issues that make a "dozen products, 10k users, and 15k orders" problematic wouldn't also afflict a blog with multiple posts, 10k users, and 15k comments (or maybe instead 15k comment subscriptions or something).  In other words, wouldn't the refactoring necessarily to make wp_posts work for generic objects also benefit its use for posts?  (I'm curious about your answer even though it's obviously beyond the scope of this ticket).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11679 (Mark 2nd param of load_plugin_textdomain() as deprecated) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 31 Dec 2009 21:38:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11679#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11679#comment:2/1262295499000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
We normally check for empty() but since the function is very particular about checking for &lt;code&gt;$abs_rel_path !== false&lt;/code&gt;, I patched it on !== false.
&lt;/p&gt;
&lt;p&gt;
Commit candidate.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>11679.diff attached to Ticket #11679</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 31 Dec 2009 21:36:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11679/11679.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11679/11679.diff/1262295397000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11678 (wpautop() fails on uppercase closing tags) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 31 Dec 2009 21:28:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11678#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11678#comment:3/1262294924000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11678#comment:2" title="Comment 2"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Upper case tags haven't been in use for 6-7 years I think. They are also invalid with most current doctypes
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sadly, in (non-X)HTML 5, tag names are case insensitive and uppercase is valid.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 31 Dec 2009 21:17:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:94</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:94/1262294255000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9674#comment:91" title="Comment 91"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Heh.
&lt;/p&gt;
&lt;p&gt;
Somewhat more seriously, I actually like "thing" better than "object". A "thing" API would be refreshing. :-) My more cynical side, however, wants to call it as it is and use "contrivance".
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'd suggest calling it "mess" or "garbage", myself, rather than "thing", "thingy" or "object". ;-)
&lt;/p&gt;
&lt;p&gt;
Seriously, though. It's like to be frank... whoever tries to store anything in that table but data that is very similar to a post is bound to get experience huge problems.
&lt;/p&gt;
&lt;p&gt;
If that doesn't strike whoever, just give it a shot and try to store a product, with all of the necessary extra fields. Sounds simple? Great. Now create a dozen products, 10k users, and 15k orders spread on those various products. Try to make it scale. And good luck. (Tip: you're wasting your time.)
&lt;/p&gt;
&lt;p&gt;
The point I'd like to make is, keep this as post_type, not object_type or inanity_type. That table is for posts, or things very similar to posts. The name should NOT suggest that it's for generic types of data.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11678 (wpautop() fails on uppercase closing tags) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 31 Dec 2009 21:17:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11678#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11678#comment:2/1262294222000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Upper case tags haven't been in use for 6-7 years I think. They are also invalid with most current doctypes and the visual editor would always convert them to lower case.
&lt;/p&gt;
&lt;p&gt;
In that terms adding support to wpautop() for upper case tags would only introduce unneeded overhead. It seems the best solution for this is to replace all upper case tags while importing or directly in the database after importing. That would make your content futureproof too.
&lt;/p&gt;
&lt;p&gt;
Did you use one of the build-in importers? If this is a common problem we need to fix the importer or perhaps can make a small plugin to do that automatically after import.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 31 Dec 2009 20:45:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:93</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:93/1262292324000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9674#comment:89" title="Comment 89"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm going to take a cue from my sample plugin and use "thingy" everywhere. get_thingy_type().  Who's with me? ;-)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1. Hmm, so we will have "thingy", thingies", "thingomery"? :-)
&lt;/p&gt;
&lt;p&gt;
Seriously though, don't forget we are talking about an API that is seen only by developers and each function has phpdoc description. It's nice to have descriptive names but it's imperative to have a well thought and well written API.
&lt;/p&gt;
&lt;p&gt;
IMHO all of these would work well: "post" (current), "object" (a bit too generic), "content" (yes, content_type is also a HTTP header but that's completely different scope).
&lt;/p&gt;
&lt;p&gt;
From a non-developer's point of view "content" seems to make the most sense. It is the content of the web site. From developer's point of view, it doesn't really matter that much as long as it works well and is documented.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>jeremyclarke</dc:creator>

      <pubDate>Thu, 31 Dec 2009 19:58:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:92</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:92/1262289538000000</guid>
      <description>&lt;p&gt;
I think the argument that it should be &lt;strong&gt;object&lt;/strong&gt; because of the use of &lt;strong&gt;object_id&lt;/strong&gt; in the term_relationships table is pretty solid. When I first saw that in the db I thought it was a good move, and that it was just a shame that the wp_posts table couldn't be switched to wp_objects, and the post_type field changed to object_type. While I'd hate for WP to become Drupal, I don't see any reason why the database would hurt by being abstracted in that way (beyond the obvious backwards-compatibility nightmare). Considering saved content items as 'objects' is very functional if our goal is to have it make sense that on a fundamental level 'posts', 'pages', 'links', and 'revisions' are all the same kind of information, just with a different 'type'.
&lt;/p&gt;
&lt;p&gt;
That said, the use of 'object' is &lt;em&gt;only&lt;/em&gt; important if we want to maintain the current, specific meaning of &lt;strong&gt;post&lt;/strong&gt;, as a time-sensitive "story" with an author, categorization and a url based on the primary permalinks settings. This IMHO is a very important question and the vital one for assessing Mike's question about the status quo.
&lt;/p&gt;
&lt;p&gt;
Using 'post_*' as the general catch-all term for stuff saved to the db has a LOT of benefits if we are willing to do it.
&lt;/p&gt;
&lt;p&gt;
For one thing it makes a ton of sense semantically: On some level all the core content types and most potential 3rd party ones (tickets, players, stores) are things that get posted to the site and are thus posts. 'Post' defines the action by which the content is saved rather than the content itself, as well as aligning directly with _POST in http which happens to be how WP gets that shit done.
&lt;/p&gt;
&lt;p&gt;
Another huge benefit, albeit one tinged with problems, is that using 'post_*' will mostly fit in with the current code. Unlike 'object_*' which makes sense but leaves the wp_posts table and various fields misnamed. 'post_*' is back-compatible with almost everything out there. For the most part this is accidental, based on the (understandable) shortsightedness of the past where the specific content type of 'post' was given undue prominence and other types were effectively shoehorned into the existing database. That doesn't mean it can't be a benefit. If we are willing to shift our paradigm slightly to have 'post' mean all content types then we will reap the rewards of our past laziness in that the new content typing system can be semantically meaningful and internally consistent, while also avoiding huge deprecation conversions.
&lt;/p&gt;
&lt;p&gt;
The problem, of course, is the naming conflict created with the old 'posts' when 'post' is used for all content. What are these 'posts' in the new system?
&lt;/p&gt;
&lt;p&gt;
A 'post' (in the old sense) is a post (new sense) with a post_type of 'post', which on some level equates with being a post with post_type DEFAULT. This is awkward but we can easily imagine the historical explanation: Until very recently WP was a blogging tool, and it definitely was only a blogging tool when the db was first designed. In that frame of mind there was only one content type 'BLOG POST', since the software was the 'blog' the content were 'posts', and they had 'blog post' properties like time-sensitivity, categories and an author.
&lt;/p&gt;
&lt;p&gt;
As WP matured other content types were added, specifically 'pages', along with the post_type field to define them. IMHO the logical thing to do at this point would be to say that both types were posts, as implied by the DB structure and because they are both content that gets POSTed. At that point we could have &lt;strong&gt;specifically defined all existing 'posts' as post_type = blog&lt;/strong&gt;. In effect that is what they are, posts logged in time, blogged. This would have left everything beautiful and today we wouldn't be debating at all. There are reasons that this would be a bad idea of course, not the least of which is that WP, even with just the 'blog'/'post' content type, can be used for just about anything if you think creatively and know how to hack a theme. "Blog" has social connotations that go beyond its technical definition and as such WP has done well  to focus on posts rather than blog posts as their core content type.
&lt;/p&gt;
&lt;p&gt;
Thinking of the generic content in WP as posts instead of blog articles has a way of helping developers and especially users get over their worries that WP is "just a blog" so they can start building their awesome website. Going back at this point and changing either the UI or the DB for posts to have post_type=blog is almost defintiely a terrible idea, but I think accepting the fact that what we call posts are actuall blog-content is vital to understanding how 'posts' is a useful generic description of all content in the wp_posts table. Consider that &lt;strong&gt;article&lt;/strong&gt; is another useful description of the default content in WP. If we had been using post_type=article for them since pages were added then the 'posts' metaphor would be perfectly suited to adding more content types.
&lt;/p&gt;
&lt;p&gt;
When post_type=post we can consider the content to be 'default' post type, though keeping the db the same is definitely a good idea. IMHO for 95% of projects the blog/article/default post_type and creative theming is all anyone needs, so treating it as default makes sense. A post type of post basically means 'a post with all the features', which is true except for a few page-specific features like custom templates. For people who want content with different settings or fields (i.e. different metaboxes in the editing UI) then adding new 'post types' is a meaningful and understandable concept
&lt;/p&gt;
&lt;p&gt;
I really like the idea and simplicity of keeping 'post_type' as the name and committing to it conceptually going forward.  If anything, I think that if we can really commit to 'post type' then changing the taxonomy api to use post_id instead of object_id might make sense as well, though its certainly not a prerequisite.
&lt;/p&gt;
&lt;p&gt;
That said I'm still not sure that object wouldn't be a better name for general content to avoid confusion. Both ideas are fraught with peril, but something has to be chosen so we can work on making its implementation excellent.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10789 (Add plugin information to XML-RPC) updated</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Thu, 31 Dec 2009 18:43:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10789#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10789#comment:8/1262285039000000</guid>
      <description>&lt;p&gt;
My general goal is to expose all of the same features, data and abilities via external APIs (XML-RPC and AtomPub, though mostly XML-RPC) that you can do via wp-admin.  Some of these might be tricky (or not reasonably possible), but we are a fair ways away from having to worry about those.
&lt;/p&gt;
&lt;p&gt;
I'd consider this a first step in providing a plugin management feature via XML-RPC.  Perhaps this ticket should be changed to cover providing some plugin management abilities via XML-RPC then.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11681 (Erratic Behavior When wp-includes/pomo Missing) created</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Thu, 31 Dec 2009 18:36:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11681</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11681/1262284597000000</guid>
      <description>&lt;p&gt;
WordPress throws
&lt;/p&gt;
&lt;pre class="wiki"&gt;Fatal error: Class 'NOOP_Translations' not found in /wp-includes/l10n.php on line 437
&lt;/pre&gt;&lt;p&gt;
I believe this is caused by erroneous use of "include_once" in wp-settings.php, where "require_once" was intended.
&lt;/p&gt;
&lt;p&gt;
See it in the wild at &lt;a class="ext-link" href="http://wordpress.org/support/topic/344708"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/344708&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11673 (Need confirmation/undo/something for media delete) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 31 Dec 2009 18:06:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11673#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11673#comment:14/1262282791000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11673#comment:13" title="Comment 13"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11673#comment:10" title="Comment 10"&gt;rob1n&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
On a side note, the CC feature didn't do jack for me.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I read somewhere it needs to be an email address, but maybe it's broken? I've never used it, since I get wp-trac emails, I just star the ticket in Gmail.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You need to put the email address in your trac profile - &lt;a class="ext-link" href="http://core.trac.wordpress.org/wiki#Notification"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/wiki#Notification&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11680 (wp_load_image() out of memory) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 31 Dec 2009 18:00:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11680#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11680#comment:1/1262282435000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11680 (wp_load_image() out of memory) created</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 31 Dec 2009 18:00:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11680</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11680/1262282422000000</guid>
      <description>&lt;p&gt;
On a host with 128M, I get:
&lt;/p&gt;
&lt;p&gt;
Fatal error: Out of memory (allocated 39321600) (tried to allocate 1232 bytes) in .../wp/wp-admin/includes/image.php on line 163
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10789 (Add plugin information to XML-RPC) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 31 Dec 2009 17:59:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10789#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10789#comment:7/1262282380000000</guid>
      <description>&lt;p&gt;
I'm 50/50 on including this in core.
&lt;/p&gt;
&lt;p&gt;
I am trying to understand how it fits in with the use of XML-RPC as a publishing interface and what use it has for the majority of end-users.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Is something like this already provided by one or more plugins?
&lt;/li&gt;&lt;li&gt;What would a consumer of the XML-RPC interface use this for?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I am wary of adding things like this piecemeal - for example if we want to make something like plugin upgrade management available over XML-RPC then we should do the whole thing.
&lt;/p&gt;
&lt;p&gt;
What is the reason this code should be in core and not in a plugin?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11517 (Make Admin more MVC-like) updated</title>
      
        <dc:creator>jeremyclarke</dc:creator>

      <pubDate>Thu, 31 Dec 2009 17:28:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11517#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11517#comment:6/1262280518000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I really like this idea in general and think its the right direction for the admin going forward. It would have the effect of forcing core devs to clean up their act when they add stuff, using/augmenting existing output functions as needed and adding new ones when they are missing. Having the core devs think of plugin authors when creating UI is good both so they can be leaders in all WP UI development and so that the value of their work can be multiplied when used by people extending WP. Lets face it: Most people don't have the time/skill/enthusiasm for UI that leads to beautiful useful easy-to-use tools. Making a beautiful table just a function and a few paremeters away greatly increases the likelihood of plugins having a good tabular interface.
&lt;/p&gt;
&lt;p&gt;
I'm not sure I understand the backwards-compatibility problems except for the obvious hump of initial pickup. All existing plugins that duplicate admin functionality would continue to work with the current setup. Of course as the admin changes those old plugins that don't use the proposed API would slowly get uglier and less useful, but that would happen anyway. If this API is available the authors will convert to the new system and hopefully their problems will go away from there on. The net difference of switching to a system like this is that &lt;strong&gt;some&lt;/strong&gt; people will be able to avoid UI rot while those who enjoy reverse-engineering HTML using Firebug will still be able to do so. The only difference for the reverse-engineers, whethey they do it cause they dont' know any better or because they have special needs, will be that the tables/lists etc they copy will be more consistent with each other than ever.
&lt;/p&gt;
&lt;p&gt;
Also this example of switching from a table to a list seems like it might be off-base. If the display of some particular kind of data by core changed then it would just use the display function for the new display type without affecting plugin uses of the old display function.
&lt;/p&gt;
&lt;p&gt;
If you were showing a list of link categories as a table :
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_admin_table($link_categories, $args);
&lt;/pre&gt;&lt;p&gt;
Then you'd switch it to the list function instead (while also modifying the $args to be whatever the list function requires to display the link_categories to your satisfaction):
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_admin_list($link_categories, $args);
&lt;/pre&gt;&lt;p&gt;
It seems to me this wouldn't break any existing uses of wp_admin_table() by plugins.
&lt;/p&gt;
&lt;p&gt;
If a plugin is writing js/css targeted at core uses of these functions (like the table that lists posts) then the current system is certainly no better for them than the proposed API. Either way if the system changes the css/js will need to be updated.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 31 Dec 2009 16:38:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:91</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:91/1262277507000000</guid>
      <description>&lt;p&gt;
Heh.
&lt;/p&gt;
&lt;p&gt;
Somewhat more seriously, I actually like "thing" better than "object". A "thing" API would be refreshing. :-) My more cynical side, however, wants to call it as it is and use "contrivance".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11679 (Mark 2nd param of load_plugin_textdomain() as deprecated) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 31 Dec 2009 16:37:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11679#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11679#comment:1/1262277430000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Thu, 31 Dec 2009 16:34:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:90</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:90/1262277262000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9674#comment:89" title="Comment 89"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm going to take a cue from my sample plugin and use "thingy" everywhere. get_thingy_type().  Who's with me? ;-)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
"type" is too confusing (why would you want the thingy to be typing?).  Instead, it should be get_thingy_doohickey().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 31 Dec 2009 16:30:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:89</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:89/1262277012000000</guid>
      <description>&lt;p&gt;
I'm going to take a cue from my sample plugin and use "thingy" everywhere. get_thingy_type().  Who's with me? ;-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 31 Dec 2009 16:18:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:88</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:88/1262276298000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9674#comment:74" title="Comment 74"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;get_object_type_object() ?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Maybe we should call it get_object_type_properties() instead.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The only reason _object is appended is because get_post_type() was already taken. The name would probably just be get_object_type().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11669 (There's a problem to show one letter, and it cuts taxonomies names) updated</title>
      
        <dc:creator>kcristiano</dc:creator>

      <pubDate>Thu, 31 Dec 2009 16:02:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11669#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11669#comment:12/1262275357000000</guid>
      <description>&lt;p&gt;
I tested this in a post and as the tag at my development site: &lt;a class="ext-link" href="http://wpdev.doublelenterprises.com/2009/12/31/collation-testing/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wpdev.doublelenterprises.com/2009/12/31/collation-testing/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I am running IIS 7 on Server 2008, with PHP 5.3.1 and MySQL 5.1.39
&lt;/p&gt;
&lt;p&gt;
It appears fine.
&lt;/p&gt;
&lt;p&gt;
Could this be related to the php/mysql combination?
&lt;/p&gt;
&lt;p&gt;
What is your Windows server hosting config?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11679 (Mark 2nd param of load_plugin_textdomain() as deprecated) created</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Thu, 31 Dec 2009 15:24:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11679</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11679/1262273052000000</guid>
      <description>&lt;p&gt;
Mark 2nd param of load_plugin_textdomain() as deprecated.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11608 (wpdb-&gt;prepare() is broken) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 31 Dec 2009 15:05:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11608#comment:63</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11608#comment:63/1262271958000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Core dev feedback would be welcome on this ticket, btw. It's like, do we even want to try to fix part or all of the problem, and if we do, what is the favored approach?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11608 (wpdb-&gt;prepare() is broken) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 31 Dec 2009 15:04:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11608#comment:62</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11608#comment:62/1262271878000000</guid>
      <description>&lt;p&gt;
I've uploaded a patch that uses the double approach. that being said, I think that no matter what we do, there will still be problematic strings with literal % characters. Example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;WHERE foo = 'a %s b'
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>11608.3.diff attached to Ticket #11608</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 31 Dec 2009 15:02:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11608/11608.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11608/11608.3.diff/1262271732000000</guid>
      <description>&lt;p&gt;
double escape first approach (untested)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11669 (There's a problem to show one letter, and it cuts taxonomies names) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 31 Dec 2009 14:43:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11669#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11669#comment:11/1262270609000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11669#comment:8" title="Comment 8"&gt;margolis&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm having this problem with "nun" on one of my blogs. The problematic blog is 2.9, and setup on windows hosting - IIS7, php5.x.
MySQL version is 5.0
charset = UTF-8 Unicode (utf8)
connection collation = utf8_unicode_ci
From the posts on the hebrew forum, it looks like it has something to do with the windows environment.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm running the exact same setup, except that I'm running Apache instead of IIS. But the original reporter here was using XAMPP.
&lt;/p&gt;
&lt;p&gt;
The only difference I think is that we're not running the same locales...
&lt;/p&gt;
&lt;p&gt;
Can those reporting the problem here disable all plugins, or run a clean install of WP 2.9 on the same server?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11669 (There's a problem to show one letter, and it cuts taxonomies names) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 31 Dec 2009 14:11:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11669#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11669#comment:10/1262268662000000</guid>
      <description>&lt;p&gt;
I tested OK on Windows7/Apache2/PHP/MySQL all custom installed, virtually using all-defaults.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11669 (There's a problem to show one letter, and it cuts taxonomies names) updated</title>
      
        <dc:creator>dshalgishira</dc:creator>

      <pubDate>Thu, 31 Dec 2009 13:29:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11669#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11669#comment:9/1262266177000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hello all,
First I encountered this bug on my development environment WIN7 + XAmpp.
Then I read in the Hebrew group that it is only on XAMPP and not on live servers.
Than I installed it on the hosting, and it is a windows server hosting and it happens there too.
I think it is related to windows.
Daniel
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 31 Dec 2009 13:02:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:87</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:87/1262264561000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9674#comment:85" title="Comment 85"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Wouldn't using hook priorities be enough?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Probably...honestly I had forgotten about the priority.
&lt;/p&gt;
&lt;p&gt;
On the "con" side of just using priorities it will be simpler to just have a named hook; less to understand conceptually. OTOH, now that you bring it up I could go either way as long as how to process post types at init priority 100 is &lt;em&gt;well&lt;/em&gt; documented somewhere.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11673 (Need confirmation/undo/something for media delete) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 31 Dec 2009 12:46:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11673#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11673#comment:13/1262263595000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11673#comment:12" title="Comment 12"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The current functionality is to delete without AYS when trash is disabled, we keep that for attachments as well.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I suppose when comparing it to the other screens that use "Delete Permanently," then yes. But as you pointed out, links, tags and cats all have AYS because there is no trash built in (like media, kinda), so it could go either way. The inconsistent experience is outside the scope of this ticket, though.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In any case the disabling of trash for attachments was a temporary thing and is expected to be reworked, hopefully for 3.0. Then I think the constant MEDIA_TRASH will be removed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Very true. Thanks for patching the 2.9 branch here.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11673#comment:10" title="Comment 10"&gt;rob1n&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
On a side note, the CC feature didn't do jack for me.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I read somewhere it needs to be an email address, but maybe it's broken? I've never used it, since I get wp-trac emails, I just star the ticket in Gmail.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11676 (Restore AYS for posts, pages, comments when trash is disabled) updated</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Thu, 31 Dec 2009 12:00:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11676#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11676#comment:2/1262260857000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11676 (Restore AYS for posts, pages, comments when trash is disabled) updated</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Thu, 31 Dec 2009 11:58:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11676#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11676#comment:1/1262260712000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11208" title="#11208: defect (bug): 'Delete Permanently' does not ask for confirmation when trash is disabled (closed: wontfix)"&gt;#11208&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Thu, 31 Dec 2009 11:48:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:86</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:86/1262260119000000</guid>
      <description>&lt;p&gt;
The same problem is for custom taxonomies. I suggest more general approach - add &lt;code&gt;post_init&lt;/code&gt; action just after &lt;code&gt;init&lt;/code&gt; (at the end of wp-settings.php).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11506 (Creation of unnamed option is possible) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 31 Dec 2009 11:35:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11506#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11506#comment:4/1262259345000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 31 Dec 2009 11:34:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:85</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:85/1262259291000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9674#comment:83" title="Comment 83"&gt;mikeschinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As I continue to work with the post type plugin I realize there's a need for a hook 'register_post_types' to be called from within create_initial_post_types() &lt;em&gt;after&lt;/em&gt; the standard post types are registered.
&lt;/p&gt;
&lt;pre class="wiki"&gt;do_action('register_post_types');
&lt;/pre&gt;&lt;p&gt;
Adding this hook can allow those who needs to register a post type to do it at the right time instead of via 'init.' This will then allow a plug to assume within the 'init' hook that all post types that need to have been registered have been. IOW, this hook would solve the chicken or egg problem I'm recognizing.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Wouldn't using hook priorities be enough?
&lt;/p&gt;
&lt;pre class="wiki"&gt;Priority 0: core post types
Priority 10: additional post types
Priority 100: plugin that assumes all post types are registered
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11678 (wpautop() fails on uppercase closing tags) updated</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Thu, 31 Dec 2009 11:29:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11678#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11678#comment:1/1262258949000000</guid>
      <description>&lt;p&gt;
I noticed if you switch between HTML and Visual in the editor it changes it to lowercase, however I ran into this problem when I imported several thousand posts, so the editor was not used
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11678 (wpautop() fails on uppercase closing tags) created</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Thu, 31 Dec 2009 11:26:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11678</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11678/1262258771000000</guid>
      <description>&lt;p&gt;
To reproduce, in a post enter:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;p&amp;gt;Welcome to WordPress. This is your first post. Edit or delete it, then start blogging!&amp;lt;/P&amp;gt;
&lt;/pre&gt;&lt;p&gt;
View the post (source) and you get:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;p&amp;gt;Welcome to WordPress. This is your first post. Edit or delete it, then start blogging!&amp;lt;/P&amp;gt;&amp;lt;/p&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Because I (incorrectly) entered an uppercase closing &amp;lt;/P&amp;gt; tag, wpautop() thinks there is no closing tag so adds a &amp;lt;/p&amp;gt;, which then often renders as a double &amp;lt;p&amp;gt; tag. Close if this is not a bug, though I thought it may be good to do some sanitizing or something on uppercase tags.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11677 (Double-click comment shortcut wipes out any already open comment edit box) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 31 Dec 2009 11:14:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11677#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11677#comment:2/1262258051000000</guid>
      <description>&lt;p&gt;
The first was &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11328" title="#11328: enhancement: Issue with double click on comment's text when quick edit is used (closed: duplicate)"&gt;#11328&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11677 (Double-click comment shortcut wipes out any already open comment edit box) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 31 Dec 2009 11:09:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11677#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11677#comment:1/1262257796000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This has previously been reported. I recall checking every major browser (IE6 on up) and could not replicate.
&lt;/p&gt;
&lt;p&gt;
What browser and OS? If you have any other steps to reproduce, I'm sure it'll help.
&lt;/p&gt;
&lt;p&gt;
We might just need to code in a sanity check to make sure we don't mess with an inline edit in progress.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11673 (Need confirmation/undo/something for media delete) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 31 Dec 2009 10:28:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11673#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11673#comment:12/1262255326000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11673#comment:8" title="Comment 8"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm noticing that we need to check for EMPTY_TRASH_DAYS as well here...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The current functionality is to delete without AYS when trash is disabled, we keep that for attachments as well.
&lt;/p&gt;
&lt;p&gt;
In any case the disabling of trash for attachments was a temporary thing and is expected to be reworked, hopefully for 3.0. Then I think the constant MEDIA_TRASH will be removed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11673 (Need confirmation/undo/something for media delete) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 31 Dec 2009 10:22:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11673#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11673#comment:11/1262254967000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12593" title="Add AYS popup when deleting media, fixes #11673 for 2.9"&gt;[12593]&lt;/a&gt;) Add AYS popup when deleting media, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11673" title="#11673: defect (bug): Need confirmation/undo/something for media delete (closed: fixed)"&gt;#11673&lt;/a&gt; for 2.9
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [12593]: Add AYS popup when deleting media, fixes #11673 for 2.9</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 31 Dec 2009 10:22:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12593</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12593/1262254964904731</guid>
      <description>&lt;p&gt;
Add AYS popup when deleting media, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11673" title="#11673: defect (bug): Need confirmation/undo/something for media delete (closed: fixed)"&gt;#11673&lt;/a&gt; for 2.9
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #11677 (Double-click comment shortcut wipes out any already open comment edit box) created</title>
      
        <dc:creator>richards1052</dc:creator>

      <pubDate>Thu, 31 Dec 2009 09:53:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11677</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11677/1262253199000000</guid>
      <description>&lt;p&gt;
Currently, WP's comment editing function has a &lt;a class="ext-link" href="http://en.blog.wordpress.com/2008/12/10/the-many-ways-to-configure-your-new-dashboard/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;built in "shortcut&lt;/a&gt;" which allows the user to double click on any word in a comment on the comment edit page, which opens the comment edit box:
&lt;/p&gt;
&lt;p&gt;
"A final secret shortcut is double-click. Just click twice on a comment in the Comments view to open up the editor."
&lt;/p&gt;
&lt;p&gt;
The problem with this shortcut is that when a user has already opened the comment Reply box and has highlighted a word or phrase fr. a published comment in order to copy &amp;amp; paste the word/phrase into the open comment edit box, &amp;amp; accidentally double clicks the highlighted word/phrase, this causes the user to completely lose the comment he was editing/writing. I've wiped out countless comments in this fashion &amp;amp; it's very frustrating.
&lt;/p&gt;
&lt;p&gt;
The way this shortcut SHOULD work imo is that it should be coded to check whether a comment edit box is already open &amp;amp; if one is it should not wipe out the exising open one.  Or alternatively, there should be a provision for users to configure their comment feature to disable the double click shortcut.
&lt;/p&gt;
&lt;p&gt;
Frankly, I can't believe this shortcut is used by many folks compared to the number who've faced the huge inconveniences caused by it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11673 (Need confirmation/undo/something for media delete) updated</title>
      
        <dc:creator>rob1n</dc:creator>

      <pubDate>Thu, 31 Dec 2009 09:34:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11673#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11673#comment:10/1262252099000000</guid>
      <description>&lt;p&gt;
On a side note, the CC feature didn't do jack for me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11669 (There's a problem to show one letter, and it cuts taxonomies names) updated</title>
      
        <dc:creator>margolis</dc:creator>

      <pubDate>Thu, 31 Dec 2009 09:34:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11669#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11669#comment:8/1262252058000000</guid>
      <description>&lt;p&gt;
I'm having this problem with "nun" on one of my blogs. The problematic blog is 2.9, and setup on windows hosting - IIS7, php5.x.
MySQL version is 5.0
charset = UTF-8 Unicode (utf8)
connection collation = utf8_unicode_ci
From the posts on the hebrew forum, it looks like it has something to do with the windows environment.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11608 (wpdb-&gt;prepare() is broken) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 31 Dec 2009 09:17:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11608#comment:61</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11608#comment:61/1262251049000000</guid>
      <description>&lt;p&gt;
&lt;code&gt;{%s} and {"'%s'"&lt;/code&gt;} in the last comment was destroyed because of bad formattings and stands for the double quoted cases: &lt;code&gt;''%s''&lt;/code&gt; &lt;code&gt;"'%s'"&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11608 (wpdb-&gt;prepare() is broken) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 31 Dec 2009 09:15:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11608#comment:60</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11608#comment:60/1262250945000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11608#comment:58" title="Comment 58"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The issue with suppressing the @ operator is that it silences warning when more than the needed number of arguments are passed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
My patch already checks for the correct number of args in rev 3. That's why it was possible to remove that operator.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Re the ticket in its entirely, I think that another, simpler possibility would be to initially double all % signs in the query
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Which is just bad practise. But what I can do is to auto-duplicate all %-signs which aren't valid format specifiers. But I think it's better to not filter the users input but to flag an error instead. Because the query-pattern then just is wrong. We can not try to find out what the users wants. I would really like to see the {&lt;em&gt;%s&lt;/em&gt;} and {"'%s'"} cases ignored either. Thats a similar topic.
&lt;/p&gt;
&lt;p&gt;
I know that if you read too much of the WP source code such ideas can come into mind because those approaches seem common but they are actually bad practice.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11673 (Need confirmation/undo/something for media delete) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 31 Dec 2009 06:23:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11673#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11673#comment:9/1262240638000000</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11676" title="#11676: defect (bug): Restore AYS for posts, pages, comments when trash is disabled (closed: wontfix)"&gt;#11676&lt;/a&gt; for posts, pages, comments.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11676 (Restore AYS for posts, pages, comments when trash is disabled) created</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 31 Dec 2009 06:22:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11676</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11676/1262240579000000</guid>
      <description>&lt;p&gt;
Related -- for media attachments, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11673" title="#11673: defect (bug): Need confirmation/undo/something for media delete (closed: fixed)"&gt;#11673&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
When someone decides to disable trash, they are presented with no AYS dialog on delete. This is a regression from pre-2.9 functionality.
&lt;/p&gt;
&lt;p&gt;
Yes, the whole point of trash was to rid the UI of AYS dialogs. I don't like AYS dialogs either and find trash+undo a great enhancement. But if a user doesn't want to use trash, or if a site admin doesn't want their users to use trash, then they should still be given an AYS to prevent accidental clicks and unsure deletes.
&lt;/p&gt;
&lt;p&gt;
We provided admins with a way to disable trash if they so choose, which should restore them pre-2.9 functionality, but it doesn't.
&lt;/p&gt;
&lt;p&gt;
We still have AYS in tags and categories, which makes this inconsistent across the UI. In &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11673" title="#11673: defect (bug): Need confirmation/undo/something for media delete (closed: fixed)"&gt;#11673&lt;/a&gt; we should be restoring it to media.
&lt;/p&gt;
&lt;p&gt;
Starting this off at 2.9.1 as it is a regression (if the user doesn't want to use a feature that we gave them the ability to disable). With trash enabled by default, I don't have much of a problem if it is moved to 3.0 though.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11674 (Caption Short Codes Don't Work) reopened</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Thu, 31 Dec 2009 06:10:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11674#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11674#comment:4/1262239859000000</guid>
      <description>&lt;p&gt;
This is reproducible when the cursor is not before the first element.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>11673.2.against-trunk.diff attached to Ticket #11673</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 31 Dec 2009 06:08:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11673/11673.2.against-trunk.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11673/11673.2.against-trunk.diff/1262239704000000</guid>
      <description>&lt;p&gt;
Patch against trunk to add EMPTY_TRASH_DAYS check.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>11673.2.against-2.9.diff attached to Ticket #11673</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 31 Dec 2009 06:07:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11673/11673.2.against-2.9.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11673/11673.2.against-2.9.diff/1262239677000000</guid>
      <description>&lt;p&gt;
Better patch against 2.9 branch also checks for EMPTY_TRASH_DAYS.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11673 (Need confirmation/undo/something for media delete) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 31 Dec 2009 06:05:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11673#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11673#comment:8/1262239547000000</guid>
      <description>&lt;p&gt;
I'm noticing that we need to check for EMPTY_TRASH_DAYS as well here, otherwise if trash is disabled but media trash is enabled, it deletes without an AYS. Could be considered an edge case, but if someone enables MEDIA_TRASH then decides to turn off trash all together, EMPTY_TRASH_DAYS = 0 should override everywhere. (And it does in all MEDIA_TRASH checks except here.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>11673-against-2.9-branch.diff attached to Ticket #11673</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 31 Dec 2009 05:34:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11673/11673-against-2.9-branch.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11673/11673-against-2.9-branch.diff/1262237685000000</guid>
      <description>&lt;p&gt;
Quick patch against 2.9 branch.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11673 (Need confirmation/undo/something for media delete) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 31 Dec 2009 05:28:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11673#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11673#comment:7/1262237292000000</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11673#comment:6" title="Comment 6"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Not sure what the consensus is on having AYS when trash is disabled, seems most people reject it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I couldn't find any discussion in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4529" title="#4529: task (blessed): &amp;#34;Trash&amp;#34; status for comments and posts (closed: fixed)"&gt;#4529&lt;/a&gt; -- I'll check the IRC logs. As trash was to prevent the need for AYS, then my thought is that if someone doesn't want to use trash -- or if a site admin doesn't want users to use trash -- then AYS should definitely be enabled. Otherwise, one click (either on accident, or without being sure) and you're destroying content forever. If we allow trash to be disabled, then we shouldn't cripple the fallback delete functionality to something it wasn't before.
&lt;/p&gt;
&lt;p&gt;
Changing to a defect to clarify that for media specifically, this is a regression. I would like to see AYS throughout core when trash is disabled, though. That's something can wait until 3.0 I suppose.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11506 (Creation of unnamed option is possible) updated</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Thu, 31 Dec 2009 05:09:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11506#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11506#comment:3/1262236170000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The patch I just added will check to see if $option_name is empty or blank (whitespace) before adding it to the options table.  If the $option_name is invalid, update_option() will return false.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>unnamed_option.diff attached to Ticket #11506</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Thu, 31 Dec 2009 05:08:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11506/unnamed_option.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11506/unnamed_option.diff/1262236102000000</guid>
      <description>&lt;p&gt;
A patch to validate the $option_name before updating the options table.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11390 (Press This entity encoding fix and blank title) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 31 Dec 2009 04:59:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11390#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11390#comment:12/1262235580000000</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12592" title="Fix Press This entity encoding, props noel, fixes #11390"&gt;[12592]&lt;/a&gt; Fix Press This entity encoding, props noel, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11390" title="#11390: defect (bug): Press This entity encoding fix and blank title (closed: fixed)"&gt;#11390&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 31 Dec 2009 04:59:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:84</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:84/1262235564000000</guid>
      <description>&lt;p&gt;
&lt;strong&gt;@aaroncampbell - I'm not saying we should do a poll, but if we do I'm definitely against having a note like this. It's clearly trying to influence people to Mike's point of view, which pretty much negates the purpose of a poll.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Excellent point.
&lt;/p&gt;
&lt;p&gt;
I wouldn't normally have proposed it as such except I think the real question is "&lt;em&gt;Is the term 'Post Type' too confusing?&lt;/em&gt;" with a potential follow up being "&lt;em&gt;If it's too confusing which of these should we use instead?&lt;/em&gt;" In hindsight, and after replying to you I would have proposed those two questions in that order instead of the one question with the note which admittedly now looks like a poor choice of wording to me too.
&lt;/p&gt;
&lt;p&gt;
Said another way, I believe we might be getting worked up about something that won't really be a problem if we just leave it be.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [12592]: Fix Press This entity encoding, props noel, fixes #11390</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 31 Dec 2009 04:57:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12592</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12592/1262235474031088</guid>
      <description>&lt;p&gt;
Fix Press This entity encoding, props noel, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11390" title="#11390: defect (bug): Press This entity encoding fix and blank title (closed: fixed)"&gt;#11390&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 31 Dec 2009 04:49:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:83</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:83/1262234990000000</guid>
      <description>&lt;p&gt;
As I continue to work with the post type plugin I realize there's a need for a hook 'register_post_types' to be called from within create_initial_post_types() &lt;em&gt;after&lt;/em&gt; the standard post types are registered.
&lt;/p&gt;
&lt;pre class="wiki"&gt;do_action('register_post_types');
&lt;/pre&gt;&lt;p&gt;
Adding this hook can allow those who needs to register a post type to do it at the right time instead of via 'init.' This will then allow a plug to assume within the 'init' hook that all post types that need to have been registered have been. IOW, this hook would solve the chicken or egg problem I'm recognizing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Thu, 31 Dec 2009 04:43:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:82</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:82/1262234630000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9674#comment:79" title="Comment 79"&gt;mikeschinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Of course you could leave the note off if you don't want to bias the sample but I'd prefer it because not changing the term has the significant benefit of not creating two names for the same thing.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not saying we should do a poll, but if we do I'm definitely against having a note like this.  It's clearly trying to influence people to Mike's point of view, which pretty much negates the purpose of a poll (unless you have notes like that from different people for every option, in which case it's more like an election than a poll...which would be messy to say the least).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11673 (Need confirmation/undo/something for media delete) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 31 Dec 2009 04:15:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11673#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11673#comment:6/1262232917000000</guid>
      <description>&lt;p&gt;
Not sure what the consensus is on having AYS when trash is disabled, seems most people reject it. Added here to restore the functionality since we decided to disable trash for attachments. Would probably have to go in 2.9.1 too as it may be considered a regression (we still have AYS for deleting tags and categories).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11673 (Need confirmation/undo/something for media delete) reopened</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 31 Dec 2009 03:24:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11673#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11673#comment:5/1262229897000000</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #11673 (Need confirmation/undo/something for media delete) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 31 Dec 2009 03:23:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11673#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11673#comment:4/1262229836000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
azaozz:
&lt;/p&gt;
&lt;p&gt;
We don't have AYS when trash is disabled elsewhere. I agree since we don't have media trash in core that we need AYS here. Do we want to add AYS back as well when trash is disabled across the board?
&lt;/p&gt;
&lt;p&gt;
Also, I think this should be done in 2.9.1, at least the committed fix, as it is technically a regression.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11390 (Press This entity encoding fix and blank title) updated</title>
      
        <dc:creator>noel</dc:creator>

      <pubDate>Thu, 31 Dec 2009 03:02:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11390#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11390#comment:11/1262228542000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11390 (Press This entity encoding fix and blank title) updated</title>
      
        <dc:creator>noel</dc:creator>

      <pubDate>Thu, 31 Dec 2009 03:02:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11390#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11390#comment:10/1262228529000000</guid>
      <description>&lt;p&gt;
new patch is same as no-&amp;amp;apos patch except it removes erroneous calls to aposfix() function.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>aposfix-remove.patch attached to Ticket #11390</title>
      
        <dc:creator>noel</dc:creator>

      <pubDate>Thu, 31 Dec 2009 03:01:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11390/aposfix-remove.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11390/aposfix-remove.patch/1262228490000000</guid>
      <description>&lt;p&gt;
Removes aposfix function calls completely.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 31 Dec 2009 02:51:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:81</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:81/1262227889000000</guid>
      <description>&lt;p&gt;
&lt;strong&gt;@janeforshort: Wow, that sounded condescending,&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Oh by no means, I was just sharing what worked for me.  Was trying to be helpful, not condescending.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;@janeforshort: What I was saying is that because we use the word Page to describe what is essentially a static post, and the word "page" is used in other web terminology (a web page, the admin page, etc), it frequently happens that users get confused when they use the word "page" to mean something other than a WP Page, or the person helping them does, or some combination thereof ... If we have to do a ton of explaining to describe the concept, then that generally means it's not named as well as it could be.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Ah, good point.  I was not thinking of it from that perspective.  Sorry again if it came across condescending, wasn't meaning to be.  FWIW, I agree that good naming is super important.
&lt;/p&gt;
&lt;p&gt;
So would be it fair to say, from your experience, that the term "Page" generates the biggest problems whereas "Post" is easier for most people to grasp?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>janeforshort</dc:creator>

      <pubDate>Thu, 31 Dec 2009 02:42:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:80</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:80/1262227323000000</guid>
      <description>&lt;p&gt;
But seriously, explaining Pages and Posts isn't that hard once you find the things that resonate with people. It took me quite a while to find what works but finally here's how I explain it:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;em&gt;"Pages" are those static things that are always there like the "Products", "Services" and "About" pages on a website.  "Posts" have a time/date component to them and are a lot like a news story. A "Post" by definition will have a date/time on which it's published and it "ages" from that day forward. Website owners continuously update "Pages" as their websites evolve but it's bad form to modify a "Post" unless to append an explicitly noted "Update" section or to explicitly link to newer related articles.  After all, you wouldn't want to quote and link to an article on CNN.com and go back later to find that the story had changed, would you? The same should apply to your blog Posts. So that's the difference between Pages and Posts.&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
With that explanation I've literally never had someone tell me they continue to be confused.  Try it maybe?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Wow, that sounded condescending, though I'm extending the benefit of the doubt and hoping you didn't mean it to come off that way. I didn't say it was hard to describe the difference between posts and pages. That's easy. What I was saying is that because we use the word Page to describe what is essentially a static post, and the word "page" is used in other web terminology (a web page, the admin page, etc), it frequently happens that users get confused when they use the word "page" to mean something other than a WP Page, or the person helping them does, or some combination thereof. It's the main reason I always use the word "screen" when referring to what most end-users call a "page" when giving someone instructions on how to do something in WP. If we have to do a ton of explaining to describe the concept, then that generally means it's not named as well as it could be.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11673 (Need confirmation/undo/something for media delete) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 31 Dec 2009 02:37:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11673#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11673#comment:3/1262227079000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12591" title="Add AYS popup when deleting media, fixes #11673"&gt;[12591]&lt;/a&gt;) Add AYS popup when deleting media, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11673" title="#11673: defect (bug): Need confirmation/undo/something for media delete (closed: fixed)"&gt;#11673&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [12591]: Add AYS popup when deleting media, fixes #11673</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 31 Dec 2009 02:37:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12591</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12591/1262227076625797</guid>
      <description>&lt;p&gt;
Add AYS popup when deleting media, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11673" title="#11673: defect (bug): Need confirmation/undo/something for media delete (closed: fixed)"&gt;#11673&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 31 Dec 2009 02:25:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:79</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:79/1262226331000000</guid>
      <description>&lt;p&gt;
&lt;strong&gt;&lt;em&gt;@janeforshort: Mike, I think you misunderstood what I was trying to say. What developers call post types is different from what users call post types, and your assertion that the two aren't really different isn't correct (at least based on the conversations about post types I've had with users and developers and the features they request around them).&lt;/em&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Sorry, wasn't trying to say they were the same just making an argument that they may be similar enough that people could learn the difference.  I think whatever terminology you use there will be user training involved and thus, weighing the potential confusion created by spawning a new term, I was arguing to maintain the term "post type."
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;em&gt;@janeforshort: Just try teaching a new user about Pages and you'll see what I mean ("Go to the page, no, the Page, not the screen," etc).&lt;/em&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Funny you should bring that up! Back in Feb 2009 I have a very successful&lt;sup&gt;(Footnote 1)&lt;/sup&gt;  "Launch your site Wordpress in 3 hours" event at my meetup group and we taught ~58 people how to use Wordpress in 3 hours.  What's more I'm preparing a training course which I'll be delivering Jan 5-7 and I'll be explaining explain those things yet again. :)
&lt;/p&gt;
&lt;p&gt;
So yes it can be a chore, but at least it's a chose with which I'm familiar. :) That said I think I've come up with some pretty good ways to explain it that most people I teach seem to understand right out of the gate.
&lt;/p&gt;
&lt;p&gt;
BTW, we'll get to meet face-to-face sometime between Jan 8-10 while you are here in Atlanta for Wordcamp.  :)
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;em&gt;@janeforshort: The end result of this discussion isn't something I'm overly passionate about,&lt;/em&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
I guess you could label me relatively passionate about getting this one right (whatever "right" is. :)
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;em&gt;@janeforshort: I just think it's important to think about how we use common words with multiple uses in describing functions, especially if it will make it harder to clarify them in the future.&lt;/em&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Agreed.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;em&gt;@janeforshort: If I could get rid of the Pages label and call them static posts or something, I'd do it in a New York minute, but it's a little late in the game to suggest such a thing.&lt;/em&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
A "New York minute";  you sure about that one?  (consider the origin of the phrase! ;)  But seriously, explaining Pages and Posts isn't that hard once you find the things that resonate with people. It took me quite a while to find what works but finally here's how I explain it:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;em&gt;"Pages" are those static things that are always there like the "Products", "Services" and "About" pages on a website.  "Posts" have a time/date component to them and are a lot like a news story. A "Post" by definition will have a date/time on which it's published and it "ages" from that day forward. Website owners continuously update "Pages" as their websites evolve but it's bad form to modify a "Post" unless to append an explicitly noted "Update" section or to explicitly link to newer related articles.  After all, you wouldn't want to quote and link to an article on CNN.com and go back later to find that the story had changed, would you? The same should apply to your blog Posts. So that's the difference between Pages and Posts.&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
With that explanation I've literally never had someone tell me they continue to be confused.  Try it maybe?
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;em&gt;@janeforshort: This discussion is simply raising the issue so we can be sure we are using the least ambiguous and/or potentially confusing language possible. I could put up a poll on the dev blog if people really think it will help, but to be honest, I think custom post types would be so misunderstood by the common user without pages of explanation, and in contrast are already so accepted by the advanced developers, that it would be difficult to get a meaningful set of results.
&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;
Maybe, but what if the poll were worded like so?
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;em&gt;We are considering adding more CMS-like functionality into Wordpress.  By "CMS-like" we mean providing functionality site owners could use to build more advanced sites. Rather than have sites be just a collection of blog posts and static content pages instead we want to be able to have collections of things like "products", "real estate listings", "events", "recipes", "businesses", "cars", "software", "motherboards", "camera", "venues", and more.  Problem is we are not sure what generic term we should call these things as compared to what we have already, i.e. "Posts" and "Pages" so that it will cause the least confusion among users.&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;em&gt;So here are the terms we've thrown around, in alpha order ; we'd like you to vote for the term you think most clearly describes to you the kind of thing that could be used as a container for information about products, real estate listings, events, recipes, businesses, cars, software, motherboards, cameras, venues, etc. If you have ideas beyond the ones we've had, please let us know those too:&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;Content
&lt;/li&gt;&lt;li&gt;Container
&lt;/li&gt;&lt;li&gt;Content Items
&lt;/li&gt;&lt;li&gt;Content Types
&lt;/li&gt;&lt;li&gt;Custom Post Types
&lt;/li&gt;&lt;li&gt;Entity Types
&lt;/li&gt;&lt;li&gt;Generic Types
&lt;/li&gt;&lt;li&gt;Items
&lt;/li&gt;&lt;li&gt;Objects
&lt;/li&gt;&lt;li&gt;Post Types
&lt;/li&gt;&lt;li&gt;Records
&lt;/li&gt;&lt;li&gt;Things
&lt;/li&gt;&lt;li&gt;OTHER? &lt;span class="underline"&gt;&lt;/span&gt;&lt;span class="underline"&gt;&lt;/span&gt;&lt;span class="underline"&gt;
&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;strong&gt;&lt;em&gt;Note&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;: If "Post Type" or "Custom Post Type" are not confusing to you we'd prefer to use them as those terms are currently already baked into the Wordpress program source code and changing them making actually cause confusion rather than help the situation.
&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;em&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
Of course you could leave the note off if you don't want to bias the sample but I'd prefer it because not changing the term has the significant benefit of not creating two names for the same thing.
&lt;/p&gt;
&lt;p&gt;
Anyway, that's my view. Unless you want to further discuss I'll go back to working on my post types plugin now. :)
&lt;/p&gt;
&lt;p&gt;
-Mike Schinkel
&lt;/p&gt;
&lt;p&gt;
Footnote 1:  &lt;a class="ext-link" href="http://www.meetup.com/atlantawebmarketers/calendar/9711037/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.meetup.com/atlantawebmarketers/calendar/9711037/&lt;/a&gt; (See the positive comments! :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>greenshady</dc:creator>

      <pubDate>Thu, 31 Dec 2009 02:12:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:78</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:78/1262225550000000</guid>
      <description>&lt;p&gt;
I have loads of users that know well what the term "post type" means.  They know that "page" and "attachment" are certain types of posts.  Maybe my theme/plugin users are just smarter than the average user; I don't know.  I say we stick with what we already have -- "post type."  My opinion is based on several conversations with average users, not other WP developers.  I think changing the terminology now just confuses matters more.
&lt;/p&gt;
&lt;p&gt;
Object type?  Seriously?  While I wouldn't mind that as a developer, it's not something that would get end users excited.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11669 (There's a problem to show one letter, and it cuts taxonomies names) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 31 Dec 2009 02:04:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11669#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11669#comment:7/1262225059000000</guid>
      <description>&lt;p&gt;
I'm running utf8_unicode_ci on the DB, also running XAMPP on Windows. I will test some other collation/charsets.
&lt;/p&gt;
&lt;p&gt;
I feel we're going to need more reporter feedback on this. Can you get some more site admins in here, some of whom are experiencing this and some of whom or not, and ask them to share their setups?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>janeforshort</dc:creator>

      <pubDate>Thu, 31 Dec 2009 01:08:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:77</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:77/1262221715000000</guid>
      <description>&lt;p&gt;
Mike, I think you misunderstood what I was trying to say. What developers call post types is different from what users call post types, and your assertion that the two aren't really different isn't correct (at least based on the conversations about post types I've had with users and developers and the features they request around them). Having a separate post type vs adding some custom fields or a special display has impacts on site organization, search, taxonomies, etc. You also make a statement about existing vs future users, but documentation and how we describe functions to new users is an important factor to consider. Just try teaching a new user about Pages and you'll see what I mean ("Go to the page, no, the Page, not the screen," etc).
&lt;/p&gt;
&lt;p&gt;
The end result of this discussion isn't something I'm overly passionate about, I just think it's important to think about how we use common words with multiple uses in describing functions, especially if it will make it harder to clarify them in the future. If I could get rid of the Pages label and call them static posts or something, I'd do it in a New York minute, but it's a little late in the game to suggest such a thing. This discussion is simply raising the issue so we can be sure we are using the least ambiguous and/or potentially confusing language possible. I could put up a poll on the dev blog if people really think it will help, but to be honest, I think custom post types would be so misunderstood by the common user without pages of explanation, and in contrast are already so accepted by the advanced developers, that it would be difficult to get a meaningful set of results.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 31 Dec 2009 00:45:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:76</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:76/1262220303000000</guid>
      <description>&lt;p&gt;
&lt;strong&gt;@ryan:&lt;/strong&gt; I just found/read @janeforshort's comments which I'll include here:
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;@janeforshort: Per Ryan's comment, some of the thinking behind using 'content types' rather than 'post types' as a label is because the end user generally thinks of post types in terms of having a different template for a specific type of post, like a review, recipe, blog post, aside, etc., and doesn't think about it in CMS terms (products, listings, etc).&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
I see her point for existing Wordpress sites but honestly think once custom post types because more exposed in Wordpress then that point become moot.
&lt;/p&gt;
&lt;p&gt;
I'm pretty sure people don't think much about templates vs. posts, they think about reviews, recipes, blog posts, asides, products, listings, etc. Once they can go in an create a custom post type called "review", "recipe", "product" or "listing" rather than have to create a post template that makes a (blog) post behave like one of them then users will do that because doing so will provide them more appropriate functionality.
&lt;/p&gt;
&lt;p&gt;
(BTW, I don't see how a review or a recipe is conceptually any different than a product or a listing.  They all have custom attributes that identify them separately from a generic post.)
&lt;/p&gt;
&lt;p&gt;
What's more there will mostly be a one-to-one correspondence between custom post types and custom post templates just as there already are different templates for each of posts, pages and attachments and for my plugin each custom post type gets its own custom post type template.  So rather than argue for a new term I really think &lt;em&gt;@janeforshort's&lt;/em&gt; point argues to &lt;em&gt;keep&lt;/em&gt; the term "post type" if, as she says, people think in terms a "post type" meaning "a different template."; that's exactly the association we'll want them to have, i.e.
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;em&gt;Using a custom post type equates to using a template for a custom type of content&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 31 Dec 2009 00:26:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:75</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:75/1262219205000000</guid>
      <description>&lt;p&gt;
And for accessing the object's metadata, don't we also get?
&lt;/p&gt;
&lt;pre class="wiki"&gt;get_object_type_object_type_object()
&lt;/pre&gt;&lt;p&gt;
Sorry, I just couldn't resist. ;-p
&lt;/p&gt;
&lt;p&gt;
Seriously, "object" is a great term for use inside the code but if you must, must, must rename it please use "item" or "record."
&lt;/p&gt;
&lt;p&gt;
For that matter, since this really is a big deal why not put up a poll on Wordpress.org to see what the majority of people think?  Maybe we'll learn that "post" is not so bad.  Or maybe we'll learn it is horrible.  But why not verify before making a decision based on all of our (flawed by nature) biases and assumptions?
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;@ryan&lt;/strong&gt;: also can you please speak to the idea of having a standard way to persist custom post types?
&lt;/p&gt;
&lt;p&gt;
That said, I'd like to propose an additional change to register_post_type() and that would be to include a filter. Such a filter would allow a plugin to annotate metadata to any of the core post types or even post types registered:
&lt;/p&gt;
&lt;pre class="wiki"&gt;  function register_post_type($post_type, $args = array(), $persist=true) {
   global $wp_post_types;
   if (!is_array($wp_post_types))
      $wp_post_types = array();
   $defaults = array('exclude_from_search' =&amp;gt; true);
   $args = wp_parse_args($args, $defaults);
   $post_type = sanitize_user($post_type, true);
   $args['name'] = $post_type;
   $args = apply_filter('register_post_type',$args);
   $wp_post_types[$post_type] = (object) $args;
   if (save_post_types())
      save_post_types();
}
&lt;/pre&gt;&lt;p&gt;
For that matter it would also be good to have hooks for save_post_types() and load_post_types():
&lt;/p&gt;
&lt;pre class="wiki"&gt;function save_post_types() {
   global $wp_post_types;
   $wp_post_types = apply_filter('save_post_types',$wp_post_types);
   update_option( 'post_types', $wp_post_types );
}
function load_post_types() {
   global $wp_post_types;
   $wp_post_types = apply_filter('load_post_types',get_option( 'post_types'));
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 31 Dec 2009 00:10:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:74</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:74/1262218256000000</guid>
      <description>&lt;p&gt;
So we would have:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;register_object_type()
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;get_object_types()
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;get_object_type_object() ?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Maybe we should call it get_object_type_properties() instead.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>