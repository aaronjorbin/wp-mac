<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #10537 (Top Level Categories) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 02 Aug 2009 23:51:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10537#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10537#comment:1/1249257094000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
You can change the /category/ prefix to something else on the Permalinks page, However you cannot remove it entrely.
&lt;/p&gt;
&lt;p&gt;
One of the major reasons (ok, the only reason) is the complexity of which that using %category% without a prefix causes in permalinks, WordPress has to list every single category in its rewrite rules, which on some blogs, can end up  with thousands of rules..
&lt;/p&gt;
&lt;p&gt;
If someone wishes to use it like you're asking for, I personally believe it should be handled by a plugin, and not by core, as its not really a very efficient way of handling requests.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4021 (Private Blog Option request "Visible only to users I choose") updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 02 Aug 2009 23:47:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4021#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4021#comment:9/1249256856000000</guid>
      <description>&lt;p&gt;
One of the things i see wrong with the Roles option, Is that it would mean the user would have to select all the roles that they want to see the content, Ie. Admins &amp;amp; Editors, which will probably end up coming down to a "It should know if i select Editors, that obviously i intended Administrators to see it as well.."
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [11767]: Bump</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Sun, 02 Aug 2009 23:18:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11767</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11767/1249255137273913</guid>
      <description>&lt;p&gt;
Bump
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [11766]: Add some CYA cap checks.</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Sun, 02 Aug 2009 23:11:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11766</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11766/1249254714728810</guid>
      <description>&lt;p&gt;
Add some CYA cap checks.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #4021 (Private Blog Option request "Visible only to users I choose") updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Sun, 02 Aug 2009 19:47:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4021#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4021#comment:8/1249242429000000</guid>
      <description>&lt;p&gt;
Only allowing certain roles or only allowing logged in users to read the blog rather than specific users would be the best solution for the core IMO. Certain users works awesome for WPMU, but not so much for regular WP.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10332 (Backdated pre-1st January 1970 post displayed as published on the ...) updated</title>
      
        <dc:creator>gosunatxrea</dc:creator>

      <pubDate>Sun, 02 Aug 2009 16:51:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10332#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10332#comment:8/1249231915000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10332 (Backdated pre-1st January 1970 post displayed as published on the ...) updated</title>
      
        <dc:creator>gosunatxrea</dc:creator>

      <pubDate>Sun, 02 Aug 2009 16:35:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10332#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10332#comment:7/1249230917000000</guid>
      <description>&lt;p&gt;
that code block was modified (added) in :
Rev 8199 Fix date() warning on Windows. Props ozh. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7186" title="#7186: defect (bug): Win32 / fresh install : date_i18n() outputs error (closed: fixed)"&gt;#7186&lt;/a&gt;
Rev 8742 date_i18n() fixes. Props nbachiyski. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8153" title="#8153: defect (bug): Use localized dates on General Options page (closed: fixed)"&gt;#8153&lt;/a&gt;
Rev 9616 Use localized dates on General Options page. Props nbachiyski. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8153" title="#8153: defect (bug): Use localized dates on General Options page (closed: fixed)"&gt;#8153&lt;/a&gt;
Rev 9742 date_i18n() fixes. Props nbachiyski. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8153" title="#8153: defect (bug): Use localized dates on General Options page (closed: fixed)"&gt;#8153&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It is necessary, but
Only when you use 5.1.0-
I think that you have to use that codes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>functions.php.2.diff attached to Ticket #10332</title>
      
        <dc:creator>gosunatxrea</dc:creator>

      <pubDate>Sun, 02 Aug 2009 16:28:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10332/functions.php.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10332/functions.php.2.diff/1249230498000000</guid>
      <description>&lt;p&gt;
use version_compare
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10537 (Top Level Categories) created</title>
      
        <dc:creator>php4ever</dc:creator>

      <pubDate>Sun, 02 Aug 2009 15:54:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10537</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10537/1249228441000000</guid>
      <description>&lt;p&gt;
Its been asked for in many places, maybe in 2.9 the /category/ in the url could have a feature like /%categoryname%/ as a setting. so it would show the actual category name instead of just /category/
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>wordpress-patch.diff attached to Ticket #10536</title>
      
        <dc:creator>AaronAsAChimp</dc:creator>

      <pubDate>Sun, 02 Aug 2009 14:33:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10536/wordpress-patch.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10536/wordpress-patch.diff/1249223617000000</guid>
      <description>&lt;p&gt;
check if the result is valid for passing to mysql_fetch_field(), etc.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10536 (errors surfacing when using set_error_handler) created</title>
      
        <dc:creator>AaronAsAChimp</dc:creator>

      <pubDate>Sun, 02 Aug 2009 14:32:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10536</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10536/1249223551000000</guid>
      <description>&lt;p&gt;
So, I've been getting some strange errors surfacing while developing a plugin.  Three errors along the lines of "mysql_free_result(): supplied argument is not a valid MySQL result resource."
&lt;/p&gt;
&lt;p&gt;
They seem to be normally suppressed, but surface when using set_error_handler(), and only when trying to create a table. It appears that in "wp-includes/wp-db.php" that the result of the query isn't being checked before being passed to the MySQL functions.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10535 (_wp_filter_build_unique_id issues with the first time a filter is ...) updated</title>
      
        <dc:creator>simonwheatley</dc:creator>

      <pubDate>Sun, 02 Aug 2009 14:08:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10535#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10535#comment:7/1249222122000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10535 (_wp_filter_build_unique_id issues with the first time a filter is ...) updated</title>
      
        <dc:creator>simonwheatley</dc:creator>

      <pubDate>Sun, 02 Aug 2009 13:53:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10535#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10535#comment:6/1249221201000000</guid>
      <description>&lt;p&gt;
Tested 10535.2.diff and this works in my use case(s) where current code doesn't. Tested with and without the spl_object_hash function.
&lt;/p&gt;
&lt;p&gt;
Thanks DD32 and Hakre.
&lt;/p&gt;
&lt;p&gt;
In brief my use case in code is:
&lt;/p&gt;
&lt;pre class="wiki"&gt;class Some_Class {
	// Blah blah
	function widget($args, $instance) {
		// Blah blah
		// This is the first time anyone has hooked posts_fields in this app
		add_filter( 'posts_fields', array( &amp;amp; $this, 'posts_fields' ) );
		$r = new WP_Query( $query_args );
		// Blah blah
		// This is the remove_filter call which doesn't work with the current code
		remove_filter( 'posts_fields', array( &amp;amp; $this, 'posts_fields' ) );
	}
	// Blah blah
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4021 (Private Blog Option request "Visible only to users I choose") updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 02 Aug 2009 13:36:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4021#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4021#comment:7/1249220208000000</guid>
      <description>&lt;p&gt;
In my opinion, This should be left to plugin territory.
&lt;/p&gt;
&lt;p&gt;
The simple reason is, That this fits in well with a Role management screen, Ie. Only users of a certain role can do something.
&lt;/p&gt;
&lt;p&gt;
Theres a new Role Management plugin coming up as well: &lt;a class="ext-link" href="http://justintadlock.com/archives/2009/07/22/developing-a-user-management-plugin"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://justintadlock.com/archives/2009/07/22/developing-a-user-management-plugin&lt;/a&gt; Looking at that, It seems the Content Permissions component would be what people would be after.
&lt;/p&gt;
&lt;p&gt;
The only other option would be a &lt;em&gt;Only allow logged in users to view content&lt;/em&gt;, ie. non-users would have to login before they can view content, I think this is a better solution than a per-user selection for core, Simply for the fact that its a common thing to want to close a WordPress install off completely during development, significant changes, or mearly needing to shut off access to content for awhile..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10535.2.diff attached to Ticket #10535</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 02 Aug 2009 13:26:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10535/10535.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10535/10535.2.diff/1249219569000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10535 (_wp_filter_build_unique_id issues with the first time a filter is ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 02 Aug 2009 13:24:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10535#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10535#comment:5/1249219491000000</guid>
      <description>&lt;p&gt;
On the other hand, Hakre's solution also works on PHP 5.2+ at least, And the overhead of either is incredibly tiny..
&lt;/p&gt;
&lt;p&gt;
Mine's just fixing the current function, hakre's is replacing the current function with spl_ or uniqid (Which is the same as using the current static var basically.. just doesnt have the current bug of 0)
&lt;/p&gt;
&lt;p&gt;
I'd like to see spl_object_hash() used.. But its not being used correctly in hakre's patch, Theres no reason to store it.
&lt;/p&gt;
&lt;p&gt;
If the hash function was to be used, i'd do it like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	} else if (is_object($function[0]) ) { // Object Class Calling
		if ( function_exists('spl_object_hash') )
			return spl_object_hash($function[0]) . $function[1];
		$obj_idx = get_class($function[0]).$function[1];
		if ( !isset($function[0]-&amp;gt;wp_filter_id) ) {
&lt;/pre&gt;&lt;p&gt;
Theres no need to store the wp_filter_id in that case, its completely redundant, as it'll return the exact same string the next time its called.
&lt;/p&gt;
&lt;p&gt;
See my 2nd patch for incluson of spl_object_hash (And no, for those interested, the extra function_exists() call adds minimal overhead, about 0.000005 over 10,000 iterations for me..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10535 (_wp_filter_build_unique_id issues with the first time a filter is ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 02 Aug 2009 13:05:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10535#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10535#comment:4/1249218338000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10535 (_wp_filter_build_unique_id issues with the first time a filter is ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 02 Aug 2009 13:04:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10535#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10535#comment:3/1249218291000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
attachment 10535.diff added
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;Main change is lines 685-7, the rest are just WordPress Coding Standard cleanups.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Testing code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;include 'wp-load.php';
class Foo {	function test() { echo 'TEST'; } }
class Baz extends Foo { }
$a = new Foo();
$b = new Foo();
$c = new Baz();
var_dump( _wp_filter_build_unique_id('test', array(&amp;amp;$a, 'test'), 10) );
var_dump( _wp_filter_build_unique_id('test', array(&amp;amp;$b, 'test'), 10) );
var_dump( _wp_filter_build_unique_id('test', array(&amp;amp;$c, 'test'), 10) );
var_dump( _wp_filter_build_unique_id('test', array(&amp;amp;$a, 'test'), 10) );
var_dump( _wp_filter_build_unique_id('test', array(&amp;amp;$b, 'test'), 10) );
var_dump( _wp_filter_build_unique_id('test', array(&amp;amp;$c, 'test'), 10) );
do_action('test');
&lt;/pre&gt;&lt;p&gt;
Output before:
&lt;/p&gt;
&lt;pre class="wiki"&gt;string 'Footest0' (length=8)
string 'Footest0' (length=8)
string 'Baztest0' (length=8)
string 'Footest3' (length=8)
string 'Footest4' (length=8)
string 'Baztest5' (length=8)
&lt;/pre&gt;&lt;p&gt;
Notice that the FIRST calling will return 0, not 3, 4 or 5?
&lt;/p&gt;
&lt;p&gt;
Testing it again:
&lt;/p&gt;
&lt;pre class="wiki"&gt;var_dump( _wp_filter_build_unique_id('test', array(&amp;amp;$a, 'test'), 10) );
var_dump( _wp_filter_build_unique_id('test', array(&amp;amp;$a, 'test'), 10) );
var_dump( _wp_filter_build_unique_id('test', array(&amp;amp;$a, 'test'), 10) );
&lt;/pre&gt;&lt;p&gt;
output:
&lt;/p&gt;
&lt;pre class="wiki"&gt;string 'Footest0' (length=8)
string 'Footest3' (length=8)
string 'Footest3' (length=8)
&lt;/pre&gt;&lt;p&gt;
So its just the first calling which is failing.
&lt;/p&gt;
&lt;p&gt;
After my patch, Here's the output of the first test case:
&lt;/p&gt;
&lt;pre class="wiki"&gt;string 'Footest3' (length=8)
string 'Footest4' (length=8)
string 'Baztest5' (length=8)
string 'Footest3' (length=8)
string 'Footest4' (length=8)
string 'Baztest5' (length=8)
&lt;/pre&gt;&lt;p&gt;
Which is now correct, $a = 3, $b = 4, $c = 5 each time, Whereas before, All would be 0 first call, and 3/4/5 2nd and every call after..
&lt;/p&gt;
&lt;p&gt;
Lets test filter/action adding/removing.
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action( 'test', array(&amp;amp;$a, 'test') );
remove_action( 'test', array(&amp;amp;$a, 'test') );
do_action('test');
&lt;/pre&gt;&lt;p&gt;
Before:
&lt;/p&gt;
&lt;pre class="wiki"&gt;TEST
&lt;/pre&gt;&lt;p&gt;
Seems the filter hasnt been removed (As expected, since its ID differs)
&lt;/p&gt;
&lt;p&gt;
After patch:
&lt;/p&gt;
&lt;pre class="wiki"&gt;NULL OUTPUT
&lt;/pre&gt;&lt;p&gt;
No output, Therefor, Action was removed.
&lt;/p&gt;
&lt;p&gt;
Sorry for the long post, But thats the method i've used to test, 99% sure this has no negitive side effects, It works with multiple instances of objects, as  well as different objects, Functions and Static calling isnt touched.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10535.diff attached to Ticket #10535</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 02 Aug 2009 12:55:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10535/10535.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10535/10535.diff/1249217746000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10535 (_wp_filter_build_unique_id issues with the first time a filter is ...) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 02 Aug 2009 12:55:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10535#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10535#comment:2/1249217745000000</guid>
      <description>&lt;p&gt;
correct credits are:
&lt;a class="ext-link" href="http://wordpress.pastebin.com/m6cac0d84"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.pastebin.com/m6cac0d84&lt;/a&gt; (simonwheatley)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10535 (_wp_filter_build_unique_id issues with the first time a filter is ...) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 02 Aug 2009 12:55:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10535#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10535#comment:1/1249217700000000</guid>
      <description>&lt;p&gt;
that's by design, because it should generate a new id each time. anyway the current implementation might have it's design flaws and there might be possibility to improve it. irc suggestions were:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://wordpress.pastebin.com/m6cac0d84"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.pastebin.com/m6cac0d84&lt;/a&gt; (&lt;a class="ext-link" href="http://wordpress.pastebin.com/m34bad8d7"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.pastebin.com/m34bad8d7&lt;/a&gt;)
&lt;a class="ext-link" href="http://wordpress.pastebin.com/m34bad8d7"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.pastebin.com/m34bad8d7&lt;/a&gt; (DD32)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4021 (Private Blog Option request "Visible only to users I choose") reopened</title>
      
        <dc:creator>janeforshort</dc:creator>

      <pubDate>Sun, 02 Aug 2009 12:40:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4021#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4021#comment:6/1249216815000000</guid>
      <description>&lt;p&gt;
Re-opening as have been getting a lot of requests for this functionality, and Matt supported the idea of including it at this point. Would like to see discussion of whether it should be in core or remain plugin territory.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #10535 (_wp_filter_build_unique_id issues with the first time a filter is ...) created</title>
      
        <dc:creator>simonwheatley</dc:creator>

      <pubDate>Sun, 02 Aug 2009 12:22:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10535</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10535/1249215738000000</guid>
      <description>&lt;p&gt;
Ref &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8723" title="#8723: defect (bug): Instances of same class that call variable hook first generate same ... (closed: fixed)"&gt;#8723&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The first time _wp_filter_build_unique_id is used to generate an ID the ID returned is different to the second time it is called. This presents a problem if the first ID is used when adding a filter which then needs to be removed later in the app flow... as the IDs don't match the filter is unremovable.
&lt;/p&gt;
&lt;p&gt;
One workaround proposed is to set a wp_filter_id property before add the filter, and this will cause _wp_filter_build_unique_id to bypass the problem code and effectively forces the "unique" ID which is generated... this workaround feels unpoetic. ;)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10293 (Error conditions of WPDB unparseable by Code) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 02 Aug 2009 11:51:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10293#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10293#comment:3/1249213899000000</guid>
      <description>&lt;p&gt;
Any opinions from anyone on this?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10527 (load_textdomain() merges even if not needed.) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 02 Aug 2009 09:57:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10527#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10527#comment:6/1249207030000000</guid>
      <description>&lt;p&gt;
Another Idea is to have an additional function called &lt;em&gt;load_plug_textdomain_once()&lt;/em&gt; and &lt;em&gt;load_textdomain_once()&lt;/em&gt;. But that would help to keep the existing function signatures untouched but it would mean more code.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7376 (Allow merging of similarly named text domains) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 02 Aug 2009 09:53:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7376#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7376#comment:4/1249206831000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10286" title="#10286: defect (bug): load_textdomain: Incorrect PHPDoc and possibly unwanted merging behaviour (closed: fixed)"&gt;#10286&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10527" title="#10527: enhancement: load_textdomain() merges even if not needed. (closed: fixed)"&gt;#10527&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10286 (load_textdomain: Incorrect PHPDoc and possibly unwanted merging behaviour) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 02 Aug 2009 09:52:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10286#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10286#comment:7/1249206770000000</guid>
      <description>&lt;p&gt;
Regarding the merging Feature, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7376" title="#7376: enhancement: Allow merging of similarly named text domains (closed: fixed)"&gt;#7376&lt;/a&gt; for implementation details.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6840 (Stale enclosures are not removed if post is edited.) closed</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sun, 02 Aug 2009 08:56:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6840#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6840#comment:19/1249203365000000</guid>
      <description>fixed</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #6840 (Stale enclosures are not removed if post is edited.) updated</title>
      
        <dc:creator>windyweather</dc:creator>

      <pubDate>Sun, 02 Aug 2009 08:51:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6840#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6840#comment:18/1249203073000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Sorry... this is the old bug. I see that the new one is &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/10511" title="#10511: defect (bug): Enclosure Custom Fields are automatically deleted (reopened)"&gt;#10511&lt;/a&gt;. Sorry.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6840 (Stale enclosures are not removed if post is edited.) reopened</title>
      
        <dc:creator>windyweather</dc:creator>

      <pubDate>Sun, 02 Aug 2009 08:47:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6840#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6840#comment:17/1249202863000000</guid>
      <description>&lt;p&gt;
I'm still seeing this problem in 2.8.2. Unless the last function performed is "Add Custom Field", for something like Slippery 1, the custom field disappears. Each time the post is updated, the custom field disappears. I have set the default theme and disabled all plugins and the custom fields still disappear. I'm going to reopen based on this behavior.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #4529 ("Trash" status for comments and posts) updated</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Sun, 02 Aug 2009 08:24:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4529#comment:71</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4529#comment:71/1249201447000000</guid>
      <description>&lt;p&gt;
Attached edit-pages.diff which fixes a few notices.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>edit-pages.diff attached to Ticket #4529</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Sun, 02 Aug 2009 08:22:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/4529/edit-pages.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/4529/edit-pages.diff/1249201378000000</guid>
      <description>&lt;p&gt;
Fix for notices in edit-pages
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10527 (load_textdomain() merges even if not needed.) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 02 Aug 2009 08:19:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10527#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10527#comment:5/1249201168000000</guid>
      <description>&lt;p&gt;
Updated the patch. Defaults to true now for &lt;em&gt;load_textdomain()&lt;/em&gt;. Fixed the typo in comments as well as taking care of line-length in the docblock comments and stricter writing according to the wordpress coding standards.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10527-netbeans.patch attached to Ticket #10527</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 02 Aug 2009 08:16:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10527/10527-netbeans.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10527/10527-netbeans.patch/1249200968000000</guid>
      <description>&lt;p&gt;
Test of a netbeans diff export on the same changes.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>10527.2.patch attached to Ticket #10527</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 02 Aug 2009 08:15:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10527/10527.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10527/10527.2.patch/1249200924000000</guid>
      <description>&lt;p&gt;
Updated Patch reflecting defaults and further comment improvements
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Changeset [11765]: More cap checks, for 2.8</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 02 Aug 2009 02:24:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11765</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11765/1249179883613942</guid>
      <description>&lt;p&gt;
More cap checks, for 2.8
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [11764]: More cap checks, for trunk</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 02 Aug 2009 02:23:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11764</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11764/1249179834093784</guid>
      <description>&lt;p&gt;
More cap checks, for trunk
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [11763]: Add some CYA cap checks.</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Sat, 01 Aug 2009 21:58:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11763</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11763/1249163939358222</guid>
      <description>&lt;p&gt;
Add some CYA cap checks.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [11762]: Add some CYA cap checks.</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Sat, 01 Aug 2009 21:15:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11762</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11762/1249161359704438</guid>
      <description>&lt;p&gt;
Add some CYA cap checks.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [11761]: Add some CYA cap checks.</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Sat, 01 Aug 2009 21:12:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11761</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11761/1249161137626634</guid>
      <description>&lt;p&gt;
Add some CYA cap checks.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10533 (Php 5.3 deprecated errors) updated</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Sat, 01 Aug 2009 20:55:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10533#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10533#comment:4/1249160140000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Attached a stab at it that works for me against PHP5.3.  Removes deprecated warnings but still allows other issues through.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>settings.patch attached to Ticket #10533</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Sat, 01 Aug 2009 20:53:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10533/settings.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10533/settings.patch/1249160024000000</guid>
      <description>&lt;p&gt;
Remove deprecated and strict warnings from wp_debug
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10534 (Bad directory for media upload) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sat, 01 Aug 2009 20:42:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10534#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10534#comment:1/1249159360000000</guid>
      <description>&lt;p&gt;
any chances you've safe_mode or an open_basedir restriction around?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10533 (Php 5.3 deprecated errors) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sat, 01 Aug 2009 20:41:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10533#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10533#comment:3/1249159261000000</guid>
      <description>&lt;p&gt;
yeah... can you write the patch? it shouldn't be too hard, if you base it on what things look like after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11128" title="Error reporting fixes. Props Denis-de-Bernardy, jacobsantos. fixes ..."&gt;r11128&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10533 (Php 5.3 deprecated errors) updated</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Sat, 01 Aug 2009 19:46:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10533#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10533#comment:2/1249155973000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10533#comment:1" title="Comment 1"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Mm... WP_DEBUG would use E_ALL. Maybe it should be using E_ALL &amp;amp; ~ E_DEPRECATED &amp;amp; ~ E_STRICT though, depending on if those defines are around.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It would be helpful, because otherwise it is currently impossible to test on IIS &amp;amp; PHP5.3 with wp_debug, because you're halted by deprecation warnings.  (Which will of course be around until core moves onwards.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10534 (Bad directory for media upload) created</title>
      
        <dc:creator>omar.belkhodja</dc:creator>

      <pubDate>Sat, 01 Aug 2009 19:25:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10534</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10534/1249154718000000</guid>
      <description>&lt;p&gt;
When I upload a picture, I can see that it is uploaded to the direcotry wp-content. The picture link is pointing to the directory wp-content/uploads, so the picture is never displayed. I have to move by myself the pictures into the correct directory. I'm using the browser upload feature (not the flash one).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>emptytrash.patch attached to Ticket #4529</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Sat, 01 Aug 2009 18:45:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/4529/emptytrash.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/4529/emptytrash.patch/1249152356000000</guid>
      <description>&lt;p&gt;
Show emtpy trash button only when people can do so.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #4529 ("Trash" status for comments and posts) updated</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Sat, 01 Aug 2009 18:44:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4529#comment:70</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4529#comment:70/1249152274000000</guid>
      <description>&lt;p&gt;
Currently the trash view and the "Empty Trash" button are visible for contributors and authors for both posts and comments.
&lt;/p&gt;
&lt;p&gt;
There's a few issues.  Firsly, I don't think the button should appear for contributors at all, because there's no purpose to it.
&lt;/p&gt;
&lt;p&gt;
Secondly, if it does appear for some reason, the behaviour should be consistent. Currently for comments it just refreshes the view, and for posts it gives a wp_die "you can't delete this post" message, which is fairly harsh.
&lt;/p&gt;
&lt;p&gt;
Lastly, for authors, if they "Empty Trash" when posts other than their own are in the list, they also get the wp_die error *and* their post is not deleted.
&lt;/p&gt;
&lt;p&gt;
So the attached patch (emptytrash.patch) assumes that we don't show the Empty Trash button unless the viewer has the capability to manage the entire section.
&lt;/p&gt;
&lt;p&gt;
It checks against edit_others_posts for posts and moderate_comments for comments.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10533 (Php 5.3 deprecated errors) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sat, 01 Aug 2009 18:34:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10533#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10533#comment:1/1249151649000000</guid>
      <description>&lt;p&gt;
Mm... WP_DEBUG would use E_ALL. Maybe it should be using E_ALL &amp;amp; ~ E_DEPRECATED &amp;amp; ~ E_STRICT though, depending on if those defines are around.
&lt;/p&gt;
&lt;p&gt;
D.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10529 (API to retrieve current WordPress version) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sat, 01 Aug 2009 18:31:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10529#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10529#comment:4/1249151490000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10533 (Php 5.3 deprecated errors) created</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Sat, 01 Aug 2009 15:16:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10533</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10533/1249139762000000</guid>
      <description>&lt;p&gt;
There was a ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8701" title="#8701: defect (bug): WordPress throws E_DEPRECATED notices all over the place with newer ... (closed: fixed)"&gt;#8701&lt;/a&gt; that was meant to look at this, and it was marked as fixed 3 months ago.  Yet today if I load up trunk in PHP5.3 with wp_debug on I get
&lt;/p&gt;
&lt;p&gt;
PHP Deprecated: Assigning the return value of new by reference is deprecated in E:\webpage\svn\trunk\wp-includes\cache.php on line 103 PHP Deprecated: Assigning the return value of new by reference is deprecated in E:\webpage\svn\trunk\wp-includes\pomo\mo.php on line 171 PHP Deprecated: Assigning the return value of new by reference is deprecated in E:\webpage\svn\trunk\wp-includes\l10n.php on line 407 PHP Deprecated: Assigning the return value of new by reference is deprecated in E:\webpage\svn\trunk\wp-includes\query.php on line 61 PHP Deprecated: Assigning the return value of new by reference is deprecated in E:\webpage\svn\trunk\wp-includes\theme.php on line 1133 PHP Deprecated: Assigning the return value of new by reference is deprecated in E:\webpage\svn\trunk\wp-includes\taxonomy.php on line 617 PHP Deprecated: Assigning the return value of new by reference is deprecated in E:\webpage\svn\trunk\wp-includes\widgets.php on line 320
&lt;/p&gt;
&lt;p&gt;
Many of which I guess relate to the use of $foo = &amp;amp; new bah.
&lt;/p&gt;
&lt;p&gt;
But anyway, I look back through that ticket and I see that  &amp;amp; ~ E_DEPRECATED was played with a few times, but the final commit never bothered with it.  Should we not have an  &amp;amp; ~ E_DEPRECATED in there somewhere?  Otherwise I can't see a way around the error reports.
&lt;/p&gt;
&lt;p&gt;
(I didn't re-open the last ticket as it is old and long.)
&lt;/p&gt;
&lt;p&gt;
Hoping this is one of the first things to change once PHP4 support goes.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10529 (API to retrieve current WordPress version) closed</title>
      
        <dc:creator>stephanreiter</dc:creator>

      <pubDate>Sat, 01 Aug 2009 13:05:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10529#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10529#comment:3/1249131939000000</guid>
      <description>wontfix: &lt;p&gt;
Thanks for the hint. I didn't know about version_compare, which seems to do exactly what I need!
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10527 (load_textdomain() merges even if not needed.) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 01 Aug 2009 12:24:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10527#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10527#comment:4/1249129478000000</guid>
      <description>&lt;p&gt;
Then it should default true for textdomain and default false for plugin. I must change the patch later on, need to go now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>file.php.2.patch attached to Ticket #10522</title>
      
        <dc:creator>ntm</dc:creator>

      <pubDate>Sat, 01 Aug 2009 12:23:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10522/file.php.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10522/file.php.2.patch/1249129410000000</guid>
      <description>&lt;p&gt;
followed now: If defined, set it to that, Else, If POST'd, set it to that, If not, Set it to whatever it previously was (saved details in option) (comment in line 678 of file.php)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10264 (use instanceof instead of is_a()) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sat, 01 Aug 2009 12:08:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10264#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10264#comment:12/1249128510000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10264#comment:11" title="Comment 11"&gt;Mittineague&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The decision is yours of course, but I think if it was up to me I'd probably wait until WordPress no longer supports PHP 4 and then use the instanceof operator with the work-around.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Seems like the right thing to do, yeah. :D
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10528 (Media rotating, cropping, resizing etc in 2.9.) updated</title>
      
        <dc:creator>stephanreiter</dc:creator>

      <pubDate>Sat, 01 Aug 2009 11:57:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10528#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10528#comment:2/1249127835000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10529 (API to retrieve current WordPress version) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sat, 01 Aug 2009 11:50:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10529#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10529#comment:2/1249127451000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
seems like unneeded bloat. use version_compare().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>naming-10531.patch attached to Ticket #10531</title>
      
        <dc:creator>stephanreiter</dc:creator>

      <pubDate>Sat, 01 Aug 2009 11:47:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10531/naming-10531.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10531/naming-10531.patch/1249127277000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10523 (Could not create file due to invalid name -- upgrade error in plugins) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sat, 01 Aug 2009 11:44:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10523#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10523#comment:3/1249127079000000</guid>
      <description>&lt;p&gt;
Agreed, up to a point -- I still think someone over at Automattic should give a notice to Yahoo.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10530 (Pass post-id to filters 'wp_generate_attachment_metadata') updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sat, 01 Aug 2009 11:43:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10530#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10530#comment:2/1249126997000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10530 (Pass post-id to filters 'wp_generate_attachment_metadata') closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 01 Aug 2009 11:09:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10530#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10530#comment:1/1249124944000000</guid>
      <description>duplicate: &lt;p&gt;
Already in core: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10494" title="#10494: enhancement: wp_generate_attachment_metadata filter needs attachment ID (closed: fixed)"&gt;#10494&lt;/a&gt; &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11747" title="Add attachment ID to the wp_generate_attachment_metadata filter, props ..."&gt;[11747]&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10532 (Changes to hook image_make_intermediate_size) created</title>
      
        <dc:creator>stephanreiter</dc:creator>

      <pubDate>Sat, 01 Aug 2009 11:07:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10532</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10532/1249124849000000</guid>
      <description>&lt;p&gt;
Currently we have the filter 'image_make_intermediate_size' in WordPress that allows plug-ins to rename/move the intermediate image file after it was created. In order to modify the image, e.g. to add watermarks, plug-ins first have to explicitly load the image although it was in memory just moments ago.
&lt;/p&gt;
&lt;p&gt;
Changing the filter image_make_intermediate_size to receive the image handle in addition to the filename would allow plug-in creators to write more efficient code by reusing the image resource before it is destroyed. This can be accomplished by relocating the filter invocation into the image_resize function.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10531 (Intermediate image file naming scheme) created</title>
      
        <dc:creator>stephanreiter</dc:creator>

      <pubDate>Sat, 01 Aug 2009 10:57:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10531</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10531/1249124276000000</guid>
      <description>&lt;p&gt;
Scissors is a plug-in of mine that allows cropping of intermediate images, e.g. thumbnails. Although this operation changes the dimensions of the image, I decided against changing its filename to reflect the new width/height in order to avoid breaking posts/links that reference the image via its old name. This causes an inconsistency between the file name and the actual contents.
&lt;/p&gt;
&lt;p&gt;
Instead of appending {$width}x{$height} to the filename of intermediate images, I'd like to see the intermediate name appended, e.g. 'medium' or 'thumbnail' to resolve this issue.
Also, this would simplify retrieval of intermediate images because the database would no longer have to be queried to find the correct filename.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10530 (Pass post-id to filters 'wp_generate_attachment_metadata') created</title>
      
        <dc:creator>stephanreiter</dc:creator>

      <pubDate>Sat, 01 Aug 2009 10:49:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10530</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10530/1249123763000000</guid>
      <description>&lt;p&gt;
wp_generate_attachment_metadata filters currently only receive the metadata array, which doesn't contain any link to the representation of the uploaded image in the database. Although it's possible to retrieve the post-id via the following code in a hackish, probably error-prone way, I'd be better (and trivial) to supply the post-id as a parameter to filters.
&lt;/p&gt;
&lt;pre class="wiki"&gt;function get_postid_from_metadata($metadata)
{
  global $wpdb;
  $post = $wpdb-&amp;gt;get_row($wpdb-&amp;gt;prepare("SELECT post_id FROM $wpdb-&amp;gt;postmeta WHERE meta_value = %s LIMIT 1", $metadata['file']));
  return ($post != null) ? $post-&amp;gt;post_id : FALSE;
}
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10529 (API to retrieve current WordPress version) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 01 Aug 2009 10:47:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10529#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10529#comment:1/1249123658000000</guid>
      <description>&lt;p&gt;
php's version_compare() works well:
&lt;/p&gt;
&lt;pre class="wiki"&gt;global $wp_version;
if ( version_compare($wp_version, '2.8', '&amp;gt;=') ) {
//2.8+ stuff here
}
&lt;/pre&gt;&lt;p&gt;
the good thing about this, is that it understands major, minor and point release, as well as dealing with -dev -alpha -etc.. nativly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10529 (API to retrieve current WordPress version) created</title>
      
        <dc:creator>stephanreiter</dc:creator>

      <pubDate>Sat, 01 Aug 2009 10:39:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10529</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10529/1249123146000000</guid>
      <description>&lt;p&gt;
Sometimes it's necessary in plug-ins to check whether a certain functionality or behavior is supported by the current WP version or not. For this purpose I currently use the following code in the Scissors plugin:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function _minimalWpVersion($major, $minor) {
  global $wp_version;
  $version = preg_replace("/[^\\.0-9\s]/", "", $wp_version); // keep only '0' .. '9' and '.'
  $version = explode('.', $version);
  return (count($version) &amp;gt;= 2 &amp;amp;&amp;amp; ($version[0] &amp;gt; $major || $version[0] == $major &amp;amp;&amp;amp; $version[1] &amp;gt;= $minor));
}
&lt;/pre&gt;&lt;p&gt;
I would love to see the introduction of an API that allows plug-in authors to easily query the current version of WordPress and get a result in the form of an array('major' =&amp;gt; 2, 'minor' =&amp;gt; 8, 'revision' =&amp;gt; 2) (to give an example). This would eliminate potential problems when the format of the version-string changed.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10528 (Media rotating, cropping, resizing etc in 2.9.) updated</title>
      
        <dc:creator>JohnMyr</dc:creator>

      <pubDate>Sat, 01 Aug 2009 09:59:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10528#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10528#comment:1/1249120790000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10528 (Media rotating, cropping, resizing etc in 2.9.) created</title>
      
        <dc:creator>JohnMyr</dc:creator>

      <pubDate>Sat, 01 Aug 2009 09:54:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10528</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10528/1249120486000000</guid>
      <description>&lt;p&gt;
Im not sure if its appropriate to post this ticket, but I didnt find any tickets for media rotation, cropping etc.
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;Adding some basic editing functions like 90-degree rotation, cropping and resizing was considered an obvious winner in the dev chat, and as several plugins handle this functionality, we’re hopeful it will be included soon.&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
I propose including of the Scissors plugin by Stephan Reiter:
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/scissors/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/scissors/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Its matured and well tested and has nice usability features and uses jQuery.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10527 (load_textdomain() merges even if not needed.) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 01 Aug 2009 09:36:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10527#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10527#comment:3/1249119366000000</guid>
      <description>&lt;p&gt;
See for merging: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7376" title="#7376: enhancement: Allow merging of similarly named text domains (closed: fixed)"&gt;#7376&lt;/a&gt; (closed enhancement: fixed), Opened 12 months ago, Allow merging of similarly named text domains
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10527 (load_textdomain() merges even if not needed.) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 01 Aug 2009 09:34:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10527#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10527#comment:2/1249119274000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
attachment 10527.patch added
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;Typo in comments: "textdomain in nemory."
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;The commits you refer to, Change nothing other than spacing, and comments, as well as adding a error-condition handler..
&lt;/li&gt;&lt;li&gt;Merging is the current default, So shouldn't the merge param be true by default? - It was after all, apparently chosen to merge by default.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This is really an enhancement, setting as such.&lt;br /&gt;
Milestone: Current trunk (2.9) for enhancements with patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10286 (load_textdomain: Incorrect PHPDoc and possibly unwanted merging behaviour) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 01 Aug 2009 09:26:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10286#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10286#comment:6/1249118774000000</guid>
      <description>&lt;p&gt;
related / follow up: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10527" title="#10527: enhancement: load_textdomain() merges even if not needed. (closed: fixed)"&gt;#10527&lt;/a&gt; - make merging optional
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10527 (load_textdomain() merges even if not needed.) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 01 Aug 2009 09:25:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10527#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10527#comment:1/1249118712000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Uploaded a patch.
&lt;/p&gt;
&lt;p&gt;
It is tested, I applied the changes to the core sourcecode and then used a plugin to load a plugin textdomain. that plugin textdomain is loaded then only once, once it has been loaded it is not automatically merged. Setting the optional $merge parameter to true then gets it loaded &amp;amp; merged then.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10527.patch attached to Ticket #10527</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 01 Aug 2009 09:18:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10527/10527.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10527/10527.patch/1249118292000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10527 (load_textdomain() merges even if not needed.) created</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 01 Aug 2009 09:15:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10527</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10527/1249118134000000</guid>
      <description>&lt;p&gt;
About 4 weeks ago in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10286" title="#10286: defect (bug): load_textdomain: Incorrect PHPDoc and possibly unwanted merging behaviour (closed: fixed)"&gt;#10286&lt;/a&gt; with &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11680" title="Update load_textdomain() phpdoc. Props nbachiyski. fixes #10286 for trunk"&gt;[11680]&lt;/a&gt; &amp;amp; &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11681" title="Update load_textdomain() phpdoc. Props nbachiyski. fixes #10286 for 2.8.1"&gt;[11681]&lt;/a&gt; merging of textdomains have been introduced in load_textdomain(). That generally is a good feature, but I would like to see it optional to not merge textdomains over and over again.
&lt;/p&gt;
&lt;p&gt;
for example with one of my co-maintained plugin we load the translation in an important object as well as in the admin panel. doing the merge now in the admin panel would not be necessary.
&lt;/p&gt;
&lt;p&gt;
Therefore I suggest to add an optional parameter that flags if a merge is wanted / needed.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10523 (Could not create file due to invalid name -- upgrade error in plugins) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 01 Aug 2009 03:01:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10523#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10523#comment:2/1249095693000000</guid>
      <description>wontfix: &lt;p&gt;
I do not see the point in restricting what legal characters filenames can or cannot contain, If a plugin uses a file like that then notify the author directly, I dont think its WordPress/WordPress.org's job to tell plugin authors about web hosts oddities.
&lt;/p&gt;
&lt;p&gt;
The only place it'd belong would be on the !Wordpress.org codex under notes on  the hosting providers for WordPress installation..
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10526 (oEmbed provider) created</title>
      
        <dc:creator>candrews</dc:creator>

      <pubDate>Sat, 01 Aug 2009 02:04:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10526</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10526/1249092266000000</guid>
      <description>&lt;p&gt;
Wordpress would benefit from having an oEmbed provider. Having one would allow oEmbed consuming sites (such as those powered by laconica) to embed Wordpress content automatically.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item>
   </channel>
</rss>