<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #23295 (Improved login expiration warning) updated</title>
      
        <dc:creator>mbijon</dc:creator>

      <pubDate>Fri, 25 Jan 2013 23:59:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23295#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23295#comment:4/1359158358634327</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7392 (Don't create new autosave revision if nothing has changed yet) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Jan 2013 23:55:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7392#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7392#comment:17/1359158130466046</guid>
      <description>&lt;p&gt;
This is also something we noticed while doing &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22687" title="#22687: defect (bug): auto-drafts are improperly stored as the first revision (closed: fixed)"&gt;#22687&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23296 (3.6 - Edit Post, Invalid implode after Core-Update) created</title>
      
        <dc:creator>hovida</dc:creator>

      <pubDate>Fri, 25 Jan 2013 23:48:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23296</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23296/1359157731869146</guid>
      <description>&lt;p&gt;
&lt;strong&gt;Error:&lt;/strong&gt; implode(): Invalid arguments passed
&lt;/p&gt;
&lt;p&gt;
The implode function have invalid Arguments.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;URL:&lt;/strong&gt; /wp-admin/edit.php
&lt;br /&gt;&lt;strong&gt;HTTP referrer:&lt;/strong&gt; &lt;a class="ext-link" href="http://adrean-test.eatserver.nl/wp-admin/update-core.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://adrean-test.eatserver.nl/wp-admin/update-core.php&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;FIX (wp-includes/compat.php - Line 32):&lt;/strong&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;return ($chars  ? implode( '', $chars ) : array());
&lt;/pre&gt;&lt;p&gt;
&lt;strong&gt;Stacktrace:&lt;/strong&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;in implode called at /www/htdocs-test/wp-includes/compat.php (32)
in _mb_substr called at /www/htdocs-test/wp-includes/compat.php (18)
in mb_substr called at /www/htdocs-test/wp-includes/formatting.php (3096)
in wp_html_excerpt called at /www/htdocs-test/wp-includes/admin-bar.php (230)
in wp_admin_bar_site_menu called at ? (?)
in call_user_func_array called at /www/htdocs-test/wp-includes/plugin.php (487)
in do_action_ref_array called at /www/htdocs-test/wp-includes/admin-bar.php (58)
in wp_admin_bar_render called at ? (?)
in call_user_func_array called at /www/htdocs-test/wp-includes/plugin.php (406)
in do_action called at /www/htdocs-test/wp-admin/admin-header.php (113)
in require_once called at /www/htdocs-test/wp-admin/edit.php (220)
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #4010 (Add Image Importing to the Blogger Importer) updated</title>
      
        <dc:creator>Workshopshed</dc:creator>

      <pubDate>Fri, 25 Jan 2013 23:46:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4010#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4010#comment:17/1359157586268140</guid>
      <description>&lt;p&gt;
Javascript has been moved to external file and rendering of table is now done by WP class WP_List_Table so the importer now looks more like other admin screens. The progress bars are now done using JQuery.UI.Progressbar and we get a count of the images processed. Turn of post revisions in the loading process. Importer can be re-run without getting duplicates. Have added a refresh button so you can see if you've had more updates since you last imported.
&lt;/p&gt;
&lt;p&gt;
Still getting false positives on files that are not actually images.
&lt;/p&gt;
&lt;p&gt;
My false positive test is a wikipedia page which although having a .png extention is actually a HTML page and hence we don't want to download it.
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;a href="http://en.wikipedia.org/wiki/File:Centrifugal_governor.png"&amp;gt;&amp;lt;img src="suitablelocalimage.png"&amp;gt;&amp;lt;/a&amp;gt;
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23295 (Improved login expiration warning) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 25 Jan 2013 23:29:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23295#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23295#comment:3/1359156558203043</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
We can use the new Heartbeat API from JS to request time left to cookies expiration, or on the PHP side, send notification to the browser one hour before.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23295 (Improved login expiration warning) updated</title>
      
        <dc:creator>dh-shredder</dc:creator>

      <pubDate>Fri, 25 Jan 2013 23:05:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23295#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23295#comment:2/1359155146387304</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23295 (Improved login expiration warning) updated</title>
      
        <dc:creator>mintindeed</dc:creator>

      <pubDate>Fri, 25 Jan 2013 22:50:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23295#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23295#comment:1/1359154215126593</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23295 (Improved login expiration warning) created</title>
      
        <dc:creator>mintindeed</dc:creator>

      <pubDate>Fri, 25 Jan 2013 22:49:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23295</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23295/1359154185649289</guid>
      <description>&lt;p&gt;
The goal here is to improve the user experience when your login has / will expire, as discussed in &lt;a class="ext-link" href="http://make.wordpress.org/core/2013/01/07/wordpress-3-6-autosave-and-post-locking/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress 3.6: Autosave and Post Locking&lt;/a&gt; and the &lt;a class="ext-link" href="http://make.wordpress.org/core/2013/01/25/agenda-for-todays-autosave-and-post-locking-team/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;autosave and post locking team meeting in IRC&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The suggested tactic is to integrate the &lt;a class="ext-link" href="https://github.com/Penske-Media-Corp/pmc-post-savior/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PMC Post Savior&lt;/a&gt; plugin into core.  That part should be pretty straightforward.
&lt;/p&gt;
&lt;p&gt;
I think 3 valuable enhancements that are on the plugin's roadmap, but not yet complete would be:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Alert properly on failed requests and lost connectivity.  If my internet connection has gone down and I'm still working, I should be alerted that I'm "Working offline" and my changes aren't being automatically saved.  I don't think this should be a blocking UI, but it should be obvious.
&lt;/li&gt;&lt;li&gt;Block publish/save until login has been verified.  Polling duration can be decreased (or maybe even done away with entirely) if we block the Publish/Save/etc actions until we've verified the user's cookie.
&lt;/li&gt;&lt;li&gt;Pre-emptive notification.  When approaching the user's login cookie expiration time, say 1 hour before, display a message and allow the user to extend their login.  For example, how banking sites notify you when you've been inactive too long and they're about to log you out.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18282 (Issue with admin page hierarchy in Menu admin) updated</title>
      
        <dc:creator>Marventus</dc:creator>

      <pubDate>Fri, 25 Jan 2013 22:42:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18282#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18282#comment:12/1359153762418381</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@energy0m: the issue will be resolved when... someone takes the time to resolve it. It seems Sergey is looking into it, but if you are in a rush, I suggest you contact him and - here's a crazy idea! - offer him to help. In the meantime, I can only suggest you take a chill pill and read up on what Open Source is all about: &lt;a class="ext-link" href="http://en.wikipedia.org/wiki/Open_source"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://en.wikipedia.org/wiki/Open_source&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23294 (Using "OR" in 'meta_query' negates the "NOT EXISTS" compare.) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Fri, 25 Jan 2013 22:36:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23294#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23294#comment:2/1359153395290531</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #23268,​23294 batch updated</title>
      
        <dc:creator>hereswhatidid</dc:creator>

      <pubDate>Fri, 25 Jan 2013 22:33:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=23268%2C23294</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=23268%2C23294/1359153182421288</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23268" title="#23268: defect (bug): NOT EXISTS meta query with OR relation (closed: fixed)"&gt;#23268&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #23294 (Using "OR" in 'meta_query' negates the "NOT EXISTS" compare.) created</title>
      
        <dc:creator>hereswhatidid</dc:creator>

      <pubDate>Fri, 25 Jan 2013 22:31:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23294</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23294/1359153093002897</guid>
      <description>&lt;p&gt;
When using the "NOT EXISTS" compare within 'meta_query' to look for undefined custom fields if I also add in a secondary 'OR' query, the entire query behaves as if I was just checking for "EXISTS".  The following code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;'meta_query' =&amp;gt; array(
  'relation' =&amp;gt; 'OR',
  array(
    'key' =&amp;gt; 'status',
    'compare' =&amp;gt; 'NOT EXISTS',
  ),
  array(
    'key' =&amp;gt; 'status',
    'value' =&amp;gt; 'new',
    'compare' =&amp;gt; '=',
  ),
);
&lt;/pre&gt;&lt;p&gt;
will return any post that has a value set for the "status" custom field.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18282 (Issue with admin page hierarchy in Menu admin) updated</title>
      
        <dc:creator>energy0m</dc:creator>

      <pubDate>Fri, 25 Jan 2013 22:22:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18282#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18282#comment:11/1359152577564910</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
When is this ticket going to be resolved? is there a patch? This is core functionality keeping my project from launching which is over 18months old. not cool. I can put in pages manually but my client cant manage them and as it turns out they have a very deep sitemap to place in the menu's section.
&lt;/p&gt;
&lt;p&gt;
so again.. when is this to be resolved?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23274 (Use image crop on specific custom size) updated</title>
      
        <dc:creator>WraithKenny</dc:creator>

      <pubDate>Fri, 25 Jan 2013 21:55:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23274#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23274#comment:6/1359150916584172</guid>
      <description>&lt;p&gt;
Unless this feature is already actually in, and I didn't notice, and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19889" title="#19889: defect (bug): Image Editor doesn't apply changes to custom image sizes (closed: fixed)"&gt;#19889&lt;/a&gt; is hiding it. In which this ticket is a dup bug. In that case my bad.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23274 (Use image crop on specific custom size) reopened</title>
      
        <dc:creator>WraithKenny</dc:creator>

      <pubDate>Fri, 25 Jan 2013 21:49:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23274#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23274#comment:5/1359150579902972</guid>
      <description>&lt;p&gt;
Aside from the bug on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19889" title="#19889: defect (bug): Image Editor doesn't apply changes to custom image sizes (closed: fixed)"&gt;#19889&lt;/a&gt; blocking the enhancement on this ticket, I don't think it's a duplicate. The comments on that ticket say that this feature request isn't in scope of that ticket (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19889" title="#19889: defect (bug): Image Editor doesn't apply changes to custom image sizes (closed: fixed)"&gt;#19889&lt;/a&gt;) and asked for a new ticket for the enhancement...
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #23293 (wpColorPicker not working in widgets) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Fri, 25 Jan 2013 21:49:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23293#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23293#comment:6/1359150555552640</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23293 (wpColorPicker not working in widgets) closed</title>
      
        <dc:creator>mattwiebe</dc:creator>

      <pubDate>Fri, 25 Jan 2013 21:34:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23293#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23293#comment:5/1359149668189909</guid>
      <description>invalid: &lt;p&gt;
This is an implementation issue, not a &lt;code&gt;wpColorPicker&lt;/code&gt; issue. It's not magic, it has to be called on the right element at the right time. You could:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Put a &lt;code&gt;script&lt;/code&gt; element inline inside the widget's &lt;code&gt;widget&lt;/code&gt; method, referencing some unique id that you give the text &lt;code&gt;input&lt;/code&gt; that you want to turn into a &lt;code&gt;wpColorPicker&lt;/code&gt; instance. A bit ugly, but it'll work.
&lt;/li&gt;&lt;li&gt;If inline code makes you twitch, the cleaner version would go something like:
&lt;/li&gt;&lt;/ol&gt;&lt;pre class="wiki"&gt;jQuery('#widgets-right .widgets-sortables').on('sortstop', function(event,ui){
    // run js after widgets are dropped. ui.item contains the dropped item.
    // note that the dropped item could just as easily be a reordering rather
    // than a new widget. Plan your logic accordingly.
});
&lt;/pre&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #23293 (wpColorPicker not working in widgets) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 25 Jan 2013 21:32:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23293#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23293#comment:4/1359149551261770</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22363 (Accents in attachment filenames should be sanitized) updated</title>
      
        <dc:creator>tar.gz</dc:creator>

      <pubDate>Fri, 25 Jan 2013 20:58:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22363#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22363#comment:16/1359147523312851</guid>
      <description>&lt;p&gt;
Some more information after further research:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The same issue obviously appears for any type of attachment, such as a PDF that would be linked from within a post. In Safari, linking to a PDF file with diacritics will lead to the 404 page.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;On WordPress.com, a solution has been implemented: when uploading the "moiré-pättern.png" file from above, it gets renamed into "mc3b8irecc81-pacc88ttern.png". So there is some sanitization in place, which is lacking in WordPress.org. And it works in OSX.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Here are two more links from support forums, showing how this issue affects users around the world:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://discussions.apple.com/thread/4381117"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://discussions.apple.com/thread/4381117&lt;/a&gt; (has some good info!)
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://wordpress.org/support/topic/uploaded-image-with-accents-in-name-image-dont-show-in-safari-6?replies=5"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/uploaded-image-with-accents-in-name-image-dont-show-in-safari-6?replies=5&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
All this testing actually leads me to think that I should open another ticket, not about &lt;em&gt;renaming&lt;/em&gt; the files, but about generating &lt;em&gt;URL-encoded links&lt;/em&gt; when embedding files into a post (or generating galleries with the shortcode). According to &lt;a class="ext-link" href="http://tools.ietf.org/html/rfc3986#page-16"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;RFC 3986&lt;/a&gt; (URI Generic Syntax), accented characters should be percent-encoded. I guess the simple solution would be to cleanse those filenames with the &lt;a class="ext-link" href="http://php.net/rawurlencode"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;rawurlencode()&lt;/a&gt; PHP function when generating the link.
&lt;/p&gt;
&lt;p&gt;
With that strategy, we would have a pretty good fix, even without touching the upload / file renaming process.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23230 (Change hyphen in front of "Draft" to em dash) updated</title>
      
        <dc:creator>kkalvaa</dc:creator>

      <pubDate>Fri, 25 Jan 2013 20:08:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23230#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23230#comment:6/1359144480219625</guid>
      <description>&lt;p&gt;
Regardless of whether it is a hyphen or minus it should still be a dash there. Again, ref wikipedia.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23230 (Change hyphen in front of "Draft" to em dash) updated</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Fri, 25 Jan 2013 20:05:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23230#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23230#comment:5/1359144321411505</guid>
      <description>&lt;p&gt;
How do you know this is a hyphen or a minus sign?
&lt;/p&gt;
&lt;p&gt;
1: -
2: -
&lt;/p&gt;
&lt;p&gt;
the are the same
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23230 (Change hyphen in front of "Draft" to em dash) updated</title>
      
        <dc:creator>kkalvaa</dc:creator>

      <pubDate>Fri, 25 Jan 2013 19:56:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23230#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23230#comment:4/1359143794883133</guid>
      <description>&lt;p&gt;
It should be an em dash because it is typographically correct in English (but an en dash would be correct in other languages). It should not be a hyphen because it not joining words or letters inside a word. A hyphen is not a dash, it is punctuation, for everything else a dash should be used. That's my reasoning.
&lt;/p&gt;
&lt;p&gt;
Ref: &lt;a class="ext-link" href="http://en.wikipedia.org/wiki/Dash"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://en.wikipedia.org/wiki/Dash&lt;/a&gt; and &lt;a class="ext-link" href="http://www.smashingmagazine.com/2011/08/15/mind-your-en-and-em-dashes-typographic-etiquette/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.smashingmagazine.com/2011/08/15/mind-your-en-and-em-dashes-typographic-etiquette/&lt;/a&gt; (plus a ton of typographical tradition and research)
&lt;/p&gt;
&lt;p&gt;
Personally I prefer the en dash, I find the em dash a tad too long, but that's how English typography is.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23187 (esc_url() fails if the URL's scheme's case does not match the allowed ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Jan 2013 19:29:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23187#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23187#comment:10/1359142175563356</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23187 (esc_url() fails if the URL's scheme's case does not match the allowed ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Jan 2013 19:28:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23187#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23187#comment:9/1359142128534714</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23348" title="Treat URL schemes as case insensitive when sanitizing them in ..."&gt;23348&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Treat URL schemes as case insensitive when sanitizing them in esc_url().&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23303" title="Treat URL schemes as case insensitive when sanitizing them in ..."&gt;[23303]&lt;/a&gt; to the 3.5 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
props mdawaffe.&lt;br /&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23187" title="#23187: defect (bug): esc_url() fails if the URL's scheme's case does not match the allowed ... (closed: fixed)"&gt;#23187&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [23348]: Treat URL schemes as case insensitive when sanitizing them in ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Jan 2013 19:28:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/23348</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/23348/1359142127590931</guid>
      <description>&lt;p&gt;
Treat URL schemes as case insensitive when sanitizing them in esc_url().
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23303" title="Treat URL schemes as case insensitive when sanitizing them in ..."&gt;[23303]&lt;/a&gt; to the 3.5 branch.
&lt;/p&gt;
&lt;p&gt;
props mdawaffe.
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23187" title="#23187: defect (bug): esc_url() fails if the URL's scheme's case does not match the allowed ... (closed: fixed)"&gt;#23187&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [23347]: The 3.5 branch is now 3.5.2-alpha.  </title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Jan 2013 19:28:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/23347</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/23347/1359142089275222</guid>
      <description>&lt;p&gt;
The 3.5 branch is now 3.5.2-alpha.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #23230 (Change hyphen in front of "Draft" to em dash) updated</title>
      
        <dc:creator>aaronholbrook</dc:creator>

      <pubDate>Fri, 25 Jan 2013 18:22:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23230#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23230#comment:3/1359138125784943</guid>
      <description>&lt;p&gt;
Why should it be an em dash instead of a hyphen? What reasoning do you have for this change?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15955 (move_uploaded_file mangles non-ascii characters on Windows platforms) updated</title>
      
        <dc:creator>Perepandel</dc:creator>

      <pubDate>Fri, 25 Jan 2013 17:51:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15955#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15955#comment:23/1359136269169448</guid>
      <description>&lt;p&gt;
I've discovered this patch has a side effect after applying it to another of my sites: my theme stopped displaying featured images of size 'thumbnail', although it was specified in the theme's code, thumbnails for the proper sizes were still being generated and it was working properly until then. I disabled the plugin and voilà - it works again. I suspect it has todo something with autfw_generate_attachment_metadata($metadata, $attachment_id) and autfw_update_attachment_metadata($metadata) but need more time to fix it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23096 (Provide callback before setting state of the editor media manager) updated</title>
      
        <dc:creator>husobj</dc:creator>

      <pubDate>Fri, 25 Jan 2013 16:54:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23096#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23096#comment:5/1359132843705317</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23293 (wpColorPicker not working in widgets) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 16:47:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23293#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23293#comment:3/1359132462876539</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23293 (wpColorPicker not working in widgets) updated</title>
      
        <dc:creator>johnstonphilip</dc:creator>

      <pubDate>Fri, 25 Jan 2013 16:37:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23293#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23293#comment:2/1359131834636897</guid>
      <description>&lt;p&gt;
Ah good call. Yes .on() would work. I tested it with other jquery elements in my widget and they work when first added. The same should be applied to wpColorPicker.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23148 (Add hook in wp_ajax_save_attachment for additional attachment fields) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Fri, 25 Jan 2013 16:36:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23148#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23148#comment:9/1359131772910807</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23096 (Provide callback before setting state of the editor media manager) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Fri, 25 Jan 2013 16:35:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23096#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23096#comment:4/1359131748879898</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
WANT / NEED. Caps on purpose.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16847 (Capability check fails for custom post type revision edit (&amp; ...) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 25 Jan 2013 16:35:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16847#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16847#comment:12/1359131715200852</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>16847.diff attached to Ticket #16847</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 25 Jan 2013 16:34:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16847/16847.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16847/16847.diff/1359131679586301</guid>
      <description>&lt;p&gt;
match cap checks in revisions to cap check used in edit
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16847 (Capability check fails for custom post type revision edit (&amp; ...) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 25 Jan 2013 16:34:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16847#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16847#comment:11/1359131645502167</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
i have been re-reading the ticket again trying to understand it. the root of the issue is that the edit screen makes a different check for capabilities before allowing access than the revisions review screen.
&lt;/p&gt;
&lt;p&gt;
its pointed out above, but worth repeating with current links --
&lt;/p&gt;
&lt;p&gt;
edit.php checks &lt;code&gt;current_user_can( $post_type_object-&amp;gt;cap-&amp;gt;edit_posts )&lt;/code&gt;  - &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/tags/3.5.1/wp-admin/edit.php#L21"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;At line 21&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
revisions.php checks &lt;code&gt;if ( !current_user_can( 'read_post', $revision-&amp;gt;ID ) || !current_user_can( 'read_post', $post-&amp;gt;ID ) )&lt;/code&gt; &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/tags/3.5.1/wp-admin/revision.php#L111"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;At Line 111&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
the difference in the check apparently lead to the (difficult to reproduce) bug in this ticket.
&lt;/p&gt;
&lt;p&gt;
if i understand it correctly the bug is still there and probably best would be solved by replacing the check in revisions to match the edit.php.
&lt;/p&gt;
&lt;p&gt;
i have attached a patch for review that changes each of several calls in revisions.php to the same check used in edit.php, this should lead to better expected behavior, that is same capabilities required for editing a post than for editing a revision, which wasn't _quite_ the case before.
&lt;/p&gt;
&lt;p&gt;
along the way i noticed the same calls repeating several times in different parts of the switch loop (you will see that in my patch).  shouldn't we just move these common checks to the top of the switch loop.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23293 (wpColorPicker not working in widgets) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Fri, 25 Jan 2013 16:32:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23293#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23293#comment:1/1359131525445915</guid>
      <description>&lt;p&gt;
.live is deprecated in 1.9 - use &lt;code&gt;.on()&lt;/code&gt; or &lt;code&gt;.delegate()&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23148 (Add hook in wp_ajax_save_attachment for additional attachment fields) updated</title>
      
        <dc:creator>mordauk</dc:creator>

      <pubDate>Fri, 25 Jan 2013 16:31:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23148#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23148#comment:8/1359131502962027</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23293 (wpColorPicker not working in widgets) created</title>
      
        <dc:creator>johnstonphilip</dc:creator>

      <pubDate>Fri, 25 Jan 2013 16:31:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23293</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23293/1359131468603545</guid>
      <description>&lt;p&gt;
This should be a simple fix. I was creating a widget that uses the new color picker in WordPress 3.5.
&lt;/p&gt;
&lt;p&gt;
It works fine except for when it is first added to a sidebar. I suspect this is because the widget is being added to the sidebar by jquery. The color picker is also applied using jquery - but it isn't able to select the color element because it wasn't part of the DOM when the page loaded.
&lt;/p&gt;
&lt;p&gt;
I don't know where the js code is for the wpColorPicker javascript function, but somewhere in there this should likely be added:
&lt;a class="ext-link" href="http://api.jquery.com/live/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://api.jquery.com/live/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23279 (Add templates to style registration, signup, activation, login and ...) updated</title>
      
        <dc:creator>sabreuse</dc:creator>

      <pubDate>Fri, 25 Jan 2013 15:29:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23279#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23279#comment:6/1359127795984279</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23289 (wp_protect_special_option rejects things it shouldn't) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Jan 2013 14:28:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23289#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23289#comment:5/1359124086924626</guid>
      <description>&lt;p&gt;
Best I can tell, this would only affect delete_option(). The other methods — get, update, and add — all trim( $option ) then check if $option is empty, and if so, return false. trim() would convert 0 to '0' but this is still empty.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23289.diff attached to Ticket #23289</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Jan 2013 14:28:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23289/23289.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23289/23289.diff/1359124084596688</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>23052.4.diff attached to Ticket #23052</title>
      
        <dc:creator>aaronholbrook</dc:creator>

      <pubDate>Fri, 25 Jan 2013 14:08:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23052/23052.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23052/23052.4.diff/1359122893441662</guid>
      <description>&lt;p&gt;
Fixed ipstenu's patch - diff was not relative to installation, included a 'wp' prefix which broke patch. Tested patch, looks good.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15585 ("LGPL License" should just be "LGPL") updated</title>
      
        <dc:creator>aaronholbrook</dc:creator>

      <pubDate>Fri, 25 Jan 2013 14:00:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15585#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15585#comment:8/1359122404182356</guid>
      <description>&lt;p&gt;
Tested on trunk, looks good.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19239 (Combine WordPress News and Other WordPress News dashboard widgets) updated</title>
      
        <dc:creator>aaronholbrook</dc:creator>

      <pubDate>Fri, 25 Jan 2013 13:56:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19239#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19239#comment:11/1359122168043416</guid>
      <description>&lt;p&gt;
Testing patch 19239.patch - not sure if it's just my installation, but the widget sits at 'Loading...'.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16953 (Allow symlinked plugins) updated</title>
      
        <dc:creator>markus.magnuson</dc:creator>

      <pubDate>Fri, 25 Jan 2013 13:34:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16953#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16953#comment:38/1359120886231873</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23113 (Automatic notice of new localized version missing) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 13:24:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23113#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23113#comment:5/1359120290694005</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23113#comment:4" title="Comment 4"&gt;pavelevap&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
But it is not possible to update to Czech version of WordPress 3.5. There is only English version available. It is also regression, because it was possible several months ago.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Could not reproduce. When I complete those 3 steps with &lt;code&gt;define('WPLANG', 'ru_RU')&lt;/code&gt;, I get both Russian and English 3.5.1 packages listed on the Updates screen. Note that the Updates screen has a 60 seconds timeout before refreshing the data.
&lt;/p&gt;
&lt;p&gt;
With &lt;code&gt;define('WPLANG', 'cs_CZ')&lt;/code&gt;, currently only the English package is displayed indeed, probably because there's no 3.5.1 package on cs.wordpress.org yet.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16214 (Custom Field "Name" and "Value" headers shouldn't show if there are no ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 12:53:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16214#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16214#comment:13/1359118427998952</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Resolution&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Fixed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/18445" title="Introduce register_meta(), get_metadata_by_mid(), and *_post_meta ..."&gt;[18445]&lt;/a&gt; by unsetting protected meta fields before printing the table (similar to what &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/16214/ticket.16214.2.diff" title="Attachment 'ticket.16214.2.diff' in Ticket #16214"&gt;ticket.16214.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/16214/ticket.16214.2.diff" title="Download"&gt;​&lt;/a&gt; suggested).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23292 (Media uploader loads full size image and slows down, please change to ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 12:31:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23292#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23292#comment:1/1359117097844170</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23272 (Notice on class-wp-walker.php) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 12:24:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23272#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23272#comment:4/1359116652146583</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23346" title="Make sure the array exists before adding an element to it. props ..."&gt;23346&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Make sure the array exists before adding an element to it. props rodrigosprimo. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23272" title="#23272: defect (bug): Notice on class-wp-walker.php (closed: fixed)"&gt;#23272&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [23346]: Make sure the array exists before adding an element to it. props ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 12:24:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/23346</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/23346/1359116650939476</guid>
      <description>&lt;p&gt;
Make sure the array exists before adding an element to it. props rodrigosprimo. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23272" title="#23272: defect (bug): Notice on class-wp-walker.php (closed: fixed)"&gt;#23272&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16847 (Capability check fails for custom post type revision edit (&amp; ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 12:16:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16847#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16847#comment:10/1359116182411103</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10690 (WordPress does not support non-ascii characters in the domain name) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 12:03:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10690#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10690#comment:31/1359115422794680</guid>
      <description>&lt;p&gt;
Now that AJAX for IDN is fixed in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18952" title="#18952: defect (bug): AJAX calls to IDN don't work in IE and Opera (closed: fixed)"&gt;#18952&lt;/a&gt;, I don't see any issues other than &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/11734" title="#11734: defect (bug): trackback_rdf() for IDN (xn--) Domains produces invalid HTML (new)"&gt;#11734&lt;/a&gt; when using the Punycode representation of URLs.
&lt;/p&gt;
&lt;p&gt;
We should probably convert &lt;code&gt;home&lt;/code&gt; and &lt;code&gt;siteurl&lt;/code&gt; to Punycode automatically, as mentioned in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19279" title="#19279: defect (bug): Admin actions redirects to invalid domain with IDN-domains (closed: duplicate)"&gt;#19279&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16953 (Allow symlinked plugins) updated</title>
      
        <dc:creator>synapticism</dc:creator>

      <pubDate>Fri, 25 Jan 2013 11:13:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16953#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16953#comment:37/1359112420962072</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23289 (wp_protect_special_option rejects things it shouldn't) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Fri, 25 Jan 2013 10:00:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23289#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23289#comment:4/1359108049337107</guid>
      <description>&lt;p&gt;
Ok, I'm no longer speechless. I guess that does make sense, given that
&lt;/p&gt;
&lt;pre class="wiki"&gt;var_dump( 0 == 'a2' );
&lt;/pre&gt;&lt;p&gt;
also gives true.
Initially, I was expecting (or hoping?) for strict comparison to be the default in &lt;code&gt;in_array&lt;/code&gt;, but that would be inconsistent with other functions. So, yeah, it does make sense.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23292 (Media uploader loads full size image and slows down, please change to ...) created</title>
      
        <dc:creator>mnrtjeR</dc:creator>

      <pubDate>Fri, 25 Jan 2013 09:31:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23292</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23292/1359106271892652</guid>
      <description>&lt;p&gt;
The media uploader is really slow if you upload 1024 x 768 images, the reason for this is that the preview shows full size images.
&lt;/p&gt;
&lt;p&gt;
Underneath here is a quick fix to speed up the media uploader to thumbnails.
Please change line 1333 in "wp-includes/media.php" from:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$attachment_url = wp_get_attachment_url( $attachment-&amp;gt;ID );
&lt;/pre&gt;&lt;p&gt;
to:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$attachment_url = wp_get_attachment_thumb_url($attachment-&amp;gt;ID );
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23289 (wp_protect_special_option rejects things it shouldn't) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Fri, 25 Jan 2013 08:54:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23289#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23289#comment:3/1359104085957529</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23289#comment:2" title="Comment 2"&gt;TobiasBg&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
PHP, this earns you another &lt;strong&gt;WTF&lt;/strong&gt;?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Makes full sense given that it's a non-strict comparison. When converting strings to integers, it takes as many digits as possible before a non-digit and turns that into an integer. In this case, &lt;code&gt;2a&lt;/code&gt; becomes &lt;code&gt;2&lt;/code&gt;, but there are no digits at the start of &lt;code&gt;a2&lt;/code&gt;, so that becomes &lt;code&gt;0&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Patch looks good, +1.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23289 (wp_protect_special_option rejects things it shouldn't) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Fri, 25 Jan 2013 08:26:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23289#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23289#comment:2/1359102419364877</guid>
      <description>&lt;p&gt;
PHP, this earns you another &lt;strong&gt;WTF&lt;/strong&gt;?
&lt;/p&gt;
&lt;p&gt;
Compare
&lt;/p&gt;
&lt;pre class="wiki"&gt;var_dump( in_array( 0, array( '1', 'a2' ) ) ); // bool(true)
&lt;/pre&gt;&lt;p&gt;
to
&lt;/p&gt;
&lt;pre class="wiki"&gt;var_dump( in_array( 0, array( '1', '2a' ) ) ); // bool(false)
&lt;/pre&gt;&lt;p&gt;
I'm a little bit speechless right now...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10690 (WordPress does not support non-ascii characters in the domain name) updated</title>
      
        <dc:creator>espsjurs</dc:creator>

      <pubDate>Fri, 25 Jan 2013 08:26:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10690#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10690#comment:30/1359102396234010</guid>
      <description>&lt;p&gt;
Hello there,
&lt;/p&gt;
&lt;p&gt;
This is still an issue :-(
&lt;/p&gt;
&lt;p&gt;
Is someone working on this?
&lt;/p&gt;
&lt;p&gt;
Espen
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23216 (Create "WP Heartbeat" API) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Fri, 25 Jan 2013 07:59:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23216#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23216#comment:30/1359100753359161</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23291 (wp_mail should handle phpmailer exceptions instead of ignoring them) updated</title>
      
        <dc:creator>mark-k</dc:creator>

      <pubDate>Fri, 25 Jan 2013 07:05:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23291#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23291#comment:2/1359097516560233</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23291 (wp_mail should handle phpmailer exceptions instead of ignoring them) updated</title>
      
        <dc:creator>mark-k</dc:creator>

      <pubDate>Fri, 25 Jan 2013 07:04:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23291#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23291#comment:1/1359097497178769</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23291 (wp_mail should handle phpmailer exceptions instead of ignoring them) created</title>
      
        <dc:creator>mark-k</dc:creator>

      <pubDate>Fri, 25 Jan 2013 07:04:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23291</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23291/1359097477400765</guid>
      <description>&lt;p&gt;
Right now code in wp_mail that call phpmailer looks like
&lt;/p&gt;
&lt;pre class="wiki"&gt;	try {
		$phpmailer-&amp;gt;Send();
	} catch ( phpmailerException $e ) {
		return false;
	}
&lt;/pre&gt;&lt;p&gt;
or worse (not failing at all).
&lt;/p&gt;
&lt;p&gt;
Yesterday had to hack core files to find out that an email address did not have a valid email format. Exceptions should either propagate in some way, or be reported to an error log.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23285 (Implement an AMD JavaScript loader in WordPress) updated</title>
      
        <dc:creator>auniquename</dc:creator>

      <pubDate>Fri, 25 Jan 2013 06:57:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23285#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23285#comment:12/1359097053375029</guid>
      <description>&lt;p&gt;
Right. So why build something over and over and over when you can build it once? I'm glad you see the benefit of the idea.
&lt;/p&gt;
&lt;p&gt;
If it has to wait for me to do it for WordPress myself, then so be it. Fine, I can deal with that. But it will take me much longer than a more experienced or skilled developer. I'm a chemist by education and training, not a computer scientist. (Though I understand all they teach in school now is Java with a big easy button.) Also, I would test it to death so that it is guaranteed to work and be near perfect in every way.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Anyone that agrees with you in a situation like this seems to believe they are volunteering to do the work (and I wish they didn't because they aren't).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
(This is an excellent point, thank you for reminding me.)
&lt;/p&gt;
&lt;p&gt;
The problem is that it will not pay the rent and I have about 8 weeks left until I am on the street. So it just is not going to happen right now. Sorry I don't have a patch for you, but the idea is a good one. My dilemma continues unresolved in the other ticket, there are just too many possible use cases.
&lt;/p&gt;
&lt;p&gt;
I am not alone in my issues with jQuery UI, it is far from personal, I just seem to have found more bugs than others by pushing the product to its (intended) limits.
&lt;/p&gt;
&lt;p&gt;
And whether you like it or not, compromised WP sites reflect poorly on WP as much as on their owners.
&lt;/p&gt;
&lt;p&gt;
Sorry if this post comes across as snarky, I do not mean it to be, I'm just tired and frustrated and should really go to bed. Everyone participating in this discussion has been most civil and helpful and I appreciate that a great deal, it is a rare thing on the internet.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23285 (Implement an AMD JavaScript loader in WordPress) updated</title>
      
        <dc:creator>bpetty</dc:creator>

      <pubDate>Fri, 25 Jan 2013 05:59:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23285#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23285#comment:11/1359093588366853</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23285 (Implement an AMD JavaScript loader in WordPress) updated</title>
      
        <dc:creator>bpetty</dc:creator>

      <pubDate>Fri, 25 Jan 2013 05:57:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23285#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23285#comment:10/1359093422335960</guid>
      <description>&lt;p&gt;
Putting aside @auniquename's personal issues working with jQuery and other JS libs themselves, the idea of using RequireJS with &lt;a class="ext-link" href="http://requirejs.org/docs/api.html#multiversion"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;multiversion support&lt;/a&gt; actually does have some merit, and is at least worth some investigation, discussion, and possible patch down the road.
&lt;/p&gt;
&lt;p&gt;
As was mentioned, WP does update bundled JS libraries very frequently, and they are often updated to API incompatible versions. They might as well be since there's no stable API policy around 3rd party JS libraries still. Most of the libraries WP bundles are bundled because they are quality, popular libraries, and so they often do have good policies around backwards compatibility even when upgrading to API incompatible versions (often only removing really old API like WP occasionally does, or infrequently used API). So it doesn't happen very frequently, but plugins do occasionally break when WP is updated and those JS libraries the plugin was originally built on are updated with it to API incompatible versions. That is the definition of "API incompatible", code originally written to work with older versions is not guaranteed to work with the new API incompatible branch.
&lt;/p&gt;
&lt;p&gt;
I'd be surprised if the plugin review team hasn't seen this with old plugins. Do they even review old plugins, particularly ones with high incompatible votes in the compatibility matrix, or only new ones?
&lt;/p&gt;
&lt;p&gt;
Anyway, I believe these are the same issues @auniquename is referring to. They are also the same issues I've referred to in the past when discussing &lt;a class="ext-link" href="http://ibaku.wordpress.com/2012/11/08/wordpress-plugin-and-theme-api-manifest-versioning/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;plugin API manifest versioning&lt;/a&gt;. I actually do believe this is one approach to the problem that could potentially work.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23285#comment:8" title="Comment 8"&gt;auniquename&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
People have custom plugins written for their site alone, and then may never hear from the developer again and are unable to maintain code themselves. Ya, their bed, lie in it, yada, yada...  But if we can prevent that, then why not?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sorry, but you'll generally find that most of the WP community doesn't care about these people, and the response you'll almost always find from WP developers is "upgrade your plugins or fix them" - and if their developer has abandoned them or disappeared, the answer is hire another. You won't get far with that argument.
&lt;/p&gt;
&lt;p&gt;
Also keep in mind though that if you feel like you're being pushed back, it's because you're making a suggestion to change something without even providing a patch to review and test out. Anyone that agrees with you in a situation like this seems to believe they are volunteering to do the work (and I wish they didn't because they aren't). When that happens, they're always inclined to defend however it is that WP currently handles (or doesn't handle) that issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23272 (Notice on class-wp-walker.php) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Jan 2013 05:54:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23272#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23272#comment:3/1359093269150204</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looks good, yes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16847 (Capability check fails for custom post type revision edit (&amp; ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Jan 2013 05:50:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16847#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16847#comment:9/1359093016727857</guid>
      <description>&lt;p&gt;
I doubt there is a bug here at all.
&lt;/p&gt;
&lt;p&gt;
Revisions simply use its parent post for cap checking. This is baked into map_meta_cap directly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23290 (When using switch_to_blog() with a persistent object cache that lacks ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Jan 2013 05:40:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23290#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23290#comment:2/1359092437633470</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Curiously, not a regression — existed back when this was just a wp_cache_init() call too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23290 (When using switch_to_blog() with a persistent object cache that lacks ...) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Fri, 25 Jan 2013 05:33:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23290#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23290#comment:1/1359091989056122</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23290 (When using switch_to_blog() with a persistent object cache that lacks ...) created</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 25 Jan 2013 05:28:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23290</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23290/1359091724590955</guid>
      <description>&lt;p&gt;
If you're using a persistent object cache that lacks the new &lt;code&gt;wp_cache_switch_to_blog()&lt;/code&gt; support, WordPress core &lt;code&gt;else&lt;/code&gt;s into a complete cache clobbering branch. It is smart about grabbing the global groups and re-adding those after &lt;code&gt;wp_cache_init()&lt;/code&gt; is called, but it doesn't do the same for non-persistent groups. Those are a hardcoded array. So if you call &lt;code&gt;switch_to_blog()&lt;/code&gt;, you would lose any custom-added non-persistent groups.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23285 (Implement an AMD JavaScript loader in WordPress) updated</title>
      
        <dc:creator>auniquename</dc:creator>

      <pubDate>Fri, 25 Jan 2013 05:01:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23285#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23285#comment:9/1359090101795729</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22896 (Prevent plugins from overriding jQuery in the admin) updated</title>
      
        <dc:creator>auniquename</dc:creator>

      <pubDate>Fri, 25 Jan 2013 05:00:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22896#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22896#comment:39/1359090021467270</guid>
      <description>&lt;p&gt;
Hrm. This approach is not working for jQuery plugins. I cannot make the call to jQuery.noConflict(true) before loading jQuery plugins, as they still reference (jQuery). So if I make the jQuery.noConflict call after including my desired jQuery plugins the question is will the jQuery plugins collide? I'll have to find a way to test that.
&lt;/p&gt;
&lt;p&gt;
This approach does seem to work (my-libs.js):
&lt;/p&gt;
&lt;pre class="wiki"&gt;/* included minified jQuery */
/* included minified jQuery UI */
/* included minified Iris */
var MYjQuery = jQuery.noConflict(true);
&lt;/pre&gt;&lt;p&gt;
Confirmed in (my.js):
&lt;/p&gt;
&lt;pre class="wiki"&gt;alert("Native jQuery version: " + jQuery().jquery);
alert("Native jQuery UI version: " + jQuery.ui.version);
alert("MY jQuery version: " + MYjQuery().jquery);
alert("MY jQuery UI version: " + MYjQuery.ui.version);
MYjQuery(document).ready(function($) {
	alert("Native jQuery version: " + jQuery().jquery);
	alert("Native jQuery UI version: " + jQuery.ui.version);
	alert("MY jQuery version: " + $().jquery);
	alert("MY jQuery UI version: " + $.ui.version);
});
jQuery(document).ready(function($) {
	alert("Native jQuery version: " + $().jquery);
	alert("Native jQuery UI version: " + $.ui.version);
	alert("MY jQuery version: " + MYjQuery().jquery);
	alert("MY jQuery UI version: " + MYjQuery.ui.version);
});
&lt;/pre&gt;&lt;p&gt;
Yields the expected version in all places called (both scripts loaded normally via wp_register_script, wp_enqueue_script and forcing a native jQuery UI load adding it to the dependencies array for my.js ).
&lt;/p&gt;
&lt;p&gt;
Now the question is what to do about Iris, as it is not a jQuery plugin, but is dependent on it. I have the hook set and checked for my plugin options page so on the admin side all this is only loaded on my options page anyway, and I do not need Iris for my front end but would be nice to have the option though...
&lt;/p&gt;
&lt;p&gt;
edit: actually Iris is a jQuery plugin, it's included Color.js is not however.
&lt;/p&gt;
&lt;p&gt;
Do I want to depend on the native version of Iris and risk my plugin breaking at some point in the future? Hmmm.  I would prefer to include and isolate Iris as well, so I can count on it always being there and behaving as expected. It appears to be globally scoped. What to do? (not really asking here, just mulling it over...)
&lt;/p&gt;
&lt;p&gt;
Ah, but wait! What if somebody else loads WP native (and/or non-native) jQuery and jQuery UI on the same page before and/or after I do... so many test cases dammit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22187 (Add docblocks to wp-signup.php) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Fri, 25 Jan 2013 04:44:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22187#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22187#comment:9/1359089061808497</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22187#comment:8" title="Comment 8"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Good catch Sergey. 22187-docblocks.2.diff should cover it. See anything else that stands out?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10883 (db-error.php not used for all DB failures) updated</title>
      
        <author>jose@…</author>

      <pubDate>Fri, 25 Jan 2013 04:39:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10883#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10883#comment:7/1359088795700256</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I am also wondering if this is going to be implemented any time soon. It is not true that the standard message appears only on the back-end. In my experience db-error.php is not called if there is a connection error on the front-end. For the time being, I just added the conditional below just before the bail function as suggested above.
&lt;/p&gt;
&lt;pre class="wiki"&gt;        if ( file_exists( WP_CONTENT_DIR . '/db-error.php' ) ) {
                require_once( WP_CONTENT_DIR . '/db-error.php' );
                die();
        }
&lt;/pre&gt;&lt;p&gt;
If you don't want to do it permanently, at least give us a filter so we can change it through a custom function.
&lt;/p&gt;
&lt;p&gt;
Thanks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>22187-docblocks.2.diff attached to Ticket #22187</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Fri, 25 Jan 2013 04:30:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22187/22187-docblocks.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22187/22187-docblocks.2.diff/1359088225724755</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23281 (Enhancement for comment_form(); allow styling the submit button) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 04:30:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23281#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23281#comment:3/1359088217258991</guid>
      <description>&lt;p&gt;
No, &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23281/comment_form.diff" title="Attachment 'comment_form.diff' in Ticket #23281"&gt;comment_form.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23281/comment_form.diff" title="Download"&gt;​&lt;/a&gt; isn't a correct patch.
&lt;/p&gt;
&lt;p&gt;
Please take a look at &lt;a class="ext-link" href="http://make.wordpress.org/core/handbook/submitting-a-patch/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://make.wordpress.org/core/handbook/submitting-a-patch/&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23270 (Links are not updated when changing a multisite path) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 04:28:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23270#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23270#comment:1/1359088094942799</guid>
      <description>&lt;p&gt;
Updating the links in content doesn't seem feasible, due to scalability reasons. We don't do that in single site when changing &lt;code&gt;home&lt;/code&gt; or &lt;code&gt;siteurl&lt;/code&gt;, so I don't think we should do it in Multisite. Rewording is probably the only option here.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
"Update siteurl and home as well.", where the "as well" makes it sound as if other elements on your site will be updated regardless.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
FWIW, it doesn't sound that way for me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23285 (Implement an AMD JavaScript loader in WordPress) updated</title>
      
        <dc:creator>auniquename</dc:creator>

      <pubDate>Fri, 25 Jan 2013 04:26:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23285#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23285#comment:8/1359088010118599</guid>
      <description>&lt;p&gt;
Perhaps so in my case, as I am more particular than most.
&lt;/p&gt;
&lt;p&gt;
That said, my comments on people not wanting to update in order to preserve the functionality of unmaintained plugins stand, and that is damaging overall to the reputation of WordPress, particularly with regard to security.
&lt;/p&gt;
&lt;p&gt;
People have custom plugins written for their site alone, and then may never hear from the developer again and are unable to maintain code themselves. Ya, their bed, lie in it, yada, yada...  But if we can prevent that, then why not?
&lt;/p&gt;
&lt;p&gt;
I also have this crazy half baked idea of snapshotting the current version of jQuery in WordPress when a plugin that references it is installed, then storing it in the db and feed the plugin that copy henceforth... until the plugin itself is updated. I haven't really thought that all the way through though. Probably lots of pitfalls.
&lt;/p&gt;
&lt;p&gt;
I just don't see any reason why not include some way to deal with js lib version dependencies. Not doing so causes more problems than doing so as I see it.
&lt;/p&gt;
&lt;p&gt;
Also, the release cycle is frequent enough to make all this a lot of work, too much? Even just thinking about how to write a plugin that supports multiple versions of WordPress and multiple versions of js libs is giving me braincramps. I cannot count on users updating their sites to the latest versions, so if I want my plugin to work on the most sites possible I need to write it to account for a whole quarterly history of jQuery revisions back a few years at least. Why put people through that? Overall man hours expended to implement an AMD style loader or some kind of mechanism to deal with multiple versions of js libs in WordPress would be considerably less. Set it and forget it I say. Computers and software are meant for automating such arduous and burdensome tasks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23281 (Enhancement for comment_form(); allow styling the submit button) updated</title>
      
        <dc:creator>Danielx64</dc:creator>

      <pubDate>Fri, 25 Jan 2013 04:25:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23281#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23281#comment:2/1359087913226998</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Not sure if I make the patch right
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23089 (Rewrite a confusing condition in default-widgets.php) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 04:09:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23089#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23089#comment:12/1359086954535455</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23089#comment:11" title="Comment 11"&gt;kovshenin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I rarely use the ternary operator, but when I do, I always put brackets around the condition
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, I prefer that form too. However, the form without the brackets appears to be prevailing throughout the core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23285 (Implement an AMD JavaScript loader in WordPress) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 04:00:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23285#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23285#comment:7/1359086430343743</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23285#comment:6" title="Comment 6"&gt;auniquename&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Alternatively, if plugin authors are encouraged to bundle and isolate jQuery themselves as discussed in that other ticket, then why make the jQuery used internally by WordPress available to plugin authors as it is now at all?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Quite the contrary, plugin authors are encouraged to use the jQuery version bundled with WordPress, and update the plugins accordingly. Your situation, as described in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22896#comment:29" title="Comment 29 for #22896: enhancement: Prevent plugins from overriding jQuery in the admin (closed: fixed)"&gt;ticket:22896:29&lt;/a&gt;, sounds like an edge case to me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22187 (Add docblocks to wp-signup.php) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 03:43:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22187#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22187#comment:8/1359085415290036</guid>
      <description>&lt;p&gt;
Some text needs updating:
&lt;/p&gt;
&lt;pre class="wiki"&gt;The default styles are printed via signup_header which is hooked to wp_head.
They can be overloaded by replacing the output on the signup_header action hook.
&lt;/pre&gt;&lt;p&gt;
This was the case in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/22187/22187.4.diff" title="Attachment '22187.4.diff' in Ticket #22187"&gt;22187.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/22187/22187.4.diff" title="Download"&gt;​&lt;/a&gt;, but not in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/22187/22187-docblocks.diff" title="Attachment '22187-docblocks.diff' in Ticket #22187"&gt;22187-docblocks.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/22187/22187-docblocks.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23272 (Notice on class-wp-walker.php) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 03:30:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23272#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23272#comment:2/1359084621263856</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/9830" title="Make arguments to start_el consistent and ensure that page walking is ..."&gt;[9830]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23285 (Implement an AMD JavaScript loader in WordPress) updated</title>
      
        <dc:creator>auniquename</dc:creator>

      <pubDate>Fri, 25 Jan 2013 03:19:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23285#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23285#comment:6/1359083959307634</guid>
      <description>&lt;p&gt;
@scribu - Roger. I've got that now. Though I will use the solution outlined later in that ticket. WordPress does not necessarily need to use AMD to implement multiple js lib versions dependencies, but why re-invent the wheel? Alternatively, if plugin authors are encouraged to bundle and isolate jQuery themselves as discussed in that other ticket, then why make the jQuery used internally by WordPress available to plugin authors as it is now at all? And why is the solution I have arrived at with the assistance here not documented? (I know, it is in the jQuery docs, but the WordPress codex leads one to register their scripts with dependencies on the jQuery included with WordPress)
&lt;/p&gt;
&lt;p&gt;
@wonderboymusic - Basically, it comes down to using multiple fully css scoped jQuery UI themes on a single page that will continue to work across at least a few releases of WordPress and jQuery. (If called for, depending on how the user sets the plugin options, and without breaking any other plugins or native WordPress functionality.) I am not so much concerned with what happens in admin as on the front end. I now have a way to make WordPress do it by isolating my jQuery and its plugins as discussed (but this is not the standard or documented way to use jQuery in WordPress). Currently the challenge that I face now that I can reliably isolate jQuery and its plugins in WordPress is the failings of jQuery UI itself. When you fully css scope a theme (every single css selector, not just the ones they scope in the themeroller - to preserve a theme behaviour across mutliple jQuery UI versions without collision with other jQuery UI themes from earlier or later versions) - you soon discover that many of the jQuery UI functions do not really take into account a css scoped theme at all (even a partially scoped one as the themeroller does).
&lt;/p&gt;
&lt;p&gt;
What happens is that things like overlays, and element clones used for animations and effects fall out of the css scope by being appended to elements (usually body) outside your defined css scope - and one cannot apply their jQuery UI scoping class to the body of a document without potentially affecting jQuery UI themes elements added before or after the ones you are working with.
&lt;/p&gt;
&lt;p&gt;
Hopefully that fills in some of the blanks for you. Right now my issue is with overlays (I have my own hack for that and it has been reported in the jQuery bug tracker), and with the explode effect falling out of theme scope, which has not been reported, and I seem to be unable to register on their bug tracker all names no matter how unique (even tried GUIDs) are reported as taken. Grrr. So I have registered on their forums to report some of this stuff.
&lt;/p&gt;
&lt;p&gt;
In jQuery UI 1.9.2 scoped overlays did not appear at all and had to be kicked into scope, now in 1.10.0 they appear in scope but out of z-order and over the element they are supposed to be behind. (I have hacks for both cases.) What is clear is that the jQuery UI developers are not testing under multiple scoped themes at all. That is half the point of jQuery UI - themed UIs!!! Arg!
&lt;/p&gt;
&lt;p&gt;
The reason I wanted to use jQuery UI 1.10.0 is that it corrects the dialog falling out of scope by allowing it to be appended to elements other than the body without a hack that adversely affects the body dimensions. i.e. this:
&lt;a class="ext-link" href="http://stackoverflow.com/questions/2199888/custom-css-scope-jquery-ui-dialog-themes"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://stackoverflow.com/questions/2199888/custom-css-scope-jquery-ui-dialog-themes&lt;/a&gt;
is no longer required.
&lt;/p&gt;
&lt;p&gt;
However there is still the overlay and explode issues (both existed prior to 1.10.0) and now icon button focus and sprite issues with the themes as implemented in 1.10.0 that did not exist in 1.9.2.
&lt;/p&gt;
&lt;p&gt;
So neither product is really ready for what I want to make them do, but it is so close... I can taste it. But the bulk of this reply is actually for the broken jQuery bug tracker...
&lt;/p&gt;
&lt;p&gt;
The issue relating directly to &lt;strong&gt;this ticket&lt;/strong&gt; is that I still see the need to use some way to handle multiple versions of jQuery in WordPress in a standard way. I suggested AMD as it seems to be the direction this type of thing is going, though it need not be done that way, there is more than one way to skin this cat. The alternative, and perhaps better solution (?) is not to encourage plugin authors to use the jQuery included in WordPress at all and lock it down for internal use only, and document or link the proper way to isolate your own copy of jQuery to use in your plugin as I have arrived at for my current solution. It is all about plugin stability and longevity.
&lt;/p&gt;
&lt;p&gt;
When a new plugin breaks an old one on a site, all the client knows is that their site is broken. Or when a WordPress update breaks a plugin that a site depends on... the user is inclined not to update, but what if that update contains a critical security update? I see a lot of job postings to fix old WordPress sites that have been compromised. The current situation does not really do much to prevent that from happening. I found a way to do it, and then a better ("the right way") to do with with the help here, but how many plugin authors will go to the trouble that I have to ensure that?
&lt;/p&gt;
&lt;p&gt;
And lo and behold... as I have been writing this:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Work around some misconfigurations that may have caused some JavaScript in the WordPress admin area to fail.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
...
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Server-side request forgery (SSRF) and remote port scanning via pingbacks. Fixed by the WordPress security team.
&lt;/li&gt;&lt;li&gt;Cross-site scripting (XSS) via shortcodes and post content. Discovered by Jon Cave of the WordPress security team.
&lt;/li&gt;&lt;li&gt;Cross-site scripting (XSS) in the external library Plupload. Plupload 1.5.5 was released to address this issue.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://codex.wordpress.org/Version_3.5.1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Version_3.5.1&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Though I see this after updating:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
External Libraries
WordPress now includes the Underscore and Backbone JavaScript libraries. TinyMCE, jQuery, jQuery UI, and SimplePie have all been updated to the latest versions.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not quite so. WordPress' jQuery and jQuery UI remain at 1.8.3 and 1.9.2 respectively, while the current versions are 1.9.0 and 1.10.0. WordPress' Backbone is at 0.9.2 not the current 0.9.10 ...
&lt;/p&gt;
&lt;p&gt;
This adds weight to my argument.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23280 (TinyMCE issue with table wrapped with shortcode) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 03:02:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23280#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23280#comment:2/1359082975346730</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22896 (Prevent plugins from overriding jQuery in the admin) updated</title>
      
        <dc:creator>auniquename</dc:creator>

      <pubDate>Fri, 25 Jan 2013 02:46:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22896#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22896#comment:38/1359081995007641</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22896#comment:37" title="Comment 37"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I may be mis-reading something but as Sergey pointed out above
&lt;/p&gt;
&lt;pre class="wiki"&gt;var mypluginjq = jQuery.noConflict();
&lt;/pre&gt;&lt;p&gt;
won't do it. You need
&lt;/p&gt;
&lt;pre class="wiki"&gt;var mypluginjq = jQuery.noConflict(true);
&lt;/pre&gt;&lt;p&gt;
so both &lt;code&gt;jQuery&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; are returned to the original values. See ​&lt;a class="ext-link" href="http://api.jquery.com/jQuery.noConflict/#example-4"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://api.jquery.com/jQuery.noConflict/#example-4&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;code&gt;*****&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
OK, I see now, thank you all for your patience and helpfulness. I know this is not really the place for such assistance and this is somewhat a tangent to the original topic of this ticket (though not entirely).
&lt;/p&gt;
&lt;p&gt;
So what I want to do in my myplugin-libs.js file is:
&lt;/p&gt;
&lt;pre class="wiki"&gt;
/* included minified jQuery */
var mypluginjq = jQuery.noConflict(true);
(function($){
/* included minified jQuery UI */
/* included minified Iris */
}(mypluginjq));
&lt;/pre&gt;&lt;p&gt;
...and in my myplugin.js
&lt;/p&gt;
&lt;pre class="wiki"&gt;
mypluginjq(document).ready(function($) {
    /* Finally, my plugin jQuery stuff */
});
&lt;/pre&gt;&lt;p&gt;
No ugly hacks needed! Sweet. This makes the demonstration I was working on redundant, though it would still illustrate where the standard approach will go wrong...
&lt;/p&gt;
&lt;p&gt;
So the question remains, what about plugin authors who have not thought it through like this and simply use the WordPress bundled jQuery as recommended in the codex? Their plugins will break in a relatively short time. I still think an AMD style solution of some kind is required in the long run. In any case, I'd say some additions to &lt;a class="ext-link" href="http://codex.wordpress.org/Function_Reference/wp_enqueue_script"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Function_Reference/wp_enqueue_script&lt;/a&gt; are in order. If not there, then some more appropriate and prominent location.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23276 (WordPress Importer: Update existing navs instead of new) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 02:41:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23276#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23276#comment:3/1359081683747168</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21210 (Coding formating in register_taxonomy defaults array) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 02:40:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21210#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21210#comment:1/1359081611491094</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23275 (WordPress Importer: line-ending mismatch corrupts serialized meta) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 02:36:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23275#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23275#comment:5/1359081374934684</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18282 (Issue with admin page hierarchy in Menu admin) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 02:34:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18282#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18282#comment:10/1359081288438776</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #18282,​23286 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 02:34:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=18282%2C23286</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=18282%2C23286/1359081260061525</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/18282" title="#18282: defect (bug): Issue with admin page hierarchy in Menu admin (reviewing)"&gt;#18282&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #16847 (Capability check fails for custom post type revision edit (&amp; ...) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 25 Jan 2013 02:27:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16847#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16847#comment:8/1359080834429342</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16847#comment:7" title="Comment 7"&gt;westi&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Moving to the Revisions Component for 3.6
&lt;/p&gt;
&lt;p&gt;
Next steps:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Concrete reproductive steps on the ticket for the bug.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
i am also unclear how to reproduce the bug.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23289 (wp_protect_special_option rejects things it shouldn't) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 02:26:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23289#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23289#comment:1/1359080819857561</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2268" title="#2268: defect (bug): get_option() on non-existent option always invokes new query (closed: fixed)"&gt;#2268&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Confirmed that &lt;code&gt;in_array( 0, array( 'alloptions', 'notoptions' ) )&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>patch attached to Ticket #23289</title>
      
        <dc:creator>agarden</dc:creator>

      <pubDate>Fri, 25 Jan 2013 02:14:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23289/patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23289/patch/1359080094357261</guid>
      <description>&lt;p&gt;
Patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23289 (wp_protect_special_option rejects things it shouldn't) created</title>
      
        <dc:creator>agarden</dc:creator>

      <pubDate>Fri, 25 Jan 2013 02:14:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23289</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23289/1359080054832683</guid>
      <description>&lt;p&gt;
If &lt;code&gt;wp_protect_special_option&lt;/code&gt; is called with $option == 0 it will die. I have a client for whom this took down their entire WordPress install. Now, I assume that some plugin or some such should not have been passing zero as an option name, so that's another bug. But a buggy plugin should not be able to take down an entire install so carelessly.
&lt;/p&gt;
&lt;p&gt;
Fix is trivial. Have &lt;code&gt;in_array&lt;/code&gt; use strict checking. Patch is attached.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23091 (Need to remove deprecated get_bloginfo('url') from ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 02:09:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23091#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23091#comment:4/1359079767217283</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23091/23091.2.diff" title="Attachment '23091.2.diff' in Ticket #23091"&gt;23091.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23091/23091.2.diff" title="Download"&gt;​&lt;/a&gt; also renames &lt;code&gt;$site_url&lt;/code&gt; to &lt;code&gt;$home_url&lt;/code&gt;, to prevent confusion.
&lt;/p&gt;
&lt;p&gt;
However, &lt;code&gt;get_bloginfo( 'url' )&lt;/code&gt; is not deprecated, only &lt;code&gt;home&lt;/code&gt; and &lt;code&gt;siteurl&lt;/code&gt; parameters are:
&lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/tags/3.5.1/wp-includes/general-template.php#L407"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/browser/tags/3.5.1/wp-includes/general-template.php#L407&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;url&lt;/code&gt; is still a valid parameter. We use &lt;code&gt;get_bloginfo( 'url' )&lt;/code&gt; in some other places as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21663 (Use mysqli for MySQL queries when available) updated</title>
      
        <dc:creator>ryanduff</dc:creator>

      <pubDate>Fri, 25 Jan 2013 02:07:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21663#comment:69</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21663#comment:69/1359079658821380</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>23091.2.diff attached to Ticket #23091</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 02:06:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23091/23091.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23091/23091.2.diff/1359079598106368</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22896 (Prevent plugins from overriding jQuery in the admin) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 25 Jan 2013 01:56:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22896#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22896#comment:37/1359078985159855</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22896#comment:33" title="Comment 33"&gt;auniquename&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I of course tried &lt;strong&gt;exactly that&lt;/strong&gt; first (see long boring story above)...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I may be mis-reading something but as Sergey pointed out above
&lt;/p&gt;
&lt;pre class="wiki"&gt;var mypluginjq = jQuery.noConflict();
&lt;/pre&gt;&lt;p&gt;
won't do it. You need
&lt;/p&gt;
&lt;pre class="wiki"&gt;var mypluginjq = jQuery.noConflict(true);
&lt;/pre&gt;&lt;p&gt;
so both &lt;code&gt;jQuery&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; are returned to the original values. See ​&lt;a class="ext-link" href="http://api.jquery.com/jQuery.noConflict/#example-4"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://api.jquery.com/jQuery.noConflict/#example-4&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23259 (Allow filtering the $function parameter of add_filter(), has_filter() ...) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Fri, 25 Jan 2013 01:46:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23259#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23259#comment:15/1359078417868127</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23259#comment:14" title="Comment 14"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Version field indicates when the feature was initially suggested.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It must have been mistaken changed as I didn't do it explicitly, sorry about that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23259 (Allow filtering the $function parameter of add_filter(), has_filter() ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 01:45:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23259#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23259#comment:14/1359078357854290</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Version field indicates when the feature was initially suggested.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23259 (Allow filtering the $function parameter of add_filter(), has_filter() ...) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Fri, 25 Jan 2013 01:34:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23259#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23259#comment:13/1359077691361380</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23259#comment:12" title="Comment 12"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
But I would see it as too course-grained to address the hook removal use-case.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, but you start from the premise that what sitebuilders want to do is "remove hooks". My contention is that that's not what they want to do; they want to stop those annoying share buttons from appearing under each post. Or they want to not have plugin X enqueue a bunch of JS files on every single page.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Your contention aside, I had one data point (my commenter) to your assumption.  One data point is not a statistically valid sample but neither is your assumption.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Back to the topic at hand: There is no quick fix for needlessly complex plugin or theme code; a patch to WP core won't fix it. Neither will a single Codex page.
&lt;/p&gt;
&lt;p&gt;
What we can do is:
&lt;/p&gt;
&lt;p&gt;
a) Encourage devs to make the class instance available, like you did in your blog post.
&lt;/p&gt;
&lt;p&gt;
b) Write more blog posts on how to organize complex plugins, on when classes are necessary and when they aren't etc.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Fine.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22896 (Prevent plugins from overriding jQuery in the admin) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 25 Jan 2013 01:30:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22896#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22896#comment:36/1359077446293769</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22896#comment:33" title="Comment 33"&gt;auniquename&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22896#comment:30" title="Comment 30"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;pre class="wiki"&gt;var myjq = jQuery.noConflict(true);
&lt;/pre&gt;&lt;p&gt;
Ref: &lt;a class="ext-link" href="http://api.jquery.com/jQuery.noConflict/#example-4"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://api.jquery.com/jQuery.noConflict/#example-4&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I of course tried &lt;strong&gt;exactly that&lt;/strong&gt; first (see long boring story above). Like so:
&lt;/p&gt;
&lt;pre class="wiki"&gt;var mypluginjq = jQuery.noConflict();
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
Note that your code doesn't set the &lt;code&gt;removeAll&lt;/code&gt; parameter, which tells jQuery to remove all the variables from the global scope (including jQuery itself). The link above is an example of loading two different jQuery versions at the same time.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22896 (Prevent plugins from overriding jQuery in the admin) updated</title>
      
        <dc:creator>auniquename</dc:creator>

      <pubDate>Fri, 25 Jan 2013 01:13:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22896#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22896#comment:35/1359076433024808</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22896#comment:34" title="Comment 34"&gt;wonderboymusic&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm gonna need to see more of your plugin code before I am convinced that we're all stupid. I am currently on a production site running different jQuery in admin / front end, running jQuery UI, running tons of Backbone, Underscore, etc and have had zero problems. Can you put some code in a Gist or attach some code to the ticket that shows what is breaking?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;code&gt;*****&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Not accusing anyone of being stupid. That would be mean. If anyone, it is me. But I do not think so. I cannot share my plugin code currently as I am writing it for a private client.
&lt;/p&gt;
&lt;p&gt;
I will create a test package to illustrate.
&lt;/p&gt;
&lt;p&gt;
The idea is to try and run multiple versions of jQuery &lt;strong&gt;on the same page&lt;/strong&gt; when you are not in control of the order in which they are loaded, which without some guiding standard or controlling framework is not currently possible. (the current wp situation)
&lt;/p&gt;
&lt;p&gt;
Please standby for test demonstration. I might prove myself wrong. But I think I already know the answer, it will depend on when and where jQuery functions are called.
&lt;/p&gt;
&lt;p&gt;
Oh right... the key here is that all plugins must use a named alias for the version of jQuery loaded, which is not the case. I will demonstrate. Standby, it will take a bit...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22896 (Prevent plugins from overriding jQuery in the admin) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Fri, 25 Jan 2013 00:56:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22896#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22896#comment:34/1359075385966729</guid>
      <description>&lt;p&gt;
I'm gonna need to see more of your plugin code before I am convinced that we're all stupid. I am currently on a production site running different jQuery in admin / front end, running jQuery UI, running tons of Backbone, Underscore, etc and have had zero problems. Can you put some code in a Gist or attach some code to the ticket that shows what is breaking?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23262.4.patch attached to Ticket #23262</title>
      
        <dc:creator>aaronholbrook</dc:creator>

      <pubDate>Fri, 25 Jan 2013 00:53:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23262/23262.4.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23262/23262.4.patch/1359075229466703</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23262 (Update Backbone.js to 0.9.10) updated</title>
      
        <dc:creator>aaronholbrook</dc:creator>

      <pubDate>Fri, 25 Jan 2013 00:53:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23262#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23262#comment:3/1359075221199056</guid>
      <description>&lt;p&gt;
Fixed array styling (spaces between parens) at suggestion of Mr. Solomon.
&lt;/p&gt;
&lt;p&gt;
Thanks Evan :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23282 (Add shortcodes for inline HTML5 audio / video) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Fri, 25 Jan 2013 00:52:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23282#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23282#comment:7/1359075164099625</guid>
      <description>&lt;p&gt;
I uploaded a screenshot with the WordPress school colors
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>media.png attached to Ticket #23282</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Fri, 25 Jan 2013 00:52:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23282/media.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23282/media.png/1359075127060883</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22896 (Prevent plugins from overriding jQuery in the admin) updated</title>
      
        <dc:creator>auniquename</dc:creator>

      <pubDate>Fri, 25 Jan 2013 00:49:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22896#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22896#comment:33/1359074996275134</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22896#comment:30" title="Comment 30"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
With jQuery there is a better way to do this: let the WordPress jQuery load first, then load your desired version in the footer or right before it's needed, load jQuery UI or any other plugins you want to use with the different version and do:
&lt;/p&gt;
&lt;pre class="wiki"&gt;var myjq = jQuery.noConflict(true);
&lt;/pre&gt;&lt;p&gt;
Ref: &lt;a class="ext-link" href="http://api.jquery.com/jQuery.noConflict/#example-4"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://api.jquery.com/jQuery.noConflict/#example-4&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Then in your scripts you can use the version you want:
&lt;/p&gt;
&lt;pre class="wiki"&gt;(function($){
// your code here uses the alternative jQuery version
}(myjq));
(function($){
// this uses the standard jQuery version
}(jQuery));
&lt;/pre&gt;&lt;p&gt;
This is &lt;strong&gt;the proper way&lt;/strong&gt; to load several versions of jQuery and have them all work and (of course) doesn't affect or break anything in WordPress.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;code&gt;*****&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
I of course tried &lt;strong&gt;exactly that&lt;/strong&gt; first (see long boring story above). Like so:
&lt;/p&gt;
&lt;pre class="wiki"&gt;
/* included minified jQuery */
var mypluginjq = jQuery.noConflict();
/* included minified jQuery UI */
/* included minified Iris */
mypluginjq(document).ready(function($) {
    /* My Plugin jQuery stuff */
});
&lt;/pre&gt;&lt;p&gt;
As instructed here:
&lt;a class="ext-link" href="http://docs.jquery.com/Using_jQuery_with_Other_Libraries"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://docs.jquery.com/Using_jQuery_with_Other_Libraries&lt;/a&gt;
and here:
&lt;a class="ext-link" href="http://docs.jquery.com/Core/jQuery.noConflict"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://docs.jquery.com/Core/jQuery.noConflict&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;It did not work.&lt;/em&gt; When I called a jQuery version check outside and within the scoped functions it reported the same version everywhere - the last one loaded. And when called from other plugins, all reported the same version of jQuery, the last one loaded.
&lt;/p&gt;
&lt;p&gt;
The difference being perhaps that I am mostly trying to use fully scoped jQuery UI themes and I see detail here that most do not or perhaps never will.
&lt;/p&gt;
&lt;p&gt;
My guess is that no one has ever tested enough functionality to see a difference. Or actually made version calls.
&lt;/p&gt;
&lt;p&gt;
Maybe I screwed something up, but I don't think so. I'll try a very simple test page to see...
&lt;/p&gt;
&lt;p&gt;
As far a I know and from what the documentation says, the noConflict call is simply to prevent collisions over the use of $ by other libraries, not to handle multiple versions of itself... note also the long note about AMD at the end of the jQuery source. I shall proceed with my simple test however, to either prove myself right or wrong, but I think I already know the answer: if you are not in full control of the order of the loading of scripts (as with a wordpress install from the plugin author's perspective - you are screwed).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23285 (Implement an AMD JavaScript loader in WordPress) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 25 Jan 2013 00:37:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23285#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23285#comment:5/1359074254541789</guid>
      <description>&lt;p&gt;
Since jQuery hardcodes the module name as 'jquery', I don't see how AMD would help with having two versions loaded separately.
&lt;/p&gt;
&lt;p&gt;
From the ticket you mention:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
With jQuery there is a better way to do this: let the WordPress jQuery load first, then load your desired version in the footer or right before it's needed [...]
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/22896#comment:30"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/ticket/22896#comment:30&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23262.3.patch attached to Ticket #23262</title>
      
        <dc:creator>aaronholbrook</dc:creator>

      <pubDate>Fri, 25 Jan 2013 00:36:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23262/23262.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23262/23262.3.patch/1359074215408719</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23262 (Update Backbone.js to 0.9.10) updated</title>
      
        <dc:creator>aaronholbrook</dc:creator>

      <pubDate>Fri, 25 Jan 2013 00:36:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23262#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23262#comment:2/1359074204094296</guid>
      <description>&lt;p&gt;
Please ignore the backbone-min.js file, after talking with @evan, realized keeping the WP name was the smart thing to do.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23285 (Implement an AMD JavaScript loader in WordPress) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Fri, 25 Jan 2013 00:33:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23285#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23285#comment:4/1359073990881251</guid>
      <description>&lt;p&gt;
"Basically, neither WordPress or jQuery is ready for a plugin as complicated as I want to produce"
&lt;/p&gt;
&lt;p&gt;
What does that even mean? Please describe so someone can help you get there - I doubt it's impossible
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23262 (Update Backbone.js to 0.9.10) updated</title>
      
        <dc:creator>aaronholbrook</dc:creator>

      <pubDate>Fri, 25 Jan 2013 00:29:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23262#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23262#comment:1/1359073790062732</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Apologies for the double upload, first time manually uploading a diff.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23285 (Implement an AMD JavaScript loader in WordPress) updated</title>
      
        <dc:creator>auniquename</dc:creator>

      <pubDate>Fri, 25 Jan 2013 00:28:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23285#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23285#comment:3/1359073737763141</guid>
      <description>&lt;p&gt;
See ticket linked above (and again below):
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/22896"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/ticket/22896&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Plugin collisions with other plugins and the core functionality of WordPress (usually, but not always, in admin).
&lt;/p&gt;
&lt;p&gt;
I have had to resort to an ugly and inefficient hack to ensure that the jQuery I want to use in my plugin does not conflict with the one used in WordPress or with the jQuery used by other plugins. And to attempt to have a plugin with a working lifespan longer than the WordPress and jQuery release cycles.
&lt;/p&gt;
&lt;p&gt;
However I have hit other significant issues with jQuery itself and I am attempting to report issues there, but their bug tracker registration is broken and I have to resort to their forums.
&lt;/p&gt;
&lt;p&gt;
Basically, neither WordPress or jQuery is ready for a plugin as complicated as I want to produce. I hope by submitting this feedback that someday they will be.
&lt;/p&gt;
&lt;p&gt;
Ultimately the goal is to use multiple jQuery UI themes in a plugin in such a way that it does not break anything else and will work for an extended period of time with little to no maintenance (see long comment in ticket linked above).
&lt;/p&gt;
&lt;p&gt;
As I see it, this needs to happen. Though perhaps I expect too much?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>backbone-min.js attached to Ticket #23262</title>
      
        <dc:creator>aaronholbrook</dc:creator>

      <pubDate>Fri, 25 Jan 2013 00:28:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23262/backbone-min.js</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23262/backbone-min.js/1359073681056878</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>23262.2.patch attached to Ticket #23262</title>
      
        <dc:creator>aaronholbrook</dc:creator>

      <pubDate>Fri, 25 Jan 2013 00:27:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23262/23262.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23262/23262.2.patch/1359073626717137</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>23262.patch attached to Ticket #23262</title>
      
        <dc:creator>aaronholbrook</dc:creator>

      <pubDate>Fri, 25 Jan 2013 00:26:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23262/23262.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23262/23262.patch/1359073619172353</guid>
      <description>&lt;p&gt;
23262.patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #17737 (Be better at forcing data types for query vars) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Jan 2013 00:26:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17737#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17737#comment:7/1359073562905536</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think 's' also throws a warning.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23285 (Implement an AMD JavaScript loader in WordPress) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 24 Jan 2013 23:33:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23285#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23285#comment:2/1359070420918012</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
If WordPress provides the framework for the use of multiple versions of JavaScript libraries then a lot of the problems we see with WordPress now will be a thing of the past.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Problems such as?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23091 (Need to remove deprecated get_bloginfo('url') from ...) updated</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Thu, 24 Jan 2013 23:00:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23091#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23091#comment:3/1359068431451843</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23091 (Need to remove deprecated get_bloginfo('url') from ...) updated</title>
      
        <dc:creator>MikeHansenMe</dc:creator>

      <pubDate>Thu, 24 Jan 2013 22:57:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23091#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23091#comment:2/1359068233383735</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>23091.diff attached to Ticket #23091</title>
      
        <dc:creator>MikeHansenMe</dc:creator>

      <pubDate>Thu, 24 Jan 2013 22:51:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23091/23091.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23091/23091.diff/1359067890635213</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23259 (Allow filtering the $function parameter of add_filter(), has_filter() ...) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 24 Jan 2013 22:30:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23259#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23259#comment:12/1359066632003872</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
But I would see it as too course-grained to address the hook removal use-case.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, but you start from the premise that what sitebuilders want to do is "remove hooks". My contention is that that's not what they want to do; they want to stop those annoying share buttons from appearing under each post. Or they want to not have plugin X enqueue a bunch of JS files on every single page.
&lt;/p&gt;
&lt;p&gt;
Back to the topic at hand: There is no quick fix for needlessly complex plugin or theme code; a patch to WP core won't fix it. Neither will a single Codex page.
&lt;/p&gt;
&lt;p&gt;
What we can do is:
&lt;/p&gt;
&lt;p&gt;
a) Encourage devs to make the class instance available, like you did in your blog post.
&lt;/p&gt;
&lt;p&gt;
b) Write more blog posts on how to organize complex plugins, on when classes are necessary and when they aren't etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22648 (No error reporting for failed upload of background image in theme ...) updated</title>
      
        <dc:creator>unsalkorkmaz</dc:creator>

      <pubDate>Thu, 24 Jan 2013 22:27:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22648#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22648#comment:7/1359066469988820</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22839 (Toggle spinners by adding/removing a class instead of show()/hide()) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 24 Jan 2013 22:13:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22839#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22839#comment:25/1359065617026514</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22839 (Toggle spinners by adding/removing a class instead of show()/hide()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 24 Jan 2013 21:58:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22839#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22839#comment:24/1359064698780402</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21334 (Row actions are not always keyboard accessible) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 24 Jan 2013 21:53:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21334#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21334#comment:6/1359064419913617</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22254 ("Do you really want to log out" message after already logged out) updated</title>
      
        <dc:creator>MikeHansenMe</dc:creator>

      <pubDate>Thu, 24 Jan 2013 21:48:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22254#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22254#comment:7/1359064130850828</guid>
      <description>&lt;p&gt;
Thanks for testing the patch guys
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23259 (Allow filtering the $function parameter of add_filter(), has_filter() ...) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Thu, 24 Jan 2013 21:46:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23259#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23259#comment:11/1359063972691415</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23259#comment:10" title="Comment 10"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Because there is no standard way that site builders to remove hooks so there are forced to dive into the plugin code to figure it out, and many of them don't have the necessary skills with PHP to achieve that.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If they don't have the necessary skills with PHP, why do you assume they have enough skills to know which hook controls which aspect of the plugin?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There are two different archetypes here, not one. The 1st is the plugin author with the skills and 2nd is the sitebuilder without.  I was asking for a standard way for the plugin author to empower the lesser skilled site builder.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What about complex features that require multiple hooks? example: WP_Query mangling
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not visualizing the use-case you are referring to. I'd need a use-case example to understand.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Anyway, I think I get what you're looking for:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_plugin_support( 'feature-x' );
remove_plugin_support( 'feature-x' );
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
That would be interesting and could be very useful.  But I would see it as too course-grained to address the hook removal use-case.
&lt;/p&gt;
&lt;p&gt;
FYI, the reason I posted this ticket was because of &lt;a class="ext-link" href="http://hardcorewp.com/2012/enabling-action-and-filter-hook-removal-from-class-based-wordpress-plugins/#comment-475"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;this comment thread&lt;/a&gt; where the commenter said &lt;em&gt;&lt;strong&gt;(emphasis mine)&lt;/strong&gt;:&lt;/em&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;em&gt;It’s such a pita to remove actions &amp;amp; filters hooks called from classes.  &lt;strong&gt;Makes me hate the overzealous use of classes&lt;/strong&gt; especially in cases when there are &lt;strong&gt;no major benefits to use a class&lt;/strong&gt; to start with. ... Well your solution is a hell of a lot &lt;strong&gt;better than hunting through the wp_filters&lt;/strong&gt; global cowboy style. &lt;strong&gt;If this were the standard&lt;/strong&gt; for all plugin developers that would be a step forward.  The problem also lies in the discoverability. &lt;strong&gt;If it’s documented&lt;/strong&gt;, at least a user could potentially find it. The truth is most plugins aren’t going to have a ton of documentation and would a non-savvy user know what to look for? It would require more explanation. ... If it’s about pushing core changes, I would &lt;strong&gt;rather see them make remove_action &amp;amp; remove_filter smarter&lt;/strong&gt; so that you don’t have to reference the class instance in the first place. That would retroactively &lt;strong&gt;make all relevant plugins easier to customize&lt;/strong&gt; without requiring plugin authors to implement workarounds (even pretty elegant ones like yours). Are there any critical objections to that that you could think of? As a self taught dev who’s learning was based mostly around WP projects, I am happy that most code I encountered wasn’t object oriented in the early days. &lt;strong&gt;I’ve found OO much hard to grasp&lt;/strong&gt; initially. Now that I’ve got some years under my belt, I’m comfortable with it (just wrote a class yesterday because it made the most sense) but &lt;strong&gt;I still wish to see less of it in plugins&lt;/strong&gt; because I find it gets in the way a lot of the time. I imagine lots of new users might feel similar. I do think the offical WP docs contribute to that as well (not a ton of examples with classes etc).&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So I'm sensitive to people who want to be empowered by WordPress but who are sometimes overwhelmed by it. And that is who I'm ultimately trying to help here. But I don't really need this for my own work and I didn't expect it to be such an issue so if it is I can fight other battles instead.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22663 (Performing a non-square rotate() with Imagick, then cropping, can ...) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Thu, 24 Jan 2013 21:45:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22663#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22663#comment:5/1359063936150786</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch 22663.in_rotate.diff​ is the fix for this ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22254 ("Do you really want to log out" message after already logged out) updated</title>
      
        <dc:creator>bradparbs</dc:creator>

      <pubDate>Thu, 24 Jan 2013 21:40:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22254#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22254#comment:6/1359063652230404</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Works for me as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22254 ("Do you really want to log out" message after already logged out) updated</title>
      
        <dc:creator>aaronholbrook</dc:creator>

      <pubDate>Thu, 24 Jan 2013 21:28:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22254#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22254#comment:5/1359062927493423</guid>
      <description>&lt;p&gt;
Tested, worked great.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23259 (Allow filtering the $function parameter of add_filter(), has_filter() ...) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 24 Jan 2013 21:23:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23259#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23259#comment:10/1359062639717450</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Because there is no standard way that site builders to remove hooks so there are forced to dive into the plugin code to figure it out, and many of them don't have the necessary skills with PHP to achieve that.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If they don't have the necessary skills with PHP, why do you assume they have enough skills to know which hook controls which aspect of the plugin? What about complex features that require multiple hooks? example: WP_Query mangling
&lt;/p&gt;
&lt;p&gt;
Anyway, I think I get what you're looking for:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_plugin_support( 'feature-x' );
remove_plugin_support( 'feature-x' );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23259 (Allow filtering the $function parameter of add_filter(), has_filter() ...) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Thu, 24 Jan 2013 21:11:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23259#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23259#comment:9/1359061916458151</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23259#comment:8" title="Comment 8"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How can we give site builders a documented approach to be able to remove hooks no matter that you build plugins one way and I build them another?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We can't, unless we force plugin authors to build plugins a certain way. Flexibility or uniformity: choose one.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Where did I say "force?"  I said &lt;em&gt;"give plugin developers a method to support the documented approach."&lt;/em&gt;  There are equivalent scenarios all over Codex where guidance on how best to implement something is given. This should be no different.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Milestone 3.5.1 completed</title>
      

      <pubDate>Thu, 24 Jan 2013 21:05:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/milestone/3.5.1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/milestone/3.5.1/1359061500000000</guid>
      <description></description>
      <category>milestone</category>
    </item><item>
      <title>Ticket #23259 (Allow filtering the $function parameter of add_filter(), has_filter() ...) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 24 Jan 2013 21:01:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23259#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23259#comment:8/1359061287365956</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
How can we give site builders a documented approach to be able to remove hooks no matter that you build plugins one way and I build them another?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We can't, unless we force plugin authors to build plugins a certain way. Flexibility or uniformity: choose one.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23259 (Allow filtering the $function parameter of add_filter(), has_filter() ...) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Thu, 24 Jan 2013 20:54:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23259#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23259#comment:7/1359060893574643</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23259#comment:4" title="Comment 4"&gt;rmccue&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol start="2"&gt;&lt;li&gt;Class methods: &lt;code&gt;add_action('init', ['MyClass', 'method'])&lt;/code&gt; or &lt;code&gt;add_action('init', 'MyClass::method')&lt;/code&gt;. Again, dead easy to unhook: &lt;code&gt;remove_action('init', array('MyClass', 'method')&lt;/code&gt; and &lt;code&gt;remove_action('init', 'MyClass::method')&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Object methods: &lt;code&gt;add_action('init', [$this, 'method'])&lt;/code&gt;. This is where it gets harder and more complicated. I'll break it down into the techniques commonly used with this:
&lt;ol&gt;&lt;li&gt;&lt;code&gt;$myplugin = new MyPlugin()&lt;/code&gt;: This is pretty easy to unhook, since we're almost always in the global scope when loading plugins (by design). &lt;code&gt;global $myplugin; remove_action('init', [$myplugin, 'method'])&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;MyPlugin::instance()&lt;/code&gt;: Again, easy since these are global state (although they're not in the global scope. &lt;code&gt;remove_action('init', [MyPlugin::instance(), 'method'])&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;new MyPlugin()&lt;/code&gt;: This is the main issue, since although the object is instantiated, it's never actually assigned to anything. This is one case where it would be handy to be able to filter the callback, but that's simply a band-aid fix over the real problem, which is that this is sloppy coding that doesn't consider other plugins.
&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
Let's ignore everything else. This is the problem use-case. Why? Because there is no standard way that site builders to remove hooks so there are forced to dive into the plugin code to figure it out, and many of them don't have the necessary skills with PHP to achieve that.
&lt;/p&gt;
&lt;p&gt;
The purpose of these ticket was to get WordPress to give site builders a documented approach to be able to remove hooks no matter how the plugin developer chose to implement the hooks, and to give plugin developers a method to support the documented approach.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
To me, this feels like it's getting &lt;strong&gt;more&lt;/strong&gt; complicated, not less.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm fine with that.  What I'll then ask is how can we alternately address this issue?  How can we give site builders a documented approach to be able to remove hooks no matter that you build plugins one way and I build them another?  If we can identify that then we can create another ticket to request it.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23259#comment:5" title="Comment 5"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
So, there are actually 2 aspects raised in this ticket:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sorry, you got it wrong. You identified the two unimportant aspects of &lt;em&gt;this&lt;/em&gt; ticket and missed the important one. For the latter see what I wrote to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23259#comment:4" title="Comment 4"&gt;rmccue&lt;/a&gt; above.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In summary:
Yo dawg, I heard you liked filters, so we put an &lt;code&gt;apply_filters()&lt;/code&gt; in your &lt;code&gt;add_filter()&lt;/code&gt; so you can filter while you filter!
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Is being disrespectful a pathology with you, or is there some other reason you can't stop yourself from always chosing to be rude and insulting?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [23345]: Tag 3.5.1</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 24 Jan 2013 20:52:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/23345</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/23345/1359060776622252</guid>
      <description>&lt;p&gt;
Tag 3.5.1
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [23344]: 3.5.1  </title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 24 Jan 2013 20:50:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/23344</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/23344/1359060628276211</guid>
      <description>&lt;p&gt;
3.5.1
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [23343]: 3.5.1  </title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 24 Jan 2013 20:14:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/23343</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/23343/1359058489422153</guid>
      <description>&lt;p&gt;
3.5.1
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #23284 (Wrong parameter order for stripos in wp-includes/functions.php) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 24 Jan 2013 20:11:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23284#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23284#comment:5/1359058316556013</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22896 (Prevent plugins from overriding jQuery in the admin) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 24 Jan 2013 20:08:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22896#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22896#comment:32/1359058092561879</guid>
      <description>&lt;p&gt;
in any case, all this patch does is prevent wp_deregister_script('jquery') in the admin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #22648,​23288 batch updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 24 Jan 2013 20:08:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=22648%2C23288</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=22648%2C23288/1359058088145223</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22648" title="#22648: defect (bug): No error reporting for failed upload of background image in theme ... (closed: fixed)"&gt;#22648&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #22896 (Prevent plugins from overriding jQuery in the admin) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 24 Jan 2013 20:05:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22896#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22896#comment:31/1359057910164103</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22896#comment:30" title="Comment 30"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
With jQuery there is a better way to do this: let the WordPress jQuery load first, then load your desired version in the footer or right before it's needed, load jQuery UI or any other plugins you want to use with the different version and do:
&lt;/p&gt;
&lt;pre class="wiki"&gt;var myjq = jQuery.noConflict(true);
&lt;/pre&gt;&lt;p&gt;
Ref: &lt;a class="ext-link" href="http://api.jquery.com/jQuery.noConflict/#example-4"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://api.jquery.com/jQuery.noConflict/#example-4&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Then in your scripts you can use the version you want:
&lt;/p&gt;
&lt;pre class="wiki"&gt;(function($){
// your code here uses the alternative jQuery version
}(myjq));
(function($){
// this uses the standard jQuery version
}(jQuery));
&lt;/pre&gt;&lt;p&gt;
This is &lt;strong&gt;the proper way&lt;/strong&gt; to load several versions of jQuery and have them all work and (of course) doesn't affect or break anything in WordPress.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
brilliant! thanks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18091 (Collapsed menu cannot be restored) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 24 Jan 2013 19:57:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18091#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18091#comment:12/1359057434896086</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23288 (Theme customizer is not giving any error or notice if site reached ...) created</title>
      
        <dc:creator>unsalkorkmaz</dc:creator>

      <pubDate>Thu, 24 Jan 2013 19:53:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23288</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23288/1359057221710894</guid>
      <description>&lt;p&gt;
Theme customizer is not giving any error or notice if site reached upload limit in multisite. Its not uplaoding image but not giving error or notice too. So basically it reacts like its not working
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21676 (Pass a variable to get_template_part()) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Thu, 24 Jan 2013 19:27:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21676#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21676#comment:20/1359055662676470</guid>
      <description>&lt;p&gt;
Also, in my refreshed patch, $args[ 'data' ] is now extracted above $wp_query-&amp;gt;query_vars so you can easily override any of those.
&lt;/p&gt;
&lt;p&gt;
For overriding globals as set in load_template, the best way there is to interact with the globals themselves like $GLOBALS[ 'posts' ] etc
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>21676.4.patch attached to Ticket #21676</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Thu, 24 Jan 2013 19:26:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21676/21676.4.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21676/21676.4.patch/1359055593250072</guid>
      <description>&lt;p&gt;
Require $args[ 'data' ] to be an array before extracting
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21676 (Pass a variable to get_template_part()) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Thu, 24 Jan 2013 19:26:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21676#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21676#comment:19/1359055562152151</guid>
      <description>&lt;p&gt;
Just attached a new patch which proposes a slightly different and more future-proof approach. It uses an $args array, to provide the ability to add additional features later on down the road, instead of merely adding another $var to the parameters list.
&lt;/p&gt;
&lt;p&gt;
As part of the new $args array, if you set $args[ 'data' ] to an array of 'key' =&amp;gt; 'value', then it will extract() that (like the previous patches).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23287 (Press This enhancement - enclose included content in a  div to allow ...) created</title>
      
        <dc:creator>daldred</dc:creator>

      <pubDate>Thu, 24 Jan 2013 19:24:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23287</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23287/1359055454949522</guid>
      <description>&lt;p&gt;
The Press This functionality is effective and simple, but the content it drops into a blog post has no enclosing &amp;lt;div&amp;gt;, and as a result cannot be styled using the theme's CSS file to differentiate it from the blogger's comments.
&lt;/p&gt;
&lt;p&gt;
I've posted on my own blog &lt;a class="ext-link" href="http://aldred.org/blog/blog/2013/01/24/improving-press-this-in-wordpress/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;this post&lt;/a&gt; describing how I've made a fairly simple change to insert div tags round the quoted content.
&lt;/p&gt;
&lt;p&gt;
Ideally the div would also wrap the image, but that was beyond me!
&lt;/p&gt;
&lt;p&gt;
Can this be looked at as an enhancement?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>21676.3.patch attached to Ticket #21676</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Thu, 24 Jan 2013 19:23:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21676/21676.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21676/21676.3.patch/1359055381143800</guid>
      <description>&lt;p&gt;
Refreshed, using $args instead of $data for future-proofing additional functionality
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22985 (Edit thumbnail image only - loses all sub sizes in attachment meta) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 24 Jan 2013 18:40:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22985#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22985#comment:17/1359052815553039</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23342" title="Don't stomp existing sizes inside wp_save_image().
Merges [23246] to ..."&gt;23342&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Don't stomp existing sizes inside wp_save_image().&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23246" title="Don't stomp existing sizes inside wp_save_image().
props ..."&gt;[23246]&lt;/a&gt; to the 3.5 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
props markoheijnen.&lt;br /&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22985" title="#22985: defect (bug): Edit thumbnail image only - loses all sub sizes in attachment meta (closed: fixed)"&gt;#22985&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [23342]: Don't stomp existing sizes inside wp_save_image().  Merges [23246] to ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 24 Jan 2013 18:40:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/23342</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/23342/1359052814655167</guid>
      <description>&lt;p&gt;
Don't stomp existing sizes inside wp_save_image().
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23246" title="Don't stomp existing sizes inside wp_save_image().
props ..."&gt;[23246]&lt;/a&gt; to the 3.5 branch.
&lt;/p&gt;
&lt;p&gt;
props markoheijnen.
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22985" title="#22985: defect (bug): Edit thumbnail image only - loses all sub sizes in attachment meta (closed: fixed)"&gt;#22985&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #18158 (Meta Query for posts with a meta key not set (IS NULL).) updated</title>
      
        <dc:creator>timersys</dc:creator>

      <pubDate>Thu, 24 Jan 2013 18:39:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18158#comment:57</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18158#comment:57/1359052777609884</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18158 (Meta Query for posts with a meta key not set (IS NULL).) updated</title>
      
        <dc:creator>timersys</dc:creator>

      <pubDate>Thu, 24 Jan 2013 18:34:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18158#comment:56</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18158#comment:56/1359052455506511</guid>
      <description>&lt;p&gt;
This query should work or not?
&lt;/p&gt;
&lt;pre class="wiki"&gt;	$the_query = new WP_Query(
		array(
			'post_type' =&amp;gt; 'post',
			'category__in'    =&amp;gt; array(1,2) ,
			'posts_per_page' =&amp;gt; -1,
			'meta_query'	=&amp;gt; array(
				relation' =&amp;gt; 'OR',
				array( // posts with not key at all
				'key' =&amp;gt; 'my_custom_key',
				'compare' =&amp;gt; 'NOT EXISTS'
				 ),
				array( //or posts with key set to false
				'key'	=&amp;gt; 'my_custom_key',
				'value' =&amp;gt; '0',
				'compare' =&amp;gt; '='
				)
			)
		)
	);
&lt;/pre&gt;&lt;p&gt;
If i make the meta_query with one condition it works in both cases.
As soon as i add both conditions and 'OR' relation it wont work at all.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22896 (Prevent plugins from overriding jQuery in the admin) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 24 Jan 2013 18:30:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22896#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22896#comment:30/1359052249169977</guid>
      <description>&lt;p&gt;
With jQuery there is a better way to do this: let the WordPress jQuery load first, then load your desired version in the footer or right before it's needed, load jQuery UI or any other plugins you want to use with the different version and do:
&lt;/p&gt;
&lt;pre class="wiki"&gt;var myjq = jQuery.noConflict(true);
&lt;/pre&gt;&lt;p&gt;
Ref: &lt;a class="ext-link" href="http://api.jquery.com/jQuery.noConflict/#example-4"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://api.jquery.com/jQuery.noConflict/#example-4&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Then in your scripts you can use the version you want:
&lt;/p&gt;
&lt;pre class="wiki"&gt;(function($){
// your code here uses the alternative jQuery version
}(myjq));
(function($){
// this uses the standard jQuery version
}(jQuery));
&lt;/pre&gt;&lt;p&gt;
This is &lt;strong&gt;the proper way&lt;/strong&gt; to load several versions of jQuery and have them all work and (of course) doesn't affect or break anything in WordPress.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18091 (Collapsed menu cannot be restored) updated</title>
      
        <dc:creator>TakeoK</dc:creator>

      <pubDate>Thu, 24 Jan 2013 18:12:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18091#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18091#comment:11/1359051145624019</guid>
      <description>&lt;p&gt;
I'm having this issue as well. Very annoying.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Clean install of WordPress 3.5
&lt;/li&gt;&lt;li&gt;No plugins
&lt;/li&gt;&lt;li&gt;No themes (other than 2012 and 2011)
&lt;/li&gt;&lt;li&gt;Safari 6.0.2
&lt;/li&gt;&lt;li&gt;Mac OS 10.8.2
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The cookie "wp-settings-1" keeps getting set to "fold%3Df" no matter how many times I delete the cookies, quit the browser, etc.
&lt;/p&gt;
&lt;p&gt;
The Safari inspector is now showing any Javascript errors.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23284.2.diff attached to Ticket #23284</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 24 Jan 2013 18:08:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23284/23284.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23284/23284.2.diff/1359050929404016</guid>
      <description>&lt;p&gt;
For 3.5
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23284 (Wrong parameter order for stripos in wp-includes/functions.php) updated</title>
      
        <dc:creator>kurtpayne</dc:creator>

      <pubDate>Thu, 24 Jan 2013 18:07:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23284#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23284#comment:4/1359050839801575</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I can replicate these results.
&lt;/p&gt;
&lt;p&gt;
Simply put: we do not need to know a URL's protocol to add a query argument.  We just care about question marks and equals signs.
&lt;/p&gt;
&lt;p&gt;
Both patches look sane and pass the unit tests.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17923 (add_query_arg() should encode values) updated</title>
      
        <dc:creator>kurtpayne</dc:creator>

      <pubDate>Thu, 24 Jan 2013 17:58:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17923#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17923#comment:19/1359050294519896</guid>
      <description>&lt;p&gt;
Updated patch to use &lt;code&gt;empty&lt;/code&gt; instead of silence operator.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>17923.5.patch attached to Ticket #17923</title>
      
        <dc:creator>kurtpayne</dc:creator>

      <pubDate>Thu, 24 Jan 2013 17:56:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17923/17923.5.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17923/17923.5.patch/1359050164215987</guid>
      <description>&lt;p&gt;
Use 'empty' instead of a silence operator
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22900 (is_writable function fails on Windows systems causing spurious ...) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 24 Jan 2013 17:23:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22900#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22900#comment:23/1359048187757450</guid>
      <description>fixed</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #23167 (Cache incrementors for get_pages) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 24 Jan 2013 17:21:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23167#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23167#comment:15/1359048116822705</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23341" title="Use correct cache bucket. Fixes copy-paste error in r23320. props ..."&gt;23341&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Use correct cache bucket. Fixes copy-paste error in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23320" title="Avoid the appearance of a magic number.
Props nacin
see #23167
"&gt;r23320&lt;/a&gt;. props kurtpayne. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23167" title="#23167: task (blessed): Cache incrementors for get_pages (closed: fixed)"&gt;#23167&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [23341]: Use correct cache bucket. Fixes copy-paste error in r23320. props ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 24 Jan 2013 17:21:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/23341</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/23341/1359048115861322</guid>
      <description>&lt;p&gt;
Use correct cache bucket. Fixes copy-paste error in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23320" title="Avoid the appearance of a magic number.
Props nacin
see #23167
"&gt;r23320&lt;/a&gt;. props kurtpayne. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23167" title="#23167: task (blessed): Cache incrementors for get_pages (closed: fixed)"&gt;#23167&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #22856 (Twenty Twelve upgrade issues) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 24 Jan 2013 17:20:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22856#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22856#comment:23/1359048048257802</guid>
      <description>fixed</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #23282 (Add shortcodes for inline HTML5 audio / video) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Thu, 24 Jan 2013 17:15:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23282#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23282#comment:6/1359047748945479</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23286 (wp nav menu not showing proper parent child relationships) created</title>
      
        <dc:creator>energy0m</dc:creator>

      <pubDate>Thu, 24 Jan 2013 17:05:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23286</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23286/1359047107222768</guid>
      <description>&lt;p&gt;
I have been developing with wordpress for quite some time now and run a development server with over 150 wordpress installs .. this newest wierd issue i have found has me stumped please help ... I have provided some screenshots for clarification
&lt;/p&gt;
&lt;p&gt;
1) &lt;a class="ext-link" href="http://new.nolagraphics.com/pages-list-tree.jpg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://new.nolagraphics.com/pages-list-tree.jpg&lt;/a&gt;
The first image here is of my pages you will see i have an extensive page based sitemap there.. its like 4 and 5 levels deep as page / subpage in some cases and at the 4th and 5th level in some cases there are as many as 13-20 children pages (the numbers in the parenthesis next to the page name are the number of subs under that page)
&lt;/p&gt;
&lt;p&gt;
2) &lt;a class="ext-link" href="http://new.nolagraphics.com/wp-nav-menu-pages-normal.jpg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://new.nolagraphics.com/wp-nav-menu-pages-normal.jpg&lt;/a&gt;
In this image you will see some of my pages which retain and display their page based hierarchy properly If you were to scroll down in the list you would see this quickly starts to break ..
&lt;/p&gt;
&lt;p&gt;
(my structure is broken up by country then event then under the event name should be the specific sets of pages for that event)
&lt;/p&gt;
&lt;p&gt;
3) &lt;a class="ext-link" href="http://new.nolagraphics.com/wp-nav-menu-pages.jpg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://new.nolagraphics.com/wp-nav-menu-pages.jpg&lt;/a&gt;
as you can see here the countries "china" "europe" and "india" clearly have no subs under them and as you can see when compared to image number 1 in my post here europe should have like 11 subs china should have like 14 there should be a bunch more listed there but as you see just the top level pages is listed.
&lt;/p&gt;
&lt;p&gt;
4) &lt;a class="ext-link" href="http://new.nolagraphics.com/pages-no-subpage-relation.jpg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://new.nolagraphics.com/pages-no-subpage-relation.jpg&lt;/a&gt;
whats even stranger ... is in the pagniated version of the "pages" box on the menu page when you click the pagniated "2" to go to the second page of pagniated page results you will see all those pages but they retain NO relation with their parent page..
&lt;/p&gt;
&lt;p&gt;
This is driving me mad as now i have created this really deep linked content structure and now it seems some sort of core functionality is failing.. heres some other development details
&lt;/p&gt;
&lt;p&gt;
heres a phpinfo page form my server the same one that that particular site is on
&lt;a class="ext-link" href="http://nolagraphics.com/phpinfo/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://nolagraphics.com/phpinfo/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I HAVE TRIED:
Disabling all plugins = same result
ENABLING only the 2011 theme = same result
Disabling all plugins &amp;amp; ENABLING only the 2011 theme = same result
&lt;/p&gt;
&lt;p&gt;
so this does not seem to be something that is affected by the content of the site this "seems" to me to be wordpress ...
&lt;/p&gt;
&lt;p&gt;
Please help i gotta get this site launched this week i have all the content and themeing complete just need to i set the pages into the nav so they can manage it!
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23275 (WordPress Importer: line-ending mismatch corrupts serialized meta) updated</title>
      
        <dc:creator>WraithKenny</dc:creator>

      <pubDate>Thu, 24 Jan 2013 16:39:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23275#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23275#comment:4/1359045595874933</guid>
      <description>&lt;p&gt;
It just occurred to me that git might have altered the import file, but I'm fairly certain I also tested fresh export files that didn't go through git. Since this just occurred to me I haven't tested thoroughly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15777 (Add a filter to allow a menu item to be manually selected) closed</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Thu, 24 Jan 2013 16:23:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15777#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15777#comment:7/1359044635905587</guid>
      <description>wontfix: &lt;p&gt;
So all the classes are added in &lt;code&gt;_wp_menu_item_classes_by_context()&lt;/code&gt; which is called &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-includes/nav-menu-template.php#L198"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;on line 198 of nav-menu-template.php&lt;/a&gt;.  The filter you're talking about using is on line 206, which means that in that loop I'd need to unset all the previous classes ('current-menu-item', 'current-menu-ancestor', 'current-menu-parent', etc), find the item to select, pull it's parents, loop through them, and re-assign proper classes.
&lt;/p&gt;
&lt;p&gt;
Basically, I'd need to create a slightly modified version of &lt;code&gt;_wp_menu_item_classes_by_context()&lt;/code&gt; (which is about 200 lines) and use it.
&lt;/p&gt;
&lt;p&gt;
Having said all that, I no longer work with the publishers that I used to, and haven't run across the need for this in probably 18 months.  I think it's one of those things that felt common at the time and is actually edge case.  Closing as wontfix.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #23276 (WordPress Importer: Update existing navs instead of new) updated</title>
      
        <dc:creator>WraithKenny</dc:creator>

      <pubDate>Thu, 24 Jan 2013 16:07:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23276#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23276#comment:2/1359043672864338</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The issue:
&lt;/p&gt;
&lt;p&gt;
The current version of the plugin imports nav items using &lt;code&gt;wp_update_nav_menu_item( $menu_id, 0, $args )&lt;/code&gt; which because of the second passed argument always creates a new item, even when the item exists already (actually, even when it doesn't, it creates a new one, but with a new id).
&lt;/p&gt;
&lt;p&gt;
The patch just uses the logic that all other post_types uses when importing to either create the item with the correct id, or update the existing item with the correct id (if the existing item is a nav item).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23276.patch attached to Ticket #23276</title>
      
        <dc:creator>WraithKenny</dc:creator>

      <pubDate>Thu, 24 Jan 2013 16:03:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23276/23276.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23276/23276.patch/1359043431235539</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23275 (WordPress Importer: line-ending mismatch corrupts serialized meta) updated</title>
      
        <dc:creator>WraithKenny</dc:creator>

      <pubDate>Thu, 24 Jan 2013 16:03:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23275#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23275#comment:3/1359043414927366</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23275 (WordPress Importer: line-ending mismatch corrupts serialized meta) updated</title>
      
        <dc:creator>WraithKenny</dc:creator>

      <pubDate>Thu, 24 Jan 2013 16:02:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23275#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23275#comment:2/1359043359634188</guid>
      <description>&lt;p&gt;
The issue:
&lt;/p&gt;
&lt;p&gt;
I've noticed that on some installs (xampp, mampp, so basically all my local installs) the parsing of the import file into php, and then the attempt to unserialize fails do to line-ending mismatches. This patch attempts to normalize the line-endings if first pass fails, and adjusts the s-length if the second pass fails.
&lt;/p&gt;
&lt;p&gt;
Alternatively, finding out which step causes the line-endings to change/conflict and preventing it there might be a better/cleaner solution, but that might be with how plugins store meta_data. My own plugin seems to save different endings via html post or ajax save. It doesn't effect the functioning of the plugin tho, only the importing of the meta_data. This should be fine anyway, except that when the file is saved (either by the browser, or up to the server or when the file is processed), then line-endings change, corrupting data or the s:length.
&lt;/p&gt;
&lt;p&gt;
The patch was what I could get working.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23284 (Wrong parameter order for stripos in wp-includes/functions.php) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 24 Jan 2013 15:57:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23284#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23284#comment:3/1359043024473625</guid>
      <description>&lt;p&gt;
Best I can tell, we are dealing with a bit of dead code here.
&lt;/p&gt;
&lt;p&gt;
Next to the &lt;code&gt;$protocol&lt;/code&gt; check, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4903" title="#4903: defect (bug): query strings with a forward slash give add_query_arg() problems (closed: fixed)"&gt;#4903&lt;/a&gt; added a check for &lt;code&gt;strpos( $uri, '=' ) === false&lt;/code&gt;. There is never a situation where the former is true, while the latter is false. By this point, a URL will not have &lt;code&gt;=&lt;/code&gt; as long as it has a protocol, because that means it also must have a &lt;code&gt;?&lt;/code&gt;, which is the earlier &lt;code&gt;if&lt;/code&gt; branch. A URL like '&lt;a class="ext-link" href="http://example.com/="&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com/=&lt;/a&gt;' isn't valid, but is the only thing that would fail here.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23284/23284.diff" title="Attachment '23284.diff' in Ticket #23284"&gt;23284.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23284/23284.diff" title="Download"&gt;​&lt;/a&gt; is a patch for 3.6. For 3.5, we can switch back the variables.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23284.diff attached to Ticket #23284</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 24 Jan 2013 15:56:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23284/23284.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23284/23284.diff/1359043001277498</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>23275.patch attached to Ticket #23275</title>
      
        <dc:creator>WraithKenny</dc:creator>

      <pubDate>Thu, 24 Jan 2013 15:53:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23275/23275.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23275/23275.patch/1359042795913156</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23282 (Add shortcodes for inline HTML5 audio / video) updated</title>
      
        <dc:creator>sabreuse</dc:creator>

      <pubDate>Thu, 24 Jan 2013 15:03:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23282#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23282#comment:5/1359039819424447</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23119 (UX Improvements to nav-menus.php) updated</title>
      
        <dc:creator>lessbloat</dc:creator>

      <pubDate>Thu, 24 Jan 2013 14:49:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23119#comment:159</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23119#comment:159/1359038995780958</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23119#comment:155" title="Comment 155"&gt;iamronen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is there a way/place/opportunity in the WordPress development process to debate your position?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Absolutely.  For clarity's sake:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I'm really not trying to be a jerk. (honest!) :-)
&lt;/li&gt;&lt;li&gt;This ticket is not the best place to post drastically new ideas.
&lt;/li&gt;&lt;li&gt;Even though I'm the lead for this feature, I don't have final say on any of it (that is left to Mark and Aaron).  My role is to assist in the development, but also to keep the development of this feature on track, and on time.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
We've got office hours for this feature each Mon &amp;amp; Thu at 21:00 UTC (4:00pm EST, 1:00pm PST) in #wordpress-dev.  After we've covered any agenda items, you are free to bring up whatever ideas &amp;amp; concerns that you may have.  There is also the &lt;a class="ext-link" href="http://make.wordpress.org/core/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;make/core&lt;/a&gt; P2.  You are welcome to leave whatever comments there that you'd like (as long as they are on topic).  Those are your two best options, if you'd like to present a new idea.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23285 (Implement an AMD JavaScript loader in WordPress) updated</title>
      
        <dc:creator>auniquename</dc:creator>

      <pubDate>Thu, 24 Jan 2013 14:48:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23285#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23285#comment:1/1359038916798809</guid>
      <description>&lt;p&gt;
Though thinking about it, perhaps the existing wp_register_script model could be modified to be AMD literate while preserving backward compatibility by doing the AMD implementation transparently behind the WordPress API. (?)
&lt;/p&gt;
&lt;p&gt;
Perhaps include all versions of jQuery as they are released and take the dependency array passed to wp_register_script and use it to create Asynchronous Module Definitions behind the scenes...
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_register_script( 'myplugin-script', MYPLUGIN_URL . 'js/myplugin.js',
	array(  'jquery 1.9.0',
		'jquery-ui-dialog 1.10.0'
	)
);
&lt;/pre&gt;&lt;p&gt;
Or something like that?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #4903,​23284 batch updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 24 Jan 2013 14:44:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=4903%2C23284</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=4903%2C23284/1359038641316681</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/1192/tests" title="Test add_query_arg() when used with only a query string. see #4903. ..."&gt;1192/tests&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Test add_query_arg() when used with only a query string. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4903" title="#4903: defect (bug): query strings with a forward slash give add_query_arg() problems (closed: fixed)"&gt;#4903&lt;/a&gt;. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23284" title="#23284: defect (bug): Wrong parameter order for stripos in wp-includes/functions.php (closed: fixed)"&gt;#23284&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset in tests [1192]: Test add_query_arg() when used with only a query string. see #4903. ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 24 Jan 2013 14:44:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/1192/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/1192/tests/1359038640477974</guid>
      <description>&lt;p&gt;
Test add_query_arg() when used with only a query string. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4903" title="#4903: defect (bug): query strings with a forward slash give add_query_arg() problems (closed: fixed)"&gt;#4903&lt;/a&gt;. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23284" title="#23284: defect (bug): Wrong parameter order for stripos in wp-includes/functions.php (closed: fixed)"&gt;#23284&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #23285 (Implement an AMD JavaScript loader in WordPress) created</title>
      
        <dc:creator>auniquename</dc:creator>

      <pubDate>Thu, 24 Jan 2013 14:28:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23285</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23285/1359037727789624</guid>
      <description>&lt;p&gt;
AMD = Asynchronous Module Definition
&lt;/p&gt;
&lt;p&gt;
See comment: &lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/22896#comment:29"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/ticket/22896#comment:29&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I think this is a must for the future viability of WordPress and plugins written for it.
&lt;/p&gt;
&lt;p&gt;
Multiple versions of JavaScript libraries are a fact of life and we have to deal with it somehow.
&lt;/p&gt;
&lt;p&gt;
If WordPress provides the framework for the use of multiple versions of JavaScript libraries then a lot of the problems we see with WordPress now will be a thing of the past.
&lt;/p&gt;
&lt;p&gt;
This represents a major re-think of the current WordPress JavaScript loading paradigm, but I think it is necessary and would be well worth it.
&lt;/p&gt;
&lt;p&gt;
I'm not a terribly advanced developer, and there might be better solutions out there or others to come, but for now, I think this is the way to go.
&lt;/p&gt;
&lt;p&gt;
Example:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://requirejs.org/docs/why.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://requirejs.org/docs/why.html&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://requirejs.org/docs/whyamd.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://requirejs.org/docs/whyamd.html&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/amdjs/amdjs-api/wiki/AMD"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/amdjs/amdjs-api/wiki/AMD&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It does not have to be RequireJS, but it seems the most mature and popular of the implementations.
&lt;/p&gt;
&lt;p&gt;
From the unminified jQuery source:
&lt;/p&gt;
&lt;pre class="wiki"&gt;// Expose jQuery as an AMD module, but only for AMD loaders that
// understand the issues with loading multiple versions of jQuery
// in a page that all might call define(). The loader will indicate
// they have special allowances for multiple jQuery versions by
// specifying define.amd.jQuery = true. Register as a named module,
// since jQuery can be concatenated with other files that may use define,
// but not use a proper concatenation script that understands anonymous
// AMD modules. A named AMD is safest and most robust way to register.
// Lowercase jquery is used because AMD module names are derived from
// file names, and jQuery is normally delivered in a lowercase file name.
// Do this after creating the global so that if an AMD module wants to call
// noConflict to hide this version of jQuery, it will work.
if ( typeof define === "function" &amp;amp;&amp;amp; define.amd &amp;amp;&amp;amp; define.amd.jQuery ) {
	define( "jquery", [], function () { return jQuery; } );
}
&lt;/pre&gt;&lt;p&gt;
Note: &lt;strong&gt;multiple versions of jQuery&lt;/strong&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23119 (UX Improvements to nav-menus.php) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 24 Jan 2013 14:20:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23119#comment:158</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23119#comment:158/1359037205196031</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23119#comment:157" title="Comment 157"&gt;ramiy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Seems like the core P2 does not post my comments, so i will write my response here.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't see any comments from you awaiting moderation and other people are commenting just fine. Can you try to figure out what's going wrong there? This ticket is getting extremely long and difficult to follow, and it would be sad to lose your comment and its context.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23284 (Wrong parameter order for stripos in wp-includes/functions.php) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 24 Jan 2013 14:15:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23284#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23284#comment:1/1359036945505915</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Broken in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/21865" title="Simplify protocol stripping in add_query_arg() by avoiding a regular ..."&gt;[21865]&lt;/a&gt;. Not sure how this didn't break unit tests.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23284 (Wrong parameter order for stripos in wp-includes/functions.php) created</title>
      
        <dc:creator>Kalindor</dc:creator>

      <pubDate>Thu, 24 Jan 2013 14:07:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23284</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23284/1359036442558063</guid>
      <description>&lt;p&gt;
In wp-includes/functions.php lines 658 and 661 stripos is used two times with parameters in the wrong order.
&lt;/p&gt;
&lt;p&gt;
This would be correct:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( 0 === stripos( $uri, 'http://' ) ) {
&lt;/pre&gt;&lt;pre class="wiki"&gt;} elseif ( 0 === stripos( $uri, 'http://' ) ) {
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16214 (Custom Field "Name" and "Value" headers shouldn't show if there are no ...) closed</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 24 Jan 2013 14:02:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16214#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16214#comment:12/1359036130188169</guid>
      <description>invalid: &lt;p&gt;
They haven't been combined. I don't really understand why that was showing in the first place - there's an inline &lt;code&gt;display: none&lt;/code&gt; on the top empty table that seems to be applying just fine. That hasn't changed, so I have no idea when or how this was fixed.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16276 (Default value for search field - (#11420 Easy within-site linking from ...) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 24 Jan 2013 13:55:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16276#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16276#comment:7/1359035733530864</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16276 (Default value for search field - (#11420 Easy within-site linking from ...) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 24 Jan 2013 13:54:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16276#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16276#comment:6/1359035693179256</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch seems to work for me. I think we should do this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14644 (Administrator should be able to change usernames) updated</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Thu, 24 Jan 2013 12:54:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14644#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14644#comment:16/1359032077587430</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14644#comment:15" title="Comment 15"&gt;alexvorn2&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
on wordpress.com users are not admins.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
They are admins, but not super admins.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15777 (Add a filter to allow a menu item to be manually selected) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 24 Jan 2013 12:30:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15777#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15777#comment:6/1359030602229500</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21551 (Press This Structural Rewrite) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 24 Jan 2013 12:25:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21551#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21551#comment:2/1359030337690952</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23278" title="#23278: enhancement: Spin PressThis off into a plugin (closed: wontfix)"&gt;#23278&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23278 (Spin PressThis off into a plugin) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 24 Jan 2013 12:25:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23278#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23278#comment:7/1359030315829974</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21551" title="#21551: enhancement: Press This Structural Rewrite (closed: duplicate)"&gt;#21551&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #18806,​21551 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 24 Jan 2013 12:24:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=18806%2C21551</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=18806%2C21551/1359030267954624</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18806" title="#18806: enhancement: Press This needs refactoring (closed: duplicate)"&gt;#18806&lt;/a&gt; was marked as a duplicate.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #14644 (Administrator should be able to change usernames) updated</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Thu, 24 Jan 2013 12:12:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14644#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14644#comment:15/1359029564712331</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14644#comment:14" title="Comment 14"&gt;douglsmith&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
wordpress.com even allows users to change their username (with the caveat that you can never go back to the old one.) Anyone know how that is handled?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
on wordpress.com users are not admins.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23119 (UX Improvements to nav-menus.php) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Thu, 24 Jan 2013 11:09:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23119#comment:157</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23119#comment:157/1359025781049068</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23119#comment:156" title="Comment 156"&gt;DrewAPicture&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Earlier today, @lessbloat proposed three approaches for this nav-menus action on the make.wordpress.org/core P2 site. Your two cents on that post are welcomed and encouraged.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Seems like the core P2 does not post my comments, so i will write my response here.
&lt;/p&gt;
&lt;p&gt;
The current menu screen has too many functions (add new menus, edit existing menus, manage manus, assign menus to theme locations). Its all mixed up in one screen. Very confusing. This is why i prefer the two screens approach.
&lt;/p&gt;
&lt;p&gt;
Not to mention that the "two screens approach" very similar to the post/page UI, which makes it much easier to use.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18806 (Press This needs refactoring) updated</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Thu, 24 Jan 2013 10:57:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18806#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18806#comment:3/1359025043846100</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23278" title="#23278: enhancement: Spin PressThis off into a plugin (closed: wontfix)"&gt;#23278&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23278 (Spin PressThis off into a plugin) updated</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Thu, 24 Jan 2013 10:56:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23278#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23278#comment:6/1359025015072702</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18806" title="#18806: enhancement: Press This needs refactoring (closed: duplicate)"&gt;#18806&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15777 (Add a filter to allow a menu item to be manually selected) updated</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Thu, 24 Jan 2013 10:39:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15777#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15777#comment:5/1359023969231744</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think we should close this. Navigation menus are already filterable in many many places, including &lt;code&gt;wp_nav_menu_items&lt;/code&gt; and &lt;code&gt;wp_nav_menu_objects&lt;/code&gt;. Here's an example how one would always highlight Glossary in their menu:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function my_wp_nav_menu_objects( $menu_items, $args ) {
	foreach ( $menu_items as $item )
		if ( $item-&amp;gt;post_name == 'glossary' )
			$item-&amp;gt;classes[] = 'current-menu-item';
	return $menu_items;
}
add_filter( 'wp_nav_menu_objects', 'my_wp_nav_menu_objects', 10, 2 );
&lt;/pre&gt;&lt;p&gt;
Add a condition to that (&lt;code&gt;is_tag&lt;/code&gt; or &lt;code&gt;is_tax&lt;/code&gt;) and you've solved your problem.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16276 (Default value for search field - (#11420 Easy within-site linking from ...) updated</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Thu, 24 Jan 2013 10:21:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16276#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16276#comment:5/1359022910087603</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Refreshed in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/16276/16276.2.diff" title="Attachment '16276.2.diff' in Ticket #16276"&gt;16276.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/16276/16276.2.diff" title="Download"&gt;​&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16276.2.diff attached to Ticket #16276</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Thu, 24 Jan 2013 10:20:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16276/16276.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16276/16276.2.diff/1359022848579392</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16214 (Custom Field "Name" and "Value" headers shouldn't show if there are no ...) updated</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Thu, 24 Jan 2013 10:04:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16214#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16214#comment:11/1359021876097575</guid>
      <description>&lt;p&gt;
I think this is no longer valid since the rows have been combined: &lt;a class="ext-link" href="http://cl.ly/image/3s2D1a0Z071n"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://cl.ly/image/3s2D1a0Z071n&lt;/a&gt; Suggesting to close.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23279 (Add templates to style registration, signup, activation, login and ...) updated</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Thu, 24 Jan 2013 09:27:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23279#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23279#comment:5/1359019658755993</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23282 (Add shortcodes for inline HTML5 audio / video) updated</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Thu, 24 Jan 2013 09:27:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23282#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23282#comment:4/1359019631258983</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21082 (The Gallery shortcode relies on #gallery-instance to hook the CSS, but ...) updated</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Thu, 24 Jan 2013 09:14:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21082#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21082#comment:5/1359018842612675</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21082#comment:4" title="Comment 4"&gt;MikeHansenMe&lt;/a&gt;: &lt;code&gt;wp_head&lt;/code&gt; is indeed too late for shortcodes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23283 (About wordpress 3.5 update) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Thu, 24 Jan 2013 09:10:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23283#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23283#comment:3/1359018641347456</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23283 (About wordpress 3.5 update) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Thu, 24 Jan 2013 09:10:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23283#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23283#comment:2/1359018617047352</guid>
      <description>&lt;i&gt;Resolution&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23283 (About wordpress 3.5 update) closed</title>
      
        <dc:creator>johnny09</dc:creator>

      <pubDate>Thu, 24 Jan 2013 08:19:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23283#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23283#comment:1/1359015546896466</guid>
      <description>fixed</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #23283 (About wordpress 3.5 update) created</title>
      
        <dc:creator>johnny09</dc:creator>

      <pubDate>Thu, 24 Jan 2013 08:05:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23283</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23283/1359014758515372</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
i updated my site to 3.5 version, i use woocommerce but when i activate it a get a error:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Fatal error: Cannot redeclare class CssParser in /home/www/my site.com/wp-content/plugins/woocommerce/admin/includes/cssmin.inc.php on line 1379
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Replaced the oldest version of woocommerce to 1.6.6 to 1.5.5 and still get this error, i think thats wordpress bug...
&lt;/p&gt;
&lt;p&gt;
Need help fast, please suggest something what coses this error?
&lt;/p&gt;
&lt;p&gt;
J.A.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Screen Shot 2013-01-24 at 12.29.46 AM.png attached to Ticket #16215</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 24 Jan 2013 07:30:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16215/Screen%20Shot%202013-01-24%20at%2012.29.46%20AM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16215/Screen%20Shot%202013-01-24%20at%2012.29.46%20AM.png/1359012645940282</guid>
      <description>&lt;p&gt;
after three edits test, combined patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16215 (Post Revision history displays the incorrect author) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 24 Jan 2013 07:25:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16215#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16215#comment:24/1359012341189183</guid>
      <description>&lt;p&gt;
attached combined patch for testing, also fixes (related) &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9843" title="#9843: enhancement: Duplicate autosave/revisions clutter the database (closed: fixed)"&gt;#9843&lt;/a&gt;; removes initial revision (last one in list) from display so after test scenario above you see only three revisions, admin save, testuser save, testuserb save.
&lt;/p&gt;
&lt;p&gt;
discovered the lovely 'self comparison detected' easter egg along the way! he he cute! :}
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>combined-3.diff attached to Ticket #16215</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 24 Jan 2013 07:21:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16215/combined-3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16215/combined-3.diff/1359012101416160</guid>
      <description>&lt;p&gt;
combined patch for testing
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #9843 (Duplicate autosave/revisions clutter the database) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 24 Jan 2013 07:20:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9843#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9843#comment:12/1359012044187176</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
verified, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7392" title="#7392: defect (bug): Don't create new autosave revision if nothing has changed yet (closed: fixed)"&gt;#7392&lt;/a&gt; patch fixes this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23119 (UX Improvements to nav-menus.php) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 24 Jan 2013 06:59:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23119#comment:156</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23119#comment:156/1359010778710089</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23119#comment:155" title="Comment 155"&gt;iamronen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is off-topic (but I will not pursue it further then this short comment), but I think it is important. Is there a way/place/opportunity in the WordPress development process to debate your position? I'm OK with you asking me to back off ... really ... but is that the best thing for a design effort?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It's funny you should ask. Earlier today, @lessbloat proposed three approaches for this nav-menus action on the make.wordpress.org/core P2 site. Your two cents on that post are welcomed and encouraged.
&lt;/p&gt;
&lt;p&gt;
Once the scope has been decided, we'll nail down the UI/workflow and work on revising our documentation. You can find and comment on @lessbloat's post here: &lt;a class="ext-link" href="http://make.wordpress.org/core/2013/01/23/for-tomorrows-menu-office-hours-i-only/#more-2813"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://make.wordpress.org/core/2013/01/23/for-tomorrows-menu-office-hours-i-only/#more-2813&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23119 (UX Improvements to nav-menus.php) updated</title>
      
        <dc:creator>iamronen</dc:creator>

      <pubDate>Thu, 24 Jan 2013 06:45:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23119#comment:155</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23119#comment:155/1359009932145929</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23119#comment:151" title="Comment 151"&gt;lessbloat&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23119#comment:150" title="Comment 150"&gt;iamronen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It feels to me like a faster, smoother and more efficient experience (unless I am missing something).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Let's try and keep this thread on task please.  I do appreciate your input.  But, the mockup you presented has a number of shortcomings, the largest of which I already mentioned (it being a drastically different flow from what users are used to). Which no amount of reasoning can remedy.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is off-topic (but I will not pursue it further then this short comment), but I think it is important. Is there a way/place/opportunity in the WordPress development process to debate your position? I'm OK with you asking me to back off ... really ... but is that the best thing for a design effort?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23119 (UX Improvements to nav-menus.php) updated</title>
      
        <dc:creator>iamronen</dc:creator>

      <pubDate>Thu, 24 Jan 2013 06:42:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23119#comment:154</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23119#comment:154/1359009729439669</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23119#comment:152" title="Comment 152"&gt;lessbloat&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I mocked up my interpretation of Nacins concept &lt;a class="ext-link" href="http://make.wordpress.org/core/2013/01/21/menus-discussion-today/#comment-7694"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;here&lt;/a&gt;.  I'd love to hear your thoughts, but let's keep feedback for that design over on that thread for now.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That mockup still does not address the most important area of the screen - the things I can pull into the menu. Try to populate the mockup with real content (put in a list of pages/posts/categories/custom post types ... and see that you simply can't.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>7392-2.diff attached to Ticket #7392</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 24 Jan 2013 05:56:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/7392/7392-2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/7392/7392-2.diff/1359006979058282</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #7392 (Don't create new autosave revision if nothing has changed yet) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 24 Jan 2013 05:53:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7392#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7392#comment:16/1359006801151908</guid>
      <description>&lt;p&gt;
the current patch works as advertised, the post is not updated if the content is unchanged.
&lt;/p&gt;
&lt;p&gt;
posting corrected diff so patch works agains current for testing.
&lt;/p&gt;
&lt;p&gt;
investigating double initial revisions (related - &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9843" title="#9843: enhancement: Duplicate autosave/revisions clutter the database (closed: fixed)"&gt;#9843&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16215" title="#16215: defect (bug): Post Revision history displays the incorrect author (closed: fixed)"&gt;#16215&lt;/a&gt; ) next.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23282 (Add shortcodes for inline HTML5 audio / video) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Thu, 24 Jan 2013 05:20:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23282#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23282#comment:3/1359004803814176</guid>
      <description>&lt;p&gt;
No clue how to properly diff with images, so unzip and drop &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23282/mediaelement.zip" title="Attachment 'mediaelement.zip' in Ticket #23282"&gt;mediaelement.zip&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23282/mediaelement.zip" title="Download"&gt;​&lt;/a&gt; in your wp-includes/js folder
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23282.diff attached to Ticket #23282</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Thu, 24 Jan 2013 05:18:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23282/23282.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23282/23282.diff/1359004681833833</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23282 (Add shortcodes for inline HTML5 audio / video) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Thu, 24 Jan 2013 04:56:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23282#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23282#comment:2/1359003403257081</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23282 (Add shortcodes for inline HTML5 audio / video) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Thu, 24 Jan 2013 04:56:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23282#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23282#comment:1/1359003370361067</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23282 (Add shortcodes for inline HTML5 audio / video) created</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Thu, 24 Jan 2013 04:41:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23282</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23282/1359002464847505</guid>
      <description>&lt;p&gt;
WordPress supports the 'audio' and 'video' post formats, however WordPress has no native ability to play audio or video.
&lt;/p&gt;
&lt;p&gt;
I have been using and following MedaElement.js for a while. It is, in my opinion, the most cross-browser compatible and extensible HTML5 solution out there. &lt;a class="ext-link" href="https://github.com/johndyer/mediaelement"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/johndyer/mediaelement&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
in a nutshell:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
A complete HTML/CSS audio/video player built on top MediaElement.js and jQuery. Many great HTML5 players have a completely separate Flash UI in fallback mode, but MediaElementPlayer.js uses the same HTML/CSS for all players.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Compatibility?
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Flash &lt;del&gt;Fallback&lt;/del&gt;forward
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
Instead of offering an HTML5 player to modern browsers and a totally separate Flash player to older browsers, MediaElement.js upgrades them with custom Flash and Silverlight plugins that mimic the HTML5 MediaElement API.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
Magic happens, and then IE6-8 supports &amp;lt;video&amp;gt; and &amp;lt;audio&amp;gt;, Firefox and Opera support h.264, and Safari and IE9 support WebM (*if Adobe makes good on promises to support VP8 in Flash).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
My patch makes 2 new shortcodes &lt;code&gt;[audio]&lt;/code&gt; and &lt;code&gt;[video]&lt;/code&gt;, both will pull the first attached mp3 (for audio) or mp4 (for video) attached to the post. If the &lt;code&gt;src&lt;/code&gt; attribute is passed, the shortcode doesn't check for an attachment.
&lt;/p&gt;
&lt;p&gt;
The patch is proof of concept and could (maybe?) use some more features. I will attach a sample mp3 and mp4 to the ticket to use for testing.
&lt;/p&gt;
&lt;p&gt;
UPDATE: mp3 and mp4 files are too big to upload to Trac*
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23279 (Add templates to style registration, signup, activation, login and ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 24 Jan 2013 04:18:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23279#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23279#comment:4/1359001104027393</guid>
      <description>&lt;p&gt;
Sounds like a duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/17948" title="#17948: enhancement: Enhancements to the login and registration forms (new)"&gt;#17948&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23198 (Pass post format as a class to TinyMCE init) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Thu, 24 Jan 2013 04:09:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23198#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23198#comment:30/1359000555242968</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23279 (Add templates to style registration, signup, activation, login and ...) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Thu, 24 Jan 2013 04:04:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23279#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23279#comment:3/1359000244082280</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22837 (WP Needs to Set "Sender" and "Reply-To" or DKIM/DMARC will not work ...) updated</title>
      
        <dc:creator>Kirin_Lin</dc:creator>

      <pubDate>Thu, 24 Jan 2013 03:52:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22837#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22837#comment:6/1358999570623967</guid>
      <description>&lt;p&gt;
The bug, '&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21659" title="#21659: defect (bug): wp_mail() problem with Reply-To header (closed: fixed)"&gt;#21659&lt;/a&gt; - wp_mail() problem with Reply-To header', is also related with this one.
&lt;/p&gt;
&lt;p&gt;
I found something wrong when I click the 'Reply' button on the email sent from Grunion Contact Form module of Jetpack plugin in GMail. The reason is wp_mail() doesn't deal with 'Reply-To' header.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7392 (Don't create new autosave revision if nothing has changed yet) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 24 Jan 2013 03:43:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7392#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7392#comment:15/1358998986037372</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/7392#comment:14" title="Comment 14"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This happens only when the Visual editor is default (is shown first). Caused by running the post_content through wpautop before outputting it in the textarea (TinyMCE needs the &amp;lt;p&amp;gt;), so the first &lt;code&gt;autosaveLast&lt;/code&gt; (used to determine if something has changed) gets post_content with &amp;lt;p&amp;gt; and is later compared to post_content without &amp;lt;p&amp;gt;.
&lt;/p&gt;
&lt;p&gt;
There are better ways to do that, should be fixed with the autosave updates in 3.6.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
i've noticed this doesn't get fired on new posts if i create a post and publish it with just a title without entering any content.
&lt;/p&gt;
&lt;p&gt;
in addition to the extra autosave, this winds up creating an extra revision when creating a new post, so creating a post with title and content starts out with two revisions, the 1st one is title only, the 2nd has title and content. thats confusing to users - see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9843" title="#9843: enhancement: Duplicate autosave/revisions clutter the database (closed: fixed)"&gt;#9843&lt;/a&gt;. the current patch seems to do too much by checking for duplication, can we just check for the initial state you mention and skip the first and only the first autosave?
&lt;/p&gt;
&lt;p&gt;
going to test the current patch anyway.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9843 (Duplicate autosave/revisions clutter the database) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 24 Jan 2013 03:37:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9843#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9843#comment:11/1358998620186865</guid>
      <description>&lt;p&gt;
i think solving &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7392" title="#7392: defect (bug): Don't create new autosave revision if nothing has changed yet (closed: fixed)"&gt;#7392&lt;/a&gt; will solve this issue; the initial autosave firing is what creates the extra revision record mentioned by the author in this post.  by the way, if you create a post, but go immediately to publish button from the title field without entering any content the extra revision is not created.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16215 (Post Revision history displays the incorrect author) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 24 Jan 2013 03:14:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16215#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16215#comment:23/1358997276207386</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20982 (Restoring post revisions does not update _edit_last) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 24 Jan 2013 03:13:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20982#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20982#comment:4/1358997199336248</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
westi: i agree &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16215" title="#16215: defect (bug): Post Revision history displays the incorrect author (closed: fixed)"&gt;#16215&lt;/a&gt; fixes this. lines up with attached patch.
&lt;/p&gt;
&lt;p&gt;
however, i was unable to reproduce bug anyway, either with or without the patch from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16215" title="#16215: defect (bug): Post Revision history displays the incorrect author (closed: fixed)"&gt;#16215&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
i don't understand the ticket author's last step in reproducing the bug "View the site and note that while the content has been updated to display the original post, the last modified author reads user b." - does the author mean to check the live site, if so my default setup doesn't show a 'last modified author', where is that? if they are talking about the admin revisions list, this looks correct now, shows current user on current revision after restoring any past revision, which seems like correct behavior.
&lt;/p&gt;
&lt;p&gt;
suggest closing this ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23281 (Enhancement for comment_form(); allow styling the submit button) updated</title>
      
        <dc:creator>Danielx64</dc:creator>

      <pubDate>Thu, 24 Jan 2013 01:51:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23281#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23281#comment:1/1358992285785386</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23280 (TinyMCE issue with table wrapped with shortcode) updated</title>
      
        <dc:creator>wpweaver</dc:creator>

      <pubDate>Thu, 24 Jan 2013 01:14:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23280#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23280#comment:1/1358990042646269</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17923 (add_query_arg() should encode values) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Thu, 24 Jan 2013 01:11:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17923#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17923#comment:18/1358989877525111</guid>
      <description>&lt;p&gt;
Silencing errors via &lt;code&gt;@&lt;/code&gt; should be avoided if possible. Since it's a variable now, instead of this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( true === @$args[3] )
&lt;/pre&gt;&lt;p&gt;
We can just do this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( ! empty( $args[3] ) )
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23281 (Enhancement for comment_form(); allow styling the submit button) created</title>
      
        <dc:creator>Danielx64</dc:creator>

      <pubDate>Thu, 24 Jan 2013 01:08:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23281</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23281/1358989694897067</guid>
      <description>&lt;p&gt;
Hi there,
&lt;/p&gt;
&lt;p&gt;
I'm looking at adding a feature where we can define the class for the submit button. I'm happy to create a patch for this if required. The reason for this is because right now we can change say the email field so much but we get little to no concrol over the submit button.
&lt;/p&gt;
&lt;p&gt;
I'm looking at
&lt;/p&gt;
&lt;p&gt;
A: Convert the entire submit button into somehing like how the text areas are done (author and email) then we get full control over the styling and other things related or;
&lt;/p&gt;
&lt;p&gt;
B Add something like class_submit so that we can set the style of the submit button.
&lt;/p&gt;
&lt;p&gt;
Kind regards,
&lt;/p&gt;
&lt;p&gt;
Daniel Fenn
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23280 (TinyMCE issue with table wrapped with shortcode) created</title>
      
        <dc:creator>wpweaver</dc:creator>

      <pubDate>Thu, 24 Jan 2013 01:07:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23280</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23280/1358989663968161</guid>
      <description>&lt;p&gt;
TinyMCE will generate unbalanced &amp;lt;p&amp;gt; tags when a table is included as the content of a wrapping style shortcode. In this example, assume a shortcode called &lt;code&gt;[div] ... [/div]&lt;/code&gt; that simply brackets the content with a &lt;code&gt;&amp;lt;div&amp;gt; ... &amp;lt;/div&amp;gt;&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This is an example as it would be in the editor's Text view (and it works if you switch back and forth to Visual.):
&lt;/p&gt;
&lt;hr /&gt;
&lt;pre class="wiki"&gt;There will be a table following.
[div]
&amp;lt;table&amp;gt;
&amp;lt;tbody&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td&amp;gt;Simple table&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;
[/div]
Next line is here.
&lt;/pre&gt;&lt;hr /&gt;
&lt;p&gt;
The HTML output generated is this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;p&amp;gt;There will be a table following.&amp;lt;/p&amp;gt;
&amp;lt;div&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;table&amp;gt;
&amp;lt;tbody&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td&amp;gt;Simple table&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;
&amp;lt;p&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;p&amp;gt;Next line is here.&amp;lt;/p&amp;gt;
&lt;/pre&gt;&lt;hr /&gt;
&lt;p&gt;
The shortcode is very simple - just a demo. It returns simply:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_shortcode( 'div', function( $atts, $content ) {
	return '&amp;lt;div&amp;gt;' . do_shortcode( $content ) . '&amp;lt;/div&amp;gt;';
} );
&lt;/pre&gt;&lt;p&gt;
Doesn't seem to matter with or without the do_shortcode() call.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
So note the excess &amp;lt;/p&amp;gt; after the added starting &amp;lt;div&amp;gt;, and the extra &amp;lt;p&amp;gt; before the &amp;lt;/div&amp;gt; from the shortcode. Seems to happen only with a wrapping style shortcode, and I think only with tables.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21676 (Pass a variable to get_template_part()) updated</title>
      
        <dc:creator>beatpanda</dc:creator>

      <pubDate>Thu, 24 Jan 2013 00:55:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21676#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21676#comment:18/1358988952815857</guid>
      <description>&lt;p&gt;
This comes up &lt;em&gt;a lot&lt;/em&gt; in my work, and some of my plugins and themes would be &lt;em&gt;drastically&lt;/em&gt; better if this was core functionality. Right now I'm having to implement my own version of WordPress core functions to do this.
&lt;/p&gt;
&lt;p&gt;
I know this isn't likely to happen, but if the $data array used the EXTR_OVERWRITE option instead of EXTR_SKIP, that would be &lt;em&gt;extremely&lt;/em&gt; helpful, because then I could pass in a custom set of posts to a template as $posts or $post in the $data array and the template would still "just work".
&lt;/p&gt;
&lt;p&gt;
I came here to submit roughly this exact patch, which is roughly what my hacky implementation looks like. Please implement this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23260 (Enhancement for paginate_links(); to include in wordpress core) updated</title>
      
        <dc:creator>Danielx64</dc:creator>

      <pubDate>Thu, 24 Jan 2013 00:44:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23260#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23260#comment:3/1358988276334386</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23260#comment:2" title="Comment 2"&gt;mdgl&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16973" title="#16973: enhancement: Introduce get_multipage_link() (closed: maybelater)"&gt;#16973&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16468" title="#16468: defect (bug): Twenty Ten: 404 page with /page/2 shows page number (closed: fixed)"&gt;#16468&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I suspect it's about time we did something to sort out the lower level helper functions here in core.  Plugins (wp-pagenavi, wp-paginate, etc.) can continue to offer further support to themes for displaying fancy pagination.
&lt;/p&gt;
&lt;p&gt;
I had planned to offer a new patch around 3.6 timeframe but am too busy and may not get a chance to look at this for a few more weeks.  With a bit of encouragement I may be persuaded to take another look :-)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It would say that it would be worthwhile upgrading thoe functions as I see that they are abit dated and we could have some new features included.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23278 (Spin PressThis off into a plugin) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Thu, 24 Jan 2013 00:09:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23278#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23278#comment:5/1358986183815521</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23278#comment:4" title="Comment 4"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If you do any kind of blogging that results in linking to and quoting another article, it can be awesome. I don't much, admittedly, but Matt does all the time, and uses the bookmarklet. A number of journalists I know also use it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I use the existing bookmarklet a fair bit too. It ain't sexy, but it also ain't horribly broken. Plugin first, then bring into core as an enhancement sounds like a good approach to me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>