<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #38939 (Twenty Seventeen: input backgrounds are only styled for webkit browsers) updated</title>
      
        <dc:creator>schamane</dc:creator>

      <pubDate>Fri, 25 Nov 2016 23:40:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38939#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38939#comment:2/1480117214880015</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38939#comment:1" title="Comment 1"&gt;Presskopp&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
found this in 2015, reason for double color gradient:
&lt;/p&gt;
&lt;pre class="wiki"&gt;/* Removing the inner shadow on iOS inputs */
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
@Presskopp Thank you for digging this up!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38939 (Twenty Seventeen: input backgrounds are only styled for webkit browsers) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Fri, 25 Nov 2016 23:29:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38939#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38939#comment:1/1480116593189822</guid>
      <description>&lt;p&gt;
found this in 2015, reason for double color gradient:
&lt;/p&gt;
&lt;pre class="wiki"&gt;/* Removing the inner shadow on iOS inputs */
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38917 (Paste As Text alert displays full-width) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Fri, 25 Nov 2016 22:41:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38917#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38917#comment:5/1480113674349995</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Tentatively suggesting this needs fixing for 4.7 as it's a bug that impacts the experience a lot.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38917 (Paste As Text alert displays full-width) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Fri, 25 Nov 2016 22:39:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38917#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38917#comment:4/1480113571108336</guid>
      <description>&lt;p&gt;
I can replicate this and can't see all the message:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/KkaMllCq5d.png"&gt;&lt;img src="https://cldup.com/KkaMllCq5d.png" alt="https://cldup.com/KkaMllCq5d.png" crossorigin="anonymous" title="https://cldup.com/KkaMllCq5d.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It can get fixed by removing the left CSS position and adding a 50% width (probably best there's some device adjustments though):
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/ubj3Ree8RD.png"&gt;&lt;img src="https://cldup.com/ubj3Ree8RD.png" alt="https://cldup.com/ubj3Ree8RD.png" crossorigin="anonymous" title="https://cldup.com/ubj3Ree8RD.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38943 (Customize changeset API issue with post date) created</title>
      
        <dc:creator>utkarshpatel</dc:creator>

      <pubDate>Fri, 25 Nov 2016 19:38:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38943</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38943/1480102720632212</guid>
      <description>&lt;p&gt;
In changeset when we update status with &lt;code&gt;future&lt;/code&gt; with date
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="nx"&gt;wp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;customize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;previewer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'future'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'2017-01-01 00:00:00'&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
And after that if we change status to &lt;code&gt;draft&lt;/code&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="nx"&gt;wp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;customize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;previewer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'draft'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'Add 2017 greeting'&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
It keeps &lt;code&gt;2017-01-01 00:00:00&lt;/code&gt; as post_date after that.
&lt;/p&gt;
&lt;p&gt;
If we send &lt;code&gt;draft&lt;/code&gt; request with &lt;code&gt;date&lt;/code&gt; param
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="nx"&gt;wp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;customize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;previewer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'draft'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'Add 2017 greeting'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'2016-11-26 01:02:00'&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
It gives error &lt;code&gt;not_future_date&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/70fc99e323e27a72280aea3b8cf2a6bd73660d54/wp-includes/class-wp-customize-manager.php#L2019-L2042"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/70fc99e323e27a72280aea3b8cf2a6bd73660d54/wp-includes/class-wp-customize-manager.php#L2019-L2042&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Here in code if date is passed it assumes &lt;code&gt;future&lt;/code&gt; post_status.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #32772 (Filter for disabling Customizer) updated</title>
      
        <dc:creator>senlin</dc:creator>

      <pubDate>Fri, 25 Nov 2016 18:54:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32772#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32772#comment:10/1480100056339075</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/32772#comment:6" title="Comment 6"&gt;Viper007Bond&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
And modifying capabilities is not difficult (and there might even be a better way than this):
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter( 'user_has_cap' , function( $allcaps ) {
	unset( $allcaps['edit_theme_options'] );
	return $allcaps;
} );
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
Not only does that filter disable the Customizer, it also wipes out the Menu and Widgets pages, bit too extreme, no?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38942 (New filter for header image tag attributes) updated</title>
      
        <dc:creator>junaidbhura</dc:creator>

      <pubDate>Fri, 25 Nov 2016 18:06:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38942#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38942#comment:1/1480097215714835</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38941 (REST API - filter syntax isn't available) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 25 Nov 2016 17:56:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38941#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38941#comment:3/1480096614995474</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>38942.diff attached to Ticket #38942</title>
      
        <dc:creator>junaidbhura</dc:creator>

      <pubDate>Fri, 25 Nov 2016 17:51:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38942/38942.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38942/38942.diff/1480096271494304</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38942 (New filter for header image tag attributes) created</title>
      
        <dc:creator>junaidbhura</dc:creator>

      <pubDate>Fri, 25 Nov 2016 17:45:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38942</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38942/1480095946780935</guid>
      <description>&lt;p&gt;
There is currently no way to filter the attributes of the header image tag before it is used to build the header image tag HTML in the get_header_image_tag() function.
&lt;/p&gt;
&lt;p&gt;
I've attached a diff to solve this problem by adding a new 'get_header_image_tag_attributes' filter.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38941 (REST API - filter syntax isn't available) closed</title>
      
        <dc:creator>andfinally</dc:creator>

      <pubDate>Fri, 25 Nov 2016 17:42:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38941#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38941#comment:2/1480095777767330</guid>
      <description>wontfix: &lt;p&gt;
I see! Thanks - good to know. I'll close this.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #38941 (REST API - filter syntax isn't available) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 25 Nov 2016 17:34:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38941#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38941#comment:1/1480095289355938</guid>
      <description>&lt;p&gt;
Hey there,
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;filter&lt;/code&gt; param has been removed on purpose. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38378" title="#38378: defect (bug): Remove the `filter` parameter in the Post Controller (closed: fixed)"&gt;#38378&lt;/a&gt; for more information. The docs haven't been updated yet.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38941 (REST API - filter syntax isn't available) created</title>
      
        <dc:creator>andfinally</dc:creator>

      <pubDate>Fri, 25 Nov 2016 17:21:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38941</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38941/1480094515741699</guid>
      <description>&lt;p&gt;
I'm on WordPress 4.7 beta 4, and I'm finding the filter syntax isn't working.
&lt;/p&gt;
&lt;p&gt;
The filter argument is listed in the v2 docs &lt;a class="ext-link" href="http://v2.wp-api.org/reference/posts/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://v2.wp-api.org/reference/posts/&lt;/a&gt;. But when I do a GET request to /wp-json/ filter is not listed in the args for the /wp/v2/posts GET endpoint.
&lt;/p&gt;
&lt;p&gt;
I have three posts in my local environment. When I do a GET request to /wp-json/wp/v2/posts/?categories=2 I get the one post that belongs to the category with the ID 2. This category has the name News and slug news.
&lt;/p&gt;
&lt;p&gt;
When I do requests like
/wp-json/wp/v2/posts?filter[cat]=2
/wp-json/wp/v2/posts?filter[category_name]=News
/wp-json/wp/v2/posts?filter[posts_per_page]=1
I get all three of my posts. From what I read on StackOverflow, this suggests the API isn't recognising the filter.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38342 (Quick Draft: Leverage REST API endpoints) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 25 Nov 2016 16:33:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38342#comment:77</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38342#comment:77/1480091598760854</guid>
      <description>&lt;p&gt;
@adamsilverstein thanks :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Regarding using &lt;code&gt;assertive&lt;/code&gt; I was uncertain if that was appropriate for both errors and success messages, or is it only for failures (ie when should we tell the screen reader to be assertive)?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'd say &lt;code&gt;polite/assertive&lt;/code&gt; are not specifically tied to semantics (normal messages vs errors/warnings). It's just about timings. If the screen reader is already reading out something, e.g. a long sentence, &lt;code&gt;polite&lt;/code&gt; won't interrupt it. Instead, &lt;code&gt;assertive&lt;/code&gt; interrupts immediately. Should be used with care to don't stop users from completing their current task. In this case, for both confirmation and error, the task is completed so my thought was to give users an immediate feedback.
&lt;/p&gt;
&lt;p&gt;
Also, the politeness levels are just "suggestions" and screen readers could theoretically choose to ignore them. Quoting the specification:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Politeness levels are essentially an ordering mechanism for updates and serve as a strong suggestion to user agents or assistive technologies. The value may be overridden by user agents, assistive technologies, or the user. For example, if assistive technologies can determine that a change occurred in response to a key press or a mouse click, the assistive technologies may present that change immediately even if the value of the aria-live attribute states otherwise.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38342 (Quick Draft: Leverage REST API endpoints) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 25 Nov 2016 16:16:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38342#comment:76</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38342#comment:76/1480090608444928</guid>
      <description>&lt;p&gt;
@afercia Thank you for the testing, detailed feedback and suggestions!
&lt;/p&gt;
&lt;p&gt;
Regarding using &lt;code&gt;assertive&lt;/code&gt; I was uncertain if that was appropriate for both errors and success messages, or is it only for failures (ie when should we tell the screen reader to be assertive)?
&lt;/p&gt;
&lt;p&gt;
Regarding adding &lt;code&gt;locale&lt;/code&gt; to Intl.DateTimeFormat, that indeed looks like an issue, I think we can localize/pass the correct locale string for this function to resolve this.
&lt;/p&gt;
&lt;p&gt;
Thanks again for the extensive feedback here, I will work to address the points you raised.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28956 (Moving taxonomy metabox) updated</title>
      
        <dc:creator>keesiemeijer</dc:creator>

      <pubDate>Fri, 25 Nov 2016 14:57:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28956#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28956#comment:7/1480085836088098</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/28956/28956.1.patch" title="Attachment '28956.1.patch' in Ticket #28956"&gt;28956.1.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/28956/28956.1.patch" title="Download"&gt;​&lt;/a&gt; the &lt;code&gt;meta_box_context&lt;/code&gt; and &lt;code&gt;meta_box_priority&lt;/code&gt; arguments are added to the &lt;code&gt;register_taxonomy()&lt;/code&gt; function  and &lt;code&gt;WP_Taxonomy&lt;/code&gt; class.
&lt;/p&gt;
&lt;p&gt;
The defaults for these parameters are taken from the hard-coded parameter values used in &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-admin/edit-form-advanced.php#L259"&gt;edit-form-advanced.php&lt;/a&gt; to add taxonomy meta boxes in the post edit screens.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38940 (current_time() expects that date_default_timezone_set is never used) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Fri, 25 Nov 2016 14:36:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38940#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38940#comment:6/1480084619186520</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38940#comment:5" title="Comment 5"&gt;marco.marsala&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I didn't suggest to change &lt;code&gt;date()&lt;/code&gt; into &lt;code&gt;gmdate()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
The proposed patch would affect only the b&lt;code&gt;current_time()&lt;/code&gt; and has no side effect on &lt;code&gt;date()&lt;/code&gt; function outside &lt;code&gt;current_time()&lt;/code&gt; calls, look at the code above.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I understand that, but if some code outside of WordPress core uses &lt;code&gt;date_default_timezone_set()&lt;/code&gt;, it will affect every call to &lt;code&gt;date()&lt;/code&gt; in WordPress (and plugins), not just the &lt;code&gt;current_time()&lt;/code&gt; function. &lt;code&gt;current_time()&lt;/code&gt; is not used everywhere that WordPress retrieves the current date/time, so other places in the code will still be affected by the changed timezone, even though they are expected to be getting the UTC time. They would need to be updated to use &lt;code&gt;current_time()&lt;/code&gt; or &lt;code&gt;gmdate()&lt;/code&gt; in that case.
&lt;/p&gt;
&lt;p&gt;
In fact, you could avoid changing the timezone in your patch for &lt;code&gt;current_time()&lt;/code&gt;, you could just update it to use &lt;code&gt;gmdate()&lt;/code&gt; instead of &lt;code&gt;date()&lt;/code&gt;, I think.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>28956.1.patch attached to Ticket #28956</title>
      
        <dc:creator>keesiemeijer</dc:creator>

      <pubDate>Fri, 25 Nov 2016 14:31:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28956/28956.1.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28956/28956.1.patch/1480084268410285</guid>
      <description>&lt;p&gt;
Add &lt;code&gt;meta_box_context&lt;/code&gt; and &lt;code&gt;meta_box_priority&lt;/code&gt; parameters
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38940 (current_time() expects that date_default_timezone_set is never used) updated</title>
      
        <dc:creator>marco.marsala</dc:creator>

      <pubDate>Fri, 25 Nov 2016 14:24:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38940#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38940#comment:5/1480083879736364</guid>
      <description>&lt;p&gt;
I didn't suggest to change &lt;code&gt;date()&lt;/code&gt; into &lt;code&gt;gmdate()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
The proposed patch would affect only the b&lt;code&gt;current_time()&lt;/code&gt; and has no side effect on &lt;code&gt;date()&lt;/code&gt; function outside &lt;code&gt;current_time()&lt;/code&gt; calls, look at the code above.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38940 (current_time() expects that date_default_timezone_set is never used) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Fri, 25 Nov 2016 14:13:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38940#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38940#comment:4/1480083229451773</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'd say it is more of a documentation problem than a code problem. The code has been this way for a long time, and I don't know if there have been any complaints about bugs arising from code outside WordPress core calling &lt;code&gt;date_default_timezone_set()&lt;/code&gt;. It would affect a lot of time-related stuff in WordPress, since &lt;code&gt;date()&lt;/code&gt; is used many other places where &lt;code&gt;gmdate()&lt;/code&gt; would need to be used instead. Ensuring that we always use &lt;code&gt;gmdate()&lt;/code&gt; when getting UTC time would be an extra precaution, but it wouldn't immediately make it OK for code to call &lt;code&gt;date_default_timezone_set()&lt;/code&gt;, because a lot of plugins would still be assuming &lt;code&gt;date()&lt;/code&gt; to be UTC. So, for backward-compatibility reasons, I doubt that we should change the code. Not unless there actually is a significant specific use-case for making WordPress core resilient against calls to &lt;code&gt;date_default_timezone_set()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>current_time.patch attached to Ticket #38940</title>
      
        <dc:creator>marco.marsala</dc:creator>

      <pubDate>Fri, 25 Nov 2016 09:31:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38940/current_time.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38940/current_time.patch/1480066306974980</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38940 (current_time() expects that date_default_timezone_set is never used) updated</title>
      
        <dc:creator>marco.marsala</dc:creator>

      <pubDate>Fri, 25 Nov 2016 09:28:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38940#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38940#comment:3/1480066131077253</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
A possible code fix would be:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;function current_time( $type, $gmt = 0 ) {
        $oldgmt = date_default_timezone_get();
        date_default_timezone_set('UTC');
        switch ( $type ) {
                case 'mysql':
                        return ( $gmt ) ? gmdate( 'Y-m-d H:i:s' ) : gmdate( 'Y-m-d H:i:s', ( time() + ( get_option( 'gmt_offset' ) * HOUR_IN_SECONDS ) ) );
                case 'timestamp':
                        return ( $gmt ) ? time() : time() + ( get_option( 'gmt_offset' ) * HOUR_IN_SECONDS );
                default:
                        return ( $gmt ) ? date( $type ) : date( $type, time() + ( get_option( 'gmt_offset' ) * HOUR_IN_SECONDS ) );
        }
        date_default_timezone_set($oldgmt);
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38940 (current_time() expects that date_default_timezone_set is never used) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 25 Nov 2016 09:27:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38940#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38940#comment:2/1480066034009633</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37910" title="#37910: enhancement: Remove confusing legacy logic in date_i18n() (closed: fixed)"&gt;#37910&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38771" title="#38771: enhancement: date_i18n() arguments are misleading in function and documentation (closed: fixed)"&gt;#38771&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37910 (Remove confusing legacy logic in date_i18n()) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 25 Nov 2016 09:25:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37910#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37910#comment:23/1480065936203686</guid>
      <description>&lt;p&gt;
@Rarst Yeah unfortunately the same goes other date functions as well, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38940" title="#38940: defect (bug): current_time() expects that date_default_timezone_set is never used (closed: duplicate)"&gt;#38940&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11672 (current_time() does not correctly retrun localized time) updated</title>
      
        <dc:creator>marco.marsala</dc:creator>

      <pubDate>Fri, 25 Nov 2016 09:18:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11672#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11672#comment:5/1480065510625122</guid>
      <description>&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38940" title="#38940: defect (bug): current_time() expects that date_default_timezone_set is never used (closed: duplicate)"&gt;#38940&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29063 (function current_time( $type, $gmt = 0 ) don't return GMT if  'Y-m-d ...) updated</title>
      
        <dc:creator>marco.marsala</dc:creator>

      <pubDate>Fri, 25 Nov 2016 09:18:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29063#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29063#comment:9/1480065504211168</guid>
      <description>&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38940" title="#38940: defect (bug): current_time() expects that date_default_timezone_set is never used (closed: duplicate)"&gt;#38940&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37440 (current_time function outputs local time when it should output GMT time) updated</title>
      
        <dc:creator>marco.marsala</dc:creator>

      <pubDate>Fri, 25 Nov 2016 09:17:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37440#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37440#comment:4/1480065478571566</guid>
      <description>&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38940" title="#38940: defect (bug): current_time() expects that date_default_timezone_set is never used (closed: duplicate)"&gt;#38940&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38940 (current_time() expects that date_default_timezone_set is never used) updated</title>
      
        <dc:creator>marco.marsala</dc:creator>

      <pubDate>Fri, 25 Nov 2016 09:16:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38940#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38940#comment:1/1480065416656705</guid>
      <description>&lt;p&gt;
I'm unsure if this is a documentation fault or a code fault. This limitation should at least be mentioned in documentation (documentation fault) or the code fixed (code fault).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38940 (current_time() expects that date_default_timezone_set is never used) created</title>
      
        <dc:creator>marco.marsala</dc:creator>

      <pubDate>Fri, 25 Nov 2016 09:16:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38940</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38940/1480065393305537</guid>
      <description>&lt;p&gt;
Currently, the function &lt;code&gt;current_time()&lt;/code&gt; expects &lt;code&gt;date_default_timezone_set()&lt;/code&gt; is never used.
&lt;/p&gt;
&lt;p&gt;
Inspecting the code of &lt;code&gt;current_time()&lt;/code&gt; confirmed this, because it formats the result using &lt;code&gt;date()&lt;/code&gt; function (that is affected by timezone).
&lt;/p&gt;
&lt;p&gt;
In fact seems WordPress always resets the timezone to UTC; an &lt;code&gt;echo date_default_timezone_get();&lt;/code&gt; placed at top and at bottom of wp-config.php in a clean WordPress setup will prove this.
&lt;/p&gt;
&lt;p&gt;
So using &lt;code&gt;date_default_timezone_set()&lt;/code&gt; anywhere in theme or plugin code will broke &lt;code&gt;current_time()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38932 (Add unit (px) to suggested image size in customizer) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 25 Nov 2016 08:28:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38932#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38932#comment:3/1480062491951222</guid>
      <description>&lt;p&gt;
@dd32 the &lt;code&gt;title&lt;/code&gt; attribute works like a description and gets announced &lt;em&gt;in addition&lt;/em&gt; to the visible text. So:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;abbr title="pixels"&amp;gt;px&amp;lt;/abbr&amp;gt; = pee ex (short pause here) pixels
&lt;/pre&gt;&lt;p&gt;
Also, there's no guarantee the title attribute will be announced, it depends on the verbosity settings users can tweak in their screen readers.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;aria-label&lt;/code&gt; attribute &lt;em&gt;replaces&lt;/em&gt; the content instead:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;span aria-label="pixels"&amp;gt;px&amp;lt;/span&amp;gt; = pixels
&lt;/pre&gt;&lt;p&gt;
By the way, it tends to work best on interactive elements. Thinking also at the resulting translatable string, it would be simpler to use just plain text.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #27207,​38779 batch updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 25 Nov 2016 08:27:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=27207%2C38779</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=27207%2C38779/1480062463639760</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39362" title="Git: Prevent untracked files from being ignored by git in bundled ..."&gt;39362&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Git: Prevent untracked files from being ignored by git in bundled themes.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27207" title="#27207: enhancement: Extend core's .gitignore file (closed: fixed)"&gt;#27207&lt;/a&gt;.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38779" title="#38779: defect (bug): Ensure untracked files are listed by git in core themes (closed: fixed)"&gt;#38779&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [39362]: Git: Prevent untracked files from being ignored by git in bundled ...</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 25 Nov 2016 08:27:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39362</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39362/1480062463169273</guid>
      <description>&lt;p&gt;
Git: Prevent untracked files from being ignored by git in bundled themes.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27207" title="#27207: enhancement: Extend core's .gitignore file (closed: fixed)"&gt;#27207&lt;/a&gt;.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38779" title="#38779: defect (bug): Ensure untracked files are listed by git in core themes (closed: fixed)"&gt;#38779&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38779 (Ensure untracked files are listed by git in core themes) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 25 Nov 2016 08:10:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38779#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38779#comment:2/1480061450159436</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by westonruter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1480061447004319"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38929 (WP_Hook should support filters added manually through `advanced-cache.php`) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Nov 2016 07:10:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38929#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38929#comment:6/1480057816484011</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38929#comment:5" title="Comment 5"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This looks good — elegant.
&lt;/p&gt;
&lt;p&gt;
Is it worth putting this inside the WP_CACHE branch?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I see no harm in doing so, doesn't look like any of the functions between that and &lt;code&gt;plugin.php&lt;/code&gt; inclusion should be requiring user functions; it wasn't intentional to include it outside the conditional, it just happened that way :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38657 (Shrinkwrap npm dependencies for 4.7) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Fri, 25 Nov 2016 05:56:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38657#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38657#comment:10/1480053372321024</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38657#comment:9" title="Comment 9"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In the future, we need to be mindful that this thing needs to build on Linux, and probably come up with a way to assert that without it first being discovered when the build server fails. A cheap hack (for this particular problem) that would have identified this quickly would be to validate in unit tests that npm-shrinkwrap.json can't contain the string '"fsevents"'.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Currently &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; is never committed to &lt;code&gt;/trunk&lt;/code&gt;, it only exists in &lt;code&gt;/branch/x.y&lt;/code&gt;, until it is created we can't test it, so on that front @jorbin now that &lt;code&gt;/trunk&lt;/code&gt; has branched can you add the 4.7 branch to the &lt;a class="ext-link" href="https://travis-ci.org/aaronjorbin/develop.wordpress/branches"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Travis CI config&lt;/a&gt; please and we can look to adding a test for this.
&lt;/p&gt;
&lt;p&gt;
Also I hit upon &lt;a class="ext-link" href="https://github.com/Skyscanner/grunt-custom-shrinkwrap"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;grunt-custom-shrinkwrap&lt;/a&gt; and added in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38657/38657-grunt-shrinkwrap.diff" title="Attachment '38657-grunt-shrinkwrap.diff' in Ticket #38657"&gt;38657-grunt-shrinkwrap.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38657/38657-grunt-shrinkwrap.diff" title="Download"&gt;​&lt;/a&gt; a new grunt task &lt;code&gt;grunt customShrinkwrap&lt;/code&gt;, this creates the &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; file excluding the &lt;code&gt;fsevents&lt;/code&gt; dependancy, the &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; file can then be moved manually into &lt;code&gt;/branch/x.y&lt;/code&gt; when &lt;code&gt;/trunk&lt;/code&gt; is branched as part the new major release workflow.
&lt;/p&gt;
&lt;p&gt;
This patch needs a bit more testing as it reports WordPress 4.8 currently as the task is ran out of &lt;code&gt;/trunk&lt;/code&gt; and &lt;code&gt;/trunk&lt;/code&gt; has already branched. Also the release workflow &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/about/release-cycle/releasing-major-versions/#post-release"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;handbook docs&lt;/a&gt; should document this task if committed
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38657-grunt-shrinkwrap.diff attached to Ticket #38657</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Fri, 25 Nov 2016 05:53:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38657/38657-grunt-shrinkwrap.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38657/38657-grunt-shrinkwrap.diff/1480053217313151</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32296 (Customize: Increase width of controls pane to give more room on high ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 25 Nov 2016 05:52:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32296#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32296#comment:43/1480053134409294</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Let's try to get movement on this in 4.8.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38929 (WP_Hook should support filters added manually through `advanced-cache.php`) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Nov 2016 05:48:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38929#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38929#comment:5/1480052908532022</guid>
      <description>&lt;p&gt;
This looks good — elegant.
&lt;/p&gt;
&lt;p&gt;
Is it worth putting this inside the WP_CACHE branch?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38657.diff attached to Ticket #38657</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Nov 2016 05:04:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38657/38657.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38657/38657.diff/1480050288527171</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38657 (Shrinkwrap npm dependencies for 4.7) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Nov 2016 05:04:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38657#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38657#comment:9/1480050269068316</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Using node 6.9.1 (LTS) and npm 3.10.8, I was able to reproduce a shrinkwrap identical to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39358" title="Build/Test Tools: Add npm-shrinkwrap.json to 4.7.
By shrinkwraping ..."&gt;[39358]&lt;/a&gt; on macOS and Linux, with the exception of fsevents being omitted on Linux. (In both scenarios, I also see an irrelevant change to the metadata for the "nan" package.)
&lt;/p&gt;
&lt;p&gt;
When using that Linux-generated shrinkwrap on macOS, node-gyp ends up installing fsevents properly, so it's not needed in npm-shrinkwrap.json.
&lt;/p&gt;
&lt;p&gt;
So, I have a good fix for this, but need to update node and npm on the build server, which I'll do soon.
&lt;/p&gt;
&lt;p&gt;
In the future, we need to be mindful that this thing needs to build on Linux, and probably come up with a way to assert that without it first being discovered when the build server fails. A cheap hack (for this particular problem) that would have identified this quickly would be to validate in unit tests that npm-shrinkwrap.json can't contain the string '"fsevents"'.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38727 (Modifications to svn:ignore) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 25 Nov 2016 04:46:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38727#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38727#comment:3/1480049184147462</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39361" title="Git: Ignore patch related files, so they can't be accidentally ..."&gt;39361&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Git: Ignore patch related files, so they can't be accidentally committed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This duplicates the changes in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39360" title="SVN: Ignore patch related files, so they can't be accidentally ..."&gt;[39360]&lt;/a&gt; for git.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38727" title="#38727: defect (bug): Modifications to svn:ignore (closed: fixed)"&gt;#38727&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [39361]: Git: Ignore patch related files, so they can't be accidentally ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 25 Nov 2016 04:46:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39361</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39361/1480049183653951</guid>
      <description>&lt;p&gt;
Git: Ignore patch related files, so they can't be accidentally committed.
&lt;/p&gt;
&lt;p&gt;
This duplicates the changes in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39360" title="SVN: Ignore patch related files, so they can't be accidentally ..."&gt;[39360]&lt;/a&gt; for git.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38727" title="#38727: defect (bug): Modifications to svn:ignore (closed: fixed)"&gt;#38727&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38727 (Modifications to svn:ignore) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 25 Nov 2016 04:35:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38727#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38727#comment:2/1480048500949013</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39360" title="SVN: Ignore patch related files, so they can't be accidentally ..."&gt;39360&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
SVN: Ignore patch related files, so they can't be accidentally committed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Ignore &lt;code&gt;*.rej&lt;/code&gt;, &lt;code&gt;*.orig&lt;/code&gt;, &lt;code&gt;*.patch&lt;/code&gt;, and &lt;code&gt;*.diff&lt;/code&gt; files in all directories.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38727" title="#38727: defect (bug): Modifications to svn:ignore (closed: fixed)"&gt;#38727&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39360]: SVN: Ignore patch related files, so they can't be accidentally ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 25 Nov 2016 04:35:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39360</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39360/1480048500470884</guid>
      <description>&lt;p&gt;
SVN: Ignore patch related files, so they can't be accidentally committed.
&lt;/p&gt;
&lt;p&gt;
Ignore &lt;code&gt;*.rej&lt;/code&gt;, &lt;code&gt;*.orig&lt;/code&gt;, &lt;code&gt;*.patch&lt;/code&gt;, and &lt;code&gt;*.diff&lt;/code&gt; files in all directories.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38727" title="#38727: defect (bug): Modifications to svn:ignore (closed: fixed)"&gt;#38727&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38727 (Modifications to svn:ignore) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 25 Nov 2016 04:29:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38727#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38727#comment:1/1480048193901074</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38657 (Shrinkwrap npm dependencies for 4.7) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Nov 2016 04:15:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38657#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38657#comment:8/1480047326219633</guid>
      <description>&lt;p&gt;
There's a bug in npm-shrinkwrap that prevents the current shrinkwrap from being run on Linux platforms. Specifically, fsevents is needed for something (haven't bothered to figure out what) but it's macOS only. On Linux, nothing is available, and shrinkwrap flips out. There have been some attempts to fix it but it pretty much remains broken upstream.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/npm/npm/issues/2679"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/npm/npm/issues/2679&lt;/a&gt;, &lt;a class="ext-link" href="https://github.com/npm/npm/issues/8707"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/npm/npm/issues/8707&lt;/a&gt;, &lt;a class="ext-link" href="https://github.com/npm/npm/issues/8921"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/npm/npm/issues/8921&lt;/a&gt;, &lt;a class="ext-link" href="https://github.com/npm/npm/issues/10768"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/npm/npm/issues/10768&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Possible workaround: &lt;a class="ext-link" href="https://github.com/npm/npm/issues/2679#issuecomment-150084700"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/npm/npm/issues/2679#issuecomment-150084700&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38657 (Shrinkwrap npm dependencies for 4.7) reopened</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Nov 2016 04:07:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38657#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38657#comment:7/1480046852498920</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #38937 (Twenty Seventeen: Specific fonts for Thai font) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Fri, 25 Nov 2016 01:03:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38937#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38937#comment:2/1480035833734077</guid>
      <description>&lt;p&gt;
Patch &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38937/38937.1.diff" title="Attachment '38937.1.diff' in Ticket #38937"&gt;38937.1.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38937/38937.1.diff" title="Download"&gt;​&lt;/a&gt; correctly capitalises &lt;code&gt;Helvetica&lt;/code&gt; and &lt;code&gt;Arial&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38937.1.diff attached to Ticket #38937</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Fri, 25 Nov 2016 01:02:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38937/38937.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38937/38937.1.diff/1480035762952126</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38932 (Add unit (px) to suggested image size in customizer) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Nov 2016 00:59:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38932#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38932#comment:2/1480035556939025</guid>
      <description>&lt;p&gt;
@afercia curiously, would &lt;code&gt;&amp;lt;abbr title="pixels"&amp;gt;px&amp;lt;/abbr&amp;gt;&lt;/code&gt; work? (maybe with an &lt;code&gt;aria-*&lt;/code&gt; attribute?)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38929 (WP_Hook should support filters added manually through `advanced-cache.php`) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Nov 2016 00:47:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38929#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38929#comment:4/1480034853895194</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38929#comment:3" title="Comment 3"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38929#comment:1" title="Comment 1"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
...anyone modifying &lt;code&gt;$wp_filter&lt;/code&gt; directly shouldn't probably be doing so anyway after WordPress loads.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Don't think anybody should be modifying &lt;code&gt;$wp_filter&lt;/code&gt; directly in any case. Do you think it is a good idea to add "Doing it wrong..." somewhere? Perhaps in &lt;code&gt;WP_Hook::build_preinitialized_hooks()&lt;/code&gt; as it exists to fix that "bad behavior".
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't see a huge benefit in doing that, as it'll only get triggered for existing use-cases that had to use that method pre-4.6.
The only case of that that we really care about is when people do that much later in the load process, where &lt;code&gt;add_action()&lt;/code&gt; would've previously been available. It's way too hard to catch that though right now, but will at least throw a PHP Notice now if it's an existing hook (a hook with no filters though would cause a fatal, I'm not convinced that adding extra checks to &lt;code&gt;apply_filters()&lt;/code&gt; or &lt;code&gt;do_action()&lt;/code&gt; to catch that scenario is worth it)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35105 (Specifiy minimum node and npm version in package.json) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 25 Nov 2016 00:41:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35105#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35105#comment:17/1480034491547126</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by netweb. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1480034488004277"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38929 (WP_Hook should support filters added manually through `advanced-cache.php`) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 24 Nov 2016 23:46:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38929#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38929#comment:3/1480031198277213</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38929#comment:1" title="Comment 1"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
...anyone modifying &lt;code&gt;$wp_filter&lt;/code&gt; directly shouldn't probably be doing so anyway after WordPress loads.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Don't think anybody should be modifying &lt;code&gt;$wp_filter&lt;/code&gt; directly in any case. Do you think it is a good idea to add "Doing it wrong..." somewhere? Perhaps in &lt;code&gt;WP_Hook::build_preinitialized_hooks()&lt;/code&gt; as it exists to fix that "bad behavior".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38924 (Getting 'embed_autourls' option still generates a DB query) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 24 Nov 2016 23:28:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38924#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38924#comment:1/1480030103498258</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38936 (Alter Table Always Expects a COLUMN; Crashes on a CONSTRAINT) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 24 Nov 2016 23:04:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38936#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38936#comment:1/1480028678060869</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the bug report, @philsown!
&lt;/p&gt;
&lt;p&gt;
Could you post the CREATE TABLE statement that's causing this?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38929 (WP_Hook should support filters added manually through `advanced-cache.php`) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 24 Nov 2016 23:02:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38929#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38929#comment:2/1480028529924350</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Let's do this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38342 (Quick Draft: Leverage REST API endpoints) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 24 Nov 2016 22:43:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38342#comment:75</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38342#comment:75/1480027419143741</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Couple more issues.
&lt;/p&gt;
&lt;p&gt;
1
I'm not sure the locale in &lt;code&gt;Intl.DateTimeFormat&lt;/code&gt; can be left to &lt;code&gt;undefined&lt;/code&gt;. I live in Italy, but I keep my operating system and browsers in English. Seems there are inconsistencies across browsers, see the screenshot below.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/6IGfEVZaln.jpg"&gt;&lt;img src="https://cldup.com/6IGfEVZaln.jpg" alt="https://cldup.com/6IGfEVZaln.jpg" crossorigin="anonymous" title="https://cldup.com/6IGfEVZaln.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Notice the OS default language is set to a "generic" English (no en-GB or en-US) and Chrome on the left displays an en-GB date format while Firefox on the right an en-US one. I have to manually change my OS language to en-US to get the same behaviour in both browsers. Besides the inconsistency, seems setting the locale to &lt;code&gt;undefined&lt;/code&gt; makes the date format dependent on the OS language, at least on macOS. This may vary on other platforms.
&lt;/p&gt;
&lt;p&gt;
By the way, the main issue is that I've set the admin UI in French :) Regardless of the OS or browser language, the date should be displayed in the format of the language set in the user profile.
&lt;/p&gt;
&lt;p&gt;
2
When quickly clicking twice the "Save Draft" button, I get two new drafts. While the list below the form shows just one new draft, on the Posts &amp;gt; Drafts screen I have two new ones. This is probably because the button doesn't get disabled when submitting the form as in the previous AJAX implementation.
Note: when the form gets re-rendered, focus should be moved to the title field.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38939 (Twenty Seventeen: input backgrounds are only styled for webkit browsers) created</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Thu, 24 Nov 2016 22:21:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38939</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38939/1480026097778780</guid>
      <description>&lt;p&gt;
The styles for inputs are all styled with &lt;code&gt;background-image: -webkit-linear-gradient(rgba(255, 255, 255, 0), rgba(255, 255, 255, 0))&lt;/code&gt;, this means there are situations where you may end up with dark text on dark backgrounds, for example when working with high contrast computer setups.
&lt;/p&gt;
&lt;p&gt;
We need a fallback for non-webkit browsers here, Twenty Sixteen does this by defining &lt;code&gt;background: #f7f7f7&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Originally reported by @schamane in &lt;a class="ext-link" href="https://wordpress.org/support/topic/twentyseventeen-input-fields-unreadable-on-reversed-screens/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/twentyseventeen-input-fields-unreadable-on-reversed-screens/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Changeset [39359]: Trunk is really 4.8-alpha now. </title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 24 Nov 2016 21:55:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39359</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39359/1480024517990867</guid>
      <description>&lt;p&gt;
Trunk is really 4.8-alpha now.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38657 (Shrinkwrap npm dependencies for 4.7) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 24 Nov 2016 21:43:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38657#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38657#comment:6/1480023787776953</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39358" title="Build/Test Tools: Add npm-shrinkwrap.json to 4.7.
By shrinkwraping ..."&gt;39358&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Build/Test Tools: Add npm-shrinkwrap.json to 4.7.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
By shrinkwraping our dependencies, the same versions of everything will be installed no matter what rules the dependency package.json has specified.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38657" title="#38657: task (blessed): Shrinkwrap npm dependencies for 4.7 (closed: fixed)"&gt;#38657&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39358]: Build/Test Tools: Add npm-shrinkwrap.json to 4.7.  By shrinkwraping ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 24 Nov 2016 21:43:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39358</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39358/1480023787234716</guid>
      <description>&lt;p&gt;
Build/Test Tools: Add npm-shrinkwrap.json to 4.7.
&lt;/p&gt;
&lt;p&gt;
By shrinkwraping our dependencies, the same versions of everything will be installed no matter what rules the dependency package.json has specified.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38657" title="#38657: task (blessed): Shrinkwrap npm dependencies for 4.7 (closed: fixed)"&gt;#38657&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [39357]: Trunk is now 4.8-alpha. </title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 24 Nov 2016 21:37:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39357</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39357/1480023467989790</guid>
      <description>&lt;p&gt;
Trunk is now 4.8-alpha.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38657 (Shrinkwrap npm dependencies for 4.7) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 24 Nov 2016 21:35:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38657#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38657#comment:5/1480023346593719</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by ocean90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1480023343004232"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [39356]: Branch 4.7.</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 24 Nov 2016 21:31:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39356</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39356/1480023119868123</guid>
      <description>&lt;p&gt;
Branch 4.7.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38930 (Warning Raised when checking option exists) updated</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Thu, 24 Nov 2016 19:49:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38930#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38930#comment:4/1480016983386099</guid>
      <description>&lt;p&gt;
Added a patch to pass the 3rd arg to the filter. This arg is "Was the default value passed by the caller" which is used to choose if the &lt;code&gt;register_setting&lt;/code&gt; default should override the the &lt;code&gt;false&lt;/code&gt; default. In this case, like &lt;code&gt;update_option&lt;/code&gt;, it should.
&lt;/p&gt;
&lt;p&gt;
I added a unit test for this rather specific case where &lt;code&gt;alloptions&lt;/code&gt; is not loaded, which before the patch will fail from a notice.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38930.diff attached to Ticket #38930</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Thu, 24 Nov 2016 19:48:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38930/38930.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38930/38930.diff/1480016894494359</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21668 (WordPress does not save jpeg as progressive jpeg) updated</title>
      
        <dc:creator>kuzvac</dc:creator>

      <pubDate>Thu, 24 Nov 2016 19:24:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21668#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21668#comment:42/1480015490103398</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21668#comment:41" title="Comment 41"&gt;markoheijnen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Patch needs a refresh.
&lt;/p&gt;
&lt;p&gt;
@kuzvac It only requires one of the two. So if someone doesn't has Imagick, GD will be used. So we are fine.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ok, thanks for clarifying.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21668 (WordPress does not save jpeg as progressive jpeg) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Thu, 24 Nov 2016 19:19:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21668#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21668#comment:41/1480015158824847</guid>
      <description>&lt;p&gt;
Patch needs a refresh.
&lt;/p&gt;
&lt;p&gt;
@kuzvac It only requires one of the two. So if someone doesn't has Imagick, GD will be used. So we are fine.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38926 (REST API: Validate thumbnail ID in response) updated</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Thu, 24 Nov 2016 19:09:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38926#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38926#comment:2/1480014560917872</guid>
      <description>&lt;p&gt;
Good question - I'm not totally sure of the behaviour too. Perhaps we could not link to it if it's not found, but still put the value in the response. As WordPress actually just lets you store any ID in the field, it's plausible that people could be using it for something other than an attachment ID I guess.
&lt;/p&gt;
&lt;p&gt;
This is part of a broader question that has come up before: what do we do with data that is already stored, that is technically not valid. Ignoring the data from the REST API output also makes round-trips of that data very difficult, as we have to make a lot of exceptions on data validation.
&lt;/p&gt;
&lt;p&gt;
I'm tempted to err on the side of a clean API, rather than misconfigured data, though that's probably a controversial view. If there's an invalid ID stored in thumbnail_id, the API would output it as &lt;code&gt;null&lt;/code&gt;, if you updated the resource, it would then set the thumbnail ID to &lt;code&gt;null&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37056 (paginate_links should be a method on WP_Query) updated</title>
      
        <dc:creator>xavivars</dc:creator>

      <pubDate>Thu, 24 Nov 2016 19:02:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37056#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37056#comment:1/1480014159991165</guid>
      <description>&lt;p&gt;
I'd even go further, and have a function (or static method) so you provide the the base URL, the current and total pages, and other stuff like the format to use on the pages,... and then have that method used by the current &lt;code&gt;paginate_links()&lt;/code&gt; method (to keep backwards compatiblity).
&lt;/p&gt;
&lt;p&gt;
That would make it much easier to reuse the logic of the pagination in other places (like plugins, or &lt;a class="ext-link" href="https://github.com/timber/timber/blob/master/lib/Pagination.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Timber&lt;/a&gt;) relying on core code, so no more ugly code needs to be written to simulate that behaviour.
&lt;/p&gt;
&lt;p&gt;
That would also make it much easier to unit test (no need to setup too much WordPress global stuff, but relying on input parameters only.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21668 (WordPress does not save jpeg as progressive jpeg) updated</title>
      
        <dc:creator>kuzvac</dc:creator>

      <pubDate>Thu, 24 Nov 2016 19:00:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21668#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21668#comment:40/1480014023485963</guid>
      <description>&lt;p&gt;
I think the final patch will not be submitted, because it's required Imagick &amp;amp; GD work. But on in cheap hosting Imagick can not be installed.
This is my opinion
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38915 (Improvements to password reset) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 24 Nov 2016 18:47:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38915#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38915#comment:3/1480013260739998</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #19629,​38938 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 24 Nov 2016 18:44:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=19629%2C38938</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=19629%2C38938/1480013072466608</guid>
      <description>duplicate: &lt;p&gt;
Hey there,
&lt;/p&gt;
&lt;p&gt;
Thanks for opening a ticket! We're already tracking this enhancement in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19629" title="#19629: task (blessed): return option for media_sideload_image (closed: fixed)"&gt;#19629&lt;/a&gt;. Would you mind checking out the current patch and share yours there?
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>wordpress_38938.diff attached to Ticket #38938</title>
      
        <dc:creator>dotancohen</dc:creator>

      <pubDate>Thu, 24 Nov 2016 18:39:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38938/wordpress_38938.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38938/wordpress_38938.diff/1480012759273089</guid>
      <description>&lt;p&gt;
Patch to optionally return the ID of a sideloaded media file.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21668 (WordPress does not save jpeg as progressive jpeg) updated</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Thu, 24 Nov 2016 18:35:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21668#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21668#comment:39/1480012544640422</guid>
      <description>&lt;p&gt;
Currently this ticket is lacking a finalized patch, so it is not being considered for any release. If one was made, the earliest it could go in would be 4.8 as 4.7 is well beyond enhancement window.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38938 (WP API does not expose the ID of sideloaded media.) created</title>
      
        <dc:creator>dotancohen</dc:creator>

      <pubDate>Thu, 24 Nov 2016 18:31:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38938</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38938/1480012297698653</guid>
      <description>&lt;p&gt;
Retrieving the ID of sideloaded media requires horrible workarounds:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://wordpress.stackexchange.com/questions/46363/get-image-id-after-uploading-with-media-sideload-image"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.stackexchange.com/questions/46363/get-image-id-after-uploading-with-media-sideload-image&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I will attach a patch to this issue which makes life easier for WP Theme and Plugin developers who need this feature.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38937 (Twenty Seventeen: Specific fonts for Thai font) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Thu, 24 Nov 2016 18:30:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38937#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38937#comment:1/1480012203515093</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
corresponding patch
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38937.diff attached to Ticket #38937</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Thu, 24 Nov 2016 18:29:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38937/38937.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38937/38937.diff/1480012161345612</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38932 (Add unit (px) to suggested image size in customizer) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 24 Nov 2016 18:16:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38932#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38932#comment:1/1480011377271014</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
From an accessibility perspective, worth noting all similar abbreviations should be avoided or expanded with the full form. For example, the suggested dimensions (including the missing "px") gets read out by a screen reader as:
&lt;code&gt;one two zero zero times two eight zero pee ex&lt;/code&gt;
Numbers should be properly formatted too.
Recently, in another project, I've changed a similar string in "2000 by 1200 pixels" which is slightly better.
&lt;/p&gt;
&lt;p&gt;
Same for the file size: &lt;code&gt;one gee bee&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
By the way, this applies to all the similar cases in core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38937 (Twenty Seventeen: Specific fonts for Thai font) created</title>
      
        <dc:creator>Imnok</dc:creator>

      <pubDate>Thu, 24 Nov 2016 17:40:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38937</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38937/1480009206130780</guid>
      <description>&lt;p&gt;
Hi there, Twenty Seventeen theme is very cool! I really love it.
&lt;/p&gt;
&lt;p&gt;
To make it better with Thai font, I think we can add specific fonts as well.
Here is my suggestion.
&lt;/p&gt;
&lt;pre class="wiki"&gt;/* Typography for Thai Font */
html[lang="th"] h1,
html[lang="th"] h2,
html[lang="th"] h3,
html[lang="th"] h4,
html[lang="th"] h5,
html[lang="th"] h6 {
line-height: 1.65;
font-family: "Sukhumvit Set", "Helvetica Neue", helvetica, arial, sans-serif;
}
html[lang="th"] body,
html[lang="th"] button,
html[lang="th"] input,
html[lang="th"] select,
html[lang="th"] textarea {
line-height: 1.8;
font-family: "Helvetica Neue", helvetica, arial, sans-serif;
}
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38936 (Alter Table Always Expects a COLUMN; Crashes on a CONSTRAINT) created</title>
      
        <dc:creator>philsown</dc:creator>

      <pubDate>Thu, 24 Nov 2016 17:25:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38936</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38936/1480008313833349</guid>
      <description>&lt;p&gt;
Hello,
&lt;/p&gt;
&lt;p&gt;
I'm attempting to activate a plugin I'm developing. The database creation scripts have CONSTRAINTs on them. When I attempt to reactivate, I'm getting this error:
&lt;/p&gt;
&lt;pre class="wiki"&gt;WordPress database error: [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'CONSTRAINT `mytable_mycol_foreign` FOREIGN KEY (`mycol' at line 1]
ALTER TABLE wp_mytable ADD COLUMN CONSTRAINT `mytable_mycol_foreign` FOREIGN KEY (`mycol`) REFERENCES `myothertable` (`myothercol`)
&lt;/pre&gt;&lt;p&gt;
As you can see the SQL error lies in &lt;code&gt;ADD COLUMN CONSTRAINT&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This is being generated in &lt;code&gt;wp-admin/includes/upgrade.php&lt;/code&gt; around line 2392
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="c1"&gt;// For every remaining field specified for the table.
&lt;/span&gt;&lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$cfields&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$fieldname&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$fielddef&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Push a query line into $cqueries that adds the field to that table.
&lt;/span&gt;        &lt;span class="nv"&gt;$cqueries&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"ALTER TABLE &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; ADD COLUMN &lt;/span&gt;&lt;span class="si"&gt;$fielddef&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;$for_update&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;'.'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$fieldname&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Added column '&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$table&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;'.'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nv"&gt;$fieldname&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
&lt;code&gt;ADD COLUMN&lt;/code&gt; is hardcoded and is creating this SQL error. I googled for a solution but didn't find anything.
&lt;/p&gt;
&lt;p&gt;
I've tried it with the constraints being part of the full table creation statement, and also as a stand alone statement, with the same results.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38935 (Proposition to add the theme mod name as a param to the dynamic ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 24 Nov 2016 17:06:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38935#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38935#comment:1/1480007213267801</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38014 (blank /wp-admin/index.php after upgrade from 4.5.x, missing Save ...) updated</title>
      
        <dc:creator>scaturan</dc:creator>

      <pubDate>Thu, 24 Nov 2016 17:06:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38014#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38014#comment:14/1480007167020614</guid>
      <description>&lt;p&gt;
the problem still exist on WordPress 4.7-RC1 both under PHP 5.6 and 7.0.13 -- the remedy is the same as I noted earlier.
&lt;/p&gt;
&lt;p&gt;
I also noticed that opening /wp-admin/update-core.php renders a blank page alongside a 500 Internal Server Error response status, but after a browser REFRESH, a 200 response status is sent and the page renders correctly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38935.patch attached to Ticket #38935</title>
      
        <dc:creator>nikeo</dc:creator>

      <pubDate>Thu, 24 Nov 2016 15:08:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38935/38935.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38935/38935.patch/1480000104527183</guid>
      <description>&lt;p&gt;
add the theme mod name to the dynamic theme_mod_{$name} filters
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38933 (Document wp-admin/js/editor.js) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 24 Nov 2016 15:08:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38933#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38933#comment:1/1480000084273819</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38935 (Proposition to add the theme mod name as a param to the dynamic ...) created</title>
      
        <dc:creator>nikeo</dc:creator>

      <pubDate>Thu, 24 Nov 2016 15:07:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38935</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38935/1480000040218422</guid>
      <description>&lt;p&gt;
Hi !
It would be convenient to be able to target a specific theme mod name when applying the same callback to all theme mods with &lt;code&gt;add_filter( "theme_mod_{$name}", '_my_generic_callback' )&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Right now we need to extract the theme mod with a code looking like this :
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;_my_generic_callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$theme_mod_value&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;//extract theme mod name
&lt;/span&gt;  &lt;span class="nv"&gt;$_filter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;current_filter&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nv"&gt;$_ptrn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'theme_mod_'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$_ptrn&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$_filter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_ptrn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$theme_mod_value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;$_mod_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_ptrn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="nv"&gt;$_filter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="c1"&gt;//do things now
&lt;/span&gt;  &lt;span class="c1"&gt;// ...
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>missing_px.jpg attached to Ticket #38932</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Thu, 24 Nov 2016 14:49:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38932/missing_px.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38932/missing_px.jpg/1479998974251793</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38934 (Bug with Category selector view when using child categories) created</title>
      
        <dc:creator>Venutius</dc:creator>

      <pubDate>Thu, 24 Nov 2016 14:42:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38934</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38934/1479998528202868</guid>
      <description>&lt;p&gt;
There seems to be a bug when editing a page and using child categories.
&lt;/p&gt;
&lt;p&gt;
Lets say I have a category with ten child categories.
&lt;/p&gt;
&lt;p&gt;
If I add on of those children to the page and then save the page, when I come back to look at those categories the parent child relationship is lost in the display. What I mean by this is that the master category will noly display one child (the one that was picked for the page) the other children are now displayed as if they were independent top level categories.
&lt;/p&gt;
&lt;p&gt;
This makes it very difficult to select the right categories for a post when you come back to edit it.
&lt;/p&gt;
&lt;p&gt;
The workaround is to deselect all categories and save the page. The parent child relationship will then re-establish itself and the categories can be selected.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>editorjs.diff attached to Ticket #38933</title>
      
        <dc:creator>terwdan</dc:creator>

      <pubDate>Thu, 24 Nov 2016 14:28:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38933/editorjs.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38933/editorjs.diff/1479997726583976</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38933 (Document wp-admin/js/editor.js) created</title>
      
        <dc:creator>terwdan</dc:creator>

      <pubDate>Thu, 24 Nov 2016 14:28:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38933</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38933/1479997708061157</guid>
      <description>&lt;p&gt;
Documented the wp-admin/js/editor.js file.
&lt;/p&gt;
&lt;p&gt;
Please also give props to &lt;a class="ext-link" href="https://profiles.wordpress.org/ireneyoast"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;ireneyoast&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38932 (Add unit (px) to suggested image size in customizer) created</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Thu, 24 Nov 2016 14:07:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38932</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38932/1479996439057895</guid>
      <description>&lt;p&gt;
When you go to Customizer &amp;gt; Header Media &amp;gt; Add new image
&lt;/p&gt;
&lt;p&gt;
you see a notice about image size like:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Suggested image dimensions: 2000 × 1200&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
It should have a unit
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Suggested image dimensions: 2000 × 1200 px&lt;/strong&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38930 (Warning Raised when checking option exists) updated</title>
      
        <dc:creator>lucasstark</dc:creator>

      <pubDate>Thu, 24 Nov 2016 13:43:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38930#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38930#comment:3/1479995036280044</guid>
      <description>&lt;p&gt;
The warning is coming from filter_default_option yes, since it get's called though the applying of the filter, default_option_WPLANG
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38930 (Warning Raised when checking option exists) updated</title>
      
        <dc:creator>lucasstark</dc:creator>

      <pubDate>Thu, 24 Nov 2016 13:42:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38930#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38930#comment:2/1479994952585575</guid>
      <description>&lt;p&gt;
I am using the REST API and a custom endpoint to allow users to create / manage sites inside of a multisite.   Inside of my sites custom endpoint I have a create method, where I call the following:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$current_site_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wpmu_create_blog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$prepared_data&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;domain&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$prepared_data&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$prepared_data&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;get_current_user_id&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'public'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
When I call that function it raises the warning when the filter "default_option_WPLANG" is applied.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38931 (`update_option()` race condition with non-autoloaded options) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Nov 2016 13:39:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38931#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38931#comment:1/1479994756783857</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38930 (Warning Raised when checking option exists) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Nov 2016 13:38:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38930#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38930#comment:1/1479994730972370</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Pushing into 4.7 for review, as the 3rd parameter was added in 4.7 (on 3 of the 5 instances of the filter) &amp;amp; the warning may be coming from &lt;code&gt;filter_default_option()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
@lucasstark Can you give any more information over what option calls are triggering it for you?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38931.diff attached to Ticket #38931</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Nov 2016 13:32:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38931/38931.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38931/38931.diff/1479994361857077</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38931 (`update_option()` race condition with non-autoloaded options) created</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Nov 2016 13:31:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38931</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38931/1479994315515359</guid>
      <description>&lt;p&gt;
Starting back in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/25664" title="When queries fail in option functions, bail before setting cache.
 ..."&gt;[25664]&lt;/a&gt; there's a race condition with object caches where &lt;code&gt;get_option()&lt;/code&gt; will return a value, but &lt;code&gt;update_option()&lt;/code&gt; will refuse to update it.
This is kind-of-related to &lt;code&gt;alloptions&lt;/code&gt;, but affects non-autoloaded options (which are not in &lt;code&gt;alloptions&lt;/code&gt;, but in their own cache).
&lt;/p&gt;
&lt;p&gt;
Consider the following scenario:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Process 1: Fetch option_a. Fills local cache.
Process 2: Update option_a.
Process 1: Delete option_a.
Process 2: Update DB.
Process 1: Delete from DB. Delete from remote cache.
Process 2: Update remote cache.
...
Process 5: Fetch option_a. Fills local cache from remote cache.
Process 5: Update option_a.  FAIL. DB doesn't have option. abort. cache not updated.
...
(repeat process 5 above many times)
Process 10: Get option_a (Still the value that Process 2 set in cache, even though it's not in the DB)
Process 10: Update option_a (Doing the same as Process 5 now). FAIL.
&lt;/pre&gt;&lt;p&gt;
Seems very racey and unlikely, but I've seen it happen on WordPress.org at least twice in the last few weeks when we update Jetpack (which makes heavy usage of the options table, and is loaded on most WordPress.org requests).
&lt;/p&gt;
&lt;p&gt;
When it happens, &lt;code&gt;get_option()&lt;/code&gt; will continue to return a stale value from the cache that no longer exists in the DB and &lt;code&gt;update_option()&lt;/code&gt; will fail to update the option as long as it exists in cache.
If a plugin is performing an operation to update the stale option often, it can cause a huge load spike on the database server of never-ending failing &lt;code&gt;UPDATE&lt;/code&gt; queries.
The only way to 'fix' it is to create the DB row manually, or flush the object cache key.
&lt;/p&gt;
&lt;p&gt;
The patch attached attempts to perform an &lt;code&gt;add_option()&lt;/code&gt; in the case of the &lt;code&gt;update_option()&lt;/code&gt; DB query failing.
This isn't exactly a new behaviour for options - &lt;code&gt;add_option()&lt;/code&gt; will effectively perform an &lt;code&gt;update_option()&lt;/code&gt; in the event the option you're trying to add already exists (through it using &lt;code&gt;INSERT .. ON DUPLICATE KEY UPDATE..&lt;/code&gt;), doing it in reverse doesn't seem that out of the question.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38930 (Warning Raised when checking option exists) created</title>
      
        <dc:creator>lucasstark</dc:creator>

      <pubDate>Thu, 24 Nov 2016 12:51:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38930</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38930/1479991904474795</guid>
      <description>&lt;p&gt;
A warning will be raised inside of option.php, check_default_option when the following code is called on line 420.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="c1"&gt;// Make sure the option doesn't already exist. We can check the 'notoptions' cache before we ask for a db query
&lt;/span&gt;        &lt;span class="nv"&gt;$notoptions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wp_cache_get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'notoptions'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'options'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;is_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$notoptions&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$notoptions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$option&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="sd"&gt;/** This filter is documented in wp-includes/option.php */&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;apply_filters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'default_option_'&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$option&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$option&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;get_option&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$option&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
                        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The default_option filter expects three arguments, only two are passed here.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38929 (WP_Hook should support filters added manually through `advanced-cache.php`) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Nov 2016 12:38:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38929#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38929#comment:1/1479991119624382</guid>
      <description>&lt;p&gt;
As noted in slack, I'll also mention that there's the possibility we could've simply used a new variable &lt;code&gt;$wp_filter_hooks&lt;/code&gt; (for example) and migrated added hooks over as needed (instead of calling &lt;code&gt;WP_Hook::build_preinitialized_hooks()&lt;/code&gt;)  - this would've have the ability of avoiding any lost hooks and fatal errors, but while having all our public API's continue to work.
&lt;/p&gt;
&lt;p&gt;
I can't really see any downside to that, but given the lack of bug reports during 4.7, and the ability to support the most common example I can think of (Batcache) through &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38929/38929.diff" title="Attachment '38929.diff' in Ticket #38929"&gt;38929.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38929/38929.diff" title="Download"&gt;​&lt;/a&gt; I don't see the need to explore that option further at this point - anyone modifying &lt;code&gt;$wp_filter&lt;/code&gt; directly shouldn't probably be doing so anyway after WordPress loads.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>test-wp-hook.php attached to Ticket #38929</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Nov 2016 12:30:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38929/test-wp-hook.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38929/test-wp-hook.php/1479990619736590</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>38929.diff attached to Ticket #38929</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Nov 2016 12:27:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38929/38929.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38929/38929.diff/1479990465186783</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38929 (WP_Hook should support filters added manually through `advanced-cache.php`) created</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Nov 2016 12:25:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38929</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38929/1479990336665049</guid>
      <description>&lt;p&gt;
As noted in &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1479936387003877"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt;, with &lt;code&gt;WP_Hook&lt;/code&gt; in 4.7, we've seemingly glossed over the impact of these changes upon &lt;code&gt;advanced-cache.php&lt;/code&gt; dropins.
Prior to &lt;code&gt;WP_Hook&lt;/code&gt; being committed, we'd attempted to work around filter additions from &lt;code&gt;advanced-cache.php&lt;/code&gt; with some funky code which we eventually reverted in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38251" title="Bootstrap/Load: Revert Plugin Global restoration around ..."&gt;[38251]&lt;/a&gt; - we didn't *really* need it at the time, but with &lt;code&gt;WP_Hook&lt;/code&gt; additions we're now in the scenario where something like that IS needed.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;WP_Hook&lt;/code&gt; includes the ability to upgrade a non-wp_hook &lt;code&gt;$wp_filter&lt;/code&gt; array to an array of &lt;code&gt;WP_Hooks&lt;/code&gt; to account for cases where filters are added before &lt;code&gt;plugins.php&lt;/code&gt; / &lt;code&gt;WP_Hook&lt;/code&gt; loads.
&lt;/p&gt;
&lt;p&gt;
With the upgrade to 4.7, any user who is running an object cache which performs direct &lt;code&gt;$wp_filter&lt;/code&gt; modifications is likely to cause a fatal error, unless they've updated the cache first and done something like Batcache: &lt;a class="ext-link" href="https://github.com/Automattic/batcache/pull/76/files"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/Automattic/batcache/pull/76/files&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
However, thanks to the upgrade code, we can simply call it again after any non-code files are included - thankfully, the only user file which this could apply to is &lt;code&gt;advanced-cache.php&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Attached is a 4 line patch (&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38929/38929.diff" title="Attachment '38929.diff' in Ticket #38929"&gt;38929.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38929/38929.diff" title="Download"&gt;​&lt;/a&gt;) which upgrades the &lt;code&gt;$wp_filter&lt;/code&gt; modifications so that a older &lt;code&gt;advanced-cache.php&lt;/code&gt; is compatible with 4.7+.
&lt;/p&gt;
&lt;p&gt;
At this point of the pageload, most WordPress installs will have *zero* filters registered, unless something such as WP-CLI is in use, or a filter was added before WordPress loaded, so the performance of this is a no-op for most people.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
It's worth noting that there exist some incompatibilities with &lt;code&gt;WP_Hook&lt;/code&gt;, in that any plugin which manually alters &lt;code&gt;$wp_filter&lt;/code&gt; will at best cause a PHP notice, and at worst, cause a PHP fatal error (although it's also still possible to manually manipulate &lt;code&gt;$wp_filter&lt;/code&gt; if you must, by setting entire arrays rather than modifying it - see below)
&lt;/p&gt;
&lt;p&gt;
One of these cases affects &lt;code&gt;advanced-cache.php&lt;/code&gt; - If something has added a hook, and &lt;code&gt;advanced-cache.php&lt;/code&gt; attempts to also add a hook &lt;em&gt;through manual &lt;code&gt;$wp_filter&lt;/code&gt; modification&lt;/em&gt; it'll cause a PHP notice and the filter addition will fail - I feel that this is an edgecase enough not to need to support.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38929/test-wp-hook.php" title="Attachment 'test-wp-hook.php' in Ticket #38929"&gt;test-wp-hook.php&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38929/test-wp-hook.php" title="Download"&gt;​&lt;/a&gt; is a stand-alone-ish script to obviously show these edge cases, but also shows that the diff in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38929/38929.diff" title="Attachment '38929.diff' in Ticket #38929"&gt;38929.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38929/38929.diff" title="Download"&gt;​&lt;/a&gt; should work as expected, if you discount the PHP notice possibility and the hopefully unlikely fatal.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38928 (Default theme content - problem with slugs) created</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Thu, 24 Nov 2016 12:08:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38928</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38928/1479989287561432</guid>
      <description>&lt;p&gt;
I installed latest &lt;code&gt;RC1-39355&lt;/code&gt;, activated Twenty Seventeen and went to Customizer.
&lt;/p&gt;
&lt;p&gt;
There were 5 pages created, but with number in slug, for example &lt;code&gt;contact-2&lt;/code&gt;, &lt;code&gt;blog-2&lt;/code&gt;, etc. It is a fresh install and I did not have any pages created before. For every created page I have 3 records in database:
&lt;/p&gt;
&lt;pre class="wiki"&gt;- page: auto-draft &amp;gt; a-homepage-section
- page: publish &amp;gt; a-homepage-section-2
- revision: inherit &amp;gt; 20-revision-v1
&lt;/pre&gt;&lt;p&gt;
I do not think it is necessary? When default page during WP installation is created, there is only one &lt;code&gt;publish&lt;/code&gt; record in database.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38920 (Use REST API for link query in editor) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 24 Nov 2016 12:06:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38920#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38920#comment:4/1479989205767574</guid>
      <description>&lt;p&gt;
I'm totally new to the REST API so I may be wrong, but maybe one thing to consider when using the API in core is that it returns by default all the post fields including the content. With very long posts the response could be huge, while here we need just the ID, title, permalink, and date (the "info").
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38927 (Twenty Seventeen: site navigation to position:fixed too early on front ...) created</title>
      
        <dc:creator>LittleBigThing</dc:creator>

      <pubDate>Thu, 24 Nov 2016 11:49:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38927</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38927/1479988157590888</guid>
      <description>&lt;p&gt;
Twenty Seventeen uses &lt;code&gt;position: fixed&lt;/code&gt; for the main-navigation when the header image/video is scrolled by on larger screens. The fixed position is set by adding &lt;code&gt;.site-navigation-fixed&lt;/code&gt; to the div &lt;code&gt;.navigation-top&lt;/code&gt; using JS. All working smooth, except on the front/blog page when no header image/video is set.
&lt;/p&gt;
&lt;p&gt;
The class &lt;code&gt;site-navigation-fixed&lt;/code&gt;is set based on the offset of the navigation (&lt;code&gt;headerOffset&lt;/code&gt;) in assets/js/global.js:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( isFrontPage &amp;amp;&amp;amp; $customHeaderImage.length ) {
	headerOffset = $customHeader.innerHeight() - navigationOuterHeight;
} else {
	headerOffset = $customHeader.innerHeight();
}
&lt;/pre&gt;&lt;p&gt;
&lt;code&gt;$customHeaderImage.length&lt;/code&gt;is never 0 since there is always a &lt;code&gt;div.custom-header-image&lt;/code&gt;, even if there is no custom header is set (see template-parts/header/header-image.php).
&lt;/p&gt;
&lt;p&gt;
IMHO, the cleanest fix would be to avoid having a &lt;code&gt;div.custum-header-image&lt;/code&gt; when there is no header image/video set. This is achieved by adding a check in template-parts/header/header-image.php before outputting &lt;code&gt;div.custum-header-image&lt;/code&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;?php if ( has_header_image() || has_header_video() ) : ?&amp;gt;
	&amp;lt;div class="custom-header-image"&amp;gt;
		&amp;lt;?php the_custom_header_markup(); ?&amp;gt;
	&amp;lt;/div&amp;gt;
&amp;lt;?php endif; ?&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Another option would be to check whether &lt;code&gt;div.custum-header-image&lt;/code&gt; is empty based on its html content (including some trimming): &lt;code&gt;$.trim($customHeaderImage.html())&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
So something like this in assets/js/global.js:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( isFrontPage &amp;amp;&amp;amp; $.trim($customHeaderImage.html()) ) {
	headerOffset = $customHeader.innerHeight() - navigationOuterHeight;
} else {
	headerOffset = $customHeader.innerHeight();
}
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38342 (Quick Draft: Leverage REST API endpoints) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 24 Nov 2016 11:35:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38342#comment:74</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38342#comment:74/1479987318548672</guid>
      <description>&lt;p&gt;
Hello everyone :)
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38342#comment:68" title="Comment 68"&gt;adamsilverstein&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Added calls to wp.a11y.speak() for success and failure when adding a draft. (not sure why but I didn't hear failures in voiceover/chrome although the code executed).
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
That's probably because of this bug: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36853" title="#36853: defect (bug): Safari and VoiceOver don't announce repeated, identical, aria live messages (closed: fixed)"&gt;#36853&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Also, I'd recommend to use the &lt;code&gt;assertive&lt;/code&gt; parameter when calling &lt;code&gt;wp.a11y.speak()&lt;/code&gt;, this way the success/error messages will be announced immediately, without waiting for the screen reader to finish what it's currently reading out.
&lt;/p&gt;
&lt;p&gt;
I'd suggest to review a bit the error messages too. Currently, the visible ones are based on a try/catch and when there is a response that returns an error the message is:
1 - "Content, title, and excerpt are empty."
when there is no response:
2 - "An error has occurred. Please reload the page and try again."
&lt;/p&gt;
&lt;p&gt;
Instead, the audible error message is always the same:
3 - "An error has occurred. Please reload the page and try again."
&lt;/p&gt;
&lt;p&gt;
About 1, there's no "excerpt" field here. I see the API uses &lt;code&gt;wp_insert_post()&lt;/code&gt; but the message is not appropriate in this case.
&lt;/p&gt;
&lt;p&gt;
About 3, not sure why it should be different from the visual one. I'd say it should be paired with the visual messages to distinguish the two cases.
&lt;/p&gt;
&lt;p&gt;
Other quirks noticed about error handling:
&lt;/p&gt;
&lt;p&gt;
1
after a draft is created successfully:
leave empty the form and submit again
no error message is displayed
&lt;/p&gt;
&lt;p&gt;
2
refresh the page
leave empty the form and submit again
the error message is correctly displayed
now fill the form fields and submit
the new draft is correctly created but the error message is still displayed
&lt;/p&gt;
&lt;p&gt;
3
the error notice is displayed with the wrong colors, it currently uses a wrong CSS class &lt;code&gt;notice-info&lt;/code&gt; should be &lt;code&gt;notice-error&lt;/code&gt; instead
&lt;/p&gt;
&lt;p&gt;
Lastly, I'd consider to avoid inline styles e.g. &lt;code&gt;style="display: none;"&lt;/code&gt;, and use the CSS class &lt;code&gt;hidden&lt;/code&gt; when possible.
&lt;/p&gt;
&lt;p&gt;
I'm also noticing a couple more things that should be probably improved about date formatting and doubled entries, will try to post later after some more testing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38926 (REST API: Validate thumbnail ID in response) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Thu, 24 Nov 2016 10:45:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38926#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38926#comment:1/1479984327391044</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38926 (REST API: Validate thumbnail ID in response) created</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Thu, 24 Nov 2016 10:42:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38926</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38926/1479984128192691</guid>
      <description>&lt;p&gt;
I'm not sure if this is expected or not, but I'll report it because it seems unexpected to me.
&lt;/p&gt;
&lt;p&gt;
Maybe this is also not really the problem of the REST API, but it affects it regardless.
&lt;/p&gt;
&lt;p&gt;
If the post has a thumbnail ID that is invalid (e.g. the post was imported with invalid IDs), it is still returned by the API. If linked resources are embedded, there will be a 404 error inside the response.
&lt;/p&gt;
&lt;p&gt;
Of course when someone uses the API, they should check for errors in the embeds, but it would be nice if linked resources don't 404.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;has_post_thumbnail&lt;/code&gt; doesn't seem to check this either...
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21668 (WordPress does not save jpeg as progressive jpeg) updated</title>
      
        <dc:creator>prasad-nevase</dc:creator>

      <pubDate>Thu, 24 Nov 2016 10:04:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21668#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21668#comment:38/1479981856275591</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21668#comment:37" title="Comment 37"&gt;markoheijnen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Let's add this early in for 4.6. I will do some more testing on the current patch in the meanwhile.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This will be very interesting and helpful feature. I didn't find this in 4.6. As WordPress 4.7 RC is already out, could someone please confirm tentatively when this would be included in core?
&lt;/p&gt;
&lt;p&gt;
Thanks in advance!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38921 (Defining filter pre_get_table_charset causes errors) updated</title>
      
        <dc:creator>cjbj</dc:creator>

      <pubDate>Thu, 24 Nov 2016 09:20:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38921#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38921#comment:2/1479979204595413</guid>
      <description>&lt;p&gt;
I can confirm this bug. We discussed it in more detail on wpse: &lt;a class="ext-link" href="http://wordpress.stackexchange.com/q/247109/75495"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.stackexchange.com/q/247109/75495&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>17817.27.diff attached to Ticket #17817</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Nov 2016 08:16:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17817/17817.27.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17817/17817.27.diff/1479975392605935</guid>
      <description>&lt;p&gt;
Upgrade filters added manually in advanced-cache.php
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>0001-Support-override-of-depth-constraint-on-reply-link.patch attached to Ticket #38925</title>
      
        <dc:creator>TravisR</dc:creator>

      <pubDate>Thu, 24 Nov 2016 06:42:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38925/0001-Support-override-of-depth-constraint-on-reply-link.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38925/0001-Support-override-of-depth-constraint-on-reply-link.patch/1479969767332937</guid>
      <description>&lt;p&gt;
git patch for the change
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38925 (Allow override of depth limits on comment reply link) created</title>
      
        <dc:creator>TravisR</dc:creator>

      <pubDate>Thu, 24 Nov 2016 06:41:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38925</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38925/1479969667937054</guid>
      <description>&lt;p&gt;
The core code currently hides the Reply link if a comment is at the maxDepth setting for comment nesting, but this appears to only be a constraint on the presentation. The API still allows replies through URL parameters and the REST interface, which demonstrates that there is not a functional reason for the constraint.
&lt;/p&gt;
&lt;p&gt;
I'm proposing that plugin authors are allowed to override this constraint by setting &lt;code&gt;$args['limit_by_depth'] = false&lt;/code&gt; in a &lt;code&gt;comment_reply_link_args&lt;/code&gt; filter. This requires only a minor, inconsequential change to comment-template.php per the attached patch.
&lt;/p&gt;
&lt;p&gt;
Note the '&lt;a class="ext-link" href="https://wordpress.org/plugins/infinite-comment-replies/developers/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Infinite Comment Replies&lt;/a&gt;' plugin currently achieves this by completely rewriting the reply link and thus masking everything that is handled in the core production of the link. The proposal above is a better option to achieve the same effect.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>38924.diff attached to Ticket #38924</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Thu, 24 Nov 2016 06:20:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38924/38924.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38924/38924.diff/1479968422931614</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38924 (Getting 'embed_autourls' option still generates a DB query) created</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Thu, 24 Nov 2016 06:20:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38924</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38924/1479968402474658</guid>
      <description>&lt;p&gt;
I noticed this behavior while debugging a plugin that checks &lt;code&gt;get_option( 'embed_autourls' )&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;default-filters.php&lt;/code&gt; contains &lt;code&gt;add_filter( 'default_option_embed_autourls', '__return_true' )&lt;/code&gt;, but &lt;code&gt;get_option()&lt;/code&gt; will have already queried for the option before that filter is applied.
&lt;/p&gt;
&lt;p&gt;
The attached patch would switch to &lt;code&gt;pre_option_embed_autourls&lt;/code&gt; to shortcircuit &lt;code&gt;get_option()&lt;/code&gt; before it queries for anything.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>38922-2.diff attached to Ticket #38922</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Thu, 24 Nov 2016 04:49:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38922/38922-2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38922/38922-2.diff/1479962993549745</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38922 (Use REST API for ajax tag search) updated</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Thu, 24 Nov 2016 04:49:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38922#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38922#comment:3/1479962959452112</guid>
      <description>&lt;p&gt;
38922-2 corrects the extra &lt;code&gt;=&lt;/code&gt; and ends the line with &lt;code&gt;,&lt;/code&gt; instead of &lt;code&gt;;&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Also keeps the old ajax function, and uses it to retrieve the limit in a new GET request so as to preserve hook backwards compatibility with context. In order to have context but not have a second GET request the REST API would likely need to have an endpoint that uses the min-chars filter.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [39355]: Post-4.7 RC1 bump. </title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 24 Nov 2016 04:28:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39355</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39355/1479961738663102</guid>
      <description>&lt;p&gt;
Post-4.7 RC1 bump.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [39354]: WordPress 4.7 RC1. </title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 24 Nov 2016 04:02:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39354</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39354/1479960144536022</guid>
      <description>&lt;p&gt;
WordPress 4.7 RC1.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38921 (Defining filter pre_get_table_charset causes errors) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 24 Nov 2016 03:40:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38921#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38921#comment:1/1479958813106960</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the bug report @haoran!
&lt;/p&gt;
&lt;p&gt;
We can definitely get this fixed up. :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38858 (Prepare bundled themes for 4.7) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 24 Nov 2016 03:30:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38858#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38858#comment:7/1479958214462558</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38923 (Introduce `WP_Action_Handler` to clean up admin action mess) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 24 Nov 2016 01:34:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38923#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38923#comment:1/1479951245898431</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38923/38923.diff" title="Attachment '38923.diff' in Ticket #38923"&gt;38923.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38923/38923.diff" title="Download"&gt;​&lt;/a&gt; shows what I have in mind. The core of this patch are the new files &lt;code&gt;wp-admin/includes/class-wp-action-handler.php&lt;/code&gt; and &lt;code&gt;wp-admin/includes/action-handler.php&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
To test the behavior of the new class and to build it in a way that makes sense, I also created implementations for two screens, &lt;code&gt;user-new.php&lt;/code&gt; and &lt;code&gt;post.php&lt;/code&gt;. They both have their own action handler classes, so the code two handle their actions has been moved into these classes and the screen files are much shorter now as a result.
Functionality-wise there have not been any changes in the patch, everything should work exactly as before.
&lt;/p&gt;
&lt;p&gt;
While the action handler class was made specifically for use-cases in the way that &lt;code&gt;user-new.php&lt;/code&gt; works, it also brings significant improvements in terms of testing and extendability to &lt;code&gt;post.php&lt;/code&gt; although that file works completely different (no messages, basically the entire file is an action clause). The functionality for the &lt;code&gt;edit&lt;/code&gt; action was left in the main file since this is not really just an action, but rather displays the entire regular admin screen.
&lt;/p&gt;
&lt;p&gt;
I could probably describe a lot more here, but looking at the code will likely give the best overview anyway. If there are any questions about the approach, please ask. Also feel free to tear it apart - this patch should of course be the opener for a discussion.
&lt;/p&gt;
&lt;p&gt;
Regardless of how we will scaffold such a class, I think this will definitely be a valuable improvement.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38918-forced-test.diff attached to Ticket #38918</title>
      
        <dc:creator>eddhurst</dc:creator>

      <pubDate>Thu, 24 Nov 2016 01:33:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38918/38918-forced-test.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38918/38918-forced-test.diff/1479951200864624</guid>
      <description>&lt;p&gt;
Forced output of plugin delete failure message (even when successfully deleted) for easier testing. Not for production.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38918 (delete_plugins() needs a proper singular and plural form for its error ...) updated</title>
      
        <dc:creator>eddhurst</dc:creator>

      <pubDate>Thu, 24 Nov 2016 01:29:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38918#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38918#comment:4/1479950981953058</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Tested a couple of older versions to check against what they were doing and in the eventuality that multiple plugins failed to delete, only the last message would show anyway (deleted 3 plugins, but was shown the following error):
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;Plugin could not be deleted due to an error: Could not fully remove the plugin(s) rest-api/plugin.php.&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Given that all these errors have been brought in-line anyway now, each error will show next to the relevant plugin that's failed (if multiple), so a singular phrase seems fine.
&lt;/p&gt;
&lt;p&gt;
I've added an extra patch to force errors on successfully removing a plugin, just to make testing the output a little easier - the initial patch is the correct one to apply going forward.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38923.diff attached to Ticket #38923</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 24 Nov 2016 01:09:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38923/38923.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38923/38923.diff/1479949758285706</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38923 (Introduce `WP_Action_Handler` to clean up admin action mess) created</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 24 Nov 2016 01:08:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38923</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38923/1479949715543094</guid>
      <description>&lt;p&gt;
We all know that several parts of the admin code are messy in a way. After we had to take several looks at these files during today's multisite chat, I thought we need to do something about it.
&lt;/p&gt;
&lt;p&gt;
My proposal for now is to introduce a new base class &lt;code&gt;WP_Action_Handler&lt;/code&gt;. This abstract class would lay a foundation to handle any kind of actions on any admin screen. Currently there's a (sometimes huge) switch clause at the beginning of almost every page. By removing these clauses entirely and handling the logic in a dedicated class for this instead, we get the following benefits:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;easier readable code
&lt;/li&gt;&lt;li&gt;less huge files
&lt;/li&gt;&lt;li&gt;possibility to add unit tests for each of the switch cases
&lt;/li&gt;&lt;li&gt;possibility to add unit tests the entire handling of an action
&lt;/li&gt;&lt;li&gt;easy addition of any custom actions in plugins, beyond just bulk actions (which have become easier to implement thanks to 4.7)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I have been experimenting with such a class over the past few hours and will upload a first patch below. Some notes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The class usage is almost similar to all the list table classes: There's a base class, and then there's (or rather there will be) one class (which extends the base class) for each screen that could benefit from that.
&lt;/li&gt;&lt;li&gt;Many of the actions have similarities: They mostly use &lt;code&gt;check_admin_referer()&lt;/code&gt; at the beginning, followed by some capability and other permission checks to verify the user is allowed to perform the action. Therefore the base class should be able to handle nonces on its own. The capability checks should be separated from the actual action logic for better organization and easier testing.
&lt;/li&gt;&lt;li&gt;Many of the actions redirect back to the admin page, with a GET parameter denoting a notification message to show to the user. &lt;code&gt;WP_Action_Handler&lt;/code&gt; should also be capable of managing such messages to make that easier as well. This will furthermore allow to remove a bunch of code from the admin screen files where they "bootstrap" their supported messages.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
More notes will follow on the initial patch.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38918 (delete_plugins() needs a proper singular and plural form for its error ...) updated</title>
      
        <dc:creator>eddhurst</dc:creator>

      <pubDate>Thu, 24 Nov 2016 01:00:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38918#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38918#comment:3/1479949201360896</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>38918.diff attached to Ticket #38918</title>
      
        <dc:creator>eddhurst</dc:creator>

      <pubDate>Thu, 24 Nov 2016 00:58:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38918/38918.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38918/38918.diff/1479949096434707</guid>
      <description>&lt;p&gt;
Removing plural for translation string and adding colon to make clearer that plugin name follows
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>38834.diff attached to Ticket #38834</title>
      
        <dc:creator>MrFlannagan</dc:creator>

      <pubDate>Thu, 24 Nov 2016 00:45:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38834/38834.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38834/38834.diff/1479948301055216</guid>
      <description>&lt;p&gt;
The patch checks if the current date and time is before that of a post then instead of removing the "Schedule" option on an inline post edit in draft mode, it leaves "Schedule" and removes "Publish"
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38918 (delete_plugins() needs a proper singular and plural form for its error ...) updated</title>
      
        <dc:creator>eddhurst</dc:creator>

      <pubDate>Thu, 24 Nov 2016 00:30:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38918#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38918#comment:2/1479947433543549</guid>
      <description>&lt;p&gt;
I tried swapping this to use _n() and then realised that the plugins are removed inline, so each error message is shown next to the plugin, rather than in a list at the top.
&lt;/p&gt;
&lt;p&gt;
As a result, should the translation case instead be to remove the (s) plural altogether and just retain this as a pure &lt;code&gt;__()&lt;/code&gt; singular translation string?
&lt;/p&gt;
&lt;p&gt;
To illustrate: Each error will only ever appear once next to each plugin that fails to be deleted, so (should) output:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;Could not fully remove the plugin hello-dolly/hello.php.&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Rather than what would currently show:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;Could not fully remove the plugin(s) hello-dolly/hello.php.&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38916 (REST API: Can't set existing post format if theme does not support it) closed</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Thu, 24 Nov 2016 00:07:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38916#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38916#comment:11/1479946070692038</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39353" title="REST API: Special case the “standard” post format to always be ..."&gt;39353&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Special case the “standard” post format to always be allowed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38916" title="#38916: defect (bug): REST API: Can't set existing post format if theme does not support it (closed: fixed)"&gt;#38916&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39353]: REST API: Special case the “standard” post format to always be ...</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Thu, 24 Nov 2016 00:07:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39353</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39353/1479946070215432</guid>
      <description>&lt;p&gt;
REST API: Special case the “standard” post format to always be allowed.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38916" title="#38916: defect (bug): REST API: Can't set existing post format if theme does not support it (closed: fixed)"&gt;#38916&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item>
   </channel>
</rss>