<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #43620 (Privacy Policy page design) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Fri, 20 Apr 2018 23:57:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43620#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43620#comment:30/1524268673589229</guid>
      <description>&lt;p&gt;
I think it'd be helpful to have a filter in &lt;code&gt;get_privacy_policy_url()&lt;/code&gt;. My use case is that some Multisite networks would like to set a single policy for all sites, rather than having to manually create them per site or allowing individual site admins to modify it.
&lt;/p&gt;
&lt;p&gt;
On a Multisite network like WordCamp.org, that's much more practical than manually creating hundreds of pages, and it allows us to ensure that all sites in the network have a consistent and GDPR-compliant policy.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43620/43620-url-filter.diff" title="Attachment '43620-url-filter.diff' in Ticket #43620"&gt;43620-url-filter.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43620/43620-url-filter.diff" title="Download"&gt;​&lt;/a&gt; is a first pass at that. Does anyone have any feedback on it?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43715 (Add Privacy Policy link to bundled theme footers) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 20 Apr 2018 23:56:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43715#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43715#comment:25/1524268612322617</guid>
      <description>&lt;p&gt;
ps: the link &lt;code&gt;title&lt;/code&gt; attributes are no longer recommended: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24766" title="#24766: defect (bug): Title attributes galore. They serve no useful purpose. (closed: fixed)"&gt;#24766&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43620-url-filter.diff attached to Ticket #43620</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Fri, 20 Apr 2018 23:53:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43620/43620-url-filter.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43620/43620-url-filter.diff/1524268410337771</guid>
      <description>&lt;p&gt;
Add &lt;code&gt;privacy_policy_url&lt;/code&gt; filter
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43715 (Add Privacy Policy link to bundled theme footers) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Fri, 20 Apr 2018 23:39:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43715#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43715#comment:24/1524267542351049</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43715#comment:22" title="Comment 22"&gt;xkon&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43715/43715.2.diff" title="Attachment '43715.2.diff' in Ticket #43715"&gt;43715.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43715/43715.2.diff" title="Download"&gt;​&lt;/a&gt; makes a first pass in all bundled themes to add a footer link to Privacy Policy page
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That looks good to me at a quick glance. Here's a few suggestions:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;There's a coding standard guideline about not setting variables inside &lt;code&gt;if ( )&lt;/code&gt; blocks. It seems cleaner to set it at the top of the file:
&lt;/li&gt;&lt;/ul&gt;&lt;pre class="wiki"&gt;&amp;lt;?php
/**
 * The template for displaying the footer
 *
 * Contains the closing of the #content div and all content after.
 *
 * @link https://developer.wordpress.org/themes/basics/template-files/#template-partials
 *
 * @package WordPress
 * @subpackage Twenty_Seventeen
 * @since 1.0
 * @version 1.2
 */
$privacy_policy_url = get_privacy_policy_url();
?&amp;gt;
&lt;/pre&gt;&lt;p&gt;
I'm not sure if that's a common convention in Core, though, so maybe be more appropriate to define itjust above the &lt;code&gt;if ( )&lt;/code&gt; block.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Rather than &lt;code&gt;echo&lt;/code&gt;ing HTML, it seems more readable to me to interpolate &lt;code&gt;&amp;lt;?php&lt;/code&gt; tags:
&lt;/li&gt;&lt;/ul&gt;&lt;pre class="wiki"&gt;&amp;lt;?php if ( $privacy_policy_url ) : ?&amp;gt;
	&amp;lt;a class="privacy-policy-page-link" href="&amp;lt;?php echo esc_url( $privacy_policy_url ); ?&amp;gt;" title="&amp;lt;?php echo esc_attr( 'Privacy Policy', 'twentyseventeen' ); ?&amp;gt;"&amp;gt;
		&amp;lt;?php _e( 'Privacy Policy', 'twentyseventeen' ); ?&amp;gt;
	&amp;lt;/a&amp;gt;
&amp;lt;?php endif; ?&amp;gt;
&lt;/pre&gt;&lt;p&gt;
That may also not fit with existing Core conventions, though.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I think &lt;code&gt;esc_url()&lt;/code&gt; is better for the URL than &lt;code&gt;esc_attr()&lt;/code&gt;, because it's a more targeted context.
&lt;/li&gt;&lt;li&gt;Similarly, I think &lt;code&gt;esc_attr()&lt;/code&gt; is better for the &lt;code&gt;title&lt;/code&gt; than &lt;code&gt;esc_html()&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Is the &lt;code&gt;span&lt;/code&gt; necessary? I wonder if it'd be more semantic, and more consistent with the existing links in the footers, to just have an &lt;code&gt;a&lt;/code&gt; element with the class?
&lt;/li&gt;&lt;li&gt;Do we need the &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; for back-compat? If not, then it seems more semantic to use something like &lt;code&gt;.privacy-policy-page-link { display: block }&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;If we keep the &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; should we use &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; in some of the themes, depending on their &lt;code&gt;doctype&lt;/code&gt;?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43715 (Add Privacy Policy link to bundled theme footers) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 20 Apr 2018 23:24:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43715#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43715#comment:23/1524266652858697</guid>
      <description>&lt;p&gt;
@xkon these theme screenshots are very informative, thanks
&lt;/p&gt;
&lt;p&gt;
do you think it would make sense here to have a function like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;/**
 * Determines whether the privacy policy page is set.
 *
 * @since 4.9.6
 *
 * @return bool If the privacy policy page is set.
 */
function has_privacy_policy() {
	return (bool) get_option( 'wp_page_for_privacy_policy' );
}
&lt;/pre&gt;&lt;p&gt;
to simplify theme codes like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( has_privacy_policy() ) {
	printf(
		'&amp;lt;span class="privacy-policy-page-link"&amp;gt;&amp;lt;a href="%s"&amp;gt;%s&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt;',
		esc_url( $url ),
		esc_html__( 'Privacy Policy', 'twentyten' ),
	);
}
&lt;/pre&gt;&lt;p&gt;
Not far away from existing functions like:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;has_header_image()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;has_header_video()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;has_custom_header()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;has_site_icon()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;has_custom_logo()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;has_nav_menu()&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Fri, 20 Apr 2018 23:08:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:36/1524265689600074</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
that the Admins themselves will create any given Form on their website to take 'requests' from users that want anonymization/exports and then send the confirmation needed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ya what you're saying makes sense on sites that have a form for anonymization/export where they explain the process. But these requests can also come over the phone, or a user could simply contact the admin via email. So I don't think users will have always seen any text explaining the process. So some users might not be previously aware of the process, so IMHO it's good to inform them.
&lt;/p&gt;
&lt;p&gt;
Also, I don't think a reminder about what will happen next is bad.
&lt;/p&gt;
&lt;p&gt;
What's more, even if the admin does create a contact form explaining the process for getting an export of personal data or how to delete data, this part of the process will always be the same (the user gets an email, clicks the link, then waits for the admin to fulfill their request), so why does every site admin need to create their own text explaining the process? That's a lot of duplication, no? (Granted admins are free to explain as much as they want on their contact form page; it's just non-essential.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43715 (Add Privacy Policy link to bundled theme footers) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 20 Apr 2018 22:00:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43715#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43715#comment:22/1524261608907885</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43715/43715.2.diff" title="Attachment '43715.2.diff' in Ticket #43715"&gt;43715.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43715/43715.2.diff" title="Download"&gt;​&lt;/a&gt; makes a first pass in all bundled themes to add a footer link to Privacy Policy page by using the newly added &lt;code&gt;get_privacy_policy_url()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
All links are enclosed in a &lt;code&gt;&amp;lt;span class="privacy-policy-page-link"&amp;gt;&lt;/code&gt; for the purpose of easily hiding them with simple css if needed by the users/admins.
&lt;/p&gt;
&lt;p&gt;
I tried to match each themes ui feeling without it being intrusive &amp;amp; without it looking out of place.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43715/43715.2.preview.jpg" title="Attachment '43715.2.preview.jpg' in Ticket #43715"&gt;43715.2.preview.jpg&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43715/43715.2.preview.jpg" title="Download"&gt;​&lt;/a&gt; shows in order from Twenty Ten to Twenty Seventeen.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43823 (Posts can not be saved with /etc/ as part of the content) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 20 Apr 2018 21:56:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43823#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43823#comment:1/1524261377825680</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @fgluck, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
This sounds like a security rule set up by your hosting provider. There's no code in WordPress core that would prevent posts containing &lt;code&gt;/etc/&lt;/code&gt; from being saved.
&lt;/p&gt;
&lt;p&gt;
Please try the support forums for troubleshooting: &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25564" title="#25564: defect (bug): Page/Post won't Publish/Update with the word 'exit' in the content editor (closed: worksforme)"&gt;#25564&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25736" title="#25736: defect (bug): Getting 403 error when using a certain sentence in a blog posting (closed: invalid)"&gt;#25736&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43715.2.preview.jpg attached to Ticket #43715</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 20 Apr 2018 21:54:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43715/43715.2.preview.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43715/43715.2.preview.jpg/1524261294994551</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>43715.2.diff attached to Ticket #43715</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 20 Apr 2018 21:54:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43715/43715.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43715/43715.2.diff/1524261287615610</guid>
      <description>&lt;p&gt;
footer link on bundled themes
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43715 (Add Privacy Policy link to bundled theme footers) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Fri, 20 Apr 2018 21:07:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43715#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43715#comment:21/1524258426012060</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43713 (Privacy: Add a UI to allow administrators to disable individual embeds ...) updated</title>
      
        <dc:creator>coreymckrill</dc:creator>

      <pubDate>Fri, 20 Apr 2018 21:05:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43713#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43713#comment:10/1524258354540490</guid>
      <description>&lt;p&gt;
There should probably be an equivalent UI in the Network Admin for enabling/disabling embeds across the entire network.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 20 Apr 2018 21:04:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:35/1524258283965111</guid>
      <description>&lt;p&gt;
Even though I do understand the way you see it @mnelson4 , let's not forget that the Admins themselves will create any given Form on their website to take 'requests' from users that want anonymization/exports and then send the confirmation needed.
&lt;/p&gt;
&lt;p&gt;
So they will/should already communicate the process needed in their own way on that form probably as well. There's no need imho from a pre-made text like that even though it seems to server a purpose.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43822 (Add UX in the Network Admin for exporting/anonymizing/deleting ...) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Fri, 20 Apr 2018 21:01:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43822#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43822#comment:1/1524258066118302</guid>
      <description>&lt;p&gt;
I wonder if there are use cases where the network admin will want to delegate this to single site admins. For instance, an agency that has a multisite instance for all of their clients. The sites are completely unrelated to one another, and the individual site admins would be the most appropriate people to respond to SARs, rather than the network admin.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;wp_users&lt;/code&gt; table is shared, though, so that's a complication. Maybe v1 just has the network admin doing everything, and future iterations can consider adding granularity?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43823 (Posts can not be saved with /etc/ as part of the content) created</title>
      
        <dc:creator>fgluck</dc:creator>

      <pubDate>Fri, 20 Apr 2018 20:58:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43823</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43823/1524257920845766</guid>
      <description>&lt;p&gt;
I created a post using the latest version of WordPress with one line and the only content of the post.
&lt;/p&gt;
&lt;p&gt;
The line is:
&lt;/p&gt;
&lt;p&gt;
/etc/
&lt;/p&gt;
&lt;p&gt;
I can not save this post as a draft. When saving, I get a blank white screen.
This was tested using Theme TwentyFifteen updated to the latest version.
&lt;/p&gt;
&lt;p&gt;
I can save the post if there is a space between /etc and the last slash.
&lt;/p&gt;
&lt;p&gt;
This has been tested with all plugins disabled with the same results.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43602 (Add to the privacy tools UX a means to erase personal data by username ...) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 20 Apr 2018 20:45:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43602#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43602#comment:31/1524257124992416</guid>
      <description>&lt;p&gt;
Oh nice thinking @birgire ! I really like how it goes along the lines of the already usual &lt;code&gt;Add New&lt;/code&gt; button we normally find there. Will there be a proposed patch as well to see how it looks like in action maybe :) ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Fri, 20 Apr 2018 20:26:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:34/1524255976347154</guid>
      <description>&lt;p&gt;
I tested this out on trunk and it worked fine.
&lt;/p&gt;
&lt;p&gt;
Maybe the text shown to the user could give more direction about what to do &lt;strong&gt;after&lt;/strong&gt; they've clicked the link.
&lt;/p&gt;
&lt;p&gt;
Here's the content from an email that I generated on my test site:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Howdy,
A request has been made to perform the following action on your account:
Export Personal Data
To confirm this, please click on the following link: {link}
You can safely ignore and delete this email if you do not want to take this action.
This email has been sent to {email}.
Regards,
All at {sitename}
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
And then when the link is clicked, the user sees
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Action has been confirmed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think we should add instructions on what the user should do next. Something like this:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Action has been confirmed. The site administrator has been notified and will fulfill your request as soon as possible.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Or something like that. The key point being that it says they need to wait for the admin to do something now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43602 (Add to the privacy tools UX a means to erase personal data by username ...) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 20 Apr 2018 20:18:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43602#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43602#comment:30/1524255502053848</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;em&gt;Just an idea into the cosmos:&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
After working with the &lt;em&gt;Export Personal Data&lt;/em&gt; table for some time, I could feel the urge to have the "Add new request" form hidden from view, when working with the requests. So &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43602/export-personal-data-with-add-request-link.jpg" title="Attachment 'export-personal-data-with-add-request-link.jpg' in Ticket #43602"&gt;export-personal-data-with-add-request-link.jpg&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43602/export-personal-data-with-add-request-link.jpg" title="Download"&gt;​&lt;/a&gt; is what came first to mind, as it is very familiar layout for such a table ;-)
&lt;/p&gt;
&lt;p&gt;
---
&lt;/p&gt;
&lt;p&gt;
It's also interesting idea from @azaozz (don't remember the ticket) to consider storing some data in the post table fields. That might give better performance for very large tables, when sorting or searching, instead of meta queries. But maybe very large request tables will be an edge case?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43822 (Add UX in the Network Admin for exporting/anonymizing/deleting ...) created</title>
      
        <dc:creator>coreymckrill</dc:creator>

      <pubDate>Fri, 20 Apr 2018 20:12:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43822</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43822/1524255138095369</guid>
      <description>&lt;p&gt;
It's not practical for a super admin to hunt down personal data by going to the Dashboard of each site in the network. There should be one centralized place in the Network Admin to receive and process SARs.
&lt;/p&gt;
&lt;p&gt;
This should look similar to the UX in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43546" title="#43546: enhancement: Add to the privacy tools UX a means to export personal data by ... (closed: fixed)"&gt;#43546&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43602" title="#43602: enhancement: Add to the privacy tools UX a means to erase personal data by username ... (closed: fixed)"&gt;#43602&lt;/a&gt;, but the underlying functionality for managing the data across the entire network is being discussed in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43738" title="#43738: enhancement: Make the personal data Export/Delete functionality available in ... (new)"&gt;#43738&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43821 (Add UX in the Network Admin for setting a network-wide privacy policy) created</title>
      
        <dc:creator>coreymckrill</dc:creator>

      <pubDate>Fri, 20 Apr 2018 20:05:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43821</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43821/1524254700686386</guid>
      <description>&lt;p&gt;
Some multisite instances will need to set one privacy policy for the entire network, with controls on whether or not individual sites can modify/replace it. Other multisite instances may choose to leave the privacy policy entirely to individual sites.
&lt;/p&gt;
&lt;p&gt;
The UI for setting a network-wide policy should probably be similar to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43435" title="#43435: enhancement: Add settings screen for creating a privacy policy (closed: fixed)"&gt;#43435&lt;/a&gt;, so snippets from plugins can be included.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43820 (Add "Mine" filter for attachments similarly to posts and comments) created</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 20 Apr 2018 19:50:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43820</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43820/1524253826610597</guid>
      <description>&lt;p&gt;
This will be quite useful for users that want to see, edit or export their data.
&lt;/p&gt;
&lt;p&gt;
The functionality already exists. Attachments can be filtered by user name when clicking on the "Author" in the Media Library (in list-table view). To make it more accessible we would need to add a little bit of UI, perhaps another &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; under the "Media items" drop-down.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43650 (Add Requires PHP Version to Plugin - View Details) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 20 Apr 2018 19:47:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43650#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43650#comment:6/1524253677985167</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43374 (PHP 7.2 Warning: count(): Parameter must be an array or an object that ...) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 20 Apr 2018 19:46:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43374#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43374#comment:7/1524253595711788</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43583" title="#43583: enhancement: Introduce new PHP cross-version compat function `is_countable()` (closed: fixed)"&gt;#43583&lt;/a&gt; will introduce an &lt;code&gt;is_countable()&lt;/code&gt; polyfill for the PHP 7.3 function with the same name. I think it makes sense to start using that function here to fix this warning.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43374/43374.patch" title="Attachment '43374.patch' in Ticket #43374"&gt;43374.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43374/43374.patch" title="Download"&gt;​&lt;/a&gt; utilizes the &lt;code&gt;is_countable()&lt;/code&gt; function to avoid the PHP warning. Of course, this depends on the patch in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43583" title="#43583: enhancement: Introduce new PHP cross-version compat function `is_countable()` (closed: fixed)"&gt;#43583&lt;/a&gt; being committed first.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43374.patch attached to Ticket #43374</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 20 Apr 2018 19:44:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43374/43374.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43374/43374.patch/1524253477137873</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>export-personal-data-with-add-request-link.jpg attached to Ticket #43602</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 20 Apr 2018 19:43:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43602/export-personal-data-with-add-request-link.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43602/export-personal-data-with-add-request-link.jpg/1524253407891592</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 20 Apr 2018 19:00:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:33/1524250852529705</guid>
      <description>&lt;p&gt;
Also things like the above screenshot shouldn't be possible. Storing the request in the same CPT that later is used for logging would make that easier to fix.
&lt;/p&gt;
&lt;p&gt;
We'd also probably need some garbage collection for expired unconfirmed requests. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43443#comment:4" title="#43443: enhancement: Add a method for confirmation of requests for deleting or anonymizing ... (closed: fixed)"&gt;comment 4&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>repeating-requests.png attached to Ticket #43443</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 20 Apr 2018 18:56:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43443/repeating-requests.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43443/repeating-requests.png/1524250603990608</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43619 (Introduce new PHP cross-version compat function `is_iterable()`) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 20 Apr 2018 18:38:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43619#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43619#comment:9/1524249485256910</guid>
      <description>&lt;p&gt;
Thanks for pointing that out, @jrf. I updated the patch and added a test for an empty array in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43619/43619.3.diff" title="Attachment '43619.3.diff' in Ticket #43619"&gt;43619.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43619/43619.3.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Did you have a plan in mind for updating Core to use this new function? There are several tickets referenced above, but wondering if making a singular ticket (or handling that on this ticket) is better. Same for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43583" title="#43583: enhancement: Introduce new PHP cross-version compat function `is_countable()` (closed: fixed)"&gt;#43583&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Since these produce warnings, I think these should be fixed in 4.9.6, if possible.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43619.3.diff attached to Ticket #43619</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 20 Apr 2018 18:33:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43619/43619.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43619/43619.3.diff/1524249212830221</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43738 (Make the personal data Export/Delete functionality available in ...) updated</title>
      
        <dc:creator>coreymckrill</dc:creator>

      <pubDate>Fri, 20 Apr 2018 18:25:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43738#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43738#comment:10/1524248720084366</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43738#comment:9" title="Comment 9"&gt;jeremyfelt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Search across the network for the user's ID and/or email
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We can look at a single table, &lt;code&gt;wp_usermeta&lt;/code&gt;, to get a list of sites the user has a role on, but I'm not sure if that covers everything that we need.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It doesn't, because comments might only be associated with an email address, not a user ID. This may also be the case for data stored by plugins. But &lt;code&gt;wp_usermeta&lt;/code&gt; is probably a good start.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
A couple questions:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Is there a personal data export API endpoint that is available on each site?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
There has been some discussion of REST API endpoints, but I don't think there is any code for this yet (although I haven't caught up on everything yet today). I think these endpoints will be critical for multisite needs.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;What's the best ticket to start on to get up to speed on the data being exported? &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/43438" title="#43438: enhancement: Add filters and Ajax support for personal data export (assigned)"&gt;#43438&lt;/a&gt;?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Yep, plus &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43546" title="#43546: enhancement: Add to the privacy tools UX a means to export personal data by ... (closed: fixed)"&gt;#43546&lt;/a&gt; for the (single site) UI.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42612 (Single post navigation bugs when adding posts in Starter Content) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 20 Apr 2018 18:23:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42612#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42612#comment:18/1524248616481205</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 20 Apr 2018 18:18:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:32/1524248310179968</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43443#comment:31" title="Comment 31"&gt;mikejolley&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
CPT is much heavier just to store a hash/key, and I disagree you need logs for that type of activity where it's a) automated and b) something that happens more or less in the background. Look at the existing system; it's just meta.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hm, if we plan for this to be reusable in the future, imho we should also plan for the log to be reusable.
&lt;/p&gt;
&lt;p&gt;
Yeah, at first CPT may look heavier but the options table is just the wrong place to store this type of data. All options get loaded on each request, including on the front-end, which makes them a lot heavier than a CPT which is going to be loaded only when an admin visits the privacy screen.
&lt;/p&gt;
&lt;p&gt;
Another big disadvantage is that the hash, time, email are stored in a CSV which makes it impossible to look them up separately. If I remember right that was one of the main reasons a new DB table was so attractive. Given that such table will stay mostly empty on the great majority of sites, a CPT is the next best thing.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Perhaps we can abstract the CPT a bit, make it more generic, then set different &lt;code&gt;post_name&lt;/code&gt; depending on request type?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We implemented the 2 CPT for the requests to take advantage of wp_count_posts. We'll need lots of custom queries otherwise on our screens to do the status filtering.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hm, don't think so. &lt;code&gt;wp_count_posts()&lt;/code&gt; uses a simple db query to count. We actually can do better as it has some specific stuff for posts and pages that is not needed. Making another similar function which is adapted to our needs would be the right thing in any case.
&lt;/p&gt;
&lt;p&gt;
Also, this will be needed "once in a blue moon" when an admin visits one of the privacy screens :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The main reason we started using CPTs was to not store the verification key in the options table :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No, the main reason for CPTs was to get a list table log without lots of heavy custom queries on meta data, since no one liked the idea of a custom table.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hmm, think there has been some miscommunication here :) As a custom table would have been empty or almost empty on the great majority of sites, it doesn't make sense to add one. Even if we added one it will also need a whole new set of low-level functions to become usable. For example we would need to add or duplicate most of the stuff that drives the list tables UI.
&lt;/p&gt;
&lt;p&gt;
CPTs are the next best thing to a custom table. They can store a lot of information quite efficiently. Not using them to store the simple data needed for implementing email verification doesn't seem right. In addition, having two almost identical custom post types doesn't seem best.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43738 (Make the personal data Export/Delete functionality available in ...) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Fri, 20 Apr 2018 18:16:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43738#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43738#comment:9/1524248167970278</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Search across the network for the user's ID and/or email
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm still catching up on GDPR and will have to go through some of the tickets to figure out what data is being exported and in what format, but this specific task may not be realistic with multisite's current data structure.
&lt;/p&gt;
&lt;p&gt;
We can look at a single table, &lt;code&gt;wp_usermeta&lt;/code&gt;, to get a list of sites the user has a role on, but I'm not sure if that covers everything that we need.
&lt;/p&gt;
&lt;p&gt;
For small networks, it may be possible to just loop through each site and retrieve the data. As networks get larger, this becomes less and less realistic and would probably need to have a long running task using cron.
&lt;/p&gt;
&lt;p&gt;
A couple questions:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Is there a personal data export API endpoint that is available on each site?
&lt;/li&gt;&lt;li&gt;What's the best ticket to start on to get up to speed on the data being exported? &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/43438" title="#43438: enhancement: Add filters and Ajax support for personal data export (assigned)"&gt;#43438&lt;/a&gt;?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38197 (Update Pingback function To Add Return) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 20 Apr 2018 17:53:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38197#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38197#comment:25/1524246826426952</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I am going to move this to 5.0 because of the potential for issues with the change in returned values. If a committer is confident in this, it can be moved back in.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43650 (Add Requires PHP Version to Plugin - View Details) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 20 Apr 2018 17:44:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43650#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43650#comment:5/1524246260191672</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This looks good to me. I think this can go in before the other UI elements in &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/40934" title="#40934: task (blessed): Allow PHP version requirements for plugins &amp;amp; themes (assigned)"&gt;#40934&lt;/a&gt; because it is purely informational.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43721 (Adding links to imprint and privacy policy pages on WP login screens) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 20 Apr 2018 17:34:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43721#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43721#comment:9/1524245660912749</guid>
      <description>&lt;p&gt;
Oh good catch @chetan200891 I forgot about the separator from moving the code :) thank you!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42486 (The Tools screen is blank for users who cannot manage categories or tags) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 20 Apr 2018 17:33:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42486#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42486#comment:24/1524245599612258</guid>
      <description>&lt;p&gt;
I am not sure that I like the idea of copying an existing code block (that checks if the current user has the capability to manage categories or tags) into two different locations.
&lt;/p&gt;
&lt;p&gt;
I think moving the Categories and Tags converter to the action hook would be a better approach. Using this approach would only require the original code proposed in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/42486/42486.diff" title="Attachment '42486.diff' in Ticket #42486"&gt;42486.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/42486/42486.diff" title="Download"&gt;​&lt;/a&gt;. It would also allow that card to be unhooked from the tools page, if desired.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43721 (Adding links to imprint and privacy policy pages on WP login screens) updated</title>
      
        <dc:creator>chetan200891</dc:creator>

      <pubDate>Fri, 20 Apr 2018 17:32:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43721#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43721#comment:8/1524245565773240</guid>
      <description>&lt;p&gt;
@xkon I have tested your patch and made some changes, and added new patch &lt;a href="https://core.trac.wordpress.org/attachment/ticket/43721/43721.4.diff"&gt;43721.4.diff&lt;/a&gt;. Removed 'login_link_separator'. Also made some changes to CSS.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43721.4.diff attached to Ticket #43721</title>
      
        <dc:creator>chetan200891</dc:creator>

      <pubDate>Fri, 20 Apr 2018 17:30:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43721/43721.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43721/43721.4.diff/1524245434034531</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43797 (Logging for GDPR privacy/security) updated</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Fri, 20 Apr 2018 17:30:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43797#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43797#comment:10/1524245410382802</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
As for the custom table, I left it as is with a CPT since we used CPTs for the exports other tools also for now.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ya I see this follows that precedent, and that's probably fine.
&lt;/p&gt;
&lt;p&gt;
And I'll try to take the plugin for a spin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43721 (Adding links to imprint and privacy policy pages on WP login screens) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 20 Apr 2018 16:32:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43721#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43721#comment:7/1524241944022927</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43721/43721.2.diff" title="Attachment '43721.2.diff' in Ticket #43721"&gt;43721.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43721/43721.2.diff" title="Download"&gt;​&lt;/a&gt; was a false upload, sorry wrong click.
&lt;/p&gt;
&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43721/43721.3.diff" title="Attachment '43721.3.diff' in Ticket #43721"&gt;43721.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43721/43721.3.diff" title="Download"&gt;​&lt;/a&gt; moved the Privacy Policy link on the bottom of the page as @melchoyce suggested above.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43721.3.diff attached to Ticket #43721</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 20 Apr 2018 16:31:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43721/43721.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43721/43721.3.diff/1524241872147971</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>43721.2.diff attached to Ticket #43721</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 20 Apr 2018 16:29:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43721/43721.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43721/43721.2.diff/1524241797937620</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43619 (Introduce new PHP cross-version compat function `is_iterable()`) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Fri, 20 Apr 2018 16:24:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43619#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43619#comment:8/1524241485260843</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think we still need one more change here - mea culpa.
&lt;/p&gt;
&lt;p&gt;
When I created the ticket I did something (not so) "clever". I added &lt;code&gt;&amp;amp;&amp;amp; ! empty( $var )&lt;/code&gt; to the conditional in the function
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;is_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$var&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$var&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nv"&gt;$var&lt;/span&gt; &lt;span class="nx"&gt;instanceof&lt;/span&gt; &lt;span class="nx"&gt;Traversable&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
However, the PHP native function does not do such a check, so as it stands, there will be situations where the WP back-fill does not give the same result as the PHP native function which is undesirable and will be the cause of bugs in the long run.
&lt;/p&gt;
&lt;p&gt;
Sorry about that.
&lt;/p&gt;
&lt;p&gt;
The latest patch contains the &lt;code&gt;&amp;amp;&amp;amp; ! empty( $var )&lt;/code&gt;, so it will need to be removed and if no unit tests are failing after that, we need to add a unit test for an empty array.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43602 (Add to the privacy tools UX a means to erase personal data by username ...) updated</title>
      
        <dc:creator>mikejolley</dc:creator>

      <pubDate>Fri, 20 Apr 2018 15:51:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43602#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43602#comment:29/1524239481988468</guid>
      <description>&lt;p&gt;
@allendav
&lt;/p&gt;
&lt;p&gt;
I'm not sure if this is working or if it's my code.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
No personal data was found for this user.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is the message I'm seeing in admin, but I can see my erasure code is returning results:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://dl.dropboxusercontent.com/s%2Fe4zbt1qvm85r9fh%2FSlack%2520-%2520A8C%25202018-04-20%252016-46-09.png"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://dl.dropboxusercontent.com/s%2Fe4zbt1qvm85r9fh%2FSlack%2520-%2520A8C%25202018-04-20%252016-46-09.png&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Code &lt;a class="ext-link" href="https://github.com/woocommerce/woocommerce/pull/19808/files#diff-3d2ec5172ea5ae5cd9b4cecaa433f507R163"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/woocommerce/woocommerce/pull/19808/files#diff-3d2ec5172ea5ae5cd9b4cecaa433f507R163&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43819 (Improve performance of function "wp_update_attachment_metadata" in post.php) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 20 Apr 2018 15:44:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43819#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43819#comment:2/1524239077052686</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43819 (Improve performance of function "wp_update_attachment_metadata" in post.php) closed</title>
      
        <dc:creator>lucasbustamante</dc:creator>

      <pubDate>Fri, 20 Apr 2018 15:37:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43819#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43819#comment:1/1524238624161972</guid>
      <description>invalid: &lt;p&gt;
Please ignore this ticket, it was the plugin "Smush it" that was slowing down the uploads.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>mikejolley</dc:creator>

      <pubDate>Fri, 20 Apr 2018 15:30:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:31/1524238244088899</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43443#comment:30" title="Comment 30"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hmm, why not? On large/busy sites it would be nice to see when somebody has changed passwords, or the last time an email was verified.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
CPT is much heavier just to store a hash/key, and I disagree you need logs for that type of activity where it's a) automated and b) something that happens more or less in the background. Look at the existing system; it's just meta.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Perhaps we can abstract the CPT a bit, make it more generic, then set different &lt;code&gt;post_name&lt;/code&gt; depending on request type?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We implemented the 2 CPT for the requests to take advantage of wp_count_posts. We'll need lots of custom queries otherwise on our screens to do the status filtering.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I was also thinking we would need only one CPT, not one per request type. We can use all the data WP_Post has to offer: title, post_name, content, content_filtered, excerpt, etc. etc. For example the request type can be stored in post_name, and the request status (pending, verified, expired) in post_status.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Previous comment. This was more efficient for the list tables/counts.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The main reason we started using CPTs was to not store the verification key in the options table :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No, the main reason for CPTs was to get a list table log without lots of heavy custom queries on meta data, since no one liked the idea of a custom table.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 20 Apr 2018 15:26:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:30/1524237990758956</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43443#comment:29" title="Comment 29"&gt;mikejolley&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
...the verification system is independent of that on purpose so it could be used in other places. For example, if I wanted to use these for lost password emails I wouldn't need to log via the CPT.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hmm, why not? On large/busy sites it would be nice to see when somebody has changed passwords, or the last time an email was verified. Perhaps we can abstract the CPT a bit, make it more generic, then set different &lt;code&gt;post_name&lt;/code&gt; depending on request type?
&lt;/p&gt;
&lt;p&gt;
I was also thinking we would need only one CPT, not one per request type. We can use all the data WP_Post has to offer: title, post_name, content, content_filtered, excerpt, etc. etc. For example the request type can be stored in post_name, and the request status (pending, verified, expired) in post_status.
&lt;/p&gt;
&lt;p&gt;
The main reason we started using CPTs was to not store the verification key in the options table :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>mikejolley</dc:creator>

      <pubDate>Fri, 20 Apr 2018 15:11:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:29/1524237072017861</guid>
      <description>&lt;p&gt;
@azaozz Correct CPTs are used for logging requests,  but the verification system is independent of that on purpose so it could be used in other places. For example, if I wanted to use these for lost password emails I wouldn't need to log via the CPT.
&lt;/p&gt;
&lt;p&gt;
Make sense?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 20 Apr 2018 15:07:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:28/1524236874607086</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Now we have CPTs for storing these user requests. We should change &lt;code&gt;wp_send_account_verification_key()&lt;/code&gt; and friends to use the CPTs for storing the verification key, etc. No point to use the options or user_meta tables.
&lt;/p&gt;
&lt;p&gt;
@mikejolley could you have a look please :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43721 (Adding links to imprint and privacy policy pages on WP login screens) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 20 Apr 2018 14:59:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43721#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43721#comment:6/1524236388945851</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43583 (Introduce new PHP cross-version compat function `is_countable()`) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 20 Apr 2018 14:55:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43583#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43583#comment:10/1524236137742460</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43619 (Introduce new PHP cross-version compat function `is_iterable()`) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 20 Apr 2018 14:55:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43619#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43619#comment:7/1524236124166984</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43619/43619.2.diff" title="Attachment '43619.2.diff' in Ticket #43619"&gt;43619.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43619/43619.2.diff" title="Download"&gt;​&lt;/a&gt; changes the &lt;code&gt;@since&lt;/code&gt; version to 4.9.6 and adds &lt;code&gt;@ticket&lt;/code&gt; tags to the unit tests. Everything looks good to go for this one.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43619.2.diff attached to Ticket #43619</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 20 Apr 2018 14:54:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43619/43619.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43619/43619.2.diff/1524236072891748</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>login-register_privacy.png attached to Ticket #43721</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Fri, 20 Apr 2018 14:47:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43721/login-register_privacy.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43721/login-register_privacy.png/1524235679666785</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43721 (Adding links to imprint and privacy policy pages on WP login screens) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Fri, 20 Apr 2018 14:47:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43721#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43721#comment:5/1524235661462192</guid>
      <description>&lt;p&gt;
That list of links is specifically geared towards helping people sign up or log in, so adding the Privacy Policy link there wouldn't be appropriate.
&lt;/p&gt;
&lt;p&gt;
If this is absolutely legally necessary, I'd recommend sticking a smaller link (13px or smaller) to the bottom of the screen. See attached image.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 20 Apr 2018 14:43:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:57</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:57/1524235407804983</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42995" title="Privacy: fix `get_privacy_policy_url()` to only return the URL when ..."&gt;42995&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Privacy: fix &lt;code&gt;get_privacy_policy_url()&lt;/code&gt; to only return the URL when the page is published.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43435" title="#43435: enhancement: Add settings screen for creating a privacy policy (closed: fixed)"&gt;#43435&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42995]: Privacy: fix `get_privacy_policy_url()` to only return the URL when ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 20 Apr 2018 14:43:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42995</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42995/1524235406734023</guid>
      <description>&lt;p&gt;
Privacy: fix &lt;code&gt;get_privacy_policy_url()&lt;/code&gt; to only return the URL when the page is published.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43435" title="#43435: enhancement: Add settings screen for creating a privacy policy (closed: fixed)"&gt;#43435&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43721 (Adding links to imprint and privacy policy pages on WP login screens) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 20 Apr 2018 14:27:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43721#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43721#comment:4/1524234479057785</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #gdpr-compliance by xkon. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/gdpr-compliance/p1524234478000428"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43715 (Add Privacy Policy link to bundled theme footers) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 20 Apr 2018 14:24:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43715#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43715#comment:20/1524234249425951</guid>
      <description>&lt;p&gt;
@allendav I have not yet seen anybody requiring consents before the website loads. So basically all cookies are already set at start either you consent or not. The difference is that they are removed if you choose not to consent and not droped again. Not even the regulating authorities themselved do it ( if that makes a point :D ).
&lt;/p&gt;
&lt;p&gt;
But, If we are to follow this concept should we create something like &lt;code&gt;wp_add_privacy_policy_content()&lt;/code&gt; that gathers all cookie info into a nice list / modal like the one that cookiebot.com is producing ?
&lt;/p&gt;
&lt;p&gt;
Although I'm saying again a straight up modal from core will be very intrusive to some themes etc. So we have to figure out a way or add an option somewhere to enable/disable it at least and provide al the necessary CSS and stuff so everybody can theme it if they like.
&lt;/p&gt;
&lt;p&gt;
That's why I'm still not really sure about a full modal and prefer to add footer links for bundled themes that are &lt;code&gt;core&lt;/code&gt; for starters and maybe we can review it in the future again.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43819 (Improve performance of function "wp_update_attachment_metadata" in post.php) created</title>
      
        <dc:creator>lucasbustamante</dc:creator>

      <pubDate>Fri, 20 Apr 2018 14:18:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43819</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43819/1524233939618206</guid>
      <description>&lt;p&gt;
I had to import thousands of images to WordPress and it was taking an average of 5 seconds to upload each image, even though they were all on localhost, so WordPress only had to move it and register it in the database.
&lt;/p&gt;
&lt;p&gt;
To speed up this process, I debugged each and every call made during a media upload, and found out the great guilty that, after a little tweak, made my media upload going from &lt;strong&gt;5 seconds to 0.7 seconds&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;
What was slowing it down was &lt;code&gt; add_filter('wp_update_attachment_metadata', $data, $post-&amp;gt;ID) &lt;/code&gt; inside function &lt;code&gt; wp_update_attachment_metadata()&lt;/code&gt; in post.php:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="sd"&gt;/**
 * Update metadata for an attachment.
 *
 * @since 2.1.0
 *
 * @param int   $attachment_id Attachment post ID.
 * @param array $data          Attachment meta data.
 * @return int|bool False if $post is invalid.
 */&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;wp_update_attachment_metadata&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$attachment_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$attachment_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;$attachment_id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$attachment_id&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="sd"&gt;/**
         * Filters the updated attachment meta data.
         *
         * @since 2.1.0
         *
         * @param array $data          Array of updated attachment meta data.
         * @param int   $attachment_id Attachment post ID.
         */&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;apply_filters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'wp_update_attachment_metadata'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;ID&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;update_post_meta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'_wp_attachment_metadata'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;delete_post_meta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'_wp_attachment_metadata'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
As I had to upload thousands of images, I modified it to this, just during the import:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="sd"&gt;/**
 * Update metadata for an attachment.
 *
 * @since 2.1.0
 *
 * @param int   $attachment_id Attachment post ID.
 * @param array $data          Attachment meta data.
 * @return int|bool False if $post is invalid.
 */&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;wp_update_attachment_metadata&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$attachment_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$attachment_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;$attachment_id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$attachment_id&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="sd"&gt;/**
         * Filters the updated attachment meta data.
         *
         * @since 2.1.0
         *
         * @param array $data          Array of updated attachment meta data.
         * @param int   $attachment_id Attachment post ID.
         */&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;WP_DOING_IMPORT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;update_post_meta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'_wp_attachment_metadata'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;apply_filters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'wp_update_attachment_metadata'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;ID&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;update_post_meta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'_wp_attachment_metadata'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;delete_post_meta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'_wp_attachment_metadata'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Before the tweak:
&lt;/p&gt;
&lt;pre class="wiki"&gt;  'uploadtimedebug_start' =&amp;gt; 0 seconds
  'uploadtimedebug_after_requires' =&amp;gt; 0.006 seconds
  'uploadtimedebug_after_tmp_filled' =&amp;gt; 0.597 seconds
  'uploadtimedebug_before_media_handle_sideload' =&amp;gt; 0.597 seconds
  'uploadtimedebug_after_media_handle_sideload' =&amp;gt; 5.370 seconds
  'uploadtimedebug_finish' =&amp;gt; 5.370 seconds
&lt;/pre&gt;&lt;p&gt;
After the tweak:
&lt;/p&gt;
&lt;pre class="wiki"&gt;  'uploadtimedebug_inicio' =&amp;gt; 0 seconds
  'uploadtimedebug_after_requires' =&amp;gt; 0.007 seconds
  'uploadtimedebug_after_tmp_filled' =&amp;gt; 0.620 seconds
  'uploadtimedebug_before_media_handle_sideload' =&amp;gt; 0.620 seconds
  'uploadtimedebug_after_media_handle_sideload' =&amp;gt; 0.723 seconds
  'uploadtimedebug_finish' =&amp;gt; 0.723 seconds
&lt;/pre&gt;&lt;p&gt;
I wonder if we could improve this piece of code to be more performant?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43721 (Adding links to imprint and privacy policy pages on WP login screens) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 20 Apr 2018 14:18:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43721#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43721#comment:3/1524233894538466</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43721#comment:2" title="Comment 2"&gt;xkon&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@azaozz after taking a look at this do you think we could enhance the &lt;code&gt;get_privacy_policy_url()&lt;/code&gt; to check if the page defined is of status &lt;code&gt;Publish&lt;/code&gt; as well?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ah, good catch! Will fix that shortly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43813 (Meta API should set `last_changed` cache key internally) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 20 Apr 2018 14:18:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43813#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43813#comment:4/1524233889792288</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43813#comment:3" title="Comment 3"&gt;flixos90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
While I'm generally in favor of this change, I think we might wanna hold off this for a bit.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, this seems fine to me. @johnjamesjacoby 's other points notwithstanding, the main idea here was to cut down on code reduplication. But if the general feeling is that we're not ready for this yet because the patterns aren't well-enough established, then let's wait.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43721 (Adding links to imprint and privacy policy pages on WP login screens) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 20 Apr 2018 14:09:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43721#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43721#comment:2/1524233382653703</guid>
      <description>&lt;p&gt;
Hello @voneff and welcome to core trac!
&lt;/p&gt;
&lt;p&gt;
In my opinion you're absolutely correct, websites that do use the default registration/login pages should include a link to their Privacy Policy page if that exists as well.
&lt;/p&gt;
&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43721/43721.diff" title="Attachment '43721.diff' in Ticket #43721"&gt;43721.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43721/43721.diff" title="Download"&gt;​&lt;/a&gt; as we now have the handy &lt;code&gt;get_privacy_policy_url()&lt;/code&gt; it adds the links in the current &lt;code&gt;nav&lt;/code&gt; if a policy page link exists.
&lt;/p&gt;
&lt;p&gt;
@melchoyce would you be ok with this added in the &lt;code&gt;nav&lt;/code&gt; as seen in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43721/43721.preview.jpg" title="Attachment '43721.preview.jpg' in Ticket #43721"&gt;43721.preview.jpg&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43721/43721.preview.jpg" title="Download"&gt;​&lt;/a&gt; ?
&lt;/p&gt;
&lt;p&gt;
@azaozz after taking a look at this do you think we could enhance the &lt;code&gt;get_privacy_policy_url()&lt;/code&gt; to check if the page defined is of status &lt;code&gt;Publish&lt;/code&gt; as well? Since the function returns just the url at the moment without the Publish check, if it still a 'draft' you end up having a 404 link basically if used for Front End as here. Or should the check be made manually in the template itself?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43721.diff attached to Ticket #43721</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 20 Apr 2018 14:03:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43721/43721.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43721/43721.diff/1524233033247350</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>43721.preview.jpg attached to Ticket #43721</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 20 Apr 2018 14:03:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43721/43721.preview.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43721/43721.preview.jpg/1524233022938604</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43791 (Add the call to pingback_url to core instead of themes) updated</title>
      
        <dc:creator>abdullahramzan</dc:creator>

      <pubDate>Fri, 20 Apr 2018 13:54:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43791#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43791#comment:6/1524232479895289</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42465 (Add `permalink_structure` to REST API general site data) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Fri, 20 Apr 2018 13:52:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42465#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42465#comment:7/1524232365898513</guid>
      <description>&lt;p&gt;
Given Gutenberg ended up using a different implementation and that &lt;code&gt;permalink_structure&lt;/code&gt; is a &lt;em&gt;setting&lt;/em&gt;, I think &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42142" title="REST API: Add `permalink_structure` to the index endpoint.
This ..."&gt;r42142&lt;/a&gt; should be reverted. It's not necessary at this time.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43791_2.diff attached to Ticket #43791</title>
      
        <dc:creator>abdullahramzan</dc:creator>

      <pubDate>Fri, 20 Apr 2018 13:50:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43791/43791_2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43791/43791_2.diff/1524232244692755</guid>
      <description>&lt;p&gt;
Patch refreshed. Please discard the 43791_1.diff
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>43791_1.diff attached to Ticket #43791</title>
      
        <dc:creator>abdullahramzan</dc:creator>

      <pubDate>Fri, 20 Apr 2018 13:48:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43791/43791_1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43791/43791_1.diff/1524232082412862</guid>
      <description>&lt;p&gt;
Add the call to pingback_url to core (Patch refreshed)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43791 (Add the call to pingback_url to core instead of themes) updated</title>
      
        <dc:creator>abdullahramzan</dc:creator>

      <pubDate>Fri, 20 Apr 2018 13:46:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43791#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43791#comment:5/1524232015984574</guid>
      <description>&lt;p&gt;
Hello @dshanske ,
&lt;/p&gt;
&lt;p&gt;
Thanks for your feedback on this ticket. Yeah definitely it should be core territory.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It should be get_bloginfo( 'pingback_url' ), not site_url( '/xmlrpc.php' ).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I also refreshed the patch.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35465 (Improve wp.Backbone docs) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 20 Apr 2018 13:42:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35465#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35465#comment:16/1524231761329127</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35465#comment:15" title="Comment 15"&gt;adamsilverstein&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The question mark indicates the field is optional. If the Object is optional it can stay.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks @adamsilverstein, I skimmed through:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/inline-documentation-standards/javascript/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/handbook/best-practices/inline-documentation-standards/javascript/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
when I noticed &lt;code&gt;?Object&lt;/code&gt; and &lt;code&gt;?number&lt;/code&gt;, but I didn't find a reference to it there.
&lt;/p&gt;
&lt;p&gt;
I think it could be helpful to mention it in the Handbook.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't see a number parameter in that function al all though, seems like that line can be removed?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I wasn't exactly sure regarding that,  so I didn't change that.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35465/35465.7.diff" title="Attachment '35465.7.diff' in Ticket #35465"&gt;35465.7.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35465/35465.7.diff" title="Download"&gt;​&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Removes &lt;code&gt;&amp;gt;&lt;/code&gt; from description.
&lt;/li&gt;&lt;li&gt;Replaces &lt;code&gt;&amp;amp;ndash;&lt;/code&gt; with &lt;code&gt;-&lt;/code&gt; in description.
&lt;/li&gt;&lt;li&gt;Moves a word up to the line above, in description, for better readability.
&lt;/li&gt;&lt;li&gt;Makes a single alignment.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>35465.7.diff attached to Ticket #35465</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 20 Apr 2018 13:36:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35465/35465.7.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35465/35465.7.diff/1524231386001730</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43797 (Logging for GDPR privacy/security) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 20 Apr 2018 13:23:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43797#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43797#comment:9/1524230606891750</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35465 (Improve wp.Backbone docs) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 20 Apr 2018 12:59:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35465#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35465#comment:15/1524229167407609</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I noticed further {?Object} and {?number}here. Should we remove the question marks?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The question mark indicates the field is optional. If the Object is optional it can stay. I don't see a number parameter in that function al all though, seems like that line can be removed?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Are the &amp;gt; and &amp;amp;ndash; really needed here?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
These do seem out of place. I think you can leave out the '&amp;gt;' items or change them both to a regular '-' dash.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43602 (Add to the privacy tools UX a means to erase personal data by username ...) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 20 Apr 2018 12:57:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43602#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43602#comment:28/1524229078232568</guid>
      <description>&lt;p&gt;
After doing some back and forth tests after &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43442" title="#43442: enhancement: Add tools for anonymizing of commenters (closed: fixed)"&gt;#43442&lt;/a&gt; got commited I was confused on this and I've got a question / proposal.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;What I did&lt;/strong&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I went on my dev site and spamed some comments as a visitor with mail &lt;code&gt;visitor@dev.oo&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;I went from the admin and made a custom request to remove data to the visitors email &lt;code&gt;visitor@dev.oo&lt;/code&gt; and confirmed that request.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Went back on the admin and I removed &lt;code&gt;visitor@dev.oo&lt;/code&gt; data.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;I went again and left yet another comment as &lt;code&gt;visitor@dev.oo&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;I still had access from the admin since that mail had already made a confirmation to remove his data without the need of a &lt;code&gt;NEW&lt;/code&gt; confirmation.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;strong&gt;Proposal&lt;/strong&gt; ( if we haven't already talked about it ):
&lt;/p&gt;
&lt;p&gt;
After removing a users data, replace the button with something like 'Data removed on dd-mm-yy' this acts as:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;a reminder for the Admin when that action took place
&lt;/li&gt;&lt;li&gt;you can't use the same action without confirmation ( if you don't want to create a newer entry in the future )
&lt;/li&gt;&lt;li&gt;a page being less confusing
&lt;/li&gt;&lt;li&gt;needing a confirmation from scratch to remove a persons data with the same e-mail for safety reasons
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41902 (wp-load.php: comment for error reporting levels) updated</title>
      
        <dc:creator>sasagar</dc:creator>

      <pubDate>Fri, 20 Apr 2018 12:57:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41902#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41902#comment:4/1524229045497944</guid>
      <description>&lt;p&gt;
@schlessera
Sorry for long time no see.
&lt;/p&gt;
&lt;p&gt;
I changed the patch file as you suggested. (I couldn't type description completely.  :( )
&lt;/p&gt;
&lt;p&gt;
Would you check for that anytime you can.
I hope it would work.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>41902_2.patch attached to Ticket #41902</title>
      
        <dc:creator>sasagar</dc:creator>

      <pubDate>Fri, 20 Apr 2018 12:55:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41902/41902_2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41902/41902_2.patch/1524228900206892</guid>
      <description>&lt;p&gt;
added the
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43473 (Add default text for a privacy policy) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 20 Apr 2018 12:44:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43473#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43473#comment:14/1524228281146457</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43473#comment:13" title="Comment 13"&gt;idea15&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Some of these are strictly plugin related. We can "mention" that "in most cases" data may be used for .... purposes and sent to third party sites, but ultimately the plugins that do this should provide the exact info.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Registered user data
&lt;/li&gt;&lt;li&gt;Account creation
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
These are the same and concern only users that want to register. All of the data is listed on the Profile screen. Not sure what exactly to mention about it, perhaps that only username and email are mandatory?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Oembeds
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
We have a list of the default oEmbed providers, however other sites can be added by plugins and any WP site is also a provider. Thinking we need some generic text here, perhaps like "Some pages may contain embedded sections from other websites like videos, images, etc. In these cases the other site may collect personal data like IP addresses and may set browser cookies".
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Visitor cookies
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
No such thing in WP.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Registered user cookies
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
All of these are strictly "functional", used for logging in, etc. None is used for any tracking.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Post data (posts?)
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Only registered users with sufficient capabilities can publish posts. Not sure that needs to be in the front-end visitor facing privacy policy, probably nothing. Perhaps can mention that posts contain the user ID on the Profile screen?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Comments
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
WP stores the commenter IP address and browser version string in addition to what the commenter provides in the comments form.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Spam checks
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Nothing in WP by default, but can mention that all comment data may be sent to a "third party security scanning service"?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Analytics
&lt;/li&gt;&lt;li&gt;Telemetry
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
There two are the same. Can probably mention that most sites store some visitor data to help them improve their services (Google Analytics or local/cPanel).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Contact forms
&lt;/li&gt;&lt;li&gt;Order fulfilment
&lt;/li&gt;&lt;li&gt;Message boards
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Nothing in WP. Can leave for plugins that add the forms and collect the data.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43442 (Add tools for anonymizing of commenters) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 20 Apr 2018 12:23:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43442#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43442#comment:26/1524227002814531</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43442#comment:24" title="Comment 24"&gt;birgire&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I like the idea in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43442/43442.5.diff" title="Attachment '43442.5.diff' in Ticket #43442"&gt;43442.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43442/43442.5.diff" title="Download"&gt;​&lt;/a&gt; to provide the user with a link to manually handle comments with anonymization errors.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, like that idea too. However looked into it a bit more and couldn't find any cases where a comment updating will fail but the comment can still be edited. Removed it for now. If we can prove it's useful, can add it back later.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43442 (Add tools for anonymizing of commenters) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 20 Apr 2018 12:18:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43442#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43442#comment:25/1524226716709341</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42994" title="Privacy: add functionality to anonymize commenters.
Props xkon, ..."&gt;42994&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Privacy: add functionality to anonymize commenters.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props xkon, fclaussen, allendav, birgire, azaozz.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43442" title="#43442: enhancement: Add tools for anonymizing of commenters (closed: fixed)"&gt;#43442&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42994]: Privacy: add functionality to anonymize commenters.  Props xkon, ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 20 Apr 2018 12:18:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42994</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42994/1524226715615629</guid>
      <description>&lt;p&gt;
Privacy: add functionality to anonymize commenters.
&lt;/p&gt;
&lt;p&gt;
Props xkon, fclaussen, allendav, birgire, azaozz.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43442" title="#43442: enhancement: Add tools for anonymizing of commenters (closed: fixed)"&gt;#43442&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43791 (Add the call to pingback_url to core instead of themes) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Fri, 20 Apr 2018 12:10:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43791#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43791#comment:4/1524226253498124</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It should be get_bloginfo( 'pingback_url' ), not site_url( '/xmlrpc.php' ). That adds the ability to filter the pingback url and redirect it elsewhere. You could, if anyone ever wrote one, delegate pingback handling to a service.
&lt;/p&gt;
&lt;p&gt;
I'm in favor of Core handling this. It never should have been theme territory and your points are all valid. However, this was rejected before my tenure in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10094" title="#10094: enhancement: Move pingback &amp;lt;link&amp;gt; to wp_head? (closed: wontfix)"&gt;#10094&lt;/a&gt;, so I'm not sure if it would get through now. I think we need to get more consensus on whether this would be even considered for a commit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43602 (Add to the privacy tools UX a means to erase personal data by username ...) updated</title>
      
        <dc:creator>mikejolley</dc:creator>

      <pubDate>Fri, 20 Apr 2018 11:31:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43602#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43602#comment:27/1524223908369643</guid>
      <description>&lt;p&gt;
@allendav This will obviously break what we have now, but I notice between this and the exporter we have &lt;code&gt;eraser_friendly_name&lt;/code&gt; and &lt;code&gt;exporter_friendly_name&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Why don't we unify the format here and just use &lt;code&gt;nicename&lt;/code&gt; for both?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43797 (Logging for GDPR privacy/security) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 20 Apr 2018 11:27:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43797#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43797#comment:8/1524223653204144</guid>
      <description>&lt;p&gt;
Thanks for your input @mnelson4 I've actually added a small repo and converted this into a plugin so it's easier for anyone that wanted to have a look to see how this feels or expand it for the ease of use ( &lt;a class="ext-link" href="https://github.com/mrxkon/consent-log"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/mrxkon/consent-log&lt;/a&gt; ).
&lt;/p&gt;
&lt;p&gt;
As for the custom table, I left it as is with a CPT since we used CPTs for the exports other tools also for now.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;An extra note&lt;/strong&gt; after a little bit of discussion the 'feeling' about this is that it might get abused by plugins overchecking consents ( although each plugin should add a unique ID per consent so there shouldn't be a problem there as any other plugin wouldn't know where to look ) + the idea of keeping 'extra' data such as e-mails etc.
&lt;/p&gt;
&lt;p&gt;
From one hand you allow the user to get anonymized and from the other you have to keep his consent log to prove that at some past point he had accepted a consent, if the consent is anonymized as well how are you going to prove it in the first place? It seems that some things here are going against each other if I have it down correctly.
&lt;/p&gt;
&lt;p&gt;
If we find a way to rule out the possibility of doing something actually 'against' the regulation so we can be safe and this is something that more people actually need we can surely check it out for the future.
&lt;/p&gt;
&lt;p&gt;
---
&lt;/p&gt;
&lt;p&gt;
Since my position is also conflicting ( by giving code and saying to wait a bit longer ), I'll say again that I had made something similar to this recently for a client as it was requested by his lawyers. It doesn't mean that even they are 100% correct though :) .
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35465 (Improve wp.Backbone docs) reopened</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 20 Apr 2018 11:19:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35465#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35465#comment:14/1524223144568243</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35465/35465.6.diff" title="Attachment '35465.6.diff' in Ticket #35465"&gt;35465.6.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35465/35465.6.diff" title="Download"&gt;​&lt;/a&gt; is a suggestion that:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Aligns related descriptions.
&lt;/li&gt;&lt;li&gt;Adds full stops to some summaries.
&lt;/li&gt;&lt;li&gt;Capitalizes &lt;code&gt;object&lt;/code&gt; in  &lt;code&gt;* @param {array|object&lt;/code&gt;}
&lt;/li&gt;&lt;li&gt;Changes a two line &lt;code&gt;//&lt;/code&gt; comment into a multiline comment using &lt;code&gt;/*...*/&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Changes &lt;code&gt;$returns&lt;/code&gt; to &lt;code&gt;$return&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Notes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I noticed further &lt;code&gt;{?Object&lt;/code&gt;} and &lt;code&gt;{?number&lt;/code&gt;}&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/bb8d67e6ead6430260c8a595a180074ce410f50e/wp-includes/js/wp-backbone.js#L360"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;here&lt;/a&gt;. Should we remove the question marks?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Are the &lt;code&gt;&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;amp;ndash;&lt;/code&gt; really needed &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/bb8d67e6ead6430260c8a595a180074ce410f50e/wp-includes/js/wp-backbone.js#L80"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;here&lt;/a&gt;?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>reopenedticket</category>
    </item><item>
      <title>35465.6.diff attached to Ticket #35465</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 20 Apr 2018 11:12:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35465/35465.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35465/35465.6.diff/1524222733178089</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43473 (Add default text for a privacy policy) updated</title>
      
        <dc:creator>idea15</dc:creator>

      <pubDate>Fri, 20 Apr 2018 10:24:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43473#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43473#comment:13/1524219870140592</guid>
      <description>&lt;p&gt;
Just thinking of the section for the privacy notices on what personal data we collect. There's a lot of data which could be listed, depending on the nature of the site, some of which is WP and plugin generated, some of which is not:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Registered user data
&lt;/li&gt;&lt;li&gt;Oembeds
&lt;/li&gt;&lt;li&gt;Visitor cookies
&lt;/li&gt;&lt;li&gt;Registered user cookies
&lt;/li&gt;&lt;li&gt;Post data
&lt;/li&gt;&lt;li&gt;Comments
&lt;/li&gt;&lt;li&gt;Spam checks
&lt;/li&gt;&lt;li&gt;Analytics
&lt;/li&gt;&lt;li&gt;Telemetry
&lt;/li&gt;&lt;li&gt;Contact forms
&lt;/li&gt;&lt;li&gt;Account creation
&lt;/li&gt;&lt;li&gt;Order fulfilment
&lt;/li&gt;&lt;li&gt;Message boards
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
and so on.
&lt;/p&gt;
&lt;p&gt;
What are peoples' thoughts on the best way to handle this information collection and drafting without ovewhelming the site administrator, as this section of a PN alone could take as much time as the rest.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36753 (Use system fonts for a faster, more native-feeling admin) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 20 Apr 2018 08:58:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36753#comment:92</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36753#comment:92/1524214727810538</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #gdpr-compliance by clorith. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/gdpr-compliance/p1524214727000129"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43813 (Meta API should set `last_changed` cache key internally) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 20 Apr 2018 08:15:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43813#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43813#comment:3/1524212142848836</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
While I'm generally in favor of this change, I think we might wanna hold off this for a bit. Something to consider here is that moving this logic into the actual metadata API functions will make it harder to make adjustments specific to only a subset of these object types - which is generally nothing we should strive for, but something that may be necessary sometimes.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;For example experimenting with a meta-related caching improvement should rather happen on a less-used component like site meta first before shooting it out there to be used with posts, terms etc immediately.
&lt;/li&gt;&lt;li&gt;Another example is that user meta right now does not invalidate cache on meta changes - which may have a background, I'm not sure. Just highlighting this as another example where all object types (unfortunately) are not the same.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
A specific idea I had in mind was to introduce meta-specific last changed keys for every object type (see &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43818" title="#43818: enhancement: Invalidate query caches less aggressively by using a `last_changed` ... (new)"&gt;#43818&lt;/a&gt;), to make cache invalidation less aggressive which would result in less unnecessary cache misses for queries not using any metadata. Something like this I think should rather be tested with something like site meta before applying it to the really frequently used post meta - just so that we can detect most basic issues (if any) immediately before testing it under heavier load.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43818 (Invalidate query caches less aggressively by using a `last_changed` ...) created</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 20 Apr 2018 08:13:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43818</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43818/1524212035293747</guid>
      <description>&lt;p&gt;
Currently, the meta implementations for posts, terms, comments and sites (in multisite) invalidate all respective query caches when any value is changed (via setting the &lt;code&gt;last_changed&lt;/code&gt; key). This is a really aggressive method of cache invalidation and causes in query caches being too frequently invalidated, resulting in lots of unnecessary cache misses.
&lt;/p&gt;
&lt;p&gt;
Most queries (or at least many queries) do not make use of meta queries, and those should stay unaffected by when a meta value changes. Therefore I suggest introducing a specific &lt;code&gt;meta_last_changed&lt;/code&gt; cache key, and have the meta functions set that one instead of the generic &lt;code&gt;last_changed&lt;/code&gt;. In the query classes, we can then check if a meta query is present, and only then make use of the &lt;code&gt;meta_last_changed&lt;/code&gt; key - otherwise we can ignore it and use the regular &lt;code&gt;last_changed&lt;/code&gt; key.
&lt;/p&gt;
&lt;p&gt;
Regarding the initial implementation, we should think about whether we would wanna roll this out to all the above object types immediately, or whether we should rather start with an object type less popular for metadata (i.e. &lt;em&gt;not&lt;/em&gt; posts). Related to this is &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43813" title="#43813: enhancement: Meta API should set `last_changed` cache key internally (new)"&gt;#43813&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>idea15</dc:creator>

      <pubDate>Fri, 20 Apr 2018 06:55:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:56</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:56/1524207315637565</guid>
      <description>&lt;p&gt;
That's conflating two separate issues. We're going to be looking at the plugin guidelines separately (starting today, in fact) to see how privacy could be better defined and clarified for future development. We're also working on the functionality for plugin authors to provide privacy information in a way that can be captured by the privacy notice tool. But the need to provide information about data flow and capture isn't "pseudo-legal advice" - it's now a regulatory requirement.
&lt;/p&gt;
&lt;p&gt;
Our challenge has been to find a way to make that easier for everday administrators without having to be developers and lawyers at the same time, hence the compliance project. The privacy notices we're discussing here will be the sole responsibility of the site administrator. The tool will not write the policy for them, nor publish it. What it will do is pull in information about plugins from the functionality we're creating, and will also provide prompts for administrators to manually fill in details like their international data transfer information. Administrators are solely responsible for finishing and publishing the notice.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42942 (Provide a post_date_column_time hook for media files) updated</title>
      
        <dc:creator>ivanlutrov</dc:creator>

      <pubDate>Fri, 20 Apr 2018 06:51:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42942#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42942#comment:4/1524207101298690</guid>
      <description>&lt;p&gt;
Is there a reason we can't just use &lt;code&gt;post_date_column_time&lt;/code&gt; for this? That filter is used by WP for posts and pages, as well as custom post types so it makes sense just to use the same filter for all of them.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43817 (REST API: Include 'formats' attribute on Post Type resource) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 20 Apr 2018 05:05:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43817#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43817#comment:1/1524200746502760</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43817 (REST API: Include 'formats' attribute on Post Type resource) created</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 20 Apr 2018 04:52:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43817</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43817/1524199960493492</guid>
      <description>&lt;p&gt;
We need to know which post formats we can display when editing a post in Gutenberg.
&lt;/p&gt;
&lt;p&gt;
While supported post formats are technically a theme setting, not a post type setting, post type is the closest matching resource that we make available.
&lt;/p&gt;
&lt;p&gt;
See: &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/6301"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/6301&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43811 (Licence &amp; Policy notice during installation) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 20 Apr 2018 04:09:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43811#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43811#comment:6/1524197386088528</guid>
      <description>&lt;p&gt;
Thanks for your input @idea15 !
&lt;/p&gt;
&lt;p&gt;
For &lt;code&gt;1&lt;/code&gt; even the quotation you added is more than enough I guess as well. And imho even everyday users have to be informed about which Open Source license we are under even as a reminder, there are plenty out there with different scopes etc so a reminder of GPLv2+ is a good thing as some might get more educated as we're explaining to them what PHP is and why they need an update etc.
&lt;/p&gt;
&lt;p&gt;
For &lt;code&gt;2&lt;/code&gt; WordPress installation has nothing to do with 'installing wp.org' the privacy on &lt;a class="ext-link" href="https://wordpress.org/about/privacy/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/about/privacy/&lt;/a&gt; is about you visiting wp.org as a user/website relationship and has nothing to do with WordPress as a software.
&lt;/p&gt;
&lt;p&gt;
WordPress privacy policy during installation should be between &lt;code&gt;1 + 3&lt;/code&gt; as the communicating data for the updates and such concern the admins/devs that are doing the setup usually. But even if &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43492" title="#43492: enhancement: Core Telemetry and Updates (new)"&gt;#43492&lt;/a&gt; is still open ( I'm not sure it will close in time for the release) I still think the first release should have a notice no matter if that's resolved fully or not.
&lt;/p&gt;
&lt;p&gt;
To make a start then even this would be more than enough imho. I'd be happy to see it as a user/dev/admin if I was about to make my 1st ever WordPress installation:
&lt;/p&gt;
&lt;pre class="wiki"&gt;WordPress is released under GPLv2 (or later) license from the Free Software Foundation.
Quick License Summary: You may copy, distribute and modify the software as long as you track changes/dates in source files. Any modifications to or software including (via compiler) GPL-licensed code must also be made available under the GPL along with build &amp;amp; install instructions.
A full copy of the license is included with every copy of WordPress, but you can also review it here.
To be able to provide consistent security &amp;amp; feature updates WordPress might occasionally send some data to WordPress.org such as data,data,data,data.
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43442 (Add tools for anonymizing of commenters) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 20 Apr 2018 01:31:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43442#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43442#comment:24/1524187861453995</guid>
      <description>&lt;p&gt;
I like the idea in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43442/43442.5.diff" title="Attachment '43442.5.diff' in Ticket #43442"&gt;43442.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43442/43442.5.diff" title="Download"&gt;​&lt;/a&gt; to provide the user with a link to manually handle comments with anonymization errors.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43442/43442.6.diff" title="Attachment '43442.6.diff' in Ticket #43442"&gt;43442.6.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43442/43442.6.diff" title="Download"&gt;​&lt;/a&gt; additionally:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Adds a docblock for the &lt;code&gt;wp_anonymize_comment&lt;/code&gt; filter
&lt;/li&gt;&lt;li&gt;Adjusts two strings to make them translatable
&lt;/li&gt;&lt;li&gt;Adds translators comments.
&lt;/li&gt;&lt;li&gt;Adds accessibility text for the &lt;code&gt;_blank&lt;/code&gt; link.
&lt;/li&gt;&lt;li&gt;Adds &lt;code&gt;external-link&lt;/code&gt; class for &lt;code&gt;_blank&lt;/code&gt; link.
&lt;/li&gt;&lt;li&gt;Adds an escape for &lt;code&gt;$edit_url&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Changes &lt;code&gt;Ah error&lt;/code&gt; to &lt;code&gt;An error&lt;/code&gt; in a string.
&lt;/li&gt;&lt;li&gt;Changes &lt;code&gt;$result&lt;/code&gt; to &lt;code&gt;$updated&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Adds a test for the&lt;code&gt;wp_anonymize_comment&lt;/code&gt; filter, to prevent comment anonymization.
&lt;/li&gt;&lt;li&gt;Adds a test for the&lt;code&gt;wp_anonymize_comment&lt;/code&gt; filter, to prevent comment anonymization, with a custom message.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
ps: I wonder if we should rename &lt;code&gt;$num_items_removed&lt;/code&gt; to &lt;code&gt;$num_items_erased&lt;/code&gt; in general?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43442.6.diff attached to Ticket #43442</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 20 Apr 2018 01:25:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43442/43442.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43442/43442.6.diff/1524187549794436</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43816 (Editing Image Can Lead to Mixed Metadata) updated</title>
      
        <dc:creator>rogerlos</dc:creator>

      <pubDate>Fri, 20 Apr 2018 00:33:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43816#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43816#comment:1/1524184437168587</guid>
      <description>&lt;p&gt;
I tested the change I suggested locally and it does (seem to) fix the issue.
&lt;/p&gt;
&lt;p&gt;
(I'll upload a patch if I get a chance in the next couple of days.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Fri, 20 Apr 2018 00:05:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:55</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:55/1524182734833146</guid>
      <description>&lt;p&gt;
Just a thought but it seems really odd that plugins, which are not allowed any longer to claim anything with regards to legal compliance on WordPress.org plugin directory readmes are now not just allowed, but tacitly encouraged to give pseudo-legal advice in the form of suggested additions to a privacy policy.
&lt;/p&gt;
&lt;p&gt;
What legal issues/liability does that potentially open plugin authors to, particularly with the current implementation that does not stress at all the suggestions are not to be construed as legal advice?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43816 (Editing Image Can Lead to Mixed Metadata) created</title>
      
        <dc:creator>rogerlos</dc:creator>

      <pubDate>Fri, 20 Apr 2018 00:04:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43816</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43816/1524182670595268</guid>
      <description>&lt;h2 id="Summary"&gt;Summary&lt;/h2&gt;
&lt;p&gt;
If an image is uploaded at a size allowing the creation of a defined image size (ie, "large", "twentyseventeen-featured-image", etc.) and the image is then edited to a size which doesn't allow that defined size to be created, the non-supported size can still be placed and will display the original image.
&lt;/p&gt;
&lt;h2 id="StepstoReproduce"&gt;Steps to Reproduce&lt;/h2&gt;
&lt;ol&gt;&lt;li&gt;Upload an image which is slightly larger than a defined image size in a particular theme (for example, if using the WordPress default definition for "large" images, 1,024 pixels, upload an image 1,100 pixels wide)
&lt;/li&gt;&lt;li&gt;Edit the image, and scale or crop it to be 1,000 pixels wide
&lt;/li&gt;&lt;li&gt;Save edit
&lt;/li&gt;&lt;li&gt;Within the post editor, "add media", select the "large" image size, and place within body of post
&lt;/li&gt;&lt;/ol&gt;&lt;h3 id="ExpectedBehavior"&gt;Expected Behavior&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;em&gt;Developer&lt;/em&gt;: The "large" image should not be able to be selected within the "Place Media" dialog
&lt;/li&gt;&lt;li&gt;&lt;em&gt;Regular user&lt;/em&gt;: The "large" image placed should reflect the image edit
&lt;/li&gt;&lt;/ul&gt;&lt;h3 id="Result"&gt;Result&lt;/h3&gt;
&lt;p&gt;
The "large" size is selectable and the &lt;strong&gt;original&lt;/strong&gt; image is placed within the page.
&lt;/p&gt;
&lt;h3 id="OtherEffects"&gt;Other Effects&lt;/h3&gt;
&lt;p&gt;
In this particular example, if the Media Library is in "grid" view, and our edited image is selected, the dialog which opens will display the incorrect original image, as the dialog preferentially uses the "large" image size.
&lt;/p&gt;
&lt;h2 id="SourceofBehavior"&gt;Source of Behavior&lt;/h2&gt;
&lt;p&gt;
I believe the problem stems from line 880 of &lt;a href="https://core.trac.wordpress.org/browser/tags/4.9.5/src/wp-admin/includes/image-edit.php"&gt;https://core.trac.wordpress.org/browser/tags/4.9.5/src/wp-admin/includes/image-edit.php&lt;/a&gt; :
&lt;/p&gt;
&lt;pre class="wiki"&gt;$meta['sizes'] = array_merge( $meta['sizes'], $img-&amp;gt;multi_resize( $_sizes ) );
&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;$meta['sizes']&lt;/code&gt; contains all of the sizes which were able to be created when the image was uploaded
&lt;/li&gt;&lt;li&gt;The return from &lt;code&gt;$img-&amp;gt;multi_resize()&lt;/code&gt; only has keys set for those sizes that can be created from the edited image
&lt;/li&gt;&lt;li&gt;Using &lt;code&gt;array_merge&lt;/code&gt; keeps the original values not returned by &lt;code&gt;$img-&amp;gt;multi_resize()&lt;/code&gt;, despite the fact they are no longer valid for this edit
&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="Fix"&gt;Fix&lt;/h2&gt;
&lt;p&gt;
I believe the fix may be as simple as simply returning the result of &lt;code&gt;$img-&amp;gt;multi_resize()&lt;/code&gt; without merging it into the existing &lt;code&gt;$meta['sizes']&lt;/code&gt;, which are mainly used in this context to create the &lt;code&gt;_wp_attachment_backup_sizes&lt;/code&gt; array.
&lt;/p&gt;
&lt;pre class="wiki"&gt;$meta['sizes'] = $img-&amp;gt;multi_resize( $_sizes );
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>43583.2.patch attached to Ticket #43583</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 19 Apr 2018 23:38:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43583/43583.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43583/43583.2.patch/1524181139229073</guid>
      <description>&lt;p&gt;
Missed one unit test function &lt;code&gt;@ticket&lt;/code&gt; tag.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43797 (Logging for GDPR privacy/security) updated</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Thu, 19 Apr 2018 23:21:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43797#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43797#comment:7/1524180092279973</guid>
      <description>&lt;p&gt;
Yeah @xkon I think that satisfies the requirement. Personally I'd be inclined to have two arguments for the functions, the first being an email and the second being the consent's identifier. That would be clearer than providing an array IMO.
&lt;/p&gt;
&lt;p&gt;
Using the posts table seems a bit heavy-handed because this data isn't very post-y (most columns are unused, and all the important data needs to be stored separately), but I don't have any better suggestions than using a custom table. Usermeta won't work because we need to track consent for non-users (eg commenters). Storing this info as a option seems barbaric.
&lt;/p&gt;
&lt;p&gt;
TBH I'd be most happy with a custom table but I realize that has a lot of migration work etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43210 (Introduce singular capabilities for managing individual options) updated</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Thu, 19 Apr 2018 21:52:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43210#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43210#comment:3/1524174772398256</guid>
      <description>&lt;p&gt;
A singular capability for managing individual options seems to me like a great enhancement. However, I'm not sure I understand the behavior of the filter in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43210/43210.diff" title="Attachment '43210.diff' in Ticket #43210"&gt;43210.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43210/43210.diff" title="Download"&gt;​&lt;/a&gt;, if I'm following it correctly.
&lt;/p&gt;
&lt;p&gt;
It's described as filtering "whether the user is allowed to manage an option." But if the value of &lt;code&gt;$allowed&lt;/code&gt; is filtered to &lt;code&gt;true&lt;/code&gt;, the user isn't necessarily allowed to manage the option, as they still need &lt;code&gt;manage_options&lt;/code&gt;. If the value of &lt;code&gt;$allowed&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, the user isn't necessarily blocked from managing the option, at least in the way they would be with &lt;code&gt;do_not_allow&lt;/code&gt;. Instead, they just need another capability.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43442 (Add tools for anonymizing of commenters) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 19 Apr 2018 21:30:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43442#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43442#comment:23/1524173418186117</guid>
      <description>&lt;p&gt;
In 43442.5.diff: building on 43442.4.c.diff and the above suggestions, added more and better error messages. Also added new filter: &lt;code&gt;'wp_anonymize_comment'&lt;/code&gt; so plugins can prevent anonymization of a particular comment and return an error message with the reason.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43442.5.diff attached to Ticket #43442</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 19 Apr 2018 21:27:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43442/43442.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43442/43442.5.diff/1524173237963923</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43815 (Text Widget: Warnings thrown when using invalid HTML in legacy mode) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 19 Apr 2018 21:17:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43815#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43815#comment:1/1524172620215387</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
👍
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43310 (Generic "HTTP Error" when uploading PDFs via Media area) updated</title>
      
        <dc:creator>BearlyDoug</dc:creator>

      <pubDate>Thu, 19 Apr 2018 21:12:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43310#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43310#comment:9/1524172337693682</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I hate to re-bump this, but two weeks without any response is not good. I have a bare-bones WP instance installed on a PHP7 development box, ready for a dev to access, when requested. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43815.diff attached to Ticket #43815</title>
      
        <dc:creator>jeherve</dc:creator>

      <pubDate>Thu, 19 Apr 2018 21:10:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43815/43815.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43815/43815.diff/1524172237051614</guid>
      <description>&lt;p&gt;
Text Widget: suppress all warnings thrown when using invalid HTML in legacy mode
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43815 (Text Widget: Warnings thrown when using invalid HTML in legacy mode) created</title>
      
        <dc:creator>jeherve</dc:creator>

      <pubDate>Thu, 19 Apr 2018 21:09:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43815</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43815/1524172198904847</guid>
      <description>&lt;p&gt;
&lt;strong&gt;Steps to reproduce the issue&lt;/strong&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Start with a site running WP 4.7.10.
&lt;/li&gt;&lt;li&gt;Add a new Text Widget to your site with the following contents:
&lt;/li&gt;&lt;/ol&gt;&lt;pre class="wiki"&gt;&amp;lt;img src="http://example.com/img.jpg" border="0" title="Example" /&amp;gt;&amp;lt;/a&amp;gt;
&lt;/pre&gt;&lt;ol start="3"&gt;&lt;li&gt;Update to WP 4.9.5
&lt;/li&gt;&lt;li&gt;Notice the widget still there under Appearance &amp;gt; Widgets.
&lt;/li&gt;&lt;li&gt;Load your site's front end.
&lt;/li&gt;&lt;li&gt;In your logs, you should see the following warning:
&lt;/li&gt;&lt;/ol&gt;&lt;pre class="wiki"&gt;[Suppressed] Warning: DOMDocument::loadHTML(): Unexpected end tag : a in Entity, line: 1 in /home/wpcom/public_html/wp-includes/widgets/class-wp-widget-text.php on line 129
&lt;/pre&gt;&lt;p&gt;
This seems to happen because of the invalid HTML in the widget.
&lt;/p&gt;
&lt;p&gt;
In &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41622" title="#41622: defect (bug): Text widget can show DOMDocument::loadHTML() warnings in admin when ... (closed: fixed)"&gt;#41622&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41251" title="Widgets: Suppress PHP warnings raised by `DOMDocument::loadHTML()` in ..."&gt;r41251&lt;/a&gt;, we suppressed those warnings. Unfortunately invalid HTML can still fill in logs. I think it would be nice if we could get rid of those warnings, with the attached patch.
&lt;/p&gt;
&lt;p&gt;
Let me know what you think about this!
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43583 (Introduce new PHP cross-version compat function `is_countable()`) updated</title>
      
        <dc:creator>ayeshrajans</dc:creator>

      <pubDate>Thu, 19 Apr 2018 21:09:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43583#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43583#comment:9/1524172171663840</guid>
      <description>&lt;p&gt;
Awesome! Thanks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43813 (Meta API should set `last_changed` cache key internally) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Thu, 19 Apr 2018 20:58:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43813#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43813#comment:2/1524171506207538</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm not sure I understand. Are there specific places where we're not doing a good job of this? How does the refactoring of how the last_changed incrementor gets bumped - the subject of this ticket - affect the priming of metadata caches?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sorry; I was implying/speculating there may be more here, because meta caches are primed opposite of the &lt;code&gt;last_changed&lt;/code&gt; key.
&lt;/p&gt;
&lt;p&gt;
For example, when using the meta-data API directly (not the per-object helpers) calls to &lt;code&gt;update_meta_cache()&lt;/code&gt; happen inversely to when the &lt;code&gt;last_changed&lt;/code&gt; cache key gets updated. It's hard to tell (without testing for the condition) but looks like it's possible for an "updated meta cache" to have an out of date &lt;code&gt;last_changed&lt;/code&gt; key.
&lt;/p&gt;
&lt;p&gt;
That makes me think, the meta-data API could use a way to relate meta cache-groups to object cache-groups, like you mentioned. If we need that, maybe this turns into a bigger, different issue. Would be nice if that whitelist had a filter, so plugins can just add their relationship to it.
&lt;/p&gt;
&lt;p&gt;
(Separately, BuddyPress doesn't appear to update any &lt;code&gt;last_changed&lt;/code&gt; keys, so while our meta-cache implementation is improved over WordPress core, it probably needs the same treatment WordPress needs here.)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The only real harm that could be caused if WP set last_changed for arbitrary cache groups is if those plugins were expecting last_changed to be in a format other than microtime()
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
A helper function like &lt;code&gt;wp_cache_set_last_changed()&lt;/code&gt; would help there, so there is some functional format enforcement in core.
&lt;/p&gt;
&lt;p&gt;
See: &lt;a href="https://core.trac.wordpress.org/ticket/37464#comment:17"&gt;https://core.trac.wordpress.org/ticket/37464#comment:17&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43583 (Introduce new PHP cross-version compat function `is_countable()`) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 19 Apr 2018 20:57:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43583#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43583#comment:8/1524171465291332</guid>
      <description>&lt;p&gt;
This is looking good to me. I made a few adjustments in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43583/43583.patch" title="Attachment '43583.patch' in Ticket #43583"&gt;43583.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43583/43583.patch" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Combined the two patches above into one patch.
&lt;/li&gt;&lt;li&gt;Switched to brackets instead of the alternative syntax.
&lt;/li&gt;&lt;li&gt;Added &lt;code&gt;@since&lt;/code&gt; tag to the inline documentation.
&lt;/li&gt;&lt;li&gt;Added the &lt;code&gt;@ticket&lt;/code&gt; tag to the unit test inline documentation.
&lt;/li&gt;&lt;li&gt;Changed booleans in the documentation to lowercase to match core.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43583 (Introduce new PHP cross-version compat function `is_countable()`) updated</title>
      
        <dc:creator>ayeshrajans</dc:creator>

      <pubDate>Thu, 19 Apr 2018 20:57:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43583#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43583#comment:7/1524171425845398</guid>
      <description>&lt;p&gt;
@desrosj isn't the last patch a combination of the 2 patches before it? A combined patch sure helps it I just wanted to make sure of you wanted to changed something.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43583.patch attached to Ticket #43583</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 19 Apr 2018 20:50:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43583/43583.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43583/43583.patch/1524171040364579</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>43814.diff attached to Ticket #43814</title>
      
        <dc:creator>pratikthink</dc:creator>

      <pubDate>Thu, 19 Apr 2018 20:32:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43814/43814.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43814/43814.diff/1524169957866574</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Add New User Wordpress.jpg attached to Ticket #43814</title>
      
        <dc:creator>pratikthink</dc:creator>

      <pubDate>Thu, 19 Apr 2018 20:29:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43814/Add%20New%20User%20Wordpress.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43814/Add%20New%20User%20Wordpress.jpg/1524169791423659</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43814 (Checkbox label has a period in Add New User page.) created</title>
      
        <dc:creator>pratikthink</dc:creator>

      <pubDate>Thu, 19 Apr 2018 20:29:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43814</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43814/1524169761180404</guid>
      <description>&lt;p&gt;
In a previous ticket (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33780" title="#33780: defect (bug): Made Check Box label consistent for discussion meta box (closed: fixed)"&gt;#33780&lt;/a&gt;) @SergeyBiryukov fixed some checkbox which has period reported by @juhise&lt;br /&gt;
I found a checkbox on &lt;strong&gt;Add New&lt;/strong&gt; user page where Checkbox for &lt;strong&gt;Send User Notification&lt;/strong&gt; has a period.&lt;br /&gt;
&lt;strong&gt;It is only one checkbox in WordPress that containing period.&lt;/strong&gt;
&lt;br /&gt;
thank you
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41442 (Show nearby events in dashboard events widget in a per country basis) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 19 Apr 2018 20:22:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41442#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41442#comment:3/1524169334276351</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #meta-wordcamp by iandunn. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/meta-wordcamp/p1524169333000221"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43637 (Add filters and ajax support for personal data erasure) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 19 Apr 2018 20:17:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43637#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43637#comment:9/1524169035868355</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43637#comment:8" title="Comment 8"&gt;coreymckrill&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Yep, the cap check is there but see &lt;a href="https://core.trac.wordpress.org/ticket/43602#comment:26"&gt;https://core.trac.wordpress.org/ticket/43602#comment:26&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43811 (Licence &amp; Policy notice during installation) updated</title>
      
        <dc:creator>idea15</dc:creator>

      <pubDate>Thu, 19 Apr 2018 20:14:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43811#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43811#comment:5/1524168858600488</guid>
      <description>&lt;p&gt;
Let's break this down as we're really discussing three things.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;GPL
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Is this really necessary for your everyday user? I don't see that the notification would need to be anything other than "The license under which the WordPress software is released is the GPLv2 (or later) from the Free Software Foundation", as the GPL is not something which will concern 99% of site admins.
&lt;/p&gt;
&lt;ol start="2"&gt;&lt;li&gt;Policy
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
For the purposes of installing wp.org, this would mean WP's own privacy policy &lt;a class="ext-link" href="https://wordpress.org/about/privacy/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/about/privacy/&lt;/a&gt;, and it's important that the site administrator not conflate that with the one they are required to create.
&lt;/p&gt;
&lt;ol start="3"&gt;&lt;li&gt;Connection between WP.org and updates
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
This is &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/43811#43492" title="#43811: enhancement: Licence &amp;amp; Policy notice during installation (assigned)"&gt;#43492&lt;/a&gt;, which is still open. So this is putting the cart before the horse in asking for the wording of text for an issue we haven't resolved.
&lt;/p&gt;
&lt;p&gt;
Jetpack's recent addition says:
&lt;/p&gt;
&lt;p&gt;
"We are committed to protecting your privacy." (I have a kneejerk reaction against "we are committed to X" from my marketing manager days as I think it sounds like customer service waffle, but that's just me.)
"Read about how Jetpack uses your data in Automattic's privacy policy &lt;a class="ext-link" href="https://wordpress.org/about/privacy/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/about/privacy/&lt;/a&gt; and What data does Jetpack sync? &lt;a class="ext-link" href="https://jetpack.com/support/what-data-does-jetpack-sync/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://jetpack.com/support/what-data-does-jetpack-sync/&lt;/a&gt;"
And then provides a slider, "Send information to help us improve our products."
Which is opted in by default.
&lt;/p&gt;
&lt;p&gt;
So that would be one model to follow, but. The questions are, are we happy with just going with 2 and 3, and leave GPL to the devs, and can we now look at &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/43811#43492" title="#43811: enhancement: Licence &amp;amp; Policy notice during installation (assigned)"&gt;#43492&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43602 (Add to the privacy tools UX a means to erase personal data by username ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 19 Apr 2018 20:11:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43602#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43602#comment:26/1524168687301998</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43602#comment:21" title="Comment 21"&gt;coreymckrill&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I changed the required capability for accessing the data removal page to &lt;code&gt;delete_users&lt;/code&gt;. This is a capability that Admins have on single sites, but only Super Admins have on multisites.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right. This should work quite differently on multisite. Seems the user should only be "removed" from the current website. If the user is not a member of any other website, then the data can be deleted completely, perhaps even without SA cap?
&lt;/p&gt;
&lt;p&gt;
Super admins will also need some more UI to be able to choose if the user should only be removed from one site or deleted completely.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43757.2.diff attached to Ticket #43757</title>
      
        <dc:creator>pratikthink</dc:creator>

      <pubDate>Thu, 19 Apr 2018 20:00:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43757/43757.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43757/43757.2.diff/1524168042391844</guid>
      <description>&lt;p&gt;
added correct sentence for comment
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38195 (Adding more mime_types filter to Media Library) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Thu, 19 Apr 2018 19:52:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38195#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38195#comment:9/1524167543089453</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think right now I'd vote without thought to having 'Documents' added. I am less keen on all the other options, that's not saying some aren't really useful, I just would like to also work out the UI as we add more and more. Documents could be added now and that design problem doesn't need working out.
&lt;/p&gt;
&lt;p&gt;
I would note that some terms used we totally should look at if we do add, for example terms like 'web documents' and 'interactives' could do with investigating if the right ones.
&lt;/p&gt;
&lt;p&gt;
This brings up a design issue though as said, that many items in a drop down causes people to just skip over, not find what they are looking for. We should consider iterating the interface, over adding more than one extra here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38195 (Adding more mime_types filter to Media Library) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 19 Apr 2018 19:40:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38195#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38195#comment:8/1524166821684557</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1524166820000659"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43813 (Meta API should set `last_changed` cache key internally) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 19 Apr 2018 19:34:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43813#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43813#comment:1/1524166478194527</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Infer the cache-key using $meta_type in the following function
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I like this for its simplicity, but I'm concerned about third-party uses of &lt;code&gt;update_metadata()&lt;/code&gt;. This change would mean that we're setting &lt;code&gt;last_changed&lt;/code&gt; for any object type &lt;code&gt;foo&lt;/code&gt; that may be passed in. More conservatively, we could work from a whitelist:
&lt;/p&gt;
&lt;pre class="wiki"&gt;// meta_type =&amp;gt; cache_group
$cache_groups = array(
    'post'    =&amp;gt; 'posts',
    'comment' =&amp;gt; 'comments',
    // etc
);
if ( isset( $cache_groups[ $meta_type ] ) ) {
    wp_cache_set( 'last_changed', microtime(), $cache_groups[ $meta_type ] );
}
&lt;/pre&gt;&lt;p&gt;
Of course, it could be that I'm too conservative here. The only real harm that could be caused if WP set &lt;code&gt;last_changed&lt;/code&gt; for arbitrary cache groups is if those plugins were expecting &lt;code&gt;last_changed&lt;/code&gt; to be in a format other than &lt;code&gt;microtime()&lt;/code&gt;. We could probably look through the plugin repo and maybe do some other environment scans to see if this is a real concern. If not, I think something like the above could be modified to:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$cache_group = isset( $cache_groups[ $meta_type ] ) ? $cache_groups[ $meta_type ] : $meta_type;
wp_cache_set( ... );
&lt;/pre&gt;&lt;p&gt;
(rather than mucking about with &lt;code&gt;'s'&lt;/code&gt;)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If we went this route, I believe we'd probably want to do a better job of priming meta-data caches the same way we prime primary object caches (users and posts specifically prime themselves on update, etc...)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not sure I understand. Are there specific places where we're not doing a good job of this? How does the refactoring of how the &lt;code&gt;last_changed&lt;/code&gt; incrementor gets bumped - the subject of this ticket - affect the priming of metadata caches?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43813 (Meta API should set `last_changed` cache key internally) created</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Thu, 19 Apr 2018 19:06:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43813</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43813/1524164809798082</guid>
      <description>&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40669" title="#40669: defect (bug): Proper query cache invalidation on queries meta queries (closed: fixed)"&gt;#40669&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41848" title="Invalidate comment query cache when modifying comment meta.
Comment ..."&gt;r41848&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41849" title="Bump 'posts' query cache incrementor when modifying postmeta.
This ..."&gt;r41849&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Sorry, but I completely missed this work being done for the 4.9 release cycle.
&lt;/p&gt;
&lt;p&gt;
I think the individual post/comment/term/user checks should be moved directly into the appropriate meta API function calls.
&lt;/p&gt;
&lt;p&gt;
I can imagine 2 ways of doing this:
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Add a &lt;code&gt;$cache_key&lt;/code&gt; parameter to the following functions:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;add_metadata()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;update_metadata()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;delete_metadata()&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
When &lt;code&gt;$cache_key&lt;/code&gt; is not empty, it will internally call:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp_cache_set( 'last_changed', microtime(), $cache_key );&lt;/code&gt;
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Infer the cache-key using &lt;code&gt;$meta_type&lt;/code&gt; in the following function:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;update_meta_cache()&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Then call:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp_cache_set( 'last_changed', microtime(), $meta_type . 's' );&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
(We already use &lt;code&gt;$meta_type&lt;/code&gt; to infer things like primary keys, so it's not great, but not new.
&lt;/p&gt;
&lt;p&gt;
If we went this route, I believe we'd probably want to do a better job of priming meta-data caches the same way we prime primary object caches (users and posts specifically prime themselves on update, etc...)
&lt;/p&gt;
&lt;p&gt;
cc @boonebgorges @spacedmonkey for consult &amp;amp; discussion
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21603 (Add ability to delete multiple menu items) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 19 Apr 2018 18:40:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21603#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21603#comment:20/1524163229192569</guid>
      <description>&lt;p&gt;
FWIW, &lt;a class="missing attachment"&gt;Delete 2.png&lt;/a&gt; was one of my previous ideas, using the Bulk Select pattern from Media.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Bulk Delete 2.png attached to Ticket #21603</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 19 Apr 2018 18:29:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21603/Bulk%20Delete%202.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21603/Bulk%20Delete%202.png/1524162558365312</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21603 (Add ability to delete multiple menu items) updated</title>
      
        <dc:creator>nic.bertino</dc:creator>

      <pubDate>Thu, 19 Apr 2018 18:27:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21603#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21603#comment:19/1524162445888142</guid>
      <description>&lt;p&gt;
This ticket is tougher than it appears! Based on the rest of the mocks, the best I could come up with is a multi-select mode not relying on checkboxes but visual information and interaction patterns that should be fairly common.
&lt;/p&gt;
&lt;p&gt;
I imagine being able to select multiple items by Ctrl/Cmd clicking, and selecting a range with a shift click. This would enter the items into multi-select mode, in which they can be moved en masse or deleted:
&lt;/p&gt;
&lt;p&gt;
[Link to Mockup while I sort out TRAC]&lt;a class="ext-link" href="https://nicbertino.com/wp-content/uploads/2018/04/Multi-select-Concept.png"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://nicbertino.com/wp-content/uploads/2018/04/Multi-select-Concept.png&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
There would most likely need to be a way to manually enter this mode, which could be done with a link that's close to the UI items. This way, mobile users aren't left behind. Not sure the feasibility technically on this, but it was the best I could dream up.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21603 (Add ability to delete multiple menu items) updated</title>
      
        <dc:creator>mizejewski</dc:creator>

      <pubDate>Thu, 19 Apr 2018 18:25:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21603#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21603#comment:18/1524162358512421</guid>
      <description>&lt;p&gt;
I like the red x on each item to allow quick deletion (even though you can't check several to do at once) as mocked up by @melchoyce. However, is that option hidden until the user clicks the &lt;strong&gt;Reorder&lt;/strong&gt; button? I'm not sure I would think to do that if I wanted to delete things and not reorder.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21603 (Add ability to delete multiple menu items) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 19 Apr 2018 17:57:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21603#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21603#comment:17/1524160644198281</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by michelemiz. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1524160642000385"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43794 (Appreance &gt;&gt; Menu Needs some improvement by providing a remove icon ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 19 Apr 2018 17:57:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43794#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43794#comment:4/1524160644092044</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by michelemiz. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1524160642000385"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43738 (Make the personal data Export/Delete functionality available in ...) updated</title>
      
        <dc:creator>coreymckrill</dc:creator>

      <pubDate>Thu, 19 Apr 2018 17:25:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43738#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43738#comment:8/1524158722360404</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43738#comment:7" title="Comment 7"&gt;philippmuenchen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also the other open GDPR tickets should keep Multisite in mind.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Here is a list of other tickets that @iandunn and I have identified as potentially having multisite implications:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43435" title="#43435: enhancement: Add settings screen for creating a privacy policy (closed: fixed)"&gt;#43435&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43437" title="#43437: enhancement: Add way for registered users to request deletion or anonymization of ... (new)"&gt;#43437&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/43438" title="#43438: enhancement: Add filters and Ajax support for personal data export (assigned)"&gt;#43438&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43443" title="#43443: enhancement: Add a method for confirmation of requests for deleting or anonymizing ... (closed: fixed)"&gt;#43443&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43547" title="#43547: enhancement: Add personal data from usermeta/userdata to personal data export (closed: fixed)"&gt;#43547&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43602" title="#43602: enhancement: Add to the privacy tools UX a means to erase personal data by username ... (closed: fixed)"&gt;#43602&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43637" title="#43637: enhancement: Add filters and ajax support for personal data erasure (closed: fixed)"&gt;#43637&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43713" title="#43713: enhancement: Privacy: Add a UI to allow administrators to disable individual embeds ... (new)"&gt;#43713&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/43797" title="#43797: enhancement: Logging for GDPR privacy/security (assigned)"&gt;#43797&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
There will, of course, be more, as new tickets are being added every day.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43811 (Licence &amp; Policy notice during installation) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 19 Apr 2018 16:43:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43811#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43811#comment:4/1524156237605944</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #gdpr-compliance by xkon. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/gdpr-compliance/p1524156237000038"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43812.diff attached to Ticket #43812</title>
      
        <author>sebastien@…</author>

      <pubDate>Thu, 19 Apr 2018 16:39:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43812/43812.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43812/43812.diff/1524155974402177</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43812 (Retrieving Blog/site description in multisite) created</title>
      
        <author>sebastien@…</author>

      <pubDate>Thu, 19 Apr 2018 16:38:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43812</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43812/1524155931423437</guid>
      <description>&lt;p&gt;
Hello,
&lt;/p&gt;
&lt;p&gt;
In a project on a Multisite I need on site 1 (for example) to retrieve description on site 2.
&lt;/p&gt;
&lt;p&gt;
With
&lt;/p&gt;
&lt;pre class="wiki"&gt;get_blog_details()
&lt;/pre&gt;&lt;p&gt;
I'm able to retrieve some info (name, url...) but not the description
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43811 (Licence &amp; Policy notice during installation) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 19 Apr 2018 16:17:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43811#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43811#comment:3/1524154662052845</guid>
      <description>&lt;p&gt;
This feels very nebulous right now — how about we get the copy we'll be including drafted first, and then we can talk about design?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42132 (Add filter to emails sent by wp-admin/user-new.php) updated</title>
      
        <dc:creator>benoitchantre</dc:creator>

      <pubDate>Thu, 19 Apr 2018 15:04:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42132#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42132#comment:6/1524150292797963</guid>
      <description>&lt;p&gt;
It would be great to add a filter for &lt;code&gt;$new_user_email['subject']&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43763 (Auto-fixable CS violations in Core) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Thu, 19 Apr 2018 14:57:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43763#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43763#comment:3/1524149830878059</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
the array before is actually the one being used in the line that I updated
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@tfrommen I'd noticed ;-)
I'm happy with either method of fixing it in this case. Unfortunately I can't add the "commit" keyword, but this is good to go.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43764 (CS: Fix violations for admin-header.php) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Thu, 19 Apr 2018 14:54:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43764#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43764#comment:2/1524149643291337</guid>
      <description>&lt;p&gt;
FYI: point 1 of my remarks is being addressed in ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43776" title="#43776: defect (bug): CS: minor adjustment to the PHPCS ruleset (closed: fixed)"&gt;#43776&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35465 (Improve wp.Backbone docs) closed</title>
      
        <dc:creator>atimmer</dc:creator>

      <pubDate>Thu, 19 Apr 2018 14:01:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35465#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35465#comment:13/1524146509711016</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42993" title="Docs: Improve JSDoc for `wp-includes/js/wp-backbone.js`.
Props ..."&gt;42993&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Improve JSDoc for &lt;code&gt;wp-includes/js/wp-backbone.js&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props ericlewis, gma992, adamsilverstein.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35465" title="#35465: enhancement: Improve wp.Backbone docs (closed: fixed)"&gt;#35465&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42993]: Docs: Improve JSDoc for `wp-includes/js/wp-backbone.js`.  Props ...</title>
      
        <dc:creator>atimmer</dc:creator>

      <pubDate>Thu, 19 Apr 2018 14:01:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42993</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42993/1524146508680655</guid>
      <description>&lt;p&gt;
Docs: Improve JSDoc for &lt;code&gt;wp-includes/js/wp-backbone.js&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props ericlewis, gma992, adamsilverstein.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35465" title="#35465: enhancement: Improve wp.Backbone docs (closed: fixed)"&gt;#35465&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43811 (Licence &amp; Policy notice during installation) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 19 Apr 2018 14:01:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43811#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43811#comment:2/1524146486350332</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43811 (Licence &amp; Policy notice during installation) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 19 Apr 2018 14:00:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43811#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43811#comment:1/1524146458996269</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #gdpr-compliance by xkon. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/gdpr-compliance/p1524146457000750"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43473 (Add default text for a privacy policy) updated</title>
      
        <dc:creator>idea15</dc:creator>

      <pubDate>Thu, 19 Apr 2018 13:58:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43473#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43473#comment:12/1524146329859351</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43473#comment:11" title="Comment 11"&gt;mnelson4&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Moving to the 4.9.6 milestone after consensus was reached in the most recent GDPR chat (&lt;a class="ext-link" href="https://wordpress.slack.com/archives/C9695RJBW/p1524063200000304"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/C9695RJBW/p1524063200000304&lt;/a&gt;).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I missed the meeting, so skimmed it looking for what the concensus was and didn’t find it. Does someone in the know want to update this ticket with what was decided for regarding the default text?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Will have first draft late today/early tomorrow.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43811 (Licence &amp; Policy notice during installation) created</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Thu, 19 Apr 2018 13:56:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43811</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43811/1524146197657184</guid>
      <description>&lt;p&gt;
This was a thought mentioned in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43492" title="#43492: enhancement: Core Telemetry and Updates (new)"&gt;#43492&lt;/a&gt; originally but it deserves it's own ticket at the moment.
&lt;/p&gt;
&lt;p&gt;
We all know about the lovely 5 minute installation process that WordPress provides. I feel like we can create a small placeholder during the installation process ( probably on the first page even ) to notify the users about GPL license and a text on Policy. Yes the license is included in a .txt, but people are more used when installing things to see a license / policy during the installation and then continue to the actual install.
&lt;/p&gt;
&lt;p&gt;
I'm not personally thinking about a full blown page with a wall of text but rather a discreet placeholder to hold just the right the information needed like an excerpt from the GPL and a link refering to the full text for the ease of use etc as well as the connection between WordPress and wp.org during updates and such as stated on other tickets so we can be even more clear and upfront to any given user.
&lt;/p&gt;
&lt;p&gt;
@melchoyce do you think you could check this as well so we can provide a mockup/patch to see how it feels and then we can go forth adding the texts needed here as well just in case this could make it to the release also ?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>35465.5.diff attached to Ticket #35465</title>
      
        <dc:creator>atimmer</dc:creator>

      <pubDate>Thu, 19 Apr 2018 13:55:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35465/35465.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35465/35465.5.diff/1524146128446523</guid>
      <description>&lt;p&gt;
Patch with all @since tags.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43805 (Add "in reply to" in comment moderation email notification) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 19 Apr 2018 13:43:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43805#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43805#comment:3/1524145407087655</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43810 (Aphostrophe issue) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 19 Apr 2018 13:32:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43810#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43810#comment:1/1524144722179475</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>35465.4.diff attached to Ticket #35465</title>
      
        <dc:creator>atimmer</dc:creator>

      <pubDate>Thu, 19 Apr 2018 13:31:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35465/35465.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35465/35465.4.diff/1524144672762528</guid>
      <description>&lt;p&gt;
Patch with all docblocks present
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43810 (Aphostrophe issue) created</title>
      
        <dc:creator>colomet</dc:creator>

      <pubDate>Thu, 19 Apr 2018 13:31:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43810</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43810/1524144665009621</guid>
      <description>&lt;p&gt;
Take a look. Instead of to have normal aphostrohpe, we have open and close if is between tags
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://i.imgur.com/c6QDmR5.png"&gt;&lt;img src="https://i.imgur.com/c6QDmR5.png" alt="https://i.imgur.com/c6QDmR5.png" crossorigin="anonymous" title="https://i.imgur.com/c6QDmR5.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://i.imgur.com/1F1zfWj.png"&gt;&lt;img src="https://i.imgur.com/1F1zfWj.png" alt="https://i.imgur.com/1F1zfWj.png" crossorigin="anonymous" title="https://i.imgur.com/1F1zfWj.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43547 (Add personal data from usermeta/userdata to personal data export) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 19 Apr 2018 13:25:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43547#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43547#comment:4/1524144327815795</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43809 (Add personal data from posts to personal data export) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 19 Apr 2018 13:24:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43809#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43809#comment:3/1524144286078606</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43805 (Add "in reply to" in comment moderation email notification) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Thu, 19 Apr 2018 13:07:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43805#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43805#comment:2/1524143224479937</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've added &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43805/43805.diff" title="Attachment '43805.diff' in Ticket #43805"&gt;43805.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43805/43805.diff" title="Download"&gt;​&lt;/a&gt; which includes the URL to the parent comment if one has been set. I was going to change the milestone to Future Release but let's see what people think. Haven't managed to test the patch yet, but if someone wants to give it a try and provide any feedback, please do.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43805.diff attached to Ticket #43805</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Thu, 19 Apr 2018 13:03:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43805/43805.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43805/43805.diff/1524143013795900</guid>
      <description>&lt;p&gt;
Include post parent URL in notify mod email
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43809 (Add personal data from posts to personal data export) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 19 Apr 2018 12:56:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43809#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43809#comment:2/1524142579858527</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #gdpr-compliance by tz-media. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/gdpr-compliance/p1524142579000199"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43809 (Add personal data from posts to personal data export) updated</title>
      
        <dc:creator>TZ Media</dc:creator>

      <pubDate>Thu, 19 Apr 2018 12:52:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43809#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43809#comment:1/1524142359454268</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
How should we handle attachments / files stored in the media library attached to a post?
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Should media files that are attached to a post be exported together with the post?
&lt;/li&gt;&lt;li&gt;What to do with media files used in a post, but originally uploaded by someone else?
&lt;/li&gt;&lt;li&gt;What to do with media files uploaded by a user, but not used in one of his posts?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Due to these cases, I believe that attachments and posts should be handled separately, but then we lose the connection to the posts they belong to, or have to connect them in the actual output report.
&lt;/p&gt;
&lt;p&gt;
This still leads to some questions about the actual export:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;How to handle &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;-tags (and probably &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;-tags for other file formats) in post content? Should these be rewritten in some way if the actual file is included in the export?
&lt;/li&gt;&lt;li&gt;If yes, would that happen in the exporter, or in the code that generates the report? Same for the actual media files.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43805 (Add "in reply to" in comment moderation email notification) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Thu, 19 Apr 2018 12:44:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43805#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43805#comment:1/1524141897525378</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm for adding an in reply to link with a link to the comment within the &lt;code&gt;wp-admin&lt;/code&gt;, but I'm against any other information. Considering the fact you're moderating the reply, having the replied to comment itself doesn't seem necessary here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43620 (Privacy Policy page design) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 19 Apr 2018 12:38:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43620#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43620#comment:29/1524141525105343</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42992" title="Privacy: make the sections in the suggested privacy policy text ..."&gt;42992&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Privacy: make the sections in the suggested privacy policy text postbox foldable. Add Read More/Read Less buttons. Fix copying of the suggested text by pressing the button.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props melchoyce, xkon, azaozz.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43620" title="#43620: enhancement: Privacy Policy page design (closed: fixed)"&gt;#43620&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42992]: Privacy: make the sections in the suggested privacy policy text ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 19 Apr 2018 12:38:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42992</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42992/1524141524076991</guid>
      <description>&lt;p&gt;
Privacy: make the sections in the suggested privacy policy text postbox foldable. Add Read More/Read Less buttons. Fix copying of the suggested text by pressing the button.
&lt;/p&gt;
&lt;p&gt;
Props melchoyce, xkon, azaozz.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43620" title="#43620: enhancement: Privacy Policy page design (closed: fixed)"&gt;#43620&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>43809.patch attached to Ticket #43809</title>
      
        <dc:creator>TZ Media</dc:creator>

      <pubDate>Thu, 19 Apr 2018 12:37:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43809/43809.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43809/43809.patch/1524141420351021</guid>
      <description>&lt;p&gt;
Posts exporter - does not handle attachments yet
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43809 (Add personal data from posts to personal data export) created</title>
      
        <dc:creator>TZ Media</dc:creator>

      <pubDate>Thu, 19 Apr 2018 12:35:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43809</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43809/1524141302874784</guid>
      <description>&lt;p&gt;
Add personal data from posts to the personal data export infrastructure built in &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/43438" title="#43438: enhancement: Add filters and Ajax support for personal data export (assigned)"&gt;#43438&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43546" title="#43546: enhancement: Add to the privacy tools UX a means to export personal data by ... (closed: fixed)"&gt;#43546&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>expanded-3.png attached to Ticket #43620</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 19 Apr 2018 12:08:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43620/expanded-3.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43620/expanded-3.png/1524139701375122</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>expanded-2.png attached to Ticket #43620</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 19 Apr 2018 12:07:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43620/expanded-2.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43620/expanded-2.png/1524139669808532</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>expanded-1.png attached to Ticket #43620</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 19 Apr 2018 12:07:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43620/expanded-1.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43620/expanded-1.png/1524139657134714</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>collapsed.png attached to Ticket #43620</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 19 Apr 2018 12:07:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43620/collapsed.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43620/collapsed.png/1524139634423419</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43738 (Make the personal data Export/Delete functionality available in ...) updated</title>
      
        <dc:creator>philippmuenchen</dc:creator>

      <pubDate>Thu, 19 Apr 2018 09:46:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43738#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43738#comment:7/1524131184891485</guid>
      <description>&lt;p&gt;
I absolutely agree with the comments above. A Multisite and/or Multi-Network environment needs the possibility to set defaults to all sites in the networks. Also the other open GDPR tickets should keep Multisite in mind.
As the admin is the boss in a single site, the super admin is the boss of all sites. So e.g. the request to delete/forget a user should come to the super admin as well as he usually is also responsible for the network of pages (as operator).
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
I also commented on the roadmap before: &lt;a class="ext-link" href="https://make.wordpress.org/core/2018/03/28/roadmap-tools-for-gdpr-compliance/#comment-33565"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2018/03/28/roadmap-tools-for-gdpr-compliance/#comment-33565&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43804 (Undefined offset: 0 in ../wp-includes/taxonomy.php on line 1903) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 19 Apr 2018 09:21:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43804#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43804#comment:1/1524129661995948</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Welcome to WordPress Trac @vasyltech
&lt;/p&gt;
&lt;p&gt;
Thanks for the report.
&lt;/p&gt;
&lt;p&gt;
But I'm unable to reproduce this.
&lt;/p&gt;
&lt;p&gt;
I've attached my test in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43804/43804.diff" title="Attachment '43804.diff' in Ticket #43804"&gt;43804.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43804/43804.diff" title="Download"&gt;​&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Can you elaborate further how we can reproduce the bug?
&lt;/p&gt;
&lt;p&gt;
Thanks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43804.diff attached to Ticket #43804</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 19 Apr 2018 09:17:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43804/43804.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43804/43804.diff/1524129450331165</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43797 (Logging for GDPR privacy/security) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 19 Apr 2018 09:03:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43797#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43797#comment:6/1524128628254572</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #gdpr-compliance by xkon. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/gdpr-compliance/p1524128627000469"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43797 (Logging for GDPR privacy/security) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Thu, 19 Apr 2018 09:02:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43797#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43797#comment:5/1524128528990355</guid>
      <description>&lt;p&gt;
I've been doing something similar with a website that has custom forms / cookies etc, so I thought of converting the code a little bit to see if it would help here at all. I went along the lines of how the requests CPTs where created for the privacy tools but I'm not sure if there's a better/clever way to do it for core. I have a custom admin page that lists all of the consents so the admin can easily who has done what also.
&lt;/p&gt;
&lt;p&gt;
Ofc this might be pretty basic but it has served the websites needs pretty well until now.
&lt;/p&gt;
&lt;p&gt;
I can add this on the &lt;code&gt;user.php&lt;/code&gt; that we currently have all of our extra classes if this is ok for a start so we can check / enhance it better.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;WP_Privacy_Consent_Logs&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;consent_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$attr&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                        &lt;span class="s1"&gt;'post_type'&lt;/span&gt;  &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'consent_log'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="s1"&gt;'meta_query'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                                &lt;span class="s1"&gt;'relation'&lt;/span&gt;     &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'AND'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="s1"&gt;'_user_email'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                                        &lt;span class="s1"&gt;'key'&lt;/span&gt;   &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'_user_email'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                        &lt;span class="s1"&gt;'value'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$attr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'email_address'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                                &lt;span class="p"&gt;),&lt;/span&gt;
                                &lt;span class="s1"&gt;'_consent_identifier'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                                        &lt;span class="s1"&gt;'key'&lt;/span&gt;   &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'_consent_identifier'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                        &lt;span class="s1"&gt;'value'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$attr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'identifier'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                                &lt;span class="p"&gt;),&lt;/span&gt;
                        &lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="nv"&gt;$query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WP_Query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$query&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;have_posts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$query&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;has_consent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$attr&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$exists&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;consent_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                        &lt;span class="s1"&gt;'email_address'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$attr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'email_address'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                        &lt;span class="s1"&gt;'identifier'&lt;/span&gt;    &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$attr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'identifier'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                &lt;span class="p"&gt;));&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$exists&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'yes'&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;get_post_meta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$exists&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'_consent_status'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;add_consent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$attr&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$exists&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;consent_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                        &lt;span class="s1"&gt;'email_address'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$attr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'email_address'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                        &lt;span class="s1"&gt;'identifier'&lt;/span&gt;    &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$attr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'identifier'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                &lt;span class="p"&gt;));&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nv"&gt;$exists&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nv"&gt;$user_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                        &lt;span class="nv"&gt;$consent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wp_insert_post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                                &lt;span class="s1"&gt;'post_author'&lt;/span&gt;   &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$user_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="s1"&gt;'post_status'&lt;/span&gt;   &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'publish'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="s1"&gt;'post_type'&lt;/span&gt;     &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'consent_log'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="s1"&gt;'post_date'&lt;/span&gt;     &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'mysql'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
                                &lt;span class="s1"&gt;'post_date_gmt'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;current_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'mysql'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
                        &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                        &lt;span class="nx"&gt;update_post_meta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$consent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'_user_email'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$attr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'email_address'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                        &lt;span class="nx"&gt;update_post_meta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$consent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'_consent_identifier'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$attr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'identifier'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                        &lt;span class="nx"&gt;update_post_meta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$consent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'_consent_status'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$attr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'accepted'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;remove_consent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$attr&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$exists&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;consent_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                        &lt;span class="s1"&gt;'email_address'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$attr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'email_address'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                        &lt;span class="s1"&gt;'identifier'&lt;/span&gt;    &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$attr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'identifier'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                &lt;span class="p"&gt;));&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$exists&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nx"&gt;wp_delete_post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$exists&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;update_consent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$attr&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$attr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'accepted'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nv"&gt;$exists&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;consent_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                                &lt;span class="s1"&gt;'email_address'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$attr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'email_address'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                                &lt;span class="s1"&gt;'identifier'&lt;/span&gt;    &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$attr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'identifier'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                        &lt;span class="p"&gt;));&lt;/span&gt;
                        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$exists&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                                &lt;span class="nx"&gt;update_post_meta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$exists&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'_consent_status'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$attr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'accepted'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
I'm using it this way pretty much:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="c1"&gt;// consent_exists
&lt;/span&gt;&lt;span class="nv"&gt;$consent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WP_Privacy_Consent_Logs&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s1"&gt;'email_address'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'test@test.test'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'identifier'&lt;/span&gt;    &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'cookie_form_1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$check&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$consent&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;consent_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$check&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;error_log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'exists'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;error_log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'exists not'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// has_consent
&lt;/span&gt;&lt;span class="nv"&gt;$consent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WP_Privacy_Consent_Logs&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s1"&gt;'email_address'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'test@test.test'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'identifier'&lt;/span&gt;    &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'cookie_form_1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$check&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$consent&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;has_consent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$check&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;error_log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'has'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;error_log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'has not'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// add_consent
&lt;/span&gt;&lt;span class="nv"&gt;$consent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WP_Privacy_Consent_Logs&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s1"&gt;'email_address'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'test@test.test'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'identifier'&lt;/span&gt;    &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'cookie_form_1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'accepted'&lt;/span&gt;      &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'no'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$check&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$consent&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;add_consent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$check&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;error_log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'added'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;error_log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'not added'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// remove_consent
&lt;/span&gt;&lt;span class="nv"&gt;$consent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WP_Privacy_Consent_Logs&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s1"&gt;'email_address'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'test@test.test'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'identifier'&lt;/span&gt;    &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'cookie_form_1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$check&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$consent&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;remove_consent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$check&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;error_log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'removed'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;error_log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'not removed'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// update_consent
&lt;/span&gt;&lt;span class="nv"&gt;$consent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WP_Privacy_Consent_Logs&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s1"&gt;'email_address'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'test@test.test'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'identifier'&lt;/span&gt;    &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'cookie_form_1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'accepted'&lt;/span&gt;      &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'yes'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$check&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$consent&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;update_consent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$check&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;error_log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'updated'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;error_log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'not updated'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40948 (Load meta files earlier in `wp-settings.php`) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 19 Apr 2018 08:52:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40948#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40948#comment:20/1524127969362429</guid>
      <description>&lt;p&gt;
@barry Seems that this bug had indeed already been reported via &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43609" title="#43609: defect (bug): Fatal error: Cannot redeclare wptexturize() (during installation) (closed: fixed)"&gt;#43609&lt;/a&gt; and fixed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42988" title="Upgrade/Install: Don't include `wp-includes/formatting.php` twice ..."&gt;[42988]&lt;/a&gt; as @ocean90 stated above. Can you verify that solves the problem on wp.com?
&lt;/p&gt;
&lt;p&gt;
Reverting &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42835" title="Bootstrap: Load `formatting.php` and `meta.php` earlier in ..."&gt;[42835]&lt;/a&gt; is not really an option since other functionality is built on it that requires some of the functions to be loaded early. I'd like to emphasize what was said before, that reverting furthermore wouldn't allow us to find these bugs. If there's anything else, please report on this ticket or as an individual ticket referencing this one, and we'll get it fixed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43602 (Add to the privacy tools UX a means to erase personal data by username ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 19 Apr 2018 08:44:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43602#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43602#comment:25/1524127448194829</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43602#comment:24" title="Comment 24"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
This is the "first run" that is committed primarily to make the functionality easier to test. Enhancements are not only desirable but also highly appreciated :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43808 (Photos do not keep rotation when uploaded from iPad) created</title>
      
        <dc:creator>timlings</dc:creator>

      <pubDate>Thu, 19 Apr 2018 08:36:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43808</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43808/1524127000662900</guid>
      <description>&lt;p&gt;
When I take photos on my iPad and then upload them to a wordpress site using my iPad, they don’t keep the rotation settings for the image and I then have to manually rotate the images to the correct rotation.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43620 (Privacy Policy page design) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 19 Apr 2018 08:30:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43620#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43620#comment:28/1524126652403688</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
the fixed height might have caused issues on responsive things since the text would remain fluid.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Actually, exactly the opposite. If you hard-code the text "cut" position, it will make the containers taller on smaller screens. Also, why would we hard-code something in PHP when it can be done with CSS better? :) I'll try that and compare the results.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40948 (Load meta files earlier in `wp-settings.php`) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 19 Apr 2018 08:27:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40948#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40948#comment:19/1524126466674592</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Noting that the above is already fixed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42988" title="Upgrade/Install: Don't include `wp-includes/formatting.php` twice ..."&gt;[42988]&lt;/a&gt;. What other edge cases are there? And how would you find them if things get reverted?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43740 (Filter WP_Post methods (vs. removing final/'get_post' filter)) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 19 Apr 2018 08:27:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43740#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43740#comment:2/1524126423221694</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by mte90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1524126422000072"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43807 (sticky posts can rank first with normal posts in rest api ?) closed</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Thu, 19 Apr 2018 08:22:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43807#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43807#comment:1/1524126162454317</guid>
      <description>invalid: &lt;p&gt;
Hi @jkhaoqi110, welcome to Core Trac.
&lt;/p&gt;
&lt;p&gt;
Core Trac is meant for bug reports and feature requests. For support related things, you'll need to post on the support forums instead. The best place to ask this is the &lt;a class="ext-link" href="https://wordpress.org/support/forum/wp-advanced/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;development forum&lt;/a&gt;. Someone should be able to shed some light on how you can achieve this there.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #12955 (Add get_post filter) updated</title>
      
        <dc:creator>Mte90</dc:creator>

      <pubDate>Thu, 19 Apr 2018 08:19:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12955#comment:73</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12955#comment:73/1524125992864267</guid>
      <description>&lt;p&gt;
Maybe we can close this one and move on the new one that has a proposal.
In the previous review on Slack was mentioned the fact that this ticket is very old and require too much to analyze all the feedback and proposals and move on a new draft proposal is better.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40948 (Load meta files earlier in `wp-settings.php`) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 19 Apr 2018 08:17:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40948#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40948#comment:18/1524125859470082</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
As Barry points out, shuffling load order is really dangerous and brings up edge cases. It shouldn't be done without unit tests...
&lt;/p&gt;
&lt;p&gt;
Should &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42835" title="Bootstrap: Load `formatting.php` and `meta.php` earlier in ..."&gt;[42835]&lt;/a&gt; be reverted until all edge cases are fixed?
&lt;/p&gt;
&lt;p&gt;
Also, formatting.php shouldn't be needed for accessing the db. I'd rather move &lt;code&gt;sanitize_key()&lt;/code&gt; or introduce a similar function than load a file that is clearly intended for formatting the PHP output while accessing the db.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43803 (Change all the occurrences of `(opens in a new window)` to `(opens in ...) updated</title>
      
        <dc:creator>chetan200891</dc:creator>

      <pubDate>Thu, 19 Apr 2018 08:15:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43803#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43803#comment:2/1524125709928168</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Added initial patch to change text from "opens in a new window" to "opens in a new tab".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43803.diff attached to Ticket #43803</title>
      
        <dc:creator>chetan200891</dc:creator>

      <pubDate>Thu, 19 Apr 2018 08:14:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43803/43803.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43803/43803.diff/1524125660300116</guid>
      <description>&lt;p&gt;
Created inital patch to change text from "window" to "tab".
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43807 (sticky posts can rank first with normal posts in rest api ?) created</title>
      
        <dc:creator>jkhaoqi110</dc:creator>

      <pubDate>Thu, 19 Apr 2018 08:11:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43807</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43807/1524125470624059</guid>
      <description>&lt;p&gt;
How can I get sticky posts at the top of the posts array from REST API 'wp/v2/posts'
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43806 (Post Format &amp; Custom Post Type) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Thu, 19 Apr 2018 08:04:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43806#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43806#comment:2/1524125086738429</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43575 (Post Format) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Thu, 19 Apr 2018 08:03:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43575#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43575#comment:4/1524125024946582</guid>
      <description>&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/ticket/43806"&gt;#43806&lt;/a&gt; was marked as a duplicate.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43806 (Post Format &amp; Custom Post Type) closed</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Thu, 19 Apr 2018 08:02:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43806#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43806#comment:1/1524124940946590</guid>
      <description>maybelater: &lt;p&gt;
Hi @prismaindonesia, welcome to Core Trac!
&lt;/p&gt;
&lt;p&gt;
Trac is for reporting bugs and feature requests that are to be included in WordPress core, but this seems more like feedback to me that would probably be better suited on the forums in the &lt;a class="ext-link" href="https://wordpress.org/support/forum/requests-and-feedback/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Requests &amp;amp; Feedback&lt;/a&gt; forum. You should get the right response there.
&lt;/p&gt;
&lt;p&gt;
Also seems like a potential duplicate of &lt;a href="https://core.trac.wordpress.org/ticket/43575"&gt;#43575&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43602 (Add to the privacy tools UX a means to erase personal data by username ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 19 Apr 2018 07:58:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43602#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43602#comment:24/1524124690979060</guid>
      <description>&lt;p&gt;
Stuff like &lt;code&gt;&amp;lt;a href="#" &amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;a class="button" href="#" &amp;gt;&lt;/code&gt; really goes against our accessibility standards.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/coding-standards/accessibility-coding-standards/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/handbook/best-practices/coding-standards/accessibility-coding-standards/&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43806 (Post Format &amp; Custom Post Type) created</title>
      
        <dc:creator>prismaindonesia</dc:creator>

      <pubDate>Thu, 19 Apr 2018 07:53:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43806</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43806/1524124421958016</guid>
      <description>&lt;p&gt;
Any future update to create post format that using CPT? I run several post type in my site video viral, and coding needs a hard work.
&lt;/p&gt;
&lt;p&gt;
Thank you
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43796 (User Role with integer role name not showing in admin filter list) updated</title>
      
        <dc:creator>aiyaz</dc:creator>

      <pubDate>Thu, 19 Apr 2018 07:26:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43796#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43796#comment:2/1524122785755691</guid>
      <description>&lt;p&gt;
Hi John,
&lt;/p&gt;
&lt;p&gt;
Yes, I agree that &lt;code&gt;add_role()&lt;/code&gt; expects a string as a parameter but when I passed an integer, the role has been created but when I assigned that role to any users, it doesn't show into the top filter.
&lt;/p&gt;
&lt;p&gt;
actually, I'm looking for this because, I've synchronized user role with external membership API and they are maintaining membership id as an integer so to avoid an alias kind of thing, I need a patch that works with integer and string as a role name in &lt;code&gt;add_role&lt;/code&gt; function.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43799 (Add a UI and functionality to deactivate gravatar completely (for ...) updated</title>
      
        <dc:creator>TZ Media</dc:creator>

      <pubDate>Thu, 19 Apr 2018 06:13:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43799#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43799#comment:2/1524118415134120</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Upon looking at it - yes, it might be. I must admit that I didn't actually look at the implementation of &lt;code&gt;get_avatar()&lt;/code&gt; before opening this ticket.
&lt;/p&gt;
&lt;p&gt;
However, the implementation of get_avatar() allows for 2 ways to display avatars even if show_avatars is false:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;$args[''force_display'']&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;the &lt;code&gt;pre_get_avatar&lt;/code&gt;-filter hook.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This effectively makes it impossible for an admin to override a plugin or theme trying to force the display of gravatars.
&lt;/p&gt;
&lt;p&gt;
At least In the case of &lt;code&gt;show_avatars = false&lt;/code&gt; and &lt;code&gt;force_display = true&lt;/code&gt;, we might have to deliver a (local!) placeholder image, because the layout might depend on "something" being present, hence forcing its output.
&lt;/p&gt;
&lt;p&gt;
So to fix this we need to
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;immediately return false if &lt;code&gt;show_avatars = false&lt;/code&gt; and &lt;code&gt;force_display = false&lt;/code&gt;, even before executing &lt;code&gt;pre_get_avatar&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;immediately return a local placeholder image if &lt;code&gt;show_avatars = false&lt;/code&gt; and &lt;code&gt;force_display = true&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;in all other cases, run through get_avatar as usual.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I could easily patch this, but the question is if we should filter the local placeholder through &lt;code&gt;pre_get_avatar&lt;/code&gt; and &lt;code&gt;get_avatar&lt;/code&gt;, and effectively allow third party code to replace it with a non-local avatar again.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43794 (Appreance &gt;&gt; Menu Needs some improvement by providing a remove icon ...) updated</title>
      
        <dc:creator>kartiks16</dc:creator>

      <pubDate>Thu, 19 Apr 2018 04:59:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43794#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43794#comment:3/1524113987146993</guid>
      <description>&lt;p&gt;
Hello @melchoyce
&lt;/p&gt;
&lt;p&gt;
Thank you for reviewing the ticket. I will keep the watch on ticket &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/21603" title="#21603: enhancement: Add ability to delete multiple menu items (new)"&gt;#21603&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38197 (Update Pingback function To Add Return) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Thu, 19 Apr 2018 04:25:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38197#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38197#comment:24/1524111951512393</guid>
      <description>&lt;p&gt;
It used to return null which is falsey, now it returns an array which truthy. I'd err on the safe side as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43620 (Privacy Policy page design) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Thu, 19 Apr 2018 04:19:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43620#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43620#comment:27/1524111569908667</guid>
      <description>&lt;p&gt;
@azaozz the fixed &lt;code&gt;height&lt;/code&gt; might have caused issues on responsive things since the text would remain fluid.
&lt;/p&gt;
&lt;p&gt;
Either way your 'position: absolute' triggered a nice thought and I figured out what the issue was. If we had extra html below the &lt;code&gt;policy-text&lt;/code&gt; it was copying the tags also. If that &amp;lt;div&amp;gt; is last on the list the copy worked fine.
&lt;/p&gt;
&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43620/43620.4.diff" title="Attachment '43620.4.diff' in Ticket #43620"&gt;43620.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43620/43620.4.diff" title="Download"&gt;​&lt;/a&gt; I kept everything as on &lt;code&gt;43620.3&lt;/code&gt; but re-arranged the html and added the absolute positioning to make the Copy working properly as well.
&lt;/p&gt;
&lt;p&gt;
Everything seems ok here now and works in responsive as well without issues
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43620.4.diff attached to Ticket #43620</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Thu, 19 Apr 2018 04:14:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43620/43620.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43620/43620.4.diff/1524111259403757</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43805 (Add "in reply to" in comment moderation email notification) created</title>
      
        <dc:creator>galbaras</dc:creator>

      <pubDate>Thu, 19 Apr 2018 03:18:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43805</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43805/1524107905367702</guid>
      <description>&lt;p&gt;
The comment moderation notification email provides quick ways to moderate comments, which can save time and hassle.
&lt;/p&gt;
&lt;p&gt;
Sadly, the "in reply to" information, which is available on the moderation page, is missing from these emails, so moderators lack some of the context of the comment.
&lt;/p&gt;
&lt;p&gt;
As you can imagine, the meaning of a comment is vastly different when it relates to the post, as opposed to some stupid comment that someone made, and may make a difference to the moderation outcome.
&lt;/p&gt;
&lt;p&gt;
Therefore, at least when reply threading is enabled, moderation emails should include the "in reply to" comment link and author name.
&lt;/p&gt;
&lt;p&gt;
While we're at it, both the moderation page and email would benefit from the actual replied-to comment to be shown, in order to avoid the hassle of another page load to enable proper moderation.
&lt;/p&gt;
&lt;p&gt;
This can be done in combination with &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/33627" title="#33627: enhancement: In-Context Comment Moderation (new)"&gt;#33627&lt;/a&gt;, where every change done on the moderation page is also reflected in the emails.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38197 (Update Pingback function To Add Return) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Thu, 19 Apr 2018 03:13:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38197#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38197#comment:23/1524107609826192</guid>
      <description>&lt;p&gt;
@desrosj I don't think the signature has changed. The arguments passed are the same. There was no return, now there is.
&lt;/p&gt;
&lt;p&gt;
I think if functionality changes in a non-backward compatible way, that is a signature change. If you add a parameter or return one, the original signature is still maintained.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43789 (the_posts_pagination() outputs the slash at the first link) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 19 Apr 2018 01:17:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43789#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43789#comment:1/1524100657051210</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21112 (Add pre_wp_unique_post_slug to override post slug handling) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 19 Apr 2018 01:13:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21112#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21112#comment:20/1524100427632884</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43800 (Unnecessary &lt;br /&gt; tag in a note on the category page.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 19 Apr 2018 01:11:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43800#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43800#comment:4/1524100289977555</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42864 (REST API: Fire an action after items are completely inserted/updated) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Thu, 19 Apr 2018 00:51:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42864#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42864#comment:3/1524099083462689</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43803 (Change all the occurrences of `(opens in a new window)` to `(opens in ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 19 Apr 2018 00:47:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43803#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43803#comment:1/1524098826446459</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>fix.patch attached to Ticket #43804</title>
      
        <dc:creator>vasyltech</dc:creator>

      <pubDate>Thu, 19 Apr 2018 00:40:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43804/fix.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43804/fix.patch/1524098456198041</guid>
      <description>&lt;p&gt;
Straight forward fix for the "PHP Notice:  Undefined offset: 0 in ../wp-includes/taxonomy.php on line 1903" error
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43804 (Undefined offset: 0 in ../wp-includes/taxonomy.php on line 1903) created</title>
      
        <dc:creator>vasyltech</dc:creator>

      <pubDate>Thu, 19 Apr 2018 00:39:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43804</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43804/1524098390071525</guid>
      <description>&lt;p&gt;
The issue is pretty trivial. When there are no terms assigned to a post, the condition on 1894 will return false and this immediately will cause PHP error because $taxonomies array does not have any records inside.
&lt;/p&gt;
&lt;p&gt;
To reproduce the issue, simply call wp_get_object_terms function with post, page or custom post type that does not have a single hierarchical term assigned to.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43752 (ID, post_parent, menu_order on global $post object is a string in edit ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 19 Apr 2018 00:27:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43752#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43752#comment:5/1524097636741869</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43440 (Add personal data from comments to personal data export) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 19 Apr 2018 00:25:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43440#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43440#comment:28/1524097554012165</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42991" title="Wow. I really shouldn't try to fix the build.
Previous [42989] ..."&gt;42991&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Wow. I really shouldn't try to fix the build.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Previous &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42989" title="Privacy: Fix JSHint errors
Introduced in [42986].
See #43440.
"&gt;[42989]&lt;/a&gt; &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42986" title="Privacy: add means to erase personal data by username or email ..."&gt;[42986]&lt;/a&gt;.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43440" title="#43440: enhancement: Add personal data from comments to personal data export (closed: fixed)"&gt;#43440&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42991]: Wow. I really shouldn't try to fix the build.  Previous [42989] ...</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 19 Apr 2018 00:25:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42991</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42991/1524097552967560</guid>
      <description>&lt;p&gt;
Wow. I really shouldn't try to fix the build.
&lt;/p&gt;
&lt;p&gt;
Previous &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42989" title="Privacy: Fix JSHint errors
Introduced in [42986].
See #43440.
"&gt;[42989]&lt;/a&gt; &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42986" title="Privacy: add means to erase personal data by username or email ..."&gt;[42986]&lt;/a&gt;.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43440" title="#43440: enhancement: Add personal data from comments to personal data export (closed: fixed)"&gt;#43440&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43440 (Add personal data from comments to personal data export) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 19 Apr 2018 00:23:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43440#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43440#comment:27/1524097405952355</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42990" title="Remove accidental addition to package.json
Introduced in [42989].
 ..."&gt;42990&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Remove accidental addition to package.json&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42989" title="Privacy: Fix JSHint errors
Introduced in [42986].
See #43440.
"&gt;[42989]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43440" title="#43440: enhancement: Add personal data from comments to personal data export (closed: fixed)"&gt;#43440&lt;/a&gt;.&lt;br /&gt;
Unprops jorbin.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42990]: Remove accidental addition to package.json  Introduced in [42989].  ...</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 19 Apr 2018 00:23:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42990</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42990/1524097404875292</guid>
      <description>&lt;p&gt;
Remove accidental addition to package.json
&lt;/p&gt;
&lt;p&gt;
Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42989" title="Privacy: Fix JSHint errors
Introduced in [42986].
See #43440.
"&gt;[42989]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43440" title="#43440: enhancement: Add personal data from comments to personal data export (closed: fixed)"&gt;#43440&lt;/a&gt;.
Unprops jorbin.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43440 (Add personal data from comments to personal data export) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 19 Apr 2018 00:22:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43440#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43440#comment:26/1524097332064805</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42989" title="Privacy: Fix JSHint errors
Introduced in [42986].
See #43440.
"&gt;42989&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Privacy: Fix JSHint errors&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42986" title="Privacy: add means to erase personal data by username or email ..."&gt;[42986]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43440" title="#43440: enhancement: Add personal data from comments to personal data export (closed: fixed)"&gt;#43440&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42989]: Privacy: Fix JSHint errors  Introduced in [42986].  See #43440. </title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 19 Apr 2018 00:22:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42989</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42989/1524097331005473</guid>
      <description>&lt;p&gt;
Privacy: Fix JSHint errors
&lt;/p&gt;
&lt;p&gt;
Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42986" title="Privacy: add means to erase personal data by username or email ..."&gt;[42986]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43440" title="#43440: enhancement: Add personal data from comments to personal data export (closed: fixed)"&gt;#43440&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43637 (Add filters and ajax support for personal data erasure) updated</title>
      
        <dc:creator>coreymckrill</dc:creator>

      <pubDate>Thu, 19 Apr 2018 00:14:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43637#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43637#comment:8/1524096887393993</guid>
      <description>&lt;p&gt;
Should &lt;code&gt;wp_ajax_wp_privacy_erase_personal_data()&lt;/code&gt; have a capability check? Seems like it should be &lt;code&gt;delete_users&lt;/code&gt; like in &lt;a href="https://core.trac.wordpress.org/ticket/43602#comment:21"&gt;https://core.trac.wordpress.org/ticket/43602#comment:21&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43738 (Make the personal data Export/Delete functionality available in ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 19 Apr 2018 00:11:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43738#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43738#comment:6/1524096674618681</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by maxfein. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1524096673000325"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43738 (Make the personal data Export/Delete functionality available in ...) updated</title>
      
        <dc:creator>maxfein</dc:creator>

      <pubDate>Thu, 19 Apr 2018 00:03:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43738#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43738#comment:5/1524096238323842</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Happy to see this being addressed for multisite... super busy atm, will come back with something more structured soon as I can :) ...rest is mostly a quick re-post of a comment at &lt;a class="ext-link" href="https://make.wordpress.org/core/2018/03/28/roadmap-tools-for-gdpr-compliance/#comment-33575"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;roadmap&lt;/a&gt; to bring at least something to the table...
&lt;/p&gt;
&lt;p&gt;
I’m using JJJ’s wp-multi-network (to run multiple networks from one WP).
&lt;/p&gt;
&lt;p&gt;
so, I also have some networks (mostly) self-administered by clients and I have some clients with accounts at multiple networks &amp;gt;&amp;gt;&amp;gt; and they all have many users of various kinds associated with various sites(/networks).
&lt;/p&gt;
&lt;p&gt;
I imagine that institutions like schools and many other use cases face similar issues.
&lt;/p&gt;
&lt;p&gt;
basically, seems like there are times when *things* need to get more nuanced,
eg. data export/delete from (per site|per network|?select from mysites?|all data)
&lt;/p&gt;
&lt;p&gt;
Cheers, Max
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>