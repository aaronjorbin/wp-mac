<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Changeset [4111]: Die before including the header.</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 22 Aug 2006 18:20:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/4111</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/4111/1156270800784608</guid>
      <description>&lt;p&gt;
Die before including the header.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [4110]: Add plugin page load hooks. Useful for queueing scripts for a ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 22 Aug 2006 17:38:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/4110</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/4110/1156268289466351</guid>
      <description>&lt;p&gt;
Add plugin page load hooks. Useful for queueing scripts for a particular plugin page.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #3062 (the_posts filtering should be done earlier) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Tue, 22 Aug 2006 17:35:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3062</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3062/1156268111000000</guid>
      <description>&lt;p&gt;
RuddO: if you feel that it is not a bug there should be no problem with closing as worksforme.
&lt;/p&gt;
&lt;p&gt;
Best thing would be to attach your test plugin to show how you use post_where to achieve the required result and close as worksforme.
&lt;/p&gt;
&lt;p&gt;
That way people can see how to do it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #2799,​3059 batch updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 22 Aug 2006 17:31:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=2799%2C3059</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=2799%2C3059/1156267917000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/4109" title="cache_javascript_headers() from masquerade. fixes #3059 #2799"&gt;[4109]&lt;/a&gt;) cache_javascript_headers() from masquerade. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/3059" title="#3059: defect (bug): Static javascript should all be cached. (closed: fixed)"&gt;#3059&lt;/a&gt; &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2799" title="#2799: defect (bug): Cache 'dynamic' Javascript (closed: fixed)"&gt;#2799&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [4109]: cache_javascript_headers() from masquerade. fixes #3059 #2799</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 22 Aug 2006 17:31:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/4109</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/4109/1156267913484924</guid>
      <description>&lt;p&gt;
cache_javascript_headers() from masquerade. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/3059" title="#3059: defect (bug): Static javascript should all be cached. (closed: fixed)"&gt;#3059&lt;/a&gt; &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2799" title="#2799: defect (bug): Cache 'dynamic' Javascript (closed: fixed)"&gt;#2799&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #3059 (Static javascript should all be cached.) updated</title>
      
        <dc:creator>mdawaffe</dc:creator>

      <pubDate>Tue, 22 Aug 2006 17:10:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3059</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3059/1156266602000000</guid>
      <description>&lt;p&gt;
This is much nicer than &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2799" title="#2799: defect (bug): Cache 'dynamic' Javascript (closed: fixed)"&gt;#2799&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3053 (several bugs (including security related)) updated</title>
      
        <dc:creator>RuddO</dc:creator>

      <pubDate>Tue, 22 Aug 2006 16:52:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3053</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3053/1156265575000000</guid>
      <description>&lt;p&gt;
Denis, I guess it's kind of rude to ask for this, but could you split this bug into several ones so they can be atomically tracked and solved, and stats more accurately reflect the truth behind WP bug hunting activity?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3062 (the_posts filtering should be done earlier) updated</title>
      
        <dc:creator>RuddO</dc:creator>

      <pubDate>Tue, 22 Aug 2006 16:50:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3062</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3062/1156265434000000</guid>
      <description>&lt;p&gt;
devs: is it within bounds for me to close a bug?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3062 (the_posts filtering should be done earlier) updated</title>
      
        <dc:creator>RuddO</dc:creator>

      <pubDate>Tue, 22 Aug 2006 16:49:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3062</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3062/1156265387000000</guid>
      <description>&lt;p&gt;
No, not true.  I just wrote a plugin that does some sort of thing like you say here.  You should use the posts_where hook.
&lt;/p&gt;
&lt;p&gt;
WP devs: am I right?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3062 (the_posts filtering should be done earlier) updated</title>
      
        <dc:creator>coppit</dc:creator>

      <pubDate>Tue, 22 Aug 2006 16:08:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3062</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3062/1156262914000000</guid>
      <description>&lt;p&gt;
Also, the count for monthly archives should be computed after the_posts filtering, so that if I happen to filter out all the posts, the count should be 0, not the unfiltered count.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3062 (the_posts filtering should be done earlier) created</title>
      
        <dc:creator>coppit</dc:creator>

      <pubDate>Tue, 22 Aug 2006 16:07:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3062</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3062/1156262850000000</guid>
      <description>&lt;p&gt;
the_posts can be used to remove posts from the blog. However, it is called *after* the posts for a page are computed. This means that if I happen to filter out all of the posts for a page, posts from the next page will not slide up, leaving me with a blank page and a "next page" link.
&lt;/p&gt;
&lt;p&gt;
Posts should be filtered with the_posts, then the results should be split into pages.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #3061 (Visual Rich Editor regularly crashing Firefox 1.5.0.6) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Tue, 22 Aug 2006 15:27:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3061</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3061/1156260466000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Is this vanilla 1.5.0.6 or one with extensions installed?
&lt;/p&gt;
&lt;p&gt;
If you have extensions installed which ones?
&lt;/p&gt;
&lt;p&gt;
Does it work reliably with all you extentions disabled?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3061 (Visual Rich Editor regularly crashing Firefox 1.5.0.6) created</title>
      
        <dc:creator>circuit</dc:creator>

      <pubDate>Tue, 22 Aug 2006 15:17:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3061</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3061/1156259833000000</guid>
      <description>&lt;p&gt;
I was using the Rich Editor with no problems before upgrading to Firefox 1.5.0.6 (Win). I now get regular crashes, pretty much every time I use the editor.
&lt;/p&gt;
&lt;p&gt;
Viewing the source as HTML causes a crash, and inserting uploaded images can occasionally cause a crash.
&lt;/p&gt;
&lt;p&gt;
I have noted that highlighting a word, clicking the 'URI' button and entering a link is a common culprit of the crash. It often happens after creating three or four links - the next one will crash the whole browser. However, it can happen first time as well.
&lt;/p&gt;
&lt;p&gt;
This happens on all my installations of Wordpress (five in total).
&lt;/p&gt;
&lt;p&gt;
I have not found 1.5.0.6 to be particularly stable on my machine generally, but the Rich Editor is notoriously bad, so much so that I am now forced to turn it off.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>569.diff attached to Ticket #569</title>
      
        <dc:creator>majelbstoat</dc:creator>

      <pubDate>Tue, 22 Aug 2006 12:10:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/569/569.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/569/569.diff/1156248622200000</guid>
      <description>&lt;p&gt;
urlencode pathinfo before we try to match it in parse_request()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #569 (Percent sign (%) in title leads to unusable permalinks) updated</title>
      
        <dc:creator>majelbstoat</dc:creator>

      <pubDate>Tue, 22 Aug 2006 12:09:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/569</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/569/1156248568000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I believe I've found the problem.  In parse_request() in classes.php, the path info is stripped from the end of the requested URI.  However, the path is not URI encoded, so it fails to match in the str_replace.  This patch urlencodes the path info (minus slashes) so it can be tested properly.
&lt;/p&gt;
&lt;p&gt;
With the patch applied, all permalinks, including encoded ones, are followable.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3052 (pingback_ping() function displays wrong content in pingback-display in ...) updated</title>
      
        <dc:creator>webrocker</dc:creator>

      <pubDate>Tue, 22 Aug 2006 09:37:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3052</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3052/1156239421000000</guid>
      <description>&lt;p&gt;
I have no idea how to do this, but wouldn't it be possible to tell the pingback_ping function to "look" inside the main-content area instead of "looking" through the whole document? or the other way round, to exclude the navigation/sidebar area?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3060 (Massive Code Cleanup: wp-includes/bookmark-template.php) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 22 Aug 2006 09:24:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3060</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3060/1156238673000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/4108" title="Code purtification from Mark J. fixes #3060"&gt;[4108]&lt;/a&gt;) Code purtification from Mark J. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/3060" title="#3060: enhancement: Massive Code Cleanup: wp-includes/bookmark-template.php (closed: fixed)"&gt;#3060&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [4108]: Code purtification from Mark J. fixes #3060</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 22 Aug 2006 09:24:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/4108</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/4108/1156238671586209</guid>
      <description>&lt;p&gt;
Code purtification from Mark J. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/3060" title="#3060: enhancement: Massive Code Cleanup: wp-includes/bookmark-template.php (closed: fixed)"&gt;#3060&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #3052 (pingback_ping() function displays wrong content in pingback-display in ...) updated</title>
      
        <dc:creator>webrocker</dc:creator>

      <pubDate>Tue, 22 Aug 2006 09:20:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3052</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3052/1156238426000000</guid>
      <description>&lt;p&gt;
ok, actually I have to deal with 2 different "bugs".
the first is kind-of template related:&lt;br /&gt;
1) with the original &lt;code&gt;xmlrpc.php&lt;/code&gt;, page-navigation- and meta-link-contents will show up as excerpt in the pingback, if they are wrapped inside &lt;code&gt;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt; tags and not &lt;code&gt;&amp;lt;p&amp;gt;&amp;lt;/p&amp;gt;&lt;/code&gt; tags. This can be fixed by adding &lt;em&gt;div&lt;/em&gt; to the regex in line 1192 of the pingback_ping() function as stated above.&lt;br /&gt;&lt;br /&gt;
the second is caused by the use of the ultimate tag warrior plugin:&lt;br /&gt;
2) if it is used to display "related posts", and the pinging post has the same tags as the pinged post, the link to the pinged post will appear inside this "related posts" navigation - and the first appearance of that link will trigger the "excerpt" of the pingback. since the "related posts" navigation can appear anywhere inside the page, depending on the template, there is no way to tell which instance of the link is the "correct" one to use for the pingback excerpt. :-(
&lt;br /&gt;
2) will only happen with pingbacks inside the same blog, 1) happens to "foreign" pingbacks as well, so I think 1) should be treated as a bug and 2)... hm, well, dunno.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3052 (pingback_ping() function displays wrong content in pingback-display in ...) updated</title>
      
        <dc:creator>webrocker</dc:creator>

      <pubDate>Tue, 22 Aug 2006 07:32:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3052</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3052/1156231943000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
hm. the problem re-occured in my blog today, despite my "fix".
I use permalinks with "pathinfo", i.e.&lt;br /&gt;&lt;code&gt;http:/mydomain.tld/myblog/index.php/2006/08/12/my-title/&lt;/code&gt;&lt;br /&gt;
A post with a nearly identical title ("&lt;em&gt;brave new internet revisited&lt;/em&gt;") to the pinged post ("&lt;em&gt;brave new internet&lt;/em&gt;") produced a pingback with again the wrong contents in it; again the "related posts" navigation showed up as the excerpt in the pingback display.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>bookmark-template_CLEANUP.diff attached to Ticket #3060</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Tue, 22 Aug 2006 07:00:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/3060/bookmark-template_CLEANUP.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/3060/bookmark-template_CLEANUP.diff/1156230047110000</guid>
      <description>&lt;p&gt;
Patch for /trunk/
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #3060 (Massive Code Cleanup: wp-includes/bookmark-template.php) created</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Tue, 22 Aug 2006 07:00:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3060</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3060/1156230015000000</guid>
      <description>&lt;p&gt;
Massive Code Cleanup returns, with a focus on bookmark-template.php
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Spaces to tabs, tabs to spaces, where appropriate
&lt;/li&gt;&lt;li&gt;Kill trailing tabs and spaces
&lt;/li&gt;&lt;li&gt;Unnecessary braces and parenthesis eliminated
&lt;/li&gt;&lt;li&gt;Proper indentation
&lt;/li&gt;&lt;li&gt;if ( 'something' == $var )
&lt;/li&gt;&lt;li&gt;foreach ( (array) $foo as $bar )
&lt;/li&gt;&lt;li&gt;strstr() to strpos() (speed benefit)
&lt;/li&gt;&lt;li&gt;Leaner return/echo blocks
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Changeset [4107]: Use get_option instead of get_bloginfo to retrieve siteurl cause the ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 22 Aug 2006 05:57:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/4107</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/4107/1156226248707315</guid>
      <description>&lt;p&gt;
Use get_option instead of get_bloginfo to retrieve siteurl cause the two aren't the same for some mystical reason.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>wp-cache-js.diff attached to Ticket #3059</title>
      
        <dc:creator>masquerade</dc:creator>

      <pubDate>Tue, 22 Aug 2006 04:43:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/3059/wp-cache-js.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/3059/wp-cache-js.diff/1156221828510000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #3059 (Static javascript should all be cached.) created</title>
      
        <dc:creator>masquerade</dc:creator>

      <pubDate>Tue, 22 Aug 2006 04:42:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3059</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3059/1156221753000000</guid>
      <description>&lt;p&gt;
This introduces a new function, cache_javascript_headers(), for all the javascript files that end in .php, so that they can properly be cached for the admin area. Adds the calls in necessary places (not sure if we should replace it in TinyMCE stuff as well, ping Andy)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #3047 (get_plugininfo()) updated</title>
      
        <dc:creator>forceagainstsomething</dc:creator>

      <pubDate>Mon, 21 Aug 2006 21:21:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3047</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3047/1156195271000000</guid>
      <description>&lt;p&gt;
"It is not the include file being in the same directory but the plugin itself."
&lt;/p&gt;
&lt;p&gt;
Well you've got me there.  Didn't think of that.
&lt;/p&gt;
&lt;p&gt;
"My implementation is not pointless"
&lt;/p&gt;
&lt;p&gt;
I say pointless, because at some point it's not even convenient to use anymore.  And convenience is at the heart of this function.  Having to call the function from the base plugin script, along with passing FILE to the function, degrades the elegance of the function.
&lt;/p&gt;
&lt;p&gt;
"get_bloginfo can be so effortless because it works for the whole blog it does not need a point of reference - anything that provides the info for a plugin needs a point of reference."
&lt;/p&gt;
&lt;p&gt;
Right, but the goal should be making get_plugininfo() as effetless as get_bloginfo().  Doesn't mean it's going to happen, but that should at least be the goal.
&lt;/p&gt;
&lt;p&gt;
"Personally, I think that a plugin author should know the name of the file they're working with. get_plugininfo('whatevvv', 'myplugindir/mymainpluginfile.php'); is not hard to type."
&lt;/p&gt;
&lt;p&gt;
Not true.  I don't hardcode my plugin path, I know others don't either.  Most of my plugins start like this:
&lt;/p&gt;
&lt;p&gt;
define('PLUG_BASE',                 dirname(plugin_basename(&lt;span class="underline"&gt;FILE&lt;/span&gt;)));
&lt;/p&gt;
&lt;p&gt;
define('PLUG_PATH',                 ABSPATH . 'wp-content/plugins/' . PLUG_BASE);
&lt;/p&gt;
&lt;p&gt;
define('PLUG_URL',                 get_bloginfo('wpurl') . '/wp-content/plugins/' . PLUG_BASE);
&lt;/p&gt;
&lt;p&gt;
This way the user can rename my plugin's directory, and it still works.  If I was to use the method you described, I would still have to define the PLUG_BASE to use whenever I call the get_plugininfo() function.  The point of the function is so I don't have to define any more variables.  Also I try my damnest not to use global variables or constants inside of classes, so that means I would have to redefine the PLUG_BASE inside every class.
&lt;/p&gt;
&lt;p&gt;
"I see no point in a crappy implementation to work around lazy plugin developers."
&lt;/p&gt;
&lt;p&gt;
You call it lazy, I call it convenient.  Like I've said already, you can find out the blog's URL without using get_bloginfo().  So does that make me lazy for using get_bloginfo()?  No.  It's just convenient.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3047 (get_plugininfo()) updated</title>
      
        <dc:creator>masquerade</dc:creator>

      <pubDate>Mon, 21 Aug 2006 21:07:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3047</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3047/1156194436000000</guid>
      <description>&lt;p&gt;
Personally, I think that a plugin author should know the name of the file they're working with. get_plugininfo('whatevvv', 'myplugindir/mymainpluginfile.php'); is not hard to type. There's no need for fancy lookups and all that crap from a subplugin file. Or, here's a better idea, in your base plugin file, define myplugin_getinfo($info) { return get_pluginfo($info, __FILE__); }. I see no point in a crappy implementation to work around lazy plugin developers.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3047 (get_plugininfo()) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Mon, 21 Aug 2006 20:50:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3047</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3047/1156193417000000</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;
&lt;em&gt;"The only situation where an include file for a plugin would be in the directory of another plugin, is when a plugin developer dumps all the scripts for his plugin straight into the /plugins directory. No one should be doing that to begin with."&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It is not the include file being in the same directory but the plugin itself.
&lt;/p&gt;
&lt;p&gt;
If the plugin is in the same folder as other plugins with the includes in a child folder your lookup code finds the first (alphabetically I believe) plugin in the folder of plugins and matches that.
&lt;/p&gt;
&lt;p&gt;
My implementation is not pointless - it provides an easy way for a plugin to access the metadata about itself (or another plugin) using the actual plugin file as a reference point.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;get_bloginfo&lt;/code&gt; can be so effortless because it works for the whole blog it does not need a point of reference - anything that provides the info for a plugin needs a point of reference.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3015 (wp_list_cats doesn't hide category with only a future post) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 21 Aug 2006 19:53:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3015</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3015/1156190024000000</guid>
      <description>fixed: &lt;p&gt;
This is fixed in 2.1.  It won't be fixed in 2.0.x since the fix requires the new future posting infrastructure.  We'll have to live with it until 2.1 arrives.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #3015 (wp_list_cats doesn't hide category with only a future post) updated</title>
      
        <dc:creator>Michael_</dc:creator>

      <pubDate>Mon, 21 Aug 2006 19:18:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3015</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3015/1156187920000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I can confirm this problem using WP 2.0.4 and list_cats(). A user has reported me the problem since I am using list_cats() in my plugin &lt;a class="ext-link" href="http://sw-guide.de/wordpress/category-tagging-plugin/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Category Tagging&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3057 (No load wp-settings.php from wp-config.php) updated</title>
      
        <dc:creator>forceagainstsomething</dc:creator>

      <pubDate>Mon, 21 Aug 2006 19:04:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3057</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3057/1156187092000000</guid>
      <description>&lt;p&gt;
Just realized in the patch I put the code below the &lt;em&gt; Turn register globals off  comment.  Suppose that should be above it.
&lt;/em&gt;&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>cron.diff attached to Ticket #3058</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 21 Aug 2006 18:48:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/3058/cron.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/3058/cron.diff/1156186134220000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #3058 (Future posts can collide in cron) created</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 21 Aug 2006 18:48:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3058</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3058/1156186118000000</guid>
      <description>&lt;p&gt;
Future posts that are scheduled for the same time will step on each other in the cron queue.  This can happen if someone schedules multiple posts with the same timestamp.  This is actually pretty hard to do since we don't allow editing of the second in the timestamp.  Instead, the second is picked up from the current time.  Thus you would have to be saving posts that have the same hour:minute timestamp at the same second of any given minute. Despite the odds, people manage to hit that same second.
&lt;/p&gt;
&lt;p&gt;
To fix, I've added another key to the cron array created from the args passed to the hook.  While I was at it I versioned the cron array.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #3047 (get_plugininfo()) updated</title>
      
        <dc:creator>forceagainstsomething</dc:creator>

      <pubDate>Mon, 21 Aug 2006 18:47:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3047</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3047/1156186021000000</guid>
      <description>&lt;p&gt;
&lt;strong&gt;westi:&lt;/strong&gt; The only situation where an include file for a plugin would be in the directory of another plugin, is when a plugin developer dumps all the scripts for his plugin straight into the /plugins directory.  No one should be doing that to begin with.
&lt;/p&gt;
&lt;p&gt;
You're implementation of the function seems pointless to me, since it absolutely must be called from the base plugin script to work.  What kind of function *has* to be called only within a certain script?  That seems silly and confusing.  If it doesn't work as effortlessly as get_bloginfo(), then I don't see any reason to have it at all.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;markjaquith:&lt;/strong&gt; That's what the debug_backtrace() was meant to fix in my original version of the function.  It tells a function which script called it.  As Ryan pointed out, debug_backtrace() is a PHP 4.3+ function, and WP is meant to support 4.2.  That's why I suggested making $filename the second parameter in westi's implementation, so the parameter could be dropped altogether when WP finally supports 4.3+.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>noload.diff attached to Ticket #3057</title>
      
        <dc:creator>forceagainstsomething</dc:creator>

      <pubDate>Mon, 21 Aug 2006 18:34:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/3057/noload.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/3057/noload.diff/1156185264150000</guid>
      <description>&lt;p&gt;
No load wp-settings patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #3057 (No load wp-settings.php from wp-config.php) created</title>
      
        <dc:creator>forceagainstsomething</dc:creator>

      <pubDate>Mon, 21 Aug 2006 18:33:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3057</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3057/1156185238000000</guid>
      <description>&lt;p&gt;
Plugin developers may want to include the wp-config.php without loading wp-settings.php.  Included is a patch to correct.  Usage:
&lt;/p&gt;
&lt;p&gt;
define('NOLOAD_WPSETTINGS', true);
include('wp-config.php');
&lt;/p&gt;
&lt;p&gt;
Defining NOLOAD_WPSETTINGS tells WP to skip loading wp-settings.php.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #3056 (Deleting a comment shows confirmation twice) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Mon, 21 Aug 2006 17:42:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3056</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3056/1156182148000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
From which screen?  What is the URL you are viewing when you click the delete link/button
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3056 (Deleting a comment shows confirmation twice) created</title>
      
        <dc:creator>Mike_Koepke</dc:creator>

      <pubDate>Mon, 21 Aug 2006 12:32:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3056</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3056/1156163544000000</guid>
      <description>&lt;p&gt;
In 2.0.4, deleting a comment shows an "Are you sure" dialog twice.  The first confirmation prompts with Yes No.  Clicking Yes shows the confirmation page again.  Clicking Yes then diaplys an ID not found error.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #3052 (pingback_ping() function displays wrong content in pingback-display in ...) updated</title>
      
        <dc:creator>Webrocker</dc:creator>

      <pubDate>Mon, 21 Aug 2006 11:49:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3052</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3052/1156160992000000</guid>
      <description>&lt;p&gt;
sorry, i messed the formatting in the orig post... should read:
(...) Possible fix: on line 1192 in xmlrpc.php:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$linea = preg_replace( “/ &amp;lt; (h1|h2|h3|h4|h5|h6|p|th|td|li|dt|dd|pre|caption|input|textarea|button|body)[^&amp;gt;]*&amp;gt;/”, “\n\n”, $linea );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
the "div" tag is not recognized. changing that to:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$linea = preg_replace( “/ &amp;lt; (h1|h2|h3|h4|h5|h6|p|th|td|li|dt|dd|pre|caption|input|textarea|button|body|div)[^&amp;gt;]*&amp;gt;/”, “\n\n”, $linea );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
fixed the problems for my blog. (...)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3052 (pingback_ping() function displays wrong content in pingback-display in ...) updated</title>
      
        <dc:creator>Webrocker</dc:creator>

      <pubDate>Mon, 21 Aug 2006 11:34:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3052</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3052/1156160088000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>3047a.diff attached to Ticket #3047</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Mon, 21 Aug 2006 08:30:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/3047/3047a.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/3047/3047a.diff/1156149004170000</guid>
      <description>&lt;p&gt;
Replacement patch as descirbed in my comment
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #3047 (get_plugininfo()) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Mon, 21 Aug 2006 08:29:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3047</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3047/1156148979000000</guid>
      <description>&lt;p&gt;
Thank you all for the feedback.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;forceagainstsomething:&lt;/strong&gt;
Your version of get_plugininfo falls over as soon as the included file that calls it has the parent plugin in the same folder as another plugin. Then you get back the information about the first plugin that it discovers in that folder rather than the plugin you were included from.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;markjaquith:&lt;/strong&gt;
If we assume __FILE__ a the second parameter then __FILE__ will always be wp-includes/plugins.php unfortunately.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;masquerade:&lt;/strong&gt;
Yep lazy loading sounds like a good idea - it does break the possibility of doing the kind of stuff &lt;strong&gt;forceagainstsomething&lt;/strong&gt; wanted to do as you can't lazy load when you don't know the filename - but then again I can see a way of &lt;em&gt;knowing&lt;/em&gt; the filename of the plugin using the include in his methodology anyway.
&lt;/p&gt;
&lt;p&gt;
I am about to upload a new version of my patch changes are:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Lazy Loading
&lt;/li&gt;&lt;li&gt;Change call order to $info, $filename
&lt;/li&gt;&lt;li&gt;$filename is now __FILE__ rather than &lt;code&gt;plugin_basename(!__FILE!__);&lt;/code&gt;
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
If you want to get the info from a included file all you need to do is add a simple function like so to your base plugin file:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function my_plugin_getinfo($info) { return get_pluginfo($info, __FILE__);}
&lt;/pre&gt;&lt;p&gt;
Thanks to a sleepy masquerade on irc for that simple oneliner.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3047 (get_plugininfo()) updated</title>
      
        <dc:creator>masquerade</dc:creator>

      <pubDate>Mon, 21 Aug 2006 06:54:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3047</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3047/1156143250000000</guid>
      <description>&lt;p&gt;
Also, can we not load all the info on every load. It seems unnecessary, as 99% of plugins won't even use it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3047 (get_plugininfo()) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Mon, 21 Aug 2006 06:14:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3047</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3047/1156140841000000</guid>
      <description>&lt;p&gt;
Can we get it to &lt;strong&gt;assume&lt;/strong&gt; &lt;span class="underline"&gt;FILE&lt;/span&gt; if no 2nd parameter is provided?  That'll likely be how most people are using it (within a plugin, accessing information about itself).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3054 (input Element Should Be Spared From wpautop()) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Mon, 21 Aug 2006 00:49:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3054</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3054/1156121340000000</guid>
      <description>&lt;p&gt;
I'd be happy to see &lt;code&gt;&amp;lt;param&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; spared too. People have been using some PHP include plugins to load my plugins into their pages and it's laying waste to it's output with &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt;'s.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>