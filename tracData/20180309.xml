<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #42500 (Enable Revisions when there is 1) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 09 Mar 2018 23:54:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42500#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42500#comment:5/1520639640758254</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #forums by clorith. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/forums/p1520639638000136"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43484 (WordPress Notification Center proposal) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Fri, 09 Mar 2018 23:48:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43484#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43484#comment:12/1520639288429240</guid>
      <description>&lt;p&gt;
BuddyPress eventually evolved Notifications into a first class component similar to Groups, Activity, Messaging, and the others.
&lt;/p&gt;
&lt;p&gt;
Like what’s already happened here in 2 days, a simple easy POC immediately turns into a complex application inside an application. Post types and taxonomy terms aren’t a great fit either, because notifications are generally per-user, not per-role or whatever else.
&lt;/p&gt;
&lt;p&gt;
Not being a nay-sayer; only that everything from UX to data storage will require a completely new invention to work the way notifications traditionally are expected to work.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43438 (Add filters and Ajax support for personal data export) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Fri, 09 Mar 2018 22:59:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43438#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43438#comment:11/1520636389379919</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43438#comment:10" title="Comment 10"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Few initial points on 43438.2.diff:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thank you so much for the fast turn around!
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;The admin-ajax endpoint will need a nonce check and &lt;code&gt;current_user_can()&lt;/code&gt; check.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Done!
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Think that we should have a specific DB query for this export, something like &lt;code&gt;SELECT * FROM {$wpdb-&amp;gt;comments} WHERE comment_author_email = '[email]' LIMIT 10000&lt;/code&gt;. Then can pick only the unique values from that, no need to repeat the same data all the time. Also, that DB query can possibly be more complex so we get only the unique data out of the DB.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Done - instead of custom query, get_comments was up to the task. I set the limit to 100 per page - let me know if you want something higher. 10000 seemed uncomfortably high :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;It's using AJAX but overwrites the whole page. That is somewhat unexpected and can be confusing. IMHO better to just show it inline. Can move the PHP bits in the AJAX endpoint and just send the user_name or email to get it started.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Yep - I didn't make any changes here - this is not meant to be the final UX - I'd like us to all discuss what we want to do with the gathered data and if name/value is going to work in general.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43438.3.diff attached to Ticket #43438</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Fri, 09 Mar 2018 22:56:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43438/43438.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43438/43438.3.diff/1520636208746862</guid>
      <description>&lt;p&gt;
Added Ajax referrer check; current_user_can check; only get comments with email match; break comments up into batches of 100; coding standards
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43498 (PHP Fatal error:  Allowed memory size of 1073741824 bytes exhausted) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 09 Mar 2018 22:52:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43498#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43498#comment:8/1520635947904927</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17904 (Multisite has more restrictions on user login character set) updated</title>
      
        <dc:creator>jadeweb</dc:creator>

      <pubDate>Fri, 09 Mar 2018 22:49:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17904#comment:69</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17904#comment:69/1520635741287909</guid>
      <description>&lt;p&gt;
Seven years, and still active. Yikes! I feel like I may be trying to move a mountain by chiming in here, but I'll give it a go anyhow. :)
&lt;/p&gt;
&lt;p&gt;
I've come to this thread while searching for a way around the strictness of multisite username validation. We have setup a multisite install for a client's network of ecommerce stores, where the vast bulk of users created are WooCommerce customers. Enforcing these restrictions on customers has proved to be a terrible experience. I think this is a sensible use-case and legitimate UX concern.
&lt;/p&gt;
&lt;p&gt;
The clear assumption by some in this thread is that these restrictions on the username are a hard requirement and usernames created on single-site installs should also adhere to them at some point down the road.
&lt;/p&gt;
&lt;p&gt;
On the contrary though, what strikes me is how torturously contrived the restrictions seem to be. The problem boils down to conflating two necessary pieces of data in Multisite: a username for the purposes of authentication, and a slug for a multisite sub-domain. I agree whole-heartedly with @FolioVision's initial position that this is a huge UX loss. If the app were refactored to use two pieces of data, the extra multisite restrictions would be unnecessary. Whilst setting up a new blog, simply offer a slugified version of the username as a default option for the subdomain. In so doing, you could:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;consolidate and simplify username validation logic across single and multisite installs, while maintaining backwards compatibility
&lt;/li&gt;&lt;li&gt;avoid the problem alluded to of having existing usernames become invalid
&lt;/li&gt;&lt;li&gt;existing multisite usernames would continue to work without issue
&lt;/li&gt;&lt;li&gt;effectively retain the current UX of defaulting to have the domain (now, closely) match the user's name
&lt;/li&gt;&lt;li&gt;allow more human-friendly usernames in all cases
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
/end 2¢.
&lt;/p&gt;
&lt;p&gt;
Cheers,
David
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38545 (Add span element to get_the_archive_title()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 09 Mar 2018 22:40:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38545#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38545#comment:33/1520635228847766</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28 (Use 3 type of dates for every post) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 09 Mar 2018 22:36:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28#comment:8/1520634960589934</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-editor by bph. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1520634958000247"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43514 (`get_pages()` DB query result not cached if nothing found) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 09 Mar 2018 21:03:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43514#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43514#comment:1/1520629411836897</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43514/43514.diff" title="Attachment '43514.diff' in Ticket #43514"&gt;43514.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43514/43514.diff" title="Download"&gt;​&lt;/a&gt; ensures that the cache key is also set when the DB query returns no results. The initial check after retrieving the cached value has been adjusted accordingly to be more strict, like it is commonly handled in core (check if value is not &lt;code&gt;false&lt;/code&gt;).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43514.diff attached to Ticket #43514</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 09 Mar 2018 21:01:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43514/43514.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43514/43514.diff/1520629304955970</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43514 (`get_pages()` DB query result not cached if nothing found) created</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 09 Mar 2018 20:58:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43514</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43514/1520629100304551</guid>
      <description>&lt;p&gt;
&lt;code&gt;get_pages()&lt;/code&gt; uses a cache key in order to not have to query the DB when it's not necessary. However, if the DB query returns an empty result, that result is not cached, causing that DB query to be executed every time the function is called with these parameters.
&lt;/p&gt;
&lt;p&gt;
Since the function uses &lt;code&gt;wp_cache_get_last_changed( 'posts' )&lt;/code&gt; anyway, it should be safe to also set an empty array if nothing is found, to prevent those unnecessary database requests.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43438 (Add filters and Ajax support for personal data export) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 09 Mar 2018 20:33:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43438#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43438#comment:10/1520627627055369</guid>
      <description>&lt;p&gt;
Few initial points on 43438.2.diff:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The admin-ajax endpoint will need a nonce check and &lt;code&gt;current_user_can()&lt;/code&gt; check.
&lt;/li&gt;&lt;li&gt;Think that we should have a specific DB query for this export, something like &lt;code&gt;SELECT * FROM {$wpdb-&amp;gt;comments} WHERE comment_author_email = '[email]' LIMIT 10000&lt;/code&gt;. Then can pick only the unique values from that, no need to repeat the same data all the time. Also, that DB query can possibly be more complex so we get only the unique data out of the DB.
&lt;/li&gt;&lt;li&gt;It's using AJAX but overwrites the whole page. That is somewhat unexpected and can be confusing. IMHO better to just show it inline. Can move the PHP bits in the AJAX endpoint and just send the user_name or email to get it started.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43123 (Default captions should NOT use max-width) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 09 Mar 2018 20:28:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43123#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43123#comment:11/1520627304602781</guid>
      <description>&lt;p&gt;
Thanks for all of the feedback and reports.
&lt;/p&gt;
&lt;p&gt;
After looking this over, I think we should revert the change but keep the test improvements that were added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41724" title="Media: Use max-width for default captions.
This alters the HTML ..."&gt;r41724&lt;/a&gt;. The spirit of the change was well-intentioned, but enough cases have come up in custom themes that show it did not work exactly how we thought it would based on our testing with the default themes.
&lt;/p&gt;
&lt;p&gt;
The change also assumes that a site is responsive, which may not always be the case.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #43078,​43123 batch updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 09 Mar 2018 20:19:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=43078%2C43123</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=43078%2C43123/1520626776753089</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43078" title="#43078: defect (bug): Caption Max-width set incorrectly (closed: duplicate)"&gt;#43078&lt;/a&gt; was marked as a duplicate.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #43488 (Debug backtrace doesn’t capture hook name for do_action_ref_array) updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Fri, 09 Mar 2018 20:12:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43488#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43488#comment:3/1520626344824897</guid>
      <description>&lt;p&gt;
Ugh, I &lt;em&gt;thought&lt;/em&gt; there was another one, but somehow managed to miss it in a quick search. :)
&lt;/p&gt;
&lt;p&gt;
Patch updated.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #43123,​43185 batch updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 09 Mar 2018 20:12:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=43123%2C43185</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=43123%2C43185/1520626334624472</guid>
      <description>duplicate: &lt;p&gt;
Thanks for the ticket, @brunochartier. I am going to close this as a duplicate and it will be addressed in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43123" title="#43123: defect (bug): Default captions should NOT use max-width (closed: fixed)"&gt;#43123&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Added_to_hook_functions_in_trace_capture_.patch attached to Ticket #43488</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Fri, 09 Mar 2018 20:11:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43488/Added_to_hook_functions_in_trace_capture_.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43488/Added_to_hook_functions_in_trace_capture_.patch/1520626271325085</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43506 (Ensure a network's `notoptions` cache is an array to reduce lookup overhead) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 09 Mar 2018 19:49:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43506#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43506#comment:2/1520624944164133</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43506/43506.diff" title="Attachment '43506.diff' in Ticket #43506"&gt;43506.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43506/43506.diff" title="Download"&gt;​&lt;/a&gt; fixes this by always setting the &lt;code&gt;{$network_id}:notoptions&lt;/code&gt; cache key in &lt;code&gt;get_network_option()&lt;/code&gt; in case it is not an array. This ensures that on subsequent requests the value is stored in the (local) cache.
&lt;/p&gt;
&lt;p&gt;
Two tests have been added to verify the correct behavior.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43506.diff attached to Ticket #43506</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 09 Mar 2018 19:45:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43506/43506.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43506/43506.diff/1520624759072605</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43218 (PHPUnit 7.x support) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 09 Mar 2018 19:41:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43218#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43218#comment:16/1520624462439838</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43218/43218.3.diff" title="Attachment '43218.3.diff' in Ticket #43218"&gt;43218.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43218/43218.3.diff" title="Download"&gt;​&lt;/a&gt; should fix all the failures. Tested on PHP 5.2.17 with PHPUnit 3.6.12 and PHP 7.2.2 with PHPUnit 7.0.2.
&lt;/p&gt;
&lt;p&gt;
Was going to commit, but it was blocked by a pre-commit hook:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Commit failed (details follow):
Commit blocked by pre-commit hook (exit code 1) with output:
***********************************
PHP error in: trunk/tests/phpunit/includes/phpunit7/speed-trap-listener.php:
Parse error: syntax error, unexpected ':', expecting ';' or '{' in
 trunk/tests/phpunit/includes/phpunit7/speed-trap-listener.php on line 57
Errors parsing trunk/tests/phpunit/includes/phpunit7/speed-trap-listener.php
&lt;/pre&gt;&lt;p&gt;
The line in question is:
&lt;/p&gt;
&lt;pre class="wiki"&gt;public function addError( PHPUnit\Framework\Test $test, Throwable $t, float $time ): void {
&lt;/pre&gt;&lt;p&gt;
Apparently the linter on the pre-commit hook does not support PHP7 return type declarations.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43218.3.diff attached to Ticket #43218</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 09 Mar 2018 19:29:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43218/43218.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43218/43218.3.diff/1520623766676686</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43446 (`meta_compare_key` should support more operators than `LIKE` and `=`) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Fri, 09 Mar 2018 19:16:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43446#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43446#comment:1/1520622976252450</guid>
      <description>&lt;p&gt;
Started on this.
&lt;/p&gt;
&lt;p&gt;
Implemented the following operators: &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;IN&lt;/code&gt;, &lt;code&gt;NOT IN&lt;/code&gt;, &lt;code&gt;NOT LIKE&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
The numerical operators don't make too much sense, I think, since nobody names meta keys with pure numbers out there... I hope :)
&lt;/p&gt;
&lt;p&gt;
I've marked &lt;code&gt;EXISTS&lt;/code&gt;, &lt;code&gt;NOT EXISTS&lt;/code&gt; (these are pretty much &lt;code&gt;=&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt; operators as is, they can probably be aliased), &lt;code&gt;RLIKE&lt;/code&gt;, &lt;code&gt;REGEXP&lt;/code&gt; and &lt;code&gt;NOT REGEXP&lt;/code&gt; for later, so just looking to get some eyes on what I have so far.
&lt;/p&gt;
&lt;p&gt;
Special thanks to @versusbassz for working with me on this. He'll upload the modified docblock once all operators are covered.
&lt;/p&gt;
&lt;p&gt;
Cheers.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43446.1.tests.diff attached to Ticket #43446</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Fri, 09 Mar 2018 19:11:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43446/43446.1.tests.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43446/43446.1.tests.diff/1520622691712091</guid>
      <description>&lt;p&gt;
Tests for !=, NOT LIKE, IN, NOT IN
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>43446.1.diff attached to Ticket #43446</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Fri, 09 Mar 2018 19:11:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43446/43446.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43446/43446.1.diff/1520622676709194</guid>
      <description>&lt;p&gt;
!=, NOT LIKE, IN, NOT IN
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>43438.2.diff attached to Ticket #43438</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Fri, 09 Mar 2018 18:47:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43438/43438.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43438/43438.2.diff/1520621275637121</guid>
      <description>&lt;p&gt;
Updated patch to target privacy.php page instead
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43308 (Alter behavior load-scripts.php and load-styles.php to reduce ...) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Fri, 09 Mar 2018 18:27:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43308#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43308#comment:17/1520620054594981</guid>
      <description>&lt;p&gt;
Looking into HTTP/2 like mentioned would definitely help, and is something we should keep on the table in that ticket (I see it's picked up some pace again).
&lt;/p&gt;
&lt;p&gt;
Removing compression is perfectly fine, many servers will handle the gzipping outside the PHP layer any way, won't they, so we don't need to worry about that much just concat them and leave it at that?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40934 (Allow PHP version requirements for plugins &amp; themes) updated</title>
      
        <dc:creator>Shelob9</dc:creator>

      <pubDate>Fri, 09 Mar 2018 18:09:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40934#comment:75</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40934#comment:75/1520618990458483</guid>
      <description>&lt;p&gt;
For our next update, we are going to put a big warning , for users on a VERY out of date PHP version -- probably 5.3 and below -- that the next major release will not support their versions. See: &lt;a class="ext-link" href="https://github.com/CalderaWP/Caldera-Forms/pull/2352"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/CalderaWP/Caldera-Forms/pull/2352&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I am really hoping some of this lands before we get to our next major release, as it might prevent a lot of plugin updates that will have to be rolled back.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://user-images.githubusercontent.com/1994311/37222005-bb103fbc-2399-11e8-9548-eb743bf995db.png"&gt;&lt;img src="https://user-images.githubusercontent.com/1994311/37222005-bb103fbc-2399-11e8-9548-eb743bf995db.png" alt="https://user-images.githubusercontent.com/1994311/37222005-bb103fbc-2399-11e8-9548-eb743bf995db.png" crossorigin="anonymous" title="https://user-images.githubusercontent.com/1994311/37222005-bb103fbc-2399-11e8-9548-eb743bf995db.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43508 (Skip symlinked theme file tests if the links could not be created) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 09 Mar 2018 17:47:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43508#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43508#comment:3/1520617660088928</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42819" title="Tests: Skip symlinked theme file tests if `symlink()` is not ..."&gt;42819&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Tests: Skip symlinked theme file tests if &lt;code&gt;symlink()&lt;/code&gt; is not available, e.g. in PHP 5.2.x on Windows.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43508" title="#43508: defect (bug): Skip symlinked theme file tests if the links could not be created (closed: fixed)"&gt;#43508&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42819]: Tests: Skip symlinked theme file tests if `symlink()` is not ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 09 Mar 2018 17:47:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42819</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42819/1520617659622605</guid>
      <description>&lt;p&gt;
Tests: Skip symlinked theme file tests if &lt;code&gt;symlink()&lt;/code&gt; is not available, e.g. in PHP 5.2.x on Windows.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43508" title="#43508: defect (bug): Skip symlinked theme file tests if the links could not be created (closed: fixed)"&gt;#43508&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36455 (Call opcache_reset() after plug-in, theme or core update) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 09 Mar 2018 17:34:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36455#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36455#comment:28/1520616870538772</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-php by benoitchantre. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-php/p1520616868000576"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41242 (Image crop not working in mobile screen.) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 09 Mar 2018 17:28:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41242#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41242#comment:17/1520616519741366</guid>
      <description>&lt;p&gt;
@SergeyBiryukov Saw you tagged this 5.0... do you think this is worth backporting or including in 4.9.5? Before this changing media cropping does not work correctly for touch devices (you need a mouse).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41242 (Image crop not working in mobile screen.) closed</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 09 Mar 2018 17:26:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41242#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41242#comment:16/1520616413597735</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42818" title="Media: Fix image cropping on touch screen devices.
* In initCrop, ..."&gt;42818&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: Fix image cropping on touch screen devices.&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;In initCrop, handle touch events in addition to mouse events.
&lt;/li&gt;&lt;li&gt;In imageSelect jQuery plugin, accept event.which of 0 as provided by touch events.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Props yahil, alexgso, joemcgill.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41242" title="#41242: defect (bug): Image crop not working in mobile screen. (closed: fixed)"&gt;#41242&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42818]: Media: Fix image cropping on touch screen devices.  * In initCrop, ...</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 09 Mar 2018 17:26:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42818</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42818/1520616413105352</guid>
      <description>&lt;p&gt;
Media: Fix image cropping on touch screen devices.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;In initCrop, handle touch events in addition to mouse events.
&lt;/li&gt;&lt;li&gt;In imageSelect jQuery plugin, accept event.which of 0 as provided by touch events.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Props yahil, alexgso, joemcgill.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41242" title="#41242: defect (bug): Image crop not working in mobile screen. (closed: fixed)"&gt;#41242&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #12009 (Add support for HTML 5 "async" and "defer" attributes) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 09 Mar 2018 17:13:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12009#comment:57</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12009#comment:57/1520615623847760</guid>
      <description>&lt;p&gt;
@ocean90 here's a(nother) plugin implementation (and polyfill) for what you describe:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="sd"&gt;/**
 * Add async/defer attributes to enqueued scripts that have the specified script_execution flag.
 *
 * @link https://core.trac.wordpress.org/ticket/12009
 * @param string $tag    The script tag.
 * @param string $handle The script handle.
 * @return string
 */&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;wp12009_filter_script_loader_tag&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$tag&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$handle&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$script_execution&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wp_scripts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$handle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'script_execution'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nv"&gt;$script_execution&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$tag&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'async'&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nv"&gt;$script_execution&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="s1"&gt;'defer'&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nv"&gt;$script_execution&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$tag&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// _doing_it_wrong()?
&lt;/span&gt;        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="c1"&gt;// Abort adding async/defer for scripts that have this script as a dependency. _doing_it_wrong()?
&lt;/span&gt;        &lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;wp_scripts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;registered&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$script&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;in_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$handle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$script&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;deps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$tag&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="c1"&gt;// Add the attribute if it hasn't already been added.
&lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nb"&gt;preg_match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;":\s&lt;/span&gt;&lt;span class="si"&gt;$script_execution&lt;/span&gt;&lt;span class="s2"&gt;(=|&amp;gt;|\s):"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$tag&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$tag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;preg_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;':(?=&amp;gt;&amp;lt;/script&amp;gt;):'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;" &lt;/span&gt;&lt;span class="si"&gt;$script_execution&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$tag&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$tag&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'script_loader_tag'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'wp12009_filter_script_loader_tag'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Then to make &lt;code&gt;comment-reply.js&lt;/code&gt; async all that is needed is as you showed and @georgestephanis suggested:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'wp_enqueue_scripts'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;wp_script_add_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'comment-reply'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'script_execution'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'async'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
I like not using a boolean attribute, but the &lt;code&gt;script_execution&lt;/code&gt; name doesn't feel quite right yet.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43498 (PHP Fatal error:  Allowed memory size of 1073741824 bytes exhausted) updated</title>
      
        <dc:creator>arena</dc:creator>

      <pubDate>Fri, 09 Mar 2018 17:10:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43498#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43498#comment:7/1520615437985962</guid>
      <description>&lt;p&gt;
for the record,
&lt;/p&gt;
&lt;p&gt;
in wp-includes/plugin.php line 405
&lt;/p&gt;
&lt;p&gt;
function add_action( $tag, $function_to_add, $priority = 10, &lt;strong&gt;$accepted_args = 1&lt;/strong&gt; )
&lt;/p&gt;
&lt;p&gt;
So there is by default one arg which is a string with value : ""
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36884 (Customizer child menus incorrectly resize the site to an incorrect ...) reopened</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 09 Mar 2018 17:07:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36884#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36884#comment:12/1520615248673172</guid>
      <description>&lt;p&gt;
Reopening for 4.9.5 consideration.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #36884 (Customizer child menus incorrectly resize the site to an incorrect ...) closed</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 09 Mar 2018 17:05:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36884#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36884#comment:11/1520615138828533</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42817" title="Customizer menus: correct oversized viewport after dragging menu ..."&gt;42817&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Customizer menus: correct oversized viewport after dragging menu items.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fix an issue where the screen viewport resized to an oversized state on mobile devices after moving sub-menus.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props kwonye.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36884" title="#36884: defect (bug): Customizer child menus incorrectly resize the site to an incorrect ... (closed: fixed)"&gt;#36884&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42817]: Customizer menus: correct oversized viewport after dragging menu ...</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 09 Mar 2018 17:05:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42817</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42817/1520615138362476</guid>
      <description>&lt;p&gt;
Customizer menus: correct oversized viewport after dragging menu items.
&lt;/p&gt;
&lt;p&gt;
Fix an issue where the screen viewport resized to an oversized state on mobile devices after moving sub-menus.
&lt;/p&gt;
&lt;p&gt;
Props kwonye.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36884" title="#36884: defect (bug): Customizer child menus incorrectly resize the site to an incorrect ... (closed: fixed)"&gt;#36884&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43228 (register_theme_directory() needs to delete the `theme_roots` transient) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 09 Mar 2018 16:59:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43228#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43228#comment:9/1520614798008951</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42816" title="Themes: Revert [42788] as it breaks a lot of things.
See #43228
"&gt;42816&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Themes: Revert &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42788" title="Themes: Ensure the theme roots cache is cleared when registering a ..."&gt;[42788]&lt;/a&gt; as it breaks a lot of things.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/43228" title="#43228: defect (bug): register_theme_directory() needs to delete the `theme_roots` transient (reopened)"&gt;#43228&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42816]: Themes: Revert [42788] as it breaks a lot of things.  See #43228 </title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 09 Mar 2018 16:59:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42816</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42816/1520614797520789</guid>
      <description>&lt;p&gt;
Themes: Revert &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42788" title="Themes: Ensure the theme roots cache is cleared when registering a ..."&gt;[42788]&lt;/a&gt; as it breaks a lot of things.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/43228" title="#43228: defect (bug): register_theme_directory() needs to delete the `theme_roots` transient (reopened)"&gt;#43228&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43488 (Debug backtrace doesn’t capture hook name for do_action_ref_array) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 09 Mar 2018 16:51:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43488#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43488#comment:2/1520614283464835</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
There's &lt;code&gt;apply_filters_ref_array()&lt;/code&gt; too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43438 (Add filters and Ajax support for personal data export) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Fri, 09 Mar 2018 16:47:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43438#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43438#comment:9/1520614031757378</guid>
      <description>&lt;ul&gt;&lt;li&gt;OK, to try my patch, you'll need a site where someone (anyone) has left at least one comment (the more the merrier)
&lt;/li&gt;&lt;li&gt;Then, go wp-admin &amp;gt; Tools &amp;gt; Privacy
&lt;/li&gt;&lt;li&gt;Enter the commentor's username or email address in the box provided
&lt;/li&gt;&lt;li&gt;Hit the button to start the export
&lt;/li&gt;&lt;li&gt;You should see a table of all the personal data from their comments assemble
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
edit: next steps - expand coverage to usermeta and options, come to agreement on what to do with the export (i.e. making it email-able to the data subject, downloadable, how to handle things like images)
&lt;/p&gt;
&lt;p&gt;
edit: edit: this patch will work against revision 42806 (i will update shortly to account for the merge of 43435 in revision 42814)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43438 (Add filters and Ajax support for personal data export) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Fri, 09 Mar 2018 16:41:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43438#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43438#comment:8/1520613699772775</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43438#comment:7" title="Comment 7"&gt;jesperher&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@allendav The method of just using a filter, is not far away from my current code, and was infact the first thought of how to approach this.
&lt;/p&gt;
&lt;p&gt;
I can change my code to do the filter/array method istead but i am hitting an dead end. And can see it still will be an issue even when using the filter/array method.
&lt;/p&gt;
&lt;p&gt;
when we are calling 1 callback at a time, the $variabel who contains all the callbacks, from the
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
´wp_privacy_register_export_data_callback´ filter.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
when this is going into the javascript, the instance of the objects used to inform the callbacks dies.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
A "solution" (but not a good one) would be to build "$all_callbacks" in every callback, and call the specific callback by index.
&lt;/p&gt;
&lt;p&gt;
Do you have any thought on how to get around this issue.?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
My patch attached is index based. The JS doesn't even need to really know about any particular callback other than how many there are.
&lt;/p&gt;
&lt;p&gt;
What do you think?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43438.diff attached to Ticket #43438</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Fri, 09 Mar 2018 16:38:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43438/43438.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43438/43438.diff/1520613503230773</guid>
      <description>&lt;p&gt;
First pass at an extensible personal data exporter - includes core comments personal data export
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41083 (IP with port number triggers warnings in WP_Community_Events) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Fri, 09 Mar 2018 16:34:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41083#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41083#comment:43/1520613245864295</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@soulseekah
12 days ago
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43436 (Add opt-in for commenter cookies) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 09 Mar 2018 15:56:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43436#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43436#comment:19/1520610986502913</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42815" title="Respect the commenter decision when they have checked the checkbox to ..."&gt;42815&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Respect the commenter decision when they have checked the checkbox to consent to cookies, and keep it checked when they reload the page or post another comment.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43436" title="#43436: enhancement: Add opt-in for commenter cookies (closed: fixed)"&gt;#43436&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42815]: Respect the commenter decision when they have checked the checkbox to ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 09 Mar 2018 15:56:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42815</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42815/1520610985989576</guid>
      <description>&lt;p&gt;
Respect the commenter decision when they have checked the checkbox to consent to cookies, and keep it checked when they reload the page or post another comment.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43436" title="#43436: enhancement: Add opt-in for commenter cookies (closed: fixed)"&gt;#43436&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43507 (Update hook docs in wp-admin/edit-tag-form.php to use `WP_Term` ...) updated</title>
      
        <dc:creator>xhezairi</dc:creator>

      <pubDate>Fri, 09 Mar 2018 15:43:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43507#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43507#comment:1/1520610229671361</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30277 (Split up Customizer JS into separate files and remove self-booting ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 09 Mar 2018 15:43:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30277#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30277#comment:22/1520610206083069</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by westonruter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1520610203000769"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>DavidAnderson</dc:creator>

      <pubDate>Fri, 09 Mar 2018 15:39:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:11/1520609966026154</guid>
      <description>&lt;p&gt;
Mike asked me to post this here (copied from a comment in the WooCommerce github):
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
One complex issue that I haven't seen a lot of discussion about for GDPR is the need to keep an *external* log of deletion events, so that if you have to restore your database/site from a backup, you must then re-delete all the data that has been deleted since the backup.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
i.e. If a user requests deletion of their data, then technically it should be deleted from backups too. But, GDPR has allowances for technically infeasible tasks - having to unpack your backup, delete data, and re-pack it would arguably be in that category. But, if the backup is actually used, then the deleted data is back. So, a deletion log has to be kept. Obviously having that log in the database itself is no good because the backup might be needed because of the database being lost. About the only universally available mechanism would be "send an email", and then the site owner has to go through his emails. Larger sites would be able to use a hook to deploy a more sophisticated method of logging upon every deletion event.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What do you think?
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>0001-Update-docs.patch attached to Ticket #43507</title>
      
        <dc:creator>xhezairi</dc:creator>

      <pubDate>Fri, 09 Mar 2018 15:33:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43507/0001-Update-docs.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43507/0001-Update-docs.patch/1520609595939437</guid>
      <description>&lt;p&gt;
Update hook docs to use WP_Term instead of object.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>DavidAnderson</dc:creator>

      <pubDate>Fri, 09 Mar 2018 15:13:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:14/1520608395382018</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Through the eyes of GDPR, personal data is only data that personally identifies you as a person.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is incorrect, AFAICT. Personal data under the GDPR is all data *associated with* a person.... not just the data which is identifies you.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://gdpr-info.eu/art-4-gdpr/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gdpr-info.eu/art-4-gdpr/&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
‘personal data’ means any information relating to an identified or identifiable natural person (‘data subject’); an identifiable natural person is one who can be identified, directly or indirectly, in particular by reference to an identifier such as a name, an identification number, location data, an online identifier or to one or more factors specific to the physical, physiological, genetic, mental, economic, cultural or social identity of that natural person
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 09 Mar 2018 15:04:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:29/1520607840210291</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42814" title="Add Privacy Tools admin page under the Tools menu.
Props allendav, ..."&gt;42814&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Add Privacy Tools admin page under the Tools menu.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props allendav, xkon, azaozz.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43435" title="#43435: enhancement: Add settings screen for creating a privacy policy (closed: fixed)"&gt;#43435&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42814]: Add Privacy Tools admin page under the Tools menu.  Props allendav, ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 09 Mar 2018 15:03:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42814</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42814/1520607839689475</guid>
      <description>&lt;p&gt;
Add Privacy Tools admin page under the Tools menu.
&lt;/p&gt;
&lt;p&gt;
Props allendav, xkon, azaozz.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43435" title="#43435: enhancement: Add settings screen for creating a privacy policy (closed: fixed)"&gt;#43435&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 09 Mar 2018 14:57:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:28/1520607420449133</guid>
      <description>&lt;p&gt;
As far as I see the plan to stay dot release compatible is:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;"Take over" the privacy.php file, move existing content from there to freedoms.php and load it with a query arg. Tried couple of alternatives but that seems the simplest and works best (keeping the old content in privacy.php expands the Tools menu item).
&lt;/li&gt;&lt;li&gt;Add any extra CSS to wp-admin/forms.css.
&lt;/li&gt;&lt;li&gt;Add any JS to wp-admin/xfn.js. That file seems least used, and the existing content is all tied to HTML IDs so no chance for any breakage.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Patch coming up.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #1636 (write screen categories section needs horizontal scroller) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 09 Mar 2018 14:27:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/1636#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/1636#comment:3/1520605664140849</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #forums by danhgilmore. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/forums/p1520605662000354"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43499 (Document src/wp-admin/js/tags-box.js) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 09 Mar 2018 14:16:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43499#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43499#comment:4/1520605004322673</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41013 (Add Link to Plugins In WP Admin Bar) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 09 Mar 2018 14:09:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41013#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41013#comment:3/1520604545780672</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #40683,​41013 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 09 Mar 2018 14:08:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=40683%2C41013</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=40683%2C41013/1520604534317025</guid>
      <description>duplicate: &lt;p&gt;
Hi @GeekStreetWP, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
Thanks for the report, we're already tracking this enhancement in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/40683" title="#40683: enhancement: Add a Plugins link to admin bar menu (new)"&gt;#40683&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #43513 (class-wp-rest-taxonomies-controller.php returns 500 status) closed</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Fri, 09 Mar 2018 14:06:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43513#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43513#comment:1/1520604401672888</guid>
      <description>invalid: &lt;p&gt;
Hi @nooozeguy, welcome to Trac!
&lt;/p&gt;
&lt;p&gt;
This doesn't seem like a bug to me because files inside &lt;code&gt;wp-includes&lt;/code&gt; are not designed to be accessed directly. If you want to use the REST API, you should send requests to the &lt;code&gt;wp-json&lt;/code&gt; endpoint instead, rather than direct to the PHP files inside the includes folder. The reason why it's appearing in Google Search Console is probably due to someone or something trying to access in the wrong circumstances.
&lt;/p&gt;
&lt;p&gt;
You can find out more information about the API and available endpoints in the &lt;a class="ext-link" href="https://developer.wordpress.org/rest-api/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;handbook&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>2018-03-09 08-57-45.png attached to Ticket #43513</title>
      
        <dc:creator>nooozeguy</dc:creator>

      <pubDate>Fri, 09 Mar 2018 14:01:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43513/2018-03-09%2008-57-45.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43513/2018-03-09%2008-57-45.png/1520604116537908</guid>
      <description>&lt;p&gt;
Screenshot from Google Chrome of 500 status
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43513 (class-wp-rest-taxonomies-controller.php returns 500 status) created</title>
      
        <dc:creator>nooozeguy</dc:creator>

      <pubDate>Fri, 09 Mar 2018 14:01:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43513</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43513/1520604086274708</guid>
      <description>&lt;p&gt;
Google Search Console is reporting a search error that the class-wp-rest-taxonomies-controller.php file is returning a 500 status.
To test this, I cloned the live site, removed all plugins and activated the Twenty Seventeen theme.
I then navigated to &lt;a class="ext-link" href="https://test.[domain].com/test/wp-includes/rest-api/endpoints/class-wp-rest-taxonomies-controller.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://test.[domain].com/test/wp-includes/rest-api/endpoints/class-wp-rest-taxonomies-controller.php&lt;/a&gt; and saw that the url returns a 500 status in a clean version of Google Chrome.
I also reviewed the file and folder permissions with the Web host to answer the question of whether this file should be accessible to the Googlebot. The file is set to 644 and the folder is set to 755.
Here is a screenshot of the file url in Google Chrome: &lt;a class="ext-link" href="https://monosnap.com/file/AwySRiHygLMIxHqIWNLLrr0BKWuL7i"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://monosnap.com/file/AwySRiHygLMIxHqIWNLLrr0BKWuL7i&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43055 (Reorganize Core JS / introduce build step) updated</title>
      
        <dc:creator>TJNowell</dc:creator>

      <pubDate>Fri, 09 Mar 2018 13:59:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43055#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43055#comment:34/1520603950603970</guid>
      <description>&lt;p&gt;
VVV issue raised &lt;a class="ext-link" href="https://github.com/Varying-Vagrant-Vagrants/VVV/issues/1447"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/Varying-Vagrant-Vagrants/VVV/issues/1447&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43437 (Add way for registered users to request deletion or anonymization of ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 09 Mar 2018 13:58:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43437#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43437#comment:12/1520603907673471</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43437#comment:5" title="Comment 5"&gt;mikejolley&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
I understand, thanks.
&lt;/p&gt;
&lt;p&gt;
Still thinking the selection of what is deleted (or anonymized) should be in the plugin. Then the admin/site owner doesn't have to repeat the same thing every time (and remember which fields to select), and the plugin is in "full control" of the deletion/anonymization.
&lt;/p&gt;
&lt;p&gt;
The alternative of storing all possible types of private data in core and the user has to enable/disable them per plugin is even less attractive. Imagine a page full of checkboxes that will need to be updated when a new plugin is installed or a plugin is updated :)
&lt;/p&gt;
&lt;p&gt;
Also chances are that other plugins that store the same data may or may not need the same data fields. Each case is different.
&lt;/p&gt;
&lt;p&gt;
In case of plugins with extensions, IMHO best would be if that data selection is done in the main plugin and all extensions share/use it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43437 (Add way for registered users to request deletion or anonymization of ...) updated</title>
      
        <dc:creator>tarkan</dc:creator>

      <pubDate>Fri, 09 Mar 2018 13:37:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43437#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43437#comment:11/1520602621014635</guid>
      <description>&lt;p&gt;
@mikejolley That is the thing, in our own example the phone number is part of the sales contract, e.g. shipping address and phone number are used to ship the goods (certain couriers require phone number).
&lt;/p&gt;
&lt;p&gt;
From our point of view the phone number is integral for us in performance of the contract the customer has entered into with us.
&lt;/p&gt;
&lt;p&gt;
Hence why any data that the customers has given us in connection with that order, needs to be retained and any Right to Erasure mechanism has to allow us to do that.
&lt;/p&gt;
&lt;p&gt;
I know it has not been mentioned yet !! - but for example our VAT record keeping rules stipulate that we keep order notes and related information - like quotes or exchanges from the customer.
&lt;/p&gt;
&lt;p&gt;
Examples we have been given is emails, customer notes or comments - to show and satisfy the tax authority that a particular transaction has occurred and the circumstances for it, if demanded (for 6 years).
&lt;/p&gt;
&lt;p&gt;
Bottom line for us Order Data is hands off - and I would imagine it is the same for any EU based VAT registered business.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43438 (Add filters and Ajax support for personal data export) updated</title>
      
        <dc:creator>jesperher</dc:creator>

      <pubDate>Fri, 09 Mar 2018 13:29:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43438#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43438#comment:7/1520602191072966</guid>
      <description>&lt;p&gt;
@allendav The method of just using a filter, is not far away from my current code, and was infact the first thought of how to approach this.
&lt;/p&gt;
&lt;p&gt;
I can change my code to do the filter/array method istead but i am hitting an dead end. And can see it still will be an issue even when using the filter/array method.
&lt;/p&gt;
&lt;p&gt;
when we are calling 1 callback at a time, the $variabel who contains all the callbacks, from the
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
´wp_privacy_register_export_data_callback´ filter.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
when this is going into the javascript, the instance of the objects used to inform the callbacks dies.
&lt;/p&gt;
&lt;p&gt;
example:
&lt;/p&gt;
&lt;p&gt;
--Random plugin--
´´´
add_filter( "wp_privacy_register_export_data_callback", array( $this, 'register_export_data_callback' ) );
function register_export_data_callback( $export_callbacks ) {
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
$export_callbacks[] = array(
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
'slug' =&amp;gt; 'stripe',
'plugin_friendly_name' =&amp;gt; &lt;span class="underline"&gt;( 'Stripe Payments for WooCommerce' ),
'callback' =&amp;gt; array( $this, 'export_data' )
&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
);
return $export_callbacks;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}
&lt;/p&gt;
&lt;p&gt;
$all_callbacks = apply_filters('wp_privacy_register_export_data_callback',array() );
&lt;/p&gt;
&lt;p&gt;
localize_script.... $all_callbacs
´´´
The $this, object dies as it goes into the javascript.
if creating Ajax call, and sending the 'callback' =&amp;gt; array( $this, 'export_data' )´ to REST endpoint, "$this" doesnt work anymore, and using the ´call_user_func´ wont work.
&lt;/p&gt;
&lt;p&gt;
A "solution" (but not a good one) would be to build "$all_callbacks" in every callback, and call the specific callback by index.
&lt;/p&gt;
&lt;p&gt;
Do you have any thought on how to get around this issue.?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43437 (Add way for registered users to request deletion or anonymization of ...) updated</title>
      
        <dc:creator>mikejolley</dc:creator>

      <pubDate>Fri, 09 Mar 2018 13:25:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43437#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43437#comment:10/1520601959379319</guid>
      <description>&lt;p&gt;
@tarkan It really depends what you need to preserve though? Example: The address might be needed for tax reasons, but the phone number is no longer needed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43437 (Add way for registered users to request deletion or anonymization of ...) updated</title>
      
        <dc:creator>tarkan</dc:creator>

      <pubDate>Fri, 09 Mar 2018 13:24:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43437#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43437#comment:9/1520601844692685</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43437#comment:5" title="Comment 5"&gt;mikejolley&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@azaozz
&lt;/p&gt;
&lt;p&gt;
Anonymize | Data
[x]               | Comments
[x]               | Posts
[  ]                | Order Billing Address | Used for X
[x]                | Customer IP Address  | Used for Y
[x]                | Customer phone number | Used for Z
&lt;/p&gt;
&lt;p&gt;
Then they have a way to choose what is kept and what is not.
&lt;/p&gt;
&lt;p&gt;
This was just an idea. It could be handled per plugin but if other plugins have the same use case, this could lead to lots of different UIs doing the same thing :)
&lt;/p&gt;
&lt;p&gt;
Preference?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I would be happy with a selection basis noted above and a more hands off automated email event driven data deletion, but as mentioned over on github I very much doubt any business will want to (and to stay legal) delete order data - hence I suggest order data should only have one checkbox.
&lt;/p&gt;
&lt;p&gt;
That selection should cover all data obtained for that particular order (billing/shipping address/names/ip/products/emails/invoices/receipts/etc).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43055 (Reorganize Core JS / introduce build step) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 09 Mar 2018 13:03:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43055#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43055#comment:33/1520600594428976</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43055#comment:32" title="Comment 32"&gt;omarreiss&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Files compare/build/wp-includes/js/zxcvbn.min.js and mirror/build/wp-includes/js/zxcvbn.min.js differ
└ Looks like the current file is broken. The forbidden passwords look scrambled. Fixed in patch.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Core uses ROT13 for the dictionary, see &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/25156" title="Add Dropbox's zxcvbn library for realistic password strength ..."&gt;[25156]&lt;/a&gt;/&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/25159" title="zxcvbn: Apply ROT13 when building the dynamic user_inputs dictionary.
 ..."&gt;[25159]&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31647#comment:9" title="Comment 9 for #31647: enhancement: zxcvbn.js is old (closed: fixed)"&gt;ticket:31647:9&lt;/a&gt;. Is that still the case with your patch?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43499 (Document src/wp-admin/js/tags-box.js) updated</title>
      
        <dc:creator>carolinegeven</dc:creator>

      <pubDate>Fri, 09 Mar 2018 13:02:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43499#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43499#comment:3/1520600555798265</guid>
      <description>&lt;p&gt;
@SergeyBiryukov Oops, sorry for that! Reuploaded the patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>document-tags-box-js.diff attached to Ticket #43499</title>
      
        <dc:creator>carolinegeven</dc:creator>

      <pubDate>Fri, 09 Mar 2018 13:02:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43499/document-tags-box-js.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43499/document-tags-box-js.diff/1520600520905119</guid>
      <description>&lt;p&gt;
Document tags-box.js
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43437 (Add way for registered users to request deletion or anonymization of ...) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 09 Mar 2018 12:57:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43437#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43437#comment:8/1520600279908381</guid>
      <description>&lt;p&gt;
Yes so since we can save it the difference comes to:
&lt;/p&gt;
&lt;p&gt;
1] Give 1 interface with options and a save button to select anything from all the plugins hooked.
&lt;/p&gt;
&lt;p&gt;
2] The admin has to go on each plugin and select what he wants.
&lt;/p&gt;
&lt;p&gt;
That's why if I look at it as a user I'd prefer no.1 instead of having to go on each plugin.
&lt;/p&gt;
&lt;p&gt;
If you throw in the case of multiple plugins writing the same stuff ( i.e. address and even on the same table sometimes as it happens ). It would be even easier if you had a unified list to just keep 1 for example. If you had to go through each plugin separately you might even forget what you have selected 2 mins ago :D.
&lt;/p&gt;
&lt;p&gt;
From an 'experience' and ease perspective, having 1 unified UI/list to mark what you want to keep is way better in my mind.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43055 (Reorganize Core JS / introduce build step) updated</title>
      
        <dc:creator>omarreiss</dc:creator>

      <pubDate>Fri, 09 Mar 2018 12:53:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43055#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43055#comment:32/1520599980246241</guid>
      <description>&lt;p&gt;
Working towards completion:
&lt;/p&gt;
&lt;p&gt;
The Grunt patch PR was merged. &lt;a class="ext-link" href="https://github.com/WordPress/grunt-patch-wordpress/pull/54"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/grunt-patch-wordpress/pull/54&lt;/a&gt;. File mapping is included in the latest patch.
&lt;/p&gt;
&lt;p&gt;
I went through all of the file diffs between master build directory and the build directory after patch. Verified there are no logic differences anymore. Here's the summary:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Files compare/build/wp-includes/js/backbone.min.js and mirror/build/wp-includes/js/backbone.min.js differ
└ Only difference is a sourcemap comment which was omitted in the current build.
Files compare/build/wp-includes/js/hoverIntent.js and mirror/build/wp-includes/js/hoverIntent.js differ
└ Only difference is a version number in the comment. NPM version was unauthorized before. This is fixed and the reason why the versions diff.
Files compare/build/wp-includes/js/imagesloaded.min.js and mirror/build/wp-includes/js/imagesloaded.min.js differ
└ Code is identical, was minified twice in the current build. Fixed in patch.
Files compare/build/wp-includes/js/jquery/jquery.color.min.js and mirror/build/wp-includes/js/jquery/jquery.color.min.js differ
└ Code is identical, only difference is minification variable names.
Files compare/build/wp-includes/js/media-audiovideo.js and mirror/build/wp-includes/js/media-audiovideo.js differ
Files compare/build/wp-includes/js/media-audiovideo.min.js and mirror/build/wp-includes/js/media-audiovideo.min.js differ
Files compare/build/wp-includes/js/media-grid.js and mirror/build/wp-includes/js/media-grid.js differ
Files compare/build/wp-includes/js/media-grid.min.js and mirror/build/wp-includes/js/media-grid.min.js differ
Files compare/build/wp-includes/js/media-models.js and mirror/build/wp-includes/js/media-models.js differ
Files compare/build/wp-includes/js/media-models.min.js and mirror/build/wp-includes/js/media-models.min.js differ
Files compare/build/wp-includes/js/media-views.js and mirror/build/wp-includes/js/media-views.js differ
Files compare/build/wp-includes/js/media-views.min.js and mirror/build/wp-includes/js/media-views.min.js differ
└ The way media files are built has slightly changed which results in some bundling / minification diffs.
Files compare/build/wp-includes/js/underscore.min.js and mirror/build/wp-includes/js/underscore.min.js differ
└ Only difference is a sourcemap comment which was omitted in the current build.
Files compare/build/wp-includes/js/zxcvbn.min.js and mirror/build/wp-includes/js/zxcvbn.min.js differ
└ Looks like the current file is broken. The forbidden passwords look scrambled. Fixed in patch.
&lt;/pre&gt;&lt;p&gt;
This means codewise this is ready to go. Current patch enforces build step and requires to run from &lt;code&gt;/build&lt;/code&gt;.
I contacted @tjnowell on WP Slack to discuss steps for VVV. I'd also love to know about other dev platform maintainers I should contact. It will be best if they are mostly prepared.
&lt;/p&gt;
&lt;p&gt;
Will spend another half day on documentation this weekend. Would like to move to inclusion starting monday. @pento is this something you could help with?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43437 (Add way for registered users to request deletion or anonymization of ...) updated</title>
      
        <dc:creator>mikejolley</dc:creator>

      <pubDate>Fri, 09 Mar 2018 12:49:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43437#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43437#comment:7/1520599793294920</guid>
      <description>&lt;p&gt;
@xkon We could save the selections as either user option or site option. My only concern is yes, it's another UI. But from our side we need one either way it seems :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43437 (Add way for registered users to request deletion or anonymization of ...) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 09 Mar 2018 12:47:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43437#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43437#comment:6/1520599664922679</guid>
      <description>&lt;p&gt;
If we could have permanent selections so the admin doesn't have to select the same things every time it would be a treat to pack this in the core in my opinion. It could easily save you from plugins accidentally deleting something.
&lt;/p&gt;
&lt;p&gt;
I can't imagine though somebody having to check 30 options every time a delete happens, that could be overkill as we don't know how many deletions might actually happen on a website.
&lt;/p&gt;
&lt;p&gt;
If there's no way of keeping what the admins want 'pre-checked' then better leave it to the plugins fully so they can manage it as an option group or something.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>js-organization-3.patch attached to Ticket #43055</title>
      
        <dc:creator>omarreiss</dc:creator>

      <pubDate>Fri, 09 Mar 2018 12:43:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43055/js-organization-3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43055/js-organization-3.patch/1520599420733894</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43437 (Add way for registered users to request deletion or anonymization of ...) updated</title>
      
        <dc:creator>mikejolley</dc:creator>

      <pubDate>Fri, 09 Mar 2018 12:30:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43437#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43437#comment:5/1520598612605905</guid>
      <description>&lt;p&gt;
@azaozz
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Not sure I understand "register to describe" for plugins. Wouldn't that be the suggested text for the Privacy Policy page?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Let me give an example.
&lt;/p&gt;
&lt;p&gt;
In WooCommerce I provide something along the lines of:
&lt;/p&gt;
&lt;p&gt;
Order Billing Address - Used for X
Customer IP Address - Used for y
Customer phone number - Used for Z
&lt;/p&gt;
&lt;p&gt;
This could be in JSON format for example.
&lt;/p&gt;
&lt;p&gt;
WP gathers all of these schemas and presents them to the admin when handling a deletion:
&lt;/p&gt;
&lt;p&gt;
xxx@…
&lt;/p&gt;
&lt;p&gt;
Anonymize | Data
[x]               | Comments
[x]               | Posts
[  ]                | Order Billing Address | Used for X
[x]                | Customer IP Address  | Used for Y
[x]                | Customer phone number | Used for Z
&lt;/p&gt;
&lt;p&gt;
Then they have a way to choose what is kept and what is not.
&lt;/p&gt;
&lt;p&gt;
This was just an idea. It could be handled per plugin but if other plugins have the same use case, this could lead to lots of different UIs doing the same thing :)
&lt;/p&gt;
&lt;p&gt;
Preference?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43512 (Issue website not getting updated dynamically) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 09 Mar 2018 11:26:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43512#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43512#comment:1/1520594773544532</guid>
      <description>invalid: &lt;p&gt;
Hello @agila, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
This Trac is used for enhancements and bug reporting for the WordPress core software. For support questions please use our &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Support Forums&lt;/a&gt;. Thanks!
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43491 (Automatically create a Privacy Policy page when installing WordPress) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 09 Mar 2018 11:21:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43491#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43491#comment:6/1520594485686962</guid>
      <description>&lt;p&gt;
Think we should do that. Creating a new page titled "Privacy Policy", setting the option for it, but keep it a draft. The default content can be something like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;(Edit this page to create your privacy policy.)
&lt;/pre&gt;&lt;p&gt;
Then the user will not have to select or create it from the Tools =&amp;gt; Privacy screen, and can edit it straight away (it will be in the pages list table).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43512 (Issue website not getting updated dynamically) created</title>
      
        <dc:creator>agila</dc:creator>

      <pubDate>Fri, 09 Mar 2018 11:01:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43512</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43512/1520593274830526</guid>
      <description>&lt;p&gt;
Hello Help desk Team,
&lt;/p&gt;
&lt;p&gt;
I have a major issue after updating to 4.9.4. All my weather widget, calender is not showing the current status or dynamic, updates to my main page is not visible even after 24hrs. I tried cleaning the cache on browser &amp;amp; as well on WP dashboard.
&lt;/p&gt;
&lt;p&gt;
Could you please check, if this is a issue with latest version of WP.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://www.germanguide4u.com"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.germanguide4u.com&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks,
&lt;/p&gt;
&lt;p&gt;
Narayanan
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41286 (Focus style and High Contrast Mode) updated</title>
      
        <dc:creator>Joen</dc:creator>

      <pubDate>Fri, 09 Mar 2018 10:09:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41286#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41286#comment:15/1520590192705277</guid>
      <description>&lt;p&gt;
A pseudo patch for buttons is drafted in &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/5526"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/5526&lt;/a&gt;. Perhaps doesn't need to be applied to the active style, but it's a start.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43437 (Add way for registered users to request deletion or anonymization of ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 09 Mar 2018 09:56:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43437#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43437#comment:4/1520589406544197</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43437#comment:3" title="Comment 3"&gt;mikejolley&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol&gt;&lt;li&gt;Agree on a schema which plugins may register to describe the personal data they hold for a user.
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
Not sure I understand "register to describe" for plugins. Wouldn't that be the suggested text for the Privacy Policy page?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol start="2"&gt;&lt;li&gt;Core loads in these schemas and presents a table to the admin user which shows what data is available to delete...
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
Not sure if there is a need to select what gets deleted every time a user request deletion. If the plugin holds many different types of data, I rather see this as a setting for the plugin (on the plugin's settings screen). This will make it easier for the admin and be better UX in general. Then when a request for deletion is received and confirmed (when the core hook runs), the plugin will delete the data according to its own settings.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43511 (Uploading additional mime type file doesn't show in the media REST endpoint) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 09 Mar 2018 09:37:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43511#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43511#comment:3/1520588220339642</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I hope you sort this out, probably a hook callback in your plugin/theme modifying the media rest query.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43511 (Uploading additional mime type file doesn't show in the media REST endpoint) closed</title>
      
        <dc:creator>dingo_bastard</dc:creator>

      <pubDate>Fri, 09 Mar 2018 09:32:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43511#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43511#comment:2/1520587955262838</guid>
      <description>invalid: &lt;p&gt;
You're right, when I test this on the develop version, it shows.
&lt;/p&gt;
&lt;p&gt;
My bad, I'll have to find out what is blocking it.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43511 (Uploading additional mime type file doesn't show in the media REST endpoint) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 09 Mar 2018 09:25:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43511#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43511#comment:1/1520587555070487</guid>
      <description>&lt;p&gt;
Hi @dingo_bastard, did you test this on a vanilla install?
&lt;/p&gt;
&lt;p&gt;
I just tested this and I can see my &lt;code&gt;test.yaml&lt;/code&gt; file as the first item in &lt;code&gt;/wp-json/wp/v2/media&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I don't see any post mime type filtering for &lt;code&gt;/wp-json/wp/v2/media&lt;/code&gt;, unless we use e.g. &lt;code&gt;/wp-json/wp/v2/media?media_type=application&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This seems to be the post mime type filtering setup in &lt;code&gt;WP_REST_Attachments_Controller::prepare_items_query&lt;/code&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$media_types = $this-&amp;gt;get_media_types();
if ( ! empty( $request['media_type'] ) &amp;amp;&amp;amp; isset( $media_types[ $request['media_type'] ] ) ) {
    $query_args['post_mime_type'] = $media_types[ $request['media_type'] ];
}
if ( ! empty( $request['mime_type'] ) ) {
    $parts = explode( '/', $request['mime_type'] );
    if ( isset( $media_types[ $parts[0] ] ) &amp;amp;&amp;amp; in_array( $request['mime_type'], $media_types[ $parts[0] ], true ) ) {
        $query_args['post_mime_type'] = $request['mime_type'];
    }
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43178 (Rethinking what “captions” means for video) updated</title>
      
        <dc:creator>postphotos</dc:creator>

      <pubDate>Fri, 09 Mar 2018 09:24:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43178#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43178#comment:7/1520587454934044</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Finally getting to this - hope I submitted my first patch correctly! :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43178-v1.diff attached to Ticket #43178</title>
      
        <dc:creator>postphotos</dc:creator>

      <pubDate>Fri, 09 Mar 2018 09:22:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43178/43178-v1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43178/43178-v1.diff/1520587379361129</guid>
      <description>&lt;p&gt;
Patch 1 for &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43178" title="#43178: enhancement: Rethinking what “captions” means for video (new)"&gt;#43178&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40683 (Add a Plugins link to admin bar menu) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 09 Mar 2018 09:01:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40683#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40683#comment:8/1520586084221825</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by danieltj. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1520586081000253"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41696 (Content-Disposition header is blocked by CORS) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 09 Mar 2018 08:54:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41696#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41696#comment:1/1520585690329268</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by dingo_d. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1520585688000252"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43511 (Uploading additional mime type file doesn't show in the media REST endpoint) created</title>
      
        <dc:creator>dingo_bastard</dc:creator>

      <pubDate>Fri, 09 Mar 2018 08:54:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43511</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43511/1520585667640120</guid>
      <description>&lt;p&gt;
I enabled &lt;code&gt;yaml&lt;/code&gt; mime type in my plugin because I need to upload &lt;code&gt;yaml&lt;/code&gt; files in the admin.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;enable_mime_types&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$mimes&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$mimes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'svg'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'image/svg+xml'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$mimes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'yaml'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'application/x-yaml'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$mimes&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'upload_mimes'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'enable_mime_types'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
This works in the admin, I can upload both &lt;code&gt;svg&lt;/code&gt; and &lt;code&gt;yaml&lt;/code&gt; files, and I can access them. But when I look at the &lt;code&gt;https://my-page.com/wp-json/wp/v2/media&lt;/code&gt; I cannot see &lt;code&gt;yaml&lt;/code&gt; files in the list. The &lt;code&gt;svg&lt;/code&gt; shows fine, as well as regular &lt;code&gt;png&lt;/code&gt; and &lt;code&gt;jpg&lt;/code&gt; files.
&lt;/p&gt;
&lt;p&gt;
I searched in the REST handbook, but I saw no filter or action hook where I'd have to enable this mime type in the REST.
&lt;/p&gt;
&lt;p&gt;
Is this a bug or?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43484 (WordPress Notification Center proposal) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Fri, 09 Mar 2018 08:46:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43484#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43484#comment:11/1520585181990055</guid>
      <description>&lt;p&gt;
I'm a big fan of a notifications area to reduce noise in the admin (I think there was even talk of adding this in the admin bar redesign discussions if I remember correctly).
&lt;/p&gt;
&lt;p&gt;
I will note though, there may still be use cases for admin notices, so just filtering those over into a new area isn't a good solution, they will have to co-exist.
&lt;/p&gt;
&lt;p&gt;
First example that comes to mind: A new WordPress version is available, this is a notification, but "This plugin encountered an error and was deactivated" (from our own sandboxing during activation) can't be hidden away in a notification. It should be an admin notice as it is now or else the discovery of that critical information may go unnoticed for a while.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43484 (WordPress Notification Center proposal) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Fri, 09 Mar 2018 08:45:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43484#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43484#comment:10/1520585112476987</guid>
      <description>&lt;p&gt;
I too think that there should be an API first, and the visual notification center in the dashboard would then be one specific use case of implementing this API.
&lt;/p&gt;
&lt;p&gt;
In general, a notification API should be a routing system, that allows to receive communication from a &lt;strong&gt;source&lt;/strong&gt; and route it to a &lt;strong&gt;recipient&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;
Valid types of &lt;strong&gt;sources&lt;/strong&gt; are Core, plugins, users, server environment, cron jobs, ...
The &lt;strong&gt;recipient&lt;/strong&gt; can be either a specific user or a role/capability.
&lt;/p&gt;
&lt;p&gt;
The notification should have a &lt;strong&gt;type or group&lt;/strong&gt;, and the user should be able to define where they want to receive the individual types/groups. So, if a plugin reminds me for the 20th time that I should rate it 5 stars, I'd like to only have this shown in the notification center in the dashboard (or even not at all). But if my backup plugin wants to tell me that the backup failed, I want to receive this via email &amp;amp; Slack notification.
&lt;/p&gt;
&lt;p&gt;
So, there would be multiple &lt;strong&gt;destinations&lt;/strong&gt; that a user can have enabled, and the user should be able to configure these individually, with sane defaults applied by default.
Destinations can be dashboard notification center, email, Slack, HipChat, IRC, SMS, ... Basically, we provide an interface, and multiple destination providers can implement that interface.
As a default setup (OOB experience), I could see having both a dashboard UI and an email as destinations, and showing everything in the dashboard UI, and only sending important/urgent notifications to the email.
&lt;/p&gt;
&lt;p&gt;
Regarding the &lt;strong&gt;message size&lt;/strong&gt;, I don't think limiting it to 280 characters is a good idea. It will probably make translations an eternal struggle, with cut off messages all around. The reason why Twittter switched from 140 chars to 280 chars is because some languages couldn't make proper use of it with 140 chars. Now, those languages can use Twitter, but a limited version as compared to the others. There's no "character limit" that makes sense when applied across all languages.
&lt;/p&gt;
&lt;p&gt;
I'd rather prefer the ability to block certain sources, and to adapt the font size/compactness of the notifications instead, and then let the "market" figure out the rest.
&lt;/p&gt;
&lt;p&gt;
Regarding the &lt;strong&gt;state&lt;/strong&gt; of the notification, I think it should also allow for some sort of "snooze" functionality. But that is certainly not something we should implement from the start. Just want to state this to make sure we don't turn the state into a boolean to mean unread/read. Who knows what other states we might need in the future.
&lt;/p&gt;
&lt;p&gt;
I don't think we should allow for an &lt;strong&gt;expiry&lt;/strong&gt; of notifications, as that can only be provided in an "updateable" medium. If you send the notification via email or Slack, for example, you cannot expire it.
&lt;/p&gt;
&lt;p&gt;
The above API would then also have an impact on how the visual design of the dashboard UI works:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Every notification must clearly show a "source" in a consistent way.
&lt;/li&gt;&lt;li&gt;Every notification may show a type/group in some way (not sure if or how).
&lt;/li&gt;&lt;li&gt;There should be a link within the UI to configure the user's preferences.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Also, notifications should not assume anything about the context in which they are being displayed.
&lt;/p&gt;
&lt;p&gt;
On the server side, the API could look something like this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;delete_my_stuff&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="c1"&gt;// $this-&amp;gt;stuff-&amp;gt;delete();
&lt;/span&gt;   &lt;span class="nx"&gt;wp_notify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="nx"&gt;WP_Notify&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="na"&gt;SOURCE_CORE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;get_current_user_id&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
      &lt;span class="nx"&gt;WP_Notify&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="na"&gt;TYPE_ALERT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Yikes! All your stuff has been deleted.'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'default'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
On the client side, the JS API could mirror this signature, and then use the REST API &lt;code&gt;/notifications&lt;/code&gt; controller to execute this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43292 (Add dd() function for debugging) closed</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Fri, 09 Mar 2018 08:39:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43292#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43292#comment:4/1520584798071252</guid>
      <description>invalid: &lt;p&gt;
I understand what you both mean. I suppose if the intention is to never have this used on a live site, it's technically a wasted function as it'll never be present with any usable code except for debugging. Probably best to include in any testing tools locally, thanks for sharing your thoughts. :)
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #41986 (Use regular core button styling for page header buttons) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Fri, 09 Mar 2018 08:36:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41986#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41986#comment:9/1520584594487477</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Wow, it's been a while since I last commented on this! After re-reading your comments (both @melchoyce and @helen) I've changed my mind and agree that perhaps it's better to use the grey button styling (secondary) for this. I have seen some plugins use that button in the header as it currently is, I have a plugin or two that do use it for consistency across &lt;code&gt;wp-admin&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I think updating all of the buttons in this area to have the &lt;code&gt;button button-secondary&lt;/code&gt; class is probably the best way to go for most instances. I don't know how we'd successfully split test something like this, although making this button slightly more grey (removing the blue border and text) probably won't make too big of a difference.
&lt;/p&gt;
&lt;p&gt;
I think it's just important to ensure we know the purpose of this button in each instance it occurs and what it's actually used for because I do see it personally as a primary action in some places (the All Posts page) but others, I see it more of a secondary action. Whichever intention is chosen, I think removing the currently button styling and making it more consistent is the way forward, whether it uses the grey secondary or blue primary styling.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43510 (log in) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 09 Mar 2018 08:24:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43510#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43510#comment:1/1520583898888371</guid>
      <description>invalid: &lt;p&gt;
Hello @kootenayboy, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
This Trac is used for enhancements and bug reporting for the WordPress core software. For support questions please use our &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Support Forums&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43509 (Twenty Fourteen: Video Widget Embed Does Not Show Play Button Correctly) updated</title>
      
        <dc:creator>munyagu</dc:creator>

      <pubDate>Fri, 09 Mar 2018 08:24:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43509#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43509#comment:1/1520583885906849</guid>
      <description>&lt;p&gt;
Same problem was reported.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://wordpress.org/support/topic/v2-1-need-fix/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/v2-1-need-fix/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12009 (Add support for HTML 5 "async" and "defer" attributes) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 09 Mar 2018 08:22:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12009#comment:56</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12009#comment:56/1520583766762997</guid>
      <description>&lt;p&gt;
In terms of implementation, please let no change the signature of the current functions. Neither adding another argument nor changing the third argument to support an array. I think that's a bad practice even if we have done this in the past.
&lt;/p&gt;
&lt;p&gt;
As @georgestephanis has already suggested in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12009#comment:34" title="Comment 34"&gt;comment:34&lt;/a&gt;, using &lt;code&gt;wp_script_add_data()&lt;/code&gt; should be the preferred way to add support for this.
&lt;/p&gt;
&lt;p&gt;
But instead of using boolean values we can use a specific key like &lt;code&gt;script-execution&lt;/code&gt; which can be &lt;code&gt;defer&lt;/code&gt; &lt;strong&gt;or&lt;/strong&gt; &lt;code&gt;async&lt;/code&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_script_add_data( 'my-script', 'script-execution', 'defer' );
wp_script_add_data( 'my-script', 'script-execution', 'async' );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43486 (The Problem with HTML and wpautop) updated</title>
      
        <dc:creator>jim5471</dc:creator>

      <pubDate>Fri, 09 Mar 2018 08:05:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43486#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43486#comment:2/1520582736383937</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43486#comment:1" title="Comment 1"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There are plugins like &lt;a class="ext-link" href="https://wordpress.org/plugins/raw-html/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Raw HTML&lt;/a&gt; that might be helpful.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks Sergey - I hadn't seen that before - number of users shows the scale of the issue
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12009 (Add support for HTML 5 "async" and "defer" attributes) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 09 Mar 2018 08:01:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12009#comment:55</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12009#comment:55/1520582474212332</guid>
      <description>&lt;p&gt;
Also, in regards to concatenation and &lt;code&gt;load-scripts.php&lt;/code&gt;... I don't believe there is any reason why an &lt;code&gt;async&lt;/code&gt;/&lt;code&gt;defer&lt;/code&gt; script would have to be pulled out from being concatenated. Browsers should still execute such scripts just fine if they are loaded synchronously, as these attributes were introduced and could be used even before all browsers supported them. So we could keep serving the scripts inside of &lt;code&gt;load-scripts.php&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36995 (Support for Service Workers) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 09 Mar 2018 07:34:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36995#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36995#comment:14/1520580874127824</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43481 (Add tabs and placeholders to privacy tools page in wp-admin) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 09 Mar 2018 06:05:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43481#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43481#comment:7/1520575505332037</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43481/43481.3.diff" title="Attachment '43481.3.diff' in Ticket #43481"&gt;43481.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43481/43481.3.diff" title="Download"&gt;​&lt;/a&gt; is an attempt to move everything into the existing &lt;code&gt;privacy.php&lt;/code&gt; as have to use existing files.
&lt;/p&gt;
&lt;p&gt;
There is a little &lt;code&gt;jQuery&lt;/code&gt; snippet on the original Privacy page just for the means to un-check the Tools-&amp;gt;Privacy menu option so users won't be getting confused as we're actually using the same page but with different content. I'm not sure if that's can be done any other way since the menu automatically linters whatever is bound to &lt;code&gt;privacy.php&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Also I've added the
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( preg_match( '#/wp-admin/about.php$#', $referer ) ||
     preg_match( '#/wp-admin/credits.php$#', $referer ) ||
     preg_match( '#/wp-admin/freedoms.php$#', $referer )  )  {
&lt;/pre&gt;&lt;p&gt;
so if you go to the privacy from any of the About section pages you see the original content.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43481.3.diff attached to Ticket #43481</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 09 Mar 2018 06:00:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43481/43481.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43481/43481.3.diff/1520575229303883</guid>
      <description>&lt;p&gt;
moves everything into existing privacy.php
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43481 (Add tabs and placeholders to privacy tools page in wp-admin) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 09 Mar 2018 05:30:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43481#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43481#comment:6/1520573436434132</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43481/43481.2.diff" title="Attachment '43481.2.diff' in Ticket #43481"&gt;43481.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43481/43481.2.diff" title="Download"&gt;​&lt;/a&gt; adds a grid layout for the tools view
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43481.2.png attached to Ticket #43481</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 09 Mar 2018 05:29:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43481/43481.2.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43481/43481.2.png/1520573365817691</guid>
      <description>&lt;p&gt;
grid preview
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>43481.2.diff attached to Ticket #43481</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Fri, 09 Mar 2018 05:29:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43481/43481.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43481/43481.2.diff/1520573349695313</guid>
      <description>&lt;p&gt;
add grid
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12009 (Add support for HTML 5 "async" and "defer" attributes) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 09 Mar 2018 05:02:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12009#comment:54</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12009#comment:54/1520571760654929</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12009#comment:50" title="Comment 50"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Yes but &lt;code&gt;load-scripts.php&lt;/code&gt; is an integral part of how we load scripts. Using &lt;code&gt;async&lt;/code&gt; and &lt;code&gt;defer&lt;/code&gt; will have to pull a script out of there (prevent concatenation) and break the execution order. We can't do that for any of the default scripts, see the previous comment.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Something else to clarify here is that I think @mor10 is primarily eyeing use of &lt;code&gt;async&lt;/code&gt; and &lt;code&gt;defer&lt;/code&gt; on the &lt;strong&gt;frontend&lt;/strong&gt; where &lt;code&gt;wp-admin/load-scripts.php&lt;/code&gt; is not used (or at least I've never seen it used), and in which theme/plugin scripts are not included for concatenation anyway (since they are not &lt;code&gt;in_default_dir&lt;/code&gt;).
&lt;/p&gt;
&lt;p&gt;
But in the admin this is also where I think service workers should be used to cache assets instead (as I noted above), and here too this would allow for the scripts to cease being concatenated and so there would be no need to pull out async/defer scripts.
&lt;/p&gt;
&lt;p&gt;
I see value in pushing forward with &lt;code&gt;async&lt;/code&gt;/&lt;code&gt;defer&lt;/code&gt; support in core for the immediate term, as these are standard performance  best practices today. They'd be used primarily by themes and plugins: I can see some core scripts like &lt;code&gt;comment-reply.js&lt;/code&gt; get &lt;code&gt;async&lt;/code&gt;, but we'd just need to work into the script-loader logic to strip &lt;code&gt;async&lt;/code&gt; from any script that is a dependency for another script.
&lt;/p&gt;
&lt;p&gt;
Then as HTTP/2 and service workers become more well supported we can abandon &lt;code&gt;load-scripts.php&lt;/code&gt; entirely and potentially make async/defer conditional based on whether HTTP/2 is available, for example.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43510 (log in) created</title>
      
        <dc:creator>kootenayboy</dc:creator>

      <pubDate>Fri, 09 Mar 2018 04:55:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43510</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43510/1520571347131769</guid>
      <description>&lt;p&gt;
Hey
&lt;/p&gt;
&lt;p&gt;
I got locked out today it would not accept the password it would not send an Email
I went through all the help forums Myphp, FTP stuff I changed the password a few times
&lt;/p&gt;
&lt;p&gt;
nothing worked and still wont I dont know if its a bug or not but its rough either way
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42789 (Bump recommended PHP version from 7.0 -&gt; 7.2) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 09 Mar 2018 04:31:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42789#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42789#comment:19/1520569913840322</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/42789#comment:18" title="Comment 18"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
For 4.9, I say back-porting it is OK, but that we should look at something else going forward.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Maybe adjust the test to skip when running on a 3-digit version?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43218 (PHPUnit 7.x support) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Fri, 09 Mar 2018 04:19:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43218#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43218#comment:15/1520569173283976</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43218#comment:14" title="Comment 14"&gt;netweb&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Testing &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43218/43218.2.diff" title="Attachment '43218.2.diff' in Ticket #43218"&gt;43218.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43218/43218.2.diff" title="Download"&gt;​&lt;/a&gt; in Travis CI
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/ntwb/wordpress/pull/14"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/ntwb/wordpress/pull/14&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Fails the PHP 5.2 Job: &lt;a class="ext-link" href="https://travis-ci.org/ntwb/wordpress/jobs/351128113#L436"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://travis-ci.org/ntwb/wordpress/jobs/351128113#L436&lt;/a&gt; (all other jobs pass)
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;Warning: Unexpected character in input:  '\' (ASCII=92) state=1 in /home/travis/build/ntwb/wordpress/tests/phpunit/includes/bootstrap.php on line 111&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;Parse error: syntax error, unexpected T_STRING in /home/travis/build/ntwb/wordpress/tests/phpunit/includes/bootstrap.php on line 111&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/ntwb/wordpress/pull/15"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/ntwb/wordpress/pull/15&lt;/a&gt; (Includes Travis CI update to use PHPUnit 7.x)
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
The PHP &lt;a class="ext-link" href="https://travis-ci.org/ntwb/wordpress/jobs/351130136#L1304"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;7.1&lt;/a&gt;, &lt;a class="ext-link" href="https://travis-ci.org/ntwb/wordpress/jobs/351130137#L1345"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;7.2&lt;/a&gt;, and nightly (log unavailable, same reason expected though) with:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;PHP Fatal error:  Declaration of SpeedTrapListener::addError(PHPUnit_Framework_Test $test, Exception $e, $time) must be compatible with PHPUnit\Framework\TestListener::addError(PHPUnit\Framework\Test $test, Throwable $t, float $time): void in /home/travis/build/ntwb/wordpress/tests/phpunit/includes/speed-trap-listener.php on line 7&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;Fatal error: Declaration of SpeedTrapListener::addError(PHPUnit_Framework_Test $test, Exception $e, $time) must be compatible with PHPUnit\Framework\TestListener::addError(PHPUnit\Framework\Test $test, Throwable $t, float $time): void in /home/travis/build/ntwb/wordpress/tests/phpunit/includes/speed-trap-listener.php on line 7&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
There are a bunch of database errors displayed when PHPUnit is invoked for the PHP 7.1 &amp;amp; 7.2 jobs:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://travis-ci.org/ntwb/wordpress/jobs/351130136#L858"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://travis-ci.org/ntwb/wordpress/jobs/351130136#L858&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;WordPress database error Table 'wordpress_tests.wptests_options' doesn't exist for query SELECT autoload FROM wptests_options WHERE option_name = '_site_transient_update_themes' made by require_once('wp-settings.php'), register_theme_directory, wp_clean_themes_cache, delete_site_transient, delete_site_option, delete_network_option, delete_option&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;These do not 'fail' the job and will need further investigation also
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42789 (Bump recommended PHP version from 7.0 -&gt; 7.2) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 09 Mar 2018 04:12:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42789#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42789#comment:18/1520568727165340</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/42789#comment:17" title="Comment 17"&gt;mikeschroder&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/42789#comment:16" title="Comment 16"&gt;dd32&lt;/a&gt;:
I noticed when running the tests locally on the 4.9 branch before a backport.
&lt;/p&gt;
&lt;p&gt;
Edit: In case it's not supposed to work like this, running &lt;code&gt;grunt test&lt;/code&gt; or &lt;code&gt;grunt precommit&lt;/code&gt; locally both appear to run this test when the 4.9 branch is checked out.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, That's kind of what I'm hinting at - We can't backport these changes forever to branches we're backporting to. Backporting it to our current stable seems like a sane idea, but once 5.0 is out, the unit test would once again start failing on 4.9 backports.
For 4.9, I say back-porting it is OK, but that we should look at something else going forward.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43304 (Data type of deprecated parameter of load_plugin_textdomain function ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 09 Mar 2018 03:47:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43304#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43304#comment:4/1520567249017376</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43226 (Crop setting in thumbnails never set when uploading PDF files) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Fri, 09 Mar 2018 03:22:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43226#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43226#comment:20/1520565778701439</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43226 (Crop setting in thumbnails never set when uploading PDF files) closed</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Fri, 09 Mar 2018 03:20:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43226#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43226#comment:19/1520565652545925</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42813" title="Media: Correctly allow changing PDF thumbnail crop value.
Corrects ..."&gt;42813&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: Correctly allow changing PDF thumbnail crop value.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Corrects logic that kept plugins from setting crop value of intermediate image sizes for rendered PDFs.&lt;br /&gt;
Adds test.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props leemon, SergeyBiryukov, chetan200891, birgire.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42792" title="Media: Correctly allow changing PDF thumbnail crop value.
Corrects ..."&gt;[42792]&lt;/a&gt; to the 4.9 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43226" title="#43226: defect (bug): Crop setting in thumbnails never set when uploading PDF files (closed: fixed)"&gt;#43226&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42813]: Media: Correctly allow changing PDF thumbnail crop value.  Corrects ...</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Fri, 09 Mar 2018 03:20:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42813</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42813/1520565652033801</guid>
      <description>&lt;p&gt;
Media: Correctly allow changing PDF thumbnail crop value.
&lt;/p&gt;
&lt;p&gt;
Corrects logic that kept plugins from setting crop value of intermediate image sizes for rendered PDFs.
Adds test.
&lt;/p&gt;
&lt;p&gt;
Props leemon, SergeyBiryukov, chetan200891, birgire.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42792" title="Media: Correctly allow changing PDF thumbnail crop value.
Corrects ..."&gt;[42792]&lt;/a&gt; to the 4.9 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43226" title="#43226: defect (bug): Crop setting in thumbnails never set when uploading PDF files (closed: fixed)"&gt;#43226&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43484 (WordPress Notification Center proposal) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Fri, 09 Mar 2018 03:12:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43484#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43484#comment:9/1520565156203765</guid>
      <description>&lt;p&gt;
By building a &lt;em&gt;Notifications API&lt;/em&gt; a new &lt;em&gt;Notification Center&lt;/em&gt; can harness all that goodness the API would offer.
&lt;/p&gt;
&lt;p&gt;
For instance, myself personally I don't want any emails nor do I want any notifications within the WordPress dashboard, I'd like all my notifications delivered into Slack, others might want their notifications delivered into HipChat, Discord or via bot into Twitter or Messenger.
&lt;/p&gt;
&lt;p&gt;
By having that flexibility by way of a new Notifications API I can turn off all notifications in the WordPress Dashboard, I could turn off the entire &lt;em&gt;Notification Center&lt;/em&gt; even, personally, I've no use for notifications inside of WordPress myself.
&lt;/p&gt;
&lt;p&gt;
The Notifications API feature project is far from an &lt;em&gt;email API&lt;/em&gt; it is a new API to facilitate and enable multiple notification types within WordPress, as part of maintaining backward compatibility in the new API it would include a notification route using &lt;code&gt;wp_mail()&lt;/code&gt;, any other routes such as a route to the &lt;em&gt;WordPress admin area&lt;/em&gt; would be added to core on a case by case basis, which is what would be required for a &lt;em&gt;Notification Center&lt;/em&gt; anyway,  whereas routes to Slack, HipChat, Twitter, Messenger etc would be plugin territory.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42789 (Bump recommended PHP version from 7.0 -&gt; 7.2) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Fri, 09 Mar 2018 02:51:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42789#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42789#comment:17/1520563904570145</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/42789#comment:16" title="Comment 16"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/42789#comment:15" title="Comment 15"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Reopening for 4.9.5 consideration.
&lt;/p&gt;
&lt;p&gt;
@mikeschroder noted that the test still fails on the 4.9 branch. Per &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/42789#comment:4" title="Comment 4"&gt;comment:4&lt;/a&gt;, it should be safe to bump the recommended version there as well.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
While it should be safe, the test is only supposed to run on master/trunk: (Although that check is specifically only for Travis AFAICT)
&lt;a href="https://core.trac.wordpress.org/browser/trunk/tests/phpunit/tests/external-http/basic.php?marks=8,9"&gt;https://core.trac.wordpress.org/browser/trunk/tests/phpunit/tests/external-http/basic.php?marks=8,9&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I noticed when running the tests locally on the 4.9 branch before a backport.
&lt;/p&gt;
&lt;p&gt;
Edit: In case it's not supposed to work like this, running &lt;code&gt;grunt test&lt;/code&gt; or &lt;code&gt;grunt precommit&lt;/code&gt; locally both appear to run this test when the 4.9 branch is checked out.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43218 (PHPUnit 7.x support) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Fri, 09 Mar 2018 02:43:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43218#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43218#comment:14/1520563398178029</guid>
      <description>&lt;p&gt;
Testing &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43218/43218.2.diff" title="Attachment '43218.2.diff' in Ticket #43218"&gt;43218.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43218/43218.2.diff" title="Download"&gt;​&lt;/a&gt; in Travis CI
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/ntwb/wordpress/pull/14"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/ntwb/wordpress/pull/14&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/ntwb/wordpress/pull/15"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/ntwb/wordpress/pull/15&lt;/a&gt; (Includes Travis CI update to use PHPUnit 7.x)
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42789 (Bump recommended PHP version from 7.0 -&gt; 7.2) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 09 Mar 2018 02:30:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42789#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42789#comment:16/1520562600556622</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/42789#comment:15" title="Comment 15"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Reopening for 4.9.5 consideration.
&lt;/p&gt;
&lt;p&gt;
@mikeschroder noted that the test still fails on the 4.9 branch. Per &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/42789#comment:4" title="Comment 4"&gt;comment:4&lt;/a&gt;, it should be safe to bump the recommended version there as well.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
While it should be safe, the test is only supposed to run on master/trunk: (Although that check is specifically only for Travis AFAICT)
&lt;a href="https://core.trac.wordpress.org/browser/trunk/tests/phpunit/tests/external-http/basic.php?marks=8,9"&gt;https://core.trac.wordpress.org/browser/trunk/tests/phpunit/tests/external-http/basic.php?marks=8,9&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43218 (PHPUnit 7.x support) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Fri, 09 Mar 2018 02:29:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43218#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43218#comment:13/1520562574888560</guid>
      <description>&lt;p&gt;
Patch &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43218/43218.2.diff" title="Attachment '43218.2.diff' in Ticket #43218"&gt;43218.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43218/43218.2.diff" title="Download"&gt;​&lt;/a&gt; is a refresh of &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43218/Provide_PHPUnit_7_compatibility.patch" title="Attachment 'Provide_PHPUnit_7_compatibility.patch' in Ticket #43218"&gt;Provide_PHPUnit_7_compatibility.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43218/Provide_PHPUnit_7_compatibility.patch" title="Download"&gt;​&lt;/a&gt; with the patch hunk removed that was committed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42799" title="Tests: Correct assertion in ..."&gt;[42799]&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43218.2.diff attached to Ticket #43218</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Fri, 09 Mar 2018 02:28:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43218/43218.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43218/43218.2.diff/1520562481736236</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42789 (Bump recommended PHP version from 7.0 -&gt; 7.2) reopened</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 09 Mar 2018 02:15:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42789#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42789#comment:15/1520561739325373</guid>
      <description>&lt;p&gt;
Reopening for 4.9.5 consideration.
&lt;/p&gt;
&lt;p&gt;
@mikeschroder noted that the test still fails on the 4.9 branch. Per &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/42789#comment:4" title="Comment 4"&gt;comment:4&lt;/a&gt;, it should be safe to bump the recommended version there as well.
&lt;/p&gt;
&lt;p&gt;
There were some additional fixes: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35560" title="#35560: defect (bug): Use of undefined constant DB_USER - assumed 'DB_USER' (closed: fixed)"&gt;#35560&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43201" title="#43201: defect (bug): PHP Warning:  count(): Parameter must be an array or an object that ... (closed: fixed)"&gt;#43201&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43216" title="#43216: defect (bug): IXR Server Warning (closed: fixed)"&gt;#43216&lt;/a&gt;; some more are coming: &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/42814" title="#42814: defect (bug): PHP 7.2 Warning: ...wp-includes/post-template.php on line 284 (reopened)"&gt;#42814&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43312" title="#43312: defect (bug): PHP 7.2 warning in wp_kses_attr() (closed: fixed)"&gt;#43312&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #43509 (Twenty Fourteen: Video Widget Embed Does Not Show Play Button Correctly) created</title>
      
        <dc:creator>donalirl</dc:creator>

      <pubDate>Fri, 09 Mar 2018 01:47:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43509</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43509/1520560027152890</guid>
      <description>&lt;p&gt;
Steps to reproduce:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Activate Twenty Fourteen Theme
&lt;/li&gt;&lt;li&gt;Open Customizer, add a video widget to the sidebar or footer
&lt;/li&gt;&lt;li&gt;Insert a Vimeo video via URL, example: &lt;a class="ext-link" href="https://vimeo.com/258828793"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://vimeo.com/258828793&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Publish
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Result: Play button does not properly display. Instead, a white box is overlaid onto the video player. Screenshot: &lt;a class="ext-link" href="http://cld.wthms.co/TRpR1e"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://cld.wthms.co/TRpR1e&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
With other themes, the play button displays correctly so it's only an issue with Twenty Fourteen.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43508 (Skip symlinked theme file tests if the links could not be created) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 09 Mar 2018 01:09:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43508#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43508#comment:2/1520557787049272</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43508 (Skip symlinked theme file tests if the links could not be created) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 09 Mar 2018 01:09:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43508#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43508#comment:1/1520557757616914</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42812" title="Tests: Skip symlinked theme file tests if the links could not be ..."&gt;42812&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Tests: Skip symlinked theme file tests if the links could not be created.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43508" title="#43508: defect (bug): Skip symlinked theme file tests if the links could not be created (closed: fixed)"&gt;#43508&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42812]: Tests: Skip symlinked theme file tests if the links could not be ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 09 Mar 2018 01:09:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42812</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42812/1520557757156918</guid>
      <description>&lt;p&gt;
Tests: Skip symlinked theme file tests if the links could not be created.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43508" title="#43508: defect (bug): Skip symlinked theme file tests if the links could not be created (closed: fixed)"&gt;#43508&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43508 (Skip symlinked theme file tests if the links could not be created) created</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 09 Mar 2018 01:07:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43508</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43508/1520557650553479</guid>
      <description>&lt;p&gt;
The tests added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38578" title="Themes: Improve child theme file inheritance by introducing functions ..."&gt;[38578]&lt;/a&gt; fail on Windows if there's not enough permissions to create symlinks:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Warning: symlink(): Cannot create symlink, error code(1314)
&lt;/pre&gt;&lt;p&gt;
I guess they should be skipped if symlinks could not be created.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38332 ("Cheating" message insults; needs changing) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 09 Mar 2018 00:14:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38332#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38332#comment:49/1520554460860354</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42811" title="General: Replace `Cheatin’ uh?` with friendlier error messages.
While ..."&gt;42811&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
General: Replace &lt;code&gt;Cheatin’ uh?&lt;/code&gt; with friendlier error messages.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
While intended as a playful error message, &lt;code&gt;Cheatin’ uh?&lt;/code&gt; can be interpreted as insulting or accusatory in an already stressful situation. This replaces Cheatin’ with more meaningful error messages, depending on the error that occurs.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props ElectricFeet, EricMeyer, karmatosed, dd32, BandonRandon, melchoyce, kristastevens for language; dmsnell for original patch; peterwilsoncc.&lt;br /&gt;
Merged &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42648" title="General: Replace `Cheatin’ uh?` with friendlier error messages.
While ..."&gt;[42648]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42719" title="General: Further improve error messages following [42648].
Props ..."&gt;[42719]&lt;/a&gt; to the 4.9 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38332" title="#38332: enhancement: &amp;#34;Cheating&amp;#34; message insults; needs changing (closed: fixed)"&gt;#38332&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42811]: General: Replace `Cheatin’ uh?` with friendlier error messages.  While ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 09 Mar 2018 00:14:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42811</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42811/1520554460339987</guid>
      <description>&lt;p&gt;
General: Replace &lt;code&gt;Cheatin’ uh?&lt;/code&gt; with friendlier error messages.
&lt;/p&gt;
&lt;p&gt;
While intended as a playful error message, &lt;code&gt;Cheatin’ uh?&lt;/code&gt; can be interpreted as insulting or accusatory in an already stressful situation. This replaces Cheatin’ with more meaningful error messages, depending on the error that occurs.
&lt;/p&gt;
&lt;p&gt;
Props ElectricFeet, EricMeyer, karmatosed, dd32, BandonRandon, melchoyce, kristastevens for language; dmsnell for original patch; peterwilsoncc.
Merged &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42648" title="General: Replace `Cheatin’ uh?` with friendlier error messages.
While ..."&gt;[42648]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42719" title="General: Further improve error messages following [42648].
Props ..."&gt;[42719]&lt;/a&gt; to the 4.9 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38332" title="#38332: enhancement: &amp;#34;Cheating&amp;#34; message insults; needs changing (closed: fixed)"&gt;#38332&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43496 (CS: Fix disabled for user-edit.php) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Fri, 09 Mar 2018 00:03:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43496#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43496#comment:6/1520553804513683</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43496#comment:5" title="Comment 5"&gt;netweb&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43496#comment:3" title="Comment 3"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Since the admin doesn't use XHTML I'm not sure why we have to add a value to boolean attributes. The rule should probably be changed to exclude boolean attributes.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right, thanks, @ocean90 👍 , can you update the handbook to reflect this in the most appropriate way you think possible pelase 😃
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'd like to think that would require a WPCS RFC or more discussion than just "should probably" :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43496 (CS: Fix disabled for user-edit.php) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Thu, 08 Mar 2018 23:53:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43496#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43496#comment:5/1520553185995683</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43496#comment:3" title="Comment 3"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Since the admin doesn't use XHTML I'm not sure why we have to add a value to boolean attributes. The rule should probably be changed to exclude boolean attributes.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right, thanks, @ocean90 👍 , can you update the handbook to reflect this in the most appropriate way you think possible pelase 😃
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42647 (Underline links in the plugin description for installed plugins) closed</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 08 Mar 2018 23:19:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42647#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42647#comment:12/1520551149389967</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42810" title="Accessibility: Underline the links in the Plugins descriptions and ..."&gt;42810&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Accessibility: Underline the links in the Plugins descriptions and update notices.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Links within blocks and lines of text should always be underlined.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props Travel_girl, chetan200891, Shital Patel.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42647" title="#42647: defect (bug): Underline links in the plugin description for installed plugins (closed: fixed)"&gt;#42647&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42810]: Accessibility: Underline the links in the Plugins descriptions and ...</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 08 Mar 2018 23:19:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42810</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42810/1520551148271677</guid>
      <description>&lt;p&gt;
Accessibility: Underline the links in the Plugins descriptions and update notices.
&lt;/p&gt;
&lt;p&gt;
Links within blocks and lines of text should always be underlined.
&lt;/p&gt;
&lt;p&gt;
Props Travel_girl, chetan200891, Shital Patel.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42647" title="#42647: defect (bug): Underline links in the plugin description for installed plugins (closed: fixed)"&gt;#42647&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43504 (Use correct variable name in filter docs for the `$object_id` ...) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 23:18:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43504#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43504#comment:3/1520551116003257</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42809" title="Docs: Improve documentation for meta capability filters.
Remove ..."&gt;42809&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Improve documentation for meta capability filters.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Remove self-references, correct parameter names and descriptions.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props milana_cap, ocean90, SergeyBiryukov.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43504" title="#43504: defect (bug): Use correct variable name in filter docs for the `$object_id` ... (closed: fixed)"&gt;#43504&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42809]: Docs: Improve documentation for meta capability filters.  Remove ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 23:18:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42809</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42809/1520551115510742</guid>
      <description>&lt;p&gt;
Docs: Improve documentation for meta capability filters.
&lt;/p&gt;
&lt;p&gt;
Remove self-references, correct parameter names and descriptions.
&lt;/p&gt;
&lt;p&gt;
Props milana_cap, ocean90, SergeyBiryukov.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43504" title="#43504: defect (bug): Use correct variable name in filter docs for the `$object_id` ... (closed: fixed)"&gt;#43504&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43504 (Use correct variable name in filter docs for the `$object_id` ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 23:18:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43504#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43504#comment:2/1520551103170766</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42647 (Underline links in the plugin description for installed plugins) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 08 Mar 2018 23:15:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42647#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42647#comment:11/1520550901331771</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/42647/42647.3.diff" title="Attachment '42647.3.diff' in Ticket #42647"&gt;42647.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/42647/42647.3.diff" title="Download"&gt;​&lt;/a&gt; refreshes the patch. As mentioned in the original ticket description, better to not touch the links in the line below the plugins description because they're separated with "|" and the context helps clarifying they're links.
&lt;/p&gt;
&lt;p&gt;
See in the screenshot below an example of the links that are going to be underlined (plus the one in the Updates screen):
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/SpUzCHRyBU.png"&gt;&lt;img src="https://cldup.com/SpUzCHRyBU.png" alt="https://cldup.com/SpUzCHRyBU.png" crossorigin="anonymous" title="https://cldup.com/SpUzCHRyBU.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>42647.3.diff attached to Ticket #42647</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 08 Mar 2018 23:11:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42647/42647.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42647/42647.3.diff/1520550709188038</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43507 (Update hook docs in wp-admin/edit-tag-form.php to use `WP_Term` ...) created</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 08 Mar 2018 22:59:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43507</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43507/1520549944739032</guid>
      <description>&lt;p&gt;
&lt;code&gt;wp-admin/edit-tag-form.php&lt;/code&gt; still uses &lt;code&gt;object&lt;/code&gt; for all &lt;code&gt;$tag&lt;/code&gt; parameters although we now have a specific &lt;code&gt;WP_Term&lt;/code&gt; object, see &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34997" title="Introduce `WP_Term`.
`get_term()` now returns a `WP_Term` object, ..."&gt;[34997]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/browser/tags/4.9.4/src/wp-admin/term.php?marks=23,67#L21"&gt;https://core.trac.wordpress.org/browser/tags/4.9.4/src/wp-admin/term.php?marks=23,67#L21&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43505 (Display of html encoded text in dashboard.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 22:57:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43505#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43505#comment:2/1520549865693144</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43506 (Ensure a network's `notoptions` cache is an array to reduce lookup overhead) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 08 Mar 2018 22:29:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43506#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43506#comment:1/1520548185851203</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31147" title="#31147: defect (bug): make sure $notoptions is an array before assigning array key value (closed: fixed)"&gt;#31147&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43506 (Ensure a network's `notoptions` cache is an array to reduce lookup overhead) created</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 08 Mar 2018 22:29:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43506</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43506/1520548151990784</guid>
      <description>&lt;p&gt;
In every call to &lt;code&gt;get_network_option()&lt;/code&gt; the global &lt;code&gt;{$network_id}:notoptions&lt;/code&gt; cache is requested. However the function only sets a value for that cache if both the individual network option's cache lookup and its database lookup failed failed, which in most cases will (and should) not be the case.
&lt;/p&gt;
&lt;p&gt;
This isn't a significant problem, but when using an external object cache, this causes that cache to be called every time &lt;code&gt;get_network_option()&lt;/code&gt; is called. If instead &lt;code&gt;get_network_option()&lt;/code&gt; ensured an empty array is set on a cache miss, that would only happen once per request, as the local cache would afterwards have that value stored.
&lt;/p&gt;
&lt;p&gt;
It's admittedly a very minor performance improvement, but I think it's worth it, as there should be no downside to it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42158 (Twenty Seventeen: RSS Social Icon Missing) updated</title>
      
        <dc:creator>jasonlcrane</dc:creator>

      <pubDate>Thu, 08 Mar 2018 22:21:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42158#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42158#comment:6/1520547711421723</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42598 (Twenty Seventeen: Sticky header offset issue) updated</title>
      
        <dc:creator>jasonlcrane</dc:creator>

      <pubDate>Thu, 08 Mar 2018 22:20:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42598#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42598#comment:5/1520547646533735</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43505 (Display of html encoded text in dashboard.) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 08 Mar 2018 22:04:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43505#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43505#comment:1/1520546646629234</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43505.png attached to Ticket #43505</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 08 Mar 2018 22:02:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43505/43505.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43505/43505.png/1520546537565893</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43505 (Display of html encoded text in dashboard.) created</title>
      
        <dc:creator>anonym999999</dc:creator>

      <pubDate>Thu, 08 Mar 2018 21:59:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43505</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43505/1520546396927480</guid>
      <description>&lt;p&gt;
I have discussed the issue in this thread &lt;a class="ext-link" href="https://make.wordpress.org/polyglots/2018/02/26/hello-18/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/polyglots/2018/02/26/hello-18/&lt;/a&gt;, I report here the issue of the display of the text in UI, not the editorial choice of the translation itself.
&lt;/p&gt;
&lt;p&gt;
In fr_FR and fr_CA, there where changes done (last year?) to accomodate french ponctuation typographic rules but also, I guess, make sure the text doesnt fall on two line inadvertantly (ex. "text !", so a non-breaking space is inserted instead of a space).
&lt;/p&gt;
&lt;p&gt;
This non-breaking space is inserted as html encoded entity and it looks like it is displayed as is, without decoding like it is visible in this exemple screenshot : &lt;a class="ext-link" href="https://imgur.com/a/iVy9h"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://imgur.com/a/iVy9h&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43498 (PHP Fatal error:  Allowed memory size of 1073741824 bytes exhausted) updated</title>
      
        <dc:creator>arena</dc:creator>

      <pubDate>Thu, 08 Mar 2018 21:44:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43498#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43498#comment:6/1520545451230883</guid>
      <description>&lt;p&gt;
So i upgraded to 7.2.3 and the fatal error disappeared
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;em&gt;I know what is following occurs on a plugin and is not directly related to WP but may be it can help.&lt;/em&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
But i have another error :
&lt;/p&gt;
&lt;p&gt;
[php7:error] [pid 2052:tid 976] [client 127.0.0.1:50008] PHP Fatal error:  Uncaught Error: [] operator not supported for strings in (mypluginfile:line)
Stack trace:
# 0 \wordpress\wp-includes\class-wp-hook.php(286) : MP_AdminPage::print_styles(&lt;em&gt;)
# 1 \wordpress\wp-includes\class-wp-hook.php(310) : WP_Hook-&amp;gt;apply_filters(NULL, Array)
# 2 \wordpress\wp-includes\plugin.php(465) : WP_Hook-&amp;gt;do_action(Array)
# 3 \wordpress\wp-admin\admin-header.php(113) : do_action('admin_print_sty...')
# 4 \wordpress\wp-admin\admin.php(230) : require_once('D:\webserver\Do...')
# 5 {main}  thrown in (mypluginfile) on line (line), referer: &lt;a class="ext-link" href="http://127.0.0.1/wordpress/wp-admin/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://127.0.0.1/wordpress/wp-admin/&lt;/a&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
My analysis is this :
&lt;/p&gt;
&lt;p&gt;
from PHP 5 to PHP 7, PHP becomes more strict on variable types. A string remains a string, an array remains an array ...
&lt;/p&gt;
&lt;p&gt;
The issue is that do_action() uses apply_filters(), which initialize by default an argument ($args) =&amp;gt; var_dump =&amp;gt; string(0) ""
&lt;/p&gt;
&lt;p&gt;
do_action() should not pass &lt;strong&gt;any&lt;/strong&gt; argument if not required.
&lt;/p&gt;
&lt;p&gt;
In a plugin, in a parent class, i am using this line :
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;add_action('admin_print_styles',         array('MP_AdminPage', 'print_styles'));    /* xref.mailpress.org/nav.html?mp-includes/class/MP_adminpage_.class.php.source.html#l16 */
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
i define the print_styles() function  as
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;public static function print_styles($styles = array())                          /* xref.mailpress.org/nav.html?mp-includes/class/MP_adminpage_.class.php.source.html#l76 */
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
and (for code consistancy) the same print_styles() function in the sub class as
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;public static function print_styles($styles = array())  {                   /*  xref.mailpress.org/nav.html?mp-admin/mails.php.source.html#l60 */
/* some code here */
parent::print_styles($styles);
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43191 (Add aria-current to output of Walker_Nav_Menu for front-end navs) closed</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 08 Mar 2018 21:30:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43191#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43191#comment:12/1520544629899657</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42808" title="Accessibility: Themes: use `aria-current` for the `Walker_Nav_Menu` ..."&gt;42808&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Accessibility: Themes: use &lt;code&gt;aria-current&lt;/code&gt; for the &lt;code&gt;Walker_Nav_Menu&lt;/code&gt; current link.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;aria-current&lt;/code&gt; attribute is a simple, effective way to help assistive&lt;br /&gt;
technologies users orientate themselves within a list of items. Continues the &lt;br /&gt;
introduction in core of &lt;code&gt;aria-current&lt;/code&gt; after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42440" title="Accessibility: use `aria-current` for the paginated post links output ..."&gt;[42440]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41683" title="Accessibility: List Tables: use `aria-current` for the views current ..."&gt;[41683]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41359" title="Administration: Admin menu: Use `aria-current` for the current active ..."&gt;[41359]&lt;/a&gt;, and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41371" title="Allow usage of `aria-current` in `paginate_links()`.
The ..."&gt;[41371]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props williampatton, chetan200891, sami.keijonen.&lt;br /&gt;
Fixes &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/43191" title="#43191: enhancement: Add aria-current to output of Walker_Nav_Menu for front-end navs (reopened)"&gt;#43191&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42808]: Accessibility: Themes: use `aria-current` for the `Walker_Nav_Menu` ...</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 08 Mar 2018 21:30:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42808</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42808/1520544629434797</guid>
      <description>&lt;p&gt;
Accessibility: Themes: use &lt;code&gt;aria-current&lt;/code&gt; for the &lt;code&gt;Walker_Nav_Menu&lt;/code&gt; current link.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;aria-current&lt;/code&gt; attribute is a simple, effective way to help assistive
technologies users orientate themselves within a list of items. Continues the
introduction in core of &lt;code&gt;aria-current&lt;/code&gt; after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42440" title="Accessibility: use `aria-current` for the paginated post links output ..."&gt;[42440]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41683" title="Accessibility: List Tables: use `aria-current` for the views current ..."&gt;[41683]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41359" title="Administration: Admin menu: Use `aria-current` for the current active ..."&gt;[41359]&lt;/a&gt;, and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41371" title="Allow usage of `aria-current` in `paginate_links()`.
The ..."&gt;[41371]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Props williampatton, chetan200891, sami.keijonen.
Fixes &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/43191" title="#43191: enhancement: Add aria-current to output of Walker_Nav_Menu for front-end navs (reopened)"&gt;#43191&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43253 (Insert Link Dialog captures shift+arrow and changes selected item ...) closed</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 08 Mar 2018 20:57:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43253#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43253#comment:4/1520542664821367</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42807" title="Accessibility: Insert Link modal: Improve keyboard interaction.
 ..."&gt;42807&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Accessibility: Insert Link modal: Improve keyboard interaction.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Avoids to change the selected link when using the Shift and Up/Down arrow keys&lt;br /&gt;
to select text in the form fields.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/43253" title="#43253: defect (bug): Insert Link Dialog captures shift+arrow and changes selected item ... (assigned)"&gt;#43253&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42807]: Accessibility: Insert Link modal: Improve keyboard interaction.  ...</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 08 Mar 2018 20:57:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42807</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42807/1520542664329074</guid>
      <description>&lt;p&gt;
Accessibility: Insert Link modal: Improve keyboard interaction.
&lt;/p&gt;
&lt;p&gt;
Avoids to change the selected link when using the Shift and Up/Down arrow keys
to select text in the form fields.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/43253" title="#43253: defect (bug): Insert Link Dialog captures shift+arrow and changes selected item ... (assigned)"&gt;#43253&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43253 (Insert Link Dialog captures shift+arrow and changes selected item ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 08 Mar 2018 20:49:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43253#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43253#comment:3/1520542181668524</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43253/43253.diff" title="Attachment '43253.diff' in Ticket #43253"&gt;43253.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43253/43253.diff" title="Download"&gt;​&lt;/a&gt; prevents to trigger links selection when the ShIft key is used.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43253.diff attached to Ticket #43253</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 08 Mar 2018 20:47:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43253/43253.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43253/43253.diff/1520542071280289</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40510 (REST API: Post Revisions: Adding support for pagination) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Mar 2018 20:21:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40510#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40510#comment:4/1520540506232765</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by flixos90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1520540504000215"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 08 Mar 2018 20:20:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:24/1520540435387563</guid>
      <description>&lt;p&gt;
Related: After today's REST API chat, I took a stab at introducing more flexibility regarding query arguments for collection requests in the revisions controller (see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40510" title="#40510: enhancement: REST API: Post Revisions: Adding support for pagination (closed: fixed)"&gt;#40510&lt;/a&gt;, which was a fitting existing ticket).
&lt;/p&gt;
&lt;p&gt;
This doesn't directly benefit the autosave problem, but helps with another use-case of Gutenberg. Regarding the discussion taking place here, it is mainly something to consider regarding the implementation of an &lt;code&gt;/autosaves&lt;/code&gt; controller that would extend the &lt;code&gt;/revisions&lt;/code&gt; controller. Also, reviews/feedback always welcome!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38368 (Add front-end revision browsing) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 08 Mar 2018 20:14:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38368#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38368#comment:11/1520540067436904</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40510" title="#40510: enhancement: REST API: Post Revisions: Adding support for pagination (closed: fixed)"&gt;#40510&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40510 (REST API: Post Revisions: Adding support for pagination) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 08 Mar 2018 20:12:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40510#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40510#comment:3/1520539936701216</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Per today's REST API chat, supporting pagination and generally allowing a bit more flexibility with the revisions controller would also come in handy for Gutenberg.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/40510/40510.diff" title="Attachment '40510.diff' in Ticket #40510"&gt;40510.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/40510/40510.diff" title="Download"&gt;​&lt;/a&gt; adds support for the following query parameters for revisions:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;exclude&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;include&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;offset&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;order&lt;/code&gt; (default 'desc')
&lt;/li&gt;&lt;li&gt;&lt;code&gt;orderby&lt;/code&gt; (default 'date')
&lt;/li&gt;&lt;li&gt;&lt;code&gt;page&lt;/code&gt; (default 1)
&lt;/li&gt;&lt;li&gt;&lt;code&gt;per_page&lt;/code&gt; (default not provided, falling back to using -1 with &lt;code&gt;WP_Query&lt;/code&gt;, meaning no limit, for BC with current behavior)
&lt;/li&gt;&lt;li&gt;&lt;code&gt;search&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The implementation aligns closer with how the posts controller works. &lt;code&gt;WP_Query&lt;/code&gt; is directly used instead of calling &lt;code&gt;wp_get_post_revisions()&lt;/code&gt;, to be able to run a &lt;code&gt;SELECT FOUND_ROWS()&lt;/code&gt; query and get the result. Since the function is only a simple wrapper for a query object anyway which sets default arguments, this can easily be handled in the controller itself.
&lt;/p&gt;
&lt;p&gt;
The revisions controller will now return &lt;code&gt;X-WP-Total&lt;/code&gt; and &lt;code&gt;X-WP-TotalPages&lt;/code&gt; headers and pagination link headers (if applicable) for collection requests, just how the posts controller does.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43123 (Default captions should NOT use max-width) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Mar 2018 20:02:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43123#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43123#comment:8/1520539367243104</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1520539365000409"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>40510.diff attached to Ticket #40510</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 08 Mar 2018 20:01:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40510/40510.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40510/40510.diff/1520539300356844</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:59:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:23/1520539172877482</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43316#comment:22" title="Comment 22"&gt;adamsilverstein&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
can you describe the use case for this? "Autosaves controller to be able to handle updating the post too (without creating another revision)."
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's already in the patch, just better to do &lt;code&gt;define( 'DOING_AUTOSAVE', true );&lt;/code&gt; instead of removing and then re-adding the action &lt;code&gt;remove_action( 'post_updated', 'wp_save_post_revision' );&lt;/code&gt;. Plugins may be "watching for" the constant too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43216 (IXR Server Warning) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:55:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43216#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43216#comment:6/1520538926201849</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42806" title="XML-RPC: Add default values to IXR_Message for PHP 7.2 compatibility ..."&gt;42806&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
XML-RPC: Add default values to IXR_Message for PHP 7.2 compatibility to avoid PHP Warnings.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props dd32.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42652" title="XML-RPC: Add default values to IXR_Message for PHP 7.2 compatibility ..."&gt;[42652]&lt;/a&gt; to the 4.9 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43216" title="#43216: defect (bug): IXR Server Warning (closed: fixed)"&gt;#43216&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42806]: XML-RPC: Add default values to IXR_Message for PHP 7.2 compatibility ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:55:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42806</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42806/1520538925727832</guid>
      <description>&lt;p&gt;
XML-RPC: Add default values to IXR_Message for PHP 7.2 compatibility to avoid PHP Warnings.
&lt;/p&gt;
&lt;p&gt;
Props dd32.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42652" title="XML-RPC: Add default values to IXR_Message for PHP 7.2 compatibility ..."&gt;[42652]&lt;/a&gt; to the 4.9 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43216" title="#43216: defect (bug): IXR Server Warning (closed: fixed)"&gt;#43216&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:52:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:22/1520538773834352</guid>
      <description>&lt;p&gt;
@azaozz  - Sure I'll work on an update of the patch, can you describe the use case for this? "Autosaves controller to be able to handle updating the post too (without creating another revision)."
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43255 (WP_Image_Editor::make_image leaves an output buffer open on failure) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:51:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43255#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43255#comment:11/1520538682224520</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1520538680000410"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43226 (Crop setting in thumbnails never set when uploading PDF files) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:49:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43226#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43226#comment:18/1520538540052322</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1520538537000518"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43437 (Add way for registered users to request deletion or anonymization of ...) updated</title>
      
        <dc:creator>mikejolley</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:47:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43437#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43437#comment:3/1520538476544592</guid>
      <description>&lt;p&gt;
So thinking about solutions to this. Some notes:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Plugins need a way (hook?) to delete their own data for a user as well as core.
&lt;/li&gt;&lt;li&gt;Registered users are not the only people who need to delete data; visitors have the same rights, so this should be done by email.
&lt;/li&gt;&lt;li&gt;Some data needs to be preserved if there is a business need to hold it. E.g. Holding order data for tax purposes.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
With that in mind, the admin needs to be able to control what does and does not get deleted when dealing with a request. In order do to that, plugins and core need to expose what personal data they hold.
&lt;/p&gt;
&lt;p&gt;
My idea is that we:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Agree on a schema which plugins may register to describe the personal data they hold for a user.
&lt;/li&gt;&lt;li&gt;Core loads in these schemas and presents a table to the admin user which shows what data is available to delete, and offers a checkbox/select to:
&lt;ul&gt;&lt;li&gt;Delete/remove
&lt;/li&gt;&lt;li&gt;Anonymize
&lt;/li&gt;&lt;li&gt;Keep
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Admin selections are then passed to a hook for the delete event and each plugin takes care of it's data based on those preferences.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Anything not exposed in this way would be up to the plugin to handle.
&lt;/p&gt;
&lt;p&gt;
Would a tool like I described about be suitable? Am I missing anything?
&lt;/p&gt;
&lt;p&gt;
cc @allendav
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42713 (Users list does not display name if Last Name empty) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:47:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42713#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42713#comment:12/1520538438329854</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42805" title="Users: Display partial names in the user listing tables.
This allows ..."&gt;42805&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Users: Display partial names in the user listing tables. &lt;br /&gt;
This allows showing a name when only the first or last name is provided.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props shital-patel, antipole.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42256" title="Users: Display partial names in the user listing tables.
This allows ..."&gt;[42256]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42257" title="Users: After [42256], remove unnecessary double quotes around ..."&gt;[42257]&lt;/a&gt; to the 4.9 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42713" title="#42713: defect (bug): Users list does not display name if Last Name empty (closed: fixed)"&gt;#42713&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42805]: Users: Display partial names in the user listing tables.  This allows ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:47:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42805</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42805/1520538437861313</guid>
      <description>&lt;p&gt;
Users: Display partial names in the user listing tables.
This allows showing a name when only the first or last name is provided.
&lt;/p&gt;
&lt;p&gt;
Props shital-patel, antipole.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42256" title="Users: Display partial names in the user listing tables.
This allows ..."&gt;[42256]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42257" title="Users: After [42256], remove unnecessary double quotes around ..."&gt;[42257]&lt;/a&gt; to the 4.9 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42713" title="#42713: defect (bug): Users list does not display name if Last Name empty (closed: fixed)"&gt;#42713&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:46:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:21/1520538399838605</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
The /autosaves endpoint would be used on the client to "trigger" an autosave.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Currently autosaves would either update or create a revision, or update the actual post if it is a draft. We need the Autosaves controller to be able to handle updating the post too (without creating another revision).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Ideally the server should automatically create a revision if you have made significant changes. this way, if you typed a 10 thousand word document without saving, you would have revisions along the way not just a single autosave.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right. This is not a new idea, been around for some years. Not implemented till now because of "revisions use too much resources" concerns. Lately we are using posts (CPTs) for whatnot, lets add it, would be a good user facing enhancement :)
&lt;/p&gt;
&lt;p&gt;
The only thing I'm not sure about is how to detect when significant changes have been made in the incoming autosave. A simple strlen() might work, but... not that good. The other option is to make a diff with the latest revision and count the changes.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Currently published posts only get a revision when they are updated, it would be great if published posts captured revisions, the previous item would solve this.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, it will. Also don't see a problem for the client to save a new revision whenever. There is a revisions controller for that :)
&lt;/p&gt;
&lt;p&gt;
@adamsilverstein could you update your patch as per the above :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42968 (Media: Grid View: new upload, file is in the wrong position in the ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:45:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42968#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42968#comment:25/1520538328761619</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1520538327000011"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43417 (Infinite loop in wp_mkdir_p with open_basedir restrictions) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:44:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43417#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43417#comment:9/1520538250932194</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42804" title="Filesystem API: Avoid an infinite loop in `wp_mkdir_p()` when trying ..."&gt;42804&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Filesystem API: Avoid an infinite loop in &lt;code&gt;wp_mkdir_p()&lt;/code&gt; when trying to determine the parent folder with &lt;code&gt;open_basedir&lt;/code&gt; restriction in effect.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props soulseekah, 1265578519-1.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42801" title="Filesystem API: Avoid an infinite loop in `wp_mkdir_p()` when trying ..."&gt;[42801]&lt;/a&gt; to the 4.9 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43417" title="#43417: defect (bug): Infinite loop in wp_mkdir_p with open_basedir restrictions (closed: fixed)"&gt;#43417&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42804]: Filesystem API: Avoid an infinite loop in `wp_mkdir_p()` when trying ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:44:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42804</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42804/1520538250450618</guid>
      <description>&lt;p&gt;
Filesystem API: Avoid an infinite loop in &lt;code&gt;wp_mkdir_p()&lt;/code&gt; when trying to determine the parent folder with &lt;code&gt;open_basedir&lt;/code&gt; restriction in effect.
&lt;/p&gt;
&lt;p&gt;
Props soulseekah, 1265578519-1.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42801" title="Filesystem API: Avoid an infinite loop in `wp_mkdir_p()` when trying ..."&gt;[42801]&lt;/a&gt; to the 4.9 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43417" title="#43417: defect (bug): Infinite loop in wp_mkdir_p with open_basedir restrictions (closed: fixed)"&gt;#43417&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #42724 (Options Media page hides breaks on desktop) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:41:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42724#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42724#comment:22/1520538099905412</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1520538098000026"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43307 (Error wp-admin &gt; Includes &gt; theme.php) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:41:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43307#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43307#comment:5/1520538090324597</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42803" title="Customize: Correct closing tags in ..."&gt;42803&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Customize: Correct closing tags in &lt;code&gt;customize_themes_print_templates()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props johnpgreen, nandorsky.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42711" title="Customize: Correct closing tags in ..."&gt;[42711]&lt;/a&gt; to the 4.9 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43307" title="#43307: defect (bug): Error wp-admin &amp;gt; Includes &amp;gt; theme.php (closed: fixed)"&gt;#43307&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42803]: Customize: Correct closing tags in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:41:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42803</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42803/1520538089831789</guid>
      <description>&lt;p&gt;
Customize: Correct closing tags in &lt;code&gt;customize_themes_print_templates()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props johnpgreen, nandorsky.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42711" title="Customize: Correct closing tags in ..."&gt;[42711]&lt;/a&gt; to the 4.9 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43307" title="#43307: defect (bug): Error wp-admin &amp;gt; Includes &amp;gt; theme.php (closed: fixed)"&gt;#43307&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43190 (Update prefixed CSS properties in about.css) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:40:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43190#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43190#comment:6/1520538001912836</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42802" title="Build/Test Tools: Update prefixed CSS properties in `about.css`.
 ..."&gt;42802&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Build/Test Tools: Update prefixed CSS properties in &lt;code&gt;about.css&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Firefox 52+ supports unprefixed &lt;code&gt;column-count&lt;/code&gt; and &lt;code&gt;column-gap&lt;/code&gt; properties.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props netweb, afercia.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42687" title="Build/Test Tools: Update prefixed CSS properties in `about.css`.
 ..."&gt;[42687]&lt;/a&gt; to the 4.9 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43190" title="#43190: defect (bug): Update prefixed CSS properties in about.css (closed: fixed)"&gt;#43190&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42802]: Build/Test Tools: Update prefixed CSS properties in `about.css`.  ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:40:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42802</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42802/1520538001262598</guid>
      <description>&lt;p&gt;
Build/Test Tools: Update prefixed CSS properties in &lt;code&gt;about.css&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Firefox 52+ supports unprefixed &lt;code&gt;column-count&lt;/code&gt; and &lt;code&gt;column-gap&lt;/code&gt; properties.
&lt;/p&gt;
&lt;p&gt;
Props netweb, afercia.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42687" title="Build/Test Tools: Update prefixed CSS properties in `about.css`.
 ..."&gt;[42687]&lt;/a&gt; to the 4.9 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43190" title="#43190: defect (bug): Update prefixed CSS properties in about.css (closed: fixed)"&gt;#43190&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43417 (Infinite loop in wp_mkdir_p with open_basedir restrictions) reopened</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:33:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43417#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43417#comment:8/1520537583375968</guid>
      <description>&lt;p&gt;
Reopening for 4.9.5 consideration.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #43417 (Infinite loop in wp_mkdir_p with open_basedir restrictions) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:31:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43417#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43417#comment:7/1520537519899437</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42801" title="Filesystem API: Avoid an infinite loop in `wp_mkdir_p()` when trying ..."&gt;42801&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Filesystem API: Avoid an infinite loop in &lt;code&gt;wp_mkdir_p()&lt;/code&gt; when trying to determine the parent folder with &lt;code&gt;open_basedir&lt;/code&gt; restriction in effect.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props soulseekah, 1265578519-1.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43417" title="#43417: defect (bug): Infinite loop in wp_mkdir_p with open_basedir restrictions (closed: fixed)"&gt;#43417&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42801]: Filesystem API: Avoid an infinite loop in `wp_mkdir_p()` when trying ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:31:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42801</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42801/1520537519420531</guid>
      <description>&lt;p&gt;
Filesystem API: Avoid an infinite loop in &lt;code&gt;wp_mkdir_p()&lt;/code&gt; when trying to determine the parent folder with &lt;code&gt;open_basedir&lt;/code&gt; restriction in effect.
&lt;/p&gt;
&lt;p&gt;
Props soulseekah, 1265578519-1.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43417" title="#43417: defect (bug): Infinite loop in wp_mkdir_p with open_basedir restrictions (closed: fixed)"&gt;#43417&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43417 (Infinite loop in wp_mkdir_p with open_basedir restrictions) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:20:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43417#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43417#comment:6/1520536806320381</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/25047" title="Make use of the recursive option in mkdir() in wp_mkdir_p(). Avoids a ..."&gt;[25047]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:09:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:20/1520536146431644</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43316#comment:19" title="Comment 19"&gt;schlessera&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
My suggestion is to use a new route &lt;code&gt;/autosaves&lt;/code&gt; extending the revisions controller.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree, this was my original idea in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43316/autosave-controller.diff" title="Attachment 'autosave-controller.diff' in Ticket #43316"&gt;autosave-controller.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43316/autosave-controller.diff" title="Download"&gt;​&lt;/a&gt; and &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/4156"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/4156&lt;/a&gt;. not much has to change since autosaves are so close to revisions.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Letting the client decide whether to actually store the autosave or not is not recommend imho, because:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The client does decide sometimes when to save an autosave verses a revision because these are functionally very different:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;An autosave is created automatically by the client on a timed interval, whenever the post has changed from the last autosave. Autosaves protect against content loss if the browser crashes for example. one autosave is created per user, so each user has a backup of their editing session at all times.
&lt;/li&gt;&lt;li&gt;Revisions are created when a draft post is saved, a published post is updated. This is the result of direct user action - clicking a button, and not automatically.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Also:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Ideally the server should automatically create a revision if you have made significant changes. this way, if you typed a 10 thousand word document without saving, you would have revisions along the way not just a single autosave.
&lt;/li&gt;&lt;li&gt;Currently published posts only get a revision when they are updated, it would be great if published posts captured revisions, the previous item would solve this.
&lt;/li&gt;&lt;li&gt;Autosaves are used for previews. When previewing, an autosave is created of the current editor state, then that 'post' is previewed on the front end.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43491 (Automatically create a Privacy Policy page when installing WordPress) updated</title>
      
        <dc:creator>fclaussen</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:00:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43491#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43491#comment:5/1520535608848636</guid>
      <description>&lt;p&gt;
I'm against a default privacy policy. The admin should write it. But presenting it along with Sample Page maybe is saying "Hey, this is important. Write something here".
&lt;/p&gt;
&lt;p&gt;
Go to your settings and select the front page, blog page, privacy page and so on.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43504 (Use correct variable name in filter docs for the `$object_id` ...) updated</title>
      
        <dc:creator>milana_cap</dc:creator>

      <pubDate>Thu, 08 Mar 2018 18:57:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43504#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43504#comment:1/1520535448297356</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43504.patch attached to Ticket #43504</title>
      
        <dc:creator>milana_cap</dc:creator>

      <pubDate>Thu, 08 Mar 2018 18:57:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43504/43504.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43504/43504.patch/1520535426681203</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43436 (Add opt-in for commenter cookies) updated</title>
      
        <dc:creator>mikejolley</dc:creator>

      <pubDate>Thu, 08 Mar 2018 18:54:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43436#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43436#comment:18/1520535285044030</guid>
      <description>&lt;p&gt;
Thats fair, I didn't notice that feature. Need to weigh the usefulness of that against a checkbox for all :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43491 (Automatically create a Privacy Policy page when installing WordPress) updated</title>
      
        <dc:creator>mikejolley</dc:creator>

      <pubDate>Thu, 08 Mar 2018 18:51:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43491#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43491#comment:4/1520535103202460</guid>
      <description>&lt;p&gt;
Hmm. I see. My question is what is worse for a new site.
&lt;/p&gt;
&lt;p&gt;
a) A default privacy policy the user didn't write.
b) No privacy policy at all.
&lt;/p&gt;
&lt;p&gt;
If a policy is general enough to avoid legal issues it could be useful. If it *needs* admin input, it should be manual.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43498 (PHP Fatal error:  Allowed memory size of 1073741824 bytes exhausted) updated</title>
      
        <dc:creator>arena</dc:creator>

      <pubDate>Thu, 08 Mar 2018 18:35:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43498#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43498#comment:5/1520534154916910</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43498#comment:4" title="Comment 4"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43498#comment:3" title="Comment 3"&gt;arena&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I am using trunk (see attached for function wp_is_stream() )
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks for the additional info! Could you see what the value of &lt;code&gt;stream_get_wrappers()&lt;/code&gt; is?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I just updated PHP 7.0.16 to PHP 7.1.15
&lt;/p&gt;
&lt;p&gt;
Here is what "var_dump(stream_get_wrappers());" looks like (out of WP)
&lt;/p&gt;
&lt;pre class="wiki"&gt;array(11) {
  [0]=&amp;gt;
  string(3) "php"
  [1]=&amp;gt;
  string(4) "file"
  [2]=&amp;gt;
  string(4) "glob"
  [3]=&amp;gt;
  string(4) "data"
  [4]=&amp;gt;
  string(4) "http"
  [5]=&amp;gt;
  string(3) "ftp"
  [6]=&amp;gt;
  string(0) ""
  [7]=&amp;gt;
  string(0) ""
  [8]=&amp;gt;
  string(5) "https"
  [9]=&amp;gt;
  string(4) "ftps"
  [10]=&amp;gt;
  string(4) "phar"
}
&lt;/pre&gt;&lt;p&gt;
In WP, now i have that kind of message (appears sooner than on previous php version):
&lt;/p&gt;
&lt;pre class="wiki"&gt;[php7:error] [pid 5840:tid 1052] [client 127.0.0.1:49883] PHP Fatal error:  Possible integer overflow in memory allocation (4 * 8319104478870268257 + 32) in ...wordpress\\wp-includes\\functions.php on line 5472
&lt;/pre&gt;&lt;p&gt;
always same line ...
&lt;/p&gt;
&lt;p&gt;
I am going to update to 7.2.3 to see what is happening.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43491 (Automatically create a Privacy Policy page when installing WordPress) updated</title>
      
        <dc:creator>fclaussen</dc:creator>

      <pubDate>Thu, 08 Mar 2018 18:19:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43491#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43491#comment:3/1520533175337736</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43491#comment:2" title="Comment 2"&gt;mikejolley&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This sounds like the same thing as &lt;a href="https://core.trac.wordpress.org/ticket/43389"&gt;https://core.trac.wordpress.org/ticket/43389&lt;/a&gt;?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
More or less.. the decision right now seems to be having the page picker under tools.
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43389" title="#43389: feature request: Add a privacy policy page setting to options-reading.php (closed: wontfix)"&gt;#43389&lt;/a&gt; also doesn't mention the possibility of having a privacy policy page being added on first install.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Thu, 08 Mar 2018 18:06:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:19/1520532379935919</guid>
      <description>&lt;p&gt;
My suggestion is to use a new route &lt;code&gt;/autosaves&lt;/code&gt; extending the revisions controller.
&lt;/p&gt;
&lt;p&gt;
The concept of an "Autosave" is different to the concept of a "Revision", even though right now, they are technically implemented in a similar manner and stored in the same table. That could potentially change at any moment, though. Routes should be modeled after concepts, not how stuff is stored in the DB.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;/autosaves&lt;/code&gt; endpoint would be used on the client to "trigger" an autosave. The server then decides how (or if) to store that autosave. The server then emits a response to the client, which could contain contextual data that the client needs to provide needed visual feedback. As an example, it could provide the latest valid autosave (=revision) ID. This can be used on the client to adapt its state.
&lt;/p&gt;
&lt;p&gt;
Letting the client decide whether to actually store the autosave or not is not recommend imho, because:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The client does not have the necessary knowledge to make this decision. It would either require direct access to the DB or multiple network roundtrips to decide.
&lt;/li&gt;&lt;li&gt;The client should be in control of the logic that defines user interactions, and the server should be in control of the logic that defines the business domain. A client is not to be trusted, so giving it too much decisional power is a security liability.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43498 (PHP Fatal error:  Allowed memory size of 1073741824 bytes exhausted) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 18:01:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43498#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43498#comment:4/1520532085802884</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43498#comment:3" title="Comment 3"&gt;arena&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I am using trunk (see attached for function wp_is_stream() )
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks for the additional info! Could you see what the value of &lt;code&gt;stream_get_wrappers()&lt;/code&gt; is?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Mar 2018 17:55:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:18/1520531711738273</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by azaozz. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1520531708000686"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43504 (Use correct variable name in filter docs for the `$object_id` ...) created</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 08 Mar 2018 17:54:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43504</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43504/1520531668240276</guid>
      <description>&lt;p&gt;
Added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41800" title="Docs: add docs for meta authorization filters.
Add filter ..."&gt;[41800]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
In &lt;a href="https://core.trac.wordpress.org/browser/tags/4.9.4/src/wp-includes/capabilities.php?marks=326,348#L312"&gt;https://core.trac.wordpress.org/browser/tags/4.9.4/src/wp-includes/capabilities.php?marks=326,348#L312&lt;/a&gt; the &lt;code&gt;$object_id&lt;/code&gt; parameter is referenced as &lt;code&gt;$post_id&lt;/code&gt;. It should be &lt;code&gt;$object_id Object ID.&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39965 (REST API: Introduce a controller for searching across post types) updated</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Thu, 08 Mar 2018 17:44:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39965#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39965#comment:25/1520531089686538</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;blockquote&gt;
&lt;p&gt;
Say I’m writing a post and I want to promote one of my products. I want to link to my product. Are you really saying in Gutenberg I have to do that manually? Do you realize this won't be very... welcomed by users?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is still possible in the REST API, just with multiple requests. It's up to the client on how it wants to present multiple types to the user. There's the api client (in this case gutenberg) that can do things for the user, like send multiple requests. Different post types can be very different, so the client should handle these as such. For example, don't assume you can just get "all posts across all types" and then display them. What if a post type doesn't support titles, etc. Different post types can be as different as a Tag and a Post, as far as the API is concerned. That's why the suggestion is a search endpoint (or similar) that would return multiple groupings of different objects.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43436 (Add opt-in for commenter cookies) updated</title>
      
        <dc:creator>lakenh</dc:creator>

      <pubDate>Thu, 08 Mar 2018 17:44:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43436#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43436#comment:17/1520531076187976</guid>
      <description>&lt;p&gt;
The cookies do have a use though, for more than just autocomplete :)
&lt;/p&gt;
&lt;p&gt;
The cookies allow you to delete your comments if they are not approved yet, and preview it as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43436 (Add opt-in for commenter cookies) updated</title>
      
        <dc:creator>wpmarkuk</dc:creator>

      <pubDate>Thu, 08 Mar 2018 17:38:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43436#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43436#comment:16/1520530737576716</guid>
      <description>&lt;p&gt;
On reflection I agree - I think we could just not use a cookie here at all and not have this tbh.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39965 (REST API: Introduce a controller for searching across post types) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 08 Mar 2018 17:38:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39965#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39965#comment:24/1520530735156695</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Discussed this issue during today's Gutenberg bug-scrub and heard there are dissenting opinions in the REST API team. I'd propose to do a quick use case example:
&lt;/p&gt;
&lt;p&gt;
Say I’m writing a post and I want to promote one of my products. I want to link to my product. Are you really saying in Gutenberg I have to do that manually? Do you realize this won't be very... welcomed by users?
&lt;/p&gt;
&lt;p&gt;
As I see it, and I'm pretty sure I'm not the only one, having the ability to link to any post type is paramount in a modern editor. Without this ability, Gutenberg will be pretty limited. At that point, better to switch back to AJAX :D
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43436 (Add opt-in for commenter cookies) updated</title>
      
        <dc:creator>mikejolley</dc:creator>

      <pubDate>Thu, 08 Mar 2018 17:27:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43436#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43436#comment:15/1520530067809619</guid>
      <description>&lt;p&gt;
In the age of browser autocomplete, how useful is this cookie anyway?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43491 (Automatically create a Privacy Policy page when installing WordPress) updated</title>
      
        <dc:creator>mikejolley</dc:creator>

      <pubDate>Thu, 08 Mar 2018 17:21:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43491#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43491#comment:2/1520529682987455</guid>
      <description>&lt;p&gt;
This sounds like the same thing as &lt;a href="https://core.trac.wordpress.org/ticket/43389"&gt;https://core.trac.wordpress.org/ticket/43389&lt;/a&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38036 (Add support for the utf8mb4_0900_ai_ci collation) updated</title>
      
        <dc:creator>sierkb</dc:creator>

      <pubDate>Thu, 08 Mar 2018 17:19:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38036#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38036#comment:4/1520529587499737</guid>
      <description>&lt;p&gt;
Any progress in this issue?
&lt;/p&gt;
&lt;p&gt;
If using MySQL 8.0, would an explicit
define('DB_CHARSET', 'utf8mb4');
define('DB_COLLATE', 'utf8mb4_0900_ai_ci');
in wp-config.php be usefull right now?
&lt;/p&gt;
&lt;p&gt;
If using MySQL 5.7.x, what should be used instead?
What are the defaults in WordPress as of today?
define('DB_CHARSET', 'utf8'); ?
define('DB_COLLATE', 'utf8mb4_unicode_ci'); ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2799 (Cache 'dynamic' Javascript) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Mar 2018 17:13:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2799#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2799#comment:4/1520529221073838</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-editor by iseulde. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1520529218000809"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43502 (`WP_REST_Posts_Controller::prepare_item_for_response()` doesn't reset ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 17:10:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43502#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43502#comment:1/1520529026788399</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @gerbenvandijk, welcome to WordPress Trac! Thanks for the report.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;WP_REST_Revisions_Controller::prepare_item_for_response()&lt;/code&gt; has the same issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43501 (Debug backtrace doesn't normalize paths before replacement) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 17:07:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43501#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43501#comment:3/1520528824533277</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42800" title="General: In `wp_debug_backtrace_summary()`, normalize paths before ..."&gt;42800&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
General: In &lt;code&gt;wp_debug_backtrace_summary()&lt;/code&gt;, normalize paths before replacement for better cross–platform compatibility.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props Rarst.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43501" title="#43501: defect (bug): Debug backtrace doesn't normalize paths before replacement (closed: fixed)"&gt;#43501&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42800]: General: In `wp_debug_backtrace_summary()`, normalize paths before ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 17:07:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42800</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42800/1520528824041948</guid>
      <description>&lt;p&gt;
General: In &lt;code&gt;wp_debug_backtrace_summary()&lt;/code&gt;, normalize paths before replacement for better cross–platform compatibility.
&lt;/p&gt;
&lt;p&gt;
Props Rarst.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43501" title="#43501: defect (bug): Debug backtrace doesn't normalize paths before replacement (closed: fixed)"&gt;#43501&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43501 (Debug backtrace doesn't normalize paths before replacement) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 17:06:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43501#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43501#comment:2/1520528772466292</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43503 (Problematic handling of folder name when using upload to add a new ...) updated</title>
      
        <dc:creator>anonym999999</dc:creator>

      <pubDate>Thu, 08 Mar 2018 16:54:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43503#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43503#comment:1/1520528079828046</guid>
      <description>&lt;p&gt;
Correction :
&lt;/p&gt;
&lt;p&gt;
"fails the upgrade of the &lt;strong&gt;THEME&lt;/strong&gt; because "plugin-update-checker" use "theme-exemple-1.0" as theme identifier."
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43503 (Problematic handling of folder name when using upload to add a new ...) created</title>
      
        <dc:creator>anonym999999</dc:creator>

      <pubDate>Thu, 08 Mar 2018 16:50:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43503</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43503/1520527842124424</guid>
      <description>&lt;p&gt;
Hello,
&lt;/p&gt;
&lt;p&gt;
First bug here. Thanks for the great platform!
&lt;/p&gt;
&lt;p&gt;
I report this as a bug but I think it's probably a bug and a enhancement suggestion.
&lt;/p&gt;
&lt;p&gt;
We are about to release a platform with a plugin and theme that are dependant on each other and could not comply to WordPress official theme and plugin repository, so we will distribute it through Github.
We have a documentation that will be offered in the Wiki to assist with the installation and to offer a simple evaluation installation process, I have used the upload theme feature and another library to install
the required plugin (&lt;a class="ext-link" href="http://tgmpluginactivation.com/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://tgmpluginactivation.com/&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
For convenience, I also use this other wonderfull projet (&lt;a class="ext-link" href="https://github.com/YahnisElsts/plugin-update-checker"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/YahnisElsts/plugin-update-checker&lt;/a&gt;) to add upgrade from Github integrated in WordPress UI.
&lt;/p&gt;
&lt;p&gt;
While testing the integration I stumbled with a few problems and it looks like one is on WordPress side.
&lt;/p&gt;
&lt;p&gt;
For my test, I had a theme release in Github that was named "theme-exemple-1.0.zip".
&lt;/p&gt;
&lt;p&gt;
When I import this file using WordPress UI, everything goes well. The folder created in wp-content/themes is named "theme-exemple-1.0".
&lt;/p&gt;
&lt;p&gt;
BUG: If I try to delete the theme from WordPress UI, the delete is not working (theme not found). I have to rename the folder manually to theme-exemple to be able to delete it (from UI).
&lt;/p&gt;
&lt;p&gt;
I traced the code and was actually surprised to discover that there where no way to change the folder name.
&lt;/p&gt;
&lt;p&gt;
1) The upload process doesn't use metadata from the header of style.css to calculate the slug / folder name (I think this is done on plugin side).
2) It's not possible to have a sub-folder to encapsulate the rightly named folder.
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
By exemple :
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
release.zip containing a folder "theme-exemple" (the process to find style.css should scan folders and drill down in folders and accept the package and corresponding folder if it can find ONE styles.css?)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There was a related issue with "plugin-update-checker" where the name of the theme is calculated from slug and become "theme-exemple-10" (without the dot), so WordPress fails the upgrade of the plugin because
"plugin-update-checker" use "theme-exemple-1.0" as theme identifier.
&lt;/p&gt;
&lt;p&gt;
As a workaround, I will modify the filename of my release on github to not have the version tag on it (which is in some ways convenient).
Maybe a known issue?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43502 (`WP_REST_Posts_Controller::prepare_item_for_response()` doesn't reset ...) created</title>
      
        <dc:creator>gerbenvandijk</dc:creator>

      <pubDate>Thu, 08 Mar 2018 16:45:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43502</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43502/1520527541655820</guid>
      <description>&lt;p&gt;
Hi all,
&lt;/p&gt;
&lt;p&gt;
I seem to have stumbled upon a small oversight in &lt;code&gt;WP_REST_Posts_Controller::prepare_item_for_response()&lt;/code&gt; , where it doesn't reset postdata after calling &lt;code&gt;setup_postdata()&lt;/code&gt;, rendering this part of the API useless for developers who want to use this API in their custom code.
&lt;/p&gt;
&lt;p&gt;
Ran into it while writing a custom function, that uses this part of the API to convert a regular post object into an object that matches the json scheme of the API.
&lt;/p&gt;
&lt;p&gt;
I’ve fixed it temporarily by doing setting &lt;code&gt;$GLOBALS[ 'post' ] = $original_post_id&lt;/code&gt; in my function (and by passing &lt;code&gt;original_post_id&lt;/code&gt; as parameter to my function) - but it seems to me that this should be fixed in core.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;function convert_post_object_to_rest_response($post)
{
    global $wp_rest_server;
    $post_type = get_post_type_object($post-&amp;gt;post_type);
    $request = WP_REST_Request::from_url(rest_url(sprintf('wp/v2/%s/%d', $post_type-&amp;gt;rest_base, $post-&amp;gt;ID)));
    $request = rest_do_request($request);
    $data = $wp_rest_server-&amp;gt;response_to_data($request, isset($_GET[ '_embed' ]));
    return $data;
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
It returns the right data, which is great - but when i in turn use this function to supply a field in one of my endpoints with this dat, all fields below it seem to inherit the ID i’ve passed.
&lt;/p&gt;
&lt;p&gt;
i’ve traced this back to &lt;code&gt;WP_REST_Posts_Controller::prepare_item_for_response&lt;/code&gt;, where it’s doing a &lt;code&gt;setup_postdata&lt;/code&gt; call without resetting it later.
&lt;/p&gt;
&lt;p&gt;
For now i’ve fixed it by setting &lt;code&gt;$GLOBALS[ 'post' ] = $original_post_id&lt;/code&gt; in my function (and by passing &lt;code&gt;original_post_id&lt;/code&gt; as parameter to my function), but I figured i'd report it here so it can be fixed from the core.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43501 (Debug backtrace doesn't normalize paths before replacement) updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Thu, 08 Mar 2018 16:45:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43501#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43501#comment:1/1520527513864058</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Normalized_paths_for_replacement_in_debug_backtrace_.patch attached to Ticket #43501</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Thu, 08 Mar 2018 16:45:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43501/Normalized_paths_for_replacement_in_debug_backtrace_.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43501/Normalized_paths_for_replacement_in_debug_backtrace_.patch/1520527500533293</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43501 (Debug backtrace doesn't normalize paths before replacement) created</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Thu, 08 Mar 2018 16:44:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43501</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43501/1520527490125569</guid>
      <description>&lt;p&gt;
&lt;code&gt;wp_debug_backtrace_summary()&lt;/code&gt; tries to truncate admin and content paths from includes for brevity.
&lt;/p&gt;
&lt;p&gt;
However it doesn't normalize paths before replacement, which is necessary for any kind of reliable operation cross–platform.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>wp_is_stream.JPG attached to Ticket #43498</title>
      
        <dc:creator>arena</dc:creator>

      <pubDate>Thu, 08 Mar 2018 16:43:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43498/wp_is_stream.JPG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43498/wp_is_stream.JPG/1520527438336228</guid>
      <description>&lt;p&gt;
function wp_is_stream
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43498 (PHP Fatal error:  Allowed memory size of 1073741824 bytes exhausted) updated</title>
      
        <dc:creator>arena</dc:creator>

      <pubDate>Thu, 08 Mar 2018 16:43:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43498#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43498#comment:3/1520527403947059</guid>
      <description>&lt;p&gt;
@SergeyBiryukov 
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I am using trunk (see attached for function wp_is_stream() )
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Can't tell how to reproduce this issue, seems to happen when several instances of the same WordPress are running (several ajax calls)
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42008 (Show warning that usernames can't be changed) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 16:41:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42008#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42008#comment:9/1520527291993945</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43479 (Theme detail text cutoff in RTL) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 16:39:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43479#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43479#comment:6/1520527196109738</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #30988,​43218 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 16:38:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=30988%2C43218</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=30988%2C43218/1520527080273143</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42799" title="Tests: Correct assertion in ..."&gt;42799&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Tests: Correct assertion in &lt;code&gt;Tests_WP_Customize_Setting::test_constructor_with_args()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props jipmoors.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30988" title="#30988: defect (bug): Setting's default value doesn't apply on preview window (closed: fixed)"&gt;#30988&lt;/a&gt;, &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/43218" title="#43218: defect (bug): PHPUnit 7.x support (accepted)"&gt;#43218&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [42799]: Tests: Correct assertion in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 16:37:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42799</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42799/1520527079814585</guid>
      <description>&lt;p&gt;
Tests: Correct assertion in &lt;code&gt;Tests_WP_Customize_Setting::test_constructor_with_args()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props jipmoors.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30988" title="#30988: defect (bug): Setting's default value doesn't apply on preview window (closed: fixed)"&gt;#30988&lt;/a&gt;, &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/43218" title="#43218: defect (bug): PHPUnit 7.x support (accepted)"&gt;#43218&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43218 (PHPUnit 7.x support) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 16:30:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43218#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43218#comment:11/1520526641190224</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43500 (Improve JS Documentation: gallery-add.js) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 16:24:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43500#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43500#comment:2/1520526256635076</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42798" title="Docs: Improve JSDoc for ..."&gt;42798&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Improve JSDoc for &lt;code&gt;wp-includes/js/media/controllers/gallery-add.js&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props boblinthorst, bramheijmink, manuelaugustin, ireneyoast, igorsch, nataliashitova.&lt;br /&gt;
Fixes &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/43500" title="#43500: defect (bug): Improve JS Documentation: gallery-add.js (reopened)"&gt;#43500&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42798]: Docs: Improve JSDoc for ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 16:24:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42798</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42798/1520526256150003</guid>
      <description>&lt;p&gt;
Docs: Improve JSDoc for &lt;code&gt;wp-includes/js/media/controllers/gallery-add.js&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props boblinthorst, bramheijmink, manuelaugustin, ireneyoast, igorsch, nataliashitova.
Fixes &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/43500" title="#43500: defect (bug): Improve JS Documentation: gallery-add.js (reopened)"&gt;#43500&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43499 (Document src/wp-admin/js/tags-box.js) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 16:09:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43499#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43499#comment:2/1520525368897770</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @carolinegeven, thanks for the patch!
&lt;/p&gt;
&lt;p&gt;
It appears to be created from the stable branch and contains 3.7 MB of unrelated changes :) Could you please refresh it from WordPress trunk?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43500 (Improve JS Documentation: gallery-add.js) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 16:05:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43500#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43500#comment:1/1520525119651097</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43499 (Document src/wp-admin/js/tags-box.js) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 16:05:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43499#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43499#comment:1/1520525114013357</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43218 (PHPUnit 7.x support) updated</title>
      
        <dc:creator>jipmoors</dc:creator>

      <pubDate>Thu, 08 Mar 2018 16:02:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43218#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43218#comment:10/1520524958067805</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In the patch I have reduce complexity and dependencies wherever possible.
&lt;/p&gt;
&lt;p&gt;
Elements that had to be touched:
The new file "abstract-testcase.php " contains the contents of "testcase.php" without the method that is being overridden en gave an argument declaration error.
&lt;/p&gt;
&lt;p&gt;
Removed the dependency in the &lt;code&gt;PHPUnit_Util_Test&lt;/code&gt; class, as it only needs to use the &lt;code&gt;PHPUnit\Util\Test::parseTestMethodAnnotations&lt;/code&gt; which is a public static method, thus callable from everywhere.
&lt;/p&gt;
&lt;p&gt;
Added a speed-trap loader, which determines what speed-trap class needs to be loaded for the current PHPUnit version.
&lt;/p&gt;
&lt;p&gt;
Fixed a test.
Fixed the type of variable that is being used to show what bug is being reported, this was defaulted to 'null' instead of an empty string.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43498 (PHP Fatal error:  Allowed memory size of 1073741824 bytes exhausted) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 15:59:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43498#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43498#comment:2/1520524788783597</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @arena, thanks for the report!
&lt;/p&gt;
&lt;p&gt;
Unfortunately, there's not much info to go from, except for a huge value for attempted allocation (1441151880758559780 bytes is 1.44 &lt;a class="ext-link" href="https://en.wikipedia.org/wiki/Exabyte"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;exabytes&lt;/a&gt;).
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Are you using WordPress 4.9.4? &lt;code&gt;wp-includes/functions.php on line 5472&lt;/code&gt; is where &lt;code&gt;wp_validate_boolean()&lt;/code&gt; is defined.
&lt;/li&gt;&lt;li&gt;Are there any particular steps to reproducing the issue?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Provide_PHPUnit_7_compatibility.patch attached to Ticket #43218</title>
      
        <dc:creator>jipmoors</dc:creator>

      <pubDate>Thu, 08 Mar 2018 15:58:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43218/Provide_PHPUnit_7_compatibility.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43218/Provide_PHPUnit_7_compatibility.patch/1520524739011099</guid>
      <description>&lt;p&gt;
Implementing PHPUnit 7 compatibility
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>gallery-add-documentation.diff attached to Ticket #43500</title>
      
        <dc:creator>boblinthorst</dc:creator>

      <pubDate>Thu, 08 Mar 2018 15:04:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43500/gallery-add-documentation.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43500/gallery-add-documentation.diff/1520521441021981</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43500 (Improve JS Documentation: gallery-add.js) created</title>
      
        <dc:creator>boblinthorst</dc:creator>

      <pubDate>Thu, 08 Mar 2018 15:03:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43500</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43500/1520521419530221</guid>
      <description>&lt;p&gt;
In our ongoing effort to improve JavaScript documentation, this patch adds descriptions and JSDoc formatting to the following file:
&lt;/p&gt;
&lt;p&gt;
gallery-add.js
&lt;/p&gt;
&lt;p&gt;
Please also give props to:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://profiles.wordpress.org/bramheijmink"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;bramheijmink&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://profiles.wordpress.org/manuelaugustin"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;manuelaugustin&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://profiles.wordpress.org/maartenleenders"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;ireneyoast&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://profiles.wordpress.org/igorsch"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;igorsch&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://profiles.wordpress.org/nataliashitova"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;nataliashitova&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>update.43443.diff attached to Ticket #43443</title>
      
        <dc:creator>mikejolley</dc:creator>

      <pubDate>Thu, 08 Mar 2018 14:50:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43443/update.43443.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43443/update.43443.diff/1520520640171933</guid>
      <description>&lt;p&gt;
Update for 43443
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>mikejolley</dc:creator>

      <pubDate>Thu, 08 Mar 2018 14:50:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:10/1520520601649423</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
All the WP_Error messages should end with a full stop.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@ocean90 See check_password_reset_key. If it needs adding it should be added to all strings. I don't want to introduce another localisation string just to add a ., and want to avoid touching other code for the moment :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Why are none of the functions prefixed with wp_?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Can add - none of the other functions in that file were so I assumed there was no standard.
&lt;/p&gt;
&lt;p&gt;
Addressed the other items of feedback, and renamed some functions with what I think is more logical naming.
&lt;/p&gt;
&lt;p&gt;
@azaozz
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Consider how this can be used through the REST API and add an endpoint.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think this would be separate. Consider these to be helper functions than an endpoint could utlize to perform a user action.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Perhaps add garbage collection function to delete expired requests.
Log confirmed requests and perhaps show them on the dashboard? Typically an admin will have to perform the requested action. When a site has more than one admin, would be good if all can see pending requests.
Prevent "flood" of requests. If a request is made and it hasn't expired, perhaps limit how many new requests can be made for the same email. Something like 10 should be plenty to cover legitimate user cases.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
These points would be better addressed by a custom table as I suggested. It would be difficult to scale garbage collection with the current meta/options because it would need to load all and compare the values inside the serialized array.
&lt;/p&gt;
&lt;p&gt;
Which leads on to @allendav's point:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I like the idea of a privacy actions log, but since that may lead us to having to have a separate db table, I recommend we break that out into a separate issue and implement this issue as a priority without that sub-feature.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree separate issue but this is the same idea. The generic user action confirmations/requests table I'd like to introduce would not only store the generated key, date of request, action name, UID, it would also store dates of confirmation which serves as a log and could be exposed via a UI. e.g. list table showing all rows for action "delete_account".
&lt;/p&gt;
&lt;p&gt;
Should that be moved out of this issue?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Maybe for V1 we just leave request tracking to the administrator(s) and their email inbox :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I also agree with this. If we just agreed users would contact site administrator to request details or anonomize, this system is probably not needed. If we want to support form's, the confirmation step is still required to verify requests are genuine.
&lt;/p&gt;
&lt;p&gt;
Sidenote; I am in favour of emailing requests to admin for account deletion/details instead of showing new list tables in core. The UI side could be let for plugins. For our use, an email with the details of the request and some shortcuts to the new export/anonymize tools would be sufficient.
&lt;/p&gt;
&lt;p&gt;
Flow without confirmation:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;User contacts admin via email.
&lt;/li&gt;&lt;li&gt;Admin generates export via new tools.
&lt;/li&gt;&lt;li&gt;Admin sends export to user.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Flow with confirmation:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;User requests export via form or link on site.
&lt;/li&gt;&lt;li&gt;System emails user.
&lt;/li&gt;&lt;li&gt;User clicks confirm link.
&lt;/li&gt;&lt;li&gt;Admin gets email with request and tool links.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Can we discuss this further? If thats an option we should prioritize the new tools over the processes, including this issue.
&lt;/p&gt;
&lt;p&gt;
---
&lt;/p&gt;
&lt;p&gt;
Anyhow, new code is here in my fork here &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/compare/master...mikejolley:update/43443?expand=1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/compare/master...mikejolley:update/43443?expand=1&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Functions:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;wp_send_account_verification_key
&lt;/li&gt;&lt;li&gt;wp_get_account_verification_key
&lt;/li&gt;&lt;li&gt;wp_check_account_verification_key
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
wp-login action:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;verifyaccount
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Hooks:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;account_verification_email_content
&lt;/li&gt;&lt;li&gt;account_verification_expiration
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
@azaozz will send a diff too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43479 (Theme detail text cutoff in RTL) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 08 Mar 2018 14:16:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43479#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43479#comment:5/1520518593117241</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@birgire  - Thanks for the additional debugging, language details and for testing on another laptop to confirm this is an issue. This should be enough information for work on a patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>document-tags-box-js.patch attached to Ticket #43499</title>
      
        <dc:creator>carolinegeven</dc:creator>

      <pubDate>Thu, 08 Mar 2018 14:15:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43499/document-tags-box-js.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43499/document-tags-box-js.patch/1520518547048413</guid>
      <description>&lt;p&gt;
Document tags-box.js
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43499 (Document src/wp-admin/js/tags-box.js) created</title>
      
        <dc:creator>carolinegeven</dc:creator>

      <pubDate>Thu, 08 Mar 2018 14:15:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43499</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43499/1520518512950227</guid>
      <description>&lt;p&gt;
Adds documentation to src/wp-admin/js/tags-box.js
&lt;/p&gt;
&lt;p&gt;
To see the files changed: &lt;a class="ext-link" href="https://github.com/Yoast/wordpress-develop-mirror/pull/40"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/Yoast/wordpress-develop-mirror/pull/40&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Please give props to: @atimmer, @carolinegeven, @andizer, @ireneyoast, @herregroen, @jjcomack
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42008 (Show warning that usernames can't be changed) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Thu, 08 Mar 2018 14:11:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42008#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42008#comment:8/1520518265850691</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the suggestion @SergeyBiryukov.
&lt;/p&gt;
&lt;p&gt;
I've refreshed the patch to include the wording you mentioned in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/42008/42008.3.diff" title="Attachment '42008.3.diff' in Ticket #42008"&gt;42008.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/42008/42008.3.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43484 (WordPress Notification Center proposal) updated</title>
      
        <dc:creator>hedgefield</dc:creator>

      <pubDate>Thu, 08 Mar 2018 14:10:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43484#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43484#comment:8/1520518241036137</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43484 (WordPress Notification Center proposal) updated</title>
      
        <dc:creator>hedgefield</dc:creator>

      <pubDate>Thu, 08 Mar 2018 14:10:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43484#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43484#comment:7/1520518200729280</guid>
      <description>&lt;p&gt;
Yes, thanks for clarifying @danieltj. I didn't read enough into what John had written down to realize his approach was based on email. For this ticket I was indeed shooting for a notification center in the admin with what we might call 'push' notifications. If there is an option to also send an email, no problem, there are sites that do that too (Facebook and Twitter among them), but I see the most gain in focusing on in-admin 'push' notifications first.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>42008.3.diff attached to Ticket #42008</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Thu, 08 Mar 2018 14:09:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42008/42008.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42008/42008.3.diff/1520518174203371</guid>
      <description>&lt;p&gt;
Patch refresh
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43495 (Use Semantic Versioning for releases) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Thu, 08 Mar 2018 14:02:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43495#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43495#comment:3/1520517735507393</guid>
      <description>&lt;p&gt;
I am definitely a fan of semantic versioning, but I think it is important to realize that we can't just decide to change how we version core without some major implications. The update code currently treats 4.5.0 as a "major" release, and 4.5.1 as a "minor" release (core's terminology). Both of these effectively map to semver's "minor" release. There is no concept of a "breaking" release or a "patch" release, as semver defines them. The code in core (and probably any plugins/themes/etc.) that relates to core updates will have to be changed. But so will users' perception of what to expect from updates. In short, this would be a breaking change, as @Luciano Croce pointed out, so there is no way that there could be a 4.10.0 following semver. It would have to be a 5.0.0 that made the switch.
&lt;/p&gt;
&lt;p&gt;
In addition, because core attempts to maintain almost-infinite backward compatibility, if we switched to semver WordPress would in theory always be on 5.x, because there would never be a breaking release to usher in 6.x. Of course, the reality is that core just ends up making little breaking changes all of the time, once it is safe to do so without much chance of actually breaking any code out in the wild.
&lt;/p&gt;
&lt;p&gt;
In the end, what we would really be contemplating here would be a complete change of philosophy for WP in regard to versioning, backward compatibility, patches, minor updates, etc. Although part of me would prefer that core embraced semver, core has a somewhat unique situation in regard to its technical debt, scope, and diverse versioning audience, and there is wisdom in some of the philosophies that it has embraced here, which are not really compatible with semver.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;TL;DR:&lt;/strong&gt; semver is not just a way of specifying version numbers, it implies an entire versioning philosophy, and it runs counter to the versioning philosophy embraced by WordPress core. There is a lot that would have to be considered before a change like this could be made.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43484 (WordPress Notification Center proposal) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Thu, 08 Mar 2018 14:00:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43484#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43484#comment:6/1520517646654147</guid>
      <description>&lt;p&gt;
I think some wires are being crossed here as I think from what @hedgefield is actually proposing is what we'd consider 'real notifications' whereas what @johnbillion has proposed in the Core post is not so much a notifications API, but a email API instead.
&lt;/p&gt;
&lt;p&gt;
If you were to ask someone about notifications in this modern age, people will without a shadow of a doubt expect notifications like on iPhone/Android or Facebook/Twitter where it's a dismissible message in some kind of notification area. Email is separate and we already have &lt;code&gt;wp_mail&lt;/code&gt; doing a lot for us already.
&lt;/p&gt;
&lt;p&gt;
We need to be clear on the expectations here I think because the screenshots added to this ticket already indicate a modern, social media approach whereas I think the original expectation was for notifications of things via email. I don't see why we can't have both working harmoniously but it's something we need to decide on.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43417 (Infinite loop in wp_mkdir_p with open_basedir restrictions) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Thu, 08 Mar 2018 13:32:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43417#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43417#comment:5/1520515964339940</guid>
      <description>&lt;p&gt;
Didn't think I'd ever encounter this, but I just saw this happen on a migrated client site via a call to &lt;code&gt;wp_upload_dir&lt;/code&gt; from Divi theme, where the &lt;code&gt;et_images_temp_folder&lt;/code&gt; option was not replaced correctly.
&lt;/p&gt;
&lt;p&gt;
An incorrect/badly formed &lt;code&gt;upload_path&lt;/code&gt; would also get into an infinite loop. So this is not a theoretical scenario, this actually happens :(
&lt;/p&gt;
&lt;p&gt;
Patch got rid of infinite loop in &lt;code&gt;wp_mkdir_p&lt;/code&gt; call.
&lt;/p&gt;
&lt;p&gt;
Any ideas on how to automate test for this? Or can this be merged without unit tests due to it being so dangerous to test?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40934 (Allow PHP version requirements for plugins &amp; themes) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 13:23:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40934#comment:74</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40934#comment:74/1520515402881476</guid>
      <description>&lt;i&gt;Description&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Now that &lt;a class="ext-link" href="https://wordpress.org/support/upgrade-php/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/upgrade-php/&lt;/a&gt; is up, going to take a stab at implementing the mockups attached above.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43497 (Incorrect Code Comment) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 13:05:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43497#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43497#comment:5/1520514335695324</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42797" title="Docs: Remove copy/pasted default value description for `$type` in ..."&gt;42797&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Remove copy/pasted default value description for &lt;code&gt;$type&lt;/code&gt; in &lt;code&gt;WP_Customize_Manager::add_setting()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props DannyCooper.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43497" title="#43497: defect (bug): Incorrect Code Comment (closed: fixed)"&gt;#43497&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42797]: Docs: Remove copy/pasted default value description for `$type` in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 13:05:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42797</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42797/1520514335215131</guid>
      <description>&lt;p&gt;
Docs: Remove copy/pasted default value description for &lt;code&gt;$type&lt;/code&gt; in &lt;code&gt;WP_Customize_Manager::add_setting()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props DannyCooper.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43497" title="#43497: defect (bug): Incorrect Code Comment (closed: fixed)"&gt;#43497&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43498 (PHP Fatal error:  Allowed memory size of 1073741824 bytes exhausted) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Thu, 08 Mar 2018 12:44:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43498#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43498#comment:1/1520513094942974</guid>
      <description>&lt;p&gt;
try updating PHP, I had similar issues for a while locally
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43497 (Incorrect Code Comment) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 12:44:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43497#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43497#comment:4/1520513089703874</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #38197,​41842 batch updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Thu, 08 Mar 2018 12:26:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=38197%2C41842</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=38197%2C41842/1520511978311477</guid>
      <description>duplicate: &lt;p&gt;
Dupe of &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/38197" title="#38197: enhancement: Update Pingback function To Add Return (assigned)"&gt;#38197&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #38197 (Update Pingback function To Add Return) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Thu, 08 Mar 2018 12:24:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38197#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38197#comment:14/1520511881830515</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39960 (Separate Supported Status for Trackbacks and Pingbacks) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Thu, 08 Mar 2018 12:23:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39960#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39960#comment:6/1520511786384182</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>formatting.JPG attached to Ticket #43498</title>
      
        <dc:creator>arena</dc:creator>

      <pubDate>Thu, 08 Mar 2018 11:51:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43498/formatting.JPG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43498/formatting.JPG/1520509918322367</guid>
      <description>&lt;p&gt;
opening formatting.php
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>functions.JPG attached to Ticket #43498</title>
      
        <dc:creator>arena</dc:creator>

      <pubDate>Thu, 08 Mar 2018 11:51:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43498/functions.JPG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43498/functions.JPG/1520509895075248</guid>
      <description>&lt;p&gt;
opening functions.php
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>config.JPG attached to Ticket #43498</title>
      
        <dc:creator>arena</dc:creator>

      <pubDate>Thu, 08 Mar 2018 11:51:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43498/config.JPG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43498/config.JPG/1520509867455733</guid>
      <description>&lt;p&gt;
windows config
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43498 (PHP Fatal error:  Allowed memory size of 1073741824 bytes exhausted) created</title>
      
        <dc:creator>arena</dc:creator>

      <pubDate>Thu, 08 Mar 2018 11:50:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43498</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43498/1520509827480873</guid>
      <description>&lt;p&gt;
I am posting here a ticket because i do not know if this is a bug .
&lt;/p&gt;
&lt;p&gt;
Since a few days, i have regularly this error :
&lt;/p&gt;
&lt;p&gt;
[:error] [pid 3408:tid 1020] [client 127.0.0.1:52320] PHP Fatal error:  Allowed memory size of 1073741824 bytes exhausted (tried to allocate 1441151880758559780 bytes) in ...wordpress&lt;br /&gt;wp-includes&lt;br /&gt;functions.php on line 5472, referer: &lt;a class="ext-link" href="http://127.0.0.1/wordpress/wp-admin/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://127.0.0.1/wordpress/wp-admin/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
always the same line, on the same file.
&lt;/p&gt;
&lt;p&gt;
i need to stop/start apache to continue to use my local/dev site.
&lt;/p&gt;
&lt;p&gt;
When i try to open this file with NetBeans i have this error :
&lt;/p&gt;
&lt;p&gt;
"(this) file cannot be safely opened with encoding windows-1252..."
&lt;/p&gt;
&lt;p&gt;
i tried to open other big files from WordPress, it also occurs on formatting.php, but not on all php files :?
&lt;/p&gt;
&lt;p&gt;
hereattached screenshots of my config and the error messages
&lt;/p&gt;
&lt;p&gt;
regards
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43497 (Incorrect Code Comment) updated</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Thu, 08 Mar 2018 11:07:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43497#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43497#comment:3/1520507232245380</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43479 (Theme detail text cutoff in RTL) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 08 Mar 2018 10:53:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43479#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43479#comment:4/1520506406100800</guid>
      <description>&lt;p&gt;
The issue showed up when I tested on another labtop (Win10, Chrome 65.0) with another install at another hosting.
&lt;/p&gt;
&lt;p&gt;
Shows up around viewport width 1350px.
&lt;/p&gt;
&lt;p&gt;
This seems to be affected by &lt;code&gt;overflow: auto;&lt;/code&gt; in:
&lt;/p&gt;
&lt;pre class="wiki"&gt;.theme-overlay .theme-about {
    position: absolute;
    top: 49px;
    bottom: 57px;
    right: 0;
    left: 0;
    overflow: auto;
    padding: 2% 4%;
}
&lt;/pre&gt;&lt;p&gt;
and e.g. the non-standard &lt;code&gt;-webkit-paged-y&lt;/code&gt; seems to change it for the better.
&lt;/p&gt;
&lt;p&gt;
But let's see if others can verify this issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43497 (Incorrect Code Comment) updated</title>
      
        <dc:creator>DannyCooper</dc:creator>

      <pubDate>Thu, 08 Mar 2018 10:38:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43497#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43497#comment:2/1520505502605285</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43497 (Incorrect Code Comment) updated</title>
      
        <dc:creator>DannyCooper</dc:creator>

      <pubDate>Thu, 08 Mar 2018 10:36:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43497#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43497#comment:1/1520505409029572</guid>
      <description>&lt;p&gt;
Correction: the file is wp-includes/class-wp-customize-manager.php:3626
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>patch.diff attached to Ticket #43497</title>
      
        <dc:creator>DannyCooper</dc:creator>

      <pubDate>Thu, 08 Mar 2018 10:35:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43497/patch.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43497/patch.diff/1520505358371126</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43497 (Incorrect Code Comment) created</title>
      
        <dc:creator>DannyCooper</dc:creator>

      <pubDate>Thu, 08 Mar 2018 10:35:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43497</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43497/1520505340825975</guid>
      <description>&lt;p&gt;
In class-wp-customize.php:3626 the comment makes no sense in the context of the property.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #40934 (Allow PHP version requirements for plugins &amp; themes) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Mar 2018 10:30:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40934#comment:73</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40934#comment:73/1520505032047619</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-php by mte90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-php/p1520505030000090"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40934 (Allow PHP version requirements for plugins &amp; themes) updated</title>
      
        <dc:creator>Mte90</dc:creator>

      <pubDate>Thu, 08 Mar 2018 10:29:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40934#comment:72</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40934#comment:72/1520504988520265</guid>
      <description>&lt;p&gt;
Same issue, I was thinking to use a filter and block the update of next version of my plugin of the PHP version is lower then what I specify.
So I will have like a LTS version for this users with a warning to upgrade PHP to get the updates.
I hope that for 4.9.5 this support will be integrated together with ServeHappy to inform users about the upgrade of PHP.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Thu, 08 Mar 2018 10:21:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:13/1520504519081072</guid>
      <description>&lt;p&gt;
@danieltj I can't for the sake of my sanity ( :D ) go through what anyone thinks and understands as personal data.
&lt;/p&gt;
&lt;p&gt;
I can say this: You are focusing on GDPR ( maybe we should go further than that and we will at some point ) because everything at the moment goes around it. There's also ePD and an extra ton of different stuff to consider that nobody has for years now as they are completely legal (laws, papers etc) and nobody had time to check or the idea that they even existed. So not everything is 'just' about GDPR.
&lt;/p&gt;
&lt;p&gt;
GDPR came as a slap because there where other laws and regulations in place for years now that everybody ignored. So somebody decided 'enough' everybody has to get in-line, for whatever reason that might be either we like it or not.
&lt;/p&gt;
&lt;p&gt;
Point: In some countries it's a fact, everything is personal data and goverments per country will be able to adjust GDPR to an extent that they see fit for their own countrys/peoples interest, we have no idea yet what each country will bring to the table of course until that's done.
&lt;/p&gt;
&lt;p&gt;
So basically the talk you heard has nothing to do with the talks that we hear or the talks in another country so on so forth if you get the idea :D, as they speak with different standards even if the major label is GDPR. We have to include 'everybody' unfortunately not what individuals per country / law system say. If 50% says green and 50% says red, in my opinion we have to bring Green + Red as options to help everyone if possible.
&lt;/p&gt;
&lt;p&gt;
--
&lt;/p&gt;
&lt;p&gt;
I won't force anybody into this mindset, I'm not even forcing myself to be honest :) and that's why all the questions. At the end of the day I could just upload a patch for proposal to save myself from keyboard overload and if it gets turned down then so be it, but I don't like that approach :D .
&lt;/p&gt;
&lt;p&gt;
As for the &lt;code&gt;wp-config.php&lt;/code&gt; you mentioned, I stated on my previous comment that the idea is to give everyday users a way out of techy things I don't know why you're pointing to that direction again.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43496.2.patch attached to Ticket #43496</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Thu, 08 Mar 2018 10:14:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43496/43496.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43496/43496.2.patch/1520504077568093</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22249 (Add ability to set or remove attributes on enqueued scripts and styles.) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Thu, 08 Mar 2018 10:05:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22249#comment:54</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22249#comment:54/1520503552073947</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22249#comment:53" title="Comment 53"&gt;mor10&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If &lt;code&gt;async&lt;/code&gt; or &lt;code&gt;defer&lt;/code&gt; are used, they are added to the script tag as booleans without values:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
A reminder that even the W3 Recommendation for HTML 5.2, includes coverage of XHTML syntax (XML-serialized HTML), which, among other things required by XML proper, disallows boolean attributes.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://www.w3.org/TR/html52/introduction.html#html-vs-xhtml"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.w3.org/TR/html52/introduction.html#html-vs-xhtml&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
There may well be other issues that stop WP from being delivered as &lt;code&gt;application/xhtml+xml&lt;/code&gt;, but let's not introduce new code that moves core output further away from polyglot markup.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43495 (Use Semantic Versioning for releases) updated</title>
      
        <dc:creator>Luciano Croce</dc:creator>

      <pubDate>Thu, 08 Mar 2018 10:00:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43495#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43495#comment:2/1520503227090034</guid>
      <description>&lt;p&gt;
&lt;strong&gt;I consider this proposal very interesting'''
&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;I am in favor of this introduction, but perhaps we should start from 5.0.0 in order to maintain the backward compatibility with the system adopting up to now with version 4.9+ and earlier.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43496 (CS: Fix disabled for user-edit.php) updated</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Thu, 08 Mar 2018 09:52:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43496#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43496#comment:4/1520502774646713</guid>
      <description>&lt;p&gt;
So needs to resolve all occurrences also if that coding part is not needed then we have to removed that.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43496#comment:3" title="Comment 3"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Since the admin doesn't use XHTML I'm not sure why we have to add a value to boolean attributes. The rule should probably be changed to exclude boolean attributes.
&lt;/p&gt;
&lt;p&gt;
There are few other occurrences of &lt;code&gt;disabled&lt;/code&gt; and also &lt;code&gt;readonly&lt;/code&gt; without a value.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>casiepa</dc:creator>

      <pubDate>Thu, 08 Mar 2018 09:49:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:12/1520502551085354</guid>
      <description>&lt;p&gt;
Just for reference, this is what we have as current info on what is collected:
&lt;a class="ext-link" href="https://github.com/gdpr-compliance/info/blob/master/Synched-info.md#coreversion-check-all-stored-except-for-those-marked"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/gdpr-compliance/info/blob/master/Synched-info.md#coreversion-check-all-stored-except-for-those-marked&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
To be reviewed if still valid for the current version of WP.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43496 (CS: Fix disabled for user-edit.php) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 08 Mar 2018 09:47:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43496#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43496#comment:3/1520502463317724</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Since the admin doesn't use XHTML I'm not sure why we have to add a value to boolean attributes. The rule should probably be changed to exclude boolean attributes.
&lt;/p&gt;
&lt;p&gt;
There are few other occurrences of &lt;code&gt;disabled&lt;/code&gt; and also &lt;code&gt;readonly&lt;/code&gt; without a value.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41074 (Create new Dashicons (4.9)) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Mar 2018 09:41:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41074#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41074#comment:49/1520502075182442</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by boemedia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1520502073000179"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Thu, 08 Mar 2018 09:28:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:11/1520501330221217</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43492#comment:8" title="Comment 8"&gt;xkon&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@danieltj I can easily argue about 'personal data' in the way of: it's my server, my localhost/pc so yes PHP version is my personal data basically as it's on my personal computer, you have to inform me that you want it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Just because the information exists on your computer/server doesn't mean it's persona data though. &lt;strong&gt;Through the eyes of GDPR, personal data is only data that personally identifies you as a person&lt;/strong&gt;. So &lt;code&gt;xkon&lt;/code&gt; can of course be thought of as personal data as it's your username on WordPress.org. However, an unknown site running WordPress 4.9.4 and PHP 5.6 is not personal data, irrespective of opinion because you cannot use that data to personally identify someone with. Anyone in the world ( &lt;strong&gt;&lt;em&gt;25% of the web ;-)&lt;/em&gt;&lt;/strong&gt; ) could have that data as it's so broad and general, it doesn't really mean anything. That definition isn't from me, but from a trained professional that I listened to at a talk.
&lt;/p&gt;
&lt;p&gt;
However, I do agree that perhaps there should be something to alert users that data is sent, but not necessarily a switch to turn it on or off. There's two reasons for this;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;You can use the &lt;code&gt;core_version_check_query_args&lt;/code&gt; to add/remove data that is sent, however removing enough data here will cause any potential upgrade check to fail if it doesn't have enough data to verify an update is needed.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;You can also use the &lt;code&gt;AUTOMATIC_UPDATER_DISABLED&lt;/code&gt; constant to disable all automatic updates and &lt;code&gt;WP_AUTO_UPDATE_CORE&lt;/code&gt; to disable all site updates all together.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I agree that using a plugin for this may be a bit overkill for something so small, but on the other hand, you can put these functions in your themes functions file or inside &lt;code&gt;wp-config.php&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
The next steps here should be about telling users what is collected and why and ensuring people know that personal data is left out of the information that is sent to Dot Org. That seems like the best way forward from here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Thu, 08 Mar 2018 08:22:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:10/1520497367296317</guid>
      <description>&lt;p&gt;
@dd32 thank you for all that information.
&lt;/p&gt;
&lt;p&gt;
So I'll step back a bit and give this question towards everybody in the community as we have a concept about the data:
&lt;/p&gt;
&lt;p&gt;
I'm introducing you the to the non-tech savvy everyday user that has concerns about his privacy or telemetry etc and has no idea what &lt;code&gt;apply_filters()&lt;/code&gt; means when reading the Doc on &lt;code&gt;core_version_check_query_args&lt;/code&gt;, also he does not want to relly on 3rd party ( plugins etc ) installations [ we've all seen these kind of users/comments on forums ].
&lt;/p&gt;
&lt;p&gt;
That filter has to be something given within a UI along with the core as it is already part of it with a simple on/off switch so anyone can easily choose what he likes. Of course the user will be thoroughly informed of what those data are and what switching off means + affects as this might break the updates and everything else that might be included with it, that is a choice that the user has to make though for his website not us.
&lt;/p&gt;
&lt;p&gt;
Our responsibility is to provide the tool and allow the option freelly, the use of it is on their own hands.
&lt;/p&gt;
&lt;p&gt;
Can we add this to our list and do it? From one hand it's a thing that has to be done, from the other it's not 1 individuals decision to just flip a switch as we're a community and collective thinking is the way to go &lt;sup&gt;_&lt;/sup&gt; .
&lt;/p&gt;
&lt;p&gt;
--
&lt;/p&gt;
&lt;p&gt;
Note: Sorry if I sometimes seem too blunt or strict but I'm not a lawyer as well not even close, for the last months unfortunately for me ( :P ) I've been dealing with lawyers every day mostly in the company I'm in to get ready for the 25 of May and some stuff needed are above-impossible as we can't just flip a switch and just make everything perfect magically. I can't go through all the conversations of what's being said, but I'm quite familiar with what needs to be done.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43496 (CS: Fix disabled for user-edit.php) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Thu, 08 Mar 2018 06:58:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43496#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43496#comment:2/1520492314783006</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks @mukesh27, spot on 👍
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43496 (CS: Fix disabled for user-edit.php) updated</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Thu, 08 Mar 2018 06:44:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43496#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43496#comment:1/1520491486726363</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43496.patch attached to Ticket #43496</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Thu, 08 Mar 2018 06:43:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43496/43496.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43496/43496.patch/1520491392557334</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43496 (CS: Fix disabled for user-edit.php) created</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Thu, 08 Mar 2018 06:42:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43496</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43496/1520491344749792</guid>
      <description>&lt;p&gt;
Many apologies if this is a duplicate. I have searched but did not find it yet posted.
&lt;/p&gt;
&lt;p&gt;
According to W3C specifications and as per HTML Coding Standards( &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/coding-standards/html/#quotes"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/handbook/best-practices/coding-standards/html/#quotes&lt;/a&gt; ) handbook all attributes must have a value, and must use double or single-quotes.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43481 (Add tabs and placeholders to privacy tools page in wp-admin) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Thu, 08 Mar 2018 05:40:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43481#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43481#comment:5/1520487627584695</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43481/43481.1.gif" title="Attachment '43481.1.gif' in Ticket #43481"&gt;43481.1.gif&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43481/43481.1.gif" title="Download"&gt;​&lt;/a&gt; is a preview of what we've came up with for now. We're not going to push it further for the time being as patch-on-patch will become a mess from one point on.
&lt;/p&gt;
&lt;p&gt;
@azaozz this will be re-worked and finalized a bit to be implemented when there's a commit of the Privacy Page ticket ( &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43435" title="#43435: enhancement: Add settings screen for creating a privacy policy (closed: fixed)"&gt;#43435&lt;/a&gt; ) as now we're actually duplicating some stuff to able to have parallel patches ready :) .
&lt;/p&gt;
&lt;p&gt;
Tell me if we're splitting the js/css please into extra 'new' files or using existing ones or even keeping everything self-contained in the page for the time being so I know what I'll have to do to make this ready for commit as well asap as I didn't understand much from the core chat yesterday about releases and what can be done :) . Ty!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43395 (Add Automated E2E Tests for Core Updates) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Thu, 08 Mar 2018 05:11:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43395#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43395#comment:9/1520485862582246</guid>
      <description>&lt;p&gt;
Great start @voldemortensen, Perl is &lt;em&gt;not&lt;/em&gt; my go to language but I get the gist of what is going on 👍
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43481.1.gif attached to Ticket #43481</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Thu, 08 Mar 2018 05:06:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43481/43481.1.gif</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43481/43481.1.gif/1520485585649097</guid>
      <description>&lt;p&gt;
preview of 43481.1
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43395 (Add Automated E2E Tests for Core Updates) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Thu, 08 Mar 2018 05:01:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43395#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43395#comment:8/1520485304643561</guid>
      <description>&lt;p&gt;
In todays #core dev-chat a discussion arose on the feasibility of including &lt;em&gt;new files&lt;/em&gt; in a &lt;em&gt;minor&lt;/em&gt; release, e.g. 4.9.5, historically this has been avoided due to the how &lt;em&gt;auto-updates&lt;/em&gt; work.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://wordpress.slack.com/archives/C02RQBWTW/p1520481343000204?thread_ts=1520470243.000286&amp;amp;cid=C02RQBWTW"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/C02RQBWTW/p1520481343000204&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
dd32 Wrote:
&lt;em&gt;I’d also just like to add, I’d love to see the core E2E update tests operating before any change to how we treat updates, purely because a lot of it is based on unknowns and the past 4 years of experiences.&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://wordpress.slack.com/archives/C02RQBWTW/p1520470243000286"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/C02RQBWTW/p1520470243000286&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
dd32 Wrote: re: 4.9.5 including new files:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I’m not going to prevent that happening, but I’ll repeat my previous stance that automatic updates wasn’t designed with that in mind, and was specifically built at a time when minor releases would only ever be bugfix releases with no new files.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;There were technical reasons why we only did minor releases and not major ones too - adding new files is effectively a major release when you’re looking at it from an upgrade point of view.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;The largest failing case for autoupdates at present is &lt;code&gt;files_not_writable&lt;/code&gt; where WordPress can’t modify existing files, let alone create new files (and this is after it’s already aborted because it knew it couldn’t write to files).
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Adding new files has a chance that a %age of users may no longer receive security auto updates afterwards when the update fails.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Sites may also fatal error if new files are relied upon from another file and the autoupdate couldn’t create the files - we’ve never really tested the rollback-on-fail code as it’s only been triggered a handful of times.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;There’s also some environments where if an autoupdate adds a file, the following user-initiated updates using FTP may fail as it’ll be unable to update the file - that’s one of the reasons we specified no-new-files.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;If I had to guess, the last two use-cases would be in the region of 0.5%~5% of users each.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;It’s also worth reminding that in the event the autoupdate to 4.9.5 fails, it’ll stay on 4.9.4 until the owner updates the site (much like we’ve got with 4.9.3 right now) we won’t be able to tell that site to update again in any manner, so even a 4.9.4.1 autoupdate would be ignored.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;p&gt;
Further backgrount can be read (including some detatiled statsistics) here: &lt;a class="ext-link" href="https://make.wordpress.org/core/2017/03/11/continuing-inline-docs-improvements-adjacent-to-4-8/#comment-32248"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2017/03/11/continuing-inline-docs-improvements-adjacent-to-4-8/#comment-32248&lt;/a&gt; , here's my quick extract of the key points:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Generally, update statistics have showed a clear correlation between failures and I/O operations. This is clearly seen in the difference between minor releases of different sizes, and even more pronounced when comparing those to a major release like 4.7 (with hundreds of files changed).
&lt;/p&gt;
&lt;p&gt;
Additionally, we run these updates using partial build packages. Every extra file adds a significant amount of KB to the package, which adds up pretty quickly. This not only stretches the wordpress.org load balancers (when suddenly millions of sites are updating within an hour), but also each individual site, which must download the ZIP, which takes time (partial builds made things, on many shared servers, go from minutes to seconds) and introduces lots of possibilities of download failures, and thus sites needing to retry later (and wait longer) to get patched.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43483 (login css imports styles it has as dependencies) updated</title>
      
        <dc:creator>alpipego</dc:creator>

      <pubDate>Thu, 08 Mar 2018 04:36:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43483#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43483#comment:5/1520483789341523</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43483.diff attached to Ticket #43483</title>
      
        <dc:creator>alpipego</dc:creator>

      <pubDate>Thu, 08 Mar 2018 04:35:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43483/43483.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43483/43483.diff/1520483758236171</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43483 (login css imports styles it has as dependencies) updated</title>
      
        <dc:creator>alpipego</dc:creator>

      <pubDate>Thu, 08 Mar 2018 04:34:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43483#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43483#comment:4/1520483684333031</guid>
      <description>&lt;p&gt;
Thanks for the additional information. I can't find a valid reason why it's in there though; I assume it's an oversight.
&lt;/p&gt;
&lt;p&gt;
Adding &lt;code&gt;forms.css&lt;/code&gt; and &lt;code&gt;i10n&lt;/code&gt; as a dependency actually was introduced in changeset &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36341" title="CSS: Stop using `wp-admin.min.css` and instead queue the individual ..."&gt;[36341]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37231 (Allow heading level to be specified when calling `do_meta_boxes()`) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 04:02:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37231#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37231#comment:12/1520481734129112</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 08 Mar 2018 03:59:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:9/1520481551562632</guid>
      <description>&lt;p&gt;
Strictly speaking, of the values reported to WordPress.org as part of the core update check (other than the WordPress version), these are required for a proper response:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;PHP Version - So as to not offer WordPress 9.0 which requires PHP 7.0 to WordPress 7.5 users who are only running PHP 5.6.
&lt;/li&gt;&lt;li&gt;MySQL Version - Same as above, Last time we increased PHP 4.3 -&amp;gt; PHP 5.2 min, we also bumped MySQL from 4.1 to 5.0
&lt;/li&gt;&lt;li&gt;local_package - Used to offer locale-based installs updates which include their locales customisations
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I note that &lt;a class="ext-link" href="https://wordpress.org/plugins/update-privacy"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/update-privacy&lt;/a&gt; removes these fields, and core continues to work, it gracefully downgrades and just returns all updates &amp;amp; ignores locale-updates.
&lt;/p&gt;
&lt;p&gt;
As a question was asked about the Active Installs numbers, the main thing relevant to the discussion there is that the Site URL from the WordPress user-agent is used (along with other static information) to determine a unique ID for stats purposes, and is used consistently over core/plugins/themes API's to generate the &lt;code&gt;active_installs&lt;/code&gt; numbers for plugins/themes as well as using the other details sent with core update requests to ultimately generate the stats visible on &lt;a class="ext-link" href="https://wordpress.org/about/stats/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/about/stats/&lt;/a&gt;
The aggregated statistics part is covered by &lt;a class="ext-link" href="https://wordpress.org/about/privacy/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the WordPress.org Privacy Policy&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43229 (Documentation for add_meta_boxes hook is incorrect) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 03:56:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43229#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43229#comment:8/1520481411360460</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42796" title="Docs: Improve documentation for `add_meta_boxes` and `do_meta_boxes` ..."&gt;42796&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Improve documentation for &lt;code&gt;add_meta_boxes&lt;/code&gt; and &lt;code&gt;do_meta_boxes&lt;/code&gt; actions.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props danieltj, johnbillion, SergeyBiryukov.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43229" title="#43229: defect (bug): Documentation for add_meta_boxes hook is incorrect (closed: fixed)"&gt;#43229&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42796]: Docs: Improve documentation for `add_meta_boxes` and `do_meta_boxes` ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 03:56:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42796</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42796/1520481410903153</guid>
      <description>&lt;p&gt;
Docs: Improve documentation for &lt;code&gt;add_meta_boxes&lt;/code&gt; and &lt;code&gt;do_meta_boxes&lt;/code&gt; actions.
&lt;/p&gt;
&lt;p&gt;
Props danieltj, johnbillion, SergeyBiryukov.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43229" title="#43229: defect (bug): Documentation for add_meta_boxes hook is incorrect (closed: fixed)"&gt;#43229&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43229 (Documentation for add_meta_boxes hook is incorrect) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 03:56:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43229#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43229#comment:7/1520481397887954</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42505 (Docblock improvements for 5.1) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 03:52:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42505#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42505#comment:25/1520481145145000</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42795" title="Docs: Document globals in `wp-admin/revision.php` as `@global` instead ..."&gt;42795&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Document globals in &lt;code&gt;wp-admin/revision.php&lt;/code&gt; as &lt;code&gt;@global&lt;/code&gt; instead of &lt;code&gt;@param&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/42505" title="#42505: task (blessed): Docblock improvements for 5.1 (new)"&gt;#42505&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42795]: Docs: Document globals in `wp-admin/revision.php` as `@global` instead ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 03:52:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42795</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42795/1520481144050588</guid>
      <description>&lt;p&gt;
Docs: Document globals in &lt;code&gt;wp-admin/revision.php&lt;/code&gt; as &lt;code&gt;@global&lt;/code&gt; instead of &lt;code&gt;@param&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/42505" title="#42505: task (blessed): Docblock improvements for 5.1 (new)"&gt;#42505&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43495 (Use Semantic Versioning for releases) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Mar 2018 01:58:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43495#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43495#comment:1/1520474307491057</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #buddypress by netweb. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/buddypress/p1520474305000164"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43495 (Use Semantic Versioning for releases) created</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Thu, 08 Mar 2018 01:57:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43495</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43495/1520474241361154</guid>
      <description>&lt;p&gt;
Via todays #core dev-chat: &lt;a class="ext-link" href="https://wordpress.slack.com/archives/C02RQBWTW/p1520470243000286"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/C02RQBWTW/p1520470243000286&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://profiles.wordpress.org/dd32"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Dion&lt;/a&gt; wrote:
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;4.10 instead of a 5.0 isn’t likely to work very well, other than the fact that it moves us from using decimal versioning to semantic versioning, I feel we might have some locations where we expect a branch is 3 digits, but that might not be the case. If it’s simply to avoid the &lt;code&gt;5&lt;/code&gt; number because we’ve suddenly decided the first digit is actually special, then maybe it’s time to set a plan in place to adopt semantic versioning over the next few releases.&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Background context: The question was posed, can a release numbered &lt;code&gt;4.10.0&lt;/code&gt; be released as a &lt;em&gt;major&lt;/em&gt; version instead of a &lt;em&gt;minor&lt;/em&gt; version
&lt;/p&gt;
&lt;p&gt;
What is Semantic Versioning?: &lt;em&gt;Semantic Versioning is a formal convention for specifying compatibility using a three-part version number: &lt;/em&gt;major&lt;em&gt; version; &lt;/em&gt;minor&lt;em&gt; version; and &lt;/em&gt;patch&lt;em&gt;.&lt;/em&gt;  &lt;a class="ext-link" href="https://semver.org/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://semver.org/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43484 (WordPress Notification Center proposal) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Thu, 08 Mar 2018 01:03:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43484#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43484#comment:5/1520470997414590</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Via &lt;a class="ext-link" href="https://make.wordpress.org/core/2016/10/03/feature-project-proposal-notifications-api/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2016/10/03/feature-project-proposal-notifications-api/&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://profiles.wordpress.org/johnbillion"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;John Blackbourn&lt;/a&gt; writes:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Feature Project Proposal: Notifications API&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Most of the situations where WordPress sends an outgoing email can be classified as a notification. X just happened on your website and you should be aware of it.
&lt;/p&gt;
&lt;p&gt;
Back when WordPress was a youngster, the only way to reliably notify a user was via email. In 2016 we have many more options, including push notifications to mobile platforms, desktop notifications to browsers, messages to chat apps, endless services via webhooks, SMS messages, or even notifications in the WordPress admin area. The list goes on. For many users, email is no longer the optimal delivery mechanism for ephemeral notifications.
&lt;/p&gt;
&lt;p&gt;
To that end, let’s think about replacing &lt;code&gt;wp_mail()&lt;/code&gt; with a modern API that allows developers to route notifications to services other than email, allow them to better modify notifications and the way in which they’re formatted, and allow them to do so without stepping on each others’ toes.
&lt;/p&gt;
&lt;p&gt;
The current lack of a notifications API (or even an email sending API) can be easily summed up:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;em&gt;Problem: Plugin A wants to provide HTML emails, and Plugin B wants to send emails via an email delivery service such as Mandrill. Plugin C wants to disregard emails and send Slack notifications. It’s very difficult for these to co-exist.&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;strong&gt;Notification Destinations&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
There are only two types of destination for a notification in WordPress. Most notifications are actually notifications to a user account that get delivered via email because it’s the only contact information available for every user account. The remaining notifications are explicitly notifications to an email address rather than a user account (or not yet attached to a user account), such as when a user signs up for a blog and needs to click a confirmation link before their user account gets created.
&lt;/p&gt;
&lt;p&gt;
With this in mind, you might be able to imagine a notification class in WordPress core that defaults to delivering notifications via email, but which can be extended by a plugin on a per-user and per-notification basis to deliver notifications via any of the means listed above. WordPress core would support delivery via email and provide the API that allows plugins to implement delivery via other means.
&lt;/p&gt;
&lt;p&gt;
With a well-designed API, multiple plugins can co-exist in order to deliver different notifications via different mechanisms, format email notifications as HTML, easily disable notifications, change the delivery mechanism for email notifications, or provide a UI for users to manage their notification preferences and destinations.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Planning a Notifications API&lt;/strong&gt;
I’d like to begin work on a feature project with the intent of designing and implementing such an API. I’d like to get input from authors of existing plugins that provide functionality such as delivering notifications via a service other than email, that override the default email delivery mechanism, or that implement extra notifications (such as e-commerce sale notifications), in order that the API can be backwards compatible and that we can get some plugin implementations built during the API’s development.
&lt;/p&gt;
&lt;p&gt;
I already have some technical ideas regarding how the API might look, but I’m conscious that such an API needs to be well-designed before anyone jumps into writing code. Maybe we can even try some test-driven development? Who knows.
&lt;/p&gt;
&lt;p&gt;
In addition, consultation and involvement with the team that are working on &lt;a class="ext-link" href="https://make.wordpress.org/core/tag/two-factor/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the two-factor authentication feature project&lt;/a&gt; is important as it implements several delivery mechanisms for 2FA codes that could potentially be made simpler with a notifications API.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Note: &lt;em&gt;There &lt;a class="ext-link" href="https://make.wordpress.org/core/2016/10/03/feature-project-proposal-notifications-api/#comment-31197"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;are comments&lt;/a&gt; from the above post discussing the proposal further, what's relevant and related should also be bought into the discussion here on this ticket&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Thu, 08 Mar 2018 00:00:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:9/1520467227859063</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43443#comment:5" title="Comment 5"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Log confirmed requests and perhaps show them on the dashboard
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Was thinking about this a bit more: instead of deleting the confirmation token from the DB perhaps we can set a "confirmed" status on it and keep it until the action is performed?
&lt;/p&gt;
&lt;p&gt;
Also, may be better to have a permanent log. Perhaps we can make a new private CPT (without editor, terms, revisions, etc. support) that will hold the log. Then can use postmeta to store the tokens on it. After the action is performed can add a row with the date and type of action but not the user email so it is anonymous.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I like the idea of a privacy actions log, but since that may lead us to having to have a separate db table, I recommend we break that out into a separate issue and implement this issue as a priority without that sub-feature.
&lt;/p&gt;
&lt;p&gt;
A privacy actions to-do-list/log could be useful for demonstrating compliance or even just for knowing who did what and when. I don't get the impression from Article 30 or Recital 82 that the GDPR requires this to be automated or electronically held however, so I recommend a lower priority for privacy actions logging, but IANAL.
&lt;/p&gt;
&lt;p&gt;
Maybe for V1 we just leave request tracking to the administrator(s) and their email inbox :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>