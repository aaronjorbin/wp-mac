<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #31340 (Use of the @subpackage tag in documentation) created</title>
      
        <dc:creator>henry.wright</dc:creator>

      <pubDate>Sun, 15 Feb 2015 23:52:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31340</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31340/1424044377199034</guid>
      <description>&lt;p&gt;
The documentation standards &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/inline-documentation-standards/php-documentation-standards/#6-file-headers"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;mention&lt;/a&gt; that the @subpackage tag should be used in all file header DocBlocks but the phpDocumentor docs consider the tag deprecated. See &lt;a class="ext-link" href="http://www.phpdoc.org/docs/latest/references/phpdoc/tags/subpackage.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;here&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Should I continue to use @subpackage when documenting plugins?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #9444 (Allow to read wp-config.php without loading WP) updated</title>
      
        <dc:creator>rpayne7264</dc:creator>

      <pubDate>Sun, 15 Feb 2015 23:22:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9444#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9444#comment:35/1424042531024657</guid>
      <description>&lt;p&gt;
I am only using JavaScript to open my pop-up form and pass data to it. All of the oAuth stuff uses PHP code.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31339 (Recursion error in json_encode() when accessing Customizer) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 15 Feb 2015 23:18:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31339#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31339#comment:3/1424042281566072</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31339 (Recursion error in json_encode() when accessing Customizer) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 15 Feb 2015 22:48:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31339#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31339#comment:2/1424040495645857</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I just noticed the error was regarding recursion and not that &lt;code&gt;json_encode()&lt;/code&gt; is not defined.
&lt;/p&gt;
&lt;p&gt;
It sounds like a plugin or theme may be misbehaving. Does the problem happen with another theme, or with plugins turned  off?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31339 (Recursion error in json_encode() when accessing Customizer) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 15 Feb 2015 22:45:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31339#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31339#comment:1/1424040349921758</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
What version of PHP is running on your host? The &lt;code&gt;json_encode()&lt;/code&gt; function was introduced in PHP 5.2, and WordPress requires PHP 5.2+.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31076 (Multisite signup functions don't support SSL) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 15 Feb 2015 22:44:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31076#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31076#comment:1/1424040264422100</guid>
      <description>&lt;p&gt;
We probably need to check a little further before assuming SSL in some cases. If a new subdomain or domain is being created, it's not necessarily the case that SSL will be available for activation.  For subdirectories, we should have no trouble assuming the same scheme as the network.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25365 (timeAgo attribute for revisions produces the wrong result due to ...) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sun, 15 Feb 2015 21:44:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25365#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25365#comment:20/1424036688703694</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/25365/25365.3.diff" title="Attachment '25365.3.diff' in Ticket #25365"&gt;25365.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/25365/25365.3.diff" title="Download"&gt;​&lt;/a&gt;: refresh against trunk.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>25365.3.diff attached to Ticket #25365</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sun, 15 Feb 2015 21:42:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/25365/25365.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/25365/25365.3.diff/1424036575632239</guid>
      <description>&lt;p&gt;
refresh against trunk
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29276 (Ability to edit and preview any revision, not just autosaves) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sun, 15 Feb 2015 21:40:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29276#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29276#comment:3/1424036412263650</guid>
      <description>&lt;p&gt;
coolman,
&lt;/p&gt;
&lt;p&gt;
Check the latest patch on &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/20299" title="#20299: defect (bug): Preview changes on a published post makes all post meta &amp;#34;live&amp;#34; (assigned)"&gt;#20299&lt;/a&gt; - it may help move towards a more complete solution here...  it allows previewing of the autosaved meta, allowing you to preview a post without publishing the post meta.
&lt;/p&gt;
&lt;p&gt;
Any help testing or your feedback appreciated!
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29276#comment:2" title="Comment 2"&gt;coolmann&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I figured that it was too good to be true. Calculating the nonce for each revision is not that complicated, though. All the postmeta stuff, however, is indeed a big deal. My main purpose was to see if WP was interested in moving forward with this feature. If this is the case, I can continue my research and see what can be done. Thank you!
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>ticket.docx attached to Ticket #31339</title>
      
        <dc:creator>thegaer</dc:creator>

      <pubDate>Sun, 15 Feb 2015 21:39:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31339/ticket.docx</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31339/ticket.docx/1424036393589655</guid>
      <description>&lt;p&gt;
Error File
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #31339 (Recursion error in json_encode() when accessing Customizer) created</title>
      
        <dc:creator>thegaer</dc:creator>

      <pubDate>Sun, 15 Feb 2015 21:39:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31339</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31339/1424036353797227</guid>
      <description>&lt;p&gt;
I have updated my site to latest wordpress version 4.1 .When i tried to customize my theme it is generating error.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Warning&amp;lt;/b&amp;gt;:  json_encode() [&amp;lt;a href='function.json-encode'&amp;gt;function.json-encode&amp;lt;/a&amp;gt;]: recursion detected in &amp;lt;b&amp;gt;/var/sites/t/thegaer.org.uk/public_html/wp-includes/functions.php&amp;lt;/b&amp;gt; on line &amp;lt;b&amp;gt;2663&amp;lt;/b&amp;gt;&amp;lt;br /&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&amp;lt;br /&amp;gt;
&amp;lt;b&amp;gt;Warning&amp;lt;/b&amp;gt;:  json_encode() [&amp;lt;a href='function.json-encode'&amp;gt;function.json-encode&amp;lt;/a&amp;gt;]: recursion detected in &amp;lt;b&amp;gt;/var/sites/t/thegaer.org.uk/public_html/wp-includes/functions.php&amp;lt;/b&amp;gt; on line &amp;lt;b&amp;gt;2663&amp;lt;/b&amp;gt;&amp;lt;br /&amp;gt;
&amp;lt;br /&amp;gt;
&amp;lt;b&amp;gt;Warning&amp;lt;/b&amp;gt;:  json_encode() [&amp;lt;a href='function.json-encode'&amp;gt;function.json-encode&amp;lt;/a&amp;gt;]: recursion detected in &amp;lt;b&amp;gt;/var/sites/t/thegaer.org.uk/public_html/wp-includes/functions.php&amp;lt;/b&amp;gt; on line &amp;lt;b&amp;gt;2663&amp;lt;/b&amp;gt;&amp;lt;br /&amp;gt;
&amp;lt;br /&amp;gt;
&amp;lt;b&amp;gt;Warning&amp;lt;/b&amp;gt;:  json_encode() [&amp;lt;a href='function.json-encode'&amp;gt;function.json-encode&amp;lt;/a&amp;gt;]: recursion detected in &amp;lt;b&amp;gt;/var/sites/t/thegaer.org.uk/public_html/wp-includes/functions.php&amp;lt;/b&amp;gt; on line &amp;lt;b&amp;gt;2663&amp;lt;/b&amp;gt;&amp;lt;br /&amp;gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23314 (Allow published posts to be revised without being updated immediately) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sun, 15 Feb 2015 21:36:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23314#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23314#comment:19/1424036184603576</guid>
      <description>&lt;p&gt;
Refresh against trunk in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23314/23314.4.diff" title="Attachment '23314.4.diff' in Ticket #23314"&gt;23314.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23314/23314.4.diff" title="Download"&gt;​&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23314.4.diff attached to Ticket #23314</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sun, 15 Feb 2015 21:34:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23314/23314.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23314/23314.4.diff/1424036069222044</guid>
      <description>&lt;p&gt;
refresh against trunk
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #31338 (Minor nav-menu hook docs fix) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sun, 15 Feb 2015 21:32:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31338#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31338#comment:3/1424035966750228</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29820 (Smooth installation and updating of plugins and themes) updated</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Sun, 15 Feb 2015 21:17:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29820#comment:70</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29820#comment:70/1424035062073848</guid>
      <description>&lt;p&gt;
I'd like to suggest we do a modal takeover for a credential request. Requesting credentials will need to take place in screens that have strikingly different layouts (List Table screens, Add Plugins screen, Add Themes screen, Update Core screen). A modal takeover is layout-independent, and doesn't go against the UX. Rough prototype in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/29820/Screen%20Shot%202015-02-15%20at%204.09.25%20PM.png" title="Attachment 'Screen Shot 2015-02-15 at 4.09.25 PM.png' in Ticket #29820"&gt;attachment:'Screen Shot 2015-02-15 at 4.09.25 PM.png'&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/29820/Screen%20Shot%202015-02-15%20at%204.09.25%20PM.png" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Screen Shot 2015-02-15 at 4.09.25 PM.png attached to Ticket #29820</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Sun, 15 Feb 2015 21:12:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29820/Screen%20Shot%202015-02-15%20at%204.09.25%20PM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29820/Screen%20Shot%202015-02-15%20at%204.09.25%20PM.png/1424034743574510</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #31183 (Users with "update_plugins" capability can not see update details) updated</title>
      
        <dc:creator>michel.weimerskirch</dc:creator>

      <pubDate>Sun, 15 Feb 2015 21:08:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31183#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31183#comment:15/1424034480982352</guid>
      <description>&lt;p&gt;
I tried again. I still get the access denied error:
Capabilities: &lt;a class="ext-link" href="http://picpaste.com/capabilities-AO0lxpOy.png"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://picpaste.com/capabilities-AO0lxpOy.png&lt;/a&gt;
Update page with changelog: &lt;a class="ext-link" href="http://picpaste.com/update-page-hV2boiJW.png"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://picpaste.com/update-page-hV2boiJW.png&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The problem seems to be that in menu.php, "plugins.php" requires the "activate_plugins" option: &lt;code&gt;$submenu['plugins.php'][5]  = array( __('Installed Plugins'), 'activate_plugins', 'plugins.php' );&lt;/code&gt; and plugin-install.php (which contains the update information) is a subpage of plugins.php:
&lt;code&gt;$submenu['plugins.php'][10] = array( _x('Add New', 'plugin'), 'update_plugins', 'plugin-install.php' );&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Because of that, plugin-install.php also requires the "activate_plugins" capability.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9444 (Allow to read wp-config.php without loading WP) updated</title>
      
        <dc:creator>JPry</dc:creator>

      <pubDate>Sun, 15 Feb 2015 21:00:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9444#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9444#comment:34/1424034026246204</guid>
      <description>&lt;p&gt;
Hey Robert,
&lt;/p&gt;
&lt;p&gt;
If you're using Javascript, then cookies &lt;strong&gt;are&lt;/strong&gt; in fact available on WP Engine's environment. It is only the PHP code that doesn't receive them when caching is in play.
&lt;/p&gt;
&lt;p&gt;
Your Javascript can capture data from a cookie, send it to the WordPress backend using &lt;code&gt;admin-ajax.php&lt;/code&gt;, and then interface with WordPress that way. Unless I'm misunderstanding what you're doing, that should be a lot simpler than what you're currently describing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9444 (Allow to read wp-config.php without loading WP) updated</title>
      
        <dc:creator>rpayne7264</dc:creator>

      <pubDate>Sun, 15 Feb 2015 20:09:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9444#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9444#comment:33/1424030969872184</guid>
      <description>&lt;p&gt;
That's what I am doing. My PHP pop-up loads WP, sends off a request, and then awaits the reply. Closing the pop-up in between the request and the reply, just to open it again with something like &lt;a class="ext-link" href="http://example.com/?my_oauth_plugin"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com/?my_oauth_plugin&lt;/a&gt;, doesn't make a lot of sense.
&lt;/p&gt;
&lt;p&gt;
But the issue still remains: how to store state before I make that first call in the LinkedIn oAuth process flow.
&lt;/p&gt;
&lt;p&gt;
Assume that:
-session variables are not available
-cookies are not available
-intra-site API or web service calls are not available
&lt;/p&gt;
&lt;p&gt;
I have run into all of the above situations.
That leaves only two choices, that I can think of:
1) loading core WP files in one way or another, within my pop-up
2) implement some sort of convoluted JavaScript scheme between the pop-up and the opener
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31281 (Register JavaScript/Underscore templates using the WP Dependency API) updated</title>
      
        <dc:creator>F J Kaiser</dc:creator>

      <pubDate>Sun, 15 Feb 2015 19:19:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31281#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31281#comment:8/1424027974291532</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/31281#comment:7" title="Comment 7"&gt;sanchothefat&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/31281#comment:6" title="Comment 6"&gt;F J Kaiser&lt;/a&gt;:
I agree with Ryan that if you're enqueueing templates it makes sense to allow passing in a script tag directly as well as a URL as I think there's a use case for generated templates.
&lt;/p&gt;
&lt;p&gt;
I did wonder about things like meta tags where you might want to have some open graph tags dependent on others being present etc... or for removing their output by other plugins but the current &lt;code&gt;remove_action()&lt;/code&gt; functionality is probably good enough. To get some progress on this my view is that it should be kept to the case of scripts where order of loading is more important.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I guess I now (partly) understand what the idea behind that is. And I agree that the idea of passing in strings as template is not that stupid. At least one can do that with other JS frameworks as well and part of the idea of that patch is to bring WP closer to how JS frameworks handle templates. This should allow non-WP/JS devs to more quickly jump onto WP.
&lt;/p&gt;
&lt;p&gt;
I will inspect that when I find some time. If someone can point me to some link that explains the open graph stuff, I'll happily read that and take it into consideration. Thanks in advance.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9444 (Allow to read wp-config.php without loading WP) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 15 Feb 2015 19:18:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9444#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9444#comment:32/1424027921706421</guid>
      <description>&lt;p&gt;
If you can control the URL LinkedIn sends reply to, and it currently points to a PHP file that includes &lt;code&gt;wp-load.php&lt;/code&gt; directly, you should be able to replace it with something like &lt;code&gt;http://example.com/?my_oauth_plugin&lt;/code&gt;, which would open the pop-up with access to WordPress environment.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31041 (Make wpautop documentation more verbose) updated</title>
      
        <dc:creator>johneckman</dc:creator>

      <pubDate>Sun, 15 Feb 2015 19:10:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31041#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31041#comment:3/1424027423850030</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>31041.patch attached to Ticket #31041</title>
      
        <dc:creator>johneckman</dc:creator>

      <pubDate>Sun, 15 Feb 2015 19:08:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31041/31041.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31041/31041.patch/1424027322381386</guid>
      <description>&lt;p&gt;
Refreshed patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #9444 (Allow to read wp-config.php without loading WP) updated</title>
      
        <dc:creator>rpayne7264</dc:creator>

      <pubDate>Sun, 15 Feb 2015 19:01:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9444#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9444#comment:31/1424026892845934</guid>
      <description>&lt;p&gt;
You are incorrect Sergey.  That method does not work well when I am sending off a request to LinkedIn and awaiting a reply from LinkedIn, because the LinkedIn process is out of my control.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31338 (Minor nav-menu hook docs fix) updated</title>
      
        <dc:creator>tyxla</dc:creator>

      <pubDate>Sun, 15 Feb 2015 18:50:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31338#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31338#comment:2/1424026253352948</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>nav-menu.php.patch attached to Ticket #31338</title>
      
        <dc:creator>tyxla</dc:creator>

      <pubDate>Sun, 15 Feb 2015 18:50:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31338/nav-menu.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31338/nav-menu.php.patch/1424026237626998</guid>
      <description>&lt;p&gt;
Fix a typo in the &lt;code&gt;@see&lt;/code&gt; block of the &lt;code&gt;wp_update_nav_menu_item&lt;/code&gt; hook documentation.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #31338 (Minor nav-menu hook docs fix) updated</title>
      
        <dc:creator>tyxla</dc:creator>

      <pubDate>Sun, 15 Feb 2015 18:50:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31338#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31338#comment:1/1424026213975146</guid>
      <description>&lt;p&gt;
Not sure if this is worth a patch, but attaching anyway.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31338 (Minor nav-menu hook docs fix) created</title>
      
        <dc:creator>tyxla</dc:creator>

      <pubDate>Sun, 15 Feb 2015 18:49:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31338</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31338/1424026185893862</guid>
      <description>&lt;p&gt;
In the documentation of the &lt;code&gt;wp_update_nav_menu_item&lt;/code&gt; hook (in &lt;code&gt;wp-includes/nav-menu.php&lt;/code&gt;), the &lt;code&gt;@see&lt;/code&gt; block is:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;* @see wp_update_nav_menu_items()&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
while it should be:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;* @see wp_update_nav_menu_item()&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
This typo seems to have been introduced in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27367" title="#27367: defect (bug): Hook Docs: wp-includes/nav-menu.php (closed: fixed)"&gt;#27367&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>30983.2.patch attached to Ticket #30983</title>
      
        <dc:creator>tyxla</dc:creator>

      <pubDate>Sun, 15 Feb 2015 18:44:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/30983/30983.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/30983/30983.2.patch/1424025885295012</guid>
      <description>&lt;p&gt;
Updating the last patch to contain a &lt;code&gt;@see wp_update_nav_menu_item()&lt;/code&gt; as a reference for the hook third parameter.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>30983.patch attached to Ticket #30983</title>
      
        <dc:creator>tyxla</dc:creator>

      <pubDate>Sun, 15 Feb 2015 18:40:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/30983/30983.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/30983/30983.patch/1424025639216378</guid>
      <description>&lt;p&gt;
Updating the patch to call the new hook only if the menu item creation was successful.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #30983 (Missing Hook in wp_update_nav_menu_item function) updated</title>
      
        <dc:creator>tyxla</dc:creator>

      <pubDate>Sun, 15 Feb 2015 18:39:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30983#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30983#comment:3/1424025571333873</guid>
      <description>&lt;p&gt;
Agree with @MikeHansenMe on this one - a new hook here would be the best choice for clarity.
&lt;/p&gt;
&lt;p&gt;
Also, I'm updating the patch, as the previous one will only call the hook if the new menu item creation has failed for some reason. Contrary to that behavior, the &lt;code&gt;wp_add_nav_menu_item&lt;/code&gt; hook should be called only if the menu item creation was successful.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14050 (shortcode_unautop() should also remove the &lt;br /&gt; added after shortcodes) updated</title>
      
        <dc:creator>lkraav</dc:creator>

      <pubDate>Sun, 15 Feb 2015 18:31:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14050#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14050#comment:35/1424025068651425</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14050#comment:34" title="Comment 34"&gt;squarestar&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Edit: I had orignally commented that szepe.viktor's mu-plugin regex worked for me without realising that it was Ikraav's work and had already been tested. Don't mind me.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah so it seems.
&lt;/p&gt;
&lt;p&gt;
I'm not sure where this ticket is going so far. Comments have been general in nature and I haven't seen anything on the specific patchwork I provided. No idea why any piece of it hasn't been going towards landing, despite solid tests provided. My guess is @aaroncampbell has found holes in or is trying to optimize on what I have already done. I'd be interested in knowing what improvements fit inbetween current trunk and my step by step incrementals. Are we rebuilding the whole thing from scratch (seems unlikely) or maybe @aaroncampbell is still working on wrapping his mind around the regex monster.. I know it took me a while to attack it, too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30646 (oEmbed preview loading does not trigger editor scrolling) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 15 Feb 2015 18:18:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30646#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30646#comment:6/1424024287916875</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/31466" title="TinyMCE wpView: fire `nodeChanged` when an embedded iframe is resized ..."&gt;31466&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
TinyMCE wpView: fire &lt;code&gt;nodeChanged&lt;/code&gt; when an embedded iframe is resized so we can adjust the editor height and other UI components. Props iseulde, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30646" title="#30646: defect (bug): oEmbed preview loading does not trigger editor scrolling (closed: fixed)"&gt;#30646&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [31466]: TinyMCE wpView: fire `nodeChanged` when an embedded iframe is resized ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 15 Feb 2015 18:18:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/31466</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/31466/1424024286438731</guid>
      <description>&lt;p&gt;
TinyMCE wpView: fire &lt;code&gt;nodeChanged&lt;/code&gt; when an embedded iframe is resized so we can adjust the editor height and other UI components. Props iseulde, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30646" title="#30646: defect (bug): oEmbed preview loading does not trigger editor scrolling (closed: fixed)"&gt;#30646&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #30646 (oEmbed preview loading does not trigger editor scrolling) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 15 Feb 2015 18:11:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30646#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30646#comment:5/1424023876662135</guid>
      <description>&lt;p&gt;
Right, nodeChanged is used for UI updates but also for selection/caret range updates (most notably in IE). My concern is that the iframe resize function is fired with mutationObserver that may trigger several times in a very short time while we are trying to use/update the same selection/caret range. This could result in race condition.
&lt;/p&gt;
&lt;p&gt;
On the other hand comparing the iframe height to the iframe's body height before resizing reduces the number of times we fire nodeChanged, so it shouldn't fire excessively. Good way to test this is by embedding a "twit", fires only two times here.
&lt;/p&gt;
&lt;p&gt;
Lets add it and see if there will be any problems in IE.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31331 ($post-&gt;post_date displays current time if status is pending or draft) updated</title>
      
        <dc:creator>tyxla</dc:creator>

      <pubDate>Sun, 15 Feb 2015 17:35:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31331#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31331#comment:1/1424021704549493</guid>
      <description>&lt;p&gt;
This behavior was introduced in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2164" title="#2164: defect (bug): Timestamp on drafts in preview window shows up as 7pm on 12/31/1969 (closed: fixed)"&gt;#2164&lt;/a&gt; - changeset &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/3458" title="Give draft posts a current timestamp.  Props David House and ..."&gt;[3458]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29792 (Grunt: Add a precommit task to check for CSS syntax errors) updated</title>
      
        <dc:creator>lkraav</dc:creator>

      <pubDate>Sun, 15 Feb 2015 17:31:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29792#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29792#comment:24/1424021465593021</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/postcss/postcss"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/postcss/postcss&lt;/a&gt; may also be of interest here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29792 (Grunt: Add a precommit task to check for CSS syntax errors) updated</title>
      
        <dc:creator>lkraav</dc:creator>

      <pubDate>Sun, 15 Feb 2015 17:11:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29792#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29792#comment:23/1424020308526333</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29792#comment:7" title="Comment 7"&gt;GaryJ&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
CSSComb does have a &lt;code&gt;-l&lt;/code&gt; or &lt;code&gt;--lint&lt;/code&gt; option, but it's not very helpful at the moment, not reporting lines and columns etc. CSSLint would be favourable over CSSComb just for error checking of specific non-standards issues.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, this is &lt;a class="ext-link" href="https://github.com/csscomb/csscomb.js/issues/245"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/csscomb/csscomb.js/issues/245&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I did extensive research on csslint vs csscomb yesterday for my own company. I found csscomb to be significantly further along for being able to define an exact detailed coding standard configuration and then having the tool not only lint to it, but automatically beautify your source and it actually coming out nearly 100% right. Yandex guys have built csscomb on &lt;a class="ext-link" href="https://github.com/tonyganch/gonzales-pe/blob/master/doc/AST-Description.md"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;gonzales-pe, an AST generator&lt;/a&gt; which looks like a building block sitting at the same level where &lt;a class="ext-link" href="https://github.com/CSSLint/parser-lib/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;parser-lib&lt;/a&gt; is sitting for csslint.
&lt;/p&gt;
&lt;p&gt;
Both are very good tools and might very likely coexist in the build chain, but both also have a number of outstanding bugs that could really use attention. If there was a crowdfund for getting work done on them, I'd contribute in an instant. csscomb is the current choice for my team setup here, but as I'm understanding both a lot better now, I will be contributing to both and re-evaluating periodically. Wasn't able to find anything else at the same maturity level.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23880 (Minimum PHP version in Plugins) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 15 Feb 2015 17:06:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23880#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23880#comment:41/1424019968744934</guid>
      <description>wontfix: &lt;p&gt;
Still not happening, and our 5.2 numbers didn't decline as I'd like. Plan now is to lean on hosts to update accounts to the latest version of WordPress and PHP 5.4+, and see where our numbers are later this year.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #29792 (Grunt: Add a precommit task to check for CSS syntax errors) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 15 Feb 2015 16:48:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29792#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29792#comment:22/1424018921802125</guid>
      <description>&lt;p&gt;
Quick update on &lt;a class="ext-link" href="https://github.com/CSSLint/parser-lib/pull/125"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/CSSLint/parser-lib/pull/125&lt;/a&gt;. They want some changes to it, but it requires re-doing how a bunch of the tests currently work (not just the ones I added), so I think it'll get merged. Waiting to hear back. If anyone wishes to play with the tests over there, though, feel free.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31336 (Customizer: separate navigation from options UI for better UX by ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 15 Feb 2015 16:12:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31336#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31336#comment:4/1424016728140526</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/31336#comment:2" title="Comment 2"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;After adding a new widget I get this: &lt;a class="ext-link" href="https://cloudup.com/iM66LRgWy54"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/iM66LRgWy54&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
As do I, which is the same issue as mentioned above where something goes horribly wrong when a widget control is expanded (since adding a widget triggers expanding it). I couldn't figure out why, but I'm guessing westonruter may have an idea.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Keyboard a11y: Between the back arrow and the help icon is something focusable. After pressing return I get this: &lt;a class="ext-link" href="https://cloudup.com/iTmkVjIK765"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/iTmkVjIK765&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
We should probably move focus to the back button for sections (right now it stays on &lt;code&gt;.accordion-section-title&lt;/code&gt;, so you have an extra tab).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;a11y: After a slide there is no indication that the back element has focus.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
It actually doesn't have focus, per above :) But we do need some focus/hover styling for that element, probably matching the top-level hover states.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Should the available widgets panel still breaking out? Some user tests would help, I think.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
I'd say definitely, when the screen is large enough. For the user, seeing the widget added to the sidebar (popping in at the bottom) right after you clicked it is comforting ("ok, that worked"). It also creates issues around adding multiple widgets at once, and we'd definitely want it to be a separate bump-out panel for menus when that happens.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Context lost? The "You are customizing" header is not visible anymore if you open a section. I've noticed this while editing a single sidebar (Am I still editing widgets?). Not sure if this is a real issue.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Maybe we could prefix the section title with the panel title in the sub-panel? "Widgets: Sidebar" or "Menus: Theme Locations", for example.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31281 (Register JavaScript/Underscore templates using the WP Dependency API) updated</title>
      
        <dc:creator>sanchothefat</dc:creator>

      <pubDate>Sun, 15 Feb 2015 15:24:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31281#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31281#comment:7/1424013881442925</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/31281#comment:6" title="Comment 6"&gt;F J Kaiser&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm thinking something like...
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_script_add_data( 'handle', '&amp;lt;script type="text/x-javascript-hbs" id="tmpl-xyz"&amp;gt;{{ this.title }}&amp;lt;/script&amp;gt;' );
&lt;/pre&gt;&lt;p&gt;
It's then trivial to allow Backbone/Underscore-style templating, as well as anything else you want to achieve (meta tags, etc).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't really get what you are aiming for with that (especially the "meta tags" part). Above would force me to fetch the file contents and put them into a callback.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree with Ryan that if you're enqueueing templates it makes sense to allow passing in a script tag directly as well as a URL as I think there's a use case for generated templates.
&lt;/p&gt;
&lt;p&gt;
However I think Franz is right in that it's a still a script so &lt;code&gt;wp_enqueue_script()&lt;/code&gt; makes sense - the templates will be dependencies of other scripts.
&lt;/p&gt;
&lt;p&gt;
I did wonder about things like meta tags where you might want to have some open graph tags dependent on others being present etc... or for removing their output by other plugins but the current &lt;code&gt;remove_action()&lt;/code&gt; functionality is probably good enough. To get some progress on this my view is that it should be kept to the case of scripts where order of loading is more important.
&lt;/p&gt;
&lt;p&gt;
The same functionality could be offered for passing in a &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; tag to &lt;code&gt;wp_enqueue_style()&lt;/code&gt; but again CSS dependencies aren't as much of an issue as they have to go in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; tag you can still use &lt;code&gt;remove_action()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15499 (Add an index for get_lastpostmodified query) updated</title>
      
        <dc:creator>mdgl</dc:creator>

      <pubDate>Sun, 15 Feb 2015 14:53:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15499#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15499#comment:25/1424012038655166</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/15499#comment:22" title="Comment 22"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In essence, rather than serving &lt;strong&gt;the&lt;/strong&gt; absolute last modified, we could fetch the posts or comments that appear in a feed, and then simply loop through the array to find &lt;em&gt;their&lt;/em&gt; last modified date (which would then indeed concern that specific feed, and that only, solving this ticket and &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/4575" title="#4575: enhancement: Add functions to return the last-modified timestamp of a category/tag (assigned)"&gt;#4575&lt;/a&gt; in one go).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree it would be much better if we used the last modified date of the data we have actually queried, rather than the last modified date of all posts/comments in the database. As far as I can see, the current code will presently return the wrong value for most category, tag and custom post type feeds (see also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22742" title="#22742: enhancement: Fix feed inefficiencies - Possibly Extend ... (closed: maybelater)"&gt;#22742&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
Having queried the data, a simple loop around the post objects in memory will almost certainly be much faster than querying the database for a second time, regardless of which columns are indexed.
&lt;/p&gt;
&lt;p&gt;
This seems do-able for the calls to &lt;code&gt;get_lastpostmodified()&lt;/code&gt; and &lt;code&gt;get_lastcommentmodified()&lt;/code&gt; in the various feed templates. Unfortunately, these functions are also used to generate the HTTP headers &lt;code&gt;Last-Modified&lt;/code&gt; and &lt;code&gt;ETag&lt;/code&gt; for feeds and which are output before we have even run the main query.
&lt;/p&gt;
&lt;p&gt;
What do you think? Is there a safe and efficient way of generating those HTTP header values?
&lt;/p&gt;
&lt;p&gt;
See also &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/13066" title="#13066: defect (bug): Last-Modified headers for individual comment feeds are incorrect (accepted)"&gt;#13066&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30646 (oEmbed preview loading does not trigger editor scrolling) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Sun, 15 Feb 2015 14:27:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30646#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30646#comment:4/1424010473013921</guid>
      <description>&lt;p&gt;
Hm, I still think we should use nodeChanged because if you start adding inline toolbars their position should update. And that event is used for UI updates.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14050 (shortcode_unautop() should also remove the &lt;br /&gt; added after shortcodes) updated</title>
      
        <dc:creator>squarestar</dc:creator>

      <pubDate>Sun, 15 Feb 2015 14:20:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14050#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14050#comment:34/1424010052879716</guid>
      <description>&lt;p&gt;
Edit: I had orignally commented that szepe.viktor's mu-plugin regex worked for me without realising that it was Ikraav's work and had already been tested. Don't mind me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31220 (Add orderby meta_value_num to WP_User_Query) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 15 Feb 2015 13:46:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31220#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31220#comment:8/1424008000402424</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30055 (Admin Bar overlapped header/content instead of pushing it down) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 15 Feb 2015 13:46:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30055#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30055#comment:7/1424007991484534</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31281 (Register JavaScript/Underscore templates using the WP Dependency API) updated</title>
      
        <dc:creator>F J Kaiser</dc:creator>

      <pubDate>Sun, 15 Feb 2015 13:19:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31281#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31281#comment:6/1424006395620673</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/31281#comment:4" title="Comment 4"&gt;rmccue&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The patch here needs to be in 5.2 syntax, so no &lt;code&gt;\&lt;/code&gt;s in the class names please. Also, needs to follow WP bracing style. :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Done - thanks for the hint. I completely forgot about that. New patch also checks the edge case if there's actually an extension, if not it returns whatever was added.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, as I noted on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31273" title="#31273: enhancement: Register JavaScript templates with wp_enqueue_script() (closed: duplicate)"&gt;#31273&lt;/a&gt;, I think it'd be more valuable to allow just adding arbitrary HTML to tags via &lt;code&gt;WP_Dependencies::add_data&lt;/code&gt;. Alternatively, a different dependency chain should be used rather than attaching this on top of the WP_Scripts one.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It's just attached to a filter and is completely &lt;em&gt;inline&lt;/em&gt; with the Dependency API. There's no "on top of the &lt;code&gt;\WP_Scripts&lt;/code&gt; one". Goal was to treat script templates as what they are: Dependencies like other JS scripts or Stylesheets. That's exactly what happens.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm thinking something like...
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_script_add_data( 'handle', '&amp;lt;script type="text/x-javascript-hbs" id="tmpl-xyz"&amp;gt;{{ this.title }}&amp;lt;/script&amp;gt;' );
&lt;/pre&gt;&lt;p&gt;
It's then trivial to allow Backbone/Underscore-style templating, as well as anything else you want to achieve (meta tags, etc).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't really get what you are aiming for with that (especially the "meta tags" part). Above would force me to fetch the file contents and put them into a callback. That's pretty much what I wanted to avoid and why it happens in the callback. Also, please note that templates are &lt;em&gt;tightest&lt;/em&gt; connected to scripts (views for example) and therefore need to reliably get included when the view is included. This puts a lot of burden off the shoulders of any developer. Register your view, Register your template and just enqueue your view whenever you need it - the rest is plain core WP Dependency API magic. Bonus: No one needs to learn anything new and can just jump on it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>0002-31281-patch-WP-Dependency-access-for-JS-templates.patch attached to Ticket #31281</title>
      
        <dc:creator>F J Kaiser</dc:creator>

      <pubDate>Sun, 15 Feb 2015 13:10:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31281/0002-31281-patch-WP-Dependency-access-for-JS-templates.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31281/0002-31281-patch-WP-Dependency-access-for-JS-templates.patch/1424005853688100</guid>
      <description>&lt;p&gt;
Same as previous, but with respect to core code styling
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #30999 (Inconsistent parameters for edited_term_taxonomy action) updated</title>
      
        <dc:creator>ipm-frommen</dc:creator>

      <pubDate>Sun, 15 Feb 2015 12:49:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30999#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30999#comment:8/1424004574115080</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/30999#comment:7" title="Comment 7"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Searching for &lt;code&gt;edited_term_taxonomy&lt;/code&gt; in the plugin directory yields 29 results:
[...]
&lt;/p&gt;
&lt;p&gt;
2 of those plugins treat &lt;code&gt;$taxonomy&lt;/code&gt; as a string:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Co-Authors Plus
&lt;/li&gt;&lt;li&gt;GetMeCooking Recipe Template
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
5 plugins treat &lt;code&gt;$taxonomy&lt;/code&gt; as an object:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Maven Algolia
&lt;/li&gt;&lt;li&gt;Organize Series
&lt;/li&gt;&lt;li&gt;Pay2Post
&lt;/li&gt;&lt;li&gt;Polylang
&lt;/li&gt;&lt;li&gt;rtBiz
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The rest appear to be unaffected by the change of type.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks for checking this out, Sergey.
&lt;/p&gt;
&lt;p&gt;
Could you please do this for &lt;code&gt;edit_term_taxonmy&lt;/code&gt; as well?
&lt;/p&gt;
&lt;p&gt;
So far, we have 2:1 for taxonomy objects wrt. action hooks, and 5:2 wrt. plugin expectations.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30352 (Prevent an editor to move the front page / posts page to trash) updated</title>
      
        <dc:creator>mrahmadawais</dc:creator>

      <pubDate>Sun, 15 Feb 2015 12:43:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30352#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30352#comment:7/1424004183688431</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I have added a function to prevent the editor user role from deleting any page which has been selected as the front page.
Awaiting review.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>30352.patch attached to Ticket #30352</title>
      
        <dc:creator>mrahmadawais</dc:creator>

      <pubDate>Sun, 15 Feb 2015 12:39:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/30352/30352.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/30352/30352.patch/1424003982016258</guid>
      <description>&lt;p&gt;
prevent_front_page_delete_by_editor function added to wp-includes/pluggable.php
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>build.diff attached to Ticket #31337</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 15 Feb 2015 12:39:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31337/build.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31337/build.diff/1424003957080038</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>31337.patch attached to Ticket #31337</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 15 Feb 2015 12:38:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31337/31337.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31337/31337.patch/1424003925120799</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #31337 (Update grunt-autoprefixer to 2.2.0) created</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 15 Feb 2015 12:38:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31337</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31337/1424003885924735</guid>
      <description>&lt;p&gt;
Upstream changes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;grunt-autoprefixer: &lt;a class="ext-link" href="https://github.com/nDmitry/grunt-autoprefixer/compare/v1.0.1...v2.2.0"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/nDmitry/grunt-autoprefixer/compare/v1.0.1...v2.2.0&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;autoprefixer-core: &lt;a class="ext-link" href="https://github.com/postcss/autoprefixer-core/compare/2.0.2...5.1.5"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/postcss/autoprefixer-core/compare/2.0.2...5.1.5&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
grunt-autoprefixer has a new &lt;a class="ext-link" href="https://github.com/nDmitry/grunt-autoprefixer#optionsremove"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;option `remove`&lt;/a&gt; which allows to remove outdated prefixes. This is by default true.
&lt;/p&gt;
&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/31337/build.diff" title="Attachment 'build.diff' in Ticket #31337"&gt;build.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/31337/build.diff" title="Download"&gt;​&lt;/a&gt; you will see that this option removes our media queries for Opera: &lt;code&gt;-o-min-device-pixel-ratio:&lt;/code&gt;. These are only &lt;a class="ext-link" href="http://caniuse.com/#feat=css-media-resolution"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;supported&lt;/a&gt; by Opera 10 and 11 and since we support only Opera 12 and up, these lines can be removed.
&lt;code&gt;-ms-animation&lt;/code&gt; and &lt;code&gt;@-ms-keyframes&lt;/code&gt; was never supported in a stable branch of IE.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22237 (Add keyboard shortcuts for collapse/expand, panel-back, and close to ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 15 Feb 2015 12:37:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22237#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22237#comment:16/1424003870870131</guid>
      <description>&lt;p&gt;
Asked @celloexpressions if we should still test this but seems some relevant changes will be in soon: &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1423966725000697"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/core-customize/p1423966725000697&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29820 (Smooth installation and updating of plugins and themes) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 15 Feb 2015 12:17:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29820#comment:69</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29820#comment:69/1424002662893693</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/31465" title="`grunt autoprefixer` for [31333].
see ##29820."&gt;31465&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
&lt;code&gt;grunt autoprefixer&lt;/code&gt; for &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/31333" title="Shiny Updates: Add ajax-y updates to the plugin list page, and ajax-y ..."&gt;[31333]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
see #&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29820" title="#29820: task (blessed): Smooth installation and updating of plugins and themes (closed: fixed)"&gt;#29820&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [31465]: `grunt autoprefixer` for [31333].  see ##29820.</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 15 Feb 2015 12:17:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/31465</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/31465/1424002661619378</guid>
      <description>&lt;p&gt;
&lt;code&gt;grunt autoprefixer&lt;/code&gt; for &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/31333" title="Shiny Updates: Add ajax-y updates to the plugin list page, and ajax-y ..."&gt;[31333]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
see #&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29820" title="#29820: task (blessed): Smooth installation and updating of plugins and themes (closed: fixed)"&gt;#29820&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #31281 (Register JavaScript/Underscore templates using the WP Dependency API) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 15 Feb 2015 12:07:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31281#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31281#comment:5/1424002027234814</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by kaiser. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1424002024004647"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31336 (Customizer: separate navigation from options UI for better UX by ...) updated</title>
      
        <dc:creator>folletto</dc:creator>

      <pubDate>Sun, 15 Feb 2015 12:06:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31336#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31336#comment:3/1424001960078177</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Should the available widgets panel still breaking out? Some user tests would help, I think.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
My initial perspective would be to not break out as suggested, mostly because your focus would be on the panel, so there's no need for "context" in seeing the previous panel too. Also would help making it work out of the box on mobile (I guess?).
&lt;/p&gt;
&lt;p&gt;
That said... I think it's a minor detail in terms of UX. :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Context lost? The "You are customizing" header is not visible anymore if you open a section. I've noticed this while editing a single sidebar (Am I still editing widgets?). Not sure if this is a real issue.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is the only thing I was keeping in mind while designing the above. I'm not sure on the answer either. The fact that yo as a user are actually diving in/out and you have the actual preview site open on the right might be more than enough, but still it's something I tried to add back in the design (failing, at the moment).
&lt;/p&gt;
&lt;p&gt;
So, not sure. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31336 (Customizer: separate navigation from options UI for better UX by ...) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 15 Feb 2015 12:00:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31336#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31336#comment:2/1424001623818564</guid>
      <description>&lt;p&gt;
Nice! :-)
&lt;/p&gt;
&lt;p&gt;
Some thoughts:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;After adding a new widget I get this: &lt;a class="ext-link" href="https://cloudup.com/iM66LRgWy54"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/iM66LRgWy54&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Keyboard a11y: Between the back arrow and the help icon is something focusable. After pressing return I get this: &lt;a class="ext-link" href="https://cloudup.com/iTmkVjIK765"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/iTmkVjIK765&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;a11y: After a slide there is no indication that the back element has focus.
&lt;/li&gt;&lt;li&gt;Should the available widgets panel still breaking out? Some user tests would help, I think.
&lt;/li&gt;&lt;li&gt;Context lost? The "You are customizing" header is not visible anymore if you open a section. I've noticed this while editing a single sidebar (Am I still editing widgets?). Not sure if this is a real issue.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23880 (Minimum PHP version in Plugins) reopened</title>
      
        <dc:creator>F J Kaiser</dc:creator>

      <pubDate>Sun, 15 Feb 2015 11:56:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23880#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23880#comment:40/1424001365777835</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23880#comment:34" title="Comment 34"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
My take: [...] I could see us moving to PHP 5.3 as early as 2014.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;em&gt;poke&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #31118 (get_terms() parameters do not respect multiple $taxonomies) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 15 Feb 2015 11:36:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31118#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31118#comment:5/1424000170611991</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30276 (Media library, admin-ajax.php, not all images are visible) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 15 Feb 2015 11:35:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30276#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30276#comment:8/1424000137800240</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9444 (Allow to read wp-config.php without loading WP) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 15 Feb 2015 10:01:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9444#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9444#comment:30/1423994479262312</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9444#comment:24" title="Comment 24"&gt;rpayne7264&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
And because I am having to call the core wp_load.php file to get access to the database so my plug-in works correctly on WPEngine, it is not being accepted into the plug-in repository.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There's no need to include &lt;code&gt;wp-load.php&lt;/code&gt; directly, you should be able to use a custom query variable to interact with the pop-up: &lt;a class="ext-link" href="http://ottopress.com/2010/dont-include-wp-load-please/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://ottopress.com/2010/dont-include-wp-load-please/&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30559 (Plugins and themes translations aren't downloaded when language is changed) updated</title>
      
        <dc:creator>Chouby</dc:creator>

      <pubDate>Sun, 15 Feb 2015 09:48:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30559#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30559#comment:1/1423993699309810</guid>
      <description>&lt;p&gt;
In my experience, translations will be available at some point on a single site install. The fact that you need to click the "update translations" button is a bit inconsistent with core translations which are automatically downloaded but I guess we could live with this on a single site install.
&lt;/p&gt;
&lt;p&gt;
But it seems that on a multisite install, the plugins and themes translations are *never* downloaded. Thus the network admin is obliged to upload all translations manually. The patch proposed does not fix the issue.
&lt;/p&gt;
&lt;p&gt;
I believe that the problem is coming from the fact that the plugins and themes translations are downloaded through the update procedure while the core translations are explicitely downloaded with the function wp_download_language_pack().
&lt;/p&gt;
&lt;p&gt;
So far I circumvent the issue with this small plugin (network activated)
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;?
// Plugin name: Plugins &amp;amp; themes translation updates
add_filter('themes_update_check_locales', 'pll_update_check_locales');
add_filter('plugins_update_check_locales', 'pll_update_check_locales');
function pll_update_check_locales($locales) {
	return get_available_languages();
}
&lt;/pre&gt;&lt;p&gt;
This still needs an action from the network admin but at least it's an easier process than the manual upload. Hope it helps waiting for a better core solution.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30850 (Audio/video previews for media controls in the Customizer) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 15 Feb 2015 05:43:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30850#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30850#comment:7/1423979016994592</guid>
      <description>&lt;p&gt;
I think what you're looking for is:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="nx"&gt;wp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;customize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;section&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;control&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;section&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;expanded&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;expanded&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;expanded&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// it is open
&lt;/span&gt;    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// it is closed
&lt;/span&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30850 (Audio/video previews for media controls in the Customizer) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 15 Feb 2015 05:39:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30850#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30850#comment:6/1423978771060484</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@Fab1en: the function you're looking for is api.Section.onChangeExpanded(). I believe there's a hook to bind in there but if there isn't we can add one. Or may be able to do something like control.section().bind...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31336 (Customizer: separate navigation from options UI for better UX by ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 15 Feb 2015 05:33:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31336#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31336#comment:1/1423978421098236</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1423978419000698"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31281 (Register JavaScript/Underscore templates using the WP Dependency API) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Sun, 15 Feb 2015 05:17:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31281#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31281#comment:4/1423977458546455</guid>
      <description>&lt;p&gt;
The patch here needs to be in 5.2 syntax, so no &lt;code&gt;\&lt;/code&gt;s in the class names please. Also, needs to follow WP bracing style. :)
&lt;/p&gt;
&lt;p&gt;
Also, as I noted on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31273" title="#31273: enhancement: Register JavaScript templates with wp_enqueue_script() (closed: duplicate)"&gt;#31273&lt;/a&gt;, I think it'd be more valuable to allow just adding arbitrary HTML to tags via &lt;code&gt;WP_Dependencies::add_data&lt;/code&gt;. Alternatively, a different dependency chain should be used rather than attaching this on top of the WP_Scripts one.
&lt;/p&gt;
&lt;p&gt;
I'm thinking something like...
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_script_add_data( 'handle', '&amp;lt;script type="text/x-javascript-hbs" id="tmpl-xyz"&amp;gt;{{ this.title }}&amp;lt;/script&amp;gt;' );
&lt;/pre&gt;&lt;p&gt;
It's then trivial to allow Backbone/Underscore-style templating, as well as anything else you want to achieve (meta tags, etc).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29158 (Customizer UI Design lacks contrast for visual hierarchy and does not ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 15 Feb 2015 05:08:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29158#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29158#comment:11/1423976901442107</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31336" title="#31336: task (blessed): Customizer: separate navigation from options UI for better UX by ... (closed: fixed)"&gt;#31336&lt;/a&gt; now has a patch for addressing the more fundamental issue of the accordions not being good UX here. Once that's resolved, we can circle back here to evaluate the visual design options within the more logically structured Customizer for improved contrast and color schemes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>customize-ux-redesign.gif attached to Ticket #31336</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 15 Feb 2015 05:05:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31336/customize-ux-redesign.gif</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31336/customize-ux-redesign.gif/1423976752821289</guid>
      <description>&lt;p&gt;
Quick walkthrough of the Customizer with the patch applied
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>31336.diff attached to Ticket #31336</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 15 Feb 2015 04:59:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31336/31336.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31336/31336.diff/1423976357820792</guid>
      <description>&lt;p&gt;
Use sliding instead of accordions in the Customizer, unify/clarify section and panel headings and descriptions/help toggles.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #30352 (Prevent an editor to move the front page / posts page to trash) updated</title>
      
        <dc:creator>mrahmadawais</dc:creator>

      <pubDate>Sun, 15 Feb 2015 04:58:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30352#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30352#comment:6/1423976329132949</guid>
      <description>&lt;p&gt;
I have the logic ready, just unable to figure out where to add it.
Can't do it in wp-admin/edit.php.
Reviewed wp-admin/includes/class-wp-post-list-table.php and added the check and it works, but an editor can always go inside the page and trash it from there.
&lt;/p&gt;
&lt;p&gt;
So, I figured the better way to stop editor from deleting a page which is being used as front page should be editing the user's capability of
&lt;/p&gt;
&lt;pre class="wiki"&gt;delete_pages
&lt;/pre&gt;&lt;p&gt;
Now unable to figure it out where to do that. Looking inside /wp-admin/includes/schema.php but I think it's not right. Looking for pointers.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>customizer-slidein-i1.png attached to Ticket #31336</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 15 Feb 2015 04:56:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31336/customizer-slidein-i1.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31336/customizer-slidein-i1.png/1423976219491609</guid>
      <description>&lt;p&gt;
Most recent conceptual design from @folletto.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #31336 (Customizer: separate navigation from options UI for better UX by ...) created</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 15 Feb 2015 04:56:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31336</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31336/1423976195876083</guid>
      <description>&lt;p&gt;
Per several design concepts and discussions with @folletto since the Panels API was introduced in WordPress 4.0, the current "accordion" behavior of the Customizer controls area is fundamentally flawed. Sections should slide-in similarly to panels, allowing users to focus on the contents of the active section more easily and separating the navigation from the content/controls in the Customizer.
&lt;/p&gt;
&lt;p&gt;
The coming patch implements this behavior. There are a few quirks including the panel-back buttons needing improvement and widgets bumping out of the section contents when their controls are expanded (need @westonruter to look at that).
&lt;/p&gt;
&lt;p&gt;
This fixes many of the issues in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29158" title="#29158: task (blessed): Customizer UI Design lacks contrast for visual hierarchy and does not ... (closed: fixed)"&gt;#29158&lt;/a&gt;, and once this is complete we can circle back there to improve things like focus states.
&lt;/p&gt;
&lt;p&gt;
Backwards-compatibility is likely to break for custom section types, but thanks to the 4.1 JavaScript APIs and by keeping most of the underlying class names and CSS structure intact, issues should be reasonably minimal.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #9444 (Allow to read wp-config.php without loading WP) updated</title>
      
        <dc:creator>jasonhendriks</dc:creator>

      <pubDate>Sun, 15 Feb 2015 04:52:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9444#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9444#comment:29/1423975937984856</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I am at a loss of how maintain state without loading WP inside my pop-up window and using the DB.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Admittedly, I'm not doing Javascript authentication. But I can only imagine it would be easier than having to manage all the redirects between servers as I described above. But I'm afraid we've hi-jacked this thread. If you'd like to open a new post on your plugin forum or mine, I'd be happy to help you work out a solution. I don't see any reason to load the WP files directly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9444 (Allow to read wp-config.php without loading WP) updated</title>
      
        <dc:creator>rpayne7264</dc:creator>

      <pubDate>Sun, 15 Feb 2015 04:46:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9444#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9444#comment:28/1423975586510381</guid>
      <description>&lt;p&gt;
I am storing the state in the database.
I am using a popup window to host the LinkedIn sign-in form.
It then sends a response back to my pop-up form with the id required for a second call to get the access token.
Currently, I am loading Wordpress with my pop-up form so I have access to the DB and Transient API.
But, when I submit my plug-in to the WP repo, they say I shouldn't call core WP files directly.
Session doesn't work on WPEngine.
Cookies don't work on WPEngine.
I am at a loss of how maintain state without loading WP inside my pop-up window and using the DB.
But in fact, I do not like the fact that I have to load the entire WP process. It's overkill.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9444 (Allow to read wp-config.php without loading WP) updated</title>
      
        <dc:creator>jasonhendriks</dc:creator>

      <pubDate>Sun, 15 Feb 2015 04:26:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9444#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9444#comment:27/1423974404952675</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9444#comment:26" title="Comment 26"&gt;rpayne7264&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The part of oAuth where I need to maintain state between the token request and the authentication request.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
And you've already stated you can't use store state in the http session. But isn't an alternative as simple as storing the state in the database? Let's say it's Google we're dealing with..
&lt;/p&gt;
&lt;p&gt;
-&amp;gt; User makes permission request to Google. WordPress loads.
.... store 'authenticating mode flag' in db
.... store unique Google state code in db
.... redirect to Google
-&amp;gt; Google redirects back to us. WordPress loads.
.... remove 'authenticating mode flag' from db
.... remove and verify unique Google state code from db
.... retrieve code from http request
.... ask Google to exchange code for auth token
.... store token in DB
&lt;/p&gt;
&lt;p&gt;
WordPress is already running each time we require a load/save of state..  no?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9444 (Allow to read wp-config.php without loading WP) updated</title>
      
        <dc:creator>rpayne7264</dc:creator>

      <pubDate>Sun, 15 Feb 2015 04:17:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9444#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9444#comment:26/1423973831691215</guid>
      <description>&lt;p&gt;
The part of oAuth where I need to maintain state between the token request and the authentication request.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18132 (Misleading message when deleting a user with no sites) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 15 Feb 2015 04:11:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18132#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18132#comment:10/1423973507337750</guid>
      <description>&lt;p&gt;
Great changes so far. It looks like now that we're doing a better job with the text, we need to change some of the other output a bit to match the experience. We don't need to be too worried about style, this screen is very utilitarian already, but we can provide some of the info already available to us.
&lt;/p&gt;
&lt;p&gt;
A few screenshots with &lt;a href="https://core.trac.wordpress.org/attachment/ticket/18132/18132_checkCount.diff"&gt;18132_checkCount.diff&lt;/a&gt; applied:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Deleting a single user belonging to no sites - &lt;a class="ext-link" href="https://cloudup.com/cZh_-bDViFb"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/cZh_-bDViFb&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Deleting a single user belonging to one site - &lt;a class="ext-link" href="https://cloudup.com/cFqovmePV-j"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/cFqovmePV-j&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Deleting two users, one belonging to a site - &lt;a class="ext-link" href="https://cloudup.com/ctQpM4fPBVr"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/ctQpM4fPBVr&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Deleting two users, neither belonging to a site - &lt;a class="ext-link" href="https://cloudup.com/c9nTL-eSEg5"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/c9nTL-eSEg5&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I think we can maneuver some HTML around and split up those strings a bit to provide a structure that's more readable.
&lt;/p&gt;
&lt;pre class="wiki"&gt;You have chosen to delete the following users from all networks and sites.
   - username1
   - username2
Once you hit "Confirm Deletion", these users will be permanently removed.
&lt;/pre&gt;&lt;p&gt;
and
&lt;/p&gt;
&lt;pre class="wiki"&gt;You have chosen to delete the following users from all networks and sites.
    - username1
    - username2
        What should be done with content owned by username2?
            * Site: Site Two
                Delete all content.
                Attribute all content to: ----
             * Site: Site Three
                Delete all content.
                Attribute all content to: ----
Once you hit "Confirm Deletion", these users will be permanently removed.
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9444 (Allow to read wp-config.php without loading WP) updated</title>
      
        <dc:creator>jasonhendriks</dc:creator>

      <pubDate>Sun, 15 Feb 2015 04:11:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9444#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9444#comment:25/1423973462308745</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9444#comment:24" title="Comment 24"&gt;rpayne7264&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That is unacceptable. I am writing plug-ins that deal with oAuth. I can't instruct users of my plug-in to modify/create core php files.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
My plugin uses OAuth. May I ask what part of OAuth requires this behaviour? To read/write to the DB outside of WordPress?
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://wordpress.org/plugins/postman-smtp/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/postman-smtp/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9444 (Allow to read wp-config.php without loading WP) updated</title>
      
        <dc:creator>rpayne7264</dc:creator>

      <pubDate>Sun, 15 Feb 2015 04:08:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9444#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9444#comment:24/1423973287256545</guid>
      <description>&lt;p&gt;
That is unacceptable. I am writing plug-ins that deal with oAuth. I can't instruct users of my plug-in to modify/create core php files. And because I am having to call the core wp_load.php file to get access to the database so my plug-in works correctly on WPEngine, it is not being accepted into the plug-in repository.
&lt;/p&gt;
&lt;p&gt;
I have a possible solution that will require loading wp_includes/wp-db.php &amp;amp; wp-includes/option.php so I can get the database access I need. But, I don't know if that will cause another decline of my plug-in being accepted into the repository.
&lt;/p&gt;
&lt;p&gt;
I can use something like the following code to gather the necessary credentials to instantiate an wpdb class and assign it to global variable $wpdb, and then use the WP Transient API, I think.
&lt;/p&gt;
&lt;pre class="wiki"&gt;$array = file("wp-config.php");
$dbArray = array();
$x = array('DB_NAME','DB_USER','DB_PASSWORD','DB_HOST');
foreach ( $array as $line ) {
	$matches=array();
    if (preg_match('/DEFINE\(\'(.*?)\',\s*\'(.*)\'\);/i', $line, $matches)) {
        $name=$matches[1];
        $value=$matches[2];
	if(in_array( $name, $x ))$dbArray[$name]= $value;
    }
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30352 (Prevent an editor to move the front page / posts page to trash) updated</title>
      
        <dc:creator>mrahmadawais</dc:creator>

      <pubDate>Sun, 15 Feb 2015 03:19:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30352#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30352#comment:5/1423970366675940</guid>
      <description>&lt;p&gt;
Started working on it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18934 (Multisite issue cleaning up empty capabilities) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 15 Feb 2015 02:59:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18934#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18934#comment:26/1423969149655955</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Let's fire this up again. :)
&lt;/p&gt;
&lt;p&gt;
I'm of the opinion that removing a large chunk of this code is the right move.
&lt;/p&gt;
&lt;p&gt;
A few interesting reads:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;In &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2809" title="#2809: defect (bug): Better handling of users with no role (closed: fixed)"&gt;#2809&lt;/a&gt;, the concept of "No role for this blog" was introduced as a way to prevent the accidental assignment of a role when editing a user from &lt;code&gt;user-edit.php&lt;/code&gt; on a site for which the user had no existing role.
&lt;/li&gt;&lt;li&gt;The commit message for &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/22686" title="Less insane multiple role handling in the users list table.
If the ..."&gt;[22686]&lt;/a&gt; mentions hiding "&lt;em&gt;users that have no capabilities (in case they possess a leftover, empty wp_xx_capabilities key from the MU days), not users that have no role, as they may have a cap but no role.&lt;/em&gt;"
&lt;/li&gt;&lt;li&gt;In @jjj's &lt;a href="https://core.trac.wordpress.org/attachment/ticket/22361/22361.2.patch"&gt;patch for 22361&lt;/a&gt;, he addresses this area of code as "&lt;em&gt;prevents a user's capabilities from being completely deleted in multisite setups when setting 'role' to none&lt;/em&gt;". That ended up not being committed as part of the ticket, but is the issue at hand here.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
When &lt;code&gt;wp_insert_user()&lt;/code&gt; is used with an empty role, an empty array is stored. However, core treats this condition and that in which &lt;code&gt;wp_xx_capabilities&lt;/code&gt; has been deleted completely exactly the same. That's ok, but what makes the existing code a bit confusing—the explicit check for &lt;code&gt;a:0:{}&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
The real issue:
&lt;/p&gt;
&lt;p&gt;
If a user has a built in role assigned, and a custom role is added, the two roles are stored in the database alongside the existing role. With the current state of &lt;code&gt;user-edit.php&lt;/code&gt;, setting that user to "No role for this site" will delete the row entirely, including the custom role. This means the user will no longer be shown in the site's user list table, even though the intent could be for the user to continue with an even more limited custom role.
&lt;/p&gt;
&lt;p&gt;
By removing this section of code
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;No change in behavior if editing your own profile.
&lt;/li&gt;&lt;li&gt;No change if editing a user in &lt;code&gt;wp-admin/network/user-edit.php&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;No change if editing a user and setting any role..
&lt;/li&gt;&lt;li&gt;If setting the role to "No role on this site", custom roles now remain.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
We can also take this opportunity to clean up and combine what's happening in multisite and single site installs. &lt;a href="https://core.trac.wordpress.org/attachment/ticket/18934/18934.3.diff"&gt;18934.3.diff&lt;/a&gt; does this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>18934.3.diff attached to Ticket #18934</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 15 Feb 2015 02:53:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18934/18934.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18934/18934.3.diff/1423968799257716</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #9444 (Allow to read wp-config.php without loading WP) closed</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 15 Feb 2015 02:14:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9444#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9444#comment:23/1423966446526198</guid>
      <description>wontfix: &lt;p&gt;
Hi @rpayne7264, I think &lt;a href="https://core.trac.wordpress.org/ticket/9444#comment:19"&gt;Westi's comment&lt;/a&gt; from above still sums this up well:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
As Ryan wrote lots of plugins rely on wp-config.php pulling in WordPress as do external integrations.
If you want to create something that just contains the config data for use is an external codebase then just dump your config in a seperate php file which gets included by wp-config.php and just include that from your external app.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
A common approach for local/staging/production environments is to use &lt;code&gt;wp-config.php&lt;/code&gt; to include a &lt;code&gt;local-config.php&lt;/code&gt; or other file. The same can be done with a &lt;code&gt;wp-db-config.php&lt;/code&gt; file that could be read by your other application when DB access is needed. Another option would be for &lt;code&gt;wp-config.php&lt;/code&gt; to bail early if a specific environment was detected.
&lt;/p&gt;
&lt;p&gt;
The history of &lt;code&gt;wp-config.php&lt;/code&gt; is so great, it would be hard to justify a refactor of how it is loaded. Even then, we would then be supporting multiple methods to maintain backward compatibility.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #31335 (wp_logout_url: redirect character escape &amp;amp;) created</title>
      
        <dc:creator>adaldesign</dc:creator>

      <pubDate>Sun, 15 Feb 2015 02:12:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31335</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31335/1423966320831429</guid>
      <description>&lt;p&gt;
The wp_logout_url function is still not working, even though this ticket was created and closed: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21885" title="#21885: defect (bug): logout redirect problem (closed: worksforme)"&gt;#21885&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The issue is also explained and fixed in this forum post: &lt;a class="ext-link" href="https://wordpress.org/support/topic/wp_logout_url-not-redirecting?replies=6#post-2182272"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/wp_logout_url-not-redirecting?replies=6#post-2182272&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23880 (Minimum PHP version in Plugins) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Sun, 15 Feb 2015 01:21:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23880#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23880#comment:39/1423963285429835</guid>
      <description>&lt;p&gt;
So it's been 16 months and now stats show that about half of the previous cohort of users are on 5.2 (now 32%)
&lt;/p&gt;
&lt;p&gt;
Is it worth supporting a plugin header such as &lt;code&gt;Requires PHP: 5.3&lt;/code&gt; or as above and hook a function in plugin activation that doesn't allow activation and throws an admin notice if the &lt;code&gt;Requires PHP&lt;/code&gt; header doesn't list a version that works and assumes the lowest acceptable version of PHP if the header is missing?
&lt;/p&gt;
&lt;p&gt;
It would seem a much cleaner solution by having this in core than having it in a myriad of individual plugins.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9444 (Allow to read wp-config.php without loading WP) reopened</title>
      
        <dc:creator>rpayne7264</dc:creator>

      <pubDate>Sun, 15 Feb 2015 01:02:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9444#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9444#comment:22/1423962148390498</guid>
      <description>&lt;p&gt;
Six years later and it still is not possible to load the database config settings without loading the entire WP installation?? That's ridiculous!! I need to be able to do that so I can push session data into the database during oAuth operations on hosting systems that disallow session variables and cookies, WPEngine in particular. Requiring users to mess with core WP files is a lazy and unacceptable solution.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #29820 (Smooth installation and updating of plugins and themes) updated</title>
      
        <dc:creator>DavidAnderson</dc:creator>

      <pubDate>Sat, 14 Feb 2015 22:58:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29820#comment:68</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29820#comment:68/1423954725291054</guid>
      <description>&lt;p&gt;
Concerning the issues of what happens after installation and activation and redirection, one issue that will confuse users is that if there is no redirection, then you don't get to see anything added by the plugin to your dashboard until you reload the dashboard.
&lt;/p&gt;
&lt;p&gt;
e.g. Plugin Foo adds a new menu in "Tools -&amp;gt; Frobnosticator". But, it's not there until the page reloads. Result: unless the user realises this, he may be confused; click around a bit, and then see it is there after all. Files issue in support forum, "Hi, after installing + activating your plugin, the Tools -&amp;gt; Frobnosticator menu entry was not there... I clicked around a bit, then it was. Not sure what caused that. You'll want to get that fixed in your plugin!".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>31334.diff attached to Ticket #31334</title>
      
        <dc:creator>Aniruddh</dc:creator>

      <pubDate>Sat, 14 Feb 2015 22:47:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31334/31334.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31334/31334.diff/1423954020044020</guid>
      <description>&lt;p&gt;
Self patch added
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #28633 (Generate better random numbers) updated</title>
      
        <dc:creator>sarciszewski</dc:creator>

      <pubDate>Sat, 14 Feb 2015 22:45:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28633#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28633#comment:34/1423953921304285</guid>
      <description>&lt;p&gt;
@yantchi - Thanks for catching those, I don't know what I was thinking :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>28633.7.patch attached to Ticket #28633</title>
      
        <dc:creator>sarciszewski</dc:creator>

      <pubDate>Sat, 14 Feb 2015 22:44:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28633/28633.7.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28633/28633.7.patch/1423953887335387</guid>
      <description>&lt;p&gt;
@Otto42 - You're absolutely correct. Also, there's a bug in mcrypt on Windows for PHP &amp;lt; 5.3.7 where it always produces insufficient entropy.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #31334 (Customizer JS API should handle container removal from document and ...) updated</title>
      
        <dc:creator>Aniruddh</dc:creator>

      <pubDate>Sat, 14 Feb 2015 22:35:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31334#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31334#comment:1/1423953328851418</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>customize-base.js attached to Ticket #31334</title>
      
        <dc:creator>Aniruddh</dc:creator>

      <pubDate>Sat, 14 Feb 2015 22:30:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31334/customize-base.js</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31334/customize-base.js/1423953002338778</guid>
      <description>&lt;p&gt;
Line 334-335
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #31334 (Customizer JS API should handle container removal from document and ...) created</title>
      
        <dc:creator>Aniruddh</dc:creator>

      <pubDate>Sat, 14 Feb 2015 22:28:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31334</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31334/1423952887517042</guid>
      <description>&lt;p&gt;
When we do
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp.customize.section.remove('my_section')&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
or
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp.customize.control.remove('my_control')&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
The API should handle removing their container from document, too. The current process requires you to execute this before removing a section (or control):
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp.customize.section('my_section').container.remove()&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #31333 (Comment reply link broken in ajax call) created</title>
      
        <dc:creator>aruns6578</dc:creator>

      <pubDate>Sat, 14 Feb 2015 21:53:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31333</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31333/1423950790530775</guid>
      <description>&lt;p&gt;
Will it be okay to change
&lt;/p&gt;
&lt;pre class="wiki"&gt;esc_url( add_query_arg( 'replytocom', $comment-&amp;gt;comment_ID ) ) . "#" . $args['respond_id']
&lt;/pre&gt;&lt;p&gt;
to
&lt;/p&gt;
&lt;pre class="wiki"&gt;esc_url( add_query_arg( 'replytocom', $comment-&amp;gt;comment_ID, get_permalink($post-&amp;gt;ID) ) ) . "#" . $args['respond_id']
&lt;/pre&gt;&lt;p&gt;
at line &lt;a href="https://core.trac.wordpress.org/browser/tags/4.1/src/wp-includes/comment-template.php#L1412"&gt;https://core.trac.wordpress.org/browser/tags/4.1/src/wp-includes/comment-template.php#L1412&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The get_comment_reply_link function sends wrong URL when requested via ajax call.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #31332 (RTL CSS generation: Switch from CSSJanus to RTLCSS) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 14 Feb 2015 21:17:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31332#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31332#comment:4/1423948658971394</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31332 (RTL CSS generation: Switch from CSSJanus to RTLCSS) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 14 Feb 2015 20:42:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31332#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31332#comment:3/1423946529527841</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/31332/build.diff" title="Attachment 'build.diff' in Ticket #31332"&gt;build.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/31332/build.diff" title="Download"&gt;​&lt;/a&gt; is a diff from the CSS files.
(Note: The change in &lt;code&gt;wp-admin/css/ie-rtl.css&lt;/code&gt; is correct and fixes a bug in cssjanus.)
&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Would it possible to get some sample vizrecs for before (w/ CSSJanus) and after (w/ RTLCSS)?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There isn't much difference, but I just noticed that the shadow of the Press This button is now switched in RTL, see &lt;a class="ext-link" href="https://cloudup.com/c6tuCzztRqA"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/c6tuCzztRqA&lt;/a&gt;.
&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The one thing I think I would do differently (and my above patch does it) is to keep cssjanus as a command,
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't think this is really necessary. We already have a custom RTL task (&lt;code&gt;grunt rtl&lt;/code&gt;) which should be used.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>build.diff attached to Ticket #31332</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 14 Feb 2015 20:25:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31332/build.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31332/build.diff/1423945544132907</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #31332 (RTL CSS generation: Switch from CSSJanus to RTLCSS) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Sat, 14 Feb 2015 20:09:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31332#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31332#comment:2/1423944544051048</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In general, this sounds like a good switch.  While CSSJanus has served us well, RTLCSS seems to have more features.
&lt;/p&gt;
&lt;p&gt;
I agree with Drew, that a comparison is a good idea.  We should make sure we aren't breaking anything by making this change.
&lt;/p&gt;
&lt;p&gt;
The one thing I think I would do differently (and my above patch does it) is to keep cssjanus as a command, only have it turn into an alias for rtlcss with a warning.
&lt;/p&gt;
&lt;p&gt;
I don't want to clutter our main Grunt file with this though, so I added a new deprectatedTasks file for this (and any future ones that we add).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>31332.diff attached to Ticket #31332</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Sat, 14 Feb 2015 19:58:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31332/31332.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31332/31332.diff/1423943927912560</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #28633 (Generate better random numbers) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Sat, 14 Feb 2015 19:55:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28633#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28633#comment:33/1423943742855919</guid>
      <description>&lt;p&gt;
I think you might need a php version check on the &lt;code&gt;if (function_exists('mcrypt_create_iv'))&lt;/code&gt; line as well. On a Windows machine running 5.2.x, where the mcrypt extension is also enabled, a call made using &lt;code&gt;MCRYPT_DEV_URANDOM&lt;/code&gt; will cause a "Cannot open source device" warning. This warning will prevent logins if display_errors is enabled (which it sadly is by default on most hosts).
&lt;/p&gt;
&lt;p&gt;
Alternatively, error suppression by using &lt;code&gt;@mcrypt_create_iv()&lt;/code&gt; would probably work just as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31332 (RTL CSS generation: Switch from CSSJanus to RTLCSS) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 14 Feb 2015 19:52:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31332#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31332#comment:1/1423943533266838</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
+1 for making the switch. Seems like the RTLCSS dev has already been quite a bit more responsive. Would it possible to get some sample vizrecs for before (w/ CSSJanus) and after (w/ RTLCSS)?
&lt;/p&gt;
&lt;p&gt;
This would mostly serve as a visual test. A comparison of the generated RTL styles might also suffice.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31321 (TinyMCE Fails HTML Validation) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 14 Feb 2015 19:37:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31321#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31321#comment:1/1423942630172136</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
For 1: yes, generally it should be &lt;code&gt;&amp;lt;style scoped&amp;gt; @import... &amp;lt;/style&amp;gt;&lt;/code&gt; to pass validation. However as you mention all browsers support &amp;lt;link&amp;gt; mid-page and none fully supports &lt;code&gt;scoped&lt;/code&gt; yet, so "wontfix" sounds right.
&lt;/p&gt;
&lt;p&gt;
For 2: not sure where this is coming from either. Could it be a false positive? There is also &lt;code&gt;autocomplete="off"&lt;/code&gt; on the form element in Chrome (as it disregards individual fields autocomplete attributes) but that is not invalid. The textarea either has its own attribute or inherits from the form element: &lt;a class="ext-link" href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea#attr-autocomplete"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea#attr-autocomplete&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18132 (Misleading message when deleting a user with no sites) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 14 Feb 2015 19:35:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18132#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18132#comment:9/1423942522537150</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>31332.patch attached to Ticket #31332</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 14 Feb 2015 17:54:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31332/31332.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31332/31332.patch/1423936471000923</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #31332 (RTL CSS generation: Switch from CSSJanus to RTLCSS) created</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 14 Feb 2015 17:54:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31332</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31332/1423936452697655</guid>
      <description>&lt;h2 id="Prologue"&gt;Prologue&lt;/h2&gt;
&lt;p&gt;
Three days ago we were finally able to switch back from a &lt;em&gt;temporarily&lt;/em&gt; fork of grunt-cssjanus and CSSJanus to the official ones, see &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/31425" title="Update grunt-cssjanus to 0.2.4, we no longer need the fork.
Upstream ..."&gt;[31425]&lt;/a&gt;. The &lt;em&gt;temporary&lt;/em&gt; fork was created 6 months ago by me to fix an issue related to &lt;code&gt;border-radius&lt;/code&gt;, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29038" title="#29038: defect (bug): Code Typos in &amp;#34;customize-controls-rtl.css&amp;#34; (closed: fixed)"&gt;#29038&lt;/a&gt;.
This wasn't the first pin to a patched fork, the first one was 15 months ago, see &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/26610" title="Temporarily switch to a pinned version of grunt-cssjanus. This in turn ..."&gt;[26610]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/31425" title="Update grunt-cssjanus to 0.2.4, we no longer need the fork.
Upstream ..."&gt;[31425]&lt;/a&gt; (&lt;a class="ext-link" href="https://build.trac.wordpress.org/changeset/31406"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;build changeset r31406&lt;/a&gt;), I had noticed that there is something wrong with text shadows. And I was right, it switches the y-coordinate instead of the x-coordinate. I've reported the &lt;a class="ext-link" href="https://github.com/cssjanus/cssjanus/pull/32"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;issue upstream&lt;/a&gt;. But I don't want to patch CSSJanus anymore.
&lt;/p&gt;
&lt;h2 id="RTLCSS"&gt;RTLCSS&lt;/h2&gt;
&lt;p&gt;
So I did some research and found &lt;a class="ext-link" href="https://github.com/MohammadYounes/rtlcss"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;RTLCSS by Mohammad Younes&lt;/a&gt;. Same as CSSJanus is RTLCSS a framework for converting LTR CSS to RTL. It supports the following CSS properties:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;background&lt;/code&gt;, &lt;code&gt;background-image&lt;/code&gt;, &lt;code&gt;background-position&lt;/code&gt;, &lt;code&gt;background-position-x&lt;/code&gt;, &lt;code&gt;border-bottom-left-radius&lt;/code&gt;, &lt;code&gt;border-bottom-right-radius&lt;/code&gt;, &lt;code&gt;border-color&lt;/code&gt;, &lt;code&gt;border-left&lt;/code&gt;, &lt;code&gt;border-left-color&lt;/code&gt;, &lt;code&gt;border-left-style&lt;/code&gt;, &lt;code&gt;border-left-width&lt;/code&gt;, &lt;code&gt;border-radius&lt;/code&gt;, &lt;code&gt;border-right&lt;/code&gt;, &lt;code&gt;border-right-color&lt;/code&gt;, &lt;code&gt;border-right-style&lt;/code&gt;, &lt;code&gt;border-right-width&lt;/code&gt;, &lt;code&gt;border-style&lt;/code&gt;, &lt;code&gt;border-top-left-radius&lt;/code&gt;, &lt;code&gt;border-top-right-radius&lt;/code&gt;, &lt;code&gt;border-width&lt;/code&gt;, &lt;code&gt;box-shadow&lt;/code&gt;, &lt;code&gt;clear&lt;/code&gt;, &lt;code&gt;cursor&lt;/code&gt;, &lt;code&gt;direction&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;margin&lt;/code&gt;, &lt;code&gt;margin-left&lt;/code&gt;, &lt;code&gt;margin-right&lt;/code&gt;, &lt;code&gt;padding&lt;/code&gt;, &lt;code&gt;padding-left&lt;/code&gt;, &lt;code&gt;padding-right&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;text-align&lt;/code&gt;, &lt;code&gt;text-shadow&lt;/code&gt;, &lt;code&gt;transform&lt;/code&gt;, &lt;code&gt;transform-origin&lt;/code&gt;, &lt;code&gt;transition&lt;/code&gt;, &lt;code&gt;transition-property&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;transform&lt;/code&gt;, &lt;code&gt;transform-origin&lt;/code&gt;, &lt;code&gt;transition&lt;/code&gt; and &lt;code&gt;transition-property&lt;/code&gt; are not supported by CSSJanus. RTLCSS supports also multiple values for &lt;code&gt;box-shadow&lt;/code&gt; and &lt;code&gt;text-shadow&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I also did a look at the source code of RTLCSS and it looks much better than CSSJanus, it benefits of using &lt;a class="ext-link" href="https://github.com/postcss/postcss"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PostCSS&lt;/a&gt; for parsing CSS. (PostCSS is also used by Autoprefixer. \o/)
&lt;/p&gt;
&lt;p&gt;
And coincidentally, I've found an issue related to parsing text shadows, sigh. But hey, it got &lt;a class="ext-link" href="https://github.com/MohammadYounes/rtlcss/pull/20"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;merged&lt;/a&gt; in under 24 hours!
&lt;/p&gt;
&lt;h2 id="Canihazagrunttask"&gt;Can i haz a grunt task?&lt;/h2&gt;
&lt;p&gt;
Sure, there is &lt;a class="ext-link" href="https://github.com/MohammadYounes/grunt-rtlcss"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;grunt-rtlcss&lt;/a&gt;, also maintained by Mohammad. It supports everything what grunt-cssjanus does. (I only had to ask for a &lt;code&gt;generateExactDuplicates:false&lt;/code&gt; option, see merged &lt;a class="ext-link" href="https://github.com/MohammadYounes/grunt-rtlcss/pull/1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;pull request&lt;/a&gt;.)
&lt;/p&gt;
&lt;p&gt;
CSSJanus has a &lt;code&gt;processContent&lt;/code&gt; option which I've replaced with a &lt;a class="ext-link" href="https://github.com/MohammadYounes/rtlcss#stringmap-array"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;stringMap&lt;/a&gt; in RTLCSS:
&lt;/p&gt;
&lt;pre class="wiki"&gt;{
	name: 'import-rtl-stylesheet',
	search: [ '.css' ],
	replace: [ '-rtl.css' ],
	options: {
		scope: 'url',
		ignoreCase: false
	}
}
&lt;/pre&gt;&lt;p&gt;
Other options we should use:
&lt;/p&gt;
&lt;pre class="wiki"&gt;swapLeftRightInUrl: false,
swapLtrRtlInUrl: false,
autoRename: false, // Don't rename left/right in selectors
preserveDirectives: true, // Don't remove the directives (optional, CSSJanus does this default)
&lt;/pre&gt;&lt;p&gt;
Speaking of directives, CSSJanus has &lt;code&gt;/* @noflip */&lt;/code&gt; while RTLCSS uses &lt;code&gt;/* rtl:ignore */&lt;/code&gt; (&lt;a class="ext-link" href="https://github.com/MohammadYounes/rtlcss#supported-processing-directives"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;and others&lt;/a&gt;).
&lt;/p&gt;
&lt;h2 id="Thepatch"&gt;The patch&lt;/h2&gt;
&lt;p&gt;
The attached patch adds &lt;code&gt;"grunt-rtlcss": "~1.5.1",&lt;/code&gt; to our devDependencies, changes the RTL grunt task per above, and updates our stylesheets to use the new directive. Since RTLCSS supports &lt;code&gt;transform&lt;/code&gt; too, we have to add some additional directives, like &lt;code&gt;about.css&lt;/code&gt;. But we can also remove some, see &lt;code&gt;media-view.css&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I set this as a bug, since RTL text shadows are broken currently.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23221 (Multisite in subdirectory with root site address) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 14 Feb 2015 17:40:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23221#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23221#comment:33/1423935654424360</guid>
      <description>&lt;p&gt;
Essentially, we made a decision in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19796" title="#19796: task (blessed): Multisite installs should work with WordPress in a subdirectory (closed: fixed)"&gt;#19796&lt;/a&gt; that having /wp/ in the URL was ugly. But everything still works. Let me explain:
&lt;/p&gt;
&lt;p&gt;
Single site has no requirement for rewrite rule support in Apache, IIS, nginx, etc. Multisite, however, does. So for single site, you have home URL being example.com and site URL being example.com/wp/, where the files are. But in multisite, we can keep the files in example.com/wp/wp-admin/ (for example), set the URLs to example.com/wp-admin/, then use rewrite rules to rewrite /wp-admin/ to /wp/wp-admin/. This keeps URLs clean and the filesystem clean.
&lt;/p&gt;
&lt;p&gt;
We use this setup on wordpress.org. It works fine. Something like &lt;a class="ext-link" href="https://gist.github.com/danielbachhuber/9379135"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gist.github.com/danielbachhuber/9379135&lt;/a&gt; is only necessary if you &lt;em&gt;want&lt;/em&gt; /wp/ in the URL. If you do not, then when you set up a network with /wp/ being your site URL, everything will be handled for you in the rewrite rules that are generated.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31057 (Multisite ignores the WordPress install directory) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 14 Feb 2015 17:35:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31057#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31057#comment:10/1423935330416641</guid>
      <description>&lt;p&gt;
@FolioVision: You can put multisite files outside the root. It was implemented in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19796" title="#19796: task (blessed): Multisite installs should work with WordPress in a subdirectory (closed: fixed)"&gt;#19796&lt;/a&gt;. There's a reason I'm telling you what I'm telling you. You are not forced to keep all WordPress files in the root. We use this setup on wordpress.org. It works fine.
&lt;/p&gt;
&lt;p&gt;
In single site, you actually have a different site URL and home URL. In multisite, because there is a requirement to have rewrite rules, we decided to actually keep site URL and home URL the same, and instead internally rewrite (in Apache, nginx, IIS) /wp-admin/ to /wordpress/wp-admin/. That is what was implemented in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19796" title="#19796: task (blessed): Multisite installs should work with WordPress in a subdirectory (closed: fixed)"&gt;#19796&lt;/a&gt;. Point is, all that is required is that you update your rewrite rules and move your WordPress files.
&lt;/p&gt;
&lt;p&gt;
Please use &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/23221" title="#23221: defect (bug): Multisite in subdirectory with root site address (reopened)"&gt;#23221&lt;/a&gt; for any other updates.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30614 (Remove &lt;code&gt; tags from few more translatable string) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 14 Feb 2015 17:31:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30614#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30614#comment:7/1423935093866372</guid>
      <description>&lt;p&gt;
I have no idea. Probably? :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31279 (Bundled themes and .screen-reader-text) closed</title>
      
        <dc:creator>lancewillett</dc:creator>

      <pubDate>Sat, 14 Feb 2015 17:28:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31279#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31279#comment:7/1423934901588990</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/31464" title="Bundled themes: update CSS rules for `.screen-reader-text` to be ..."&gt;31464&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Bundled themes: update CSS rules for &lt;code&gt;.screen-reader-text&lt;/code&gt; to be consistent with current accessibility guidelines. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31279" title="#31279: enhancement: Bundled themes and .screen-reader-text (closed: fixed)"&gt;#31279&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [31464]: Bundled themes: update CSS rules for `.screen-reader-text` to be ...</title>
      
        <dc:creator>lancewillett</dc:creator>

      <pubDate>Sat, 14 Feb 2015 17:28:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/31464</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/31464/1423934899867128</guid>
      <description>&lt;p&gt;
Bundled themes: update CSS rules for &lt;code&gt;.screen-reader-text&lt;/code&gt; to be consistent with current accessibility guidelines. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31279" title="#31279: enhancement: Bundled themes and .screen-reader-text (closed: fixed)"&gt;#31279&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #31331 ($post-&gt;post_date displays current time if status is pending or draft) created</title>
      
        <dc:creator>danbrellis</dc:creator>

      <pubDate>Sat, 14 Feb 2015 17:11:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31331</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31331/1423933905150026</guid>
      <description>&lt;p&gt;
Create a new post and save as a draft or save as 'pending'. On single.php enter these lines of code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;global $post;
var_dump(date("Y-m-d H:i:s")); //current time
var_dump($post);
&lt;/pre&gt;&lt;p&gt;
If you wait about 5 minutes to refresh the front-end page after saving the post as draft/pending, you'll notice that the current time and the $post-&amp;gt;post_date are the same (accounting for timezone differences). Further more, if you refresh the page after another 5 minutes, the $post-&amp;gt;post_date will change. However, the $post-&amp;gt;post_date and $post-&amp;gt;post_modified are different. When comparing to the database values, the $post-&amp;gt;post_modified matches its database value, but $post-&amp;gt;post_date will continue to match the current time and &lt;strong&gt;not&lt;/strong&gt; what is in the database for &lt;code&gt;post_date&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
It seems to me that the post object should reflect what is in the database regardless of the post_status. If a post is draft/pending, it is inconsistent to use post_date to note when the post was originally created.
&lt;/p&gt;
&lt;p&gt;
I can see the code that is responsible for this is on wp-includes/query.php on line 3527-3528:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( 'future' != $status )
$this-&amp;gt;posts[0]-&amp;gt;post_date = current_time('mysql');
&lt;/pre&gt;&lt;p&gt;
I apologize if I'm thinking about this wrongly.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #17470 (Display warning when editing the page_for_posts page) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Feb 2015 16:10:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17470#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17470#comment:15/1423930218887060</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17470#comment:14" title="Comment 14"&gt;helen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If I recall correctly, the page template also does not apply.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yep: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15513" title="#15513: defect (bug): Home Page fails to use page template sometimes (closed: wontfix)"&gt;#15513&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27912 (Dashboard: Quick edit date fields are narrow to cover the full content) reopened</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Feb 2015 16:00:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27912#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27912#comment:8/1423929606031736</guid>
      <description>&lt;p&gt;
The time still looks a bit truncated for me in Firefox 35, see &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/27912/27912.png" title="Attachment '27912.png' in Ticket #27912"&gt;27912.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/27912/27912.png" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>27912.png attached to Ticket #27912</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Feb 2015 15:59:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27912/27912.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27912/27912.png/1423929556531163</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #31328 (Emoji in a slug fails to display) updated</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Sat, 14 Feb 2015 15:54:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31328#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31328#comment:3/1423929258544924</guid>
      <description>&lt;p&gt;
.2 works for me in both areas.
&lt;/p&gt;
&lt;p&gt;
Noting some oddity with different emoji (slug sometimes emoji, sometimes 197): &lt;a class="ext-link" href="https://cloudup.com/cT0d9frbDEa"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/cT0d9frbDEa&lt;/a&gt; but unsure of pattern or directly under this ticket. Pinged @pento too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18132 (Misleading message when deleting a user with no sites) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Feb 2015 15:48:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18132#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18132#comment:8/1423928928572441</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18132 (Misleading message when deleting a user with no sites) updated</title>
      
        <dc:creator>Idealien</dc:creator>

      <pubDate>Sat, 14 Feb 2015 15:48:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18132#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18132#comment:7/1423928886304894</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18132#comment:6" title="Comment 6"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We should just check if &lt;code&gt;count( $users ) &amp;gt; 1&lt;/code&gt; and display separate strings for each case.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Changes incorporated into 18132_checkCount.diff and tested on a fresh Network installation.
&lt;/p&gt;
&lt;p&gt;
Ready for has-patch and milestone 4.2 perhaps?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>18132_checkCount.diff attached to Ticket #18132</title>
      
        <dc:creator>Idealien</dc:creator>

      <pubDate>Sat, 14 Feb 2015 15:42:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18132/18132_checkCount.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18132/18132_checkCount.diff/1423928567366374</guid>
      <description>&lt;p&gt;
check if count( $users ) &amp;gt; 1 and display separate strings for each case.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19415 (wp_nav_menu showing private/conctepts posts without rights) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Feb 2015 15:40:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19415#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19415#comment:5/1423928436062267</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31319 (Use first translation iso instead of by key '1') updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Feb 2015 15:27:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31319#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31319#comment:12/1423927624495763</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/31319#comment:11" title="Comment 11"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Why? The ISO code is only used for the lang attribute. I could install Hazaragi without problems.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ah yes, you're right.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16264 (Add function get_pages_by_template()) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Sat, 14 Feb 2015 15:11:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16264#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16264#comment:14/1423926683508845</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16264#comment:13" title="Comment 13"&gt;F J Kaiser&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'd at least vote to return the full &lt;code&gt;\WP_Query&lt;/code&gt; object and not just the &lt;code&gt;$result-&amp;gt;posts&lt;/code&gt; property. Having access to the WP loop with &lt;code&gt;if ( have_posts() )&lt;/code&gt; is a bonus and it's usage should be encouraged.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hmm.  In that case I'd argue for &lt;code&gt;$args['output']&lt;/code&gt; where the default is &lt;code&gt;$result-&amp;gt;posts&lt;/code&gt; as I don't see it likely that this function would be used with The Loop.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The filter itself imho is useless. There's pretty much no chance to really pinpoint a specific call in its current state. Every callback would affect any call to the function everywhere. If there really has to be a filter, then I'd at least add the template name as second arg.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sure.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
About the arguments: I'd drop the &lt;code&gt;.php&lt;/code&gt; extension from the input. That could - if there really needs to be a filter - also used as second arg on the filter. And I still believe that &lt;code&gt;menu_order&lt;/code&gt; would be much more appropriate than using a publish date for orderby.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sure.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31138 (Backup of a plugin / theme directory.) updated</title>
      
        <dc:creator>aercolino</dc:creator>

      <pubDate>Sat, 14 Feb 2015 15:02:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31138#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31138#comment:18/1423926131264787</guid>
      <description>&lt;p&gt;
So two weeks went on... Meanwhile, does someone know the answer to this question?
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Why the automatic updates feature never automatically did a backup before automatically doing a delete?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I mean, it looks like I'm talking about something really difficult or impossible in WordPress for some hidden reason...
Or the reason is not hidden at all and I'm just... blind?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>28633.6.1.patch attached to Ticket #28633</title>
      
        <dc:creator>yantchi</dc:creator>

      <pubDate>Sat, 14 Feb 2015 13:29:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28633/28633.6.1.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28633/28633.6.1.patch/1423920591413644</guid>
      <description>&lt;p&gt;
Patch 28633.6 with fixed syntax errors (few missed closing parentheses and try-catch syntax)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #31319 (Use first translation iso instead of by key '1') updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 14 Feb 2015 13:17:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31319#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31319#comment:11/1423919870988703</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/31319#comment:10" title="Comment 10"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It does for Hazaragi, so would be nice to fix this either way.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Why? The ISO code is only used for the lang attribute. I could install Hazaragi without problems.
&lt;/p&gt;
&lt;p&gt;
We could change the API to return empty values of languages which don't have an ISO 639-1or ISO 639-2 code, but I don't want to print empty values for the lang attribute, so &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/31447" title="Avoid a PHP notice in `wp_install_language_form()` and ..."&gt;[31447]&lt;/a&gt; is the right fix here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16264 (Add function get_pages_by_template()) updated</title>
      
        <dc:creator>F J Kaiser</dc:creator>

      <pubDate>Sat, 14 Feb 2015 12:29:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16264#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16264#comment:13/1423916946103588</guid>
      <description>&lt;p&gt;
I'd at least vote to return the full &lt;code&gt;\WP_Query&lt;/code&gt; object and not just the &lt;code&gt;$result-&amp;gt;posts&lt;/code&gt; property. Having access to the WP loop with &lt;code&gt;if ( have_posts() )&lt;/code&gt; is a bonus and it's usage should be encouraged.
&lt;/p&gt;
&lt;p&gt;
The filter itself imho is useless. There's pretty much no chance to really pinpoint a specific call in its current state. Every callback would affect any call to the function everywhere. If there really has to be a filter, then I'd at least add the template name as second arg.
&lt;/p&gt;
&lt;p&gt;
About the arguments: I'd drop the &lt;code&gt;.php&lt;/code&gt; extension from the input. That could - if there really needs to be a filter - also used as second arg on the filter. And I still believe that &lt;code&gt;menu_order&lt;/code&gt; would be much more appropriate than using a publish date for orderby.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30935 (Explain check for ../wp-settings.php when getting ../wp-config.php) closed</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 14 Feb 2015 11:38:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30935#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30935#comment:5/1423913921848359</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/31463" title="Add inline documentation to clarify the reasoning behind the various ..."&gt;31463&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Add inline documentation to clarify the reasoning behind the various conditions that control how WP is loaded.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props mattheweppelsheimer for the initial patch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30935" title="#30935: enhancement: Explain check for ../wp-settings.php when getting ../wp-config.php (closed: fixed)"&gt;#30935&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [31463]: Add inline documentation to clarify the reasoning behind the various ...</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 14 Feb 2015 11:38:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/31463</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/31463/1423913921103892</guid>
      <description>&lt;p&gt;
Add inline documentation to clarify the reasoning behind the various conditions that control how WP is loaded.
&lt;/p&gt;
&lt;p&gt;
Props mattheweppelsheimer for the initial patch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30935" title="#30935: enhancement: Explain check for ../wp-settings.php when getting ../wp-config.php (closed: fixed)"&gt;#30935&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #30935 (Explain check for ../wp-settings.php when getting ../wp-config.php) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 14 Feb 2015 11:36:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30935#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30935#comment:4/1423913796734899</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22237 (Add keyboard shortcuts for collapse/expand, panel-back, and close to ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 14 Feb 2015 10:52:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22237#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22237#comment:15/1423911131215469</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1423911129000695"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #7580,​22768 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Feb 2015 09:44:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=7580%2C22768</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=7580%2C22768/1423907073455784</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7580" title="#7580: enhancement: Use Exif description to autofill the caption (closed: duplicate)"&gt;#7580&lt;/a&gt; was marked as a duplicate.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #31043 (wp_read_image_metadata is looking for invalid EXIF data) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Feb 2015 09:13:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31043#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31043#comment:5/1423905216801158</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/31462" title="Don't try to read a non-existent Exif:Title tag in ..."&gt;31462&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Don't try to read a non-existent Exif:Title tag in &lt;code&gt;wp_read_image_metadata()&lt;/code&gt;, as it's not a part of the Exif standard.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
props tyxla.&lt;br /&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31043" title="#31043: defect (bug): wp_read_image_metadata is looking for invalid EXIF data (closed: fixed)"&gt;#31043&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [31462]: Don't try to read a non-existent Exif:Title tag in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Feb 2015 09:13:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/31462</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/31462/1423905216115741</guid>
      <description>&lt;p&gt;
Don't try to read a non-existent Exif:Title tag in &lt;code&gt;wp_read_image_metadata()&lt;/code&gt;, as it's not a part of the Exif standard.
&lt;/p&gt;
&lt;p&gt;
props tyxla.
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31043" title="#31043: defect (bug): wp_read_image_metadata is looking for invalid EXIF data (closed: fixed)"&gt;#31043&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #31099 (Hook action on publishing custom post type also firing on update) closed</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 14 Feb 2015 09:10:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31099#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31099#comment:9/1423905029907431</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/31461" title="Update the descriptions for `transition_post_status()` and the ..."&gt;31461&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Update the descriptions for &lt;code&gt;transition_post_status()&lt;/code&gt; and the &lt;code&gt;{$new_stats}_{$post-&amp;gt;post_type}&lt;/code&gt; hook with more information about the expected behavior of transitioning post statuses.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In some cases, the values of &lt;code&gt;$old_status&lt;/code&gt; and &lt;code&gt;$new_status&lt;/code&gt; may be the same thing before and after a post status is "transitioned". An example of this would be the scenario where a published post is being updated: the status before and after the update both equal 'publish'.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Further, the documentation clarifies that if the intent is to only execute code when initially transitioningto a post status from something else, the 'transition_post_status' hook should be used instead of one of the dynamic hooks to avoid confusion.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props Idealien for the initial patch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31099" title="#31099: defect (bug): Hook action on publishing custom post type also firing on update (closed: fixed)"&gt;#31099&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [31461]: Update the descriptions for `transition_post_status()` and the ...</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 14 Feb 2015 09:10:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/31461</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/31461/1423905029312017</guid>
      <description>&lt;p&gt;
Update the descriptions for &lt;code&gt;transition_post_status()&lt;/code&gt; and the &lt;code&gt;{$new_stats}_{$post-&amp;gt;post_type}&lt;/code&gt; hook with more information about the expected behavior of transitioning post statuses.
&lt;/p&gt;
&lt;p&gt;
In some cases, the values of &lt;code&gt;$old_status&lt;/code&gt; and &lt;code&gt;$new_status&lt;/code&gt; may be the same thing before and after a post status is "transitioned". An example of this would be the scenario where a published post is being updated: the status before and after the update both equal 'publish'.
&lt;/p&gt;
&lt;p&gt;
Further, the documentation clarifies that if the intent is to only execute code when initially transitioningto a post status from something else, the 'transition_post_status' hook should be used instead of one of the dynamic hooks to avoid confusion.
&lt;/p&gt;
&lt;p&gt;
Props Idealien for the initial patch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31099" title="#31099: defect (bug): Hook action on publishing custom post type also firing on update (closed: fixed)"&gt;#31099&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #31043 (wp_read_image_metadata is looking for invalid EXIF data) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Feb 2015 08:55:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31043#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31043#comment:4/1423904148428734</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/13244" title="Improved IPTC and EXIF handling. Drag a wider net and also try to ..."&gt;[13244]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31330 (Customizer Controls with a `type` of `hidden` receive a margin) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Feb 2015 08:45:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31330#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31330#comment:3/1423903551687865</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/31460" title="Customizer: Remove margin for hidden controls.
props dlh.
fixes #31330."&gt;31460&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Customizer: Remove margin for hidden controls.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
props dlh.&lt;br /&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31330" title="#31330: defect (bug): Customizer Controls with a `type` of `hidden` receive a margin (closed: fixed)"&gt;#31330&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [31460]: Customizer: Remove margin for hidden controls.  props dlh. fixes #31330.</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Feb 2015 08:45:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/31460</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/31460/1423903550831426</guid>
      <description>&lt;p&gt;
Customizer: Remove margin for hidden controls.
&lt;/p&gt;
&lt;p&gt;
props dlh.
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31330" title="#31330: defect (bug): Customizer Controls with a `type` of `hidden` receive a margin (closed: fixed)"&gt;#31330&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #31330 (Customizer Controls with a `type` of `hidden` receive a margin) updated</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Sat, 14 Feb 2015 08:43:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31330#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31330#comment:2/1423903425281791</guid>
      <description>&lt;p&gt;
I've uploaded the screenshots here separately. Sorry, I thought I'd made them public on Evernote, but apparently not.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31330 (Customizer Controls with a `type` of `hidden` receive a margin) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Feb 2015 08:38:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31330#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31330#comment:1/1423903115287561</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looks like screenshots require an Evernote account, but the patch makes sense.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>customize-after.jpg attached to Ticket #31330</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Sat, 14 Feb 2015 08:37:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31330/customize-after.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31330/customize-after.jpg/1423903076562532</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>customize-before.jpg attached to Ticket #31330</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Sat, 14 Feb 2015 08:37:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31330/customize-before.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31330/customize-before.jpg/1423903058827889</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>31330.patch attached to Ticket #31330</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Sat, 14 Feb 2015 08:32:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31330/31330.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31330/31330.patch/1423902776229025</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #31330 (Customizer Controls with a `type` of `hidden` receive a margin) created</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Sat, 14 Feb 2015 08:32:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31330</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31330/1423902737333931</guid>
      <description>&lt;p&gt;
&lt;code&gt;WP_Customize_Control&lt;/code&gt;s with a &lt;code&gt;type&lt;/code&gt; of &lt;code&gt;hidden&lt;/code&gt; receive a &lt;code&gt;margin-bottom: 8px&lt;/code&gt;, creating a slight gap when they are next to visible controls.
&lt;/p&gt;
&lt;p&gt;
The attached patch removes the bottom margin on &lt;code&gt;.customize-control-hidden&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Example code and screenshots:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;function demo_customize_hidden( $wp_customize ) {
        $wp_customize-&amp;gt;add_section( 'demo_section', array(
                'title'    =&amp;gt; 'Example Section',
                'priority' =&amp;gt; 10,
        ) );
        $wp_customize-&amp;gt;add_setting( 'demo_first_text_setting' );
        $wp_customize-&amp;gt;add_setting( 'demo_second_text_setting' );
        $wp_customize-&amp;gt;add_setting( 'demo_hidden_setting' );
        $wp_customize-&amp;gt;add_setting( 'demo_third_text_setting' );
        $wp_customize-&amp;gt;add_control( 'demo_first_text_control', array(
                'label'    =&amp;gt; 'Demo First Text Setting',
                'section'  =&amp;gt; 'demo_section',
                'settings' =&amp;gt; 'demo_first_text_setting',
                'type'     =&amp;gt; 'text',
        ) );
        $wp_customize-&amp;gt;add_control( 'demo_second_text_control', array(
                'label'    =&amp;gt; 'Demo Second Text Setting',
                'section'  =&amp;gt; 'demo_section',
                'settings' =&amp;gt; 'demo_second_text_setting',
                'type'     =&amp;gt; 'text',
        ) );
        $wp_customize-&amp;gt;add_control( 'demo_hidden_control', array(
                'section'  =&amp;gt; 'demo_section',
                'settings' =&amp;gt; 'demo_hidden_setting',
                'type'     =&amp;gt; 'hidden',
        ) );
        $wp_customize-&amp;gt;add_control( 'demo_third_text_control', array(
                'label'    =&amp;gt; 'Demo Third Text Setting',
                'section'  =&amp;gt; 'demo_section',
                'settings' =&amp;gt; 'demo_third_text_setting',
                'type'     =&amp;gt; 'text',
        ) );
}
add_action( 'customize_register', 'demo_customize_hidden' );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Before:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://www.evernote.com/shard/s155/sh/2106ceba-8197-44df-8367-cc1aee8da17e/2682f9db55532564c9ae86c251117930/res/f4a035f0-9cee-4ed6-8cd5-6c79a0faaa1e/customize-before.jpg"&gt;&lt;img src="https://www.evernote.com/shard/s155/sh/2106ceba-8197-44df-8367-cc1aee8da17e/2682f9db55532564c9ae86c251117930/res/f4a035f0-9cee-4ed6-8cd5-6c79a0faaa1e/customize-before.jpg" alt="https://www.evernote.com/shard/s155/sh/2106ceba-8197-44df-8367-cc1aee8da17e/2682f9db55532564c9ae86c251117930/res/f4a035f0-9cee-4ed6-8cd5-6c79a0faaa1e/customize-before.jpg" crossorigin="anonymous" title="https://www.evernote.com/shard/s155/sh/2106ceba-8197-44df-8367-cc1aee8da17e/2682f9db55532564c9ae86c251117930/res/f4a035f0-9cee-4ed6-8cd5-6c79a0faaa1e/customize-before.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
After:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://www.evernote.com/shard/s155/sh/2106ceba-8197-44df-8367-cc1aee8da17e/2682f9db55532564c9ae86c251117930/res/0a0cf714-9446-4c3e-be5d-ca0aa3c2c4b1/customize-after.jpg"&gt;&lt;img src="https://www.evernote.com/shard/s155/sh/2106ceba-8197-44df-8367-cc1aee8da17e/2682f9db55532564c9ae86c251117930/res/0a0cf714-9446-4c3e-be5d-ca0aa3c2c4b1/customize-after.jpg" alt="https://www.evernote.com/shard/s155/sh/2106ceba-8197-44df-8367-cc1aee8da17e/2682f9db55532564c9ae86c251117930/res/0a0cf714-9446-4c3e-be5d-ca0aa3c2c4b1/customize-after.jpg" crossorigin="anonymous" title="https://www.evernote.com/shard/s155/sh/2106ceba-8197-44df-8367-cc1aee8da17e/2682f9db55532564c9ae86c251117930/res/0a0cf714-9446-4c3e-be5d-ca0aa3c2c4b1/customize-after.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #31319 (Use first translation iso instead of by key '1') updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Feb 2015 08:30:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31319#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31319#comment:10/1423902622127348</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/31319#comment:9" title="Comment 9"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Since it's only a PHP Notice, and doesn't block Language selection nor Installation
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It does for Hazaragi, so would be nice to fix this either way.
&lt;/p&gt;
&lt;p&gt;
Fixing the API to always return a non-empty ISO 639-1 code sounds like an option, but I'm not sure about repercussions for other languages.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31267 (Clean-up documentation for get_filesystem_method()) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 14 Feb 2015 08:26:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31267#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31267#comment:2/1423902372535237</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
See &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/31267#comment:1" title="Comment 1"&gt;comment:1&lt;/a&gt; for feedback on &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/31267/31267.diff" title="Attachment '31267.diff' in Ticket #31267"&gt;31267.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/31267/31267.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31043 (wp_read_image_metadata is looking for invalid EXIF data) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 14 Feb 2015 08:24:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31043#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31043#comment:3/1423902289441259</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31041 (Make wpautop documentation more verbose) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 14 Feb 2015 08:23:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31041#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31041#comment:2/1423902216795819</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looks like the patch needs a refresh.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31319 (Use first translation iso instead of by key '1') closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 14 Feb 2015 08:19:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31319#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31319#comment:9/1423901947289002</guid>
      <description>fixed: &lt;p&gt;
Since it's only a PHP Notice, and doesn't block Language selection nor Installation, I don't think this warrants inclusion in a minor release.
&lt;/p&gt;
&lt;p&gt;
I've already bumped several other PHP Notice-only issues out.
&lt;/p&gt;
&lt;p&gt;
If it makes sense to, we could set the API to return &lt;code&gt;$language['iso'][1] = $language['iso'][1] ? $language['iso'][1] : $language['iso'][2]&lt;/code&gt; instead.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #31319 (Use first translation iso instead of by key '1') updated</title>
      
        <dc:creator>dollar_dad</dc:creator>

      <pubDate>Sat, 14 Feb 2015 07:40:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31319#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31319#comment:8/1423899603332700</guid>
      <description>&lt;p&gt;
Tested this patch and can confirm that it works
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31319 (Use first translation iso instead of by key '1') reopened</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Feb 2015 07:28:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31319#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31319#comment:7/1423898924042476</guid>
      <description>&lt;p&gt;
Reopening for 4.1.1 consideration.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Tickets #31319,​31329 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Feb 2015 07:27:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=31319%2C31329</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=31319%2C31329/1423898870452964</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31319" title="#31319: defect (bug): Use first translation iso instead of by key '1' (closed: fixed)"&gt;#31319&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #31329 (Notice: Undefined offset: 1 in wp-includes/l10n.php on line 945) created</title>
      
        <dc:creator>dollar_dad</dc:creator>

      <pubDate>Sat, 14 Feb 2015 07:22:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31329</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31329/1423898547476749</guid>
      <description>&lt;p&gt;
In the wp-config.php I have define('WP_DEBUG', true);
&lt;/p&gt;
&lt;p&gt;
Viewing /wp-admin/options-general.php I see this error instead of the drop down for site language.
&lt;/p&gt;
&lt;p&gt;
Notice: Undefined offset: 1 in wp-includes/l10n.php on line 945
&lt;/p&gt;
&lt;p&gt;
This a fresh install on my localhost with no plugins installed or previously activated.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #31099 (Hook action on publishing custom post type also firing on update) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 14 Feb 2015 06:35:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31099#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31099#comment:8/1423895729526021</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31328 (Emoji in a slug fails to display) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Feb 2015 05:57:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31328#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31328#comment:2/1423893432166011</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/31328/31328.patch" title="Attachment '31328.patch' in Ticket #31328"&gt;31328.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/31328/31328.patch" title="Download"&gt;​&lt;/a&gt; fixes &lt;code&gt;utf8_uri_encode()&lt;/code&gt; to support 4-byte sequences.
&lt;/p&gt;
&lt;p&gt;
This resolves the issue on display, but still breaks on editing, see &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/31328/31328.edit-slug.png" title="Attachment '31328.edit-slug.png' in Ticket #31328"&gt;31328.edit-slug.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/31328/31328.edit-slug.png" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/31328/31328.2.patch" title="Attachment '31328.2.patch' in Ticket #31328"&gt;31328.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/31328/31328.2.patch" title="Download"&gt;​&lt;/a&gt; (based on a &lt;a class="ext-link" href="http://stackoverflow.com/questions/12807176/php-writing-a-simple-removeemoji-function"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Stack Overflow thread&lt;/a&gt;) also strips Emoji in &lt;code&gt;sanitize_title_with_dashes()&lt;/code&gt;, similarly to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/18705" title="Strip a number of special characters in sanitize_title_with_dashes on ..."&gt;[18705]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/20686" title="Add characters to be stripped or replaced in ..."&gt;[20686]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>31328.edit-slug.png attached to Ticket #31328</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Feb 2015 05:51:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31328/31328.edit-slug.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31328/31328.edit-slug.png/1423893088929657</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>31328.2.patch attached to Ticket #31328</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Feb 2015 05:51:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31328/31328.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31328/31328.2.patch/1423893078175549</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>31328.patch attached to Ticket #31328</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Feb 2015 05:51:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31328/31328.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31328/31328.patch/1423893070270629</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #31328 (Emoji in a slug fails to display) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Feb 2015 04:41:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31328#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31328#comment:1/1423888893407317</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31328 (Emoji in a slug fails to display) created</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Sat, 14 Feb 2015 04:31:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31328</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31328/1423888280915559</guid>
      <description>&lt;p&gt;
When using emoji in a place that generates a slug (category name, post title, etc), if the emoji is saved to the database as HTML entities, it will fail to display in the UI.
&lt;/p&gt;
&lt;p&gt;
Example: Save a draft/publish with post title is "WordPress {sparkling_heart emoji} Emoji".
URL/slug will be "wordpress-%f0%9f%92-emoji"
On post.php, the slug will not display: &lt;a class="ext-link" href="https://cloudup.com/cASF4rxUNhF"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/cASF4rxUNhF&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Second example: Save a new category with the name being an emoji.
Slug is saved to the db in the HTML entity format ("%f0%9f%92").
On edit-terms.php, no slug will be displayed.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18084 (Comments Page Rewrite Customization) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Feb 2015 03:47:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18084#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18084#comment:18/1423885622991759</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/31459" title="Replace hardcoded usage of `comment-page` with the comment pagination ..."&gt;31459&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Replace hardcoded usage of &lt;code&gt;comment-page&lt;/code&gt; with the comment pagination base.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
props johnbillion, SergeyBiryukov, webord.&lt;br /&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18084" title="#18084: enhancement: Comments Page Rewrite Customization (closed: fixed)"&gt;#18084&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [31459]: Replace hardcoded usage of `comment-page` with the comment pagination ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Feb 2015 03:47:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/31459</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/31459/1423885622170852</guid>
      <description>&lt;p&gt;
Replace hardcoded usage of &lt;code&gt;comment-page&lt;/code&gt; with the comment pagination base.
&lt;/p&gt;
&lt;p&gt;
props johnbillion, SergeyBiryukov, webord.
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18084" title="#18084: enhancement: Comments Page Rewrite Customization (closed: fixed)"&gt;#18084&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #21219 (get_post_type_archive_link in multisite context: struct issue) closed</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sat, 14 Feb 2015 03:41:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21219#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21219#comment:6/1423885260005061</guid>
      <description>wontfix: &lt;p&gt;
I think a custom workaround here is the right solution. Generating rewrite rules for a site on &lt;code&gt;switch_to_blog()&lt;/code&gt; would involve too much overhead, though it is appealing. See also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20861" title="#20861: defect (bug): switch_to_blog() breaks custom post type permalinks (closed: wontfix)"&gt;#20861&lt;/a&gt;, which is very related.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #31099 (Hook action on publishing custom post type also firing on update) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 14 Feb 2015 03:34:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31099#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31099#comment:7/1423884883923210</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by idealien. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1423884881004615"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31099 (Hook action on publishing custom post type also firing on update) updated</title>
      
        <dc:creator>Idealien</dc:creator>

      <pubDate>Sat, 14 Feb 2015 03:31:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31099#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31099#comment:6/1423884684472154</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/31099#comment:3" title="Comment 3"&gt;DrewAPicture&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
One thing we could do here is adjust the docs for the &lt;code&gt;{$new_status}_{$post-&amp;gt;post_type}&lt;/code&gt;, &lt;code&gt;{$old_status}_to_{$new_status}&lt;/code&gt;, and &lt;code&gt;transition_post_status&lt;/code&gt; hooks to reflect the expected behavior of the post status not changing when published posts are updated.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
good-first-bug meet my-first-patch :)
&lt;/p&gt;
&lt;p&gt;
I submit 31099Docs.patch which adds details for publish_{$post-&amp;gt;type} suggesting transition_post_status which answers the scenario of the original defect.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>31099_Docs.patch attached to Ticket #31099</title>
      
        <dc:creator>Idealien</dc:creator>

      <pubDate>Sat, 14 Feb 2015 03:25:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31099/31099_Docs.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31099/31099_Docs.patch/1423884312797429</guid>
      <description>&lt;p&gt;
Update to docs of {$old_status}_to_{$new_status}
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22128 (Adding upload mimetype in Multisite does not work if mimetype is not ...) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sat, 14 Feb 2015 03:16:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22128#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22128#comment:23/1423883782756157</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Overall I tend to agree with the thought that this input is of little value for most installations. It gets especially annoying for both parties (network admin and dev) when a non whitelisted filetype (e.g. EPS) is added to the input field and continues to generate support requests until someone realizes that the mime type hasn't been added. This actually happened today for me. :)
&lt;/p&gt;
&lt;p&gt;
That said - I can see a benefit to not allowing uploads of the ~90 mime types whitelisted by default, especially when not all fit in the "media library" box. Some UI is useful for reducing the current list, but that UI will likely be used anywhere from 0 to 1 times by the majority of multisite configurations.
&lt;/p&gt;
&lt;p&gt;
As for the initial subject of this ticket..it's a good thing that a whitelist exists and blocks invalid values.
&lt;/p&gt;
&lt;p&gt;
One of the "expected behaviors" listed was:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Or warn the admin that this extension is unknown and more info (such as the full mime type) is needed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think that would be a good solution to this ticket. A plugin would be a perfect place to iterate possible UI solutions, though patches here would be helpful as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31218 (nav-menu.js menu item added event) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 14 Feb 2015 03:15:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31218#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31218#comment:7/1423883717601736</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by welcher. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1423883715004608"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16264 (Add function get_pages_by_template()) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Sat, 14 Feb 2015 03:13:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16264#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16264#comment:12/1423883630804911</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16264#comment:11" title="Comment 11"&gt;helen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm fine with leaving this ticket open and assessing demand, whether proactively or not,
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
(noting that a tax query typically performs better than a meta query, for what that's worth),
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You are aware that page templates are stored by WordPress core as post meta fields with a key of &lt;code&gt;'_wp_page_template'&lt;/code&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31262 (Tests_DB_Charset failures) reopened</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Feb 2015 03:12:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31262#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31262#comment:4/1423883543598574</guid>
      <description>&lt;p&gt;
Same environment, still seeing failures:
&lt;/p&gt;
&lt;pre class="wiki"&gt;1) Tests_DB_Charset::test_strip_invalid_text with data set #5 (array(array('koi8r', 'ýordòress', true)), array(array('koi8r', 'ýordòress', true)), 'koi8r')
koi8r
Failed asserting that Array (
    0 =&amp;gt; Array (
        'charset' =&amp;gt; 'koi8r'
        'value' =&amp;gt; '?ord?ress'
        'db' =&amp;gt; true
    )
) is identical to Array (
    0 =&amp;gt; Array (
        'charset' =&amp;gt; 'koi8r'
        'value' =&amp;gt; 'ýordòress'
        'db' =&amp;gt; true
    )
).
S:\home\wordpress\develop\tests\phpunit\tests\db\charset.php:126
S:\usr\local\php5\phpunit:46
2) Tests_DB_Charset::test_strip_invalid_text with data set #6 (array(array('hebrew', 'ùord÷ress', true)), array(array('hebrew', 'ùord÷ress', true)), 'hebrew')
hebrew
Failed asserting that Array (
    0 =&amp;gt; Array (
        'charset' =&amp;gt; 'hebrew'
        'value' =&amp;gt; '?ord?ress'
        'db' =&amp;gt; true
    )
) is identical to Array (
    0 =&amp;gt; Array (
        'charset' =&amp;gt; 'hebrew'
        'value' =&amp;gt; 'ùord÷ress'
        'db' =&amp;gt; true
    )
).
S:\home\wordpress\develop\tests\phpunit\tests\db\charset.php:126
S:\usr\local\php5\phpunit:46
3) Tests_DB_Charset::test_strip_invalid_text with data set #9 (array(array('latin1', 'ðŸŽ·'), array('ascii', 'Hello World'), array('utf8', 'Hâ‚¬lloðŸ˜ˆWorldÂ¢'), array('utf8mb3', 'Hâ‚¬lloðŸ˜ˆWorldÂ¢'), array('utf8mb4', 'Hâ‚¬lloðŸ˜ˆWorldÂ¢'), array('koi8r', 'ýordòress', true), array('hebrew', 'ùord÷ress', true), array(false, 100), array('big5', 'a¦@b')), array(array('latin1', 'ðŸŽ·'), array('ascii', 'Hello World'), array('utf8', 'Hâ‚¬lloWorldÂ¢'), array('utf8mb3', 'Hâ‚¬lloWorldÂ¢'), array('utf8mb4', 'Hâ‚¬lloðŸ˜ˆWorldÂ¢'), array('koi8r', 'ýordòress', true), array('hebrew', 'ùord÷ress', true), array(false, 100), array('big5', 'a¦@b')), 'multiple fields/charsets')
multiple fields/charsets
Failed asserting that Array (
    0 =&amp;gt; Array (
        'charset' =&amp;gt; 'latin1'
        'value' =&amp;gt; 'ðŸŽ·'
    )
    1 =&amp;gt; Array (
        'charset' =&amp;gt; 'ascii'
        'value' =&amp;gt; 'Hello World'
    )
    2 =&amp;gt; Array (
        'charset' =&amp;gt; 'utf8'
        'value' =&amp;gt; 'Hâ‚¬lloWorldÂ¢'
    )
    3 =&amp;gt; Array (
        'charset' =&amp;gt; 'utf8mb3'
        'value' =&amp;gt; 'Hâ‚¬lloWorldÂ¢'
    )
    4 =&amp;gt; Array (
        'charset' =&amp;gt; 'utf8mb4'
        'value' =&amp;gt; 'Hâ‚¬lloðŸ˜ˆWorldÂ¢'
    )
    5 =&amp;gt; Array (
        'charset' =&amp;gt; 'koi8r'
        'value' =&amp;gt; '?ord?ress'
        'db' =&amp;gt; true
    )
    6 =&amp;gt; Array (
        'charset' =&amp;gt; 'hebrew'
        'value' =&amp;gt; '?ord?ress'
        'db' =&amp;gt; true
    )
    7 =&amp;gt; Array (
        'charset' =&amp;gt; false
        'value' =&amp;gt; 100
    )
    8 =&amp;gt; Array (
        'charset' =&amp;gt; 'big5'
        'value' =&amp;gt; 'a¦@b'
    )
) is identical to Array (
    0 =&amp;gt; Array (
        'charset' =&amp;gt; 'latin1'
        'value' =&amp;gt; 'ðŸŽ·'
    )
    1 =&amp;gt; Array (
        'charset' =&amp;gt; 'ascii'
        'value' =&amp;gt; 'Hello World'
    )
    2 =&amp;gt; Array (
        'charset' =&amp;gt; 'utf8'
        'value' =&amp;gt; 'Hâ‚¬lloWorldÂ¢'
    )
    3 =&amp;gt; Array (
        'charset' =&amp;gt; 'utf8mb3'
        'value' =&amp;gt; 'Hâ‚¬lloWorldÂ¢'
    )
    4 =&amp;gt; Array (
        'charset' =&amp;gt; 'utf8mb4'
        'value' =&amp;gt; 'Hâ‚¬lloðŸ˜ˆWorldÂ¢'
    )
    5 =&amp;gt; Array (
        'charset' =&amp;gt; 'koi8r'
        'value' =&amp;gt; 'ýordòress'
        'db' =&amp;gt; true
    )
    6 =&amp;gt; Array (
        'charset' =&amp;gt; 'hebrew'
        'value' =&amp;gt; 'ùord÷ress'
        'db' =&amp;gt; true
    )
    7 =&amp;gt; Array (
        'charset' =&amp;gt; false
        'value' =&amp;gt; 100
    )
    8 =&amp;gt; Array (
        'charset' =&amp;gt; 'big5'
        'value' =&amp;gt; 'a¦@b'
    )
)
&lt;/pre&gt;</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #16264 (Add function get_pages_by_template()) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Sat, 14 Feb 2015 03:01:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16264#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16264#comment:11/1423882906334125</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16264#comment:10" title="Comment 10"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
I have access to those standards, but others probably don't (private site) :) I'm fine with leaving this ticket open and assessing demand, whether proactively or not, but my feeling based on code I've written and audited is that this is not in high demand, not so bad via a &lt;code&gt;WP_Query&lt;/code&gt; (noting that a tax query typically performs better than a meta query, for what that's worth), and thus IMO reasonably left to be implemented as a helper function as needed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5305 (permalinks broken when article name is numeric) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 14 Feb 2015 02:33:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5305#comment:61</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5305#comment:61/1423881199632893</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by valendesigns. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1423881197004590"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24674 (WP_Query::is_page() should use stricter comparison) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 14 Feb 2015 02:08:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24674#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24674#comment:26/1423879727856006</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/31458" title="More careful type conversion in `WP_Query` `is_*()` methods.
 ..."&gt;31458&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
More careful type conversion in &lt;code&gt;WP_Query&lt;/code&gt; &lt;code&gt;is_*()&lt;/code&gt; methods.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;is_array( 1, '1-foo' )&lt;/code&gt; returns true, which means that &lt;code&gt;is_page( 1 )&lt;/code&gt;&lt;br /&gt;
was returning true when on a page with the slug '1-foo'. We avoid this odd&lt;br /&gt;
behavior by casting the queried object ID to a string before testing against&lt;br /&gt;
the value passed to the conditional function.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This also helps to avoid a problem where an arbitrary value for &lt;code&gt;$page&lt;/code&gt; would&lt;br /&gt;
cause &lt;code&gt;is_page( $page )&lt;/code&gt; to return true if the query had been manipulated by&lt;br /&gt;
a plugin to show that the current page's ID is 0.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props boonebgorges, r-a-y, nunomorgadinho, wonderboymusic, clifgriffin.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24674" title="#24674: defect (bug): WP_Query::is_page() should use stricter comparison (closed: fixed)"&gt;#24674&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [31458]: More careful type conversion in `WP_Query` `is_*()` methods.  ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 14 Feb 2015 02:08:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/31458</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/31458/1423879726825335</guid>
      <description>&lt;p&gt;
More careful type conversion in &lt;code&gt;WP_Query&lt;/code&gt; &lt;code&gt;is_*()&lt;/code&gt; methods.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;is_array( 1, '1-foo' )&lt;/code&gt; returns true, which means that &lt;code&gt;is_page( 1 )&lt;/code&gt;
was returning true when on a page with the slug '1-foo'. We avoid this odd
behavior by casting the queried object ID to a string before testing against
the value passed to the conditional function.
&lt;/p&gt;
&lt;p&gt;
This also helps to avoid a problem where an arbitrary value for &lt;code&gt;$page&lt;/code&gt; would
cause &lt;code&gt;is_page( $page )&lt;/code&gt; to return true if the query had been manipulated by
a plugin to show that the current page's ID is 0.
&lt;/p&gt;
&lt;p&gt;
Props boonebgorges, r-a-y, nunomorgadinho, wonderboymusic, clifgriffin.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24674" title="#24674: defect (bug): WP_Query::is_page() should use stricter comparison (closed: fixed)"&gt;#24674&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #24674 (WP_Query::is_page() should use stricter comparison) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 14 Feb 2015 02:07:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24674#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24674#comment:25/1423879655232482</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
We should be able to specifically tell the difference between a numeric string and a non-numeric string pretty easily.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Casting the queried object ID to a string before testing against it has this effect. Basically, if you pass either 123 or '123' to &lt;code&gt;is_page()&lt;/code&gt;, the following checks happen:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Is the ID of the current page 123? If so, return true.
&lt;/li&gt;&lt;li&gt;Is the post_title of the current page 123? If so, return true.
&lt;/li&gt;&lt;li&gt;Is the post_name of the current page 123? If so, return true.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
The string-casting trick ensures that there's no funny business in check (1).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18132 (Misleading message when deleting a user with no sites) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 14 Feb 2015 01:37:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18132#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18132#comment:6/1423877856487243</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
A couple of issues with &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/18132/18132_refreshed.diff" title="Attachment '18132_refreshed.diff' in Ticket #18132"&gt;18132_refreshed.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/18132/18132_refreshed.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;We can't have 'user' and 'following users' as separate strings injected into other strings. Some languages require the whole string to be translated differently in each case.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;_n()&lt;/code&gt; is not actually an ideal solution here. In some languages, the first form ("the user") can be used for 21, 31, etc., but it doesn't necessarily mean it's a singular form (it needs to be translated differently when dealing with 1 user vs. 21 users). See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28502#comment:5" title="Comment 5 for #28502: defect (bug): 'User deleted' message needs context (closed: fixed)"&gt;comment:5:ticket:28502&lt;/a&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
We should just check if &lt;code&gt;count( $users ) &amp;gt; 1&lt;/code&gt; and display separate strings for each case.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18132 (Misleading message when deleting a user with no sites) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 14 Feb 2015 01:16:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18132#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18132#comment:5/1423876588815751</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by sergeybiryukov. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1423876587004580"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28502 ('User deleted' message needs context) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 14 Feb 2015 01:15:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28502#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28502#comment:13/1423876500274733</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by sergeybiryukov. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1423876497004575"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28633 (Generate better random numbers) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 14 Feb 2015 00:55:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28633#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28633#comment:32/1423875300936691</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by sarciszewski. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1423875298004565"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>28633_with_md5.patch attached to Ticket #28633</title>
      
        <dc:creator>sarciszewski</dc:creator>

      <pubDate>Sat, 14 Feb 2015 00:54:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28633/28633_with_md5.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28633/28633_with_md5.patch/1423875271010362</guid>
      <description>&lt;p&gt;
Same as previous patch but without replacing the md5(time()) hack
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #31234 (Update wp-admin default colors) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 14 Feb 2015 00:15:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31234#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31234#comment:19/1423872911621323</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #forums by otto42. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/forums/p1423872910003700"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31327 (Shiny Updates: Plugins installed on Multisite shouldn't auto-activate ...) created</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 14 Feb 2015 00:14:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31327</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31327/1423872865862331</guid>
      <description>&lt;p&gt;
In testing the installation part of the new shiny updates functionality in trunk, I discovered that installing a plugin via the Network Admin ended up installing the plugin and auto-activating it on the primary site. Probably shouldn't do that.
&lt;/p&gt;
&lt;p&gt;
Steps to reproduce (multisite required):
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Navigation to Network Admin &amp;gt; Plugins &amp;gt; Add New
&lt;/li&gt;&lt;li&gt;Install a new plugin by clicking the "Install Now" button
&lt;/li&gt;&lt;li&gt;AJAX in the button should indicate the plugin is being installed
&lt;/li&gt;&lt;li&gt;Navigate to Primary Site &amp;gt; Plugins
&lt;/li&gt;&lt;li&gt;Note that the recently-installed plugin has been installed and is activated
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29989 (Hide Media Buttons on small screens) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 14 Feb 2015 00:03:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29989#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29989#comment:39/1423872214565441</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by marcelomazza. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1423872212004556"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>