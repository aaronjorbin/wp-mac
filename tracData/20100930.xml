<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #14993 (make_clickable issue with ! character in URL) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Thu, 30 Sep 2010 22:59:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14993#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14993#comment:7/1285887599000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14993#comment:6" title="Comment 6"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Example of the current implementation on wordpress.com: &lt;a class="ext-link" href="http://hakre.wordpress.com/2010/09/29/washtml-php-library/#comment-954"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Link&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think &lt;code&gt;?&lt;/code&gt; being a part of the link in that example is a bug. I like how GMail formatted your example (I received your comment via e-mail). Google.com was properly links, but neither the &lt;code&gt;?&lt;/code&gt; nor the &lt;code&gt;!&lt;/code&gt; were.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14582 (Save/Publish spinners should be separate) updated</title>
      
        <dc:creator>JohnONolan</dc:creator>

      <pubDate>Thu, 30 Sep 2010 22:43:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14582#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14582#comment:8/1285886633000000</guid>
      <description>&lt;p&gt;
Do you mean move everything to a single class, eliminating both the multiple IDs and the inline CSS ? I'd support that.&lt;br /&gt;
&lt;br /&gt;
One of the big problems with WP's CSS is that IDs are getting added in patches like this on a regular basis, bloat builds up over time with hundreds of single use IDs.&lt;br /&gt;
&lt;br /&gt;
Hopefully with the CSS refactor we can make more smart/dynamic classes for use in multiple instances
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15003 (Upgraded WordPress, Code appearing) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 30 Sep 2010 22:37:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15003#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15003#comment:1/1285886268000000</guid>
      <description>invalid: &lt;p&gt;
Trac is for developing the next version of WordPress.
&lt;/p&gt;
&lt;p&gt;
Please use the support forums instead:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14582 (Save/Publish spinners should be separate) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 30 Sep 2010 22:37:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14582#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14582#comment:7/1285886243000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Let's move these to a class. The visibility bit should be the default in CSS as well, with JS then toggling it.
&lt;/p&gt;
&lt;p&gt;
This keeps bugging me every time I save a post draft, so I'm likely going to just run with this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15003 (Upgraded WordPress, Code appearing) created</title>
      
        <dc:creator>astriker</dc:creator>

      <pubDate>Thu, 30 Sep 2010 22:30:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15003</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15003/1285885842000000</guid>
      <description>&lt;p&gt;
I have changed my theme, deactivated all plugins and I have extra code showing on my blog now that I clicked update. It shows update core from nightly build and such, so i do believe related to the upgrade.
&lt;/p&gt;
&lt;p&gt;
The link is -
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://astriker.com/blog/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://astriker.com/blog/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14711 (Indexes for comment_author_email and user_id) updated</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Thu, 30 Sep 2010 21:42:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14711#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14711#comment:9/1285882927000000</guid>
      <description>&lt;p&gt;
Code for this recently hit the Akismet WP plugin and it makes for queries that look like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT COUNT( * )
FROM wp_comments
WHERE user_id = 5
AND comment_approved = 1
&lt;/pre&gt;&lt;p&gt;
and:
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT COUNT( * )
FROM wp_comments
WHERE comment_author_email = 'joseph@josephscott.org'
AND comment_author = 'Joseph Scott'
AND comment_author_url = 'http://josephscott.org/'
AND comment_approved = 1
&lt;/pre&gt;&lt;p&gt;
The first is for comments left by users that were logged in, the second for those who weren't logged in.  Unfortunately both of these queries do full table scans.  Two new indexes that would help: user_id and comment_author_email (this seemed like the most likely to get a hit vs. author, author_url).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15002 (unfiltered_html capability is not observed when set explicitly for role) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 30 Sep 2010 21:37:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15002#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15002#comment:2/1285882667000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15002 (unfiltered_html capability is not observed when set explicitly for role) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 30 Sep 2010 21:37:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15002#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15002#comment:1/1285882656000000</guid>
      <description>&lt;p&gt;
You're missing an important section of the code that follows. There is no break; there. The comment specifically says it falls through:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	case 'unfiltered_html':
		// Disallow unfiltered_html for all users, even admins and super admins.
		if ( defined('DISALLOW_UNFILTERED_HTML') &amp;amp;&amp;amp; DISALLOW_UNFILTERED_HTML ) {
			$caps[] = 'do_not_allow';
			break;
		}
		// Fall through if not DISALLOW_UNFILTERED_HTML
	case 'delete_user':
	case 'delete_users':
		// If multisite these caps are allowed only for super admins.
		if ( is_multisite() &amp;amp;&amp;amp; !is_super_admin() )
			$caps[] = 'do_not_allow';
		else
			$caps[] = $cap;
		break;
&lt;/pre&gt;&lt;p&gt;
That might as well read this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	case 'unfiltered_html':
		// Disallow unfiltered_html for all users, even admins and super admins.
		if ( defined('DISALLOW_UNFILTERED_HTML') &amp;amp;&amp;amp; DISALLOW_UNFILTERED_HTML ) {
			$caps[] = 'do_not_allow';
			break;
		}
		// If multisite these caps are allowed only for super admins.
		if ( is_multisite() &amp;amp;&amp;amp; !is_super_admin() )
			$caps[] = 'do_not_allow';
		else
			$caps[] = $cap;
		break;
&lt;/pre&gt;&lt;p&gt;
I'm thinking you have something else going on which is why this isn't working for you.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14711 (Indexes for comment_author_email and user_id) updated</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Thu, 30 Sep 2010 21:37:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14711#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14711#comment:8/1285882640000000</guid>
      <description>&lt;p&gt;
@hakre: we'd like to use this in the Akismet plugin, see &lt;a class="ext-link" href="http://plugins.trac.wordpress.org/ticket/1198"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://plugins.trac.wordpress.org/ticket/1198&lt;/a&gt; and the corresponding changeset &lt;a class="ext-link" href="http://plugins.trac.wordpress.org/changeset/294390"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://plugins.trac.wordpress.org/changeset/294390&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
That query will almost certainly change before the plugin release, but it'll give you an idea of what we're trying to do and demonstrate that there's a practical need.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14994 (Introduce a way to identify a hook in progress) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 30 Sep 2010 21:24:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14994#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14994#comment:3/1285881864000000</guid>
      <description>&lt;p&gt;
Isn't there an in_filter() function?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15002 (unfiltered_html capability is not observed when set explicitly for role) created</title>
      
        <dc:creator>phlux0r</dc:creator>

      <pubDate>Thu, 30 Sep 2010 21:16:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15002</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15002/1285881407000000</guid>
      <description>&lt;p&gt;
When the unfiltered_html capability is explicitly set for a user role, WP does not observe it.
&lt;/p&gt;
&lt;p&gt;
In wp-includes/capabilities.php around line 1021 the code is:
&lt;/p&gt;
&lt;pre class="wiki"&gt;        case 'unfiltered_html':
                // Disallow unfiltered_html for all users, even admins and super admins.
                if ( defined('DISALLOW_UNFILTERED_HTML') &amp;amp;&amp;amp; DISALLOW_UNFILTERED_HTML ) {
                        $caps[] = 'do_not_allow';
                        break;
                }
                // Fall through if not DISALLOW_UNFILTERED_HTML
&lt;/pre&gt;&lt;p&gt;
My fix is to change it to:
&lt;/p&gt;
&lt;pre class="wiki"&gt;        case 'unfiltered_html':
                // Disallow unfiltered_html for all users, even admins and super admins.
                if ( defined('DISALLOW_UNFILTERED_HTML') &amp;amp;&amp;amp; DISALLOW_UNFILTERED_HTML ) {
                        $caps[] = 'do_not_allow';
                        break;
                } else { // FIX to observe the unfiltered_html capability assigned to role
                        $caps[] = $cap;
                        break;
                }
                // Fall through if not DISALLOW_UNFILTERED_HTML
&lt;/pre&gt;&lt;p&gt;
Cheers, Robert
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11905 (trac spam) updated</title>
      
        <dc:creator>dangayle</dc:creator>

      <pubDate>Thu, 30 Sep 2010 21:08:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11905#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11905#comment:5/1285880929000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11905#comment:4" title="Comment 4"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Then I deal with the very rare spam comment flood manually.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I get viagra emails from trac daily. It makes me start to question myself. (lol)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14582 (Save/Publish spinners should be separate) updated</title>
      
        <dc:creator>JohnONolan</dc:creator>

      <pubDate>Thu, 30 Sep 2010 21:03:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14582#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14582#comment:6/1285880602000000</guid>
      <description>&lt;p&gt;
On 2nd review I'd like to question why we need a new ID and inline styles add in this patch?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11905 (trac spam) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 30 Sep 2010 21:00:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11905#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11905#comment:4/1285880447000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11905#comment:3" title="Comment 3"&gt;dangayle&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Please, the spam from the WordPress trac generates a LOT of emails if you're subscribed to the &lt;a class="ext-link" href="http://lists.automattic.com/mailman/listinfo/wp-trac"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;wp-trac mailing list&lt;/a&gt;. It makes it really difficult for gmail to distinguish what is real and what is spam, so the filter doesn't work the greatest.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Surely. For Gmail, my wp-trac filter is set to never send any of them to spam if they're from the proper email address. Then I deal with the very rare spam comment flood manually.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Just install &lt;a class="ext-link" href="http://trac.edgewall.org/wiki/SpamFilter"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;SpamFilter&lt;/a&gt; or something. It even uses Akismet!
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We have Akismet installed. It wasn't working right last time we had a spam issue, but I think Barry has addressed that.
&lt;/p&gt;
&lt;p&gt;
Whenever we do have an issue, we'll all notice it pretty quickly thanks to wp-trac. (If not, hop into #wordpress-dev.) We can then make Trac read-only temporarily, block the dotorg account, and run a query to remove the comments.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11905 (trac spam) updated</title>
      
        <dc:creator>dangayle</dc:creator>

      <pubDate>Thu, 30 Sep 2010 20:50:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11905#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11905#comment:3/1285879842000000</guid>
      <description>&lt;p&gt;
Please, the spam from the WordPress trac generates a LOT of emails if you're subscribed to the &lt;a class="ext-link" href="http://lists.automattic.com/mailman/listinfo/wp-trac"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;wp-trac mailing list&lt;/a&gt;. It makes it really difficult for gmail to distinguish what is real and what is spam, so the filter doesn't work the greatest.
&lt;/p&gt;
&lt;p&gt;
Just install &lt;a class="ext-link" href="http://trac.edgewall.org/wiki/SpamFilter"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;SpamFilter&lt;/a&gt; or something. It even uses Akismet!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14133 (Custom post type breaks the_editor in plugins) updated</title>
      
        <dc:creator>blepoxp</dc:creator>

      <pubDate>Thu, 30 Sep 2010 20:40:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14133#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14133#comment:4/1285879229000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>14133.diff attached to Ticket #14133</title>
      
        <dc:creator>blepoxp</dc:creator>

      <pubDate>Thu, 30 Sep 2010 20:39:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14133/14133.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14133/14133.diff/1285879195000000</guid>
      <description>&lt;p&gt;
If post parent is empty, return true
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14953 (Add inline documentation to MultiSite functions) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 30 Sep 2010 20:08:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14953#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14953#comment:23/1285877280000000</guid>
      <description>&lt;p&gt;
You're right, I misread.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I would say that only functions that provide more information on the usage of the function should be linked with @uses as some functions and methods are helpers for other functions.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14290 (register_new_user() can't handle WP_Error result from wp_create_user()) updated</title>
      
        <dc:creator>coffee2code</dc:creator>

      <pubDate>Thu, 30 Sep 2010 19:53:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14290#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14290#comment:2/1285876405000000</guid>
      <description>&lt;p&gt;
Related &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/15001" title="#15001: defect (bug): Duplication and incompatibilities in register_new_user() and ... (new)"&gt;#15001&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15000 (add_meta_box() should accept array of post types) updated</title>
      
        <dc:creator>coffee2code</dc:creator>

      <pubDate>Thu, 30 Sep 2010 19:37:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15000#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15000#comment:2/1285875446000000</guid>
      <description>&lt;p&gt;
A roundabout solution presented there, but so it goes.  A straightforward foreach would be more concise:
&lt;/p&gt;
&lt;pre class="wiki"&gt;foreach ( array( 'post', 'page', 'event' ) as $page )
    add_meta_box( 'my-geo', 'Geolocation Info', array( &amp;amp;$this, 'geo_form' ), $page, 'side' );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14953 (Add inline documentation to MultiSite functions) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Thu, 30 Sep 2010 19:35:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14953#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14953#comment:22/1285875300000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14953#comment:21" title="Comment 21"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14953#comment:19" title="Comment 19"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We should remove all those @uses because:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;they get stale really fast
&lt;/li&gt;&lt;li&gt;you can get that information by using PHPXref or just looking at the source
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
As the Codex says, @uses should only be used for globals, like $wpdb.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The codex does not say that. It also wouldn't be true in any case. The only reason the @uses would be stale is if there were modifications to the code without updating the inline documentation.
&lt;/p&gt;
&lt;p&gt;
Using a separate application takes away from the reasons behind phpdocumentor sites. I would say that only functions that provide more information on the usage of the function should be linked with &lt;code&gt;@uses&lt;/code&gt; as some functions and methods are helpers for other functions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15000 (add_meta_box() should accept array of post types) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 30 Sep 2010 19:17:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15000#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15000#comment:1/1285874267000000</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13305" title="#13305: enhancement: Allow multiple post types to use same add_meta_box call (Pass an array ... (closed: wontfix)"&gt;#13305&lt;/a&gt; which was wontfix'd.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #15001 (Duplication and incompatibilities in register_new_user() and ...) created</title>
      
        <dc:creator>coffee2code</dc:creator>

      <pubDate>Thu, 30 Sep 2010 19:16:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15001</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15001/1285874171000000</guid>
      <description>&lt;p&gt;
As a result of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12778" title="Add email and login dupe checking down into wp_insert_user(). Tidy up ..."&gt;[12778]&lt;/a&gt;, the commit of a patch that was part of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11644" title="#11644: task (blessed): multiple blogs &amp;amp; sites / merge WPMU (closed: fixed)"&gt;#11644&lt;/a&gt; (the MU-merge ticket), &lt;code&gt;wp_insert_user()&lt;/code&gt; was modified to introduce user verification checks.  The addition of these checks also introduced a number of duplications and incompatibilities between it and &lt;code&gt;register_new_user()&lt;/code&gt;.  (Bear in mind that &lt;code&gt;register_new_user()&lt;/code&gt; calls &lt;code&gt;wp_create_user()&lt;/code&gt; which calls &lt;code&gt;wp_insert_user()&lt;/code&gt;.)
&lt;/p&gt;
&lt;p&gt;
These issues include:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Duplication (both run-time execution and code): both functions perform &lt;code&gt;username_exists()&lt;/code&gt; and &lt;code&gt;email_exists()&lt;/code&gt; checks.  Ideally, we should only perform each check once, and from a single piece of code.
&lt;/li&gt;&lt;li&gt;Whereas both functions perform &lt;code&gt;username_exists()&lt;/code&gt; and &lt;code&gt;email_exists()&lt;/code&gt; checks, &lt;code&gt;register_new_user()&lt;/code&gt; performs more checks (empty_username, invalid_username, empty_email, invalid_email).  If the former 2 are being checked, all 6 criteria should be checked.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;wp_insert_user()&lt;/code&gt; can now return a WP_Error object, but &lt;code&gt;register_new_user()&lt;/code&gt; can't handle it (I reported this in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14290" title="#14290: defect (bug): register_new_user() can't handle WP_Error result from wp_create_user() (closed: fixed)"&gt;#14290&lt;/a&gt;)
&lt;/li&gt;&lt;li&gt;&lt;code&gt;register_new_user()&lt;/code&gt; generates a new generic error if &lt;code&gt;wp_create_user()&lt;/code&gt; (via &lt;code&gt;wp_insert_user()&lt;/code&gt;) returns an error (assuming proper patch &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14290" title="#14290: defect (bug): register_new_user() can't handle WP_Error result from wp_create_user() (closed: fixed)"&gt;#14290&lt;/a&gt;), rather than passing along the more specific error it was told about
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
If an error is returned by &lt;code&gt;wp_create_user()&lt;/code&gt;, &lt;code&gt;register_new_user()&lt;/code&gt; throws a generic 'registerfail' error (&lt;code&gt;'&amp;lt;strong&amp;gt;ERROR&amp;lt;/strong&amp;gt;: Couldn&amp;amp;#8217;t register you... please contact the &amp;lt;a href="mailto:%s"&amp;gt;webmaster&amp;lt;/a&amp;gt; !'&lt;/code&gt;).  However, most likely it received a more informative WP_Error object.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;register_new_user()&lt;/code&gt; allows errors to be suppressed via filters, but &lt;code&gt;wp_insert_user()&lt;/code&gt; does not
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;code&gt;register_new_user()&lt;/code&gt; has the filter 'registration_errors' which allows plugins to suppress any encountered errors.  Having done so, &lt;code&gt;register_new_users()&lt;/code&gt;'s subsequent call to &lt;code&gt;wp_create_user()&lt;/code&gt; can generate an error (of the type already suppressed) which is then un-suppressable.  This renders the 'registration_errors' filter useless for the username_exists and email_exists errors (and possibly other in the future).
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
These different issues may warrant separate tickets, but cumulatively I think they point to the need to refactor &lt;code&gt;register_new_user()&lt;/code&gt; and &lt;code&gt;wp_insert_user()&lt;/code&gt; to be more efficient and compatible.
&lt;/p&gt;
&lt;p&gt;
This is a rare instance where I don't include an immediate patch for a ticket, but I wanted to get it out there and see if we can try and get these fixed for 3.1.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>15000.diff attached to Ticket #15000</title>
      
        <dc:creator>coffee2code</dc:creator>

      <pubDate>Thu, 30 Sep 2010 19:15:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/15000/15000.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/15000/15000.diff/1285874158000000</guid>
      <description>&lt;p&gt;
Aforementioned patch.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15000 (add_meta_box() should accept array of post types) created</title>
      
        <dc:creator>coffee2code</dc:creator>

      <pubDate>Thu, 30 Sep 2010 19:15:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15000</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15000/1285874104000000</guid>
      <description>&lt;p&gt;
I often find myself defining an identical meta box for different post types.  It would be nice if &lt;code&gt;add_meta_box()&lt;/code&gt; accepted an array as its &lt;code&gt;$page&lt;/code&gt; argument.  For backward-compatibility the function will still accept a string.  So for all else being equal, the same metabox could be added to multiple post types in a single line of code.  Of course, if the meta box needs per-post_type configuration, &lt;code&gt;add_meta_box()&lt;/code&gt; could be called separately for each post type.
&lt;/p&gt;
&lt;p&gt;
Example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_meta_box( 'my-geo', 'Geolocation Info', array( &amp;amp;$this, 'geo_form' ), 'post', 'side' );
add_meta_box( 'my-geo', 'Geolocation Info', array( &amp;amp;$this, 'geo_form' ), 'page', 'side' );
add_meta_box( 'my-geo', 'Geolocation Info', array( &amp;amp;$this, 'geo_form' ), 'event', 'side' );
&lt;/pre&gt;&lt;p&gt;
would become:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_meta_box( 'my-geo', 'Geolocation Info', array( &amp;amp;$this, 'geo_form' ), array( 'post', 'page', 'event' ), 'side' );
&lt;/pre&gt;&lt;p&gt;
Of course, the former would continue to work.
&lt;/p&gt;
&lt;p&gt;
One could certainly loop through the post types manually to call &lt;code&gt;add_meta_box()&lt;/code&gt;, but I think the proposed patch clarifies coding intention.
&lt;/p&gt;
&lt;p&gt;
Patch is attached.  (In the patch, I didn't indent the content of the newly introduced &lt;code&gt;foreach() ... endforeach;&lt;/code&gt; since it would look like the whole function got changed when in fact I only made a very minor change.  The function also has a precendent of a non-indented foreach.  However, I would anticipate the actual commit might want the indentation, which can be provided.)
&lt;/p&gt;
&lt;p&gt;
(Note: affects, or affected by, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13937" title="#13937: enhancement: Pass named arguments to add_meta_box() (closed: wontfix)"&gt;#13937&lt;/a&gt;)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>14998.diff attached to Ticket #14998</title>
      
        <dc:creator>coffee2code</dc:creator>

      <pubDate>Thu, 30 Sep 2010 19:14:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14998/14998.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14998/14998.diff/1285874096000000</guid>
      <description>&lt;p&gt;
Aforementioned patch.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14999 (Reject invalid theme.zip uploads) created</title>
      
        <dc:creator>jstrebel</dc:creator>

      <pubDate>Thu, 30 Sep 2010 19:14:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14999</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14999/1285874092000000</guid>
      <description>&lt;p&gt;
When a user uploads (/wp-admin/theme-install.php) a theme.zip file from their desktop that may have an invalid folder structure WP accepts the upload. The theme does not appear in the /wp-admin/themes.php list of available themes so the user assumes it was not taken and they try the upload again and are met with a cryptic "Folder already exists" message.
&lt;/p&gt;
&lt;p&gt;
Perhaps WP could validate the internal file/folder structure of the theme.zip and reject the upload with a clearer message such as: "This theme does not comply with the standard WP folder structure for themes. Please see this topic &amp;lt;link to topic&amp;gt; that explains the proper standard. Note: Please alert the theme author to modify their theme.zip download to comply"
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14998 (Allow WP_User-&gt;has_cap() to accept TRUE or FALSE as capability) created</title>
      
        <dc:creator>coffee2code</dc:creator>

      <pubDate>Thu, 30 Sep 2010 19:14:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14998</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14998/1285874081000000</guid>
      <description>&lt;p&gt;
It would be handy (and in some instances potentially eliminate some redundancy) if &lt;code&gt;WP_User-&amp;gt;has_cap()&lt;/code&gt; could be made to immediately return TRUE or FALSE if passed a boolean as the capability.  The primary use case for this is for invoking the various menu-adding functions (&lt;code&gt;add_menu_page()&lt;/code&gt;, &lt;code&gt;add_submenu_page()&lt;/code&gt;, etc) after having determined the current user already has sufficient capabilities to view the menu.  In such cases, we can bypass any further capability checks and simply pass TRUE or FALSE as the capability.
&lt;/p&gt;
&lt;p&gt;
A simplistic example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;   if ( current_user_can( 'manage_options' ) ) {
      add_options_page( 'My Plugin', 'Item A', 'manage_options', 'my-plugin-a', array( &amp;amp;$this, 'my_menu_a' ) );
      add_options_page( 'My Plugin', 'Item B', 'manage_options', 'my-plugin-b', array( &amp;amp;$this, 'my_menu_b' ) );
      // do some other stuff here for someone with 'manage_options' capabilities
   }
&lt;/pre&gt;&lt;p&gt;
In the above, the current user is being checked three times for the 'manage_options' capability.  With the attached patch applied, it'd be:
&lt;/p&gt;
&lt;pre class="wiki"&gt;   if ( current_user_can( 'manage_options' ) ) {
      add_options_page( 'My Plugin', 'Item A', true, 'my-plugin-a', array( &amp;amp;$this, 'my_menu_a' ) );
      add_options_page( 'My Plugin', 'Item B', true, 'my-plugin-b', array( &amp;amp;$this, 'my_menu_b' ) );
      // do some other stuff here for someone with 'manage_options' capabilities
   }
&lt;/pre&gt;&lt;p&gt;
The patch should allow for a boolean to be specified as a capability in any capability-accepting function.  If true or false is a capability (or in the list of capabilities), then &lt;code&gt;has_cap()&lt;/code&gt; will return that boolean without further capability checking.  In the event a capabilities array contains both, false takes precendence over true (err on the side of restriction rather than permission).
&lt;/p&gt;
&lt;p&gt;
Patch attached.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14997 (Single filter for all WP_Query clauses) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 30 Sep 2010 18:37:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14997#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14997#comment:1/1285871869000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Props!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14349 (Filter to query_posts() args) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 30 Sep 2010 18:36:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14349#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14349#comment:11/1285871797000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14997" title="#14997: enhancement: Single filter for all WP_Query clauses (closed: fixed)"&gt;#14997&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14997 (Single filter for all WP_Query clauses) created</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 30 Sep 2010 18:34:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14997</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14997/1285871690000000</guid>
      <description>&lt;p&gt;
From &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14349" title="#14349: enhancement: Filter to query_posts() args (closed: worksforme)"&gt;#14349&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Most times, when you have to manipulate the raw SQL request in WP_Query, you need to alter multiple clauses (JOIN, WHERE etc.).
&lt;/p&gt;
&lt;p&gt;
Currently, you need to register a callback for each of those:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function fictional_alter_where( $where, $wp_query ) {
    if ( $wp_query-&amp;gt;get( 'custom_var' ) ) {
        $where .= " AND meta_value IN ( 'foo', 'bar' )";
    }
    return $where;
}
add_filter( 'posts_where', 'fictional_alter_where' );
function fictional_alter_join( $join, $wp_query ) {
    global $wpdb;
    if ( $wp_query-&amp;gt;get( 'custom_var' ) ) {
        $join .= " JOIN $wpdb-&amp;gt;postmeta ON ($wpdb-&amp;gt;posts.ID = $wpdb-&amp;gt;postmeta.post_id )";
    }
    return $join;
}
add_filter( 'posts_where', 'fictional_alter_join' );
&lt;/pre&gt;&lt;p&gt;
I think we can all agree that this is pretty cumbersome.
&lt;/p&gt;
&lt;p&gt;
Here's how it can look like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function fictional_alter_query( $bits, $wp_query ) {
    global $wpdb;
    if ( $wp_query-&amp;gt;get( 'custom_var' ) ) {
    	$bits['where'] .= " AND meta_value IN ( 'foo', 'bar' )";
        $bits['join']  .= " JOIN $wpdb-&amp;gt;postmeta ON ($wpdb-&amp;gt;posts.ID = $wpdb-&amp;gt;postmeta.post_id )";
    }
    return $bits;
}
new WP_Query_Manipulation( 'fictional_alter_query' );
&lt;/pre&gt;&lt;p&gt;
&lt;a class="ext-link" href="http://core.trac.wordpress.org/attachment/ticket/14349/wp-query-manipulation.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WP_Query_Manipulation&lt;/a&gt; is a class that leverages the existing hooks, but it has a lot of overhead and isn't 100% reliable.
&lt;/p&gt;
&lt;p&gt;
So, I propose we add this filter in WP_Query.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14953 (Add inline documentation to MultiSite functions) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 30 Sep 2010 18:23:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14953#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14953#comment:21/1285871014000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14953#comment:19" title="Comment 19"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We should remove all those @uses because:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;they get stale really fast
&lt;/li&gt;&lt;li&gt;you can get that information by using PHPXref or just looking at the source
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
As the Codex says, @uses should only be used for globals, like $wpdb.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14953 (Add inline documentation to MultiSite functions) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 30 Sep 2010 18:21:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14953#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14953#comment:20/1285870911000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
See ms-blogs.2.diff
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12718 (Better structure for admin menu) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 30 Sep 2010 18:21:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12718#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12718#comment:28/1285870878000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12718#comment:27" title="Comment 27"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't know. We'll discuss it today at the dev meeting.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm really motivated to get some of this included in core (even if that means v3.2.)  I just want to feel like I've contributed real tangible value to core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>ms-blogs.2.diff attached to Ticket #14953</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 30 Sep 2010 18:21:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14953/ms-blogs.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14953/ms-blogs.2.diff/1285870878000000</guid>
      <description>&lt;p&gt;
Set @since MU. More warnings on switch_to_blog()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14953 (Add inline documentation to MultiSite functions) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 30 Sep 2010 18:14:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14953#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14953#comment:19/1285870486000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14953#comment:17" title="Comment 17"&gt;boonebgorges&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
14953-2.diff finishes off ms-functions.php.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We should remove all those @uses because:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;they get stale really fast
&lt;/li&gt;&lt;li&gt;you can get that information by using PHPXref or just looking at the source
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12718 (Better structure for admin menu) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 30 Sep 2010 18:08:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12718#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12718#comment:27/1285870084000000</guid>
      <description>&lt;p&gt;
I don't know. We'll discuss it today at the dev meeting.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12718 (Better structure for admin menu) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 30 Sep 2010 17:57:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12718#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12718#comment:26/1285869431000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12718#comment:25" title="Comment 25"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
No can do, since that would cause syntax errors. So, I think we should go with &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14666" title="#14666: task (blessed): Create reliable way to remove admin menus and submenus (closed: fixed)"&gt;#14666&lt;/a&gt; for now.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As an alternate, or a stop gap?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12718 (Better structure for admin menu) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 30 Sep 2010 17:53:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12718#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12718#comment:25/1285869220000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12718#comment:24" title="Comment 24"&gt;mikeschinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If that's the case I say we add the &lt;code&gt;private&lt;/code&gt;s back in and even the &lt;code&gt;static&lt;/code&gt; method unless  you see the latter as an issue?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No can do, since that would cause syntax errors. So, I think we should go with &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14666" title="#14666: task (blessed): Create reliable way to remove admin menus and submenus (closed: fixed)"&gt;#14666&lt;/a&gt; for now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14953 (Add inline documentation to MultiSite functions) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Thu, 30 Sep 2010 17:40:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14953#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14953#comment:18/1285868437000000</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="http://codex.wordpress.org/Inline_Documentation"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Inline_Documentation&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Columns should break at either 80 or 100 for consistency with the rest of WordPress. Long Descriptions should be Informative paragraphs with concise information related to the technical details and additional information that couldn't be fit in the short description.
&lt;/p&gt;
&lt;p&gt;
However, more or less, one could go through and edit the files for consistency after they are complete.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12718 (Better structure for admin menu) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 30 Sep 2010 17:14:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12718#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12718#comment:24/1285866877000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12718#comment:23" title="Comment 23"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Ah, another "wonderful" thing about PHP4: objects are not passed by reference, but are cloned. That's why we have add_action_ref_array().
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well that's a bit of a bummer.  I'm starting to understand why people have been ranting about the switch for so long now.
&lt;/p&gt;
&lt;p&gt;
If that's the case I say we add the &lt;code&gt;private&lt;/code&gt;s back in and even the &lt;code&gt;static&lt;/code&gt; method unless  you see the latter as an issue?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think we should either:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;add a big warning in the docs, signaling that this doesn't work properly in PHP4
&lt;/li&gt;&lt;li&gt;punt to WP 3.2 and only commit &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14666" title="#14666: task (blessed): Create reliable way to remove admin menus and submenus (closed: fixed)"&gt;#14666&lt;/a&gt; in 3.1
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
I'm good for either.  What does the core team think about adding PHP5-specific code right now?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, we generally use 'delete' when it's related to user data, like posts and comments. We use 'remove' for everything else: remove_action(), remove_theme_support() etc.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sounds good.  I'll make those changes.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, I used the terms "Menu Section" and "Menu Item" because AFAICT there hasn't been consistent naming and the names that have been used are unclear (at least to me.) If there are terms that others would prefer, I can change.
&lt;/p&gt;
&lt;p&gt;
We do have a naming convention:
&lt;/p&gt;
&lt;pre class="wiki"&gt;menu: a top-level item
submenu: an item inside a menu
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
Ugh. Those terms were some of what caused me difficulty when I first tried to understand the menus, and hence why I used different terms. The "submenu" term is particularly problematic for me because AFAICT they are options, not (sub)menus. And even "menu" is not so good because isn't the entire thing a menu?
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;Proposal&lt;/em&gt;: Evolve these terms and make a break from the past?  After all, we are talking about deprecating the old architecture, why not deprecate the terms too?  Here are some potentials:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;menu section, menu item
&lt;/li&gt;&lt;li&gt;menu section, menu option
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
And there might be others?
&lt;/p&gt;
&lt;p&gt;
I'll wait to make the "delete_*" -&amp;gt; "remove_*" changes until we decide on this.
&lt;/p&gt;
&lt;p&gt;
Also, can I lobby for deprecating the external use of the existing functions and moving to these or something else that is &lt;code&gt;$args&lt;/code&gt; based rather than 6 or 7 parameters?  They include:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;add_menu_page()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;add_object_page()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;add_utility_page()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;add_submenu_page()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;add_management_page()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;add_options_page()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;add_theme_page()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;add_plugins_page()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;add_users_page()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;add_dashboard_page()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;add_posts_page()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;add_media_page()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;add_links_page()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;add_pages_page()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;add_comments_page()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;add_plugins_page()&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The new functions could call these with an &lt;em&gt;"undocumented"&lt;/em&gt; additional parameter that, if not passed, would trigger a deprecated warning when &lt;code&gt;WP_DEBUG&lt;/code&gt; is set.  Doing this could really streamline this otherwise very obtuse API. Thoughts?
&lt;/p&gt;
&lt;p&gt;
-Mike
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12734 (Nav Menus don't scale for big sites) reopened</title>
      
        <dc:creator>radial</dc:creator>

      <pubDate>Thu, 30 Sep 2010 17:04:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12734#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12734#comment:32/1285866281000000</guid>
      <description>&lt;p&gt;
This is definitely not fixed.  We have a VPS with 1.98ghz processor and about 1.5gb of RAM.&amp;amp;nbsp; Our nav menu contains about 150 items. When saving the menu, it may take a full minute just to save this.&amp;amp;nbsp; CPU usage for the nav-menus.php process peaks out at about 85% for that minute.&amp;amp;nbsp; If the user thinks somethings wrong and backs out or reloads, the saving stops and cuts off the menu items that have not been saved.&amp;amp;nbsp; It's a PITA to have to recreate the menu, especially when it's not easy to find the pages because they aren't listed in any order, and the search for pages doesn't work.&amp;lt;br&amp;gt;
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #14660 (Hierarchical Page List in wp-admin/nav-menus.php) updated</title>
      
        <dc:creator>radial</dc:creator>

      <pubDate>Thu, 30 Sep 2010 16:47:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14660#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14660#comment:3/1285865255000000</guid>
      <description>&lt;p&gt;
It would be extremely useful if this list was at least ordered alphabetically
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14666 (Create reliable way to remove admin menus and submenus) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 30 Sep 2010 16:32:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14666#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14666#comment:11/1285864375000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>14953-2.diff attached to Ticket #14953</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 30 Sep 2010 15:36:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14953/14953-2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14953/14953-2.diff/1285861005000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14953 (Add inline documentation to MultiSite functions) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 30 Sep 2010 15:36:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14953#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14953#comment:17/1285860989000000</guid>
      <description>&lt;p&gt;
14953-2.diff finishes off ms-functions.php.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14772 (Administration bar) updated</title>
      
        <dc:creator>sbressler</dc:creator>

      <pubDate>Thu, 30 Sep 2010 14:54:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14772#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14772#comment:34/1285858448000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14772#comment:33" title="Comment 33"&gt;layotte&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
FYI, I did notice a bug with the Admin bar... if you are in Dashboard -&amp;gt; Update (and click to update a plugin) the Admin bar shows up in the Update Plugins iframe.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Already reported here: &lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/14772#comment:17"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/ticket/14772#comment:17&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14994 (Introduce a way to identify a hook in progress) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 30 Sep 2010 14:52:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14994#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14994#comment:2/1285858373000000</guid>
      <description>&lt;p&gt;
It would be nice if we had consistent names and behaviour:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;current_hook()
&lt;/li&gt;&lt;li&gt;doing_hook()
&lt;/li&gt;&lt;li&gt;did_hook()
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
On did_hook(): Both do_action() and apply_filters() can be called multiple times, so there's no reason to artificially limit ourselves to did_action().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14651 (Call to undefined function get_hidden_columns()) updated</title>
      
        <dc:creator>arena</dc:creator>

      <pubDate>Thu, 30 Sep 2010 14:50:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14651#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14651#comment:21/1285858249000000</guid>
      <description>&lt;p&gt;
for info (In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15653" title="Column headers revamp:
	* undeprecate get_column_headers()
	* ..."&gt;[15653]&lt;/a&gt;) &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14776" title="#14776: defect (bug): 'manage_' . screen . '_columns' filter not working (closed: fixed)"&gt;#14776&lt;/a&gt; undeprecates get_hidden_columns()
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14994 (Introduce a way to identify a hook in progress) updated</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Thu, 30 Sep 2010 14:44:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14994#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14994#comment:1/1285857866000000</guid>
      <description>&lt;p&gt;
+1 on using &lt;code&gt;doing_hook()&lt;/code&gt; as the generic name.
&lt;/p&gt;
&lt;p&gt;
When I first read the title of this ticket, I was very skeptical that this function would have a practical use.  After reading your description, though, I can think of at least 3 times I've had to work around the lack of this function to do the same or very similar things.  Fantastic idea!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14772 (Administration bar) updated</title>
      
        <dc:creator>layotte</dc:creator>

      <pubDate>Thu, 30 Sep 2010 14:08:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14772#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14772#comment:33/1285855702000000</guid>
      <description>&lt;p&gt;
FYI, I did notice a bug with the Admin bar... if you are in Dashboard -&amp;gt; Update (and click to update a plugin) the Admin bar shows up in the Update Plugins iframe.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>media.patch attached to Ticket #14996</title>
      
        <dc:creator>layotte</dc:creator>

      <pubDate>Thu, 30 Sep 2010 14:02:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14996/media.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14996/media.patch/1285855379000000</guid>
      <description>&lt;p&gt;
stripslashes from $_POST&lt;a class="missing wiki"&gt;instertonly?&lt;/a&gt;&lt;a class="missing wiki"&gt;title?&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14996 (Inserting an video/audio/media with an apostrophe in the title results ...) created</title>
      
        <dc:creator>layotte</dc:creator>

      <pubDate>Thu, 30 Sep 2010 14:02:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14996</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14996/1285855344000000</guid>
      <description>&lt;p&gt;
If you insert a link using the Video, Audio, or Media buttons (note the Image button) and the Title has an apostrophe, the apostrophe is escaped with a slash.
&lt;/p&gt;
&lt;p&gt;
e.g.
&lt;/p&gt;
&lt;p&gt;
Video URL: &lt;a class="ext-link" href="http://my.awesomevideo.com/video"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://my.awesomevideo.com/video&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Title: Lew's Awesome Video
&lt;/p&gt;
&lt;p&gt;
&amp;lt;a href="&lt;a class="ext-link" href="http://my.awesomevideo.com/video"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://my.awesomevideo.com/video&lt;/a&gt;"&amp;gt;Lew\'s Awesome Video&amp;lt;/a&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Seems related to an old (already fixed) bug &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/6414" title="#6414: defect (bug): Inserting an image with an apostrophe in the title or caption results ... (closed: invalid)"&gt;#6414&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14772 (Administration bar) updated</title>
      
        <dc:creator>layotte</dc:creator>

      <pubDate>Thu, 30 Sep 2010 13:14:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14772#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14772#comment:32/1285852459000000</guid>
      <description>&lt;p&gt;
I just uploaded trunk to do some testing and saw this error when I went to wp-admin.
&lt;/p&gt;
&lt;p&gt;
Parse error: syntax error, unexpected '&amp;amp;', expecting T_VARIABLE or '$' in /homepages/3/d238924033/htdocs/trunk.lewayotte.com/wp-includes/admin-bar/admin-bar-class.php on line 120
&lt;/p&gt;
&lt;p&gt;
But I just realized I was in a PHP4 environment, so you can probably ignore my patch.
&lt;/p&gt;
&lt;p&gt;
Lew
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>admin-bar-class.php attached to Ticket #14772</title>
      
        <dc:creator>layotte</dc:creator>

      <pubDate>Thu, 30 Sep 2010 13:08:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14772/admin-bar-class.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14772/admin-bar-class.php/1285852117000000</guid>
      <description>&lt;p&gt;
syntax error, unexpected '&amp;amp;', expecting T_VARIABLE or '$' (in PHP5.3 environment)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14995 (minor typing mistake results in ignoring parameters for the pack() ...) created</title>
      
        <dc:creator>jakub.misek</dc:creator>

      <pubDate>Thu, 30 Sep 2010 13:02:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14995</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14995/1285851729000000</guid>
      <description>&lt;p&gt;
/wp-includes/js/tinymce/plugins/spellchecker/classes/utils/JSON.php
&lt;/p&gt;
&lt;p&gt;
line 535, 539, 543
&lt;/p&gt;
&lt;p&gt;
wrong order of parenthesis and commas results in calling ord() function with more than 1 parameter.
&lt;/p&gt;
&lt;p&gt;
Warning: ord() expects exactly 1 parameter, 2 given
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14994 (Introduce a way to identify a hook in progress) created</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 30 Sep 2010 11:22:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14994</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14994/1285845752000000</guid>
      <description>&lt;p&gt;
We have did_action() and current_filter() but I've come across a use case for a hybrid of sorts, doing_action().
&lt;/p&gt;
&lt;p&gt;
Problem is, did_action() returns true the moment the hook is fired. Thus if you need to wait until after the hook is done executing, you need to also check current_filter(). The problem arises when there was another hook called since thne, because current_filter() does not traverse back up the stack.
&lt;/p&gt;
&lt;p&gt;
I considered adding an argument to either of the two other functions mentioned, but I think a new function makes the most sense. did_action() only works for actions. While current_filter() works for all hooks, it does one thing and that is to return the current hook. A new function makes the most sense here.
&lt;/p&gt;
&lt;p&gt;
doing_action() might not be the best name because did_action() only works for actions, but this would work for filters as well. At that point, I might recommend doing_hook().
&lt;/p&gt;
&lt;pre class="wiki"&gt;function doing_action( $action ) {
   global $wp_current_filter;
   return in_array( $action, $'wp_current_filter );
}
&lt;/pre&gt;&lt;p&gt;
The use case was that a plugin was applying the_content on wp_head. That was messing with my footnotes plugin. So I needed to make sure I had completely processed wp_head first, but there was no way to do that. Now I would be able to check &lt;code&gt;if ( did_action('wp_head') &amp;amp;&amp;amp; ! doing_action('wp_head') )&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14772 (Administration bar) updated</title>
      
        <dc:creator>demetris</dc:creator>

      <pubDate>Thu, 30 Sep 2010 10:39:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14772#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14772#comment:31/1285843157000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14990 (Use CODE instead of KBD tag) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 30 Sep 2010 10:32:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14990#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14990#comment:2/1285842748000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
kbd is designed to be user input. I suppose we're probably inconsistent with this, but kbd seems semantic and proper here.
&lt;/p&gt;
&lt;p&gt;
A footnote, i18n-change is only necessary for changes late in the development cycle (near or after string freeze) or for point releases, that way we can alert translators.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14990 (Use CODE instead of KBD tag) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 30 Sep 2010 10:26:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14990#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14990#comment:1/1285842406000000</guid>
      <description>&lt;p&gt;
+1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12718 (Better structure for admin menu) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 30 Sep 2010 10:25:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12718#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12718#comment:23/1285842347000000</guid>
      <description>&lt;p&gt;
Ah, another "wonderful" thing about PHP4: objects are not passed by reference, but are cloned. That's why we have add_action_ref_array().
&lt;/p&gt;
&lt;p&gt;
I think we should either:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;add a big warning in the docs, signaling that this doesn't work properly in PHP4
&lt;/li&gt;&lt;li&gt;punt to WP 3.2 and only commit &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14666" title="#14666: task (blessed): Create reliable way to remove admin menus and submenus (closed: fixed)"&gt;#14666&lt;/a&gt; in 3.1
&lt;/li&gt;&lt;/ul&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, I used the terms "Menu Section" and "Menu Item" because AFAICT there hasn't been consistent naming and the names that have been used are unclear (at least to me.) If there are terms that others would prefer, I can change.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We do have a naming convention:
&lt;/p&gt;
&lt;pre class="wiki"&gt;menu: a top-level item
submenu: an item inside a menu
&lt;/pre&gt;&lt;p&gt;
Also, we generally use 'delete' when it's related to user data, like posts and comments. We use 'remove' for everything else: remove_action(), remove_theme_support() etc.
&lt;/p&gt;
&lt;p&gt;
So, delete_admin_menu_section() would become remove_admin_menu() and delete_admin_menu_item() would be remove_admin_submenu().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14992 (When Object Caching is enabled switch_to_blog causes issues with some ...) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 30 Sep 2010 10:22:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14992#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14992#comment:3/1285842124000000</guid>
      <description>&lt;p&gt;
Switch to blog is database only. Object Cache is not database.
&lt;/p&gt;
&lt;p&gt;
Strictly spoken, this is not a bug.
&lt;/p&gt;
&lt;p&gt;
As scribu already reported, this function is often not properly understood and therefore probably misused in some places. And as this ticket implies some of us might need more functionality in switching blogs, not only for the database context but also for the object-cache.
&lt;/p&gt;
&lt;p&gt;
I suggest to refactor switch_to_blog into switch_to_blog_database() and deprecate the older one/change it's use to switch every context available for a switch (e.g. database and then probably soon objectcache).
&lt;/p&gt;
&lt;p&gt;
Then other developers can implement new and needed functionality in similar named functions like switch_to_blog_objectchache().
&lt;/p&gt;
&lt;p&gt;
Just a raw idea:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function switch_to_blog($blogid) {
  $blogid = normalize_blogid($blogid);
  if (!is_valid_blogid($blogid))
    return false;
  current_blogid = get_current_blogid();
  if (!switch_to_blog_database($blogid)) {
    return false;
  }
  if (!switch_to_blog_objectcache($blogid)) {
    switch_to_blog_database($current_blogid);
    return false;
  }
  return $blogid;
}
&lt;/pre&gt;&lt;p&gt;
In contrast to my argumentation in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14953" title="#14953: enhancement: Add inline documentation to MultiSite functions (closed: fixed)"&gt;#14953&lt;/a&gt;, I think that the object-cache as it is something quite related to the database, should be able to switch as well and it should be useful to provide that functionality as well ASAP. I wonder how wordpress.com is dealing with such issues, assuming that they should have a setup when this comes into play. Maybe some wpcom devs can provide some useful feedback.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14993 (make_clickable issue with ! character in URL) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 30 Sep 2010 10:00:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14993#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14993#comment:6/1285840855000000</guid>
      <description>&lt;p&gt;
This is a bug in wordpress. URL is defined by &lt;a class="ext-link" href="http://tools.ietf.org/html/rfc3986"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;RFC3986&lt;/a&gt; and the "!" character is part of the reserved group which makes it immune to transition. Simply said: It's part of the URL - in any case.
&lt;/p&gt;
&lt;p&gt;
Space is not btw, which means, that if it's followed by space it can be both: an exclamation mark and the end of a sentence.
&lt;/p&gt;
&lt;p&gt;
As we already do treat other chars of the reserved group as part of the URL (e.g. "?"), "!" should be treated the same.
&lt;/p&gt;
&lt;p&gt;
If the discussion in this ticket changes some minds that treating characters of the reserved group differently as we currently do in make_clickable, then the behaviour should be changed for the other reserved characters as well.
&lt;/p&gt;
&lt;p&gt;
For any decision, this will break backwards-compability.
&lt;/p&gt;
&lt;p&gt;
Reserved characters are:
&lt;/p&gt;
&lt;pre class="wiki"&gt;      reserved    = gen-delims / sub-delims
      gen-delims  = ":" / "/" / "?" / "#" / "[" / "]" / "@"
      sub-delims  = "!" / "$" / "&amp;amp;" / "'" / "(" / ")"
                  / "*" / "+" / "," / ";" / "="
&lt;/pre&gt;&lt;p&gt;
&lt;a class="ext-link" href="http://tools.ietf.org/html/rfc3986#page-13"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Source: RFC 3986 page 13&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
A nice test-text:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Did it appear on http://www.google.com/?
Yes, it did appear on http://www.google.com/!
&lt;/pre&gt;&lt;p&gt;
Example of the current implementation on wordpress.com: &lt;a class="ext-link" href="http://hakre.wordpress.com/2010/09/29/washtml-php-library/#comment-954"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Link&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14953 (Add inline documentation to MultiSite functions) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 30 Sep 2010 09:43:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14953#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14953#comment:16/1285839786000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14953#comment:13" title="Comment 13"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The last commit did use the MU version number (prefixing it with MU) which is needlessly inventing something new on top of PHPDoc and breaks with the documentation standard and with the current doing everywhere else in the project. Everywhere else is with a very few exceptions, a related case where this is problematic is here: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14921" title="#14921: defect (bug): WP_Dependencies is tagged as external but is core package (closed: wontfix)"&gt;#14921&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
As we do not need to do documentation work for the past of the MU fork (the MU fork is as much as I know history), I suggest to change the @since tags to &lt;code&gt;@since 3.0.0&lt;/code&gt; to streamline them with the rest of the codebase.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Boone went above and beyond in tracking down individual MU versions. By no means is that necessary. However, us using &lt;code&gt;@since MU&lt;/code&gt; originated in 3.0, and I want to continue that pattern. (That's why I haven't committed scribu's patch yet.) This is a special case. I believe it is important for us to differentiate whether MS functions were introduced after the merge, or whether they were a product of the merge.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Simon, patches don't trigger comment notifications, so I'm only seeing your patches now.
&lt;/p&gt;
&lt;p&gt;
Normally there's no need to document every single function via @uses, or even some of them. However, switch_to_blog() and restore_current_blog() need some serious documentation on exactly what they do and what they don't do, ref &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14992" title="#14992: defect (bug): When Object Caching is enabled switch_to_blog causes issues with some ... (closed: worksforme)"&gt;#14992&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14941" title="#14941: feature request: dynamic unloading and loading of plugins (closed: wontfix)"&gt;#14941&lt;/a&gt; in particular. We don't need to do little ones like did_action() but for others, it would help to not only include them but to have a description on how said function is used.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14953 (Add inline documentation to MultiSite functions) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 30 Sep 2010 09:34:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14953#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14953#comment:15/1285839272000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14783" title="#14783: enhancement: Incorrect/missing PHPDoc (closed: fixed)"&gt;#14783&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14783 (Incorrect/missing PHPDoc) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 30 Sep 2010 09:33:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14783#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14783#comment:9/1285839236000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14953" title="#14953: enhancement: Add inline documentation to MultiSite functions (closed: fixed)"&gt;#14953&lt;/a&gt; (missing PHP Docs)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14921 (WP_Dependencies is tagged as external but is core package) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 30 Sep 2010 09:33:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14921#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14921#comment:5/1285839203000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14953" title="#14953: enhancement: Add inline documentation to MultiSite functions (closed: fixed)"&gt;#14953&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14953 (Add inline documentation to MultiSite functions) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 30 Sep 2010 09:32:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14953#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14953#comment:14/1285839170000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14953" title="#14953: enhancement: Add inline documentation to MultiSite functions (closed: fixed)"&gt;#14953&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14953 (Add inline documentation to MultiSite functions) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 30 Sep 2010 09:31:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14953#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14953#comment:13/1285839090000000</guid>
      <description>&lt;p&gt;
I suggest to put the wordpress version number to &lt;a class="ext-link" href="http://manual.phpdoc.org/HTMLSmartyConverter/HandS/phpDocumentor/tutorial_tags.since.pkg.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;@since&lt;/a&gt; (Documentation), as @since documents when (at which version) an element was first added to a package.
&lt;/p&gt;
&lt;p&gt;
The file changed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15675" title="Some phpdoc for ms-functions.php. props boonebgorges. see #14953."&gt;r15675&lt;/a&gt; have the following package phpdocs:
&lt;/p&gt;
&lt;pre class="wiki"&gt; * @package WordPress
 * @subpackage Multisite
&lt;/pre&gt;&lt;p&gt;
The last commit did use the MU version number (prefixing it with MU) which is needlessly inventing something new on top of PHPDoc and breaks with the documentation standard and with the current doing everywhere else in the project. Everywhere else is with a very few exceptions, a related case where this is problematic is here: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14921" title="#14921: defect (bug): WP_Dependencies is tagged as external but is core package (closed: wontfix)"&gt;#14921&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
As we do not need to do documentation work for the past of the MU fork (the MU fork is as much as I know history), I suggest to change the @since tags to &lt;code&gt;@since 3.0.0&lt;/code&gt; to streamline them with the rest of the codebase.
&lt;/p&gt;
&lt;p&gt;
Let me know if you would like to have a patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>ALT switch_to_blog and restore_current_blog inline docs.diff attached to Ticket #14953</title>
      
        <dc:creator>simonwheatley</dc:creator>

      <pubDate>Thu, 30 Sep 2010 07:59:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14953/ALT%20switch_to_blog%20and%20restore_current_blog%20inline%20docs.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14953/ALT%20switch_to_blog%20and%20restore_current_blog%20inline%20docs.diff/1285833573000000</guid>
      <description>&lt;p&gt;
Alternative diff, this time with @uses for all functions called within the documented function, is this best practice to list them exhaustively or only where a comment on usage is required/given?
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>switch_to_blog and restore_current_blog inline docs.diff attached to Ticket #14953</title>
      
        <dc:creator>simonwheatley</dc:creator>

      <pubDate>Thu, 30 Sep 2010 07:53:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14953/switch_to_blog%20and%20restore_current_blog%20inline%20docs.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14953/switch_to_blog%20and%20restore_current_blog%20inline%20docs.diff/1285833199000000</guid>
      <description>&lt;p&gt;
Go on then, I'll bite: docs for switch_to_blog (inc beware, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14992" title="#14992: defect (bug): When Object Caching is enabled switch_to_blog causes issues with some ... (closed: worksforme)"&gt;#14992&lt;/a&gt;) and restore_current_blog
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12718 (Better structure for admin menu) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 30 Sep 2010 05:08:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12718#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12718#comment:22/1285823299000000</guid>
      <description>&lt;p&gt;
BTW, it would be really nice if we could figure out a way to transition to using named identifiers instead of file/slug for identifiers. For example, this is not a really great identifier to have to deal with:
&lt;/p&gt;
&lt;pre class="wiki"&gt;edit-tags.php?taxonomy=movie-genre&amp;amp;post_type=movie
&lt;/pre&gt;&lt;p&gt;
One issue (of many) if the ambiguity regarding the need to HTML encode/decode the ampersands as well the general length and complexity of this. It would be soooo much better to be able to simply call this the`"movie-genre-tags"' menu item or similar.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12718 (Better structure for admin menu) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 30 Sep 2010 05:02:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12718#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12718#comment:21/1285822975000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12718#comment:20" title="Comment 20"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
These are the things that aren't supported in the antique version of PHP4:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;static method calls: &lt;code&gt;WP_AdminMenuSection::add($section,$args);&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;access modifiers for methods or properties:
&lt;ul&gt;&lt;li&gt;&lt;code&gt;private function add(...)&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;private $index;&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Figures. Much of the work I did was rearchitect so I could use private.  Ah well.
&lt;/p&gt;
&lt;p&gt;
New version up:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://gist.github.com/792b7aa5b695d1092520"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gist.github.com/792b7aa5b695d1092520&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Attempts to make PHP 4.x compatible by removing static and private functions and vars (though I can't test against v4.0)
&lt;/li&gt;&lt;li&gt;Added hookname property to both section and item
&lt;/li&gt;&lt;li&gt;Renamed property with list of items to be "items" instead of "submenus"
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>14991.2.diff attached to Ticket #14991</title>
      
        <dc:creator>prettyboymp</dc:creator>

      <pubDate>Thu, 30 Sep 2010 01:29:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14991/14991.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14991/14991.2.diff/1285810183000000</guid>
      <description>&lt;p&gt;
made sure top rules stayed first
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14991 (extra_rules_top should take priority over extra_permastructs) updated</title>
      
        <dc:creator>prettyboymp</dc:creator>

      <pubDate>Thu, 30 Sep 2010 01:27:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14991#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14991#comment:3/1285810067000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14991#comment:2" title="Comment 2"&gt;filosofo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Won't that put the "top" rules last?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Good catch.  Adding a new patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14991 (extra_rules_top should take priority over extra_permastructs) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Thu, 30 Sep 2010 00:19:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14991#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14991#comment:2/1285805987000000</guid>
      <description>&lt;p&gt;
Won't that put the "top" rules last?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14953 (Add inline documentation to MultiSite functions) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 29 Sep 2010 23:44:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14953#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14953#comment:12/1285803876000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15675" title="Some phpdoc for ms-functions.php. props boonebgorges. see #14953."&gt;[15675]&lt;/a&gt;) Some phpdoc for ms-functions.php. props boonebgorges. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14953" title="#14953: enhancement: Add inline documentation to MultiSite functions (closed: fixed)"&gt;#14953&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [15675]: Some phpdoc for ms-functions.php. props boonebgorges. see #14953.</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 29 Sep 2010 23:44:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15675</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15675/1285803874470673</guid>
      <description>&lt;p&gt;
Some phpdoc for ms-functions.php. props boonebgorges. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14953" title="#14953: enhancement: Add inline documentation to MultiSite functions (closed: fixed)"&gt;#14953&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14991 (extra_rules_top should take priority over extra_permastructs) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 29 Sep 2010 23:43:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14991#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14991#comment:1/1285803814000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Makes sense.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14953 (Add inline documentation to MultiSite functions) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 29 Sep 2010 23:32:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14953#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14953#comment:11/1285803142000000</guid>
      <description>&lt;p&gt;
For @since, I just used 3.0.0
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14953 (Add inline documentation to MultiSite functions) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 29 Sep 2010 23:31:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14953#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14953#comment:10/1285803092000000</guid>
      <description>&lt;p&gt;
I've done ms-blogs.php. See ms-blogs.diff
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>ms-blogs.diff attached to Ticket #14953</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 29 Sep 2010 23:30:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14953/ms-blogs.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14953/ms-blogs.diff/1285803050000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>14953-1.diff attached to Ticket #14953</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 29 Sep 2010 23:14:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14953/14953-1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14953/14953-1.diff/1285802096000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14953 (Add inline documentation to MultiSite functions) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 29 Sep 2010 23:14:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14953#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14953#comment:9/1285802082000000</guid>
      <description>&lt;p&gt;
14953-1.diff is a start on documenting ms-functions.php. Can't do more now, eyeballs are bleeding.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14953 (Add inline documentation to MultiSite functions) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 29 Sep 2010 23:05:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14953#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14953#comment:8/1285801544000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm working through ms-functions.php and will have a diff in a little while.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14953 (Add inline documentation to MultiSite functions) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Wed, 29 Sep 2010 22:39:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14953#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14953#comment:7/1285799966000000</guid>
      <description>&lt;p&gt;
They're phpdoc tags.  Here's a tutorial: &lt;a class="ext-link" href="http://manual.phpdoc.org/HTMLSmartyConverter/HandS/phpDocumentor/tutorial_manual.pkg.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PHPdoc tutorial&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14953 (Add inline documentation to MultiSite functions) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 29 Sep 2010 22:30:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14953#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14953#comment:6/1285799456000000</guid>
      <description>&lt;p&gt;
How's this for a boilerplate template. My comments to the comments are after #.
&lt;/p&gt;
&lt;pre class="wiki"&gt;/**
 * A one-line description of the function
 *
 * A longer description of the plugin. This can span multiple lines.
 * Also might not be necessary. Lorem ipsum.
 * Lorem ipsum.
 *
 * And multiple paragraphs.
 * Lorem ipsum.
 *
 * @since MU # or 3.0.0 etc.
 * @access private # if it is an internal function
 *
 * @param string $argument_name This argument does blah.
 * @param array $args This accepts a whole bunch of args:
 *  - blah_id: The id of the blah. Defaults to false, which means no ID is used.
 *  - foo: The foo. Very important. Defaults to an empty string.
 * @param bool $optional_argument Optional. Default true. This argument does blah.
 * @return array Returns an array of blah.
 */
function my_function( $argument_name, $args = array(), $optional_argument = true ) {
    // Blah
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14993 (make_clickable issue with ! character in URL) updated</title>
      
        <dc:creator>lancewillett</dc:creator>

      <pubDate>Wed, 29 Sep 2010 22:16:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14993#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14993#comment:5/1285798579000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14953 (Add inline documentation to MultiSite functions) updated</title>
      
        <dc:creator>andrea_r</dc:creator>

      <pubDate>Wed, 29 Sep 2010 22:13:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14953#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14953#comment:5/1285798427000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Someone point me to whatever is used to format the inline docs &amp;amp; how-tos. Any guidelines?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14953 (Add inline documentation to MultiSite functions) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 29 Sep 2010 21:38:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14953#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14953#comment:4/1285796310000000</guid>
      <description>&lt;p&gt;
I also found this: &lt;a class="ext-link" href="http://codex.wordpress.org/WPMU_Functions"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/WPMU_Functions&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14953 (Add inline documentation to MultiSite functions) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 29 Sep 2010 21:31:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14953#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14953#comment:3/1285795879000000</guid>
      <description>&lt;p&gt;
PS: We don't have to do it all in one go.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14953 (Add inline documentation to MultiSite functions) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 29 Sep 2010 21:30:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14953#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14953#comment:2/1285795859000000</guid>
      <description>&lt;p&gt;
This would be one of those tickets where patches are &lt;em&gt;extremely&lt;/em&gt; welcome.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14992 (When Object Caching is enabled switch_to_blog causes issues with some ...) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 29 Sep 2010 21:29:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14992#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14992#comment:2/1285795798000000</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Actually, switch_to_blog() should remain cheap to call. For instance, I'm using switch_to_blog() in one case to loop through all the sites in the network.
&lt;/p&gt;
&lt;p&gt;
So, I think we should best leave this to be handled on a case-by-case basis.
&lt;/p&gt;
&lt;p&gt;
Also, we should probably add this in the functions documentation. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14953" title="#14953: enhancement: Add inline documentation to MultiSite functions (closed: fixed)"&gt;#14953&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14992 (When Object Caching is enabled switch_to_blog causes issues with some ...) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 29 Sep 2010 21:09:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14992#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14992#comment:1/1285794541000000</guid>
      <description>&lt;p&gt;
I also ran into this problem.
&lt;/p&gt;
&lt;p&gt;
I think switching caches is the way to go, but only for one level of switching.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14993 (make_clickable issue with ! character in URL) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 29 Sep 2010 20:56:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14993#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14993#comment:4/1285793773000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
We have some good test cases for this function so should be easy to test changes
&lt;/p&gt;
&lt;p&gt;
I think we should require something after the ! though so as to not link in Vipers example
&lt;/p&gt;
&lt;p&gt;
If only we could require email style url wrapping in &lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;gt;&lt;/code&gt; ;-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14993 (make_clickable issue with ! character in URL) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 29 Sep 2010 20:31:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14993#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14993#comment:3/1285792305000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14993 (make_clickable issue with ! character in URL) updated</title>
      
        <dc:creator>mdawaffe</dc:creator>

      <pubDate>Wed, 29 Sep 2010 20:31:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14993#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14993#comment:2/1285792260000000</guid>
      <description>&lt;p&gt;
This pattern will probably become increasingly popular: &lt;a class="ext-link" href="http://code.google.com/web/ajaxcrawling/docs/specification.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://code.google.com/web/ajaxcrawling/docs/specification.html&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14993 (make_clickable issue with ! character in URL) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Wed, 29 Sep 2010 20:25:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14993#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14993#comment:1/1285791958000000</guid>
      <description>&lt;p&gt;
The drawback would be this:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;Check out http://wordpress.org!&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
I'm not sure how the regex works, but it'd be nice if &lt;code&gt;!&lt;/code&gt; was included only if it had URL characters after it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14993 (make_clickable issue with ! character in URL) created</title>
      
        <dc:creator>lancewillett</dc:creator>

      <pubDate>Wed, 29 Sep 2010 20:22:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14993</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14993/1285791733000000</guid>
      <description>&lt;p&gt;
This comes to light with recent Twitter changes to how tweet permalinks work. Example: &lt;a class="ext-link" href="http://twitter.com/#!/wordpress/status/25907440233"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://twitter.com/#!/wordpress/status/25907440233&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
When filtered with &lt;code&gt;make_clickable&lt;/code&gt; the URL result stops at the # character. Resulting HTML:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;a href="http://twitter.com/#" rel="noreferrer nofollow"&amp;gt;http://twitter.com/#&amp;lt;/a&amp;gt;
!/wordpress/status/25907440233
&lt;/pre&gt;&lt;p&gt;
Adding ! to the pattern would avoid this.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>quickpress.part1.patch attached to Ticket #14966</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Wed, 29 Sep 2010 20:20:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14966/quickpress.part1.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14966/quickpress.part1.patch/1285791615000000</guid>
      <description>&lt;p&gt;
Moves some functions from the admin to the universal api
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14992 (When Object Caching is enabled switch_to_blog causes issues with some ...) created</title>
      
        <dc:creator>simonwheatley</dc:creator>

      <pubDate>Wed, 29 Sep 2010 20:19:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14992</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14992/1285791547000000</guid>
      <description>&lt;p&gt;
When you use &lt;code&gt;switch_to_blog&lt;/code&gt; with an Object caching plugin installed you get incorrect links from &lt;code&gt;home_url&lt;/code&gt; and therefore also &lt;code&gt;get_permalink&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
To reproduce:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Setup a WP Network using sub-directories with at least two sites
&lt;/li&gt;&lt;li&gt;Install an Object caching plugin
&lt;/li&gt;&lt;li&gt;Assuming that &lt;code&gt;get_option&lt;/code&gt; has been called earlier, thereby loading the cache with &lt;code&gt;alloptions&lt;/code&gt;, use &lt;code&gt;switch_to_blog&lt;/code&gt; then &lt;code&gt;get_permalink&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_permalink&lt;/code&gt; returns a URL based on the site which was active &lt;strong&gt;before&lt;/strong&gt; you used &lt;code&gt;switch_to_blog&lt;/code&gt;
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
The problem seems to be that the Object cache caches &lt;code&gt;alloptions&lt;/code&gt;, but these aren't refreshed or switched when &lt;code&gt;switch_to_blog&lt;/code&gt; is used (at this point a new set of options should be made available).
&lt;/p&gt;
&lt;p&gt;
I'm using this code to get around it (this is not a patch, obviously):
&lt;/p&gt;
&lt;pre class="wiki"&gt;/**
 * Hooks the WP MS action switch_blog to switch some caches cache when a blog
 * is switched to.
 *
 * @param int $blog_id The ID of the blog which has been switched to
 * @param int $prev_blog_id The ID of the blog we were in before switching
 * @return void
 **/
function kcostb_switch_blog( $blog_id, $prev_blog_id ) {
	// Save the previous alloptions cache
	$prev_alloptions = wp_cache_get( 'alloptions', 'options' );
	// Do we have a previously cached alloptions for the new blog? If so,
	// replace the current alloptions cache otherwise delete it.
	if ( $alloptions = wp_cache_get( "alloptions_$blog_id", 'options' ) )
		wp_cache_replace( "alloptions", $alloptions, 'options' );
	else
		wp_cache_delete( 'alloptions', 'options' );
}
add_action( 'switch_blog', 'kcostb_switch_blog', null, 2 );
&lt;/pre&gt;&lt;p&gt;
Questions:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Should this be solved by switching caches (as my mini plugin does)?
&lt;/li&gt;&lt;li&gt;Should we simply delete the &lt;code&gt;alloptions&lt;/code&gt; cache when &lt;code&gt;switch_to_blog&lt;/code&gt; is used?
&lt;/li&gt;&lt;li&gt;Are there any other areas affected similarly?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Happy to produce a patch if the first two questions could be advised upon.
&lt;/p&gt;
&lt;p&gt;
Could be related to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12040" title="#12040: defect (bug): switch_to_blog() does not handle permalinks (closed: wontfix)"&gt;#12040&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>quickpress.2.patch attached to Ticket #14966</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Wed, 29 Sep 2010 20:09:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14966/quickpress.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14966/quickpress.2.patch/1285790992000000</guid>
      <description>&lt;p&gt;
Pass 2
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14435 (Network Admin) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 29 Sep 2010 20:02:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14435#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14435#comment:36/1285790578000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14435#comment:34" title="Comment 34"&gt;andrea_r&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also noting that any existing plugins that hooked into the former Super Admin menu to form their own sub-menu are now cut loose and unavailable. The plugins run, you just can't access any of the menus they created. There are a few where the menus are now showing up under other random top-level menus.
&lt;/p&gt;
&lt;p&gt;
So whatever hook they tapped into, it would be awesome if it could show up in here.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's going to be a little tricky because previously all the items were submenus and now they are top-level menus.
&lt;/p&gt;
&lt;p&gt;
Also, this would probably be easier to handle if we had an API for manipulating admin menus. See &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/12718" title="#12718: enhancement: Better structure for admin menu (reopened)"&gt;#12718&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12718 (Better structure for admin menu) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 29 Sep 2010 19:52:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12718#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12718#comment:20/1285789927000000</guid>
      <description>&lt;p&gt;
These are the things that aren't supported in the antique version of PHP4:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;static method calls: &lt;code&gt;WP_AdminMenuSection::add($section,$args);&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;access modifiers for methods or properties:
&lt;ul&gt;&lt;li&gt;&lt;code&gt;private function add(...)&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;private $index;&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14685 (Correct license notice) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 29 Sep 2010 19:32:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14685#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14685#comment:48/1285788758000000</guid>
      <description>&lt;p&gt;
For reference and to make it easier to review, I now listed all changes in this history of the &lt;a class="ext-link" href="http://codex.wordpress.org/User:Hakre/Core/Wordpress_Copyright"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress Copyright&lt;/a&gt; Statement.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14966 (QuickPress should be a function with alot of hooks) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Wed, 29 Sep 2010 19:02:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14966#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14966#comment:3/1285786929000000</guid>
      <description>&lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14966 (QuickPress should be a function with alot of hooks) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 29 Sep 2010 19:01:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14966#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14966#comment:2/1285786887000000</guid>
      <description>&lt;p&gt;
Going over the patch with jorbin now. Looks good as a first pass. We're going to alter the hooks a bit and do some other cleanups, and I expect an initial commit shortly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>14991.diff attached to Ticket #14991</title>
      
        <dc:creator>prettyboymp</dc:creator>

      <pubDate>Wed, 29 Sep 2010 18:02:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14991/14991.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14991/14991.diff/1285783379000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14991 (extra_rules_top should take priority over extra_permastructs) created</title>
      
        <dc:creator>prettyboymp</dc:creator>

      <pubDate>Wed, 29 Sep 2010 18:00:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14991</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14991/1285783208000000</guid>
      <description>&lt;p&gt;
Since extra_rules_top are specifically added instead of generated like the those from the extra_permastructs which runs through generate_rewrite_ruls(), shouldn't the extra_rules_top take priority in conflicts?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14435 (Network Admin) updated</title>
      
        <dc:creator>andrea_r</dc:creator>

      <pubDate>Wed, 29 Sep 2010 15:15:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14435#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14435#comment:35/1285773309000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Forgot to tic the cc box.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14435 (Network Admin) updated</title>
      
        <dc:creator>andrea_r</dc:creator>

      <pubDate>Wed, 29 Sep 2010 15:07:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14435#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14435#comment:34/1285772853000000</guid>
      <description>&lt;p&gt;
Just confirming that right now there's no way to add another Super Admin. Or remove one.
&lt;/p&gt;
&lt;p&gt;
Also noting that any existing plugins that hooked into the former Super Admin menu to form their own sub-menu are now cut loose and unavailable. The plugins run, you just can't access any of the menus they created. There are a few where the menus are now showing up under other random top-level menus.
&lt;/p&gt;
&lt;p&gt;
So whatever hook they tapped into, it would be awesome if it could show up in here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14051 (Cannot remove super admin privileges from user) updated</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Wed, 29 Sep 2010 15:03:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14051#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14051#comment:8/1285772622000000</guid>
      <description>&lt;p&gt;
probably another example of where site owner / technical contact "roles" would be useful (to cover off the email address stuff.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14051 (Cannot remove super admin privileges from user) updated</title>
      
        <dc:creator>ipstenu</dc:creator>

      <pubDate>Wed, 29 Sep 2010 14:49:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14051#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14051#comment:7/1285771787000000</guid>
      <description>&lt;p&gt;
Why does the network admin email's ID need to be a super-user at all? If it has to be, then a drop down for 'Emails should be sent from this user account:' listing the admins or super-admins would cover both bases.
&lt;/p&gt;
&lt;p&gt;
If it's totally unrelated, make it unrelated all across the board.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>14990.diff attached to Ticket #14990</title>
      
        <dc:creator>zeo</dc:creator>

      <pubDate>Wed, 29 Sep 2010 14:48:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14990/14990.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14990/14990.diff/1285771700000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14990 (Use CODE instead of KBD tag) created</title>
      
        <dc:creator>zeo</dc:creator>

      <pubDate>Wed, 29 Sep 2010 14:47:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14990</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14990/1285771676000000</guid>
      <description>&lt;p&gt;
See patch.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14976 (WP_Query's init() and init_query_flags() do not do thorough resets) updated</title>
      
        <dc:creator>coffee2code</dc:creator>

      <pubDate>Wed, 29 Sep 2010 14:40:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14976#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14976#comment:6/1285771235000000</guid>
      <description>&lt;p&gt;
I agree that the unsetting of the public properties was a bit unusual.  I personally would have set them to null.  However, the existing convention in the function was to unset properties that were defined but not given an initial value, otherwise re-initialize those that were assigned an initial value.  I figured the existing convention warranted a separate discussion, so I rolled with what was there.  But I with you on that count.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14976 (WP_Query's init() and init_query_flags() do not do thorough resets) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 29 Sep 2010 14:28:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14976#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14976#comment:5/1285770481000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I suggest an additional init_something subroutine for those values directly reset in init() to easier understand the init function.
&lt;/p&gt;
&lt;p&gt;
Next to that I assume that it's not wanted to unset public properties but to set them to null or better to say, their default value. Unsetting the properties means to remove them from the class which I assume is not intended.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14772 (Administration bar) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 29 Sep 2010 14:14:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14772#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14772#comment:30/1285769652000000</guid>
      <description>&lt;p&gt;
I'm for having the functionality, but anchored only so it can be installed as a plugin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12718 (Better structure for admin menu) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Wed, 29 Sep 2010 12:36:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12718#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12718#comment:19/1285763783000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12718#comment:18" title="Comment 18"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The examples look great, but the code still needs to be compatible wth PHP4 for it to be included in WP 3.1.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I haven't paid much attention to what isn't supported in PHP4; I can research but can you point out any specifics you see which our incompatible?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12718 (Better structure for admin menu) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 29 Sep 2010 12:26:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12718#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12718#comment:18/1285763185000000</guid>
      <description>&lt;p&gt;
The examples look great, but the code still needs to be compatible wth PHP4 for it to be included in WP 3.1.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14989 (wrong attachment menu_order(wp_get_attachment_image_src)) created</title>
      
        <dc:creator>o----o</dc:creator>

      <pubDate>Wed, 29 Sep 2010 10:19:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14989</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14989/1285755581000000</guid>
      <description>&lt;p&gt;
Hello
&lt;/p&gt;
&lt;p&gt;
When a user uploads the image or images through the common back-end WP creates the Gallery with these images.
But if the user do not setup the order all images have the menu_order is "0"
If he once reorder the images then the first image has all of sudden menu_order "1" not zero like before.
&lt;/p&gt;
&lt;p&gt;
Now, if anyone wants to get the first image in the template using for ie. wp_get_attachment_image_src he'll go for the menu_order "0", which can be OK, when there is only one picture, and user never "reordered" it, or many unordered, which is way worst, because all of them has "0".
&lt;/p&gt;
&lt;p&gt;
I think this is not supper sensitive bug, but It might confuse many users.
The workaround is simple indeed. We can check if there is image with menu_order "0" if yes then we ask for the "0" and if not will try menu_order "1".. but why we have to do that?
If the picture menu_order starts alway from "1" then the problem never occurs.
(I know you don't want to confuse user in the back-end with 0 as first number, so I'm suggesting to use number "1" in the database)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14516 (Must stripslash input fields for db install) updated</title>
      
        <dc:creator>johanee</dc:creator>

      <pubDate>Wed, 29 Sep 2010 09:16:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14516#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14516#comment:6/1285751785000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14516 (Must stripslash input fields for db install) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 29 Sep 2010 09:14:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14516#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14516#comment:5/1285751660000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14516#comment:4" title="Comment 4"&gt;johanee&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14516" title="#14516: defect (bug): Must stripslash input fields for db install (closed: duplicate)"&gt;#14516&lt;/a&gt; did you mean &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/13655" title="#13655: defect (bug): Login/Install/User Edit should stripslashes() $_POST data (new)"&gt;#13655&lt;/a&gt; ?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yep, thanks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14516 (Must stripslash input fields for db install) updated</title>
      
        <dc:creator>johanee</dc:creator>

      <pubDate>Wed, 29 Sep 2010 09:11:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14516#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14516#comment:4/1285751490000000</guid>
      <description>&lt;p&gt;
This is &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14516" title="#14516: defect (bug): Must stripslash input fields for db install (closed: duplicate)"&gt;#14516&lt;/a&gt; did you mean &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/13655" title="#13655: defect (bug): Login/Install/User Edit should stripslashes() $_POST data (new)"&gt;#13655&lt;/a&gt; ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14139 (Page title missing in Moderate Comments) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 29 Sep 2010 09:11:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14139#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14139#comment:6/1285751472000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15674" title="Add missing echo. see #14139, [15665]."&gt;[15674]&lt;/a&gt;) Add missing echo. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14139" title="#14139: defect (bug): Page title missing in Moderate Comments (closed: fixed)"&gt;#14139&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15665" title="Add missing 'Moderate Comment' $title to comment.php. props MattyRob, ..."&gt;[15665]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [15674]: Add missing echo. see #14139, [15665].</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 29 Sep 2010 09:11:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15674</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15674/1285751468518628</guid>
      <description>&lt;p&gt;
Add missing echo. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14139" title="#14139: defect (bug): Page title missing in Moderate Comments (closed: fixed)"&gt;#14139&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15665" title="Add missing 'Moderate Comment' $title to comment.php. props MattyRob, ..."&gt;[15665]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14516 (Must stripslash input fields for db install) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 29 Sep 2010 09:05:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14516#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14516#comment:3/1285751147000000</guid>
      <description>&lt;p&gt;
Related, potentially for 3.1 as well: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14516" title="#14516: defect (bug): Must stripslash input fields for db install (closed: duplicate)"&gt;#14516&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14516 (Must stripslash input fields for db install) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 29 Sep 2010 09:05:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14516#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14516#comment:2/1285751126000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12718 (Better structure for admin menu) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Wed, 29 Sep 2010 08:54:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12718#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12718#comment:17/1285750448000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12718#comment:16" title="Comment 16"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Ok, I guess also looking at the title makes sense.
&lt;/p&gt;
&lt;p&gt;
Looking forward to the cleaned up patch.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As promised, major positive changes. Your input helped me greatly to simplify it:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://gist.github.com/792b7aa5b695d1092520"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gist.github.com/792b7aa5b695d1092520&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I removed the $args parameter and now lookups are done first via slug and if that fails then via Title. I did not (yet?) perform Title translations because I was thinking maybe we shouldn't; that way use of Titles would really only apply for specific sites.
I could possibly add a check for a constant something like 'FIND_ADMIN_MENUS_BY_TITLE' that must be set for Find-By-Title to work. That way they'd have to find the docs to learn how to use which could say to only use Titles for individual sites, not for distributed themes nor for distributed plugins.
&lt;/p&gt;
&lt;p&gt;
One thing I did was recode it so that any properties or methods of the objects that might expose the internal structure became private. The idea is that the developer should not be able to use this API in a manner that would disallow us to later replace the underlying structure with something more rational &lt;em&gt;(as you requested above)&lt;/em&gt; and not break the developers code. Because of this constraint I placed on the code architecture I had to write some code less than straightforward in one place but I think we'll greatly benefit down the road by this encapsulation.
&lt;/p&gt;
&lt;p&gt;
Also, I used the terms &lt;em&gt;"Menu Section"&lt;/em&gt; and &lt;em&gt;"Menu Item"&lt;/em&gt; because AFAICT there hasn't been consistent naming and the names that have been used are unclear (at least to me.)  If there are terms that others would prefer, I can change.
&lt;/p&gt;
&lt;p&gt;
Here is some example use cases:
&lt;/p&gt;
&lt;pre class="wiki"&gt;  // This example creates one menu in place of Dashboard called "My Menu", adds a few things, and removes all else.
  // This example assumes this might only be done for end users, not administrators
  $dashboard = rename_admin_menu_section('Dashboard','My Menu');
  delete_admin_menu_item($dashboard,'index.php');         // Dashboard
  delete_admin_menu_item($dashboard,'update-core.php');   // Updates
  $movies = "edit.php?post_type=movie";
  copy_admin_menu_item($dashboard,$movies);
  $movie_genre = 'edit-tags.php?taxonomy=movie-genre&amp;amp;post_type=movie';
  copy_admin_menu_item($dashboard,$movies,$movie_genre);
  rename_admin_menu_item($dashboard,$movie_genre,'Movie Genre');
  delete_admin_menu_item($movies);
  delete_admin_menu_item($movies,$movie_genre);
  delete_admin_menu_item($movies,'post-new.php?post_type=movie');
  delete_admin_menu_section($movies);
  $actors = "edit.php?post_type=actor";
  copy_admin_menu_item($dashboard,$actors);
  delete_admin_menu_item($actors);
  delete_admin_menu_item($actors,'post-new.php?post_type=actor');
  //delete_admin_menu_section($actors);
  rename_admin_menu_item($dashboard,'Pages','Other Pages');
  delete_admin_menu_section('edit.php');                  // Posts
  delete_admin_menu_section('upload.php');                // Media
  delete_admin_menu_section('link-manager.php');          // Links
  delete_admin_menu_section('edit-comments.php');         // Comments
  delete_admin_menu_section('edit.php?post_type=page');   // Pages
  delete_admin_menu_section('plugins.php');               // Plugins
  delete_admin_menu_section('themes.php');                // Appearance
  delete_admin_menu_section('users.php');                 // Users
  delete_admin_menu_section('tools.php');                 // Tools
  delete_admin_menu_section('options-general.php');       // Settings
&lt;/pre&gt;&lt;p&gt;
This is definitely still an alpha; no hooks, no real code documentation, etc. but I wanted to get a working version up to get feedback.  Let me know your thoughts.
&lt;/p&gt;
&lt;p&gt;
-Mike
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14773 (Error in slug parsing leads to unlimited URLs for the same article = ...) updated</title>
      
        <dc:creator>kawauso</dc:creator>

      <pubDate>Wed, 29 Sep 2010 08:48:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14773#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14773#comment:2/1285750115000000</guid>
      <description>&lt;p&gt;
Discussed in #wordpress and explained &lt;code&gt;&amp;lt;meta rel="canonical" /&amp;gt;&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Behaviour with multiple dashes is inconsistent with behaviour for incomplete URLs.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12577 (Wrong thumbnails created - transparency) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 29 Sep 2010 07:34:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12577#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12577#comment:11/1285745651000000</guid>
      <description>duplicate: &lt;p&gt;
Actually, I'm just going to mark this as a dup of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11671" title="#11671: defect (bug): Image Saturation Loss on Resize (closed: duplicate)"&gt;#11671&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #12577 (Wrong thumbnails created - transparency) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 29 Sep 2010 07:33:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12577#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12577#comment:10/1285745605000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11671 (Image Saturation Loss on Resize) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 29 Sep 2010 07:33:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11671#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11671#comment:24/1285745582000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14988 (Site admins should be allowed to add existing users without also ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 29 Sep 2010 07:08:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14988#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14988#comment:1/1285744135000000</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14988 (Site admins should be allowed to add existing users without also ...) created</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 29 Sep 2010 07:08:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14988</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14988/1285744091000000</guid>
      <description>&lt;p&gt;
Blog admins are allowed to add users to their multisite blog when the "add new users" network setting is turned on.
&lt;/p&gt;
&lt;p&gt;
Unfortunately this allows them to both add existing users, and create new users. There should be a way, potentially just with a filter versus an option, to limit that to only add existing users, and prevent the creation of new users without going through the public registration process.
&lt;/p&gt;
&lt;p&gt;
Use case: WordPress.com does exactly this.
&lt;/p&gt;
&lt;p&gt;
Alternative use case: WordPress.org uses a pretty crazy SSO setup. We should not be allowed to create new users through the admin, but it would be very helpful to allow administrators to add users to a blog without going through the network admin (or asking a super admin).
&lt;/p&gt;
&lt;p&gt;
Real world use case: Any blogging network like WordPress.com, or crazy synchronized login system like WordPress.org, would want this.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11671 (Image Saturation Loss on Resize) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 29 Sep 2010 06:08:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11671#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11671#comment:23/1285740534000000</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/imagemagick-engine/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/imagemagick-engine/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14986 (Make WordPress roles/capabilities more secure (edit_users related)) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 29 Sep 2010 05:03:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14986#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14986#comment:2/1285736600000000</guid>
      <description>&lt;p&gt;
Agreed with scribu.
&lt;/p&gt;
&lt;p&gt;
The end all, be all capability is currently remove_users. That is, that is how we define is_super_admin() for non-multisite installs.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14986 (Make WordPress roles/capabilities more secure (edit_users related)) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 29 Sep 2010 05:00:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14986#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14986#comment:1/1285736445000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
We already have a promote_users capability, so we should try to make use of it somehow.
&lt;/p&gt;
&lt;p&gt;
Anyway, I think this will be easier to handle once we do the role cleanup we keep talking about.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14760 (wp_get_shortlink not working on pages) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Wed, 29 Sep 2010 03:49:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14760#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14760#comment:1/1285732185000000</guid>
      <description>&lt;p&gt;
Doesn't work on custom post types either.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4967 (Obsolete the RSS 0.92 feed) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Wed, 29 Sep 2010 02:46:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4967#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4967#comment:45/1285728367000000</guid>
      <description>&lt;p&gt;
Sweet Jebus yes. Lets get this done already.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6393 (Export &amp; import blogroll with categories) updated</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Wed, 29 Sep 2010 00:49:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6393#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6393#comment:7/1285721363000000</guid>
      <description>&lt;p&gt;
Is this still being looked at?
&lt;/p&gt;
&lt;p&gt;
I know I can export my links by going to  &lt;a class="ext-link" href="http://YOURBLOGSADDRESS/wp-links-opml.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://YOURBLOGSADDRESS/wp-links-opml.php&lt;/a&gt; and viewing source, but there should be a GUI for this too. After all, we have Blogroll IMPORT on the import tab. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4967 (Obsolete the RSS 0.92 feed) updated</title>
      
        <dc:creator>peaceablewhale</dc:creator>

      <pubDate>Wed, 29 Sep 2010 00:43:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4967#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4967#comment:44/1285720990000000</guid>
      <description>&lt;p&gt;
Please do obsolete the RSS 0.92 feed... it is so confusing that even Microsoft has used it...
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="ext-link" href="http://windowslivehelp.com/thread.aspx?threadid=2911f6f5-5c81-4e5f-902a-189ec09238b7"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://windowslivehelp.com/thread.aspx?threadid=2911f6f5-5c81-4e5f-902a-189ec09238b7&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>