<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #10518 (Make the post editing form file upload friendly) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 03 Oct 2009 23:46:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10518#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10518#comment:9/1254613604000000</guid>
      <description>&lt;p&gt;
Hm, That is true.. However, It should have minimal impact, It wouldn't affect autosaves.
&lt;/p&gt;
&lt;p&gt;
Perhaps a better option would just to add a action into the form tag so that plugins which absolutely need to add file uploaders to forms can do so?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10518 (Make the post editing form file upload friendly) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 03 Oct 2009 23:42:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10518#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10518#comment:8/1254613362000000</guid>
      <description>&lt;p&gt;
Adding that would switch the way form data is sent by the browser, it turns it into a multipart MIME data stream (similar to an email with attachments).
&lt;/p&gt;
&lt;p&gt;
From RFC2388 &lt;a class="ext-link" href="http://www.ietf.org/rfc/rfc2388.txt"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.ietf.org/rfc/rfc2388.txt&lt;/a&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;The multipart/form-data encoding has a high overhead and performance
impact if there are many fields with short values. However, in
practice, for the forms in use, for example, in HTML (in 1998), the average
overhead is not significant.
&lt;/pre&gt;&lt;p&gt;
Not sure now much that would affect WordPress but seems many of our forms have "many fields with short values".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10882 (Add default data to get_*_meta()) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sat, 03 Oct 2009 23:15:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10882#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10882#comment:8/1254611712000000</guid>
      <description>&lt;p&gt;
See:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://wpdevel.wordpress.com/2009/09/26/image-editor/comment-page-1/#comment-3400"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wpdevel.wordpress.com/2009/09/26/image-editor/comment-page-1/#comment-3400&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10898 (direct theme install error is not reported) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 03 Oct 2009 22:56:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10898#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10898#comment:3/1254610568000000</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10898 (direct theme install error is not reported) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 03 Oct 2009 22:56:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10898#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10898#comment:2/1254610560000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
In this case, the original failure turned out to be related to file ownership in the wp-admin directory. Regardless, the failure should yield a helpful error message so the sysadmin can fix it, not just pretend that nothing went wrong and move on to ftp as if that was the only way to install a theme
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The only way to "fix" that is to change the way the server is setup and to use suPHP/SuExec, The first port of call is to write directly to the files &lt;em&gt;if it is safe to do so&lt;/em&gt;, If the files are owned by a different user than the current process (group settings are ignored for other reasons) then this method cannot be used, And WordPress switches to using the FTP methods.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
it kept giving me a "failed to connect to ftp server" message and prompting me for ftp credentials
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Then that means your FTP server was rejecting your login, It could be due to you selecting SSL when the server doesn't support SSL, or similar.. All WordPress knows is  your ftp server has said no. Can you check your server logs (If you've got access to them) to see why the server rejected your credentials? (Or if it even connected?)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10895 (theme upload / delete fails due to update.php / themes.php ownerhip) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 03 Oct 2009 22:52:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10895#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10895#comment:1/1254610359000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Unfortunately both of those resources you've refered to do NOT make reference to the upgrade/install process.
&lt;/p&gt;
&lt;p&gt;
you should NOT have to change the ownership of the files, or the permission levels. WordPress does NOT access the files directly.
&lt;/p&gt;
&lt;p&gt;
WordPress uses FTP to modify the files (Unless WordPress is in a suPHP/SuExec environment, Or you've messed with ownership/permissions), It'd be much appreciated if you'd report the original error you came up against.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10898 (direct theme install error is not reported) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 03 Oct 2009 22:43:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10898#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10898#comment:1/1254609787000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Can you please give an example of your install environment in order to duplicate the issue?
&lt;/p&gt;
&lt;p&gt;
ie. files were owned by apache:apache instead of user:user and caused XYZ to happen. On a server running Linux w/ ProFTPD and PHP 5.3
&lt;/p&gt;
&lt;p&gt;
Also, Does this differ from your other report &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10895" title="#10895: defect (bug): theme upload / delete fails due to update.php / themes.php ownerhip (closed: worksforme)"&gt;#10895&lt;/a&gt;, or is it likely these were down to the same issue on your end?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10898 (direct theme install error is not reported) created</title>
      
        <dc:creator>foresto</dc:creator>

      <pubDate>Sat, 03 Oct 2009 22:35:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10898</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10898/1254609352000000</guid>
      <description>&lt;p&gt;
I just spent a few hours banging my head against a wordpress 2.8.4 installation which was mysteriously failing to accept a theme upload through the web UI.  Instead of accepting the upload, it kept giving me a "failed to connect to ftp server" message and prompting me for ftp credentials.  This was odd, because other installations simply accepted my upload and installed it.
&lt;/p&gt;
&lt;p&gt;
After some experimentation, here's what seems to be going on:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Wordpress tries accepting my theme file and installing it directly (from within the web server process).
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;If that fails, Wordpress falls back to installing via ftp.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Problem: It never tells me the cause of the original failure, or even that there was a failure in the first place!
&lt;/p&gt;
&lt;p&gt;
In this case, the original failure turned out to be related to file ownership in the wp-admin directory.  Regardless, the failure should yield a helpful error message so the sysadmin can fix it, not just pretend that nothing went wrong and move on to ftp as if that was the only way to install a theme.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10897 (tag="rel" should not be used in the tag cloud, since those tags do not ...) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 03 Oct 2009 21:58:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10897#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10897#comment:1/1254607131000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10897 (tag="rel" should not be used in the tag cloud, since those tags do not ...) created</title>
      
        <dc:creator>DanielStutzbach</dc:creator>

      <pubDate>Sat, 03 Oct 2009 21:53:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10897</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10897/1254606820000000</guid>
      <description>&lt;p&gt;
Links to tags tags that describe the current page can be marked with rel="tag", to give search engines an extra clue about what the current page is about.  The tags in the tag cloud should not be marked with rel="tag", since they do not necessarily describe the current page (effectively diluting the usefulness of the information).
&lt;/p&gt;
&lt;p&gt;
Quoting the HTML 5 spec:
&lt;a class="ext-link" href="http://www.w3.org/TR/html5/history.html#link-type-tag"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.w3.org/TR/html5/history.html#link-type-tag&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
"Since it indicates that the tag applies to the current document, it would be inappropriate to use this keyword in the markup of a tag cloud, which lists the popular tag across a set of pages"
&lt;/p&gt;
&lt;p&gt;
Also see the older microformat spec:
&lt;a class="ext-link" href="http://microformats.org/wiki/rel-tag"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://microformats.org/wiki/rel-tag&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Removing the rel="tag" from the tag cloud is a straightforward two-line change in wp_generate_tag_cloud() in category-template.php.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10896 (preg_replace with eval modifier used in _fix_attachment_links) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 03 Oct 2009 21:46:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10896#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10896#comment:3/1254606363000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Could you create a patch file for that.
&lt;/p&gt;
&lt;p&gt;
Instructions can be found from here:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://markjaquith.wordpress.com/2005/11/02/my-wordpress-toolbox/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://markjaquith.wordpress.com/2005/11/02/my-wordpress-toolbox/&lt;/a&gt;
&lt;a class="ext-link" href="http://blog.ftwr.co.uk/archives/2005/11/03/windows-wordpress-toolbox/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://blog.ftwr.co.uk/archives/2005/11/03/windows-wordpress-toolbox/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10896 (preg_replace with eval modifier used in _fix_attachment_links) updated</title>
      
        <dc:creator>BenBE1987</dc:creator>

      <pubDate>Sat, 03 Oct 2009 21:41:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10896#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10896#comment:2/1254606119000000</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10896 (preg_replace with eval modifier used in _fix_attachment_links) updated</title>
      
        <dc:creator>BenBE1987</dc:creator>

      <pubDate>Sat, 03 Oct 2009 21:41:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10896#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10896#comment:1/1254606062000000</guid>
      <description>&lt;p&gt;
Patched locally for me as:
&lt;/p&gt;
&lt;pre class="wiki"&gt;//
// Private
//
global $_fix_attachment_link_id;
function _fix_attachment_links_replaceCB($match) {
        global $_fix_attachment_link_id;
        return stripslashes( 'href='.$m[1] ).get_attachment_link( $_fix_attachment_link_id ).stripslashes( $m[1] );
}
/**
 * Replace hrefs of attachment anchors with up-to-date permalinks.
 *
 * @since unknown
 * @access private
 *
 * @param unknown_type $post_ID
 * @return unknown
 */
function _fix_attachment_links( $post_ID ) {
        global $_fix_attachment_link_id;
        $post = &amp;amp; get_post( $post_ID, ARRAY_A );
        $search = "#&amp;lt;a[^&amp;gt;]+rel=('|\")[^'\"]*attachment[^&amp;gt;]*&amp;gt;#ie";
        // See if we have any rel="attachment" links
        if ( 0 == preg_match_all( $search, $post['post_content'], $anchor_matches, PREG_PATTERN_ORDER ) )
                return;
        $i = 0;
        $search = "#[\s]+rel=(\"|')(.*?)wp-att-(\d+)\\1#i";
        foreach ( $anchor_matches[0] as $anchor ) {
                if ( 0 == preg_match( $search, $anchor, $id_matches ) )
                        continue;
                $id = (int) $id_matches[3];
                // While we have the attachment ID, let's adopt any orphans.
                $attachment = &amp;amp; get_post( $id, ARRAY_A );
                if ( ! empty( $attachment) &amp;amp;&amp;amp; ! is_object( get_post( $attachment['post_parent'] ) ) ) {
                        $attachment['post_parent'] = $post_ID;
                        // Escape data pulled from DB.
                        $attachment = add_magic_quotes( $attachment);
                        wp_update_post( $attachment);
                }
                $post_search[$i] = $anchor;
                $_fix_attachment_link_id = $id;
                $post_replace[$i] = preg_replace_callback( "#href=(\"|')[^'\"]*\\1#", '_fix_attachment_links_replaceCB', $anchor );
                ++$i;
        }
        $post['post_content'] = str_replace( $post_search, $post_replace, $post['post_content'] );
        // Escape data pulled from DB.
        $post = add_magic_quotes( $post);
        return wp_update_post( $post);
}
&lt;/pre&gt;&lt;p&gt;
Not sure if this fully works.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10893 (get_site_option should activate the same filters as the mu version) closed</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 03 Oct 2009 21:40:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10893#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10893#comment:3/1254606032000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11995" title="Make the (add|get|update)_site_option functions run the same filters ..."&gt;[11995]&lt;/a&gt;) Make the (add|get|update)_site_option functions run the same filters in WP as they do in mu. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10893" title="#10893: defect (bug): get_site_option should activate the same filters as the mu version (closed: fixed)"&gt;#10893&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [11995]: Make the (add|get|update)_site_option functions run the same filters ...</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 03 Oct 2009 21:40:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11995</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11995/1254606027508377</guid>
      <description>&lt;p&gt;
Make the (add|get|update)_site_option functions run the same filters in WP as they do in mu. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10893" title="#10893: defect (bug): get_site_option should activate the same filters as the mu version (closed: fixed)"&gt;#10893&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #8689 (WordPress must not use preg_replace with /e) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 03 Oct 2009 21:29:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8689#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8689#comment:17/1254605343000000</guid>
      <description>&lt;p&gt;
I have created &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10896" title="#10896: defect (bug): preg_replace with eval modifier used in _fix_attachment_links (closed: fixed)"&gt;#10896&lt;/a&gt; to track this issue - patches welcome.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10896 (preg_replace with eval modifier used in _fix_attachment_links) created</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 03 Oct 2009 21:28:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10896</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10896/1254605321000000</guid>
      <description>&lt;p&gt;
Reported by BenBE1987 on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8689" title="#8689: defect (bug): WordPress must not use preg_replace with /e (closed: fixed)"&gt;#8689&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;		$post_search[$i] = $anchor;
		$post_replace[$i] = preg_replace( "#href=(\"|')[^'\"]*\\1#e", "stripslashes( 'href=\\1' ).get_attachment_link( $id ).stripslashes( '\\1' )", $anchor );
		++$i;
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #8689 (WordPress must not use preg_replace with /e) closed</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 03 Oct 2009 21:25:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8689#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8689#comment:16/1254605147000000</guid>
      <description>fixed: &lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/8689#comment:15" title="Comment 15"&gt;BenBE1987&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
WordPress 2.8.4 violates this again in /wp-admin/includes/post.php around line 6800 in function _fix_attachment_links().
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Please don't re-open tickets fixed in old releases but instead create a new ticket for the issue.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10893 (get_site_option should activate the same filters as the mu version) updated</title>
      
        <dc:creator>mark-k</dc:creator>

      <pubDate>Sat, 03 Oct 2009 19:21:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10893#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10893#comment:2/1254597691000000</guid>
      <description>&lt;p&gt;
Yes, thanks,
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10895 (theme upload / delete fails due to update.php / themes.php ownerhip) created</title>
      
        <dc:creator>foresto</dc:creator>

      <pubDate>Sat, 03 Oct 2009 19:00:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10895</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10895/1254596418000000</guid>
      <description>&lt;p&gt;
Wordpress 2.8.4 theme uploads through the admin UI are failing due to a file ownership issue, even when file ownership and permissions are set exactly as recommended in the Wordpress docs:
&lt;/p&gt;
&lt;p&gt;
"All files should be owned by your user account on your web server, and should be writable by your username. Any file that needs write access from WordPress should be group-owned by the user account used by the webserver."
"For core WordPress files, all should be writable only by your user account."
&lt;a class="ext-link" href="http://codex.wordpress.org/Changing_File_Permissions"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Changing_File_Permissions&lt;/a&gt;
&lt;a class="ext-link" href="http://wordpress.org/docs/en/handbook/2.7/#sysadmin.permissions"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/docs/en/handbook/2.7/#sysadmin.permissions&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I had the ownerships and permissions set exactly as recommended by the wordpress web site, yet uploading a theme still failed.  It also failed when I gave the wordpress/apache process full permissions on *every* file and directory in the whole installation.  It finally worked when I changed the ownership of "wp-admin/update.php" to be that of the apache user.  Mind you, wordpress already had full rights to that file; changing the ownership didn't give it any more abilities than it already had.
&lt;/p&gt;
&lt;p&gt;
It seems wordpress is arbitrarily failing because it thinks update.php should be owned by the apache user, even though that goes contrary to wordpress.org recommendations and standard unix security practices.
&lt;/p&gt;
&lt;p&gt;
There is a similar problem deleting a theme when "wp-admin/themes.php" is not owned by the apache user.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #8400 (Plugin upgrade not possible without being script owner) updated</title>
      
        <dc:creator>foresto</dc:creator>

      <pubDate>Sat, 03 Oct 2009 18:40:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8400#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8400#comment:3/1254595200000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8689 (WordPress must not use preg_replace with /e) reopened</title>
      
        <dc:creator>BenBE1987</dc:creator>

      <pubDate>Sat, 03 Oct 2009 18:29:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8689#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8689#comment:15/1254594583000000</guid>
      <description>&lt;p&gt;
WordPress 2.8.4 violates this again in /wp-admin/includes/post.php around line 6800 in function _fix_attachment_links().
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>10886.2.diff attached to Ticket #10886</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Sat, 03 Oct 2009 17:44:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10886/10886.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10886/10886.2.diff/1254591872000000</guid>
      <description>&lt;p&gt;
Adds $query_vars to the filter so that you can use that information to determine how you should return.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10889 (filesystem's put_content() methods have inconsistent arguments -- ...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sat, 03 Oct 2009 17:42:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10889#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10889#comment:6/1254591774000000</guid>
      <description>&lt;p&gt;
this one needs a patch no matter what:
&lt;/p&gt;
&lt;p&gt;
Warning: ftp_chdir() expects exactly 2 parameters, 1 given in /home/yourau5c/public_html/wp-admin/includes/class-wp-filesystem-ftpext.php on line 137
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10894 (Categories are not working for me in wordpress 2.8.4) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sat, 03 Oct 2009 17:36:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10894#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10894#comment:1/1254591362000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
did you disable all plugins and switch to the default theme?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10886 (WordPress should not unnecessarily query posts at page load) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 03 Oct 2009 17:27:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10886#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10886#comment:12/1254590841000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10886#comment:11" title="Comment 11"&gt;sivel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Sorry, I should have also stated that this is the result when running the filter using a plugin or in a themes functions.php without context to what is actually being called/loaded.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think if someone does this in a theme/plugin without checking the context then they deserve to be eaten by those dragons :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10892 (msql query fails when running set names utf8) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 03 Oct 2009 17:25:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10892#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10892#comment:1/1254590755000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This code already does return 0 rows affected in this case.
&lt;/p&gt;
&lt;p&gt;
I cannot reproduce your bug can you provide more information.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10886 (WordPress should not unnecessarily query posts at page load) updated</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Sat, 03 Oct 2009 17:25:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10886#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10886#comment:11/1254590711000000</guid>
      <description>&lt;p&gt;
Sorry, I should have also stated that this is the result when running the filter using a plugin or in a themes functions.php without context to what is actually being called/loaded.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10886 (WordPress should not unnecessarily query posts at page load) updated</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Sat, 03 Oct 2009 17:18:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10886#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10886#comment:10/1254590339000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The patch as it stands now causes the admin to say there are the correct number of posts/pages/attachments but "hides" them from view in the edit lists.  I'm not saying this is bad or good.  Just wondering what everyone else has to say about it.  Should it be up to the developer to make sure they only filter for the front end by checking if is_admin() is true?  Or do we want to assume that we always want to be able to see this in the admin?  Or should we add a second filter for the admin?  So we would have run_wp_main_front and run_wp_main_admin or something like that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10893 (get_site_option should activate the same filters as the mu version) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 03 Oct 2009 17:18:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10893#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10893#comment:1/1254590312000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
How is that?
&lt;/p&gt;
&lt;p&gt;
Does this give you the same behaviour.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>site-option-mu-filters.diff attached to Ticket #10893</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 03 Oct 2009 17:17:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10893/site-option-mu-filters.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10893/site-option-mu-filters.diff/1254590278000000</guid>
      <description>&lt;p&gt;
Patch for the filters
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10894 (Categories are not working for me in wordpress 2.8.4) created</title>
      
        <dc:creator>jamesserver</dc:creator>

      <pubDate>Sat, 03 Oct 2009 17:13:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10894</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10894/1254590000000000</guid>
      <description>&lt;p&gt;
Categories can be created and are added to the database, but they do not show up under the admin section and cannot be edited. I have this issue with an IIS and apache webserver, both of which are using the same SQL database. I have a 2.8.3 install of wordpress that is not having this issue.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10886 (WordPress should not unnecessarily query posts at page load) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 03 Oct 2009 12:42:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10886#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10886#comment:9/1254573760000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10886#comment:8" title="Comment 8"&gt;sivel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'd like to have the filter pass $query_vars also so that the $query_vars could be used as a way to determine if you should return false or not.  I don't have a current use for this, but I see a possibility of it being helpful.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1
&lt;/p&gt;
&lt;p&gt;
That sounds very sensible.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10893 (get_site_option should activate the same filters as the mu version) created</title>
      
        <dc:creator>mark-k</dc:creator>

      <pubDate>Sat, 03 Oct 2009 12:34:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10893</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10893/1254573241000000</guid>
      <description>&lt;p&gt;
No much point in having the same function names if they behave differently.
&lt;/p&gt;
&lt;p&gt;
Namely, call the pre_site_option_${key} filter before getting the option and site_option_${key} to filter the return value.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10518 (Make the post editing form file upload friendly) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 03 Oct 2009 12:31:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10518#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10518#comment:7/1254573117000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm supportive of this, Pretty sure it has no negitive side effects, but has the benefit of allowing easier file uploads from within meta boxes among others..
&lt;/p&gt;
&lt;p&gt;
The only downside is letting some plugin authors mearly rely upon a form post to upload their items, instead of allowing it to happen asynchronously.
&lt;/p&gt;
&lt;p&gt;
Currently some plugins are using iframes as a way around this..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10518 (Make the post editing form file upload friendly) updated</title>
      
        <dc:creator>mark-k</dc:creator>

      <pubDate>Sat, 03 Oct 2009 12:25:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10518#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10518#comment:6/1254572700000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I don't want to learn how to mess with SVN and generate patches, please shot me ;).
&lt;/p&gt;
&lt;p&gt;
All I'm asking is that in every place there is a form it will have an enctype='multipart/form-data' attribute. Yes for all of the tens of places in the code, but having that for the post and page editing forms and tag and category editing will be nice enough for a start.
&lt;/p&gt;
&lt;p&gt;
This is a zero risk change even if you misspell it .... Hope that my request is better explained now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10727.3.patch attached to Ticket #10727</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 03 Oct 2009 12:23:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10727/10727.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10727/10727.3.patch/1254572639000000</guid>
      <description>&lt;p&gt;
Updated for compability reasons
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10727 (Update phpass to version 0.2 (check /dev/urandom before accessing it)) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 03 Oct 2009 12:17:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10727#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10727#comment:8/1254572245000000</guid>
      <description>&lt;p&gt;
Yeah I read that as well in the manual. I will update the patch and propose the changes upstream.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10727 (Update phpass to version 0.2 (check /dev/urandom before accessing it)) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 03 Oct 2009 12:08:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10727#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10727#comment:7/1254571686000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
$this-&amp;gt;random_state = microtime() . (function_exists('getmypid') ? getmypid() : &lt;em&gt;) . uniqid(rand(), TRUE);
&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
IMO, the usage of getmypid() should be removed entirely, Its not a reliable source of crypto-safe random data.. This is due to Process ID's having weak entropy..
&lt;/p&gt;
&lt;p&gt;
To quote the PHP Manual even: "Process IDs are not unique, thus they are a weak entropy source. We recommend against relying on pids in security-dependent contexts."
&lt;/p&gt;
&lt;p&gt;
I'd support removal of the getmypid() branch all together, and rely upon uniqid(rand(), TRUE) instead, as its going to be actually random.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10886 (WordPress should not unnecessarily query posts at page load) updated</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Sat, 03 Oct 2009 11:58:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10886#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10886#comment:8/1254571100000000</guid>
      <description>&lt;p&gt;
I'd like to have the filter pass $query_vars also so that the $query_vars could be used as a way to determine if you should return false or not.  I don't have a current use for this, but I see a possibility of it being helpful.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10727 (Update phpass to version 0.2 (check /dev/urandom before accessing it)) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 03 Oct 2009 11:43:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10727#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10727#comment:6/1254570205000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10892 (msql query fails when running set names utf8) created</title>
      
        <dc:creator>digininja</dc:creator>

      <pubDate>Sat, 03 Oct 2009 10:29:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10892</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10892/1254565752000000</guid>
      <description>&lt;p&gt;
There is code on line 367 of wordpress/wp-includes/wp-db.php which does a db query of SET NAMES 'utf8'. The code in query can't handle this correctly as it expects it to return a number of rows which it doesn't so the line
&lt;/p&gt;
&lt;p&gt;
while ($i &amp;lt; @mysql_num_fields($this-&amp;gt;result)) {
&lt;/p&gt;
&lt;p&gt;
in the query function fails.
&lt;/p&gt;
&lt;p&gt;
The easy fix for this is to add
&lt;/p&gt;
&lt;p&gt;
} elseif ( preg_match("/&lt;sup&gt;&lt;br /&gt;s*(set) /i",$query) ) {
&lt;/sup&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
return 0;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
as part of the if statement around line 700.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10784 (Press This fixes) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 03 Oct 2009 07:14:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10784#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10784#comment:7/1254554088000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11994" title="Press This fixes, props noel, see #10784"&gt;[11994]&lt;/a&gt;) Press This fixes, props noel, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10784" title="#10784: task (blessed): Press This fixes (closed: fixed)"&gt;#10784&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [11994]: Press This fixes, props noel, see #10784</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 03 Oct 2009 07:14:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11994</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11994/1254554084028684</guid>
      <description>&lt;p&gt;
Press This fixes, props noel, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10784" title="#10784: task (blessed): Press This fixes (closed: fixed)"&gt;#10784&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>press-this-10-3-09.patch attached to Ticket #10784</title>
      
        <dc:creator>noel</dc:creator>

      <pubDate>Sat, 03 Oct 2009 07:06:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10784/press-this-10-3-09.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10784/press-this-10-3-09.patch/1254553602000000</guid>
      <description>&lt;p&gt;
Fixes some image url scrapping issues, removes redundant post tags label
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10857 (Invalid GUID) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 03 Oct 2009 04:35:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10857#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10857#comment:5/1254544536000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
then the GUID for a particular post/object is no longer a globally unique as it remains present on the original site A.com (assuming the post/object isn't deleted).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You're thinking in terms of URL's.
&lt;/p&gt;
&lt;p&gt;
The URL is not unique, But the content contained within IS unique, a post on Possums is a post on possums no matter if its on Site A or site B, as long as the content remains constant. Editing the content should be regarded the same, Its not a new document, Its the same document, however, edited.
&lt;/p&gt;
&lt;p&gt;
Exporting from SiteA to SiteB and retaining SiteA would not really be a valid use-case in my opinion for pro-guid change, as the content should not exist in multipl locations.. one should redirect to the other.
&lt;/p&gt;
&lt;p&gt;
the only real time i can think of that changing the guid should be acceptable, would be moving from private-access site to a public-access site (ie. localhost  or dev.site to site.com), That can be done by manually modifying the export however if its wanted.. (find/replace in your favourite file editor)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10857 (Invalid GUID) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sat, 03 Oct 2009 04:25:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10857#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10857#comment:4/1254543924000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10857#comment:1" title="Comment 1"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
A Guid is a "Globally Unique ID", Which shouldn't change when the location of the content has changed. As such, Moving between servers shouldnt change the GUID.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is an interesting issue. If content is exported from A.com and imported into B.com and the GUIDs are unaltered, then the GUID for a particular post/object is no longer a globally unique as it remains present on the original site A.com (assuming the post/object isn't deleted).
&lt;/p&gt;
&lt;p&gt;
If each GUID was changed to reflect the fact the content was now on B.com (as this ticket originally suggested) then the GUIDs would remain globally unique.
&lt;/p&gt;
&lt;p&gt;
I think the OP might have a point.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>script-conditionals.diff attached to Ticket #10891</title>
      
        <dc:creator>jdub</dc:creator>

      <pubDate>Sat, 03 Oct 2009 02:18:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10891/script-conditionals.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10891/script-conditionals.diff/1254536283000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10891 (Internal support for conditional scripts (same as existing conditional ...) created</title>
      
        <dc:creator>jdub</dc:creator>

      <pubDate>Sat, 03 Oct 2009 02:17:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10891</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10891/1254536274000000</guid>
      <description>&lt;p&gt;
Although it's not exposed through the wp_enqueue_style API, you can add a conditional to the queued style (by twiddling $wp_styles) and WP_Styles::do_item will do the right thing. This is used within core to provide CSS to poopy browsers ("lt IE 7").
&lt;/p&gt;
&lt;p&gt;
This patch adds similar internal-only support for script conditionals to WP_Scripts::do_item.
&lt;/p&gt;
&lt;p&gt;
It might be nice to expose this in the wp_enqueue_* API at some point, but for now this will do. :-)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10885 (Custom post types show up in search) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 03 Oct 2009 01:09:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10885#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10885#comment:8/1254532195000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Patch adds get_post_types().
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Looks good to me :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Should it return a list of post type names or objects?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Originally i thought Objects, But, The function name really suggests it merely returns an array of matching post_types.. But thats just my 2c.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10862 (Incorrect encoding for non-ascii symbols in emails) updated</title>
      
        <dc:creator>bobrik</dc:creator>

      <pubDate>Fri, 02 Oct 2009 22:47:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10862#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10862#comment:5/1254523635000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Any plugin can use that class so default codepage must be ok for most cases.
&lt;/p&gt;
&lt;p&gt;
How long changing class defaults to correct values became a bad practise? Or it's better to set that value for every object?
&lt;/p&gt;
&lt;p&gt;
I don't see any troubles with that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10778 (PHP Warning in class-IXR.php when $method is array) updated</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Fri, 02 Oct 2009 22:40:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10778#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10778#comment:3/1254523223000000</guid>
      <description>&lt;p&gt;
Can you provide steps to reproduce the warning using the core WP code?
&lt;/p&gt;
&lt;p&gt;
As a side note, you can add and alter the XML-RPC methods WP provides by just using the built filter system.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10890 (Remove php-gettext code) created</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Fri, 02 Oct 2009 21:02:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10890</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10890/1254517349000000</guid>
      <description>&lt;p&gt;
We now use pomo to parse the translation files so we no longer need the php-gettest library
&lt;/p&gt;
&lt;p&gt;
We should remove it and announce it's not there.
&lt;/p&gt;
&lt;p&gt;
We need to remove wp-includes/gettext.php and wp-includes/streams.php
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>10886.diff attached to Ticket #10886</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Fri, 02 Oct 2009 20:48:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10886/10886.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10886/10886.diff/1254516502000000</guid>
      <description>&lt;p&gt;
I don't think we should be calling the wp hook from two different places like that.  I think I prefer this patch.  Does this work for you?
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>lighter-load.3.patch attached to Ticket #10886</title>
      
        <dc:creator>junsuijin</dc:creator>

      <pubDate>Fri, 02 Oct 2009 19:34:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10886/lighter-load.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10886/lighter-load.3.patch/1254512084000000</guid>
      <description>&lt;p&gt;
filter used, wp() circumvented, 'wp' hook left intact, commented
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10886 (WordPress should not unnecessarily query posts at page load) updated</title>
      
        <dc:creator>junsuijin</dc:creator>

      <pubDate>Fri, 02 Oct 2009 19:15:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10886#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10886#comment:7/1254510909000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
For reference, here is the corresponding BuddyPress ticket:
&lt;a class="ext-link" href="http://trac.buddypress.org/ticket/967"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://trac.buddypress.org/ticket/967&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10886 (WordPress should not unnecessarily query posts at page load) updated</title>
      
        <dc:creator>junsuijin</dc:creator>

      <pubDate>Fri, 02 Oct 2009 19:12:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10886#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10886#comment:6/1254510721000000</guid>
      <description>&lt;p&gt;
Building on ryan, westi, and sivel's work/suggestions, this new patch seems to further improve page loading times. More testing indicates that extra queries are caused by setting the 'wp_main' filter to false when site-wide post requests are made later on. This seems a case of benefitting the majority over the minority though, since the people that find the 'wp_main' filter set to false on a page where they want to include something like a site-wide posts widget, can just reset the filter to true.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10857 (Invalid GUID) closed</title>
      
        <dc:creator>ss44</dc:creator>

      <pubDate>Fri, 02 Oct 2009 19:09:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10857#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10857#comment:3/1254510596000000</guid>
      <description>invalid: &lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10857#comment:1" title="Comment 1"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The fact that the GUID's are URL's does not mean that the GUID should be used as a URL.
&lt;/p&gt;
&lt;p&gt;
A Guid is a "Globally Unique ID", Which shouldn't change when the location of the content has changed. As such, Moving between servers shouldnt change the GUID.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The problem I was having was in light of using guid as url rather then using the get_permalink function. Thanks for clearing this up.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #8905 (Category pagination broken with certain permalink structures) updated</title>
      
        <dc:creator>emartin24</dc:creator>

      <pubDate>Fri, 02 Oct 2009 19:08:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8905#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8905#comment:5/1254510508000000</guid>
      <description>&lt;p&gt;
Ran into this issue today - would love to see a fix.
&lt;/p&gt;
&lt;p&gt;
I'm not sure if it is as simple as putting some extra logic in parse_request()? Using Doug Smith's code as inspiration, I added the following right before $this-&amp;gt;query_vars = apply_filters('request', $this-&amp;gt;query_vars); :
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ($this-&amp;gt;query_vars['name'] === 'page' &amp;amp;&amp;amp; isset($this-&amp;gt;query_vars['page'])) {
	unset($this-&amp;gt;query_vars['name']);
	$this-&amp;gt;query_vars['paged'] = str_replace('/', '', $this-&amp;gt;query_vars['page']);
}
&lt;/pre&gt;&lt;p&gt;
Thoughts?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8964 (Allow adding headers to get_plugin_data) updated</title>
      
        <dc:creator>strider72</dc:creator>

      <pubDate>Fri, 02 Oct 2009 17:37:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8964#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8964#comment:43/1254505056000000</guid>
      <description>&lt;p&gt;
Patch 6 also includes a fix to the doc header of the get_file_data function.  The parameters are described correctly now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8964 (Allow adding headers to get_plugin_data) updated</title>
      
        <dc:creator>strider72</dc:creator>

      <pubDate>Fri, 02 Oct 2009 17:35:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8964#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8964#comment:42/1254504921000000</guid>
      <description>&lt;p&gt;
New patch 6 includes everything from patch 5 except:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Fixed bug that missed outputting "Theme" in get_theme_data.  Identical to "Name", but presumably for backward compatibility?  I'm just matching the output of get_theme_data as it already exists.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;get_theme_data now also outputs "AuthorURI".  Just a side-effect of how the new function works -- previous patch explicitly removed it, but why bother?  Also brings it closer to parity with get_plugin data.  Happy side effect, I say. :)
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>wptrac_8964_patch6.diff attached to Ticket #8964</title>
      
        <dc:creator>strider72</dc:creator>

      <pubDate>Fri, 02 Oct 2009 17:29:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/8964/wptrac_8964_patch6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/8964/wptrac_8964_patch6.diff/1254504556000000</guid>
      <description>&lt;p&gt;
Same as patch 5 with bug fixes as discussed in above comments
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10886 (WordPress should not unnecessarily query posts at page load) updated</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Fri, 02 Oct 2009 17:25:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10886#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10886#comment:5/1254504331000000</guid>
      <description>&lt;p&gt;
It seems I may have misunderstood Ryan's suggestion.  I have talked to junsuijin and he should be doing some testing and adding a new patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10885 (Custom post types show up in search) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 02 Oct 2009 15:23:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10885#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10885#comment:7/1254497024000000</guid>
      <description>&lt;p&gt;
Patch adds get_post_types(). Should it return a list of post type names or objects?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10885.2.diff attached to Ticket #10885</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 02 Oct 2009 15:23:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10885/10885.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10885/10885.2.diff/1254496989000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10886 (WordPress should not unnecessarily query posts at page load) updated</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Fri, 02 Oct 2009 15:15:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10886#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10886#comment:4/1254496513000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>lighter-load.2.patch attached to Ticket #10886</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Fri, 02 Oct 2009 15:09:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10886/lighter-load.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10886/lighter-load.2.patch/1254496151000000</guid>
      <description>&lt;p&gt;
New patch that replaces the constant with a filter, and skips wp() as well.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10885 (Custom post types show up in search) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 02 Oct 2009 14:52:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10885#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10885#comment:6/1254495127000000</guid>
      <description>&lt;p&gt;
Sounds good.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10122 (create metaboxes for hierarchical taxonomies) updated</title>
      
        <dc:creator>prettyboymp</dc:creator>

      <pubDate>Fri, 02 Oct 2009 12:06:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10122#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10122#comment:10/1254485160000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I hope I'm not stepping out of bounds by setting a new milestone, but I'd really like to see this make it into 2.9.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10888 (wp_head() arguments) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 02 Oct 2009 11:50:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10888#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10888#comment:1/1254484209000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I don't see a lot of people using this.
&lt;/p&gt;
&lt;p&gt;
You could just add
&lt;/p&gt;
&lt;pre class="wiki"&gt;do_action('wp_head_script');
&lt;/pre&gt;&lt;p&gt;
to your theme, if that's what you need.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9951 (Add [taxonomy]__in, [taxonomy]__not_in to wp_query) updated</title>
      
        <dc:creator>willmot</dc:creator>

      <pubDate>Fri, 02 Oct 2009 09:50:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9951#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9951#comment:11/1254477004000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I have tested this against Wordpress 2.8.4 on a large site that is soon to be released.
&lt;/p&gt;
&lt;p&gt;
The $join on line 1925 is not needed (it joins the taxonomy and term tables on when they are not used in the WHERE). Removing it speeds things up considerably, especially on installs which have thousands of terms.
&lt;/p&gt;
&lt;p&gt;
Attached patch simply removes said line.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>query.2.diff attached to Ticket #9951</title>
      
        <dc:creator>willmot</dc:creator>

      <pubDate>Fri, 02 Oct 2009 09:47:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/9951/query.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/9951/query.2.diff/1254476833000000</guid>
      <description>&lt;p&gt;
Removed unneeded $join
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10845 (Fix single quote html attributes) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 02 Oct 2009 09:25:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10845#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10845#comment:4/1254475545000000</guid>
      <description>wontfix: &lt;p&gt;
The effort and the readability lost in the code outweight the benefit.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10865 (Function to get posts based on post title) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 02 Oct 2009 09:09:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10865#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10865#comment:5/1254474555000000</guid>
      <description>&lt;p&gt;
sounds interesting and very useable.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10865 (Function to get posts based on post title) updated</title>
      
        <dc:creator>willmot</dc:creator>

      <pubDate>Fri, 02 Oct 2009 08:57:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10865#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10865#comment:4/1254473859000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'd like to take this further and bring the get_post functionality inline with get_terms by adding a
&lt;/p&gt;
&lt;pre class="wiki"&gt;get_post_by( 'field', 'value', $args = optional ( 'post_type' and/or 'post_status ) ); function.
&lt;/pre&gt;&lt;p&gt;
I'll write a patch if there's any interest.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10887 (Attempting to disable plugin caused error.) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 02 Oct 2009 08:40:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10887#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10887#comment:1/1254472802000000</guid>
      <description>invalid: &lt;p&gt;
The plugin should still have been deactivated, However, Those warnings are from incorrect coding in the Plugin. You'll need to report it to the Plugin Author.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10843 (bloginfo('tag_url') and bloginfo('category_url')) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 02 Oct 2009 08:36:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10843#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10843#comment:3/1254472580000000</guid>
      <description>wontfix: &lt;blockquote class="citation"&gt;
&lt;p&gt;
Did you read what I said about assigning the posts_page to a static page?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Probably skiped over it, Since its incorrect.
&lt;/p&gt;
&lt;p&gt;
When a static page is used for posts, The category and tag bases stay the same. if the blog is at /wordpress/blog/ category pages are /wordpress/category/some-cat/.
&lt;/p&gt;
&lt;p&gt;
This can be changed by the WordPress user on the Permalinks page by setting the category base to 'blog/category'
&lt;/p&gt;
&lt;p&gt;
That being said.. You shouldnt ever have to manually generate a category url.. You should always use the API to do it instead, The simple reason is to make it more portable between blogs using "Pretty Permalinks" and those using ?cat=something.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;get_category_link($cat_id)&lt;/code&gt; is the function to use (Make sure to check for a WP_Error return on that function though in the case that the category doesn't exist)
&lt;/p&gt;
&lt;p&gt;
I'm closing as wontfix due to the fact you shouldnt have to make the link directly, There being an API available, and your second point being moot.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10889 (filesystem's put_content() methods have inconsistent arguments -- ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 02 Oct 2009 08:25:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10889#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10889#comment:5/1254471918000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
IMO, The items should be changed to the same signature as the Direct class.. Ie. ($file, $contents, $chmod = null, $filetype = null)
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
As for that additional code you've added, I think its because you're using the class in a way that isnt expected.
&lt;/p&gt;
&lt;p&gt;
you do NOT pass a local path to the filesystem classes, You pass a remote path.
&lt;/p&gt;
&lt;p&gt;
ie. ABSPATH = /home/blah/wordpress/ Root in FTP = /wordpress/ All content should be referred to as  /wordpress/blahblahblah
&lt;/p&gt;
&lt;p&gt;
Use &lt;code&gt;$wp_filesystem-&amp;gt;abspath()&lt;/code&gt; and &lt;code&gt;$wp_filesystem-&amp;gt;wp_content_dir()&lt;/code&gt; instead, As the code in WordPress should already be using.
&lt;/p&gt;
&lt;p&gt;
The additional folder lookups are not worth it, Its incredibly IO/FTP hungry using that function, It should be avoided as much as possible, FTP isnt the most efficient protocol for lots of lookups.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10885 (Custom post types show up in search) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 02 Oct 2009 08:13:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10885#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10885#comment:5/1254471189000000</guid>
      <description>&lt;p&gt;
Sounds fair enough to me.
&lt;/p&gt;
&lt;p&gt;
Could we add a few GET api's instead of using the globals directly? Much like the taxonomies..
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;get_post_types()&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Could even simplify things a little for calling functions by doing an array_intersect, for example, This'd only return items matching...
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;get_post_types( array('exclude_from_search' =&amp;gt; false) );&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Would save other code blocks having to iterate over and check for conditionals themselves.. Just a thought :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10889 (filesystem's put_content() methods have inconsistent arguments -- ...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 02 Oct 2009 08:07:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10889#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10889#comment:4/1254470864000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
new patch also fixes the ftp_chdir() issue
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10889.diff attached to Ticket #10889</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 02 Oct 2009 08:06:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10889/10889.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10889/10889.diff/1254470797000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10889 (filesystem's put_content() methods have inconsistent arguments -- ...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 02 Oct 2009 07:49:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10889#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10889#comment:3/1254469740000000</guid>
      <description>&lt;p&gt;
mmm, there actually is another issue:
&lt;/p&gt;
&lt;p&gt;
Warning: ftp_chdir() expects exactly 2 parameters, 1 given in /home/yourau5c/public_html/wp-admin/includes/class-wp-filesystem-ftpext.php on line 137
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10889 (filesystem's put_content() methods have inconsistent arguments -- ...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 02 Oct 2009 07:30:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10889#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10889#comment:2/1254468633000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
to reproduce the bug, use something like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$wp_filesystem-&amp;gt;put_contents(WP_CONTENT_DIR . '/foo.txt', 'bar');
&lt;/pre&gt;&lt;p&gt;
Patch is against WP 2.8.4, and is tested with both of the FTP-based file extensions. There might be a similar change needed for the SSH-based file extension.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10889 (filesystem's put_content() methods have inconsistent arguments -- ...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 02 Oct 2009 07:14:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10889#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10889#comment:1/1254467662000000</guid>
      <description>&lt;p&gt;
It's also returning the following issue:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Warning: ftp_fput() [function.ftp-fput]: Rename/move failure: No such file or directory in /home/yourau5c/public_html/wp-admin/includes/class-wp-filesystem-ftpext.php on line 125
&lt;/pre&gt;&lt;p&gt;
Seems related to this:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.php.net/manual/en/function.ftp-fput.php#86872"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.php.net/manual/en/function.ftp-fput.php#86872&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10889 (filesystem's put_content() methods have inconsistent arguments -- ...) created</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 02 Oct 2009 06:58:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10889</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10889/1254466735000000</guid>
      <description>&lt;p&gt;
I ran into this odd bug in my theme's custom.css editor -- the file wasn't being created. Un-silencing the FTP transport's call to ftp_fput() revealed:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Warning: ftp_fput() [function.ftp-fput]: Mode must be FTP_ASCII or FTP_BINARY in /path/to/public_html/wp-admin/includes/class-wp-filesystem-ftpext.php on line 125
&lt;/pre&gt;&lt;p&gt;
Basically, I had mindlessly used the same signature as other places where it's used in WP, i.e.:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$wp_filesystem-&amp;gt;put_contents($maintenance_file, $maintenance_string, FS_CHMOD_FILE);
$wp_filesystem-&amp;gt;put_contents($file, $maintenance_string, FS_CHMOD_FILE);
&lt;/pre&gt;&lt;p&gt;
but with the FTP transport and others, those two should actually read as:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$wp_filesystem-&amp;gt;put_contents($file, $maintenance_string);
&lt;/pre&gt;&lt;p&gt;
else, the .maintenance files are not created at all.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10845 (Fix single quote html attributes) updated</title>
      
        <dc:creator>prometh</dc:creator>

      <pubDate>Fri, 02 Oct 2009 06:57:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10845#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10845#comment:3/1254466675000000</guid>
      <description>&lt;p&gt;
It's inconsistent.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10843 (bloginfo('tag_url') and bloginfo('category_url')) updated</title>
      
        <dc:creator>prometh</dc:creator>

      <pubDate>Fri, 02 Oct 2009 06:56:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10843#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10843#comment:2/1254466604000000</guid>
      <description>&lt;p&gt;
Did you read what I said about assigning the posts_page to a static page?
&lt;/p&gt;
&lt;p&gt;
Please be more observant when reading tickets.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10768 (Apply selected template to visual editor) updated</title>
      
        <dc:creator>prometh</dc:creator>

      <pubDate>Fri, 02 Oct 2009 06:54:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10768#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10768#comment:3/1254466498000000</guid>
      <description>&lt;p&gt;
Thanks. While "Front-end Editor" is interesting, it's not quite what I'm looking for. I'd like to keep administration within the admin panel, but have the theme applied to the inside of the editor.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10888 (wp_head() arguments) created</title>
      
        <dc:creator>prometh</dc:creator>

      <pubDate>Fri, 02 Oct 2009 06:50:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10888</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10888/1254466247000000</guid>
      <description>&lt;p&gt;
It'd be great if we could organize our &amp;lt;head&amp;gt; more. We could do this by separating things with wp_head() with 1 argument that would refer to a filter.
&lt;/p&gt;
&lt;p&gt;
wp_head('link');
wp_head('meta');
wp_head('script');
&lt;/p&gt;
&lt;p&gt;
with wp_head() echo'ing all. This would increase backwards compatibility.
&lt;/p&gt;
&lt;p&gt;
Adding to the wp_head filters could work this:
&lt;/p&gt;
&lt;p&gt;
add_action('wp_head_link', 'functionName');
add_action('wp_head_meta', 'functionName');
add_action('wp_head_script', 'functionName');
&lt;/p&gt;
&lt;p&gt;
with add_action('wp_head', functionName); still working as it currently does.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10886 (WordPress should not unnecessarily query posts at page load) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Fri, 02 Oct 2009 06:50:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10886#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10886#comment:3/1254466223000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10886#comment:1" title="Comment 1"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Perhaps wp() shouldn't be called at all for those pages.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Possibly a good idea.
&lt;/p&gt;
&lt;p&gt;
Whatever I think a filter to which you return false to disable stuff may be better here than a define.
&lt;/p&gt;
&lt;p&gt;
We don't want to create something that people put into wp-config.php by accident defines should be reserved for things configured there IMHO
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10716 (New hook for user role change) updated</title>
      
        <dc:creator>usermrpapa</dc:creator>

      <pubDate>Fri, 02 Oct 2009 06:06:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10716#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10716#comment:10/1254463568000000</guid>
      <description>&lt;p&gt;
please, pretty please - or tell us how to improve...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10886 (WordPress should not unnecessarily query posts at page load) updated</title>
      
        <dc:creator>usermrpapa</dc:creator>

      <pubDate>Fri, 02 Oct 2009 06:04:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10886#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10886#comment:2/1254463494000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10887 (Attempting to disable plugin caused error.) created</title>
      
        <dc:creator>HobbesPDX</dc:creator>

      <pubDate>Fri, 02 Oct 2009 05:39:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10887</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10887/1254461995000000</guid>
      <description>&lt;p&gt;
I'm not clear what's caused this.
But when I attempted to disable a plugin, I got this message;
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Warning: readdir(): supplied argument is not a valid Directory resource in /home2/valeried/public_html/wp-content/plugins/facelift-image-replacement/flir.php on line 41
&lt;/p&gt;
&lt;p&gt;
Warning: closedir(): supplied argument is not a valid Directory resource in /home2/valeried/public_html/wp-content/plugins/facelift-image-replacement/flir.php on line 51
&lt;/p&gt;
&lt;p&gt;
Warning: rmdir() [function.rmdir]: Success in /home2/valeried/public_html/wp-content/plugins/facelift-image-replacement/flir.php on line 53
&lt;/p&gt;
&lt;p&gt;
Warning: Cannot modify header information - headers already sent by (output started at /home2/valeried/public_html/wp-content/plugins/facelift-image-replacement/flir.php:41) in /home2/valeried/public_html/wp-includes/pluggable.php on line 865
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
Linux, Apache 2, PHP 5.2.9, WP 2.8.4
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10882 (Add default data to get_*_meta()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 02 Oct 2009 05:35:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10882#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10882#comment:7/1254461751000000</guid>
      <description>&lt;p&gt;
Firstly, just because you can set empty custom fields, doesn't mean you should. When you no longer need a custom field, just delete it. Therefore, returning an empty string or array is ok.
&lt;/p&gt;
&lt;p&gt;
Secondly, like westi said, most of the time you don't have a default value.
&lt;/p&gt;
&lt;p&gt;
If you really need that, just write a wrapper function:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function get_post_meta_with_default($id, $key, $value, $single, $default) {
  $data = get_post_meta($id, $key, $value, $single);
  if ( empty($data) )
    return $default;
  return $data;
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10886 (WordPress should not unnecessarily query posts at page load) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 02 Oct 2009 02:14:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10886#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10886#comment:1/1254449679000000</guid>
      <description>&lt;p&gt;
Perhaps wp() shouldn't be called at all for those pages.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10885 (Custom post types show up in search) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 02 Oct 2009 02:09:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10885#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10885#comment:4/1254449344000000</guid>
      <description>&lt;p&gt;
I considered simply adding an array of post types to exclude that can be filtered, but since other situations have come up where having a list of registered post types was needed I decide to go ahead and register them like we do with taxonomies.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10885.diff attached to Ticket #10885</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 02 Oct 2009 02:07:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10885/10885.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10885/10885.diff/1254449238000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10337 (Easier embeds for 2.9  (oEmbed perhaps?)) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Fri, 02 Oct 2009 01:14:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10337#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10337#comment:24/1254446044000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10337#comment:23" title="Comment 23"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;esc_attr() form_option() output in value="" just to be extra safe
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
This is the source of &lt;code&gt;form_option()&lt;/code&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;echo esc_attr(get_option( $option ) );
&lt;/pre&gt;&lt;p&gt;
So it's already escaped. ;)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>lighter-load.patch attached to Ticket #10886</title>
      
        <dc:creator>junsuijin</dc:creator>

      <pubDate>Fri, 02 Oct 2009 01:10:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10886/lighter-load.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10886/lighter-load.patch/1254445841000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10886 (WordPress should not unnecessarily query posts at page load) created</title>
      
        <dc:creator>junsuijin</dc:creator>

      <pubDate>Fri, 02 Oct 2009 01:10:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10886</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10886/1254445815000000</guid>
      <description>&lt;p&gt;
For plugins like BuddyPress, with pages that have no WordPress post content, a query for posts at load time creates unnecessary overhead. I've tested this patch (with WordPress MU) and it removes 3 queries on all pages when the 'NO_QUERY' constant is defined. A very quick scan of page load times also suggests about 20% in time savings on average.
&lt;/p&gt;
&lt;p&gt;
Other plugins like shopping carts and any others that needn't query the WordPress posts table can benefit from this as well.
&lt;/p&gt;
&lt;p&gt;
My previous means of achieving this effect was to simply return null to the 'posts_request' filter, which removes only 2 queries per page.
&lt;/p&gt;
&lt;p&gt;
The devised method uses suggestions from azaozz and sivel, and allows for setting the definition of 'NO_QUERY' using the 'init' action hook. It also still allows for further querying of the posts at a later point if necessary.
&lt;/p&gt;
&lt;p&gt;
I welcome further suggestions about the patch, and any other ways this could be accomplished more effectively.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item>
   </channel>
</rss>