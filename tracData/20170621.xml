<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #40951 (New Text Widget - Switching Between Visual/Text Editor Strips Out Code) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 21 Jun 2017 23:21:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40951#comment:68</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40951#comment:68/1498087270556274</guid>
      <description>&lt;p&gt;
@synavista yes, this will be part of 4.8.1
&lt;/p&gt;
&lt;p&gt;
@FolioVision:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Thanks Weston for the update on current status and the detailed summary of the offsite discussion.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Actually, it wasn't offsite. It was in Slack, in an open meeting. I literally copy/pasted here what I pasted into Slack. I was going to include it here regardless.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It's more a face saver for the original very wrong policy. What would be reliable and simple would be: To detect the kind of widget. If it's an older text widget just leave it as a text widget. Nothing breaks on 4.8.1 upgrades.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It's not a face saver solution. I honestly think it's the best solution and a legacy mode should have been done this way from the start. It has in mind both the best interests of the majority of users who are novices with basic HTML (or zero HTML with just plain text), and also the interests of advanced users with custom HTML. The Text widget should have had TinyMCE when it was first introduced in WordPress 2.2.
&lt;/p&gt;
&lt;p&gt;
It may be that the compatibility detection is not feasible to detect whether a Text widget can be upgraded to use the TinyMCE by inspecting the widget instance, and in such case the preexisting widgets could always be in legacy mode. I think the detection can be done, however. For example, if a widget's text has no line breaks or if it has the autop checkbox enabled, and if there are only &lt;code&gt;strong&lt;/code&gt;, &lt;code&gt;em&lt;/code&gt;, &lt;code&gt;a[href]&lt;/code&gt;, &lt;code&gt;img&lt;/code&gt;, &lt;code&gt;ul&lt;/code&gt;, &lt;code&gt;ol&lt;/code&gt;, &lt;code&gt;li&lt;/code&gt; tags in the content, without any other attributes added to the elements, then there would not be anything in the widget that would be incompatible with TinyMCE.
&lt;/p&gt;
&lt;p&gt;
Naturally, we'll be looking to all your guys's help to test and confirm any assumptions that the widget takes in its legacy mode. Thanks all.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38650 (Provide some guidance on what conditionals can/should be used in ...) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Wed, 21 Jun 2017 23:12:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38650#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38650#comment:1/1498086732414453</guid>
      <description>&lt;p&gt;
@helen How specific would you imagine this blurb being? I mean, we can generally outline that the file is loaded after specific files have loaded, e.g. load, class-wp, wp-db, etc. Might also mention that it's effectively loaded before multisite is initialized. I'm not just sure how you envision of the structure of the comment going.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39800 (current_item_{parent|ancestor} Not set for Post Type Archive Items) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 21 Jun 2017 23:05:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39800#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39800#comment:14/1498086354991047</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by mrwweb. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1498086352368589"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41108 (Better documentation for the labels array of get_taxonomy_labels() function) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Wed, 21 Jun 2017 23:04:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41108#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41108#comment:3/1498086273017378</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @truongwp, thanks for the patch. I think you're on the right track, though it's a bit misleading to document the labels as first-level properties of the &lt;code&gt;WP_Taxonomy&lt;/code&gt; object, which they really aren't.
&lt;/p&gt;
&lt;p&gt;
So rather than document &lt;code&gt;$tax&lt;/code&gt;, I think the most straightforward way to do it would be to document all of the labels in the &lt;code&gt;@return&lt;/code&gt; notation instead.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31779 (Warn users before using a built-in file editor for the first time) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Wed, 21 Jun 2017 22:42:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31779#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31779#comment:48/1498084927626041</guid>
      <description>&lt;p&gt;
Some copy suggestions from the magnificent @michelleweber:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Heading for all&lt;/strong&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Caution: You can break stuff here. There’s a better way!
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;strong&gt;Theme Template Files&lt;/strong&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
You appear to be making direct edits to your theme in the WordPress Dashboard. We recommend that you don’t! Editing this code directly is dangerous, and can leave you unable to log back in to WordPress and undo changes. To edit your theme without breaking anything, use a child theme instead — [here’s how](link).
&lt;/p&gt;
&lt;p&gt;
If you decide to go ahead with direct edits anyway, make sure to back all your site’s files up before making changes so you can restore a functional version is something goes wrong.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;strong&gt;Theme CSS Files&lt;/strong&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
You appear to be making direct edits to your theme in the WordPress Dashboard. We recommend that you don’t! Editing this code directly is dangerous, and can leave you unable to log back in to WordPress and undo changes. There’s no need to change your CSS here — [you can edit CSS in WordPress’s built in CSS editor](link).
&lt;/p&gt;
&lt;p&gt;
If you decide to go ahead with direct edits anyway, make sure to back all your site’s files up before making changes so you can restore a functional version is something goes wrong.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The "and can leave you unable to log back in" isn't really true for purely CSS changes, so we might want to tweak that.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Plugins&lt;/strong&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
You appear to be making direct edits to your plugin in the WordPress Dashboard. We recommend that you don’t! Editing plugins directly introduce incompatibilities that break your theme or other plugins, and can leave you unable to log back in to WordPress and undo changes.
&lt;/p&gt;
&lt;p&gt;
If you absolutely have to edit this plugin, create copy with a new name and hang on to the original version, so you can re-enable a functional version if something goes wrong.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Or, if we want to be cheeky about it...
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
You appear to be making direct edits to your plugin in the WordPress Dashboard. We recommend that you don’t! Editing plugins directly introduce incompatibilities that break your theme or other plugins, and can leave you unable to log back in to WordPress and undo changes.
&lt;/p&gt;
&lt;p&gt;
If you absolutely have to edit this plugin (please don’t), create a copy with a new name and hang on to the original version (but really, don’t do it), so you can re-enable a functional version if something goes wrong (seriously: don’t edit plugins).
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40951 (New Text Widget - Switching Between Visual/Text Editor Strips Out Code) updated</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Wed, 21 Jun 2017 22:36:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40951#comment:67</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40951#comment:67/1498084579621224</guid>
      <description>&lt;p&gt;
Thanks Weston for the update on current status and the detailed summary of the offsite discussion. Quite honestly Trac is where this kind of conversation belongs if core wants to be inclusive and not exclusive. You proposed:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think the best suggestion that has been proposed is this: when loading the form for a Text widget, just as on the frontend it checks to see if it was previously saved from an older version of WordPress before TinyMCE was added to the Text widget. If it is such a pre-existing Text widget instance, then use heuristics to detect if TinyMCE would negatively impact the contents of the widget, including the auto-p checkbox being unchecked, whether there are empty tags, and whether there are span, div, script, or style tags. When the Text widget is in this legacy mode, it can have a notice that informs users of the new HTML Code widget and that it should be used going forward.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
To my mind this seems far too complex and prone to false negatives. It's more a face saver for the original very wrong policy. What would be reliable and simple would be: To detect the kind of widget. If it's an older text widget just leave it as a text widget. Nothing breaks on 4.8.1 upgrades. Confidence restored in WordPress updates.
&lt;/p&gt;
&lt;p&gt;
Going forward novice users can use the HTML widget (I hope that prompt not to use the very robust and useful text widget won't be too annoying). In this case WordPress core won't be breaking everyone's site because one person arbitrarily decided to kill WordPress's core widget in a futile hope of appealing to SquareSpace users and pushing market share another 0.5 per cent higher instead of actually improving WordPress and making the lives of existing users better.
&lt;/p&gt;
&lt;p&gt;
PS. Improving the lives of existing users would be the better way to increase marketshare. Persuade people to bring their friends instead of sending them running from the hills due to the high maintenance costs and admin time required just to survive such updates.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17268 (Use native gettext library when available) updated</title>
      
        <dc:creator>greencp</dc:creator>

      <pubDate>Wed, 21 Jun 2017 22:33:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17268#comment:74</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17268#comment:74/1498084435717559</guid>
      <description>&lt;p&gt;
Guys, 3 years ago I commented to this ticket mentioning my plugin in which I implemented native gettext support based in parts on this ticket not needing any core patches. I also commented about my own MO reader implementation that doesn't require gettext extension and using cache is almost as fast as native gettext, also included in the plugin. That implementation, by the way, is used in the dynamic-mo-loader mentioned by @Mte90, and is currently awaiting review to be added as stand alone plugin on wordpress.org. Both, native gettext and new MO Reader, are working fine on different sites of mine since then.
&lt;/p&gt;
&lt;p&gt;
In all those years I got no feedback on my comments or plugin here.
&lt;/p&gt;
&lt;p&gt;
Every once in a while a new comment to this ticket pops up but nothing happens. I'm curious if this will ever be addressed even though there are many working solutions out there. Meanwhile I'll keep working on my own solution.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31779 (Warn users before using a built-in file editor for the first time) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Wed, 21 Jun 2017 22:33:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31779#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31779#comment:47/1498084420779732</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
IMO, no extra attention should be brought to this editor until it checks for PHP fatal errors before save. This is the number 1 warning I've had to give people for years, and the possibility of failure is too high with consequences that are too drastic (lock outs).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We're also hoping to resurrect &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/12839" title="#12839: enhancement: Themes should be sandboxed on activation to prevent fatal errors (new)"&gt;#12839&lt;/a&gt;!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41094 (Deprecated version not specfied for debug_fopen() et al.) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Wed, 21 Jun 2017 22:31:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41094#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41094#comment:5/1498084269733984</guid>
      <description>&lt;p&gt;
There are a number of other functions suffering from this. Shall I add additional patches for those to this ticket or should I open a new ticket ? Or even a new ticket for each patch ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #40951,​41120 batch updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Wed, 21 Jun 2017 22:24:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=40951%2C41120</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=40951%2C41120/1498083893457523</guid>
      <description>duplicate: &lt;p&gt;
Hi @jofranlirio! Thanks for the report. Please see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40951" title="#40951: defect (bug): New Text Widget - Switching Between Visual/Text Editor Strips Out Code (closed: fixed)"&gt;#40951&lt;/a&gt; for more details on this issue.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #41120 (Missing code New Widget Text) created</title>
      
        <dc:creator>jofranlirio</dc:creator>

      <pubDate>Wed, 21 Jun 2017 22:23:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41120</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41120/1498083837772669</guid>
      <description>&lt;p&gt;
When I type &amp;lt;a href="#"&amp;gt;&amp;lt;i&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/a&amp;gt; inside the text area and save, the code is missing. For example if i add a widget area inside footer and i want put links to my social networks using text widget, the code is missing.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #40951 (New Text Widget - Switching Between Visual/Text Editor Strips Out Code) updated</title>
      
        <dc:creator>philclothier</dc:creator>

      <pubDate>Wed, 21 Jun 2017 22:12:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40951#comment:65</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40951#comment:65/1498083120763080</guid>
      <description>&lt;p&gt;
Thanks for the update @westonruter. FWIW I think that plan makes sense and I'm now looking forward to 4.8.1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40951 (New Text Widget - Switching Between Visual/Text Editor Strips Out Code) updated</title>
      
        <dc:creator>synavista</dc:creator>

      <pubDate>Wed, 21 Jun 2017 22:11:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40951#comment:64</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40951#comment:64/1498083072279511</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40951#comment:63" title="Comment 63"&gt;westonruter&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
By implementing this, novice users with basic content in their widgets win, and advanced users with custom HTML content in their widgets will cease from being negatively impacted.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks, @westonruter. This sounds like a good middle ground for both novice and advanced users. Any hope on this functionality being included in the 4.8.1 release?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40907 (Introduce widget dedicated for HTML code) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 21 Jun 2017 21:59:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40907#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40907#comment:38/1498082351008089</guid>
      <description>&lt;p&gt;
@philclothier please see &lt;a href="https://core.trac.wordpress.org/ticket/40951#comment:63"&gt;https://core.trac.wordpress.org/ticket/40951#comment:63&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40951 (New Text Widget - Switching Between Visual/Text Editor Strips Out Code) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 21 Jun 2017 21:57:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40951#comment:63</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40951#comment:63/1498082238259426</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This was discussed in the core dev chat. See the &lt;a class="ext-link" href="https://wordpress.slack.com/archives/C02RQBWTW/p1498078551518900"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;conversation log&lt;/a&gt;. I started the conversation by pasting the following writeup:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
To summarize the problem: the Text widget has been WordPress's de facto place to dump arbitrary HTML into sidebars. While arbitrary HTML can also be pasted into the post editor, it is there essentially managed by TinyMCE and will enforce &lt;code&gt;wpautop&lt;/code&gt; while also stripping out empty elements and other markup that it determines is extraneous. When TinyMCE was introduced on the Text widget (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35243" title="#35243: enhancement: Extending the text widget to also allow visual mode (closed: fixed)"&gt;#35243&lt;/a&gt;) it caused such custom-crafted HTML to get mutated by TinyMCE in undesirable ways.
&lt;/p&gt;
&lt;p&gt;
By late in the 4.8 cycle the only known issue from testing was for Text widgets that had relied on &lt;code&gt;wpautop&lt;/code&gt; being off, and for such instances the direction for users was to remove the extra paragraphs that would get added once the Text widget was modified. At the time, the only known issue was extra paragraphs being inserted, per comments on the Make/Core post: &lt;a class="ext-link" href="https://make.wordpress.org/core/2017/05/23/addition-of-tinymce-to-the-text-widget/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2017/05/23/addition-of-tinymce-to-the-text-widget/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Important to note that Text widgets previously saved would retain the old behavior when rendering until the Text widget was updated with the new TinyMCE editor loaded. Since the presence of extra paragraphs was the only known issue, at the time late in the release cycle it was determined that reverting the Text widget (and renaming to HTML widget) and introducing a separate Rich Text widget was too drastic as a course of action. However, after the 4.8 release there appear to be a significant number of advanced users who are impacted by the change (see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40951" title="#40951: defect (bug): New Text Widget - Switching Between Visual/Text Editor Strips Out Code (closed: fixed)"&gt;#40951&lt;/a&gt;), and the ultimate number of impacted users is not known now since, as noted above, the Text widget only changes its behavior once it is modified.
&lt;/p&gt;
&lt;p&gt;
In &lt;code&gt;trunk&lt;/code&gt; there is presently an “HTML Code” widget for storing arbitrary HTML code that is not managed by TinyMCE. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40907" title="#40907: feature request: Introduce widget dedicated for HTML code (closed: fixed)"&gt;#40907&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
One proposed solution was to convert all existing Text widgets over to HTML Code widgets as part of an upgrade routing. This will not have the desired effect for some advanced users because it will change the widget's ID that contains the content, and this will break CSS selectors that target the widget. It can also have negative impacts for plugins that have existing references to Text widget IDs for placement in contexts outside normal &lt;code&gt;dynamic_sidebar()&lt;/code&gt; calls. Even for non-advanced users, migrating existing Text widgets over to HTML Code widgets is not ideal because then novice users, who may not know HTML to begin with, will have difficulty locating the widget that has the content they need to modify. Seeing the word “HTML” may also confuse and intimidate them.
&lt;/p&gt;
&lt;p&gt;
Another solution proposed was to revert the Text widget back to its original state (maybe renaming to HTML Code widget) and introduce a new Rich Text widget. However, a key reason for letting the existing Text widget remain upgraded with TinyMCE is that novice users who previously have just put simple text into the widget should by default get the new visual editing experience. Novice users shouldn't have to be bothered with copy/pasting the contents of their widget into a separate widget in order to start doing visual editing, in the same way that they don't have to switch between post editing experiences.
&lt;/p&gt;
&lt;p&gt;
However, I think the best suggestion that has been proposed is this: when loading the form for a Text widget, just as on the frontend it checks to see if it was previously saved from an older version of WordPress before TinyMCE was added to the Text widget. If it is such a pre-existing Text widget instance, then use heuristics to detect if TinyMCE would negatively impact the contents of the widget, including the auto-p checkbox being unchecked, whether there are empty tags, and whether there are &lt;code&gt;span&lt;/code&gt;, &lt;code&gt;div&lt;/code&gt;, &lt;code&gt;script&lt;/code&gt;, or &lt;code&gt;style&lt;/code&gt; tags. When the Text widget is in this legacy mode, it can have a notice that informs users of the new HTML Code widget and that it should be used going forward. Likewise, in the new mode when TinyMCE is present, when the Text (HTML) tab is selected, there can be a note (perhaps an admin pointer) that encourages users to use the HTML Code widget instead. By implementing this, novice users with basic content in their widgets win, and advanced users with custom HTML content in their widgets will cease from being negatively impacted.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Based on the core dev chat discussion, I will be moving forward with implementing the proposed suggestion in this last paragraph, to introduce a legacy mode to the Text widget and use it when a widget instance contains non-&lt;code&gt;wpautop&lt;/code&gt; content or advanced HTML. See the &lt;a class="ext-link" href="https://wordpress.slack.com/archives/C02RQBWTW/p1498078551518900"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack log&lt;/a&gt; for the full conversation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41081 (Improve Custom Menu widget, show notification if menu is empty or no ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 21 Jun 2017 21:51:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41081#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41081#comment:9/1498081883806430</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I don't think the approach here is complete. In the Customizer you can add new nav menu items to empty nav menus. A menu may be empty the moment you open the Customizer, and at that point the menu dropdown would skip listing it with this patch. But as soon as I add an item to that nav menu, the menu should start to appear in the dropdown, but that is not currently how the patch behaves. This will likely require JS that interfaces with the menus component in the Customizer.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37094 (wp_get_nav_menu_items should use tax_query) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Wed, 21 Jun 2017 21:36:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37094#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37094#comment:8/1498080986013708</guid>
      <description>&lt;p&gt;
You make some good points. I think we should go ahead with get_objects_in_term caching found in 37094.diff. get_objects_in_term is only used 2 places in core, one of each is here. It is a very low impact change for the rest of core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31779 (Warn users before using a built-in file editor for the first time) updated</title>
      
        <dc:creator>cliffseal</dc:creator>

      <pubDate>Wed, 21 Jun 2017 21:33:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31779#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31779#comment:46/1498080823857206</guid>
      <description>&lt;p&gt;
If it's not an option to remove or disable-by-default this editor, I think a combination of other simultaneous changes could support this effort:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Move the Editor into the Tools menu, or into Tools &amp;gt; Available Tools. It fits better there anyway: it's not a visual editor for the &lt;em&gt;Appearance&lt;/em&gt;, as other things are in the Appearance menu), but the other problem with Plugins &amp;gt; Editor is it's right beside one of the most clicked buttons in the UI (Add New). It's too easy to discover. You could also move the warning messages suggested above into a box on Available Tools. Instead of a warning, it becomes the context for launching the Editor. Plus, what else is going on in that page anyway. :)
&lt;/li&gt;&lt;li&gt;To do the above, combine the Theme and Plugin editors into one. Separate the edit dropdown with headings for Theme and Plugins.
&lt;/li&gt;&lt;li&gt;Make Editor access a setting in Settings &amp;gt; General. I saw the argument that having to set the constant doesn't make sense for the people using the Editor—this is a solution that still hides the danger by default but has a low barrier to enablement.
&lt;/li&gt;&lt;li&gt;IMO, no extra attention should be brought to this editor until it checks for PHP fatal errors before save. This is the number 1 warning I've had to give people for years, and the possibility of failure is too high with consequences that are too drastic (lock outs).
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40907 (Introduce widget dedicated for HTML code) updated</title>
      
        <dc:creator>philclothier</dc:creator>

      <pubDate>Wed, 21 Jun 2017 21:32:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40907#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40907#comment:37/1498080748204388</guid>
      <description>&lt;p&gt;
I can only echo your sentiments @FolioVision.
&lt;/p&gt;
&lt;p&gt;
What is the planned fix for 4.8.1? Am I correct in thinking that the current plan is to create a new HTML widget? Is the recommended solution to instruct people to move to that new type of widget? If so, this is what my inbox is going to be filled with for the next few months:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Client:&lt;/strong&gt; Why has the "........" widget stopped working?
&lt;strong&gt;Me:&lt;/strong&gt; Are you using WordPress 4.8?
&lt;strong&gt;Client:&lt;/strong&gt; I think so.
&lt;strong&gt;Me:&lt;/strong&gt; You will need to copy the content from the Text widget which created this feature (make sure you switch to HTML view in the Text widget first). Then create a new widget using the "HTML" widget type. Then paste the previous HTML into this. If the widget still doesn't display correctly then you may need to retrieve the HTML from the original source or from a backup of your site.
&lt;strong&gt;Client:&lt;/strong&gt; Why?
&lt;strong&gt;Me:&lt;/strong&gt; I don't know.
&lt;strong&gt;Client:&lt;/strong&gt; I'm never updating WordPress again.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17268 (Use native gettext library when available) updated</title>
      
        <dc:creator>koenHuybrechts</dc:creator>

      <pubDate>Wed, 21 Jun 2017 21:14:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17268#comment:73</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17268#comment:73/1498079666359382</guid>
      <description>&lt;p&gt;
What should we do to get this finally moving? There are more than 7000 languages, other than English.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22176 (Cache the results of the posts_request_ids query) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Wed, 21 Jun 2017 21:13:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22176#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22176#comment:12/1498079594018517</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I have spent sometime on this ticket as I think it is much simpler that originally thought.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The cache key generated has the post types array. The idea behind this is when new post types are registered caches are cleared.
&lt;/li&gt;&lt;li&gt;The fields element is removed, so that all formats are wp query are stored in the same cache as a list of ids.
&lt;/li&gt;&lt;li&gt;The return points from id and id=&amp;gt;parent formats have been changed. This makes code a little cleaner. It also means that all the filters are fired more, making this code much more hackable.
&lt;/li&gt;&lt;li&gt;I have reused the cache_filter param and changed what it is used for. I believe this is a nice solution.
&lt;/li&gt;&lt;li&gt;Added a param update_post_cache, bring query class into line with other newer query classes like wp_site_query.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I am worried about how filters effect this code. This code has tonnes of filters, any of which may break the caching. Currently none of the core tests are failing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>22176.2.patch attached to Ticket #22176</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Wed, 21 Jun 2017 21:02:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22176/22176.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22176/22176.2.patch/1498078938160277</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>22176.patch attached to Ticket #22176</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Wed, 21 Jun 2017 21:02:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22176/22176.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22176/22176.patch/1498078937026044</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40907 (Introduce widget dedicated for HTML code) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 21 Jun 2017 20:56:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40907#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40907#comment:36/1498078572306616</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by westonruter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1498078569524877"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40951 (New Text Widget - Switching Between Visual/Text Editor Strips Out Code) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 21 Jun 2017 20:56:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40951#comment:62</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40951#comment:62/1498078566760052</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by westonruter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1498078565523350"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35243 (Extending the text widget to also allow visual mode) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 21 Jun 2017 20:55:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35243#comment:72</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35243#comment:72/1498078554079967</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by westonruter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1498078551518900"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40104 (Customizer: Improve menu creation flow) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 21 Jun 2017 20:41:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40104#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40104#comment:16/1498077709875994</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by melchoyce. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1498077707242255"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39693 (Fix missing assignment of widgets on theme switch) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 21 Jun 2017 20:41:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39693#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39693#comment:45/1498077683991534</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by melchoyce. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1498077680233900"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39692 (Fix missing assignment of menus on theme switch) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 21 Jun 2017 20:41:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39692#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39692#comment:32/1498077683371559</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by melchoyce. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1498077680233900"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41078 (Detect if someone’s site is under version control, and suggest better ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 21 Jun 2017 20:37:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41078#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41078#comment:3/1498077461497754</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by melchoyce. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1498077459161938"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31779 (Warn users before using a built-in file editor for the first time) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 21 Jun 2017 20:37:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31779#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31779#comment:45/1498077445716089</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by melchoyce. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1498077443157052"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41014 (Add `permalink_structure` to REST API settings endpoint) updated</title>
      
        <dc:creator>timmydcrawford</dc:creator>

      <pubDate>Wed, 21 Jun 2017 20:32:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41014#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41014#comment:6/1498077132609189</guid>
      <description>&lt;p&gt;
Another item to consider here, in the context of permalinks + editor - is my old favorite the &lt;em&gt;auto slug&lt;/em&gt;.  Not certain if the suggested slug is built in to the REST API or not yet.  Sorry for the issue creep, but the issue brought back fond slug memories :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21666 (Customizer reset/undo/revert) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 21 Jun 2017 20:31:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21666#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21666#comment:40/1498077111577162</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Milestoning for visibility.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21666 (Customizer reset/undo/revert) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 21 Jun 2017 20:31:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21666#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21666#comment:39/1498077081759490</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by melchoyce. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1498077079037378"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41036 (wp_redirect fails with error in WP 4.8) updated</title>
      
        <dc:creator>dkurth</dc:creator>

      <pubDate>Wed, 21 Jun 2017 20:28:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41036#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41036#comment:4/1498076894016181</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This happens in Wordpress 4.8
In an effort to find out what is causing this problem, I setup a fresh WordPress install with no plugins installed.  The same plugin that contains the following code, causes this error.
&lt;/p&gt;
&lt;pre class="wiki"&gt;Warning: Cannot modify header information - headers already sent by (output started at /home/debbiekurth/public_html/wp-content/themes/twentyseventeen/header.php:16) in /home/debbiekurth/public_html/wp-includes/pluggable.php on line 1210
&lt;/pre&gt;&lt;p&gt;
It is a one line plugin call to wp_redirect.  Already checked for white spaces and other issues.
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;?php
/**
* Plugin Name: A Redirect
* Plugin URI: https://mmd-ca.com/MemberTrack/
* Text Domain: A Redirect
* Description:
* Version: 1.0.0
* Author: Multimedia Designs, LLC
* Author URI: https://www.mmd-ca.com/
* License: GPLv3
* License URI: http://www.gnu.org/licenses/gpl-3.0
*/
add_shortcode('mmd-redirect', 'mmd_ca_redirect_call');
function mmd_ca_redirect_call()
{
wp_redirect("https://www.mmd-ca.com/");
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41014 (Add `permalink_structure` to REST API settings endpoint) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 21 Jun 2017 20:26:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41014#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41014#comment:5/1498076813704056</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by aduth. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1498076811947797"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28721 (Scheduled changes for the customizer) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 21 Jun 2017 20:26:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28721#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28721#comment:16/1498076797840947</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41112 (Show WordCamps higher up in the News Dashboard widget) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Wed, 21 Jun 2017 19:59:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41112#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41112#comment:2/1498075152807197</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This was &lt;a class="ext-link" href="https://make.wordpress.org/community/2017/03/23/showing-upcoming-local-events-in-wp-admin/#comment-23294"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;brought&lt;/a&gt; up &lt;a class="ext-link" href="https://github.com/coreymckrill/nearby-wordpress-events/issues/25"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;previously&lt;/a&gt;, and I think it's a great idea; there just wasn't time for it in v1.
&lt;/p&gt;
&lt;p&gt;
It'll require some changes on the API side to make camps sticky in API responses, but I think it'll also require some minor (PHP and CSS) tweaks in Core.
&lt;/p&gt;
&lt;p&gt;
cc @mrwweb, @mapk
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40951 (New Text Widget - Switching Between Visual/Text Editor Strips Out Code) updated</title>
      
        <dc:creator>programmin</dc:creator>

      <pubDate>Wed, 21 Jun 2017 19:44:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40951#comment:61</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40951#comment:61/1498074251592572</guid>
      <description>&lt;p&gt;
To my knowledge TinyMCE has always done some odd stuff to html code (eg &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/41049" title="#41049: defect (bug): Visual editor adds extra space to top of the post (new)"&gt;#41049&lt;/a&gt; &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/20943" title="#20943: defect (bug): Paragraphs get removed in table cells when Visual editor is refreshed (reviewing)"&gt;#20943&lt;/a&gt; etc.), which is the reason many people plug code into the text widget in the first place! Seems MCE is taking out css class names, removing entire empty elements etc.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://www.zigpress.com/2017/06/14/the-wordpress-4-8-text-widget-will-destroy-your-content/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.zigpress.com/2017/06/14/the-wordpress-4-8-text-widget-will-destroy-your-content/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40850 (WP_Query-&gt;have_posts() -- add action if no results are found) updated</title>
      
        <dc:creator>mgibbs189</dc:creator>

      <pubDate>Wed, 21 Jun 2017 19:33:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40850#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40850#comment:5/1498073598043902</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@boonebgorges Great feedback, thank you. I've attached an updated patch. Please let me know if it looks OK.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40919 (REST API: Allow overriding `jQuery.ajax` calls from within wp-admin) updated</title>
      
        <dc:creator>timmydcrawford</dc:creator>

      <pubDate>Wed, 21 Jun 2017 19:33:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40919#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40919#comment:6/1498073591689276</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/40919/40919.2.diff" title="Attachment '40919.2.diff' in Ticket #40919"&gt;40919.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/40919/40919.2.diff" title="Download"&gt;​&lt;/a&gt; changes the name of the method to &lt;code&gt;wp.restRequest&lt;/code&gt; and adds in &lt;code&gt;_wpnonce&lt;/code&gt; to the &lt;code&gt;options.data&lt;/code&gt; that is passed along to the &lt;code&gt;$.ajax&lt;/code&gt; call.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>40919.2.diff attached to Ticket #40919</title>
      
        <dc:creator>timmydcrawford</dc:creator>

      <pubDate>Wed, 21 Jun 2017 19:31:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40919/40919.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40919/40919.2.diff/1498073485323403</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>class-wp-query.php.2.diff attached to Ticket #40850</title>
      
        <dc:creator>mgibbs189</dc:creator>

      <pubDate>Wed, 21 Jun 2017 19:31:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40850/class-wp-query.php.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40850/class-wp-query.php.2.diff/1498073474739990</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35243 (Extending the text widget to also allow visual mode) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 21 Jun 2017 19:24:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35243#comment:71</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35243#comment:71/1498073060866029</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This issue was closed on a completed milestone. Comments should be directed to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40951" title="#40951: defect (bug): New Text Widget - Switching Between Visual/Text Editor Strips Out Code (closed: fixed)"&gt;#40951&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
@BackuPs We are definitely evaluating options and will have a proposal today. Please keep comments constructive.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>41081.3.diff attached to Ticket #41081</title>
      
        <dc:creator>mdifelice</dc:creator>

      <pubDate>Wed, 21 Jun 2017 19:22:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41081/41081.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41081/41081.3.diff/1498072974221041</guid>
      <description>&lt;p&gt;
Solved typo on new message.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40889 (REST API: New terms creation with meta causes PHP Notice) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Wed, 21 Jun 2017 19:18:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40889#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40889#comment:5/1498072683311158</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It would be good to get a PHPUnit test case that fails before this behavior and passes after.  This will both ensure that the bug doesn't return in the future and make the ticket much easier to review and commit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41081 (Improve Custom Menu widget, show notification if menu is empty or no ...) updated</title>
      
        <dc:creator>mdifelice</dc:creator>

      <pubDate>Wed, 21 Jun 2017 19:17:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41081#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41081#comment:8/1498072674909407</guid>
      <description>&lt;p&gt;
Great @welcher. Perfect!
&lt;/p&gt;
&lt;p&gt;
I have added a little modification on a typo in the description.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40886 (REST API: PUT requests fail on Nginx servers when fancy permalinks ...) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Wed, 21 Jun 2017 19:15:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40886#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40886#comment:6/1498072544365297</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40886#comment:3" title="Comment 3"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm a little concerned that &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/40886/40886.diff" title="Attachment '40886.diff' in Ticket #40886"&gt;40886.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/40886/40886.diff" title="Download"&gt;​&lt;/a&gt; makes it seem like PUT not working isn't an expected behaviour.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't think this is an expected behavior.  Common, or at least known under certain configurations, but still seems broken/buggy to me.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40886#comment:5" title="Comment 5"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/40886/40886.2.diff" title="Attachment '40886.2.diff' in Ticket #40886"&gt;40886.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/40886/40886.2.diff" title="Download"&gt;​&lt;/a&gt; only handles nginx oddities
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Though isn't it only needed for certain permalink structures?  Unless I am missing something, the current patch reads as though it will add &lt;code&gt;index.php&lt;/code&gt; to pretty permalinks as well.
&lt;/p&gt;
&lt;p&gt;
I'd like to see more testing around different combinations of permalink structures + this issue, and that we don't add &lt;code&gt;index.php&lt;/code&gt; unless the current permalink structure dictates that it's necessary.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'd pretty strongly argue that WordPress &lt;strong&gt;core&lt;/strong&gt; should always only use GET/POST/HEAD
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This seems fine to me, though I'd also be in favor of working around what seems to me like buggy behavior.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40850 (WP_Query-&gt;have_posts() -- add action if no results are found) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 21 Jun 2017 19:13:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40850#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40850#comment:4/1498072394070566</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @mgibbs189 - Sorry for the delay in reviewing the patch.
&lt;/p&gt;
&lt;p&gt;
Adding an action here seems like a fine idea, and your technique for firing the action - in an &lt;code&gt;elseif ( 0 === $this-&amp;gt;post_count )&lt;/code&gt; clause - seems like the most efficient way to do it.
&lt;/p&gt;
&lt;p&gt;
A couple small requests on the patch:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The &lt;code&gt;@since&lt;/code&gt; annotation needs updating for 4.9, and we generally use the three-digit format: &lt;code&gt;@since 4.9.0&lt;/code&gt;. See &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/inline-documentation-standards/php/#since-section-changelogs"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/handbook/best-practices/inline-documentation-standards/php/#since-section-changelogs&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;The use of &lt;code&gt;do_action_ref_array( ...,  array( &amp;amp;$this ) )&lt;/code&gt; is a legacy of PHP4 support. &lt;code&gt;do_action( ..., $this )&lt;/code&gt; should be sufficient - the object ought to be passed by reference automatically.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>41081.2.diff attached to Ticket #41081</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Wed, 21 Jun 2017 19:11:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41081/41081.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41081/41081.2.diff/1498072263228606</guid>
      <description>&lt;p&gt;
Updating messaging to reflect the changes in this patch.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41081 (Improve Custom Menu widget, show notification if menu is empty or no ...) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Wed, 21 Jun 2017 19:10:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41081#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41081#comment:7/1498072225570103</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41081#comment:6" title="Comment 6"&gt;mdifelice&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi @welcher. Just sent it. I am pretty new with contributing with the WordPress core, so sorry if I do not follow certain conventions. I was not sure if using the filename or ticket number for the attachment, finally I used the ticket number since I saw a lot of other attachments that do it that way.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@mdifelice no worries at all! Thank you for taking the time to contribute - we all have to start somewhere! It looks like you generated it from the &lt;code&gt;/src&lt;/code&gt; dir. If we generate from one level higher, we'll get any changes to the &lt;code&gt;/tests&lt;/code&gt; folder ( and other items ) as well.
&lt;/p&gt;
&lt;p&gt;
I've added some updates to the messaging when the there are no menus found to better reflect the changes in this patch. Unit tests pass with this patch.
&lt;/p&gt;
&lt;p&gt;
I think we're good to go!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41081 (Improve Custom Menu widget, show notification if menu is empty or no ...) updated</title>
      
        <dc:creator>mdifelice</dc:creator>

      <pubDate>Wed, 21 Jun 2017 18:49:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41081#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41081#comment:6/1498070950139209</guid>
      <description>&lt;p&gt;
Hi @welcher. Just sent it. I am pretty new with contributing with the WordPress core, so sorry if I do not follow certain conventions. I was not sure if using the filename or ticket number for the attachment, finally I used the ticket number since I saw a lot of other attachments that do it that way.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>41081.diff attached to Ticket #41081</title>
      
        <dc:creator>mdifelice</dc:creator>

      <pubDate>Wed, 21 Jun 2017 18:47:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41081/41081.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41081/41081.diff/1498070842010045</guid>
      <description>&lt;p&gt;
Patch for hiding empty menus in Nav Menu Widget (differential from the root repository)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40431 (Header Images: Improve copy) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 21 Jun 2017 18:43:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40431#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40431#comment:6/1498070588058086</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35760 (Provide API for TinyMCE editor to be dynamically instantiated via JS) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 21 Jun 2017 18:09:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35760#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35760#comment:45/1498068589657205</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This ticket is in a completed milestone. There are other follow-up tickets the Text widget for 4.8.1.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41119 (Plugins failing trying to use wp_generate_password() function) created</title>
      
        <dc:creator>jamiefryatt</dc:creator>

      <pubDate>Wed, 21 Jun 2017 17:29:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41119</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41119/1498066161204366</guid>
      <description>&lt;p&gt;
I've been using a plugin called Woozone, and found a problem when i moved my site to AWS Lighttail, i don't know if this is the same elsewhere. I didn't have this problem with the same setup using AWS EC2, so there might be something in that or how the errors are handled.
&lt;/p&gt;
&lt;p&gt;
Basically i found that the plugin wanted to use wp_generate_password, but couldn't and was throwing a 500 fatal error... I did some debugging and found that in the wp-settings.php file, the pluggable.php and its depreciated version were loading after the plugins. To fix my error i just moved that to load before the plugins and everything worked again.
&lt;/p&gt;
&lt;p&gt;
Not sure if this is a bug, or worth reporting, but it was causing me issues so i thought i'd let you know.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41081 (Improve Custom Menu widget, show notification if menu is empty or no ...) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Wed, 21 Jun 2017 17:16:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41081#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41081#comment:5/1498065384973235</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@umangvaghela123 thanks for the patch!  However, I think that calling &lt;code&gt;wp_get_nav_menus()&lt;/code&gt; twice is not needed.
&lt;/p&gt;
&lt;p&gt;
@mdifelice your patch looks correct to me - can you regenerate it from the root of the repository? It makes it easier to apply and if we need to add any unit tests, they can be included in the same patch.
&lt;/p&gt;
&lt;p&gt;
In regards to showing the error to admins, I don't think it's required.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40802 (Allow filtering of the hard coded pipe character in wp-login.php) updated</title>
      
        <dc:creator>henry.wright</dc:creator>

      <pubDate>Wed, 21 Jun 2017 17:11:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40802#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40802#comment:2/1498065106371405</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40812 (Allow wp-login.php page title separator to be filtered) updated</title>
      
        <dc:creator>henry.wright</dc:creator>

      <pubDate>Wed, 21 Jun 2017 17:10:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40812#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40812#comment:1/1498065050667569</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40814 (Order of page title parts) updated</title>
      
        <dc:creator>henry.wright</dc:creator>

      <pubDate>Wed, 21 Jun 2017 17:07:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40814#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40814#comment:4/1498064844509558</guid>
      <description>&lt;p&gt;
Related is &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40812" title="#40812: enhancement: Allow wp-login.php page title separator to be filtered (closed: fixed)"&gt;#40812&lt;/a&gt;. The page title separator character used in wp-login.php is inconsistent with the separator used in page titles elsewhere.
&lt;/p&gt;
&lt;p&gt;
Depending on &lt;code&gt;is_rtl()&lt;/code&gt;, wp-login.php will use either the &lt;code&gt;&amp;amp;rsaquo;&lt;/code&gt; or &lt;code&gt;&amp;amp;lsaquo;&lt;/code&gt; characters whereas the rest of the site uses a hyphen (although the hyphen may possibly be an &lt;code&gt;&amp;amp;ndash;&lt;/code&gt;).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31779 (Warn users before using a built-in file editor for the first time) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Wed, 21 Jun 2017 16:52:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31779#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31779#comment:44/1498063954992975</guid>
      <description>&lt;p&gt;
Tested out @Ipstenu's text for themes in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/31779/example-warning.png" title="Attachment 'example-warning.png' in Ticket #31779"&gt;example-warning.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/31779/example-warning.png" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>example-warning.png attached to Ticket #31779</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Wed, 21 Jun 2017 16:51:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31779/example-warning.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31779/example-warning.png/1498063886999389</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40814 (Order of page title parts) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 21 Jun 2017 16:46:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40814#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40814#comment:3/1498063586914824</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40553 (Consistency in help tabs under admin) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 21 Jun 2017 16:45:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40553#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40553#comment:6/1498063516002714</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41118 (Add post type classes to internal link search results) created</title>
      
        <dc:creator>guidod</dc:creator>

      <pubDate>Wed, 21 Jun 2017 16:22:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41118</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41118/1498062120348029</guid>
      <description>&lt;p&gt;
Would be useful to have post-type classes (and maybe others, like post-status or whether the post type is hierarchical or not) in the internal link search results of the post editor. Currently the output looks like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;li class="alternate selected"&amp;gt;&amp;lt;input type="hidden" class="item-permalink" value="http://example.com/"&amp;gt;&amp;lt;span class="item-title"&amp;gt;Example&amp;lt;/span&amp;gt;&amp;lt;span class="item-info"&amp;gt;Page&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;
&lt;/pre&gt;&lt;p&gt;
I believe there is no hook that would allow one to add post type classes to this output, (I know about the wp_link_query filter that can change the query results, but it can't add classes to the LI).
&lt;/p&gt;
&lt;p&gt;
(Use case: adding custom color indentations or other styles to distinguish important post types from non-important post types in these results).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41081 (Improve Custom Menu widget, show notification if menu is empty or no ...) updated</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Wed, 21 Jun 2017 16:21:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41081#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41081#comment:4/1498062077014744</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41081#comment:3" title="Comment 3"&gt;mdifelice&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi @umangvaghela123, about your patch: if you call &lt;code&gt;wp_get_nav_menus()&lt;/code&gt; without arguments and it does not return anything, when you call it again it would return nothing again, does not it?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
He patch seems not good, for me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9757 (Allow Plugin/Theme updates from a uploaded .zip file.) updated</title>
      
        <dc:creator>pingram3541</dc:creator>

      <pubDate>Wed, 21 Jun 2017 16:01:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9757#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9757#comment:47/1498060892653035</guid>
      <description>&lt;p&gt;
So excited this is finally getting traction!  I just wanted to add that there is also great value in the ability to also roll back a version via zip upload as well, not just update so maybe this can be considered as well?
&lt;/p&gt;
&lt;p&gt;
Also, should there be any consideration for retention of what is overwritten? A download link?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31779 (Warn users before using a built-in file editor for the first time) updated</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Wed, 21 Jun 2017 16:00:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31779#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31779#comment:43/1498060855130112</guid>
      <description>&lt;p&gt;
Why not both?
&lt;/p&gt;
&lt;p&gt;
Title: Caution: You can break stuff here.
&lt;/p&gt;
&lt;p&gt;
Body: You appear to be making direct edits to your [theme|plugin]. Editing this code directly is dangerous as it can leave you unable to log back in to WordPress and undo changes. [We strongly recommend using a child theme for any edits to your theme.|You can edit CSS in WordPress's built in CSS editor.|Editing plugin code directly is highly discouraged.] Please proceed with caution and make sure to back up your site before making any changes.
&lt;/p&gt;
&lt;p&gt;
We'd want to detect if they're already on a child theme, of course.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40829 (Improve wp_dropdown_languages() so it doesn't print out empty attributes) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 21 Jun 2017 15:34:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40829#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40829#comment:5/1498059270669739</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Let's change &lt;code&gt;$r&lt;/code&gt; to &lt;code&gt;$parsed_args&lt;/code&gt;, seems good to me otherwise.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9757 (Allow Plugin/Theme updates from a uploaded .zip file.) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Wed, 21 Jun 2017 15:32:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9757#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9757#comment:46/1498059124462337</guid>
      <description>&lt;p&gt;
Proposed workflow:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Drag and drop an updated zip file for the theme you're updated directly onto &lt;code&gt;themes.php&lt;/code&gt;. Get an Shiny Updates notice on the theme being updated. Boom, updated!
&lt;/li&gt;&lt;li&gt;Also, add some sort of "update theme from zip" button to the theme details modal.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I'll sketch out a flow for this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17268 (Use native gettext library when available) updated</title>
      
        <dc:creator>Mte90</dc:creator>

      <pubDate>Wed, 21 Jun 2017 15:28:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17268#comment:72</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17268#comment:72/1498058932342223</guid>
      <description>&lt;p&gt;
There is also &lt;a class="ext-link" href="https://github.com/aucor/dynamic-mo-loader"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/aucor/dynamic-mo-loader&lt;/a&gt; that is a new implementation with caching.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #12839,​41073 batch updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Wed, 21 Jun 2017 15:26:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=12839%2C41073</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=12839%2C41073/1498058793797661</guid>
      <description>duplicate: &lt;p&gt;
Closing in favor of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/12839" title="#12839: enhancement: Themes should be sandboxed on activation to prevent fatal errors (new)"&gt;#12839&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #17268 (Use native gettext library when available) updated</title>
      
        <dc:creator>Mte90</dc:creator>

      <pubDate>Wed, 21 Jun 2017 15:15:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17268#comment:71</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17268#comment:71/1498058136747452</guid>
      <description>&lt;p&gt;
As I can see the patch don't require so much work on update (only the reference on settings.php that is changed the line but I need to investigate).
I think that use the native module only if available is a good option to improve the performance and be more standard.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37790 (Post editing sidebar does not always act sticky) updated</title>
      
        <dc:creator>tomdxw</dc:creator>

      <pubDate>Wed, 21 Jun 2017 15:05:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37790#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37790#comment:5/1498057541233890</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38474 (wp_signups.activation_key stores activation keys in plain text) updated</title>
      
        <dc:creator>tomdxw</dc:creator>

      <pubDate>Wed, 21 Jun 2017 15:05:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38474#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38474#comment:6/1498057534407059</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21022 (Allow bcrypt to be enabled via filter for pass hashing) updated</title>
      
        <dc:creator>tomdxw</dc:creator>

      <pubDate>Wed, 21 Jun 2017 15:05:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21022#comment:85</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21022#comment:85/1498057523080333</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37790 (Post editing sidebar does not always act sticky) updated</title>
      
        <dc:creator>tomdxw</dc:creator>

      <pubDate>Wed, 21 Jun 2017 15:04:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37790#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37790#comment:4/1498057472962130</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40907 (Introduce widget dedicated for HTML code) updated</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Wed, 21 Jun 2017 14:43:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40907#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40907#comment:35/1498056217284750</guid>
      <description>&lt;p&gt;
There are three related open tickets about the issues which the forced upgrade of existing text widgets has caused:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40907" title="#40907: feature request: Introduce widget dedicated for HTML code (closed: fixed)"&gt;Introduce widget dedicated for HTML code&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40951" title="#40951: defect (bug): New Text Widget - Switching Between Visual/Text Editor Strips Out Code (closed: fixed)"&gt;New Text Widget - Switching Between Visual/Text Editor Strips Out Code&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40960" title="#40960: defect (bug): Widgets: The Text widget should respect the “Disable the visual editor ... (closed: fixed)"&gt;Widgets: The Text widget should respect the “Disable the visual editor when writing” setting&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I'm not expert enough in WordPress Trac to be able to etiquette to merge all three but perhaps someone else is.
&lt;/p&gt;
&lt;p&gt;
Apparently the reason we are breaking millions of WordPress sites is &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40907#comment:5" title="Comment 5"&gt;fairly arbitrary decision by Matt made in Slack&lt;/a&gt; (hardly seem a very earnest way of running an open source project, taking breaking decisions in a real time chat environment with no opportunity for input by those not present at the specific meeting).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Matt wants to move forward with the upgraded Text widget as-is, with there not being a great enough concern for some users potentially having to adjust their usage to align with the new behavior (which aligns with longstanding post editor behavior).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Consensus among developers is &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40951#comment:37" title="Comment 37 for #40951: defect (bug): New Text Widget - Switching Between Visual/Text Editor Strips Out Code (closed: fixed)"&gt;synavista's suggestion&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The best course of action at this point, it would seem, would be to admit the error, convert the text editor back to the way it was, and simultaneously release the updated HTML Code widget along with a new Rich Text Editor. If that is completely impossible, at least figure out a way for the TinyMCE Text Editor to both default to the text editor AND remember the selected editor type (which I would hope would stop the system from stripping out existing content).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Advocates of that point of view include many experienced developers and contributors such as &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40907#comment:3" title="Comment 3"&gt;sami.keijonen&lt;/a&gt;, &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40907#comment:4" title="Comment 4"&gt;Kopepash&lt;/a&gt;, &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40907#comment:12" title="Comment 12"&gt;carasmo&lt;/a&gt;, &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40907#comment:30" title="Comment 30"&gt;pipdig&lt;/a&gt;, &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40907#comment:33" title="Comment 33"&gt;piggybanktechnology&lt;/a&gt;, &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40907#comment:34" title="Comment 34"&gt;theMikeD&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40960#comment:5" title="Comment 5 for #40960: defect (bug): Widgets: The Text widget should respect the “Disable the visual editor ... (closed: fixed)"&gt;Cynderella&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40960#comment:6" title="Comment 6 for #40960: defect (bug): Widgets: The Text widget should respect the “Disable the visual editor ... (closed: fixed)"&gt;dfterry&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40960#comment:7" title="Comment 7 for #40960: defect (bug): Widgets: The Text widget should respect the “Disable the visual editor ... (closed: fixed)"&gt;skoen&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40960#comment:8" title="Comment 8 for #40960: defect (bug): Widgets: The Text widget should respect the “Disable the visual editor ... (closed: fixed)"&gt;j893&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40951#comment:4" title="Comment 4 for #40951: defect (bug): New Text Widget - Switching Between Visual/Text Editor Strips Out Code (closed: fixed)"&gt;dwrippe&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40951#comment:31" title="Comment 31 for #40951: defect (bug): New Text Widget - Switching Between Visual/Text Editor Strips Out Code (closed: fixed)"&gt;And_or&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40951#comment:40" title="Comment 40 for #40951: defect (bug): New Text Widget - Switching Between Visual/Text Editor Strips Out Code (closed: fixed)"&gt;philclothier&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40951#comment:42" title="Comment 42 for #40951: defect (bug): New Text Widget - Switching Between Visual/Text Editor Strips Out Code (closed: fixed)"&gt;majick&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40951#comment:43" title="Comment 43 for #40951: defect (bug): New Text Widget - Switching Between Visual/Text Editor Strips Out Code (closed: fixed)"&gt;gitlost&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40951#comment:52" title="Comment 52 for #40951: defect (bug): New Text Widget - Switching Between Visual/Text Editor Strips Out Code (closed: fixed)"&gt;gekkocorp&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The current fix strategy will not solve unnecessary breaking issues, as &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40960#comment:10" title="Comment 10 for #40960: defect (bug): Widgets: The Text widget should respect the “Disable the visual editor ... (closed: fixed)"&gt;TheMikeD notes&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That's great, but it still means that every site that has ever used to code in the text widget now has to be manually updated. Backwards compatibility wise, this decision was not well thought out. I would like to see the rich text parts of the text widget reverted and a new rich text editor in trunk. In other words, don't replace the one that's already there, add a new one.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The update burden for those of us who actually manage WordPress websites in the real world (and don't have 500 developers on staff to do it for us) is &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40951#comment:31" title="Comment 31 for #40951: defect (bug): New Text Widget - Switching Between Visual/Text Editor Strips Out Code (closed: fixed)"&gt;substantial&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Usually I am fast with updating websites, but this 'handy' Text Widget is a game-changer. Basically I feel punished for knowing and using html now....So I have convinced my clients to update their sites, and now I can not until I have manually checked and fixed a 100+ Genesis websites...which is going to take me days.(Who is the genius that wanted this new widget?)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There's nothing wrong with making mistakes, Matt. There's something really wrong in not acknowledging one's mistakes and correcting them.
&lt;/p&gt;
&lt;p&gt;
All we have to do here is make the HTML widget a separate widget and not auto-convert the existing widgets to an HTML widget. There's no problem even making the default widget going forward the HTML one. But force converting and breaking sites is not fair. I'm left pretty speechless by this deliberate sabotage of millions of sites.
&lt;/p&gt;
&lt;p&gt;
Nonsense like this makes me very glad we created &lt;a class="ext-link" href="https://wordpress.org/plugins/businesspress/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;BusinessPress&lt;/a&gt; to block forced or inadvertent updates for WordPress until we're satisfied those updates no longer compromise security or functionality.
&lt;/p&gt;
&lt;p&gt;
Millions of personal and business sites should not be a playground for beta software, whether that software is free or not. WordPress is not free to its users: they pay in spades for choosing WordPress in either money (management) or time (lots of their own free time). Honestly we should keep WordPress users' costs to a minimum and strive to keep the trust high.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40960 (Widgets: The Text widget should respect the “Disable the visual editor ...) updated</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Wed, 21 Jun 2017 14:43:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40960#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40960#comment:18/1498056207095191</guid>
      <description>&lt;p&gt;
There are three related open tickets about the issues which the forced upgrade of existing text widgets has caused:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40907" title="#40907: feature request: Introduce widget dedicated for HTML code (closed: fixed)"&gt;Introduce widget dedicated for HTML code&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40951" title="#40951: defect (bug): New Text Widget - Switching Between Visual/Text Editor Strips Out Code (closed: fixed)"&gt;New Text Widget - Switching Between Visual/Text Editor Strips Out Code&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40960" title="#40960: defect (bug): Widgets: The Text widget should respect the “Disable the visual editor ... (closed: fixed)"&gt;Widgets: The Text widget should respect the “Disable the visual editor when writing” setting&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I'm not expert enough in WordPress Trac to be able to etiquette to merge all three but perhaps someone else is.
&lt;/p&gt;
&lt;p&gt;
Apparently the reason we are breaking millions of WordPress sites is &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40907#comment:5" title="Comment 5 for #40907: feature request: Introduce widget dedicated for HTML code (closed: fixed)"&gt;fairly arbitrary decision by Matt made in Slack&lt;/a&gt; (hardly seem a very earnest way of running an open source project, taking breaking decisions in a real time chat environment with no opportunity for input by those not present at the specific meeting).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Matt wants to move forward with the upgraded Text widget as-is, with there not being a great enough concern for some users potentially having to adjust their usage to align with the new behavior (which aligns with longstanding post editor behavior).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Consensus among developers is &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40951#comment:37" title="Comment 37 for #40951: defect (bug): New Text Widget - Switching Between Visual/Text Editor Strips Out Code (closed: fixed)"&gt;synavista's suggestion&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The best course of action at this point, it would seem, would be to admit the error, convert the text editor back to the way it was, and simultaneously release the updated HTML Code widget along with a new Rich Text Editor. If that is completely impossible, at least figure out a way for the TinyMCE Text Editor to both default to the text editor AND remember the selected editor type (which I would hope would stop the system from stripping out existing content).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Advocates of that point of view include many experienced developers and contributors such as &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40907#comment:3" title="Comment 3 for #40907: feature request: Introduce widget dedicated for HTML code (closed: fixed)"&gt;sami.keijonen&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40907#comment:4" title="Comment 4 for #40907: feature request: Introduce widget dedicated for HTML code (closed: fixed)"&gt;Kopepash&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40907#comment:12" title="Comment 12 for #40907: feature request: Introduce widget dedicated for HTML code (closed: fixed)"&gt;carasmo&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40907#comment:30" title="Comment 30 for #40907: feature request: Introduce widget dedicated for HTML code (closed: fixed)"&gt;pipdig&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40907#comment:33" title="Comment 33 for #40907: feature request: Introduce widget dedicated for HTML code (closed: fixed)"&gt;piggybanktechnology&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40907#comment:34" title="Comment 34 for #40907: feature request: Introduce widget dedicated for HTML code (closed: fixed)"&gt;theMikeD&lt;/a&gt;, &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40960#comment:5" title="Comment 5"&gt;Cynderella&lt;/a&gt;, &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40960#comment:6" title="Comment 6"&gt;dfterry&lt;/a&gt;, &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40960#comment:7" title="Comment 7"&gt;skoen&lt;/a&gt;, &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40960#comment:8" title="Comment 8"&gt;j893&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40951#comment:4" title="Comment 4 for #40951: defect (bug): New Text Widget - Switching Between Visual/Text Editor Strips Out Code (closed: fixed)"&gt;dwrippe&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40951#comment:31" title="Comment 31 for #40951: defect (bug): New Text Widget - Switching Between Visual/Text Editor Strips Out Code (closed: fixed)"&gt;And_or&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40951#comment:40" title="Comment 40 for #40951: defect (bug): New Text Widget - Switching Between Visual/Text Editor Strips Out Code (closed: fixed)"&gt;philclothier&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40951#comment:42" title="Comment 42 for #40951: defect (bug): New Text Widget - Switching Between Visual/Text Editor Strips Out Code (closed: fixed)"&gt;majick&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40951#comment:43" title="Comment 43 for #40951: defect (bug): New Text Widget - Switching Between Visual/Text Editor Strips Out Code (closed: fixed)"&gt;gitlost&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40951#comment:52" title="Comment 52 for #40951: defect (bug): New Text Widget - Switching Between Visual/Text Editor Strips Out Code (closed: fixed)"&gt;gekkocorp&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The current fix strategy will not solve unnecessary breaking issues, as &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40960#comment:10" title="Comment 10"&gt;TheMikeD notes&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That's great, but it still means that every site that has ever used to code in the text widget now has to be manually updated. Backwards compatibility wise, this decision was not well thought out. I would like to see the rich text parts of the text widget reverted and a new rich text editor in trunk. In other words, don't replace the one that's already there, add a new one.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The update burden for those of us who actually manage WordPress websites in the real world (and don't have 500 developers on staff to do it for us) is &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40951#comment:31" title="Comment 31 for #40951: defect (bug): New Text Widget - Switching Between Visual/Text Editor Strips Out Code (closed: fixed)"&gt;substantial&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Usually I am fast with updating websites, but this 'handy' Text Widget is a game-changer. Basically I feel punished for knowing and using html now....So I have convinced my clients to update their sites, and now I can not until I have manually checked and fixed a 100+ Genesis websites...which is going to take me days.(Who is the genius that wanted this new widget?)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There's nothing wrong with making mistakes, Matt. There's something really wrong in not acknowledging one's mistakes and correcting them.
&lt;/p&gt;
&lt;p&gt;
All we have to do here is make the HTML widget a separate widget and not auto-convert the existing widgets to an HTML widget. There's no problem even making the default widget going forward the HTML one. But force converting and breaking sites is not fair. I'm left pretty speechless by this deliberate sabotage of millions of sites.
&lt;/p&gt;
&lt;p&gt;
Nonsense like this makes me very glad we created &lt;a class="ext-link" href="https://wordpress.org/plugins/businesspress/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;BusinessPress&lt;/a&gt; to block forced or inadvertent updates for WordPress until we're satisfied those updates no longer compromise security or functionality.
&lt;/p&gt;
&lt;p&gt;
Millions of personal and business sites should not be a playground for beta software, whether that software is free or not. WordPress is not free to its users: they pay in spades for choosing WordPress in either money (management) or time (lots of their own free time). Honestly we should keep WordPress users' costs to a minimum and strive to keep the trust high.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40951 (New Text Widget - Switching Between Visual/Text Editor Strips Out Code) updated</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Wed, 21 Jun 2017 14:42:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40951#comment:60</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40951#comment:60/1498056145579891</guid>
      <description>&lt;p&gt;
There are three related open tickets about the issues which the forced upgrade of existing text widgets has caused:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40907" title="#40907: feature request: Introduce widget dedicated for HTML code (closed: fixed)"&gt;Introduce widget dedicated for HTML code&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40951" title="#40951: defect (bug): New Text Widget - Switching Between Visual/Text Editor Strips Out Code (closed: fixed)"&gt;New Text Widget - Switching Between Visual/Text Editor Strips Out Code&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40960" title="#40960: defect (bug): Widgets: The Text widget should respect the “Disable the visual editor ... (closed: fixed)"&gt;Widgets: The Text widget should respect the “Disable the visual editor when writing” setting&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I'm not expert enough in WordPress Trac to be able to etiquette to merge all three but perhaps someone else is.
&lt;/p&gt;
&lt;p&gt;
Apparently the reason we are breaking millions of WordPress sites is &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40907#comment:5" title="Comment 5 for #40907: feature request: Introduce widget dedicated for HTML code (closed: fixed)"&gt;fairly arbitrary decision by Matt made in Slack&lt;/a&gt; (hardly seem a very earnest way of running an open source project, taking breaking decisions in a real time chat environment with no opportunity for input by those not present at the specific meeting).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Matt wants to move forward with the upgraded Text widget as-is, with there not being a great enough concern for some users potentially having to adjust their usage to align with the new behavior (which aligns with longstanding post editor behavior).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Consensus among developers is &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40951#comment:37" title="Comment 37"&gt;synavista's suggestion&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The best course of action at this point, it would seem, would be to admit the error, convert the text editor back to the way it was, and simultaneously release the updated HTML Code widget along with a new Rich Text Editor. If that is completely impossible, at least figure out a way for the TinyMCE Text Editor to both default to the text editor AND remember the selected editor type (which I would hope would stop the system from stripping out existing content).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Advocates of that point of view include many experienced developers and contributors such as &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40907#comment:3" title="Comment 3 for #40907: feature request: Introduce widget dedicated for HTML code (closed: fixed)"&gt;sami.keijonen&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40907#comment:4" title="Comment 4 for #40907: feature request: Introduce widget dedicated for HTML code (closed: fixed)"&gt;Kopepash&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40907#comment:12" title="Comment 12 for #40907: feature request: Introduce widget dedicated for HTML code (closed: fixed)"&gt;carasmo&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40907#comment:30" title="Comment 30 for #40907: feature request: Introduce widget dedicated for HTML code (closed: fixed)"&gt;pipdig&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40907#comment:33" title="Comment 33 for #40907: feature request: Introduce widget dedicated for HTML code (closed: fixed)"&gt;piggybanktechnology&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40907#comment:34" title="Comment 34 for #40907: feature request: Introduce widget dedicated for HTML code (closed: fixed)"&gt;theMikeD&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40960#comment:5" title="Comment 5 for #40960: defect (bug): Widgets: The Text widget should respect the “Disable the visual editor ... (closed: fixed)"&gt;Cynderella&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40960#comment:6" title="Comment 6 for #40960: defect (bug): Widgets: The Text widget should respect the “Disable the visual editor ... (closed: fixed)"&gt;dfterry&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40960#comment:7" title="Comment 7 for #40960: defect (bug): Widgets: The Text widget should respect the “Disable the visual editor ... (closed: fixed)"&gt;skoen&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40960#comment:8" title="Comment 8 for #40960: defect (bug): Widgets: The Text widget should respect the “Disable the visual editor ... (closed: fixed)"&gt;j893&lt;/a&gt;, &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40951#comment:4" title="Comment 4"&gt;dwrippe&lt;/a&gt;, &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40951#comment:31" title="Comment 31"&gt;And_or&lt;/a&gt;, &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40951#comment:40" title="Comment 40"&gt;philclothier&lt;/a&gt;, &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40951#comment:42" title="Comment 42"&gt;majick&lt;/a&gt;, &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40951#comment:43" title="Comment 43"&gt;gitlost&lt;/a&gt;, &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40951#comment:52" title="Comment 52"&gt;gekkocorp&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The current fix strategy will not solve unnecessary breaking issues, as &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40960#comment:10" title="Comment 10 for #40960: defect (bug): Widgets: The Text widget should respect the “Disable the visual editor ... (closed: fixed)"&gt;TheMikeD notes&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That's great, but it still means that every site that has ever used to code in the text widget now has to be manually updated. Backwards compatibility wise, this decision was not well thought out. I would like to see the rich text parts of the text widget reverted and a new rich text editor in trunk. In other words, don't replace the one that's already there, add a new one.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The update burden for those of us who actually manage WordPress websites in the real world (and don't have 500 developers on staff to do it for us) is &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40951#comment:31" title="Comment 31"&gt;substantial&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Usually I am fast with updating websites, but this 'handy' Text Widget is a game-changer. Basically I feel punished for knowing and using html now....So I have convinced my clients to update their sites, and now I can not until I have manually checked and fixed a 100+ Genesis websites...which is going to take me days.(Who is the genius that wanted this new widget?)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There's nothing wrong with making mistakes, Matt. There's something really wrong in not acknowledging one's mistakes and correcting them.
&lt;/p&gt;
&lt;p&gt;
All we have to do here is make the HTML widget a separate widget and not auto-convert the existing widgets to an HTML widget. There's no problem even making the default widget going forward the HTML one. But force converting and breaking sites is not fair. I'm left pretty speechless by this deliberate sabotage of millions of sites.
&lt;/p&gt;
&lt;p&gt;
Nonsense like this makes me very glad we created &lt;a class="ext-link" href="https://wordpress.org/plugins/businesspress/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;BusinessPress&lt;/a&gt; to block forced or inadvertent updates for WordPress until we're satisfied those updates no longer compromise security or functionality.
&lt;/p&gt;
&lt;p&gt;
Millions of personal and business sites should not be a playground for beta software, whether that software is free or not. WordPress is not free to its users: they pay in spades for choosing WordPress in either money (management) or time (lots of their own free time). Honestly we should keep WordPress users' costs to a minimum and strive to keep the trust high.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40199 (Customize: collapse suggested and previously uploaded header images ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 21 Jun 2017 14:36:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40199#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40199#comment:5/1498055815005082</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by melchoyce. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1498055813516966"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41076 (Themes: Add more help and documentation when editing theme files) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Wed, 21 Jun 2017 14:25:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41076#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41076#comment:5/1498055154519745</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41076 (Themes: Add more help and documentation when editing theme files) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Wed, 21 Jun 2017 14:25:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41076#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41076#comment:4/1498055111131626</guid>
      <description>&lt;p&gt;
Some ideas...
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Could we add autocomplete for &lt;code&gt;add_theme_support()&lt;/code&gt; if you're in &lt;code&gt;functions.php&lt;/code&gt;?
&lt;/li&gt;&lt;li&gt;Could we add autocomplete for things like &lt;code&gt;get_template_part()&lt;/code&gt; or &lt;code&gt;get_[header, footer, etc.]()&lt;/code&gt; in template files?
&lt;/li&gt;&lt;li&gt;Could we provide any helpful hints or not-quite-inline documentation?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41073 (Introduce linting for code editor) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 21 Jun 2017 14:23:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41073#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41073#comment:6/1498055010919505</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by melchoyce. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1498055008155733"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9757 (Allow Plugin/Theme updates from a uploaded .zip file.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 21 Jun 2017 14:19:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9757#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9757#comment:45/1498054798695168</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by melchoyce. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1498054796217222"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #31779,​41075 batch updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Wed, 21 Jun 2017 14:18:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=31779%2C41075</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=31779%2C41075/1498054715146307</guid>
      <description>duplicate: &lt;p&gt;
Going to close this in favor of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31779" title="#31779: enhancement: Warn users before using a built-in file editor for the first time (closed: fixed)"&gt;#31779&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #41075 (Stricter warnings for editing plugins in the code editor) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 21 Jun 2017 14:17:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41075#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41075#comment:2/1498054625397668</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by melchoyce. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1498054623989023"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41076 (Themes: Add more help and documentation when editing theme files) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Wed, 21 Jun 2017 14:16:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41076#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41076#comment:3/1498054611352876</guid>
      <description>&lt;p&gt;
Moving the warning stuff over to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31779" title="#31779: enhancement: Warn users before using a built-in file editor for the first time (closed: fixed)"&gt;#31779&lt;/a&gt;. Let's keep this for other ideas and enhancements around editing theme files for now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31779 (Warn users before using a built-in file editor for the first time) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Wed, 21 Jun 2017 14:12:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31779#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31779#comment:41/1498054359915673</guid>
      <description>&lt;p&gt;
We'd like to resurrect this for 4.9. Some ideas:
&lt;/p&gt;
&lt;p&gt;
If you're editing your theme:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Looks like you're trying to edit your theme! We recommend creating a [child theme](link to documentation) instead. This will let you make changes to your theme without accidentally breaking anything."
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Except with better copy. 😅
&lt;/p&gt;
&lt;p&gt;
We could consider making a "make child theme" button that generates a child theme with a functions.php and style.css.
&lt;/p&gt;
&lt;p&gt;
Once someone makes a child theme, whether manually or using this button, we should link to the child theme documentation at the top of the screen.
&lt;/p&gt;
&lt;p&gt;
If someone's specifically editing their style.css, we should consider showing an additional warning to directly them to Additional CSS:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hey, did you know there's a safer way to edit your site's CSS? Check out [Additional CSS](link) in the Customizer.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If you're editing plugins:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Looks like you're trying to edit your plugin. Editing this code is highly discouraged; please proceed with caution and make sure to back up your plugin before making edits.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
(Though I have to say, the brevity of "Caution: You can break stuff here" is appealing.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31779 (Warn users before using a built-in file editor for the first time) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 21 Jun 2017 14:06:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31779#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31779#comment:40/1498054002539122</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by melchoyce. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1498054000727668"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41076 (Themes: Add more help and documentation when editing theme files) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 21 Jun 2017 14:06:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41076#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41076#comment:2/1498054002440976</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by melchoyce. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1498054000727668"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41081 (Improve Custom Menu widget, show notification if menu is empty or no ...) updated</title>
      
        <dc:creator>mdifelice</dc:creator>

      <pubDate>Wed, 21 Jun 2017 13:41:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41081#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41081#comment:3/1498052505715138</guid>
      <description>&lt;p&gt;
Hi @umangvaghela123, about your patch: if you call &lt;code&gt;wp_get_nav_menus()&lt;/code&gt; without arguments and it does not return anything, when you call it again it would return nothing again, does not it?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41117 (Text color is too light for install message on multisite sites) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Wed, 21 Jun 2017 13:35:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41117#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41117#comment:2/1498052121571578</guid>
      <description>&lt;p&gt;
Oh yeah, that is definitely not the right color. I think for now &lt;code&gt;#555&lt;/code&gt; is fine, until &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/40633" title="#40633: enhancement: Update wp-admin gray colors aka 50 Shades of WordPress (new)"&gt;#40633&lt;/a&gt; goes through.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>20170621-Selection_006.png attached to Ticket #41117</title>
      
        <dc:creator>mbootsman</dc:creator>

      <pubDate>Wed, 21 Jun 2017 13:26:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41117/20170621-Selection_006.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41117/20170621-Selection_006.png/1498051603557377</guid>
      <description>&lt;p&gt;
Screenshot added
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41117 (Text color is too light for install message on multisite sites) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 21 Jun 2017 13:04:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41117#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41117#comment:1/1498050299260679</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41117 (Text color is too light for install message on multisite sites) created</title>
      
        <dc:creator>mbootsman</dc:creator>

      <pubDate>Wed, 21 Jun 2017 12:58:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41117</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41117/1498049922952414</guid>
      <description>&lt;p&gt;
When trying to import on a site (as part of a network), and when that importer is not installed, a message is displayed. This message: 'This importer is not installed. Please install importers from the main site.' is displayed in color #ddd;
&lt;/p&gt;
&lt;p&gt;
Would be better for readability and accessibility to use a more contrasting color, like &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/555" title="#555: defect (bug): template-functions-comment.php missing from tarball 16/12/2004 (closed: duplicate)"&gt;#555&lt;/a&gt;, which is widely used in the admin.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #40431 (Header Images: Improve copy) updated</title>
      
        <dc:creator>casiepa</dc:creator>

      <pubDate>Wed, 21 Jun 2017 12:37:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40431#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40431#comment:5/1498048661746647</guid>
      <description>&lt;p&gt;
Hi @westonruter , is this bug still awaiting review? It seems to have valid patches.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41115 (I wan to upload my approved plugins for ...) closed</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Wed, 21 Jun 2017 12:31:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41115#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41115#comment:3/1498048282300124</guid>
      <description>invalid: &lt;p&gt;
@duspay This is not a support channel for your plugins or a place to get help with using the plugins system. This is the core development trac, where the core team builds the WordPress software.
&lt;/p&gt;
&lt;p&gt;
If you need help with managing plugins, you need to contact the plugins team directly. They have an email address of plugins@…. Only they can help you, nobody here can.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #40960 (Widgets: The Text widget should respect the “Disable the visual editor ...) updated</title>
      
        <dc:creator>carasmo</dc:creator>

      <pubDate>Wed, 21 Jun 2017 12:19:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40960#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40960#comment:17/1498047588557316</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40960#comment:15" title="Comment 15"&gt;westonruter&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40960#comment:11" title="Comment 11"&gt;carasmo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The new image widget doesn't even allow a link.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It does allow a link. Select the image and then under Display Settings select Link To =&amp;gt; Custom Link and then provide the URL for the link.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks! I like the other image widget (&lt;a class="ext-link" href="https://wordpress.org/plugins/image-widget/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/image-widget/&lt;/a&gt;), easier to use and to make a link.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41115 (I wan to upload my approved plugins for ...) reopened</title>
      
        <dc:creator>duspay</dc:creator>

      <pubDate>Wed, 21 Jun 2017 12:12:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41115#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41115#comment:2/1498047124526664</guid>
      <description>&lt;p&gt;
Hello Team,
&lt;/p&gt;
&lt;p&gt;
Greeting !!
&lt;/p&gt;
&lt;p&gt;
I have successfully install the TortoiseSVN on my local system. When I add my file in your turn folder then ask me user and password for authentication. I have only user and password for login in &lt;a class="ext-link" href="https://wordpress.org/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I wetting for this request.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #41116 (Permalink localization being taken from users language) updated</title>
      
        <dc:creator>bradadams</dc:creator>

      <pubDate>Wed, 21 Jun 2017 11:39:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41116#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41116#comment:2/1498045152765686</guid>
      <description>&lt;p&gt;
Aha, that is true @ocean90 - my bad. Although I must say that first issue is quite poorly written 😬
&lt;/p&gt;
&lt;p&gt;
It doesn't mention the word &lt;strong&gt;permalink&lt;/strong&gt; in it at all...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34913 (Unscheduling cron jobs fails when original arguments were not an array.) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Wed, 21 Jun 2017 11:36:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34913#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34913#comment:11/1498045006821082</guid>
      <description>&lt;p&gt;
Just wondering if this patch can get some love ? I'd be happy to update it if someone would give the go-ahead for 4.9.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #39587,​41116 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 21 Jun 2017 11:32:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=39587%2C41116</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=39587%2C41116/1498044745211518</guid>
      <description>duplicate: &lt;p&gt;
Hello @bradadams, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
Thanks for your report, we're already tracking this issue in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/39587" title="#39587: defect (bug): link problems with language settings (new)"&gt;#39587&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #41116 (Permalink localization being taken from users language) created</title>
      
        <dc:creator>bradadams</dc:creator>

      <pubDate>Wed, 21 Jun 2017 11:25:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41116</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41116/1498044307931717</guid>
      <description>&lt;p&gt;
I was just working on a clients site, that uses a foreign &lt;strong&gt;global&lt;/strong&gt; locale (Swedish, to be precise).
&lt;/p&gt;
&lt;p&gt;
They have permalinks set to the &lt;em&gt;default&lt;/em&gt; localization, so archive is &lt;strong&gt;Arkiv&lt;/strong&gt;, WooCommerce products uses &lt;strong&gt;Produkt&lt;/strong&gt; and so forth.
&lt;/p&gt;
&lt;p&gt;
In my user profile I have the locale set to EN, and needed to refresh the permalinks after a change. When I visited the permalinks edit screen, it was all localized to my user language, including the actual permalinks. So I saw "archive"/"product".
&lt;/p&gt;
&lt;p&gt;
After saving, the site literally "broke". All the links using foreign permalinks stopped working. I had to switch my account locale to match the sites global setting (again, Swedish) and then re-save. This switched it all back to normal.
&lt;/p&gt;
&lt;h2 id="Stepstoreproduce"&gt;Steps to reproduce&lt;/h2&gt;
&lt;ol&gt;&lt;li&gt;Switch your &lt;strong&gt;user&lt;/strong&gt; locale to something different than the main sites &lt;code&gt;/wp-admin/profile.php&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Visit the &lt;code&gt;/wp-admin/options-permalink.php&lt;/code&gt; screen, and click save.
&lt;/li&gt;&lt;li&gt;Permalinks now will follow your user locale, where-as it seems more logical for them to always use the sites global language.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41115 (I wan to upload my approved plugins for ...) closed</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 21 Jun 2017 11:15:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41115#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41115#comment:1/1498043702781156</guid>
      <description>invalid: &lt;p&gt;
Hey there
&lt;/p&gt;
&lt;p&gt;
Please check out &lt;a class="ext-link" href="https://developer.wordpress.org/plugins/wordpress-org/how-to-use-subversion/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/plugins/wordpress-org/how-to-use-subversion/&lt;/a&gt; for a guide on how to use Subversion to upload your plugin. If you have more questions, reach out to plugins@….
&lt;/p&gt;
&lt;p&gt;
This place is for WordPress core development, not support with your plugins.
&lt;/p&gt;
&lt;p&gt;
Also, never post your credentials online! You should immediately change your password.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #41115 (I wan to upload my approved plugins for ...) created</title>
      
        <dc:creator>duspay</dc:creator>

      <pubDate>Wed, 21 Jun 2017 11:09:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41115</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41115/1498043362926210</guid>
      <description>&lt;p&gt;
Hello Team,
&lt;/p&gt;
&lt;p&gt;
Please help me for uploading the my approved plugins is &lt;a class="ext-link" href="https://plugins.svn.wordpress.org/duspay-woocommerce-gateway"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.svn.wordpress.org/duspay-woocommerce-gateway&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Please find duspay woocomerece gatewya in zip url is &lt;a class="ext-link" href="https://www.duspay.com/woocommerce-gateway-duspay.zip"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.duspay.com/woocommerce-gateway-duspay.zip&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Regards :
&lt;/p&gt;
&lt;p&gt;
Mithilesh Kumar Singh
Email: tech@…
&lt;/p&gt;
&lt;ol class="upperalpha" start="13"&gt;&lt;li&gt;+917065491021
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41112 (Show WordCamps higher up in the News Dashboard widget) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Wed, 21 Jun 2017 11:06:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41112#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41112#comment:1/1498043176378169</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Not related to the REST API; data is provided by WordPress.org under the hood, and it seems like that's probably where this wants to be fixed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41114 (Installation: "Search Engine Visibility" not keeping checked on error) updated</title>
      
        <dc:creator>screamingdev</dc:creator>

      <pubDate>Wed, 21 Jun 2017 10:26:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41114#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41114#comment:1/1498040789193788</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41114 (Installation: "Search Engine Visibility" not keeping checked on error) created</title>
      
        <dc:creator>screamingdev</dc:creator>

      <pubDate>Wed, 21 Jun 2017 10:25:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41114</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41114/1498040748726740</guid>
      <description>&lt;p&gt;
Given your installing WordPress
and you reach the screen about site title, admin login and "Search Engine Visibility".
&lt;/p&gt;
&lt;p&gt;
When you enable the checkbox for/near "Search Engine Visibility"
And fill nothing out for mail address
And press continue
&lt;/p&gt;
&lt;p&gt;
Then an error message appears
And most fields are still filled out as before
&lt;/p&gt;
&lt;p&gt;
---
&lt;/p&gt;
&lt;p&gt;
Problem:
&lt;/p&gt;
&lt;p&gt;
The "Search Engine Visibility" is no longer checked.
IMHO this should also stay as intended to.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41113 (WP_Term_Query::get_terms() : Do not presume the $taxonomies is a ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 21 Jun 2017 10:14:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41113#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41113#comment:1/1498040068989504</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>41081.patch attached to Ticket #41081</title>
      
        <dc:creator>umangvaghela123</dc:creator>

      <pubDate>Wed, 21 Jun 2017 10:09:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41081/41081.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41081/41081.patch/1498039789103513</guid>
      <description>&lt;p&gt;
Fix &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/41081" title="#41081: enhancement: Improve Custom Menu widget, show notification if menu is empty or no ... (assigned)"&gt;#41081&lt;/a&gt; issue.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>41113.diff attached to Ticket #41113</title>
      
        <dc:creator>david.binda</dc:creator>

      <pubDate>Wed, 21 Jun 2017 10:08:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41113/41113.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41113/41113.diff/1498039733286545</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41113 (WP_Term_Query::get_terms() : Do not presume the $taxonomies is a ...) created</title>
      
        <dc:creator>david.binda</dc:creator>

      <pubDate>Wed, 21 Jun 2017 10:08:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41113</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41113/1498039693277134</guid>
      <description>&lt;p&gt;
In &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23506" title="#23506: defect (bug): get_terms() assumes its taxonomies argument is a numeric array with a 0 key (closed: fixed)"&gt;#23506&lt;/a&gt; the assumption that $taxonomies is a 0-based array has been flagged and patched via &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/25108" title="Use `reset()` to grab the first taxonomy in an array, not by numerical ..."&gt;r25108&lt;/a&gt;, however a part of the fix has been reverted, very likely due to an oversight, in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/25162" title="Improve the include / exclude SQL generation in `get_terms()` by using ..."&gt;r25162&lt;/a&gt; (addressing unrelated ticket - &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11823" title="#11823: enhancement: Improve SQL query used by get_terms() (closed: fixed)"&gt;#11823&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
Attached patch is restoring the original fix, which is using &lt;code&gt;reset()&lt;/code&gt; instead of assuming that &lt;code&gt;$taxonomies[0]&lt;/code&gt; exists.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>events.jpeg attached to Ticket #41112</title>
      
        <dc:creator>grapplerulrich</dc:creator>

      <pubDate>Wed, 21 Jun 2017 10:00:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41112/events.jpeg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41112/events.jpeg/1498039214979266</guid>
      <description>&lt;p&gt;
events dashboard widget with only meetups and not the WordCamp
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41112 (Show WordCamps higher up in the News Dashboard widget) created</title>
      
        <dc:creator>grapplerulrich</dc:creator>

      <pubDate>Wed, 21 Jun 2017 09:59:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41112</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41112/1498039183228400</guid>
      <description>&lt;p&gt;
WordCamp Bern is planned for 9th September. Till then we have three Meetups planned for June, July and August. Due to this the WordCamp is not being displayed on the list of events.
&lt;/p&gt;
&lt;p&gt;
It is not really important for us that people see the Meetup happening in August but that people see that there is a WordCamp in September.
&lt;/p&gt;
&lt;p&gt;
As there is less organising for meetup it does not mater if people sign up a few days before but for WordCamp we want people to buy their tickets as soon as possible.
&lt;/p&gt;
&lt;p&gt;
If there is a WordCamp nearby it should be shown at the top of list of events.
&lt;/p&gt;
&lt;p&gt;
Related &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40702" title="#40702: task (blessed): Add WordCamps and meetup events to the News Dashboard widget (closed: fixed)"&gt;#40702&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41111 (WP-API JS Client: Add a helper to get model or collection by route) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Wed, 21 Jun 2017 09:51:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41111#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41111#comment:1/1498038679894580</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41111 (WP-API JS Client: Add a helper to get model or collection by route) created</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Wed, 21 Jun 2017 09:51:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41111</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41111/1498038662233438</guid>
      <description>&lt;p&gt;
In the process of adding page/custom post type support to Gutenberg, the need arose to identify the models based on their route - the code passes the route from PHP to JavaScript, and the JavaScript needs to know which model to use. See &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/1276"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;this pull requst&lt;/a&gt; for additional details.
&lt;/p&gt;
&lt;p&gt;
We should add helpers to the client to easily find a model or collection based on its route, something like &lt;code&gt;getModelByRoute&lt;/code&gt; and &lt;code&gt;getCollectionByRoute&lt;/code&gt; - each would search thru the constructed models/collections and return the matching object, or &lt;code&gt;false&lt;/code&gt; if none was found. We should also add unit tests to verify the functions work as expected.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41108 (Better documentation for the labels array of get_taxonomy_labels() function) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Wed, 21 Jun 2017 09:46:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41108#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41108#comment:2/1498038419469252</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41099 (update_option return value ambiguous) updated</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Wed, 21 Jun 2017 09:33:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41099#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41099#comment:5/1498037603821750</guid>
      <description>&lt;p&gt;
I think in this case the function should return true, and that's all.
&lt;/p&gt;
&lt;p&gt;
update_option( 'foo', 'ram' ) - should return true
update_option( 'foo', 'bar' ) - should return true
update_option( 1, 'ram' ) - should return false (Line 344 - error inserting in database)
update_option( ' ', 'ram' ) - should return false (Line 263 - empty option name)
&lt;/p&gt;
&lt;p&gt;
To do this we need to change how the function works.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41109 (WordPress Core Js File Seems Infected) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 21 Jun 2017 08:33:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41109#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41109#comment:2/1498033992250558</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>41110.2.diff attached to Ticket #41110</title>
      
        <dc:creator>ibachal</dc:creator>

      <pubDate>Wed, 21 Jun 2017 06:33:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41110/41110.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41110/41110.2.diff/1498026795281091</guid>
      <description>&lt;p&gt;
Attached revised patch 41110.2.diff
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41110 (Display full content of "Pending" comment on WP Dashboard) updated</title>
      
        <dc:creator>ibachal</dc:creator>

      <pubDate>Wed, 21 Jun 2017 06:23:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41110#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41110#comment:2/1498026205332803</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Attached patch 41110.diff
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>41110.diff attached to Ticket #41110</title>
      
        <dc:creator>ibachal</dc:creator>

      <pubDate>Wed, 21 Jun 2017 06:22:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41110/41110.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41110/41110.diff/1498026179123823</guid>
      <description>&lt;p&gt;
Attached patch 41110.diff
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41110 (Display full content of "Pending" comment on WP Dashboard) updated</title>
      
        <dc:creator>puneetsahalot</dc:creator>

      <pubDate>Wed, 21 Jun 2017 05:47:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41110#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41110#comment:1/1498024075283777</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>pending-comment.png attached to Ticket #41110</title>
      
        <dc:creator>puneetsahalot</dc:creator>

      <pubDate>Wed, 21 Jun 2017 05:44:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41110/pending-comment.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41110/pending-comment.png/1498023862280033</guid>
      <description>&lt;p&gt;
Comment text clipped in the widget.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41110 (Display full content of "Pending" comment on WP Dashboard) created</title>
      
        <dc:creator>puneetsahalot</dc:creator>

      <pubDate>Wed, 21 Jun 2017 05:42:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41110</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41110/1498023757216115</guid>
      <description>&lt;p&gt;
"Recent Comments" widget in WP dashboard displays a list of Pending and recent comments.
A "Pending" comment has all the action items - approve, reply, edit, trash, spam. But, these items are of no use, because the complete comment text is not visible.
&lt;/p&gt;
&lt;p&gt;
It will be good to display the full content of the "Pending" comments.
&lt;/p&gt;
&lt;p&gt;
OR
&lt;/p&gt;
&lt;p&gt;
Add a toggle to display the full content without having to go to "Comments" page.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41109 (WordPress Core Js File Seems Infected) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 21 Jun 2017 05:08:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41109#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41109#comment:1/1498021683678655</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @756dk, thank you for the bug report!
&lt;/p&gt;
&lt;p&gt;
This JavaScript file is correct, it's produced during our build process, by combining and minifying &lt;a class="missing source"&gt;wp-emoji.js&lt;/a&gt; and &lt;a class="missing source"&gt;twemoji.js&lt;/a&gt;. We minify all JS files that are used in production.
&lt;/p&gt;
&lt;p&gt;
As for the &lt;code&gt;NS_ERROR_UNEXPECTED&lt;/code&gt; JavaScript error you're seeing, this is a generic error that Firefox throws, which unfortunately doesn't tell us what's gone wrong. If you're able to reproduce this error, Firefox's dev tools should be able to prettify the source and give us a better indication of what line is triggering the error.
&lt;/p&gt;
&lt;p&gt;
Alternatively, adding &lt;code&gt;define( 'SCRIPT_DEBUG', true );&lt;/code&gt; to your &lt;code&gt;wp-config.php&lt;/code&gt; will use the development versions of the files, which will give us the original line number. This can occasionally stop the bug from occurring, though, if it's some sort of race condition.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>imageedit_3_8162268474.gif attached to Ticket #41109</title>
      
        <dc:creator>756dk</dc:creator>

      <pubDate>Wed, 21 Jun 2017 04:45:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41109/imageedit_3_8162268474.gif</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41109/imageedit_3_8162268474.gif/1498020310476934</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41109 (WordPress Core Js File Seems Infected) created</title>
      
        <dc:creator>756dk</dc:creator>

      <pubDate>Wed, 21 Jun 2017 04:44:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41109</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41109/1498020294299067</guid>
      <description>&lt;p&gt;
Hi
&lt;/p&gt;
&lt;p&gt;
I have running latest version of wordpress while website loads up and I got some error in the console.
&lt;/p&gt;
&lt;p&gt;
After checking the Console for the error I found error and encrypted code is in the core js file - &lt;a class="ext-link" href="https://raw.githubusercontent.com/WordPress/WordPress/master/wp-includes/js/wp-emoji-release.min.js"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://raw.githubusercontent.com/WordPress/WordPress/master/wp-includes/js/wp-emoji-release.min.js&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Kindly check the screenshot URL for the error.
&lt;/p&gt;
&lt;p&gt;
Accordingly to it might be the malware or I would like to know what exactly encrypted in the JS code.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://imgur.com/a/CNcbr"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://imgur.com/a/CNcbr&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Looking forward to hear back from you.
&lt;/p&gt;
&lt;p&gt;
Thanks
Deepanshu kapoor
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37094 (wp_get_nav_menu_items should use tax_query) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 21 Jun 2017 04:43:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37094#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37094#comment:7/1498020206518989</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37094#comment:6" title="Comment 6"&gt;spacedmonkey&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
By using the tax query and tt_id, it results in on extra query. However, if the site has lots of terms and linked, I could understand it might be slow. However, this is a general problem with the tax query.
&lt;/p&gt;
&lt;p&gt;
Personally, I would use the tax query and work on &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/22176" title="#22176: enhancement: Cache the results of the posts_request_ids query (new)"&gt;#22176&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37038" title="#37038: enhancement: WP_Tax_Query needs caching (closed: fixed)"&gt;#37038&lt;/a&gt; tickets. In short, do this query in the wordpress way (a tax query) and make the rest of the core better around it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37038" title="#37038: enhancement: WP_Tax_Query needs caching (closed: fixed)"&gt;#37038&lt;/a&gt; eliminates the transform, but the transform is not the problematic query here: it's the &lt;code&gt;wp_posts&lt;/code&gt; + &lt;code&gt;wp_term_relationships&lt;/code&gt; table join. You're correct that this is a general problem with tax query, but it's also the case that tax queries are generally only fired by core in specific places: taxonomy archives, etc. Nav queries are fired on pretty much every page, sometimes multiple times, so we've got to be much more careful about them.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37189 (In wp_term_query on cache ids) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 21 Jun 2017 04:39:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37189#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37189#comment:11/1498019995921614</guid>
      <description>&lt;p&gt;
Thanks to @spacedmonkey and @flixos90 for the thorough feedback. I've gone ahead with the &lt;code&gt;clean_taxonomy_cache()&lt;/code&gt; and &lt;code&gt;_split_shared_term()&lt;/code&gt; fixes, since they're not dependent on the rest of this ticket.
&lt;/p&gt;
&lt;p&gt;
Regarding cache keys: Yes, I've just reread a comment from previous-me and I think there are non-stylistic reasons why we need to hash the args: &lt;a href="https://core.trac.wordpress.org/ticket/21267#comment:17"&gt;https://core.trac.wordpress.org/ticket/21267#comment:17&lt;/a&gt; &lt;code&gt;$taxonomies&lt;/code&gt; is part of the &lt;code&gt;$args&lt;/code&gt; array, so that part is redundant. I will make the change.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The patch remove the cache expiry time of DAY_IN_SECONDS on the term cache. I have never understood why this was put in, as if cache invalidation is correct, then it should never be needed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Good catch. The one-day timeout was introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15583" title="Do not cache terms indefinitely... use TTL of one day. fixes #11431. ..."&gt;[15583]&lt;/a&gt;; see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11431" title="#11431: enhancement: object cache's terms bucket potentially contains junk (closed: fixed)"&gt;#11431&lt;/a&gt;. Since this time, we have had a clearer position on invalidation: it's generally the job of the cache engine (and its administrator) to set a policy for evacuating old content. So I think it's fine to remove the restriction.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The all_with_object_id value is (in addition of count) the only value for the fields key that requires a different information that simply an array of IDs being in the cache.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, this is a good point. It will take some non-trivial refactoring to make this work right. It also appears that we don't have the right kinds of tests to confirm the cache behavior of this sort of query (surprising, since it was added recently). I'll work on this.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
While I like the idea of not running the get_term() queries when only ids are queried a lot, I'm a bit wary this could cause unexpected issues, especially surrounding the hacky logic of manually creating stdClass objects with the term_id property set.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, this part of the patch did not feel great to write. I'm fairly sure that there is no current possibility for bugs due to the &lt;code&gt;stdClass&lt;/code&gt; hack (as you note, none of the relevant &lt;code&gt;if&lt;/code&gt; clauses later in the function are tripped). But future WordPressnauts may be tripped up by this bit of weirdness. There may be a way to accomplish much the same thing in a way that feels less unpleasant, maybe by explicitly checking for &lt;code&gt;$_fields = 'ids'&lt;/code&gt; on some of those latter &lt;code&gt;if&lt;/code&gt; clauses, and/or having a separate &lt;code&gt;if&lt;/code&gt; block for formatting the return value when we've only got an array of integers (to avoid &lt;code&gt;stdClass&lt;/code&gt; juggling). I'll think about it.
&lt;/p&gt;
&lt;p&gt;
I'll try to wrestle all of this into a new patch in the upcoming days.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37189 (In wp_term_query on cache ids) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 21 Jun 2017 04:11:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37189#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37189#comment:10/1498018319274665</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40920" title="Improve cache invalidation when splitting shared terms.
This ..."&gt;40920&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Improve cache invalidation when splitting shared terms.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This changeset addresses two related issues:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;When splitting shared terms from hierarchical taxonomies, the process of regenerating the taxonomy hierarchy (&lt;code&gt;_get_taxonomy_hierarchy()&lt;/code&gt;) requires recursive calls to &lt;code&gt;get_terms()&lt;/code&gt; in order to descend the tree. By waiting until all shared terms in a term group have been invalidated before regenerating their taxonomy hierarchies, we avoid certain race conditions.
&lt;/li&gt;&lt;li&gt;Previously, a coding error prevented single-term caches from being invalidated for children of split terms. This error dates from &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/31418" title="Split shared taxonomy terms on term update.
When updating an existing ..."&gt;[31418]&lt;/a&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37189" title="#37189: enhancement: In wp_term_query on cache ids (new)"&gt;#37189&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [40920]: Improve cache invalidation when splitting shared terms.  This ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 21 Jun 2017 04:11:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40920</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40920/1498018318673404</guid>
      <description>&lt;p&gt;
Improve cache invalidation when splitting shared terms.
&lt;/p&gt;
&lt;p&gt;
This changeset addresses two related issues:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;When splitting shared terms from hierarchical taxonomies, the process of regenerating the taxonomy hierarchy (&lt;code&gt;_get_taxonomy_hierarchy()&lt;/code&gt;) requires recursive calls to &lt;code&gt;get_terms()&lt;/code&gt; in order to descend the tree. By waiting until all shared terms in a term group have been invalidated before regenerating their taxonomy hierarchies, we avoid certain race conditions.
&lt;/li&gt;&lt;li&gt;Previously, a coding error prevented single-term caches from being invalidated for children of split terms. This error dates from &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/31418" title="Split shared taxonomy terms on term update.
When updating an existing ..."&gt;[31418]&lt;/a&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37189" title="#37189: enhancement: In wp_term_query on cache ids (new)"&gt;#37189&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37189 (In wp_term_query on cache ids) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 21 Jun 2017 04:03:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37189#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37189#comment:9/1498017803082884</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40919" title="Introduce `clean_taxonomy_cache()` function.
Previously, ..."&gt;40919&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Introduce &lt;code&gt;clean_taxonomy_cache()&lt;/code&gt; function.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Previously, taxonomy-wide caches were cleaned only inside of&lt;br /&gt;
&lt;code&gt;clean_term_cache()&lt;/code&gt;. This made it hard to clean taxonmy caches&lt;br /&gt;
in isolation from specific taxonomy terms.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props spacedmonkey.&lt;br /&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37189" title="#37189: enhancement: In wp_term_query on cache ids (new)"&gt;#37189&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [40919]: Introduce `clean_taxonomy_cache()` function.  Previously, ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 21 Jun 2017 04:03:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40919</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40919/1498017802579497</guid>
      <description>&lt;p&gt;
Introduce &lt;code&gt;clean_taxonomy_cache()&lt;/code&gt; function.
&lt;/p&gt;
&lt;p&gt;
Previously, taxonomy-wide caches were cleaned only inside of
&lt;code&gt;clean_term_cache()&lt;/code&gt;. This made it hard to clean taxonmy caches
in isolation from specific taxonomy terms.
&lt;/p&gt;
&lt;p&gt;
Props spacedmonkey.
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37189" title="#37189: enhancement: In wp_term_query on cache ids (new)"&gt;#37189&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37038 (WP_Tax_Query needs caching) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 21 Jun 2017 03:56:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37038#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37038#comment:12/1498017385690123</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40918" title="Use `WP_Term_Query` when transforming tax queries.
This change allows ..."&gt;40918&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Use &lt;code&gt;WP_Term_Query&lt;/code&gt; when transforming tax queries.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This change allows tax query transformations to be cached.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props spacedmonkey.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37038" title="#37038: enhancement: WP_Tax_Query needs caching (closed: fixed)"&gt;#37038&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40918]: Use `WP_Term_Query` when transforming tax queries.  This change allows ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 21 Jun 2017 03:56:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40918</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40918/1498017385176537</guid>
      <description>&lt;p&gt;
Use &lt;code&gt;WP_Term_Query&lt;/code&gt; when transforming tax queries.
&lt;/p&gt;
&lt;p&gt;
This change allows tax query transformations to be cached.
&lt;/p&gt;
&lt;p&gt;
Props spacedmonkey.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37038" title="#37038: enhancement: WP_Tax_Query needs caching (closed: fixed)"&gt;#37038&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #41108 (Better documentation for the labels array of get_taxonomy_labels() function) updated</title>
      
        <dc:creator>truongwp</dc:creator>

      <pubDate>Wed, 21 Jun 2017 03:55:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41108#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41108#comment:1/1498017328879647</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>41108.diff attached to Ticket #41108</title>
      
        <dc:creator>truongwp</dc:creator>

      <pubDate>Wed, 21 Jun 2017 03:55:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41108/41108.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41108/41108.diff/1498017310716930</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41108 (Better documentation for the labels array of get_taxonomy_labels() function) created</title>
      
        <dc:creator>truongwp</dc:creator>

      <pubDate>Wed, 21 Jun 2017 03:54:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41108</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41108/1498017287768822</guid>
      <description>&lt;p&gt;
Make documentation for the labels array of &lt;code&gt;get_taxonomy_labels()&lt;/code&gt; function better and remove &lt;code&gt;@todo&lt;/code&gt; tag.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37038 (WP_Tax_Query needs caching) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 21 Jun 2017 03:41:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37038#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37038#comment:11/1498016486894148</guid>
      <description>&lt;p&gt;
@spacedmonkey Thanks for the review.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
On line 579 (in class-wp-tax-query.php) hierarchical taxonomies query by term_id. Correct me if I am but if term splitting is complete, then tt_id and term_id should be the same.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No: term_id and tt_id are only guaranteed to be correct if there were *never* any shared terms. If terms were previously shared and were then split, they won't match. (wp_terms and wp_term_taxonomy will have the same number of rows in these cases, but the items will be in a different order.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41058 (wp_dropdown_categories documentation is missing arguments) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 21 Jun 2017 03:37:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41058#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41058#comment:8/1498016235771689</guid>
      <description>&lt;p&gt;
We've generally moved lately toward not documenting parameters on wrapper functions if the default value doesn't differ from the lower-level function. That was my understanding when removing those lines in the doc block.
&lt;/p&gt;
&lt;p&gt;
The fact that items are defined in &lt;code&gt;$defaults&lt;/code&gt; does not, IMHO, mean that those items ought to be listed in the function docblock. We pass the parsed &lt;code&gt;$r&lt;/code&gt; array down through lower-level functions, and our &lt;code&gt;$defaults&lt;/code&gt; declaration acts as a safeguard against lower-level changes in default values, not necessarily as a developer guide on how to use the function.
&lt;/p&gt;
&lt;p&gt;
That being said, I don't feel strongly. @SergeyBiryukov If you think that not having all of the arguments specifically spelled out here may cause confusion for developers, please go ahead and add them back.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41107 (Deleted site still active) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 21 Jun 2017 02:59:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41107#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41107#comment:1/1498013974816783</guid>
      <description>invalid: &lt;p&gt;
Hi @astenson09!
&lt;/p&gt;
&lt;p&gt;
This site is for tracking bugs in the WordPress open source project, we're unable to provide support for WordPress.com hosted sites here.
&lt;/p&gt;
&lt;p&gt;
I recommend contacting WordPress.com Support: &lt;a class="ext-link" href="https://en.support.wordpress.com/contact/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://en.support.wordpress.com/contact/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #41107 (Deleted site still active) created</title>
      
        <dc:creator>astenson09</dc:creator>

      <pubDate>Wed, 21 Jun 2017 02:39:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41107</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41107/1498012759172823</guid>
      <description>&lt;p&gt;
I deleted a site YEARS ago on wordpress, and it no longer shows up in my dashboard (meaning I can't make edits to it), and yet I just found out it's still active. Here it is: &lt;a class="ext-link" href="https://alyssainjordan.wordpress.com/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://alyssainjordan.wordpress.com/&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
If it wasn't actually deleted yet I have no control over it, then WHO DOES have control over it. Please delete it permanently or turn it back over to me so I can delete anything, and please begin a review other deleted sites for this same problem.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #34694 (Facilitate automated testing in context of pull requests and diffs) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 21 Jun 2017 02:03:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34694#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34694#comment:17/1498010599544159</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-js by netweb. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-js/p1498010597572681"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37189 (In wp_term_query on cache ids) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 20 Jun 2017 23:21:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37189#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37189#comment:8/1498000917470085</guid>
      <description>&lt;p&gt;
Great work on this so far, I agree it generally makes sense to follow the other query classes and query IDs only to make the caches applicable more generally.
&lt;/p&gt;
&lt;p&gt;
I jumped into the code for a while and reviewed it. Here are my thoughts:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Even though it looks a bit less elegant, I prefer generating the cache key in the way that @spacedmonkey did in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37189/37189.2.patch" title="Attachment '37189.2.patch' in Ticket #37189"&gt;37189.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37189/37189.2.patch" title="Download"&gt;​&lt;/a&gt;. His idea has parity with other query classes and I don't see any harm in manually removing the &lt;code&gt;fields&lt;/code&gt; key from the arguments unless its value is &lt;code&gt;count&lt;/code&gt; or &lt;code&gt;all_with_object_id&lt;/code&gt; (see below).
&lt;/li&gt;&lt;li&gt;The &lt;code&gt;all_with_object_id&lt;/code&gt; value is (in addition of &lt;code&gt;count&lt;/code&gt;) the only value for the &lt;code&gt;fields&lt;/code&gt; key that requires a different information that simply an array of IDs being in the cache. Given my above point, I think it would make sense to add this field to the condition in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37189/37189.2.patch" title="Attachment '37189.2.patch' in Ticket #37189"&gt;37189.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37189/37189.2.patch" title="Download"&gt;​&lt;/a&gt;, in order to leave it in the key generator array under these circumstances. Some logic would need to be added then in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37189/37189.3.patch" title="Attachment '37189.3.patch' in Ticket #37189"&gt;37189.3.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37189/37189.3.patch" title="Download"&gt;​&lt;/a&gt; in the same location where the special &lt;code&gt;count&lt;/code&gt; cache is handled, in order to set an array of objects in the cache where each object contains &lt;code&gt;term_id&lt;/code&gt; and &lt;code&gt;object_id&lt;/code&gt; properties. This information would be sufficient to create the objects. In case of a cache hit, the &lt;code&gt;term_id&lt;/code&gt; field could be used to create an array of term objects via calls to &lt;code&gt;get_term()&lt;/code&gt; and then the &lt;code&gt;object_id&lt;/code&gt; simply needs to be set for each object.
&lt;/li&gt;&lt;li&gt;In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37189/37189.3.patch" title="Attachment '37189.3.patch' in Ticket #37189"&gt;37189.3.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37189/37189.3.patch" title="Download"&gt;​&lt;/a&gt; the check for &lt;code&gt;! empty( $args['object_ids'] )&lt;/code&gt; is missing: The &lt;code&gt;tr.object_id&lt;/code&gt; field should only be queried if actual object IDs have been passed, similar as before.
&lt;/li&gt;&lt;li&gt;While I like the idea of not running the &lt;code&gt;get_term()&lt;/code&gt; queries when only &lt;code&gt;ids&lt;/code&gt; are queried a lot, I'm a bit wary this could cause unexpected issues, especially surrounding the hacky logic of manually creating &lt;code&gt;stdClass&lt;/code&gt; objects with the &lt;code&gt;term_id&lt;/code&gt; property set. Looking for any unexpected calls to other term properties (which would not exist in that case), I wasn't able to detect any issue since all such cases should be prevented by respective if-clauses. However, since this part is rather complex, let's pay particular attention to this change. We need thorough unit tests for this especially.
&lt;/li&gt;&lt;li&gt;+1 on fixing the &lt;code&gt;_split_shared_term()&lt;/code&gt; bug and introducing a &lt;code&gt;clean_taxonomy_cache()&lt;/code&gt; function. The action name, as noticed by @spacedmonkey above, should be &lt;code&gt;clean_taxonomy_cache&lt;/code&gt;, I assume this was just a typo.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40922 (Use finer-grained capabilities with `customize_changeset` post type) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 20 Jun 2017 22:47:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40922#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40922#comment:6/1497998824397118</guid>
      <description>&lt;p&gt;
@dlh ok, good point. Yeah, re-using the existing primitive cap &lt;code&gt;edit_theme_options&lt;/code&gt; is probably the right. But, will not switching to not use the &lt;code&gt;customize&lt;/code&gt; meta cap cause problems for plugins (like Customize Posts) that grant the &lt;code&gt;customize&lt;/code&gt; cap to allow users to access the Customizer to edit posts there? Since those users don't have &lt;code&gt;edit_theme_options&lt;/code&gt; would they not be prevented from being able to make any changes? Wouldn't that mean that granting &lt;code&gt;customize&lt;/code&gt; capability then no longer be sufficient to grant effective access?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41070 (register_sidebar and dynamic_sidebar inconsistency) updated</title>
      
        <dc:creator>mdifelice</dc:creator>

      <pubDate>Tue, 20 Jun 2017 22:36:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41070#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41070#comment:1/1497998172809204</guid>
      <description>&lt;p&gt;
Hi @derkjanspeelman, I've tried your code in my environment and I did not get the same output. Could you please give us more information: the sidebar has widgets? your theme has other sidebars? etc.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;dynamic_sidebar()&lt;/code&gt; function does return &lt;code&gt;true&lt;/code&gt; when there is at least one widget loaded in it. So it is weird it does also print the widget itself when calling it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24142 (Zero value for posts_per_page value in wp_query custom instance and ...) updated</title>
      
        <dc:creator>teraviva</dc:creator>

      <pubDate>Tue, 20 Jun 2017 22:31:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24142#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24142#comment:8/1497997869197647</guid>
      <description>&lt;p&gt;
I want to give you an other case. For example I have CPT Destination with Tours and Posts attached to it. And I have no need to show posts at Destination page, because I provide further links to inner categories for Tours and Info posts at this page.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40960 (Widgets: The Text widget should respect the “Disable the visual editor ...) updated</title>
      
        <dc:creator>dfterry</dc:creator>

      <pubDate>Tue, 20 Jun 2017 22:30:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40960#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40960#comment:16/1497997852392607</guid>
      <description>&lt;p&gt;
Will 4.8.1 it be safe to update? I won't be updating to a version which costs hours of dev time to deal with.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40960 (Widgets: The Text widget should respect the “Disable the visual editor ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 20 Jun 2017 22:26:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40960#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40960#comment:15/1497997614603568</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40960#comment:11" title="Comment 11"&gt;carasmo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The new image widget doesn't even allow a link.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It does allow a link. Select the image and then under Display Settings select Link To =&amp;gt; Custom Link and then provide the URL for the link.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37038 (WP_Tax_Query needs caching) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Tue, 20 Jun 2017 22:26:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37038#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37038#comment:10/1497997586409717</guid>
      <description>&lt;ul&gt;&lt;li&gt;I like that the tax query using fields=&amp;gt;'all'. I think it adds a little overhead, but it always primes term caches. I feel like it highly likely that you would using a post's terms in a loop. Like displaying a post categories. That could be a performance win down stream.
&lt;/li&gt;&lt;li&gt;Allow filters is great, it adds an array of filters in play for tax query, which currently has no hooks in it. A massive benefit.
&lt;/li&gt;&lt;li&gt;Might be worth testing this patch alongside &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37189" title="#37189: enhancement: In wp_term_query on cache ids (new)"&gt;#37189&lt;/a&gt; as they are somewhat related.
&lt;/li&gt;&lt;li&gt;On line 579 (in class-wp-tax-query.php) hierarchical taxonomies query by term_id. Correct me if I am but if term splitting is complete, then tt_id and term_id should be the same. Could we do something like this.
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$field = (get_option('finished_splitting_shared_terms', false) ) ? 'term_taxonomy_id' : 'term_id';
$this-&amp;gt;transform_query( $query, $field );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This may save another query or hit existing caches.
&lt;/p&gt;
&lt;p&gt;
Otherwise I think we are there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37094 (wp_get_nav_menu_items should use tax_query) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Tue, 20 Jun 2017 21:55:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37094#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37094#comment:6/1497995737416834</guid>
      <description>&lt;p&gt;
So the reason I created this ticket is I have a navigation caching plugin. I noticed that when profiling, that get_objects_in_term runs a query. get_objects_in_term has no hooks or caching, so there was nothing I could do about that query.
&lt;/p&gt;
&lt;p&gt;
By using the tax query and tt_id, it results in on extra query. However, if the site has lots of terms and linked, I could understand it might be slow. However, this is a general problem with the tax query.
&lt;/p&gt;
&lt;p&gt;
Personally, I would use the tax query and work on &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/22176" title="#22176: enhancement: Cache the results of the posts_request_ids query (new)"&gt;#22176&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37038" title="#37038: enhancement: WP_Tax_Query needs caching (closed: fixed)"&gt;#37038&lt;/a&gt; tickets. In short, do this query in the wordpress way (a tax query) and make the rest of the core better around it.
&lt;/p&gt;
&lt;p&gt;
But I am not against &lt;code&gt;get_objects_in_term&lt;/code&gt;, it is a quick and simple solution.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40987 (Text Widget not working properly) closed</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Tue, 20 Jun 2017 21:53:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40987#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40987#comment:4/1497995614703733</guid>
      <description>invalid: &lt;p&gt;
@wafwaf I would suspect there is a JavaScript error in your browser console due to some conflict between WP, your plugins, your theme, etc, which is preventing TinyMCE from loading.
&lt;/p&gt;
&lt;p&gt;
Can you start a new thread on &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/&lt;/a&gt; and explain the issue if you need assistance tracking it down from there.
&lt;/p&gt;
&lt;p&gt;
Thanks!
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #41103 (Widgets on customize.php page should refresh after data was sent) closed</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 20 Jun 2017 21:36:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41103#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41103#comment:3/1497994607259993</guid>
      <description>invalid: &lt;p&gt;
@alexvorn2 do you mean whether or not there is an "Apply" button? This is indeed by design that the widgets in the customizer not get fully refreshed. The presence of the Apply button indicates that the the JS logic wasn't able to sync the values from the server update to the form in the UI. For more info on this, see § No more Update button (usually) at &lt;a class="ext-link" href="https://make.wordpress.org/core/2014/04/17/live-widget-previews-widget-management-in-the-customizer-in-wordpress-3-9/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2014/04/17/live-widget-previews-widget-management-in-the-customizer-in-wordpress-3-9/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #41099 (update_option return value ambiguous) updated</title>
      
        <dc:creator>mdifelice</dc:creator>

      <pubDate>Tue, 20 Jun 2017 21:32:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41099#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41099#comment:4/1497994364279372</guid>
      <description>&lt;p&gt;
My mistake @cloughit. You are right, I was thinking in get_option() instead of update_option(). So sorry for that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41099 (update_option return value ambiguous) updated</title>
      
        <dc:creator>cloughit</dc:creator>

      <pubDate>Tue, 20 Jun 2017 21:20:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41099#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41099#comment:3/1497993622950164</guid>
      <description>&lt;p&gt;
@mdifelice @alexvorn2 My issue differs as I am concerned with the return values of 'update_option' rather than trying to save a boolean (in your case 'false').
&lt;/p&gt;
&lt;p&gt;
Consider a scenario where option 'foo' exists with value 'bar':
&lt;/p&gt;
&lt;p&gt;
update_option( 'foo', 'ram' ) - returns true (Line 386)
update_option( 'foo', 'bar' ) - returns false (Line 308 - option exists and is the same value)
update_option( 1, 'ram' ) - returns false (Line 344 - error inserting in database)
update_option( ' ', 'ram' ) - returns false (Line 263 - empty option name)
&lt;/p&gt;
&lt;p&gt;
If (as it is in my case) it is necessary to provide user feedback on the status of an option update (such as 'Settings Saved!), there is no way to differentiate if the returned 'false' value is due to option exists / same or an error occurred saving.
&lt;/p&gt;
&lt;p&gt;
By returning NULL at Line 308 it would be possible to then differentiate and handle responses correctly without the overhead of calling 'get_option'. For example:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$update = update_option( 'foo', 'bar' );
if ( false === $update ) {
    {... show 'Error Saving Settings' message ...}
} else if ( is_null( $update ) ) {
    {... show 'No Changes Made' message ...}
} else {
    {... show 'Settings Saved!' message ...}
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Currently the only way to achieve the desired result:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$update = ( get_option( 'foo' ) == 'bar' ) ? NULL : update_option( 'foo', 'bar' ); // returns either (bool)true, (bool)false or NULL
if ( false === $update ) {
    {... show 'Error Saving Settings' message ...}
} else if ( is_null( $update ) ) {
    {... show 'No Changes Made' message ...}
} else {
    {... show 'Settings Saved!' message ...}
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
I believe that this differentiation should occur within the 'update_option' function.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41106 (wp_editor() doesn't support attributes besides id and class) created</title>
      
        <dc:creator>Shelob9</dc:creator>

      <pubDate>Tue, 20 Jun 2017 20:31:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41106</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41106/1497990676318629</guid>
      <description>&lt;p&gt;
I'm replacing a generic textarea with a WYSIWIG field. My textarea has an &lt;code&gt;aria-describedby&lt;/code&gt; attribute, but wp_editor()  -- really &lt;code&gt;_WP_Editors::editor()&lt;/code&gt; -- can't set any HTML attributes besides ID and class on the WYSIWIG.
&lt;/p&gt;
&lt;p&gt;
Would be better if I could do something like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	wp_editor( 'hi-roy', 'Some text', array(
		'attrs' =&amp;gt; array(
			'aria-describedby' =&amp;gt; 'description'
		)
	));
	echo '&amp;lt;p id="description"&amp;gt;Some description&amp;lt;/p&amp;gt;';
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #40993 (WordPress is auto-generating a line break in my widgets) closed</title>
      
        <dc:creator>sandduner350</dc:creator>

      <pubDate>Tue, 20 Jun 2017 20:07:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40993#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40993#comment:4/1497989260531991</guid>
      <description>invalid: &lt;p&gt;
My code that I use is not shortcodes.  It is straight HTML for links to my social media sprites. and links to my social media accounts. When I saved it the widget put the line breaks in the code, so the links showed up in a list.
&lt;/p&gt;
&lt;p&gt;
When I save it and go back it doesn't show the code, it just shows the empty div I created for the formatting.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #40972 (TinyMCE editor in Text widget does not have RTL contents) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 20 Jun 2017 19:58:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40972#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40972#comment:8/1497988702861366</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41099 (update_option return value ambiguous) updated</title>
      
        <dc:creator>mdifelice</dc:creator>

      <pubDate>Tue, 20 Jun 2017 19:57:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41099#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41099#comment:2/1497988663646363</guid>
      <description>&lt;p&gt;
Hi @cloughit I had the same problem, and I think that update_option should return NULL also when no option is set, but that kind of change would have such a big impact that it would be necessary to update a lot of files.
&lt;/p&gt;
&lt;p&gt;
My problem happened using the cache functions. All options are cached by the object cache plugin (if you are using it), but if you save a false value in the option the cache plugin interprets that the options is not cached and it tries to fetch it from the database. So, any option with the false value is not being cached in practice.
&lt;/p&gt;
&lt;p&gt;
The solution I found is using string values: "yes" or "no". In fact, WordPress uses those values for its boolean options and I guess that the reason to do that is to identify if the options was created or not. It is not ideal, because you are using more space to store and transfer the options but I guess this is the only solution for now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40993 (WordPress is auto-generating a line break in my widgets) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 20 Jun 2017 19:56:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40993#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40993#comment:3/1497988608316829</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@bobbingwide shortcodes are not supported in Text widgets, so you must be adding support via a plugin? The filter priorities probably need to be modified so that shortcodes are processed earlier than &lt;code&gt;wpautop&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Rationale for shortcodes not being supported in core is explained in &lt;a class="ext-link" href="https://make.wordpress.org/core/2017/05/23/addition-of-tinymce-to-the-text-widget/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2017/05/23/addition-of-tinymce-to-the-text-widget/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41105 (Fire action hook after updating option group.) updated</title>
      
        <dc:creator>mdifelice</dc:creator>

      <pubDate>Tue, 20 Jun 2017 19:50:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41105#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41105#comment:1/1497988252913567</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>options.diff attached to Ticket #41105</title>
      
        <dc:creator>mdifelice</dc:creator>

      <pubDate>Tue, 20 Jun 2017 19:46:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41105/options.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41105/options.diff/1497988000189760</guid>
      <description>&lt;p&gt;
Possible place to add the proposed action hook.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41105 (Fire action hook after updating option group.) created</title>
      
        <dc:creator>mdifelice</dc:creator>

      <pubDate>Tue, 20 Jun 2017 19:45:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41105</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41105/1497987935576759</guid>
      <description>&lt;p&gt;
This suggestion affects the Settings API. There are hooks that fire after updating a single option, but not when a group of options is updated. Options updated via the Settings API are handled by /wp-admin/options.php, which after updating them does a redirection to the previous page, not firing any hook beside the shutdown action hook. In fact, the shutdown hook could be used for the same purpose but it would require some more extra checks.
&lt;/p&gt;
&lt;p&gt;
Basically the hook would allow to perform some action that is required after all options in that group are updated.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37189 (In wp_term_query on cache ids) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Tue, 20 Jun 2017 19:14:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37189#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37189#comment:7/1497986047775414</guid>
      <description>&lt;p&gt;
My feedback so.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;How the key is generated is how over query classes with cache (such as site query) generate the key. Because of the nature of the code in wp_term_query, the request (sql query) is in place. I don't see a problem with using it is a cache key. It just makes it an outlier.
&lt;/li&gt;&lt;li&gt;The patch remove the cache expiry time of DAY_IN_SECONDS on the term cache. I have never understood why this was put in, as if cache invalidation is correct, then it should never be needed. Caching for just one day might end up in surges on the databases when all caches invalidate at once on high traffic sites.
&lt;/li&gt;&lt;li&gt;Querying by id then a second query to populate the terms, is how over query classes work. It results in more queries, but each query is simpler, returning faster from the db.
&lt;/li&gt;&lt;li&gt;Completely forgot to mention the bug in WP_Term, my bad. Seems unrelated to the changes and was there before.
&lt;/li&gt;&lt;li&gt;I like breaking out the cache invalidation term into two. Current the clean_term_cache action is broken. The current action looks like this &lt;code&gt;&lt;/code&gt;&lt;code&gt;do_action( 'clean_term_cache', $ids, $taxonomy, $clean_taxonomy );&lt;/code&gt;&lt;code&gt;&lt;/code&gt; in the patch it looks like this &lt;code&gt;&lt;/code&gt;&lt;code&gt;do_action( 'clean_term_cache', $taxonomy ); &lt;/code&gt;&lt;code&gt;&lt;/code&gt;. The current action should be maintained and a new &lt;code&gt;clean_taxonomy_cache&lt;/code&gt; added.
&lt;/li&gt;&lt;li&gt;Any tests that query count should be removed. Whenever caching is added in core, lots of random tests start to fail.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41058 (wp_dropdown_categories documentation is missing arguments) updated</title>
      
        <dc:creator>theMikeD</dc:creator>

      <pubDate>Tue, 20 Jun 2017 18:56:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41058#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41058#comment:7/1497984975510144</guid>
      <description>&lt;p&gt;
Looks to me like the ones removed are the ones specified in &lt;code&gt;WP_Term_Query::_construct&lt;/code&gt; so removing them is the right DRY decision IMHO.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41052 (Need validation update in video widget) reopened</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 20 Jun 2017 18:44:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41052#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41052#comment:4/1497984283124552</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #41058 (wp_dropdown_categories documentation is missing arguments) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 20 Jun 2017 18:43:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41058#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41058#comment:6/1497984181748886</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41058#comment:5" title="Comment 5"&gt;ArnaudBan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Having just some of the arguments documented but not all was considered misleading and not that good of an idea.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right, but at least all of the entries in the &lt;code&gt;$defaults&lt;/code&gt; array should be documented, and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40903" title="Simplify documentation for `wp_dropdown_categories()`.
Props ..."&gt;[40903]&lt;/a&gt; removed some of those. I think they should be reinstated.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40736 (Ensure that `get_blog_count()` and `get_user_count()` return an integer) updated</title>
      
        <dc:creator>pmbaldha</dc:creator>

      <pubDate>Tue, 20 Jun 2017 18:35:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40736#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40736#comment:8/1497983721946087</guid>
      <description>&lt;p&gt;
wp_update_network_site_counts() function is used or called by internal wordpress code. Generally, Normal Wordpress developer doesn't know about wp_update_network_site_counts() function. He/she are are familiar wth get_blog_count() function. There is no worth to change get_site_count() to get_network_site_count().
This is my personal opinion.
&lt;/p&gt;
&lt;p&gt;
If community like get_network_site_count() (would also need a get_network_user_count()) function name, Please tell me. I will create new patch.
&lt;/p&gt;
&lt;p&gt;
May i know what is opinion of other contributors?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41049 (Visual editor adds extra space to top of the post) updated</title>
      
        <dc:creator>programmin</dc:creator>

      <pubDate>Tue, 20 Jun 2017 18:35:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41049#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41049#comment:1/1497983713588994</guid>
      <description>&lt;p&gt;
A similar, new bug in WP4.8 regarding how the text widget now breaks styles - probably also because visual mode loads first, as in this bug. &lt;a class="ext-link" href="https://www.zigpress.com/2017/06/14/the-wordpress-4-8-text-widget-will-destroy-your-content/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.zigpress.com/2017/06/14/the-wordpress-4-8-text-widget-will-destroy-your-content/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41022 (About: Change "Contributing Developers" to indicate there are more ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 20 Jun 2017 18:31:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41022#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41022#comment:1/1497983466863039</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41096 (Add missing @param and @return descriptions in /wp-includes/taxonomy.php) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 20 Jun 2017 18:27:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41096#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41096#comment:3/1497983273988700</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40917" title="Docs: Add missing `@param` and `@return` descriptions for ..."&gt;40917&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Add missing &lt;code&gt;@param&lt;/code&gt; and &lt;code&gt;@return&lt;/code&gt; descriptions for &lt;code&gt;has_term_meta()&lt;/code&gt;, &lt;code&gt;wp_delete_category()&lt;/code&gt;, and &lt;code&gt;wp_term_is_shared()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props keesiemeijer.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41096" title="#41096: defect (bug): Add missing @param and @return descriptions in /wp-includes/taxonomy.php (closed: fixed)"&gt;#41096&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40917]: Docs: Add missing `@param` and `@return` descriptions for ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 20 Jun 2017 18:27:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40917</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40917/1497983273476618</guid>
      <description>&lt;p&gt;
Docs: Add missing &lt;code&gt;@param&lt;/code&gt; and &lt;code&gt;@return&lt;/code&gt; descriptions for &lt;code&gt;has_term_meta()&lt;/code&gt;, &lt;code&gt;wp_delete_category()&lt;/code&gt;, and &lt;code&gt;wp_term_is_shared()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props keesiemeijer.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41096" title="#41096: defect (bug): Add missing @param and @return descriptions in /wp-includes/taxonomy.php (closed: fixed)"&gt;#41096&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #41096 (Add missing @param and @return descriptions in /wp-includes/taxonomy.php) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 20 Jun 2017 18:12:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41096#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41096#comment:2/1497982375485212</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10340 (Unchecked "Automatically add paragraphs." but still auto added paragraphs) updated</title>
      
        <dc:creator>programmin</dc:creator>

      <pubDate>Tue, 20 Jun 2017 18:12:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10340#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10340#comment:7/1497982356508768</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is much worse in 4.8, at least this didn't happen before, and this should probably be escalated to critical issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Screen Shot 2017-06-20 at 1.06.44 PM.png attached to Ticket #41104</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Tue, 20 Jun 2017 18:12:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41104/Screen%20Shot%202017-06-20%20at%201.06.44%20PM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41104/Screen%20Shot%202017-06-20%20at%201.06.44%20PM.png/1497982344112291</guid>
      <description>&lt;p&gt;
This is the dropdown I'm talking about (hard to describe using words)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41104 (Add "Site" to the "New" admin-bar dropdown) created</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Tue, 20 Jun 2017 18:11:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41104</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41104/1497982312451264</guid>
      <description>&lt;p&gt;
For multisite installations, it would be nice to have a shortcut to create a new site under the "New" admin-bar menu.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Every other single-site object is already listed (posts, pages, etc...)
&lt;/li&gt;&lt;li&gt;"User" is listed, and you can add a new User to a site or install, but from the site dashboard
&lt;/li&gt;&lt;li&gt;Visually, it should be a separate, secondary menu group (probably at the top?)
&lt;/li&gt;&lt;li&gt;That secondary group could be used for any "network/global" Add shortcut
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37189 (In wp_term_query on cache ids) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 20 Jun 2017 17:50:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37189#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37189#comment:6/1497981005403934</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for continuing to work on this, @spacedmonkey.
&lt;/p&gt;
&lt;p&gt;
Your patch generated a couple of PHPUnit failures for me (outside of the taxonomy component). As I started digging into why, it became clear to me that our efforts would be better spent doing the right thing and simply splitting the query.
&lt;/p&gt;
&lt;p&gt;
Specifically: The fact that you switched to &lt;code&gt;SELECT t.*, t.**&lt;/code&gt; for most queries got me concerned that we'd cause memory issues for people using the &lt;code&gt;fields&lt;/code&gt; parameter for bulk operations. Yet, because your patch worked within the existing parameters of term-query caching, there was no easy way to work around this problem - no way to actually utilize the single-term cache during &lt;code&gt;get_terms()&lt;/code&gt; queries. The possibility of additional overhead in the main &lt;code&gt;SELECT&lt;/code&gt; query only seems worth the trade-off if we also offer a more efficient caching layer for single terms. The way we handle this elsewhere is by doing a &lt;code&gt;SELECT {id}&lt;/code&gt; query and then filling the objects from the cache.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37189/37189.3.patch" title="Attachment '37189.3.patch' in Ticket #37189"&gt;37189.3.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37189/37189.3.patch" title="Download"&gt;​&lt;/a&gt; is a first pass at making this happen. It allows us to simplify the internals of &lt;code&gt;WP_Term_Query::query()&lt;/code&gt;, but requires some other fixes. Some notes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Your technique for building keys is a bit redundant. Once we've built the &lt;code&gt;request&lt;/code&gt;, we have a key that's guaranteed to be unique. So let's use it, and do away with the &lt;code&gt;default_args&lt;/code&gt; parsing.
&lt;/li&gt;&lt;li&gt;I've written the patch in such a way that &lt;code&gt;fields=ids&lt;/code&gt; queries generally do not require the second query to populate the term objects. The exception is in the case of hierarchical queries, where the tree must be descended after the initial query takes place. So this is a fairly big performance win for most &lt;code&gt;fields=ids&lt;/code&gt; queries.
&lt;/li&gt;&lt;li&gt;The patch uncovered a pretty deep bug (actually, two related bugs) in &lt;code&gt;_split_shared_term()&lt;/code&gt; that was agonizing to figure out. Briefly, the way that taxonomy hierarchy caches were being regenerated (&lt;code&gt;{$taxonomy}_children&lt;/code&gt;) was not consistent: certain child terms were not properly triggering taxonomy cache clears, and the calls to &lt;code&gt;clean_term_cache()&lt;/code&gt; in the context of a &lt;code&gt;foreach()&lt;/code&gt; loop was causing race conditions in cases where &lt;code&gt;get_terms()&lt;/code&gt; descends the hierarchy tree. The fixes in &lt;code&gt;_split_shared_term()&lt;/code&gt; should go in, no matter what happens with the rest of the patch.
&lt;/li&gt;&lt;li&gt;As part of these fixes, I broke the taxonomy-cache busting functionality into a new &lt;code&gt;clean_taxonomy_cache()&lt;/code&gt; function.
&lt;/li&gt;&lt;li&gt;On an installation without a persistent cache (or with an empty cache), term queries now generate two queries instead of one. This requires a reworking of certain unit tests that count &lt;code&gt;num_queries&lt;/code&gt;. I've refactored most of them so that they're not counting the queries specifically, but instead check for data invalidation (which is the important part anyway). A few tests - those that rely on examining a &lt;code&gt;last_query&lt;/code&gt; that no longer points to the right thing - had to be removed.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I'd welcome a careful review from @spacedmonkey, @flixos90 or anyone else with some experience in how term caching has historically differed from caching for posts, comments, etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37189.3.patch attached to Ticket #37189</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 20 Jun 2017 17:49:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37189/37189.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37189/37189.3.patch/1497980951301284</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40736 (Ensure that `get_blog_count()` and `get_user_count()` return an integer) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 20 Jun 2017 17:22:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40736#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40736#comment:7/1497979352710452</guid>
      <description>&lt;p&gt;
Highlighting &lt;a href="https://core.trac.wordpress.org/ticket/40736#comment:2"&gt;https://core.trac.wordpress.org/ticket/40736#comment:2&lt;/a&gt; again: Is it reasonable to change the name from &lt;code&gt;get_blog_count()&lt;/code&gt; to the more appropriate &lt;code&gt;get_site_count()&lt;/code&gt;? In my opinion it's fine since we're practically breaking back-compatibility anyway, so we might as well deprecate the function in favor of the new one (and of course also adjust its old calls in core).
&lt;/p&gt;
&lt;p&gt;
Alternatively, we may even aim for &lt;code&gt;get_network_site_count()&lt;/code&gt; (would also need a &lt;code&gt;get_network_user_count()&lt;/code&gt;) in order to have parity with the other functions that deal with these settings (such as &lt;code&gt;wp_update_network_site_counts()&lt;/code&gt;). This is only an idea though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34668 (Network admin can't be accessed via keyboard) updated</title>
      
        <dc:creator>Cheffheid</dc:creator>

      <pubDate>Tue, 20 Jun 2017 17:14:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34668#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34668#comment:18/1497978842347117</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Recommendation at the time of writing) still refers to menus similar to the ones on desktop application but then in the authoring practices demos (still not official) the role=menu is used for site navigation:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Honestly, this is what makes sense to me. Simply because of the use of the word "presented", meaning that it'd apply when it &lt;em&gt;looks&lt;/em&gt; like it not just &lt;em&gt;acts&lt;/em&gt; like it. But I'm also aware that my interpretation is different from what seems to be the consensus on it. :)
&lt;/p&gt;
&lt;p&gt;
Guess we'll need to wait and see what happens when 1.1's status finally changes, unless someone has a brilliant idea to fix this. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41099 (update_option return value ambiguous) updated</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Tue, 20 Jun 2017 16:52:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41099#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41099#comment:1/1497977569487422</guid>
      <description>&lt;p&gt;
Is your ticket the same issue as my ticket? &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/40007" title="#40007: defect (bug): update_option function does not work if the $value argument is false ... (reopened)"&gt;#40007&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It seems the bug is in update_option function.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41103 (Widgets on customize.php page should refresh after data was sent) updated</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Tue, 20 Jun 2017 16:46:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41103#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41103#comment:2/1497977203189286</guid>
      <description>&lt;p&gt;
So my ticked is to make widgets refresh every time on customize.php page like they do on widgets.php page.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41103 (Widgets on customize.php page should refresh after data was sent) updated</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Tue, 20 Jun 2017 16:42:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41103#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41103#comment:1/1497976976179135</guid>
      <description>&lt;p&gt;
I noticed that widgets DO refresh but not every time, only when the number of inputs are greater then the original state, so it does not work It should be.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41102 (Deprecate current_user_can_for_blog() and replace it with ...) closed</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 20 Jun 2017 16:42:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41102#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41102#comment:1/1497976930515161</guid>
      <description>maybelater: &lt;p&gt;
Thanks for opening a ticket @pmbaldha!
&lt;/p&gt;
&lt;p&gt;
However, we currently have a policy in core to only deprecate functions and improve their naming if there are more severe reasons for deprecating, for example improving performance or other technical internals of the function. Even though better names would generally help, a simple rename of a function carries a higher burden on backward compatibility than its benefits would justify.
&lt;/p&gt;
&lt;p&gt;
We can revisit this once there is a more technical reason for the function to be deprecated, or in the case that we actually focus on renaming functions to follow the new conventions.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #41103 (Widgets on customize.php page should refresh after data was sent) created</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Tue, 20 Jun 2017 16:33:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41103</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41103/1497976380495948</guid>
      <description>&lt;p&gt;
On widgets.php page, widgets are refreshed after you press Save button, but in customize.php page widgets - do not refresh.
&lt;/p&gt;
&lt;p&gt;
Is this by design ?, because I think widgets should work the same way the do on widgets.php page.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41102 (Deprecate current_user_can_for_blog() and replace it with ...) created</title>
      
        <dc:creator>pmbaldha</dc:creator>

      <pubDate>Tue, 20 Jun 2017 16:30:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41102</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41102/1497976259798851</guid>
      <description>&lt;p&gt;
Since we're striving towards an API with site/network terminology in favor of blog/site long-term, we should consider deprecating current_user_can_for_blog() in favor of a current_user_can_for_site()
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>41101.diff attached to Ticket #41101</title>
      
        <dc:creator>jmdodd</dc:creator>

      <pubDate>Tue, 20 Jun 2017 15:50:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41101/41101.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41101/41101.diff/1497973833252574</guid>
      <description>&lt;p&gt;
Proposed filter and unit tests
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41101 (Add filter to prevent the addition of a user to a blog) created</title>
      
        <dc:creator>jmdodd</dc:creator>

      <pubDate>Tue, 20 Jun 2017 15:45:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41101</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41101/1497973531611647</guid>
      <description>&lt;p&gt;
In some multisite instances, we may want to establish a policy that only certain users may be added to a given blog.
&lt;/p&gt;
&lt;p&gt;
The current option available for preventing the addition of a user to a given blog is hooking into the &lt;code&gt;add_user_to_blog&lt;/code&gt; action and undoing the user addition after it has already taken place. This is problematic because the user has already been added to the blog and any related actions may have already fired, depending on their priority.
&lt;/p&gt;
&lt;p&gt;
This introduces a filter to allow a plugin to override the addition of a user to a given blog. There is already precedent in &lt;code&gt;add_user_to_blog()&lt;/code&gt; for returning a WP_Error if the user does not exist.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41057 (Update PHP codebase per WordPress PHP Coding Standards) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 20 Jun 2017 15:05:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41057#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41057#comment:35/1497971130545435</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-coding-standards by garyj. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-coding-standards/p1497971119381990"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41047 (Allow to customize insert/edit link dialog box) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 20 Jun 2017 14:29:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41047#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41047#comment:1/1497968978257980</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-coding-standards by pento. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-coding-standards/p1497968976478913"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40834 (Introduce a JS module pattern to WordPress) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 20 Jun 2017 13:52:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40834#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40834#comment:5/1497966748342379</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-js by pento. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-js/p1497966739405874"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41068 (editor-expand.js documentation) updated</title>
      
        <dc:creator>jipmoors</dc:creator>

      <pubDate>Tue, 20 Jun 2017 13:14:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41068#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41068#comment:2/1497964480032981</guid>
      <description>&lt;p&gt;
Please make sure to give props to the mentioned profiles!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41063 (color-picker.js documentation) updated</title>
      
        <dc:creator>jipmoors</dc:creator>

      <pubDate>Tue, 20 Jun 2017 13:14:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41063#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41063#comment:4/1497964464017558</guid>
      <description>&lt;p&gt;
Please make sure to give props to the mentioned profiles!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41057 (Update PHP codebase per WordPress PHP Coding Standards) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Tue, 20 Jun 2017 12:18:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41057#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41057#comment:34/1497961134665307</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41057#comment:33" title="Comment 33"&gt;jrf&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It's currently running PHPCS against the latest dev-master WPCS sniffs without error.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@netweb Without error ? From what I've seen so far, hardly any individual file patches are 100% bug-free, so please be very careful for now when pulling patches.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
My bad, I meant I've got Scrutinizer working without error, patches are not being generated yet.
&lt;/p&gt;
&lt;p&gt;
My plan is just to make available the patches available in the easiest way possible to get eyes on and examine.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41100 (Cannot delete categories, plugins, themes when using Firefox 54 on ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 20 Jun 2017 12:11:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41100#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41100#comment:2/1497960707423175</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41100 (Cannot delete categories, plugins, themes when using Firefox 54 on ...) updated</title>
      
        <dc:creator>Soean</dc:creator>

      <pubDate>Tue, 20 Jun 2017 11:59:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41100#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41100#comment:1/1497959967622110</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hello Adrienne,
welcome to the WordPress trac!
I tested the problem on Firefox 54 on Mac and can't reproduce it.
Have you tested the bug without any activated plugins and a default theme?
&lt;/p&gt;
&lt;p&gt;
Are there any errors in your js console?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40993 (WordPress is auto-generating a line break in my widgets) reopened</title>
      
        <dc:creator>bobbingwide</dc:creator>

      <pubDate>Tue, 20 Jun 2017 11:49:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40993#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40993#comment:2/1497959343960191</guid>
      <description>&lt;p&gt;
In my opinion this is a separate issue from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40951" title="#40951: defect (bug): New Text Widget - Switching Between Visual/Text Editor Strips Out Code (closed: fixed)"&gt;#40951&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
It is associated with running wpautop() against the content to generate breaks.
&lt;/p&gt;
&lt;p&gt;
In my scenario the text widget contains a simple shortcode:
&lt;/p&gt;
&lt;pre class="wiki"&gt;[add_to_cart id=101]
&lt;/pre&gt;&lt;p&gt;
Once the shortcode has been expanded the HTML gets mangled by wpautop and the resulting output is incorrectly styled.
&lt;/p&gt;
&lt;p&gt;
Using the add-paragraphs-option-to-text-widget plugin, which re-introduces the capability of setting the  &lt;code&gt;filter&lt;/code&gt; field to false, gives the desired results.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #41100 (Cannot delete categories, plugins, themes when using Firefox 54 on ...) created</title>
      
        <dc:creator>freudianslit</dc:creator>

      <pubDate>Tue, 20 Jun 2017 11:29:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41100</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41100/1497958194371038</guid>
      <description>&lt;p&gt;
Hi,
Using Firefox 54.0+build3-0ubuntu0.17.04.1 I am unable to delete categories, plugins, or themes using wp-admin. I click delete and nothing happens.
&lt;/p&gt;
&lt;p&gt;
This bug does not occur on Chromium.
&lt;/p&gt;
&lt;p&gt;
Thanks!
&lt;/p&gt;
&lt;p&gt;
Adrienne
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41057 (Update PHP codebase per WordPress PHP Coding Standards) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Tue, 20 Jun 2017 10:29:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41057#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41057#comment:33/1497954561683772</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Would you mind posting your updates as new comments, rather than editing comments? Comment edits aren't emailed to ticket subscribers, so I only noticed your updates by chance.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@pento I didn't want to spam the participants of this thread with the details of individual PHPCS/WPCS issues found/fixed. If someone is interested to follow that in detail, I suggest "watching" the &lt;a class="ext-link" href="https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WPCS repo&lt;/a&gt; instead to get notifications about the individual issues/fixes.
&lt;/p&gt;
&lt;p&gt;
Latest issues identified based on visual review of some of the patches:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/issues/982"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/issues/982&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/issues/983"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/issues/983&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/issues/985"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/issues/985&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/issues/986"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/issues/986&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/issues/988"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/issues/988&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Latest PRs fixing some of these things:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/pull/981"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/pull/981&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/pull/987"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/pull/987&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/pull/989"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/pull/989&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is there are definitive method for running PHPCS/WPCS with the various PRs? Being fairly unfamiliar with both projects, it's a bit tricky to figure out whether bugs are being caused by know or unknown issues.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
PRs to WPCS are generally merged quite quickly, so using the latest &lt;code&gt;develop&lt;/code&gt; branch should work. Unless I've accidentally done something silly, I expect the above three mentioned PRs to be merged within the next 24 hours.
&lt;/p&gt;
&lt;p&gt;
There are no open PRs in PHPCS at this moment related to this ticket, so using the PHPCS &lt;code&gt;2.9&lt;/code&gt; branch should be ok.
&lt;/p&gt;
&lt;p&gt;
When figuring out where issues are coming from, the following PHPCS tricks can be useful:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Use the &lt;code&gt;-s&lt;/code&gt; flag when running &lt;code&gt;phpcs&lt;/code&gt; to see which sniff is reporting issues on which line.
&lt;/li&gt;&lt;li&gt;Running &lt;code&gt;phpcs -p -s ./filename.php --standard=WordPress-Core --report-diff -vv&lt;/code&gt; will give you a full report on all the fixes which PHPCS tries to apply in the various loops without the file actually being changed. (report is very long, but the relevant bit is at the bottom anyway)
&lt;/li&gt;&lt;/ul&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, while I remember, another thing noticed - multibyte characters seem to cause invalid PHP to be produced. If you remove /tests/ from the excluded locations, tests/phpunit/tests/pomo/po.php and tests/phpunit/tests/pomo/mo.php will have curly braces immediately following a multibyte string missing, after reformatting.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The default encoding PHPCS 2.x uses for interpreting files is &lt;code&gt;ISO-8859-1&lt;/code&gt;. This can be changed by setting &lt;code&gt;--encoding=utf-8&lt;/code&gt; on the command line or using &lt;code&gt;&amp;lt;config name="encoding" value="utf-8"/&amp;gt;&lt;/code&gt; in a custom ruleset.
AFAIK, this can not be changed for an individual file, so will affect how all files are read.
&lt;/p&gt;
&lt;p&gt;
If so desired, we can add this directive to the &lt;code&gt;WordPress-Core&lt;/code&gt; ruleset in WPCS.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It's currently running PHPCS against the latest dev-master WPCS sniffs without error.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@netweb Without error ? From what I've seen so far, hardly any individual file patches are 100% bug-free, so please be very careful for now when pulling patches.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40889 (REST API: New terms creation with meta causes PHP Notice) updated</title>
      
        <dc:creator>caercam</dc:creator>

      <pubDate>Tue, 20 Jun 2017 09:18:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40889#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40889#comment:4/1497950306141014</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40891 (map_meta_cap() causing PHP notice on term meta permissions) updated</title>
      
        <dc:creator>caercam</dc:creator>

      <pubDate>Tue, 20 Jun 2017 09:15:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40891#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40891#comment:1/1497950148720394</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>40891.diff attached to Ticket #40891</title>
      
        <dc:creator>caercam</dc:creator>

      <pubDate>Tue, 20 Jun 2017 09:15:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40891/40891.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40891/40891.diff/1497950135877126</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41098 (Some cron scheduling events are ignored) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 20 Jun 2017 08:10:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41098#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41098#comment:3/1497946235929286</guid>
      <description>&lt;p&gt;
I think &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/13158" title="#13158: defect (bug): Cron : some events may not be scheduled (new)"&gt;#13158&lt;/a&gt; is the one I was referring to. See also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15148" title="#15148: enhancement: Cron Storage Abstraction (closed: wontfix)"&gt;#15148&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18997 (Adding wp_unschedule_hook function) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 20 Jun 2017 08:07:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18997#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18997#comment:32/1497946036644623</guid>
      <description>&lt;p&gt;
+1 from me as a component maintainer.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35243 (Extending the text widget to also allow visual mode) updated</title>
      
        <dc:creator>BackuPs</dc:creator>

      <pubDate>Tue, 20 Jun 2017 07:58:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35243#comment:70</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35243#comment:70/1497945521274656</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35243#comment:69" title="Comment 69"&gt;theMikeD&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The decision to update the text widget rather than create a new rich text widget was a very poorly thought through one. In one step you have destroyed the custom code in countless widgets using the existing text widget, and rendered invalid every tutorial on adding custom code into a widget.
&lt;/p&gt;
&lt;p&gt;
Other related bugs are filling up with issues around code being removed by this new feature.
&lt;/p&gt;
&lt;p&gt;
This need to be reverted in 4.8.1 and re-introduced as a Rich Text widget. IMHO this is an urgent issue that needs to be resolved asap.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I could not agree more... but this will be like talking to a deaf person if you ask me as i dont expect the wp core team to acknowledge or change this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12955 (Add get_post filter) updated</title>
      
        <dc:creator>wido</dc:creator>

      <pubDate>Tue, 20 Jun 2017 07:48:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12955#comment:59</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12955#comment:59/1497944915229600</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12955#comment:55" title="Comment 55"&gt;Mte90&lt;/a&gt;:
Any chance for the 4.8?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41058 (wp_dropdown_categories documentation is missing arguments) updated</title>
      
        <dc:creator>ArnaudBan</dc:creator>

      <pubDate>Tue, 20 Jun 2017 07:41:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41058#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41058#comment:5/1497944465511499</guid>
      <description>&lt;p&gt;
There was a discussion about adding all the missing argument or add a reference to the documentation where to find them all. The second option was the one we choose.
Having juste some of the arguments documented but not all was considered misleading and not that good of an idea.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40976 (No Scroll Menu) closed</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Tue, 20 Jun 2017 07:22:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40976#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40976#comment:6/1497943339833684</guid>
      <description>invalid: &lt;p&gt;
Closing this ticket as it's a theme related issue, unrelated to core.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #41057 (Update PHP codebase per WordPress PHP Coding Standards) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Tue, 20 Jun 2017 06:13:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41057#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41057#comment:32/1497939234523504</guid>
      <description>&lt;p&gt;
I've setup a Scrutinizer-ci.com job, based on a PR of my mirror:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://scrutinizer-ci.com/g/ntwb/wordpress/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://scrutinizer-ci.com/g/ntwb/wordpress/&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/ntwb/wordpress/pull/2"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/ntwb/wordpress/pull/2&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Scrutinizer should be able to run &lt;code&gt;phpcbf&lt;/code&gt; to then create pull requests to the source repo with the changes, hopefully this can work as a saner way to view, and share the latest changes between everyone playing along with this ticket :)
&lt;/p&gt;
&lt;p&gt;
It's currently running PHPCS against the latest &lt;code&gt;dev-master&lt;/code&gt; WPCS sniffs without error.
&lt;/p&gt;
&lt;p&gt;
Next up, is to try and have it create the &lt;code&gt;phpcbf&lt;/code&gt; pull requests, but alas, out of time available today.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40342 (Update name in toolbar when changing user display name) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 20 Jun 2017 04:48:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40342#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40342#comment:14/1497934129059094</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by menakas. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1497934126696126"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40304 (PressThis: Incorrect icon for "Chat") updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 20 Jun 2017 04:48:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40304#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40304#comment:5/1497934128576026</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by menakas. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1497934126696126"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41057 (Update PHP codebase per WordPress PHP Coding Standards) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Tue, 20 Jun 2017 04:33:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41057#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41057#comment:31/1497933193882958</guid>
      <description>&lt;p&gt;
Thanks for your work on this so far, @jrf!
&lt;/p&gt;
&lt;p&gt;
Would you mind posting your updates as new comments, rather than editing comments? Comment edits aren't emailed to ticket subscribers, so I only noticed your updates by chance.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
And just in case someone is now thinking "Cricky, PHPCS is really buggy, shouldn't we use something else ?"... The majority of the fixes - I'd wager &amp;gt; 95% - is correct. Using PHPCS on WP core is, however, in a way a stress-test of PHPCS, we're really getting into all the nooks and crannies, so I'm not surprised we're finding bugs.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed, WordPress has a huge variety of code, so I'm not surprised that we're running into edge cases, either.
&lt;/p&gt;
&lt;p&gt;
Is there are definitive method for running PHPCS/WPCS with the various PRs? Being fairly unfamiliar with both projects, it's a bit tricky to figure out whether bugs are being caused by know or unknown issues.
&lt;/p&gt;
&lt;p&gt;
Also, while I remember, another thing noticed - multibyte characters seem to cause invalid PHP to be produced. If you remove &lt;code&gt;/tests/&lt;/code&gt; from the excluded locations, &lt;code&gt;tests/phpunit/tests/pomo/po.php&lt;/code&gt; and &lt;code&gt;tests/phpunit/tests/pomo/mo.php&lt;/code&gt; will have curly braces immediately following a multibyte string missing, after reformatting.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41057 (Update PHP codebase per WordPress PHP Coding Standards) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Tue, 20 Jun 2017 01:32:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41057#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41057#comment:30/1497922344832774</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41057#comment:29" title="Comment 29"&gt;markjaquith&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Since the update zips include files with any changes, we can just run this specifically on the files that will be modified by a security backport. That way the backport is much more likely to apply cleanly.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is a really good idea!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35243 (Extending the text widget to also allow visual mode) updated</title>
      
        <dc:creator>theMikeD</dc:creator>

      <pubDate>Tue, 20 Jun 2017 01:19:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35243#comment:69</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35243#comment:69/1497921576559035</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The decision to update the text widget rather than create a new rich text widget was a very poorly thought through one. In one step you have destroyed the custom code in countless widgets using the existing text widget, and rendered invalid every tutorial on adding custom code into a widget.
&lt;/p&gt;
&lt;p&gt;
Other related bugs are filling up with issues around code being removed by this new feature.
&lt;/p&gt;
&lt;p&gt;
This need to be reverted in 4.8.1 and re-introduced as a Rich Text widget. IMHO this is an urgent issue that needs to be resolved asap.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40960 (Widgets: The Text widget should respect the “Disable the visual editor ...) updated</title>
      
        <dc:creator>theMikeD</dc:creator>

      <pubDate>Tue, 20 Jun 2017 01:15:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40960#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40960#comment:14/1497921341263647</guid>
      <description>&lt;p&gt;
deleted. I re-read the initial description. Sorry for the noise.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41083 (IP with port number triggers warnings in WP_Community_Events) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Tue, 20 Jun 2017 00:26:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41083#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41083#comment:6/1497918363815676</guid>
      <description>&lt;p&gt;
For reproducing the IPv6 issue, the site is hosted on a SiteGround shared "Start Up" hosting plan. In this case, it looks like it's running Linux, Apache, and PHP 5.6.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>