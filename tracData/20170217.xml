<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Fri, 17 Feb 2017 22:22:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:99</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:99/1487370165269650</guid>
      <description>&lt;p&gt;
@gonom9 how easy is it to get this bundled to run some user tests? Ideally if it could be in a plugin format (no clue if asking impossible here). @melchoyce also looping you in for when you feel it's ready for that, totally only want to test when it's worth doing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39896 (Customizer: Allow users to Draft changes before Publishing) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Fri, 17 Feb 2017 22:20:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39896#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39896#comment:2/1487370037736609</guid>
      <description>&lt;p&gt;
First up, really like that this is happening. It's something that will have a lot of user impact and benefit.
&lt;/p&gt;
&lt;p&gt;
I think it could be good to prototype both ways and explore them as they are different enough for that.
&lt;/p&gt;
&lt;p&gt;
I do wonder about the non-popover approach though. I'm possibly feeling it's a little not as natural as the popover - it feels less of an existing pattern in WordPress. In saying that, it's not a bad idea to explore new things.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39908 (Make the page and category widget exclusions use a drop down not ID) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 17 Feb 2017 22:20:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39908#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39908#comment:2/1487370020552668</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
This could be made more user friendly by using a drop down.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
...especially since IDs aren't usually exposed anywhere.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39875 (PDF previews overwrite existing images with the same name.) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 17 Feb 2017 22:18:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39875#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39875#comment:6/1487369925426525</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Most recent patch uses the approach [hammered out in this week's Media meeting (&lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487364216001228"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/core-media/p1487364216001228&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
Borrowed some code from &lt;code&gt;wp_save_image()&lt;/code&gt;. For the minor release, there will be some code duplication. I am going to whip up a different patch moving the repeated code into a function for the next major release.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39875.diff attached to Ticket #39875</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 17 Feb 2017 22:14:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39875/39875.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39875/39875.diff/1487369697120853</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39672 (REST API: Backbone URLs don't work correctly without pretty permalinks) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 17 Feb 2017 22:02:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39672#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39672#comment:2/1487368942276061</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@rmccue can you verify this is an issue, in my testing the client works correctly without pretty permalinks. Any steps to reproduce?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29660 (Functions in wp_includes/query.php assume non-null return value from ...) updated</title>
      
        <dc:creator>sterlo</dc:creator>

      <pubDate>Fri, 17 Feb 2017 22:01:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29660#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29660#comment:24/1487368886422034</guid>
      <description>&lt;p&gt;
Confirming this is a thing.
&lt;/p&gt;
&lt;pre class="wiki"&gt;Notice:  Trying to get property of non-object in /var/www/html/wp-includes/class-wp-query.php on line 3516
Notice:  Trying to get property of non-object in /var/www/html/wp-includes/class-wp-query.php on line 3518
Notice:  Trying to get property of non-object in /var/www/html/wp-includes/class-wp-query.php on line 3520
&lt;/pre&gt;&lt;p&gt;
How I'm getting it to generate:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
  &lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'pre_get_posts'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;\WP_Query&lt;/span&gt; &lt;span class="nv"&gt;$query&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$query&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;is_tax&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$query&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;is_category&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nv"&gt;$query&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;is_category&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'blog'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$query&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'orderby'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s1"&gt;'title'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'ASC'&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$query&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
That's rather simple, shouldn't be running into trouble with something like this.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Is it a taxonomy? Yes.
&lt;/li&gt;&lt;li&gt;Is it a category? Yes.
&lt;/li&gt;&lt;li&gt;Is it THIS (blog) Category? *project explodes*.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Would be nice to fix this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39612 ((Resolve) Error due to Backbone.History being started again) closed</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 17 Feb 2017 21:59:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39612#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39612#comment:11/1487368778036860</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40076" title="JavaScript: when starting Backbone history, stop if previously ..."&gt;40076&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
JavaScript: when starting Backbone history, stop if previously started.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Prevent a potential error condition if Backbone history is started by a plugin or theme before core tries to start it. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props tfrommen.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39612" title="#39612: enhancement: (Resolve) Error due to Backbone.History being started again (closed: fixed)"&gt;#39612&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40076]: JavaScript: when starting Backbone history, stop if previously ...</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 17 Feb 2017 21:59:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40076</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40076/1487368777555055</guid>
      <description>&lt;p&gt;
JavaScript: when starting Backbone history, stop if previously started.
&lt;/p&gt;
&lt;p&gt;
Prevent a potential error condition if Backbone history is started by a plugin or theme before core tries to start it.
&lt;/p&gt;
&lt;p&gt;
Props tfrommen.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39612" title="#39612: enhancement: (Resolve) Error due to Backbone.History being started again (closed: fixed)"&gt;#39612&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 17 Feb 2017 21:56:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:104</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:104/1487368572462513</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39550#comment:101" title="Comment 101"&gt;blobfolio&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If an upload doesn't match the &lt;code&gt;$mime_to_ext&lt;/code&gt; list, it is outside the purview of that particular challenge and should be passed down the chain to &lt;code&gt;finfo&lt;/code&gt; and eventually &lt;code&gt;upload_mimes&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I tend to agree that we should revalidate anything that misses the &lt;code&gt;wp_get_image_mimes()&lt;/code&gt; check, rather than blocking them at that point. I've thought about combining all validation for all mimes into a single place, rather than different paths for images vs other files, but my early testing showed that doing so would increase memory/time for image uploads. Still, might be worth attempting, but in the mean time using the &lt;code&gt;finfo_file()&lt;/code&gt; check as a fallback for any file that isn't validated at that point is probably the best option.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39559 (REST API JavaScript client: ensure base initialize method called when ...) closed</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 17 Feb 2017 21:40:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39559#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39559#comment:4/1487367617431667</guid>
      <description>fixed: &lt;p&gt;
The one line fix in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39559/39559.diff" title="Attachment '39559.diff' in Ticket #39559"&gt;39559.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39559/39559.diff" title="Download"&gt;​&lt;/a&gt; was also included in the fix for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39561" title="#39561: defect (bug): REST API JavaScript client: Correct name route discovery for custom ... (closed: fixed)"&gt;#39561&lt;/a&gt;, which was merged in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40074" title="REST API: JavaScript client - improve route discovery for custom ..."&gt;[40074]&lt;/a&gt;, resolving this issue. Closing.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39875 (PDF previews overwrite existing images with the same name.) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Fri, 17 Feb 2017 21:36:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39875#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39875#comment:5/1487367380835308</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39382 (Skipping term cache cleaning when cache invalidation is suspended) updated</title>
      
        <dc:creator>zachop</dc:creator>

      <pubDate>Fri, 17 Feb 2017 21:33:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39382#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39382#comment:3/1487367201367090</guid>
      <description>&lt;p&gt;
Hi @boonebgorges,
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
When you refer to a "term cache" that is "persistent", I assume you mean the term hierarchy that WP stores in wp_options. Is that correct?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, that is correct.
&lt;/p&gt;
&lt;p&gt;
By "persistent" I refer to any data stored across requests (e.g. in the database, or a dedicated backend such as Memcache), in a way which is transparent to the developer (as opposed to options or transients, for example, where the storage is explicitly requested for).
&lt;/p&gt;
&lt;p&gt;
I agree with you that a way to clear all cached data would be an elegant solution, while at the same time keeping the caching internals invisible to the developer. A wrapper for that purpose sounds good to me.
&lt;/p&gt;
&lt;p&gt;
I also believe that it is equally important for the documentation of &lt;code&gt;wp_cache_flush()&lt;/code&gt; to be updated as soon as possible, in order to state clearly that not all data is actually flushed. The way the various caches now work, it is possible (e.g. during imports with cache addition/invalidation suspended) to be left with stale data in the database, without means of clearing it - since &lt;code&gt;wp_cache_flush()&lt;/code&gt; won't do so. This, as you pointed out, cancels the invisibility of the caching operations to the developer.
&lt;/p&gt;
&lt;p&gt;
Please let me know if there's any way that I could contribute to this issue. I would be more than happy to do so, although I would need some guidance on how to start :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39774 (php 7.1 media uploader bug) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 17 Feb 2017 21:23:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39774#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39774#comment:10/1487366632682900</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40075" title="Media: In `wp_unique_filename()`, use explicit type casting when ..."&gt;40075&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: In &lt;code&gt;wp_unique_filename()&lt;/code&gt;, use explicit type casting when incrementing &lt;code&gt;$number&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This prevents the "non-numeric value encountered" warning in PHP 7.1, caused by trying to increment an empty string on the first loop iteration.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props drrobotnik for initial patch.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40039" title="Media: In `wp_unique_filename()`, use explicit type casting when ..."&gt;[40039]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39774" title="#39774: defect (bug): php 7.1 media uploader bug (closed: fixed)"&gt;#39774&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40075]: Media: In `wp_unique_filename()`, use explicit type casting when ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 17 Feb 2017 21:23:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40075</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40075/1487366632193396</guid>
      <description>&lt;p&gt;
Media: In &lt;code&gt;wp_unique_filename()&lt;/code&gt;, use explicit type casting when incrementing &lt;code&gt;$number&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This prevents the "non-numeric value encountered" warning in PHP 7.1, caused by trying to increment an empty string on the first loop iteration.
&lt;/p&gt;
&lt;p&gt;
Props drrobotnik for initial patch.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40039" title="Media: In `wp_unique_filename()`, use explicit type casting when ..."&gt;[40039]&lt;/a&gt; to the 4.7 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39774" title="#39774: defect (bug): php 7.1 media uploader bug (closed: fixed)"&gt;#39774&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>39875.patch attached to Ticket #39875</title>
      
        <dc:creator>gitlost</dc:creator>

      <pubDate>Fri, 17 Feb 2017 21:14:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39875/39875.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39875/39875.patch/1487366064908981</guid>
      <description>&lt;p&gt;
Special case pdf preview to avoid overwriting exising JPEGs.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39561 (REST API JavaScript client: Correct name route discovery for custom ...) reopened</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:55:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39561#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39561#comment:9/1487364959359570</guid>
      <description>&lt;p&gt;
Reopening for 4.7.3 consideration.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39561 (REST API JavaScript client: Correct name route discovery for custom ...) closed</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:53:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39561#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39561#comment:8/1487364837539645</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40074" title="REST API: JavaScript client - improve route discovery for custom ..."&gt;40074&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: JavaScript client - improve route discovery for custom namespaces.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fix parsing of custom namespace routes. Transform class names, removing dashes and capitalizing each word/route part so a route path of &lt;code&gt;widgets/recent-posts&lt;/code&gt; becomes a collection with the name &lt;code&gt;WidgetsRecentPosts&lt;/code&gt;. Correct parent route part when routes are longer than expected, reversing parse direction.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props westonruter, jazbek.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39561" title="#39561: defect (bug): REST API JavaScript client: Correct name route discovery for custom ... (closed: fixed)"&gt;#39561&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40074]: REST API: JavaScript client - improve route discovery for custom ...</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:53:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40074</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40074/1487364837047724</guid>
      <description>&lt;p&gt;
REST API: JavaScript client - improve route discovery for custom namespaces.
&lt;/p&gt;
&lt;p&gt;
Fix parsing of custom namespace routes. Transform class names, removing dashes and capitalizing each word/route part so a route path of &lt;code&gt;widgets/recent-posts&lt;/code&gt; becomes a collection with the name &lt;code&gt;WidgetsRecentPosts&lt;/code&gt;. Correct parent route part when routes are longer than expected, reversing parse direction.
&lt;/p&gt;
&lt;p&gt;
Props westonruter, jazbek.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39561" title="#39561: defect (bug): REST API JavaScript client: Correct name route discovery for custom ... (closed: fixed)"&gt;#39561&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39618 (Insert PDF Thumbnail into Editor) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:52:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39618#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39618#comment:7/1487364728002420</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487364725001251"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36130 (Custom Taxonomy Edit Redirected to Homepage) updated</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:47:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36130#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36130#comment:1/1487364470533818</guid>
      <description>&lt;p&gt;
Hi @espreson,
&lt;/p&gt;
&lt;p&gt;
If this issue is still occurring, could you provide code samples or other instructions for replicating it?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39875 (PDF previews overwrite existing images with the same name.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:43:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39875#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39875#comment:4/1487364217605903</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487364215001227"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Customizer Wide.png attached to Ticket #32296</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:42:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32296/Customizer%20Wide.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32296/Customizer%20Wide.png/1487364171065311</guid>
      <description>&lt;p&gt;
Customizer Wide 1920 x 1080
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39561 (REST API JavaScript client: Correct name route discovery for custom ...) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:34:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39561#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39561#comment:7/1487363682057208</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39561 (REST API JavaScript client: Correct name route discovery for custom ...) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:34:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39561#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39561#comment:6/1487363660368883</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39561/39561.2.diff" title="Attachment '39561.2.diff' in Ticket #39561"&gt;39561.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39561/39561.2.diff" title="Download"&gt;​&lt;/a&gt; is a slight cleanup of the code and doc blocks. This code got some testing by the original reporter and others via the plugin, this is ready to commit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39561.2.diff attached to Ticket #39561</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:32:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39561/39561.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39561/39561.2.diff/1487363526668322</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39552 (SVG upload support broken in 4.7.1) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:26:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39552#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39552#comment:31/1487363216385496</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487363214001202"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:26:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:103</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:103/1487363199955287</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487363197001200"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39516 (Media grid upload errors display below the grid.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:24:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39516#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39516#comment:20/1487363059860232</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487363057001196"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37140 (Rotating images doesn't adjust orientation for imagick) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:21:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37140#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37140#comment:31/1487362879118759</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487362876001186"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39774 (php 7.1 media uploader bug) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:19:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39774#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39774#comment:9/1487362780088953</guid>
      <description>&lt;p&gt;
I like the idea of fixing this in 4.7.3.  Patch/commit looks good.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39903 (is_user_logged_in() true on ajax after cookie has been deleted) updated</title>
      
        <dc:creator>esemlabel</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:16:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39903#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39903#comment:3/1487362594336825</guid>
      <description>&lt;p&gt;
Temporary fix for all POST type ajax actions:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;wp_doing_ajax&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'action'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'wp_ajax_'&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'action'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;'check_session_token_ajax'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'wp_ajax_nopriv_'&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'action'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;'check_session_token_ajax'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;check_session_token_ajax&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;is_user_logged_in&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nx"&gt;wp_get_session_token&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;wp_set_current_user&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;wp_clear_auth_cookie&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39774 (php 7.1 media uploader bug) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:15:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39774#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39774#comment:8/1487362526786171</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487362523001174"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39883 (Code hooking on `image_downsize` can no longer assume the file is an image) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:15:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39883#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39883#comment:4/1487362511430537</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Adding to 4.7.x milestone to bring to the forefront for discussion.
&lt;/p&gt;
&lt;p&gt;
If it looks like this is either not a thing that will change, or the change is too big for a minor, we can always re-milestone.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39883 (Code hooking on `image_downsize` can no longer assume the file is an image) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:13:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39883#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39883#comment:3/1487362386476935</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487362384001166"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37140 (Rotating images doesn't adjust orientation for imagick) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Fri, 17 Feb 2017 20:11:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37140#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37140#comment:30/1487362309305064</guid>
      <description>&lt;p&gt;
I identified some &lt;code&gt;.tmp&lt;/code&gt; files being left over while reviewing, and tracked it down.
&lt;/p&gt;
&lt;p&gt;
Have a question -- @sanchothefat, do you think it's necessary to test all 8 rotations you've uploaded, or to help keep tests lean, do you think it's sufficient to pick one rotation, and use that?
&lt;/p&gt;
&lt;p&gt;
I'm tending towards the latter, but wanted to check with you before moving forward in that direction.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Customizer Add Widget.png attached to Ticket #39910</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Fri, 17 Feb 2017 19:38:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39910/Customizer%20Add%20Widget.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39910/Customizer%20Add%20Widget.png/1487360316251706</guid>
      <description>&lt;p&gt;
Customizer Add Widget
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39910 (Customizer: Add ability to drag &amp; drop widgets and menu items) created</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Fri, 17 Feb 2017 19:38:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39910</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39910/1487360299522702</guid>
      <description>&lt;p&gt;
Currently when you add a new widget in the Customizer, the available widgets will show, but you can not drag and drop any of the those widgets, rather you have to select the widget then, that widget will be added in. Drag and drop does work on widgets that already exist or where just added.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39382 (Skipping term cache cleaning when cache invalidation is suspended) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 17 Feb 2017 19:35:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39382#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39382#comment:2/1487360138323621</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @zachop - Sorry for the delayed response - I missed this ticket when it first came in. Thanks for the detailed report, and welcome to WP Trac!
&lt;/p&gt;
&lt;p&gt;
When you refer to a "term cache" that is "persistent", I assume you mean the term hierarchy that WP stores in &lt;code&gt;wp_options&lt;/code&gt;. Is that correct? If so, I disagree that it should be treated differently from the "object cache" with respect to suspended invalidation. For one thing, the &lt;code&gt;{$taxonomy}_hierarchy&lt;/code&gt; and &lt;code&gt;{$taxonomy}_children&lt;/code&gt; caches, like term caches fetched by &lt;code&gt;wp_cache_get()&lt;/code&gt;, are not meant to be directly accessed by the developer. From the point of view of the user who's calling &lt;code&gt;get_terms()&lt;/code&gt; or &lt;code&gt;get_term()&lt;/code&gt; or whatever, the cache implementation is totally invisible. Moreover, the distinction between "persistent" caches and the object cache largely disappears when running a persistent object cache backend like Memcache. For these reasons, I think it's correct that &lt;code&gt;wp_suspend_cache_invalidation()&lt;/code&gt; - which *is* developer-facing - would affect both types of caching mechanisms in the same way.
&lt;/p&gt;
&lt;p&gt;
For these reasons, I agree with you that it's confusing for a function like &lt;code&gt;wp_cache_flush()&lt;/code&gt; not to clear *all* caches. If the distinction between &lt;code&gt;wp_options&lt;/code&gt;-based caching and proper object caching is supposed to be invisible to the developer, then &lt;code&gt;wp_cache_flush()&lt;/code&gt; ought to clear both kinds of cache. I think it's worth investigating whether we can come up with a comprehensive list of places in WP where we use the database as a poor-man's-cache, and then to think about whether we can come up with a way of clearing all of these caches with a single method. (This might require something like an internal registry of database-cache keys.) It's probably impractical to modify &lt;code&gt;wp_cache_flush()&lt;/code&gt; to handle this kind of invalidation, because cache drop-ins redefine this function, and we don't have control over them. But we could probably have a new wrapper - maybe something like &lt;code&gt;wp_flush_all_caches()&lt;/code&gt; - that would wrap &lt;code&gt;wp_cache_flush()&lt;/code&gt; and all db caches.
&lt;/p&gt;
&lt;p&gt;
What do you (and others) think about this idea?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12423 (Include default code editor) updated</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Fri, 17 Feb 2017 19:29:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12423#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12423#comment:44/1487359796717984</guid>
      <description>&lt;p&gt;
Hi Andrea,
&lt;/p&gt;
&lt;p&gt;
Thank you for the links to some existing viewpoints in favour of no special treatment. It may have been more efficient to summarise the arguments and support those arguments with links. For the sake of brevity, I'll take one of the more recent posts and respond to each of the writer's arguments in turn.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
78.4% of respondents were very comfortable or somewhat comfortable with letting a web site know they are using a screen reader.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In my opinion, it should have been the other way around.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So those opposed to special treatment for screen reader users are more anxious about the issue than the people on behalf of whom they are advocating. I salute Marco's frankness.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It would take away the one place where we as blind people can be relatively undetected without our white cane or guide dog screaming at everybody around us that we’re blind or visually impaired, and therefore giving others a chance to treat us like true equals.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That a screen reader user interacted with a website comment section or even an admin interface via screen reader is not then printed beside their name on the author's bio or in the comments section. So for everyone except the screen reader's browser, that person is an equal. While it would be diabolical to print &lt;code&gt;submitted via screen reader&lt;/code&gt; beside every comment of screen reader users, that is not what we are talking about. We are talking about &lt;strong&gt;giving screen reader users an enhanced interface for their interaction with web publishing&lt;/strong&gt;. It's perfectly possible for screen reader users to give a different user agent and get a standard interface at any point.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Second, this is just a modern form of the text-only alternative web sites of the 1990s when screen readers were still learning to stumble around graphical user interfaces, let alone the web, and those text-only alternatives were a necessary evil to get anything done in most cases. In the early 2000s, as screen readers became better and browsers more modern, those faded away.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Actually those text version only content rich version of websites are back again. This time they are called AMP. We as web developers and publishers have failed so badly by overbuilding, over monetising and over tracking our and our client websites that even Google has given up on content parsing/separation and is insisting on a separate version with the content.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The current worst of the bad examples is the “accessible alternative” of the Audible.com web site. For one, its feature set is limited, and second, it constantly throws you back to the standard web presence, when doing searches, for example, and other totally screwed user experience snafoos. Or is there anyone out there who is actually wanting to tell me they enjoy this and find it even remotely useful? And to add insult to injury, the stuff that is currently a bit tricky on the standard web site can easily be fixed by some WAI-ARIA markup and some consistent keyboard navigation JavaScript.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In our case, we are not talking about building out the public facing side of the website with enhanced interface and tools. We are talking about the admin and content creation side. It's pretty clear that the ideal content creation tool for a sighted person will look and work differently than the ideal content creation tool for a visually impaired person. Each are using different ways to perceive and manipulate that content.
&lt;/p&gt;
&lt;p&gt;
To say otherwise is to suggest that when using a screwdriver one use a hammer or the inverse. Or that everyone playing a racket sport should use a tennis rackets, regardless if you're hitting a tennis ball, a badminton birdie or a squash ball.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
And the old arguments still apply: Alternative versions of web sites tend to get out of date, no longer being maintained, and creating and maintaining them is more expensive than properly applying markup and learning the web accessibility skill properly once.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Again, we are talking about the admin side and talking about adding a full-fledged and globally rolled out and maintained enhanced content editing interface for screen readers. I see far less chance of those users getting short shrift in a custom interface, globally available across WordPress than if we compromise the visual content editing tool on their behalf. That seems the worst of both worlds:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;a second rate code editor for sighted people
&lt;/li&gt;&lt;li&gt;no enhanced code editor for the visually impaired
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Everyone should get the best tool for their work. Heck, over on the new editor thread we are dealing with issues of writing vs layout. There probably need to be separate editing interfaces for each of those activities or both modes will have to accept a seriously compromised experience. This is &lt;strong&gt;not&lt;/strong&gt; about inconsideration to people with disabilities but about making their  &lt;strong&gt;lives better&lt;/strong&gt; and their &lt;strong&gt;work easier&lt;/strong&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Third, there are &lt;strong&gt;security implications&lt;/strong&gt;. Ever since I started working for Mozilla in 2007, there have been repetitive inquiries about exposing whether a screen reader is running with the browser, and if so, also granting access to the accessibility APIs to content JavaScript to manipulate what screen readers read to the user. Either of these would give web sites knowledge or exposure of operating system bits that, in every other case, would be considered unacceptable. You wouldn’t want to give web site JavaScript access to your file system, which type of keyboard you’re using, what brand your processor is, or if your machine still has a floppy drive or not, would you? Accessibility APIs hook into all kinds of channels to expose all the needed information to assistive technologies. Granting a web site access to these APIs would open a level of access to a computer that is just unacceptable, and unnecessary, for a web site to have.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is a more delicate question. We must find a way to provide a secure experience for the code editor for both screen readers and non-screen readers. The security argument is equally relevant with a single code editor or multiple code editors (sighted and screen reader).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Aural style sheets never gained acceptance because the expected gain was just not there, and the desire to have equal access to the same content as everybody else was much stronger. More recent requests all are just the same thing in different disguise.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Again we are not talking about the front end of a website where a screen reader user would have reason to fear his or her needs being neglected. We are talking about a controlled admin interface where the screen reader user will be an equally privileged visitor with a uniform interface across websites.
&lt;/p&gt;
&lt;p&gt;
Responsive design while it envisions a single code base for a website indeed includes device specific hacks within that single interface (bigger buttons for touch devices for example). Enhancing a responsive interface to create a better flow for screen reader users makes a certain amount of sense but again that is a front end issue and not what we are talking about here which is back end publishing tools.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
[I hope] W3C will provide enough incentive for web authors not to abuse the querying mechanisms described, and that this will only be used by very well-informed sites where the developers provide actual value. The privacy examples in that document look at least promising. Let’s hope it all holds up until this becomes a standard one day. I, for one, will strongly discourage web developers who ask me from using this unless I am personally convinced they know what they’re doing. And yes, like with Location sharing, I will personally be very restrictive about allowing sites access to that particular information if I’m asked.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Again, we are talking about a content creation tool in the admin area of a website. As WordPress core developers, we could do much to discourage tracking of which users are using what (not adding any hooks for tracking for example, requiring modifying core to track which as we all know is a huge maintenance burden and something most casually evil publishers will be either technically incapable or too lazy to implement).
&lt;/p&gt;
&lt;p&gt;
For the screen reader users who are truly wary of tracking we could still leave the plain text option available which works equally well or poorly for non-screen reader users and screen reader users.
&lt;/p&gt;
&lt;p&gt;
I respect and agree with a principle of equality for all people regardless of sensory perception or any disability. Yet I cannot not buy into the argument of creating a worst of two worlds solutions for both screen reader users and non-screen reader users to make sure that neither side has a tool best suited for his/her use. On the contrary I see an opportunity for WordPress to &lt;strong&gt;forge a bold path forward&lt;/strong&gt; with &lt;strong&gt;improved tools for screen reader users&lt;/strong&gt; baked into the &lt;strong&gt;core editing product&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;
As there isn't a single best way (due to browser capabilities, specifically the best way of handling &lt;code&gt;contentEditable&lt;/code&gt;) to build a code editor for screen reader users and non-screen reader users, we should also be talking here about what the best code editor for screen reader users is and not just about what the best code editor for non-screen reader users is. And after we do, we should figure how to integrate each code editor equally and seamlessly.
&lt;/p&gt;
&lt;p&gt;
That is what we as a community can do to better the editing experience and publishing opportunities for screen reader users.
&lt;/p&gt;
&lt;p&gt;
Anything else means starting from scratch, building from the ground up, losing a year or two of development and still in the end having to divide the capabilities even if it's nominally under a single code umbrella instead of two. Where possible stand on the shoulders of giants. In this case, two are at our disposition for non-screen reader users: CodeMirror and Ace Code Editor.
&lt;/p&gt;
&lt;p&gt;
Who can tell us which are the &lt;strong&gt;giants of code editing in the screen reader world&lt;/strong&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39908 (Make the page and category widget exclusions use a drop down not ID) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 17 Feb 2017 19:24:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39908#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39908#comment:1/1487359449325610</guid>
      <description>&lt;p&gt;
@karmatosed coincidentally a prototype for this was implemented in &lt;a class="ext-link" href="https://wordpress.org/plugins/js-widgets/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;JS Widgets&lt;/a&gt; when &lt;a class="ext-link" href="https://wordpress.org/plugins/customize-object-selector/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Customize Object Selector&lt;/a&gt; is also active. See &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39908/pages-widget-in-js-widgets-and-customize-object-selector.mov" title="Attachment 'pages-widget-in-js-widgets-and-customize-object-selector.mov' in Ticket #39908"&gt;pages-widget-in-js-widgets-and-customize-object-selector.mov&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39908/pages-widget-in-js-widgets-and-customize-object-selector.mov" title="Download"&gt;​&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33148 (Categories are missing in admin category list when child category ...) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 17 Feb 2017 19:22:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33148#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33148#comment:8/1487359361251972</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I guess I'm not totally opposed to making a change in the way we display terms in the admin in order to account for this sort of data-integrity issue, as long as the changes are fairly lightweight and targeted. Showing orphaned terms but highlighting them in red seems like a good first step. It's probably also a good idea to show them only to users who have the taxonomy's &lt;code&gt;edit_terms&lt;/code&gt; cap, since only these users will be able to fix the problem. We should only be doing this in the admin list table, so a modification like what's suggested in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/33148/taxonomy.diff" title="Attachment 'taxonomy.diff' in Ticket #33148"&gt;taxonomy.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/33148/taxonomy.diff" title="Download"&gt;​&lt;/a&gt; is probably too broad.
&lt;/p&gt;
&lt;p&gt;
We definitely should *not* do any automatic modification of content in the database. When a term is orphaned, there are multiple ways to "solve" the the problem, and WP can't know which one the admin wants.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>pages-widget-in-js-widgets-and-customize-object-selector.mov attached to Ticket #39908</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 17 Feb 2017 19:22:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39908/pages-widget-in-js-widgets-and-customize-object-selector.mov</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39908/pages-widget-in-js-widgets-and-customize-object-selector.mov/1487359349582974</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39909 (Make title behaviours consistent across all widgets on first load) created</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Fri, 17 Feb 2017 19:17:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39909</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39909/1487359040870331</guid>
      <description>&lt;p&gt;
On first load the word 'Archives' outputs as the Widget title but it doesn't appear in the input field. If there is a default text, perhaps it should show. This could also assist by users making the connection with the words and where they can edit.
&lt;/p&gt;
&lt;p&gt;
For example:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/EK1v0wxGX1.png"&gt;&lt;img width="50%" alt="https://cldup.com/EK1v0wxGX1.png" title="https://cldup.com/EK1v0wxGX1.png" crossorigin="anonymous" src="https://cldup.com/EK1v0wxGX1.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Another example, the Calendar widget has no title and compared to the examples above this feels weird. What I think should happen is that the same title behaviour occurs for all widgets when you first load them.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39908 (Make the page and category widget exclusions use a drop down not ID) created</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Fri, 17 Feb 2017 19:14:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39908</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39908/1487358880566466</guid>
      <description>&lt;p&gt;
Currently excluding in this widget involves you getting and ID and then adding it. This could be made more user friendly by using a drop down.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/YVbvUK5pLK.png"&gt;&lt;img width="50%" alt="https://cldup.com/YVbvUK5pLK.png" title="https://cldup.com/YVbvUK5pLK.png" crossorigin="anonymous" src="https://cldup.com/YVbvUK5pLK.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39907 (Add "Remove all widgets" button for themes with multiple widget areas) created</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Fri, 17 Feb 2017 19:04:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39907</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39907/1487358268088233</guid>
      <description>&lt;p&gt;
I was loading giving one of my sites a new theme as a New Year treat. It only seemed fitting to put on Twenty Sixteen. As this was a simple site, I wanted the single column. Unfortunately, loading up the theme brought a few issues as I suddenly found a lot of widgets I didn't want. For example the footer areas, they were filled with defaults I didn't want. Going in and removing each one took several steps as there were multiples.
&lt;/p&gt;
&lt;p&gt;
Whether you want defaults or not may be something the theme can decide, but offering a 'remove all widgets' button I think would be easy enough to add into the Customizer and a great enhancement for the minimalists.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39681 (Add RGBA to Customizer color picker) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Fri, 17 Feb 2017 18:51:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39681#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39681#comment:1/1487357490499909</guid>
      <description>&lt;p&gt;
Based on reviewing the contributions to that GitHub issue, this seems like it might be the best option:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/BraadMartin/components/tree/master/customizer/alpha-color-picker"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/BraadMartin/components/tree/master/customizer/alpha-color-picker&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://braadmartin.com/alpha-color-picker-control-for-the-wordpress-customizer/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://braadmartin.com/alpha-color-picker-control-for-the-wordpress-customizer/&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Can someone do a code and accessibility review?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33148 (Categories are missing in admin category list when child category ...) updated</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Fri, 17 Feb 2017 18:40:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33148#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33148#comment:7/1487356825142918</guid>
      <description>&lt;p&gt;
I too am unable to replicate this bug through the normal routes for deleting terms.
&lt;/p&gt;
&lt;p&gt;
I'm sympathetic to the bad user experience that results when a term is orphaned, especially because the children of the orphaned term disappear from the list table, too. But because there doesn't seem to be an issue in core, there are ways to restore the term's parent (like the fix described in the original SO post), and there doesn't seem to be a lot of traction with figuring out how the list table would support this case, perhaps this issue could be closed for now in favor of encouraging developers to use the core deletion functions?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39892 (Default value in Additional CSS) updated</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Fri, 17 Feb 2017 18:38:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39892#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39892#comment:7/1487356696119290</guid>
      <description>&lt;p&gt;
@Kelderic
&lt;/p&gt;
&lt;p&gt;
I am all for making it as simple and common sense as possible for end users.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39692 (Fix missing assignment of menus on theme switch) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Fri, 17 Feb 2017 18:32:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39692#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39692#comment:10/1487356350518016</guid>
      <description>&lt;p&gt;
Hey @jonathanbardo, I see you've been assigned to this ticket, along with &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39693" title="#39693: enhancement: Fix missing assignment of widgets on theme switch (closed: fixed)"&gt;#39693&lt;/a&gt;. Any idea when you'll have a chance to start working on some patches?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39906 (Rendering error message after update to 4.7.2) updated</title>
      
        <dc:creator>katebologna22</dc:creator>

      <pubDate>Fri, 17 Feb 2017 18:30:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39906#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39906#comment:3/1487356231915576</guid>
      <description>&lt;p&gt;
YES!!!!!!
You should post this information on the other chains in support for Hostgator folks like me.
PHP configuration to 7.0!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39875 (PDF previews overwrite existing images with the same name.) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 17 Feb 2017 18:26:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39875#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39875#comment:3/1487356017884280</guid>
      <description>&lt;p&gt;
Also discovered another scenario in my testing. PDF files that were uploaded before 4.7 do not have image previews until an image regeneration script is run, or &lt;code&gt;wp media regenerate&lt;/code&gt; in WP-CLI.
&lt;/p&gt;
&lt;p&gt;
When one of those scripts are run, the JPG file with the same name is also overwritten.
&lt;/p&gt;
&lt;p&gt;
Steps to reproduce:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Upload PDF file.
&lt;/li&gt;&lt;li&gt;Delete all JPG image previews for that PDF from uploads.
&lt;/li&gt;&lt;li&gt;Upload a JPG file with the same name.
&lt;/li&gt;&lt;li&gt;Run &lt;code&gt;wp media regenerate --yes&lt;/code&gt; in WP-CLI.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23148 (Add hook in wp_ajax_save_attachment for additional attachment fields) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 17 Feb 2017 18:12:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23148#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23148#comment:23/1487355177026094</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by pepe. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487355174001132"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39875 (PDF previews overwrite existing images with the same name.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 17 Feb 2017 18:12:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39875#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39875#comment:2/1487355157459429</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by desrosj. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487355155001130"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39906 (Rendering error message after update to 4.7.2) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 17 Feb 2017 18:08:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39906#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39906#comment:2/1487354927666032</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39906 (Rendering error message after update to 4.7.2) closed</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Fri, 17 Feb 2017 17:59:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39906#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39906#comment:1/1487354396984716</guid>
      <description>worksforme: &lt;p&gt;
Sadly this is not an issue with core WP so much as your system. Your version of PHP isn't doing things right.
&lt;/p&gt;
&lt;p&gt;
I was able to figure out that this error is COMMON for your host. You should upgrade PHP (I recommend 7.0) via cPanel (go to your cPanel, look for "php configuration" and change it there).
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39906 (Rendering error message after update to 4.7.2) created</title>
      
        <dc:creator>katebologna22</dc:creator>

      <pubDate>Fri, 17 Feb 2017 17:55:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39906</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39906/1487354158673552</guid>
      <description>&lt;p&gt;
My websites that automatically update to 4.7.2 render the following error message when I attempt to update themes and plugins.
Update Failed: Download failed. cURL error 77: Problem with the SSL CA cert (path? access rights?)
&lt;/p&gt;
&lt;p&gt;
Hostgator offered no help on their end and said it was a site development issue not a Hosting issue.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39902 (wordpress-tests-lib : factory-&gt;post-&gt;create_object not working on ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 17 Feb 2017 17:49:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39902#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39902#comment:1/1487353760249942</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the report, @ilhamum.
&lt;/p&gt;
&lt;p&gt;
Can you post the exact code you're using?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12009 (Add support for HTML 5 "async" and "defer" attributes) updated</title>
      
        <dc:creator>seancjones</dc:creator>

      <pubDate>Fri, 17 Feb 2017 17:06:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12009#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12009#comment:33/1487351207533580</guid>
      <description>&lt;p&gt;
I think this is an important issue to resolve. As of now, Google Page Speed Insights failing for a lot of WordPress installs can almost exclusively be blamed on render-blocking JavaScript. Fixing that increases speed by wide margins.
&lt;/p&gt;
&lt;p&gt;
Plugin developers should have a way of deferring page loads. There are clear pitfalls to avoid - like people's websites breaking.
&lt;/p&gt;
&lt;p&gt;
I'm going to play devil's advocate and argue why a filter might be better.
&lt;/p&gt;
&lt;p&gt;
A filter allows a user with a code sample to defer scripts, or remove scripts if they appear to break their current setup. Plugin developers can send an array of script handles to defer via a plugin, rather than rewrite their code with a new parameter.
&lt;/p&gt;
&lt;p&gt;
If a user wanted to disable all deferring:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter ( 'wp_defer_scripts', function($wp_defer) {
  return array();
}, 900, 2 );
add_filter ( 'wp_async_scripts', function($wp_async) {
  return array();
}, 900, 2 );
&lt;/pre&gt;&lt;p&gt;
For someone to enable all hooks:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter ( 'wp_async_scripts', function($wp_async) {
    global $wp_scripts;
    return $wp_scripts-&amp;gt;queue;
} );
&lt;/pre&gt;&lt;p&gt;
This would also make it far easier for plugin developers to patch their plugins.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>21492.3.diff attached to Ticket #21492</title>
      
        <dc:creator>MatheusGimenez</dc:creator>

      <pubDate>Fri, 17 Feb 2017 16:43:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21492/21492.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21492/21492.3.diff/1487349796327132</guid>
      <description>&lt;p&gt;
change (int) to absint() to convert values
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39905 (Alternative function for get_terms not documented yet) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 17 Feb 2017 16:03:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39905#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39905#comment:2/1487347407886534</guid>
      <description>invalid: &lt;p&gt;
Hi @subrataemfluence, thanks for the ticket!
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;get_terms()&lt;/code&gt; itself is not deprecated, only its second argument is: &lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/taxonomy.php?marks=1078-1080#L1073"&gt;tags/4.7.2/src/wp-includes/taxonomy.php?marks=1078-1080#L1073&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/4.7.2/src/wp-includes/taxonomy.php#L1073" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39905 (Alternative function for get_terms not documented yet) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Fri, 17 Feb 2017 15:58:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39905#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39905#comment:1/1487347100922891</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Screenshot from 2017-02-17 21:27:02.png attached to Ticket #39905</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Fri, 17 Feb 2017 15:57:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39905/Screenshot%20from%202017-02-17%2021%3A27%3A02.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39905/Screenshot%20from%202017-02-17%2021%3A27%3A02.png/1487347054570883</guid>
      <description>&lt;p&gt;
Tooltip showing deprecated
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39905 (Alternative function for get_terms not documented yet) created</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Fri, 17 Feb 2017 15:55:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39905</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39905/1487346940158779</guid>
      <description>&lt;p&gt;
Function &lt;code&gt;get_terms()&lt;/code&gt; is showing as deprecated in 4.7.2.
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/deprecated.php#L1276"&gt;https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/deprecated.php#L1276&lt;/a&gt; still shows &lt;code&gt;get_terms&lt;/code&gt; as the latest alternative of &lt;code&gt;get_all_category_ids&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
What is the alternative function? File &lt;code&gt;deprecated.php&lt;/code&gt; targets version 4.7.2 so it needs to be updated with the correct alternative.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39896 (Customizer: Allow users to Draft changes before Publishing) updated</title>
      
        <dc:creator>folletto</dc:creator>

      <pubDate>Fri, 17 Feb 2017 15:41:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39896#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39896#comment:1/1487346104594424</guid>
      <description>&lt;p&gt;
Given that I like the linear approach that is posted above, its structure also inspired me an idea that can allow some more advanced future features. It basically uses the same interaction on the side of the publish button, but instead of opening a small popup takes over the entire sidebar. With that space, we can do many things.
&lt;/p&gt;
&lt;p&gt;
In the concept above I explored this concept a bit:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Same basic functionality: Publish and Draft.
&lt;/li&gt;&lt;li&gt;Sharing link available (this is a bit simplified as it's dependent on save, so it's not that linear as in the mock)
&lt;/li&gt;&lt;li&gt;Preview before publishing of all the changes, with the ability to quickly revert them.
&lt;/li&gt;&lt;li&gt;View of the date and author of latest published changes.
&lt;/li&gt;&lt;li&gt;Link to history of past revisions.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
I'd note that this is more an exploration for ideas than a straight suggestion for this ticket, but since it might inspire a different approach and a longer term vision in another way, I think it made sense to be added.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>customizer-advanced-draft-i1.png attached to Ticket #39896</title>
      
        <dc:creator>folletto</dc:creator>

      <pubDate>Fri, 17 Feb 2017 15:37:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39896/customizer-advanced-draft-i1.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39896/customizer-advanced-draft-i1.png/1487345846570226</guid>
      <description>&lt;p&gt;
Customizer Advanced Publishing Options i1
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21492 (Theme customizer &gt; Static front page: missing error message when front ...) updated</title>
      
        <dc:creator>MatheusGimenez</dc:creator>

      <pubDate>Fri, 17 Feb 2017 15:30:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21492#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21492#comment:17/1487345435367430</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi everybody.
&lt;/p&gt;
&lt;p&gt;
I solved using the validation api. Check this out on the screenshot.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>21492.2.diff attached to Ticket #21492</title>
      
        <dc:creator>MatheusGimenez</dc:creator>

      <pubDate>Fri, 17 Feb 2017 15:25:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21492/21492.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21492/21492.2.diff/1487345159734010</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39904 (Error message - Non-existent changeset UUID) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 17 Feb 2017 15:25:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39904#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39904#comment:2/1487345142140004</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>21492.diff attached to Ticket #21492</title>
      
        <dc:creator>MatheusGimenez</dc:creator>

      <pubDate>Fri, 17 Feb 2017 15:22:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21492/21492.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21492/21492.diff/1487344938537637</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>index.png attached to Ticket #21492</title>
      
        <dc:creator>MatheusGimenez</dc:creator>

      <pubDate>Fri, 17 Feb 2017 15:21:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21492/index.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21492/index.png/1487344903503881</guid>
      <description>&lt;p&gt;
Screenshot
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Tickets #39128,​39904 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 17 Feb 2017 15:19:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=39128%2C39904</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=39128%2C39904/1487344778761885</guid>
      <description>duplicate: &lt;p&gt;
Hello @IsabelDM, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
Thanks for your report. This has been already reported in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39420" title="#39420: defect (bug): Unable to customise Theme - Non-existent changeset UUID (closed: duplicate)"&gt;#39420&lt;/a&gt; and we're currently tracking this issue in &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/39128" title="#39128: defect (bug): Customize: Preview fails to load when domain mapping in use ... (assigned)"&gt;#39128&lt;/a&gt;. If you're using WP Super Cache make sure to use &lt;a class="ext-link" href="https://github.com/Automattic/wp-super-cache/pull/161"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the latest version&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #39904 (Error message - Non-existent changeset UUID) created</title>
      
        <dc:creator>IsabelDM</dc:creator>

      <pubDate>Fri, 17 Feb 2017 15:15:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39904</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39904/1487344506120768</guid>
      <description>&lt;p&gt;
Whenever I try to change my theme I receive the following error message:
Non-existent changeset UUID
&lt;/p&gt;
&lt;p&gt;
This has occurred since downloading the latest Wordpress 4.7.2
&lt;/p&gt;
&lt;p&gt;
I have looked on the support forums and found a lot of people with the same problem, but they say it is unresolved.  I have contact my website hosting company but they say it is a Wordpress issue.
Please advise
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39903 (is_user_logged_in() true on ajax after cookie has been deleted) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 17 Feb 2017 15:14:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39903#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39903#comment:2/1487344476959310</guid>
      <description>&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/35488" title="#35488: defect (bug): wp_logout() not working as it should (new)"&gt;#35488&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28116" title="#28116: defect (bug): is_user_logged_in() does not work properly after using wp_signon() (closed: fixed)"&gt;#28116&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39903 (is_user_logged_in() true on ajax after cookie has been deleted) updated</title>
      
        <dc:creator>esemlabel</dc:creator>

      <pubDate>Fri, 17 Feb 2017 15:10:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39903#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39903#comment:1/1487344204098771</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I would suggest to adopt is_user_logged_in() function, so every time it returns false "true" - force to WP_User with ID 0:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;is_user_logged_in&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wp_get_current_user&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nx"&gt;wp_get_session_token&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nx"&gt;wp_set_current_user&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Or perform this check inside wp_get_current_user(), which also used when checking nonce and many other things.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Feb 17 2017 4-33 PM.zip attached to Ticket #39903</title>
      
        <dc:creator>esemlabel</dc:creator>

      <pubDate>Fri, 17 Feb 2017 14:51:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39903/Feb%2017%202017%204-33%20PM.zip</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39903/Feb%2017%202017%204-33%20PM.zip/1487343091738929</guid>
      <description>&lt;p&gt;
Screen Cast
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39903 (is_user_logged_in() true on ajax after cookie has been deleted) created</title>
      
        <dc:creator>esemlabel</dc:creator>

      <pubDate>Fri, 17 Feb 2017 14:46:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39903</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39903/1487342794054628</guid>
      <description>&lt;p&gt;
is_user_logged_in() will return true on ajax after cookie has been deleted manually in browser, until the session tokens expired or after destroy_sessions from admin for this user.
&lt;/p&gt;
&lt;p&gt;
To reproduce on:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Add ajax callback function with one checkup is_user_logged_in().
&lt;/li&gt;&lt;li&gt;Log in front-end.
&lt;/li&gt;&lt;li&gt;Clear browser cookie.
&lt;/li&gt;&lt;li&gt;Refresh page and run ajax. It will return true. But the var_dump( is_user_logged_in() ) on page will return correct false.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Even more: after deleting cookie and refreshing page, new wordpress_ cookie will appear again, maybe because of is_user_logged_in() check.
&lt;/p&gt;
&lt;p&gt;
Proof on video attached using fresh wp install.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37967 (Categories Problem - possible bug.) updated</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Fri, 17 Feb 2017 14:27:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37967#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37967#comment:1/1487341631833842</guid>
      <description>&lt;p&gt;
Hey @trader121,
&lt;/p&gt;
&lt;p&gt;
What you're describing sounds to me like expected behavior. Queries for terms in hierarchical taxonomies (like &lt;code&gt;category&lt;/code&gt;) include child terms by default, &lt;a class="ext-link" href="https://developer.wordpress.org/reference/classes/wp_tax_query/__construct/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;per `WP_Tax_Query::__construct()`&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39888 (Right after delete author - PHP notices on '%s is currently editing') updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 17 Feb 2017 14:19:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39888#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39888#comment:3/1487341143949954</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39865 (Escaping functions have filters that allow them to be bypassed) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Fri, 17 Feb 2017 14:16:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39865#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39865#comment:2/1487340964994214</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39865#comment:1" title="Comment 1"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I really feel this is by-design and should NOT be changed. We shouldn't pretend that WordPress operates in a clean sandboxed mode where code can only change what it is expected to.
&lt;/p&gt;
&lt;p&gt;
Everything is filterable in WordPress, using filters within escaping functions allows for enhancing escaping functions where needed, but they also make it easier to selectively undo it for certain edge-cases when needed - knowing the input text is required there. If people need to use the parameter, they're going to use it even if deprecated, otherwise the only option would be a hacky workaround.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
While I agree with the concept of filtering all the things, in this case, I feel that we're compromising site security for that ideal. If there is a use case where some needs to selectively undo the escaping, then perhaps not using the function is a better choice than filtering it away. Is there a use-case for this in core?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If malicious code wanted to output non-escaped test in a location where &lt;code&gt;esc_html()&lt;/code&gt; was used, there'd be numerous ways it could achieve it - the simplest would be to output the content upon one of the many filters which is probably called within what is going into &lt;code&gt;esc_html()&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I cannot find any other filters being called in the internals of &lt;code&gt;esc_html()&lt;/code&gt; but I see your point.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39892 (Default value in Additional CSS) updated</title>
      
        <dc:creator>Kelderic</dc:creator>

      <pubDate>Fri, 17 Feb 2017 13:03:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39892#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39892#comment:6/1487336583765777</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39892#comment:5" title="Comment 5"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That's what I'd like to do here. The text is essentially a placeholder and should be treated as such, I don't see why it should be a default value. There's no need to select it, and the &lt;code&gt;/* */&lt;/code&gt; symbols just create unnecessary confusion.
&lt;/p&gt;
&lt;p&gt;
As noted above, not everyone is familiar enough with CSS to know all the syntax details, most users just paste snippets in there that they find on the forums.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The only reason I can see for having the text as a CSS comment in the field would be for user education (providing an example for users of CSS comments). However, CSS doesn't really need inline comments unless one has a very complex stylesheet, which isn't typical for the Customizer.
&lt;/p&gt;
&lt;p&gt;
Since most users won't know what it means, and don't NEED to know what it means, it just adds unnecessary confusion to the user, as mentioned above. I agree that we should turn it into &lt;code&gt;placeholder&lt;/code&gt; text, and remove the &lt;code&gt;/* */&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39902 (wordpress-tests-lib : factory-&gt;post-&gt;create_object not working on ...) created</title>
      
        <dc:creator>ilhamum</dc:creator>

      <pubDate>Fri, 17 Feb 2017 11:54:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39902</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39902/1487332460706563</guid>
      <description>&lt;p&gt;
Hello,
&lt;/p&gt;
&lt;p&gt;
The function factory-&amp;gt;post-&amp;gt;create_object is not working on mysql Ver 14.14 Distrib 5.7.16.
When I try to insert a new post, it return 0 as the Id and doesn't insert the post.
I suspected that it has to do with mysql version, and when I forced mysql version to 5.6.24 on my docker image, it just worked fine.
&lt;/p&gt;
&lt;p&gt;
Thanks
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39382 (Skipping term cache cleaning when cache invalidation is suspended) updated</title>
      
        <dc:creator>zachop</dc:creator>

      <pubDate>Fri, 17 Feb 2017 10:33:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39382#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39382#comment:1/1487327630768021</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Seeing that the ticket is in &lt;code&gt;Awaiting Review&lt;/code&gt; status for the past 8 weeks, I'm changing its type from &lt;code&gt;Enhancement&lt;/code&gt; to &lt;code&gt;defect&lt;/code&gt;, hoping it will be reviewed sooner, given the fact that the described behavior could cause some trouble to developers.
&lt;/p&gt;
&lt;p&gt;
It's not a bug per se, so please feel free to change its type/priority as needed.
&lt;/p&gt;
&lt;p&gt;
Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39898 (Avoid using HTML in translation strings ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 17 Feb 2017 10:20:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39898#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39898#comment:3/1487326839422616</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40073" title="I18N: Update translators comment after [40072].
Props ocean90.
See #39898."&gt;40073&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
I18N: Update translators comment after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40072" title="I18N: Fix broken `sprintf()` after [40067].
See #39898."&gt;[40072]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props ocean90.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39898" title="#39898: defect (bug): Avoid using HTML in translation strings ... (closed: fixed)"&gt;#39898&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [40073]: I18N: Update translators comment after [40072].  Props ocean90. See #39898.</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 17 Feb 2017 10:20:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40073</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40073/1487326838947320</guid>
      <description>&lt;p&gt;
I18N: Update translators comment after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40072" title="I18N: Fix broken `sprintf()` after [40067].
See #39898."&gt;[40072]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Props ocean90.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39898" title="#39898: defect (bug): Avoid using HTML in translation strings ... (closed: fixed)"&gt;#39898&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39898 (Avoid using HTML in translation strings ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 17 Feb 2017 10:14:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39898#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39898#comment:2/1487326452975104</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40072" title="I18N: Fix broken `sprintf()` after [40067].
See #39898."&gt;40072&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
I18N: Fix broken &lt;code&gt;sprintf()&lt;/code&gt; after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40067" title="I18N: Remove `&amp;lt;code&amp;gt;` tags from translatable strings in ..."&gt;[40067]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39898" title="#39898: defect (bug): Avoid using HTML in translation strings ... (closed: fixed)"&gt;#39898&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [40072]: I18N: Fix broken `sprintf()` after [40067].  See #39898.</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 17 Feb 2017 10:14:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40072</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40072/1487326452434009</guid>
      <description>&lt;p&gt;
I18N: Fix broken &lt;code&gt;sprintf()&lt;/code&gt; after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40067" title="I18N: Remove `&amp;lt;code&amp;gt;` tags from translatable strings in ..."&gt;[40067]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39898" title="#39898: defect (bug): Avoid using HTML in translation strings ... (closed: fixed)"&gt;#39898&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39901 (Uploading a theme) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 17 Feb 2017 09:58:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39901#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39901#comment:1/1487325484079002</guid>
      <description>invalid: &lt;p&gt;
Hello @bresilhac2020,
&lt;/p&gt;
&lt;p&gt;
it looks like you're trying to upload your theme on &lt;a class="ext-link" href="https://wordpress.org/themes/getting-started/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/themes/getting-started/&lt;/a&gt;. To upload a theme to your install you have to visit yourdomin.com/wp-admin/theme-install.php where you should see a "Upload Theme" button.
&lt;/p&gt;
&lt;p&gt;
To get further help please try the &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;support forums&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39897 (wordpress.org will not accept my username) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 17 Feb 2017 09:54:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39897#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39897#comment:1/1487325263779181</guid>
      <description>invalid: &lt;p&gt;
Hello @bresilhac2020, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
This Trac is used for enhancements and bug reporting for the WordPress core software. Please try the &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;support forums&lt;/a&gt; to get help with your site.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39901 (Uploading a theme) created</title>
      
        <dc:creator>bresilhac2020</dc:creator>

      <pubDate>Fri, 17 Feb 2017 09:45:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39901</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39901/1487324701993046</guid>
      <description>&lt;p&gt;
I have attempted to upload a theme to my wordpress page but it won't accept the zip file. It says the name is reserved by wordpress. I am simply trying to use the twenty seventeen theme. Please help me with this pesky issue. -Jeff
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39900 (Post Listing Date with modified date calculation) closed</title>
      
        <dc:creator>pothi</dc:creator>

      <pubDate>Fri, 17 Feb 2017 07:58:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39900#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39900#comment:3/1487318293270429</guid>
      <description>invalid: &lt;p&gt;
You may use &lt;a class="ext-link" href="https://wordpress.org/plugins/last-modified-timestamp/screenshots/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;a plugin to show modified date in wp-admin&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39696 (REST API: Filter which links get embedded when passing the ?_embed ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 17 Feb 2017 07:54:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39696#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39696#comment:25/1487318077233006</guid>
      <description>&lt;p&gt;
On a related note, it would be great if in addition to indicating a embed subsetting if we could use a similar construct to indicate that resources should be embedded recursively along a specified tree. For example, if I wanted to get the recent posts along with their comments embedded and the embedded comments' own authors also embedded a third level down, maybe I could do so with a request like:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;/wp/v2/posts?_embed[]=comments/author&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
I understand this is maybe encroaching on GraphQL territory, but just wanted to mention recursive embedding as the flip side of being able to limit embedding. This is also encroaching on batch requests as well I suppose.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39900 (Post Listing Date with modified date calculation) updated</title>
      
        <dc:creator>dhanendran</dc:creator>

      <pubDate>Fri, 17 Feb 2017 07:53:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39900#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39900#comment:2/1487318030501682</guid>
      <description>&lt;p&gt;
If it says, &lt;strong&gt;Last Modified&lt;/strong&gt; then it should display the modified date here. When it says, &lt;strong&gt;Published&lt;/strong&gt; we can display the published date as we showing now.
&lt;/p&gt;
&lt;p&gt;
Or, we can display both dates &lt;strong&gt;Published&lt;/strong&gt; and &lt;strong&gt;Last Modified&lt;/strong&gt; here and sorting will work as usual with published date.
&lt;/p&gt;
&lt;p&gt;
Just a thought...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39900 (Post Listing Date with modified date calculation) updated</title>
      
        <dc:creator>ravipatel</dc:creator>

      <pubDate>Fri, 17 Feb 2017 07:21:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39900#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39900#comment:1/1487316098388838</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>date_admin_post_list.png attached to Ticket #39900</title>
      
        <dc:creator>ravipatel</dc:creator>

      <pubDate>Fri, 17 Feb 2017 07:11:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39900/date_admin_post_list.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39900/date_admin_post_list.png/1487315496624123</guid>
      <description>&lt;p&gt;
Database value
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>post_list.png attached to Ticket #39900</title>
      
        <dc:creator>ravipatel</dc:creator>

      <pubDate>Fri, 17 Feb 2017 07:11:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39900/post_list.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39900/post_list.png/1487315475570611</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39900 (Post Listing Date with modified date calculation) created</title>
      
        <dc:creator>ravipatel</dc:creator>

      <pubDate>Fri, 17 Feb 2017 07:08:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39900</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39900/1487315296165879</guid>
      <description>&lt;pre class="wiki"&gt;\wp-admin\includes\class-wp-posts-list-table.php
public function column_date( $post ) {}
&lt;/pre&gt;&lt;p&gt;
Now display post listing on post date : &lt;strong&gt;Last Modified 59 mins ago&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
When post label display &lt;strong&gt;Last Modified&lt;/strong&gt; That's time post_publish date display. Please Update with modify date calculation.
&lt;/p&gt;
&lt;p&gt;
Ex: 59 min before just i have created a post &amp;amp; 5 min before modified this post.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39304 (`get_post_galleries()` can return incorrect gallery items.) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 17 Feb 2017 06:47:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39304#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39304#comment:13/1487314040481717</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It was easier to fix this along with &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39277" title="#39277: defect (bug): get_post_galleries() produces PHP Warning in PHP 7.1 when parsing ... (closed: fixed)"&gt;#39277&lt;/a&gt; - so it's gone into 4.7.3 as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #39277,​39304 batch updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 17 Feb 2017 06:46:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=39277%2C39304</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=39277%2C39304/1487314006248288</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40071" title="Media: Avoid PHP Warnings in `get_post_galleries()` when processing ..."&gt;40071&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: Avoid PHP Warnings in &lt;code&gt;get_post_galleries()&lt;/code&gt; when processing empty &lt;code&gt;[gallery]&lt;/code&gt; shortcodes and avoid returning the incorrect results when the global &lt;code&gt;$post&lt;/code&gt; does not match the provided post ID.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props dd32, joemcgill, seanchayes.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40070" title="Media: Avoid PHP Warnings in `get_post_galleries()` when processing ..."&gt;[40070]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39277" title="#39277: defect (bug): get_post_galleries() produces PHP Warning in PHP 7.1 when parsing ... (closed: fixed)"&gt;#39277&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39304" title="#39304: defect (bug): `get_post_galleries()` can return incorrect gallery items. (closed: fixed)"&gt;#39304&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [40071]: Media: Avoid PHP Warnings in `get_post_galleries()` when processing ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 17 Feb 2017 06:46:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40071</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40071/1487314005740372</guid>
      <description>&lt;p&gt;
Media: Avoid PHP Warnings in &lt;code&gt;get_post_galleries()&lt;/code&gt; when processing empty &lt;code&gt;[gallery]&lt;/code&gt; shortcodes and avoid returning the incorrect results when the global &lt;code&gt;$post&lt;/code&gt; does not match the provided post ID.
&lt;/p&gt;
&lt;p&gt;
Props dd32, joemcgill, seanchayes.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40070" title="Media: Avoid PHP Warnings in `get_post_galleries()` when processing ..."&gt;[40070]&lt;/a&gt; to the 4.7 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39277" title="#39277: defect (bug): get_post_galleries() produces PHP Warning in PHP 7.1 when parsing ... (closed: fixed)"&gt;#39277&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39304" title="#39304: defect (bug): `get_post_galleries()` can return incorrect gallery items. (closed: fixed)"&gt;#39304&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Tickets #39277,​39304 batch updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 17 Feb 2017 06:45:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=39277%2C39304</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=39277%2C39304/1487313931573034</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40070" title="Media: Avoid PHP Warnings in `get_post_galleries()` when processing ..."&gt;40070&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: Avoid PHP Warnings in &lt;code&gt;get_post_galleries()&lt;/code&gt; when processing empty &lt;code&gt;[gallery]&lt;/code&gt; shortcodes and avoid returning the incorrect results when the global &lt;code&gt;$post&lt;/code&gt; does not match the provided post ID.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props dd32, joemcgill, seanchayes.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39277" title="#39277: defect (bug): get_post_galleries() produces PHP Warning in PHP 7.1 when parsing ... (closed: fixed)"&gt;#39277&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39304" title="#39304: defect (bug): `get_post_galleries()` can return incorrect gallery items. (closed: fixed)"&gt;#39304&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [40070]: Media: Avoid PHP Warnings in `get_post_galleries()` when processing ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 17 Feb 2017 06:45:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40070</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40070/1487313931087729</guid>
      <description>&lt;p&gt;
Media: Avoid PHP Warnings in &lt;code&gt;get_post_galleries()&lt;/code&gt; when processing empty &lt;code&gt;[gallery]&lt;/code&gt; shortcodes and avoid returning the incorrect results when the global &lt;code&gt;$post&lt;/code&gt; does not match the provided post ID.
&lt;/p&gt;
&lt;p&gt;
Props dd32, joemcgill, seanchayes.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39277" title="#39277: defect (bug): get_post_galleries() produces PHP Warning in PHP 7.1 when parsing ... (closed: fixed)"&gt;#39277&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39304" title="#39304: defect (bug): `get_post_galleries()` can return incorrect gallery items. (closed: fixed)"&gt;#39304&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39785 (posts_selection hook incorrectly concatenates selection query strings) updated</title>
      
        <dc:creator>bigevilbrain</dc:creator>

      <pubDate>Fri, 17 Feb 2017 05:06:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39785#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39785#comment:3/1487307988248415</guid>
      <description>&lt;p&gt;
@boonebgorges Yes, I don't see any harm in leaving it as is. I just noticed it because I was debugging some crazy query calls. Thanks for the response!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39783 (Requests http_api_curl action doesn't pass $handle by reference) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 17 Feb 2017 05:06:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39783#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39783#comment:8/1487307983960375</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40069" title="HTTP API: Restore backwards compatibility with the `http_api_curl` ..."&gt;40069&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
HTTP API: Restore backwards compatibility with the &lt;code&gt;http_api_curl&lt;/code&gt; filter - it expects that the handle parameter is passed as a reference, however &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39212" title="WP_HTTP: Map internal Requests hooks to WordPress actions.
This change ..."&gt;[39212]&lt;/a&gt; missed that.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props pento.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40068" title="HTTP API: Restore backwards compatibility with the `http_api_curl` ..."&gt;[40068]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39783" title="#39783: defect (bug): Requests http_api_curl action doesn't pass $handle by reference (closed: fixed)"&gt;#39783&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [40069]: HTTP API: Restore backwards compatibility with the `http_api_curl` ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 17 Feb 2017 05:06:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40069</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40069/1487307983461667</guid>
      <description>&lt;p&gt;
HTTP API: Restore backwards compatibility with the &lt;code&gt;http_api_curl&lt;/code&gt; filter - it expects that the handle parameter is passed as a reference, however &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39212" title="WP_HTTP: Map internal Requests hooks to WordPress actions.
This change ..."&gt;[39212]&lt;/a&gt; missed that.
&lt;/p&gt;
&lt;p&gt;
Props pento.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40068" title="HTTP API: Restore backwards compatibility with the `http_api_curl` ..."&gt;[40068]&lt;/a&gt; to the 4.7 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39783" title="#39783: defect (bug): Requests http_api_curl action doesn't pass $handle by reference (closed: fixed)"&gt;#39783&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39783 (Requests http_api_curl action doesn't pass $handle by reference) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 17 Feb 2017 05:05:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39783#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39783#comment:7/1487307903665486</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40068" title="HTTP API: Restore backwards compatibility with the `http_api_curl` ..."&gt;40068&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
HTTP API: Restore backwards compatibility with the &lt;code&gt;http_api_curl&lt;/code&gt; filter - it expects that the handle parameter is passed as a reference, however &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39212" title="WP_HTTP: Map internal Requests hooks to WordPress actions.
This change ..."&gt;[39212]&lt;/a&gt; missed that.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props pento.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39783" title="#39783: defect (bug): Requests http_api_curl action doesn't pass $handle by reference (closed: fixed)"&gt;#39783&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40068]: HTTP API: Restore backwards compatibility with the `http_api_curl` ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 17 Feb 2017 05:05:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40068</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40068/1487307903182822</guid>
      <description>&lt;p&gt;
HTTP API: Restore backwards compatibility with the &lt;code&gt;http_api_curl&lt;/code&gt; filter - it expects that the handle parameter is passed as a reference, however &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39212" title="WP_HTTP: Map internal Requests hooks to WordPress actions.
This change ..."&gt;[39212]&lt;/a&gt; missed that.
&lt;/p&gt;
&lt;p&gt;
Props pento.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39783" title="#39783: defect (bug): Requests http_api_curl action doesn't pass $handle by reference (closed: fixed)"&gt;#39783&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39785 (posts_selection hook incorrectly concatenates selection query strings) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 17 Feb 2017 03:36:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39785#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39785#comment:2/1487302588605882</guid>
      <description>wontfix: &lt;p&gt;
@bigevilbrain Thanks for the ticket, and welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
Very strange - I have seen this action before, but never noticed the way it concatenated query fragments. The hook was introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/5916" title="posts_results and posts_selection hooks. fixes #4799"&gt;[5916]&lt;/a&gt; &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4799" title="#4799: defect (bug): posts_results and posts_selection hooks for use by caching plugins (closed: fixed)"&gt;#4799&lt;/a&gt; and hasn't been touched since. I don't see any meaningful use of it on GitHub, and while I haven't done a proper search of the plugin repo, I'd be quite surprised if anyone's done anything meaningful with it there either.
&lt;/p&gt;
&lt;p&gt;
That said, it's harmless. And changing the data passed to the action could potentially break someone who *is* managing to use it in the right way. So I think we should probably leave it as is.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39899 (Integer slugs load parents content) updated</title>
      
        <dc:creator>nattaylor</dc:creator>

      <pubDate>Fri, 17 Feb 2017 03:35:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39899#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39899#comment:2/1487302521882476</guid>
      <description>&lt;p&gt;
Ah, thanks @SergeyBiryukov. I was sure I wasn't the only one.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38280 (Make term count for a specific object type available) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 17 Feb 2017 03:28:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38280#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38280#comment:8/1487302117131898</guid>
      <description>&lt;p&gt;
@desrosj Nice job on this patch so far.
&lt;/p&gt;
&lt;p&gt;
The comment &lt;code&gt;// When a count for an object type does not exist, if any other meta caches exist we can assume 0.&lt;/code&gt; makes me nervous. I guess this is because you're not storing 0s, and the presence a count for another object type means that WP has recently done a relevant count. I worry that this is going to be subject to weird race conditions or data integrity problems. (For example: what if a taxonomy originally assigned to 'post' becomes assigned to &lt;code&gt;array( 'post', 'page' )&lt;/code&gt;?) How about some combination of your original array-based approach and the one-entry-per-object-type approach? There'd be a single key containing a list of the object types for which a count exists, but the counts themselves would be stored in their own rows. This way, if &lt;code&gt;$type&lt;/code&gt; appears in the array, and if &lt;code&gt;get_term_meta( $term_id, '_wp_object_count_' . $type, true )&lt;/code&gt; returned false for a &lt;code&gt;$type&lt;/code&gt;, we can be confident that &lt;code&gt;$type&lt;/code&gt; has indeed been counted.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Bullet point one made me think of a couple scenarios that could result in some abandoned meta caches
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
These situations are rare enough that I wouldn't worry about it too much. As a precaution, &lt;code&gt;_update_post_term_count()&lt;/code&gt; could &lt;code&gt;delete_post_meta()&lt;/code&gt; for all of a post's existing counts before generating and saving new ones (another argument for having a separate list of the object types that have been counted). This way, the stale data will be removed during the next count.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #28081,​39899 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 17 Feb 2017 03:18:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=28081%2C39899</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=28081%2C39899/1487301528663062</guid>
      <description>duplicate: &lt;p&gt;
Hi @nattaylor, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
Thanks for the report, we're already tracking this issue in &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/28081" title="#28081: defect (bug): Do a canonical redirect for pages when query var 'paged' is set (accepted)"&gt;#28081&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #39899 (Integer slugs load parents content) created</title>
      
        <dc:creator>nattaylor</dc:creator>

      <pubDate>Fri, 17 Feb 2017 03:15:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39899</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39899/1487301356391791</guid>
      <description>&lt;p&gt;
Given a page with &lt;code&gt;slug=foo&lt;/code&gt; then requests for &lt;code&gt;/foo/[0-9]*&lt;/code&gt; load &lt;code&gt;foo&lt;/code&gt;'s content.
&lt;/p&gt;
&lt;p&gt;
To reproduce, just try this on most Wordpress installs (e.g. &lt;a class="ext-link" href="https://techcrunch.com/contact/8675309/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://techcrunch.com/contact/8675309/&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
Here is the output from the debug bar
&lt;/p&gt;
&lt;pre class="wiki"&gt;Request:
services/123
Query String:
page=123&amp;amp;pagename=services
Matched Rewrite Rule:
(.?.+?)(?:/([0-9]+))?/?$
Matched Rewrite Query:
pagename=services&amp;amp;page=123
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38173 (Meta query creates unecessary multiple left joins when using the same ...) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 17 Feb 2017 03:06:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38173#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38173#comment:3/1487300806136266</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
Bug was registered 6 months ago and no one care about this?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There are many open enhancement requests in WordPress, and many of them are worthwhile, but there are only so many people reviewing and writing patches.
&lt;/p&gt;
&lt;p&gt;
@neonWired is correct that no table join is required for subclauses that are joined by &lt;code&gt;OR&lt;/code&gt; that both operate on the same &lt;code&gt;meta_key&lt;/code&gt; when one of them uses the compare operator &lt;code&gt;NOT EXISTS&lt;/code&gt;. But this syntax requires that the &lt;code&gt;meta_key&lt;/code&gt; comparison be put into the &lt;code&gt;ON&lt;/code&gt; clause for that particular &lt;code&gt;JOIN&lt;/code&gt; clause. This already happens for &lt;code&gt;NOT EXISTS&lt;/code&gt;: &lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/class-wp-meta-query.php#L536"&gt;https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/class-wp-meta-query.php#L536&lt;/a&gt; But the logic becomes a good deal more complicated when other clauses share a &lt;code&gt;JOIN&lt;/code&gt; with a &lt;code&gt;NOT EXISTS&lt;/code&gt; clause, because of the order in which &lt;code&gt;WP_Meta_Query&lt;/code&gt; currently builds SQL. Take @neonWired's query as an example. Here's what happens internally:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;SQL is generated for the first subclause (&lt;code&gt;'compare' =&amp;gt; '!='&lt;/code&gt;). The JOIN clause looks like &lt;code&gt;INNER JOIN wp_postmeta ON ( wp_posts.ID = wp_postmeta.post_id )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;SQL is generated for the second subclause after this. &lt;code&gt;WP_Meta_Query&lt;/code&gt; realizes it's a 'NOT EXISTS', so it knows that the JOIN clause must be like &lt;code&gt;LEFT JOIN wp_postmeta ON ( wp_posts.ID = wp_postmeta.post_id AND wp_postmeta.meta_key = 'product' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;But in order to share the table join with the clause generated in 1, we'd have to go back and modify the SQL that's already generated there, so that it has the proper JOIN syntax.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
SQL generation for clauses is more or less linear at the moment; there's no easy way to jump back and change the syntax of a clause that already been generated. We'd need to either (a) change the way that the clauses are generated so that it's easier to change existing clauses, or (b) create some sort of look-ahead device that can tell whether there's going to be a 'NOT EXISTS' clause involved, and if so, process it first.
&lt;/p&gt;
&lt;p&gt;
Either of these is quite possible, but it's not a trivial task. I've just spent an hour or so trying to come up with a proof-of-concept, but I haven't been successful. If anyone would like to have a go at writing a patch, I'd be happy to help to review it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39892 (Default value in Additional CSS) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 17 Feb 2017 03:02:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39892#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39892#comment:5/1487300525859113</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39892#comment:3" title="Comment 3"&gt;afercia&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Proposed new text (or something similar):
&lt;/p&gt;
&lt;pre class="wiki"&gt;/*
You can add your own CSS in place of this comment.
Click the help icon above to learn more.
*/
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
That's a bit better than the current text, but it's still not clear enough that CSS should be added outside of &lt;code&gt;/* */&lt;/code&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'd consider to make it a placeholder only if removing the slashes and stars &lt;code&gt;/* */&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's what I'd like to do here. The text is essentially a placeholder and should be treated as such, I don't see why it should be a default value. There's no need to select it, and the &lt;code&gt;/* */&lt;/code&gt; symbols just create unnecessary confusion.
&lt;/p&gt;
&lt;p&gt;
As noted above, not everyone is familiar enough with CSS to know all the syntax details, most users just paste snippets in there that they find on the forums.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39898 (Avoid using HTML in translation strings ...) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 17 Feb 2017 02:22:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39898#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39898#comment:1/1487298161331015</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40067" title="I18N: Remove `&amp;lt;code&amp;gt;` tags from translatable strings in ..."&gt;40067&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
I18N: Remove &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; tags from translatable strings in &lt;code&gt;wp-includes/customize/class-wp-customize-custom-css-setting.php&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39898" title="#39898: defect (bug): Avoid using HTML in translation strings ... (closed: fixed)"&gt;#39898&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40067]: I18N: Remove `` tags from translatable strings in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 17 Feb 2017 02:22:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40067</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40067/1487298160420164</guid>
      <description>&lt;p&gt;
I18N: Remove &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; tags from translatable strings in &lt;code&gt;wp-includes/customize/class-wp-customize-custom-css-setting.php&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39898" title="#39898: defect (bug): Avoid using HTML in translation strings ... (closed: fixed)"&gt;#39898&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39898 (Avoid using HTML in translation strings ...) created</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 17 Feb 2017 02:19:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39898</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39898/1487297976939190</guid>
      <description>&lt;p&gt;
In the past, we've made an effort to &lt;a href="https://core.trac.wordpress.org/query?status=closed&amp;amp;component=I18N&amp;amp;summary=~avoid"&gt;remove &amp;lt;code&amp;gt; tags from translatable strings&lt;/a&gt;, as they generally do not need to be translated.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38829" title="Customize: Introduce custom CSS for extending theme styles.
* Custom ..."&gt;[38829]&lt;/a&gt; introduced a bunch of new strings with &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; tags in &lt;code&gt;WP_Customize_Custom_CSS_Setting&lt;/code&gt; class for displaying error messages when validating custom CSS rules.
&lt;/p&gt;
&lt;p&gt;
I've just stumbled upon a string where &lt;code&gt;&amp;lt;code&amp;gt;content: "";&amp;lt;/code&amp;gt;&lt;/code&gt; was translated literally, which means we should remove non-translatable parts from these strings.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39897 (wordpress.org will not accept my username) created</title>
      
        <dc:creator>bresilhac2020</dc:creator>

      <pubDate>Fri, 17 Feb 2017 02:01:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39897</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39897/1487296875252751</guid>
      <description>&lt;p&gt;
I have an account with you all with the username: bresilhac3030. I couldn't login with the password I myself created. So I had your password generator provide me with a new pw. This did not work either. My wordpress site is being built on the bresilhac3030 username. Please tell me what the problem is and how I can fix it. I also believe that my bresilhac3030 wordpress.org site may have been hacked already. Please advise. -Jeff Morales
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39264 (Add WP-API JS Client unit tests to core) reopened</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 17 Feb 2017 01:59:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39264#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39264#comment:40/1487296769316837</guid>
      <description>&lt;p&gt;
Reopening for backport to 4.7 branch.
&lt;/p&gt;
&lt;p&gt;
It took us a few tries to get this right, so there are 5 different commits to port:  &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40058" title="REST API: Add QUnit tests for wp-api.js and PHPUnit fixture ..."&gt;[40058]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40061" title="REST API: improve test fixture generation, normalizing data.
Add a ..."&gt;[40061]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40065" title="REST API: Fix the client test fixture generation in PHP 5.2 and 5.3.
 ..."&gt;[40065]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40066" title="REST API: Skip generating the client test fixtures in PHP 5.2 and 5.3. ..."&gt;[40066]&lt;/a&gt;, and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40077" title="REST API: Skip generating the client test fixtures in multisite mode.
 ..."&gt;[40077]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
edit: make it 6, including &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40104" title="REST API: Ensure that tests pass if extra endpoints are registered.
 ..."&gt;[40104]&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39887 (function  of  wp_editor) updated</title>
      
        <dc:creator>kkking</dc:creator>

      <pubDate>Fri, 17 Feb 2017 01:26:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39887#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39887#comment:7/1487294773744566</guid>
      <description>&lt;p&gt;
@azaozz ,I've solved it. thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39887 (function  of  wp_editor) updated</title>
      
        <dc:creator>kkking</dc:creator>

      <pubDate>Fri, 17 Feb 2017 01:24:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39887#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39887#comment:6/1487294666914682</guid>
      <description>&lt;p&gt;
I've solved it，  thanks everyone！
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>metabox-editor.png attached to Ticket #39887</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 17 Feb 2017 01:23:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39887/metabox-editor.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39887/metabox-editor.png/1487294592140597</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39887 (function  of  wp_editor) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 17 Feb 2017 01:22:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39887#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39887#comment:5/1487294555373844</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39887#comment:2" title="Comment 2"&gt;kkking&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
hello ，I put this code to functions.php
&lt;/p&gt;
&lt;p&gt;
open "wp-admin/post-new.php"
&lt;/p&gt;
&lt;p&gt;
it show like  this image...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Just tested this and it works as expected here. Of course the editor "crashes" if you move the metabox in the dom as @swissspidy mentioned above, but it works properly if you don't. Please check the rest of your code or any active plugins that may interfere with the CSS or JS.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39264 (Add WP-API JS Client unit tests to core) closed</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 17 Feb 2017 00:12:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39264#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39264#comment:39/1487290370097186</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40066" title="REST API: Skip generating the client test fixtures in PHP 5.2 and 5.3. ..."&gt;40066&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Skip generating the client test fixtures in PHP 5.2 and 5.3.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40065" title="REST API: Fix the client test fixture generation in PHP 5.2 and 5.3.
 ..."&gt;[40065]&lt;/a&gt; - &lt;code&gt;JSON_*&lt;/code&gt; constants are differently unsupported in PHP 5.2 and 5.3, which caused other, more different failures.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also bring back &lt;code&gt;JSON_UNESCAPED_SLASHES&lt;/code&gt; because the generated output looks nicer this way.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39264" title="#39264: enhancement: Add WP-API JS Client unit tests to core (closed: fixed)"&gt;#39264&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40066]: REST API: Skip generating the client test fixtures in PHP 5.2 and 5.3. ...</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 17 Feb 2017 00:12:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40066</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40066/1487290369595635</guid>
      <description>&lt;p&gt;
REST API: Skip generating the client test fixtures in PHP 5.2 and 5.3.
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40065" title="REST API: Fix the client test fixture generation in PHP 5.2 and 5.3.
 ..."&gt;[40065]&lt;/a&gt; - &lt;code&gt;JSON_*&lt;/code&gt; constants are differently unsupported in PHP 5.2 and 5.3, which caused other, more different failures.
&lt;/p&gt;
&lt;p&gt;
Also bring back &lt;code&gt;JSON_UNESCAPED_SLASHES&lt;/code&gt; because the generated output looks nicer this way.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39264" title="#39264: enhancement: Add WP-API JS Client unit tests to core (closed: fixed)"&gt;#39264&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #12423 (Include default code editor) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 16 Feb 2017 23:59:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12423#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12423#comment:43/1487289588081022</guid>
      <description>&lt;p&gt;
Testing the "contenteditable model", will post first results as soon as possible. Seems to me all that's needed to get the different model is using the Chrome emulator with a "mobile" device. Alternatively, there's a quick Codepen kindly setup by @iseulde: &lt;a class="ext-link" href="http://codepen.io/iseulde/full/apxRzj/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codepen.io/iseulde/full/apxRzj/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39264.12.diff attached to Ticket #39264</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 16 Feb 2017 23:52:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39264/39264.12.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39264/39264.12.diff/1487289121766213</guid>
      <description>&lt;p&gt;
Skip fixture file generation on PHP &amp;lt; 5.4; bring back &lt;code&gt;JSON_UNESCAPED_SLASHES&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39264 (Add WP-API JS Client unit tests to core) reopened</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 16 Feb 2017 23:45:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39264#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39264#comment:38/1487288734787867</guid>
      <description>&lt;p&gt;
Still no joy:
&lt;/p&gt;
&lt;pre class="wiki"&gt;There was 1 error:
1) WP_Test_REST_Schema_Initialization::test_build_wp_api_client_fixtures
json_encode() expects exactly 1 parameter, 2 given
/home/travis/build/nylen/wordpress-develop-svn/tests/phpunit/tests/rest-api/rest-schema-setup.php:280
&lt;/pre&gt;&lt;p&gt;
I'm just going to no-op this fixture file generation on PHP &amp;lt; 5.4, there's no reason we will need to do that anyway.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39264 (Add WP-API JS Client unit tests to core) closed</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 16 Feb 2017 23:29:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39264#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39264#comment:37/1487287756805215</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40065" title="REST API: Fix the client test fixture generation in PHP 5.2 and 5.3.
 ..."&gt;40065&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Fix the client test fixture generation in PHP 5.2 and 5.3.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Remove &lt;code&gt;JSON_UNESCAPED_SLASHES&lt;/code&gt; from the &lt;code&gt;wp_json_encode&lt;/code&gt; call - this constant is not supported in PHP &amp;lt; 5.4, and we don't polyfill it either.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also make the PHPUnit test suite correctly exit with a non-zero exit code when &lt;code&gt;wp-tests-config.php&lt;/code&gt; is not present.  This was causing &lt;code&gt;grunt restapi-jsclient&lt;/code&gt; to incorrectly proceed to its second step even when the first step failed with this error.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props ocean90.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39264" title="#39264: enhancement: Add WP-API JS Client unit tests to core (closed: fixed)"&gt;#39264&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40065]: REST API: Fix the client test fixture generation in PHP 5.2 and 5.3.  ...</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 16 Feb 2017 23:29:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40065</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40065/1487287756282973</guid>
      <description>&lt;p&gt;
REST API: Fix the client test fixture generation in PHP 5.2 and 5.3.
&lt;/p&gt;
&lt;p&gt;
Remove &lt;code&gt;JSON_UNESCAPED_SLASHES&lt;/code&gt; from the &lt;code&gt;wp_json_encode&lt;/code&gt; call - this constant is not supported in PHP &amp;lt; 5.4, and we don't polyfill it either.
&lt;/p&gt;
&lt;p&gt;
Also make the PHPUnit test suite correctly exit with a non-zero exit code when &lt;code&gt;wp-tests-config.php&lt;/code&gt; is not present.  This was causing &lt;code&gt;grunt restapi-jsclient&lt;/code&gt; to incorrectly proceed to its second step even when the first step failed with this error.
&lt;/p&gt;
&lt;p&gt;
Props ocean90.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39264" title="#39264: enhancement: Add WP-API JS Client unit tests to core (closed: fixed)"&gt;#39264&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39264 (Add WP-API JS Client unit tests to core) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 16 Feb 2017 23:18:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39264#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39264#comment:36/1487287121687764</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39264/39264.11.diff" title="Attachment '39264.11.diff' in Ticket #39264"&gt;39264.11.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39264/39264.11.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Remove &lt;code&gt;JSON_UNESCAPED_SLASHES&lt;/code&gt; which is not supported on PHP &amp;lt; 5.4.  This wasn't very important anyway.
&lt;/li&gt;&lt;li&gt;Update the results of &lt;code&gt;grunt restapi-jsclient&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Ensure that &lt;code&gt;phpunit&lt;/code&gt; fails with a non-zero exit code if its config file is missing.  Previously, when running &lt;code&gt;grunt restapi-jsclient&lt;/code&gt;, the next Grunt task would incorrectly proceed even if its first step (the &lt;code&gt;phpunit&lt;/code&gt; run) failed with this error.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>39264.11.diff attached to Ticket #39264</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 16 Feb 2017 23:17:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39264/39264.11.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39264/39264.11.diff/1487287027837768</guid>
      <description>&lt;p&gt;
Remove &lt;code&gt;JSON_UNESCAPED_SLASHES&lt;/code&gt;; make phpunit exit correctly if no config file
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>customizer-drafting-i1.png attached to Ticket #39896</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 16 Feb 2017 23:10:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39896/customizer-drafting-i1.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39896/customizer-drafting-i1.png/1487286618207935</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #28661 (Improve loading of Customizer from front-end by leveraging ...) closed</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 16 Feb 2017 23:10:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28661#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28661#comment:11/1487286609490534</guid>
      <description>wontfix: &lt;p&gt;
Closing since I think we've concurred that we want to see less of customize-loader, not more (see &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/28536" title="#28536: enhancement: Add browser history and deep linking for navigation in Customizer preview (reviewing)"&gt;#28536&lt;/a&gt;).
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39896 (Customizer: Allow users to Draft changes before Publishing) created</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 16 Feb 2017 23:09:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39896</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39896/1487286563285717</guid>
      <description>&lt;p&gt;
Inspired by drafting and revisions in the &lt;a class="ext-link" href="https://wordpress.org/plugins/customize-snapshots/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Customize Snapshots plugin&lt;/a&gt;, the button design in &lt;a class="ext-link" href="https://github.com/xwp/wp-customize-posts/issues/207"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Customize Posts&lt;/a&gt;, and Press This, I want to propose a way to allow users to draft changes in the Customizer.
&lt;/p&gt;
&lt;p&gt;
This introduces a split button to the Customizer that lets you toggle between "Publish" and "Save Draft."
&lt;/p&gt;
&lt;p&gt;
This would pair nicely with the Revisions mockups introduced in &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/21666" title="#21666: feature request: Customizer reset/undo/revert (assigned)"&gt;#21666&lt;/a&gt;, but doesn't depend on it.
&lt;/p&gt;
&lt;p&gt;
Drafting would be helpful if you're setting up your site, or making some big changes, and you don't want to publish them just yet. With drafting, you can leave and come back to the Customizer later to finish making your changes.
&lt;/p&gt;
&lt;p&gt;
If you leave the Customizer without saving a draft or publishing your changes, the next time you enter the Customizer, you'll get a notice asking if you want to restore the autosave.
&lt;/p&gt;
&lt;p&gt;
In future iterations, once Revisions is built, we'll explore adding the ability to have multiple drafts of pending changes. Also related is the ability to schedule the changes for publishing (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28721" title="#28721: enhancement: Scheduled changes for the customizer (closed: fixed)"&gt;#28721&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/31089" title="#31089: enhancement: Customize: Add revisions for changesets (new)"&gt;#31089&lt;/a&gt;, &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/39841" title="#39841: enhancement: Additional Post Button Options (new)"&gt;#39841&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39895 (wp_set_object_terms tries to treat object as string) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 16 Feb 2017 22:59:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39895#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39895#comment:2/1487285988168968</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39895 (wp_set_object_terms tries to treat object as string) closed</title>
      
        <dc:creator>dracos</dc:creator>

      <pubDate>Thu, 16 Feb 2017 22:50:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39895#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39895#comment:1/1487285435955989</guid>
      <description>invalid: &lt;p&gt;
Looks like it must be another plugin interfering with get_terms, sorry for the noise.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #27404 (Widget Customizer: Allow adding inactive widgets to widget areas) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 16 Feb 2017 22:35:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27404#comment:56</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27404#comment:56/1487284524123503</guid>
      <description>&lt;p&gt;
I think we should build @folletto's solution and try it out.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12423 (Include default code editor) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Thu, 16 Feb 2017 22:19:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12423#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12423#comment:42/1487283556109914</guid>
      <description>&lt;p&gt;
Re: accessibility:
&lt;/p&gt;
&lt;p&gt;
CodeMirror has a &lt;code&gt;contenteditable&lt;/code&gt; input mode: &lt;a class="ext-link" href="http://codemirror.net/doc/manual.html#option_inputStyle"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codemirror.net/doc/manual.html#option_inputStyle&lt;/a&gt;. This might work better with screen readers.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Selects the way CodeMirror handles input and focus. The core library defines the "textarea" and "contenteditable" input models. On mobile browsers, the default is "contenteditable". On desktop browsers, the default is "textarea". Support for IME and screen readers is better in the "contenteditable" model. The intention is to make it the default on modern desktop browsers in the future.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39895 (wp_set_object_terms tries to treat object as string) created</title>
      
        <dc:creator>dracos</dc:creator>

      <pubDate>Thu, 16 Feb 2017 22:15:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39895</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39895/1487283330240077</guid>
      <description>&lt;p&gt;
If I've understood this correctly, in wp_set_object_terms, $old_tt_ids is set to a call to wp_get_object_terms(), which returns an array of objects. It then runs array_diff on this with $tt_ids, putting the difference in $delete_tt_ids, and if there is anything different, it calls implode( "', '", $delete_tt_ids ) – which dies because it tries to treat the objects inside of $delete_tt_ids as strings, with the error:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
"Object of class stdClass could not be converted to string in .../wp-includes/taxonomy.php"
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
When I am seeing the error, in a third party plugin, $tt_ids is empty, $old_tt_ids is an array of one stdClass Object ( [term_id] =&amp;gt; 8, [name] =&amp;gt; posttag, [slug] =&amp;gt; posttag, [term_group] =&amp;gt; 0, [term_taxonomy_id] =&amp;gt; 8, [taxonomy] =&amp;gt; post_tag, [description] =&amp;gt; , [parent] =&amp;gt; 0, [count] =&amp;gt; 10 ) and so the error occurs.
&lt;/p&gt;
&lt;p&gt;
Apologies if I've misunderstood something.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>pampfelimetten</dc:creator>

      <pubDate>Thu, 16 Feb 2017 21:47:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:102</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:102/1487281645404146</guid>
      <description>&lt;p&gt;
Same problem here. with some mp3 files it's working just fine, with others it doesn't.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39892 (Default value in Additional CSS) updated</title>
      
        <dc:creator>denisco</dc:creator>

      <pubDate>Thu, 16 Feb 2017 21:42:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39892#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39892#comment:4/1487281340964092</guid>
      <description>&lt;p&gt;
to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39892#comment:3" title="Comment 3"&gt;afercia&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hm I'm a bit surprised to see users who want to use CSS and don't know what a CSS comment is.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Many users do not have sufficient knowledge and just use snippets from the replies of support forum or from the Internet tutorials.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How many users? :) any data?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Additional CSS appeared recently and many users on forums continue to recommend the use child theme for styling customization. Therefore, user feedback of Additional CSS is sufficiently small.
But for us such way to insert the code also was a surprise, and it would be interesting hear opinions of this issue :).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12423 (Include default code editor) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 16 Feb 2017 21:39:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12423#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12423#comment:41/1487281181084082</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12423#comment:39" title="Comment 39"&gt;westonruter&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@afercia is there an established pattern to sniff out for whether or not a screen reader is being used
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There is and it's: please don't do that :) Detecting screen readers is no different than sniffing browsers: difficult and unreliable. Additionally, there are some important ethical and privacy concerns to consider. Some interesting reading:
&lt;/p&gt;
&lt;p&gt;
Thoughts on screen reader detection
Léonie Watson
&lt;a class="ext-link" href="http://tink.uk/thoughts-on-screen-reader-detection/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://tink.uk/thoughts-on-screen-reader-detection/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
On Detecting Assistive Technology
Joe Dolson
&lt;a class="ext-link" href="https://www.joedolson.com/2014/03/detecting-assistive-technology/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.joedolson.com/2014/03/detecting-assistive-technology/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Why screen reader detection on the web is a bad thing
Marco Zehe
&lt;a class="ext-link" href="https://www.marcozehe.de/2014/02/27/why-screen-reader-detection-on-the-web-is-a-bad-thing/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.marcozehe.de/2014/02/27/why-screen-reader-detection-on-the-web-is-a-bad-thing/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
On Screen Reader Detection
Adrian Roselli
&lt;a class="ext-link" href="http://adrianroselli.com/2014/03/on-screen-reader-detection.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://adrianroselli.com/2014/03/on-screen-reader-detection.html&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Detecting Screen Readers – No
Web Axe
&lt;a class="ext-link" href="http://www.webaxe.org/detecting-screen-readers-no/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.webaxe.org/detecting-screen-readers-no/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Aside: I've spent some time testing the accessible, alternative version of CodeMirror: &lt;a class="ext-link" href="http://bgrins.github.io/codemirror-accessible/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://bgrins.github.io/codemirror-accessible/&lt;/a&gt;
While it works decently with Firefox+NVDA, it is not ideal when using Safari 10 and VoiceOver and it completely freezes Internet Explorer 11 when using JAWS 17, at least for me.
&lt;/p&gt;
&lt;p&gt;
I tend to think that only editors based on &lt;code&gt;contenteditable&lt;/code&gt; can offer a decent level of accessibility. Maybe, even something like (cough) draft.js could work better, if only decorators for syntax-highlighting existed (couldn't find any, so far).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12423 (Include default code editor) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 16 Feb 2017 21:28:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12423#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12423#comment:40/1487280499952590</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12423#comment:36" title="Comment 36"&gt;lukecavanagh&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In relation to ACE and screen readers I did see this issue.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/ajaxorg/ace/issues/2164"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/ajaxorg/ace/issues/2164&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks, interesting reading (especially the comments from Mr. Garaventa) that may help people understand why the technical choice implemented by CodeMirror and ACE is basically a hack.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In Ace we have textarea focused, which is used for capturing input and it's value is being reset after each keystroke. Visible text is not a part of the focused element, and selection is just a div.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Altering the native behavior of a control (in this case a textarea gets cleared out so there's no content to announce) actually means destroying the native level of accessibility that assistive technologies can understand. If there's really the need to alter in such a way the native behavior of a control, then it should be a developer's responsibility to rebuild that level of accessibility he/she just destroyed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39797 (Customizer Preview JS Object triggers preview pane refresh on ...) reopened</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 16 Feb 2017 21:21:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39797#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39797#comment:7/1487280114948415</guid>
      <description>&lt;p&gt;
Re-opening for 4.7.3.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39797 (Customizer Preview JS Object triggers preview pane refresh on ...) closed</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 16 Feb 2017 21:20:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39797#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39797#comment:6/1487280045911352</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40064" title="Customize: Skip intercepting non-HTTP(S) links in customizer preview ..."&gt;40064&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Customize: Skip intercepting non-HTTP(S) links in customizer preview just as jump links are ignored.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Ensures that links with &lt;code&gt;javascript:&lt;/code&gt;, &lt;code&gt;mailto:&lt;/code&gt; and other protocols work as expected in the customizer preview.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39797" title="#39797: defect (bug): Customizer Preview JS Object triggers preview pane refresh on ... (closed: fixed)"&gt;#39797&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40064]: Customize: Skip intercepting non-HTTP(S) links in customizer preview ...</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 16 Feb 2017 21:20:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40064</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40064/1487280045447798</guid>
      <description>&lt;p&gt;
Customize: Skip intercepting non-HTTP(S) links in customizer preview just as jump links are ignored.
&lt;/p&gt;
&lt;p&gt;
Ensures that links with &lt;code&gt;javascript:&lt;/code&gt;, &lt;code&gt;mailto:&lt;/code&gt; and other protocols work as expected in the customizer preview.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39797" title="#39797: defect (bug): Customizer Preview JS Object triggers preview pane refresh on ... (closed: fixed)"&gt;#39797&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39797 (Customizer Preview JS Object triggers preview pane refresh on ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 16 Feb 2017 21:19:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39797#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39797#comment:5/1487279958483343</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for testing!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39892 (Default value in Additional CSS) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 16 Feb 2017 21:02:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39892#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39892#comment:3/1487278928309689</guid>
      <description>&lt;p&gt;
Hm I'm a bit surprised to see users who want to use CSS and don't know what a CSS comment is. Maybe this is one of the dangers to face when opening advanced editing abilities to non-technical users. I'd suggest to just change the text, which is a bit misleading. Current text:
&lt;/p&gt;
&lt;pre class="wiki"&gt;/*
You can add your own CSS here.
Click the help icon above to learn more.
*/
&lt;/pre&gt;&lt;p&gt;
Proposed new text (or something similar):
&lt;/p&gt;
&lt;pre class="wiki"&gt;/*
You can add your own CSS in place of this comment.
Click the help icon above to learn more.
*/
&lt;/pre&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
given this real-world user feedback
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
How many users? :) any data?
&lt;/p&gt;
&lt;p&gt;
Alternatively, considering the original issue raised in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38685" title="#38685: defect (bug): Replace custom CSS placeholder with default value (closed: fixed)"&gt;#38685&lt;/a&gt;?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I was staring at the comment used in the placeholder and trying to use the keyboard to select/cancel what initially appeared to me being text... was wondering why the arrow keys weren't working at all. Maybe it's just me being a bit slow :) Since it's formatted like an inline comment /* */ it looks like actual code that can be selected. Maybe potentially confusing for users, &lt;strong&gt;I'd consider to remove the /* */&lt;/strong&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'd consider to make it a placeholder only if removing the slashes and stars &lt;code&gt;/* */&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12423 (Include default code editor) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 16 Feb 2017 20:42:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12423#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12423#comment:39/1487277743117488</guid>
      <description>&lt;p&gt;
@afercia is there an established pattern to sniff out for whether or not a screen reader is being used and in that case just opt to not initialize CodeMirror/ACE/etc at all? If the textarea is best for accessibility, if we can just only progressively enhance the textarea with the code editing control when the user actually would benefit from it, that would seem like a good workaround.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39891 (Chrome rendering issue with Customizer, widgets, and checked radios) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 16 Feb 2017 20:42:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39891#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39891#comment:1/1487277729019514</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Nice catch @joelworsham. Reproduced using Easy Digital Downloads "Download Details" widget, which contains both radio buttons and checkboxes, but yep, see it happens just with the Chrome-specific radio buttons styling.
Setting &lt;code&gt;overflow: hidden&lt;/code&gt; on the container seems to fix it too, but it also slightly cut's off the radio buttons focus style.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39892 (Default value in Additional CSS) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 16 Feb 2017 20:32:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39892#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39892#comment:2/1487277163741147</guid>
      <description>&lt;p&gt;
Interesting. This mistake will be alleviated once there is a proper code editor control (&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/38707" title="#38707: enhancement: Customizer: Additional CSS highlight, revisions, selection, per-page, ... (new)"&gt;#38707&lt;/a&gt;) which can give syntax highlighting and validation helps.
&lt;/p&gt;
&lt;p&gt;
@afercia given this real-world user feedback, do you think it outweighs your the user issues you anticipated in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38685" title="#38685: defect (bug): Replace custom CSS placeholder with default value (closed: fixed)"&gt;#38685&lt;/a&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12423 (Include default code editor) updated</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Thu, 16 Feb 2017 20:19:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12423#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12423#comment:38/1487276353512216</guid>
      <description>&lt;p&gt;
Thanks for that link Luke. That puts CodeMirror and ACE Code Editor on an equal footing in terms of accessibility. It sounds like visual code editors are exactly the opposite of what a screen reader/editor needs. Plain text would be much better than any of them.
&lt;/p&gt;
&lt;p&gt;
Even more fabulous if WordPress could do better than plain text and insert the best screen reader/editor for those who use that technology while offering the best visual code editor for those who prefer that editor.
&lt;/p&gt;
&lt;p&gt;
Alec
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39871 (REST API: Revision author ID is returned as a string) reopened</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 16 Feb 2017 20:09:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39871#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39871#comment:2/1487275758110504</guid>
      <description>&lt;p&gt;
Reopening for backport to 4.7 branch.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39871 (REST API: Revision author ID is returned as a string) closed</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 16 Feb 2017 20:08:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39871#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39871#comment:1/1487275703754955</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40063" title="REST API: Cast revision author ID to int.
The `post_author` field is ..."&gt;40063&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Cast revision author ID to int.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;post_author&lt;/code&gt; field is a string internally, but we need to cast it to an integer in the REST API.  This was already done for posts, but not for revisions.  The field is already declared as an integer in both controllers.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39871" title="#39871: defect (bug): REST API: Revision author ID is returned as a string (closed: fixed)"&gt;#39871&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40063]: REST API: Cast revision author ID to int.  The `post_author` field is ...</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 16 Feb 2017 20:08:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40063</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40063/1487275703279902</guid>
      <description>&lt;p&gt;
REST API: Cast revision author ID to int.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;post_author&lt;/code&gt; field is a string internally, but we need to cast it to an integer in the REST API.  This was already done for posts, but not for revisions.  The field is already declared as an integer in both controllers.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39871" title="#39871: defect (bug): REST API: Revision author ID is returned as a string (closed: fixed)"&gt;#39871&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39894 (JS heartbeat can run before ready causing exception) updated</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Thu, 16 Feb 2017 19:47:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39894#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39894#comment:1/1487274433879569</guid>
      <description>&lt;p&gt;
@programmin
&lt;/p&gt;
&lt;p&gt;
So seem like that is on &lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/js/wp-auth-check.js#L99"&gt;https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/js/wp-auth-check.js#L99&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12423 (Include default code editor) updated</title>
      
        <dc:creator>WraithKenny</dc:creator>

      <pubDate>Thu, 16 Feb 2017 19:43:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12423#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12423#comment:37/1487274225769318</guid>
      <description>&lt;p&gt;
Why not have a link/btn, much like "skip to main" that says, "disable highlighting for accessibility?"
&lt;/p&gt;
&lt;p&gt;
This way, the enhancement wouldn't negatively impact users in any way.
&lt;/p&gt;
&lt;p&gt;
P.S. or as @FolioVision said, "Disable Visual Editor"user option sounds good.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>heartbeat before ready.png attached to Ticket #39894</title>
      
        <dc:creator>programmin</dc:creator>

      <pubDate>Thu, 16 Feb 2017 19:29:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39894/heartbeat%20before%20ready.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39894/heartbeat%20before%20ready.png/1487273383163195</guid>
      <description>&lt;p&gt;
Example
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39894 (JS heartbeat can run before ready causing exception) created</title>
      
        <dc:creator>programmin</dc:creator>

      <pubDate>Thu, 16 Feb 2017 19:29:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39894</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39894/1487273345859597</guid>
      <description>&lt;p&gt;
Sometimes where my page is loading slowly I can get the error attached, where the element isn't yet available.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #12423 (Include default code editor) updated</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Thu, 16 Feb 2017 19:28:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12423#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12423#comment:36/1487273337217680</guid>
      <description>&lt;p&gt;
In relation to ACE and screen readers I did see this issue.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/ajaxorg/ace/issues/2164"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/ajaxorg/ace/issues/2164&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39893 (Header Media: YouTube Embed Does Not Fill Screen) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 16 Feb 2017 19:24:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39893#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39893#comment:1/1487273092688843</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12423 (Include default code editor) updated</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Thu, 16 Feb 2017 18:51:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12423#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12423#comment:35/1487271102643860</guid>
      <description>&lt;p&gt;
Thanks for these notes Andrea.
&lt;/p&gt;
&lt;p&gt;
Off the top, I always liked the ACE Code Editor. That said, it does seem to me that we could work around CodeMirror issue with screen readers. Either we could choose to mirror the content out to &lt;code&gt;contentEditable&lt;/code&gt; or there could be an alternative source code editor provided when a screen reader editor for screen editors it seems to me would have widely different requirements for ideal behaviour than a visual screen editor.
&lt;/p&gt;
&lt;p&gt;
Perhaps we could really improve the accessibility performance via automated substitution. There could be a hidden manual switch picked up by all screen readers just in case the automatic one doesn't trigger. Moreover, screen reader editing would be an ideal preference to pair with "Disable Visual Editor" in WordPress user profile.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39893 (Header Media: YouTube Embed Does Not Fill Screen) created</title>
      
        <dc:creator>cingrosso</dc:creator>

      <pubDate>Thu, 16 Feb 2017 18:47:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39893</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39893/1487270851274572</guid>
      <description>&lt;p&gt;
Hi.
I was really excited to see 2017 in action and thought a great deal of the video header feature, but my expectations were dashed when I realised that the promise of anamorphic images and videos automatically stretching to full screen in the header just did not materialise, despite using all the precautions, guidelines and recommendations suggested in the theme: 2000x1200 as per image, .mp4, etc. It seems that no matter what video link from YT I tried the image will stretch, but the video will not.
Is there a solution to this or is it just me?
You can see a brand new installation with no extra plugins, scripts or other potentially interfering code in the way, here: &lt;a class="ext-link" href="http://2ud.biz/dev/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://2ud.biz/dev/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks in advance
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #28536 (Add browser history and deep linking for navigation in Customizer preview) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 16 Feb 2017 18:29:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28536#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28536#comment:49/1487269768378620</guid>
      <description>&lt;p&gt;
Tentatively we're thinking to use the functionality as it exists in the feature plugin which only applies when customize-loader is not used, and also to remove customize-loader from being used in core. Currently the customize-loader is used on the themes admin screen and for the Customize button on the admin dashboard, but it is not technically needed and it adds a lot of complexity which makes browser history in the customizer challenging. The primary gain in using customize-loader is that exiting the customizer is very fast because it just means an iframe is removed from the document. On the themes admin screen, which uses JS for theme search, also manipulates the browser history so returning to the themes admin will already restore the previous search. We'll have to evaluate the pros and cons.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39875 (PDF previews overwrite existing images with the same name.) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 16 Feb 2017 18:25:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39875#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39875#comment:1/1487269539478663</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Just did some testing locally and I was able to reproduce it using the steps specified.
&lt;/p&gt;
&lt;p&gt;
I tested the reverse scenario by uploading a PDF named &lt;code&gt;test.pdf&lt;/code&gt; first followed by uploading a JPG named &lt;code&gt;test.jpg&lt;/code&gt;) and the JPG was renamed to &lt;code&gt;test-1.jpg&lt;/code&gt; correctly.
&lt;/p&gt;
&lt;p&gt;
Not all thumbnail sizes are overwritten when this bug occurs, but the main issue here is that the original &lt;code&gt;test.jpg&lt;/code&gt; file is always overwritten by the PDF preview image.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39892 (Default value in Additional CSS) updated</title>
      
        <dc:creator>denisco</dc:creator>

      <pubDate>Thu, 16 Feb 2017 18:05:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39892#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39892#comment:1/1487268356376165</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38685" title="#38685: defect (bug): Replace custom CSS placeholder with default value (closed: fixed)"&gt;#38685&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38493" title="#38493: enhancement: Additional CSS: Add Description (closed: fixed)"&gt;#38493&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>2017-02-16_184629.jpg attached to Ticket #39892</title>
      
        <dc:creator>denisco</dc:creator>

      <pubDate>Thu, 16 Feb 2017 18:03:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39892/2017-02-16_184629.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39892/2017-02-16_184629.jpg/1487268199415541</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39892 (Default value in Additional CSS) created</title>
      
        <dc:creator>denisco</dc:creator>

      <pubDate>Thu, 16 Feb 2017 18:02:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39892</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39892/1487268169086940</guid>
      <description>&lt;p&gt;
In support forum, I was faced with the fact that users do not understand that default value is a comment and try to paste the code into it. Maybe we need to return placheholder attribute without comment tags or implement in some other way.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39889 (Improve/Fix REST Response on Multisite when an endpoint for a ...) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 16 Feb 2017 17:52:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39889#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39889#comment:1/1487267559081233</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I am +1 on fixing this - the REST API should return a JSON 404 in the same style as the rest of our &lt;code&gt;WP_Error&lt;/code&gt; responses.
&lt;/p&gt;
&lt;p&gt;
The question is how.  May be tricky depending on how early the current 404 is returned.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39846 (Protocol agnostic links like //foo.com produce login loop reporting ...) updated</title>
      
        <dc:creator>dfavor</dc:creator>

      <pubDate>Thu, 16 Feb 2017 17:42:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39846#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39846#comment:3/1487266924720714</guid>
      <description>&lt;p&gt;
@SergeyBiryukov - Thanks. Missed the duplicate ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31089 (Customize: Add revisions for changesets) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 16 Feb 2017 17:26:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31089#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31089#comment:24/1487265989638830</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39389 (Customize: Make sure selective refreshed partial placement is scrolled ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 16 Feb 2017 17:11:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39389#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39389#comment:13/1487265065633411</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by melchoyce. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1487265062002089"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39891 (Chrome rendering issue with Customizer, widgets, and checked radios) created</title>
      
        <dc:creator>joelworsham</dc:creator>

      <pubDate>Thu, 16 Feb 2017 16:38:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39891</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39891/1487263139169722</guid>
      <description>&lt;p&gt;
Steps to reproduce:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Open up Chrome (at least on Mac, have not tested on PC)
&lt;/li&gt;&lt;li&gt;Open up the Customizer
&lt;/li&gt;&lt;li&gt;Edit any sidebar
&lt;/li&gt;&lt;li&gt;Add any widget &lt;strong&gt;that contains at least one radio field that is checked&lt;/strong&gt;
&lt;/li&gt;&lt;li&gt;Reduce the height of the browser window until a vertical scrollbar appears in the pane
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Once the vertical scrollbar appears, the entire pane vanishes.
&lt;/p&gt;
&lt;p&gt;
Upon further investigation, it appears to be Chrome "max-width paint" type issue. Basically, the checked radio element sets a &lt;code&gt;text-indent&lt;/code&gt; of &lt;code&gt;-9999px&lt;/code&gt; on the &lt;code&gt;:before&lt;/code&gt; item to hide the browser rendered checkmark. It seems that this expands the width of the painted area very very far to the left (outside the visible window). I say this because if you mess around with the indent by lowering it, eventually the bug disappears. You can even see the right side of the painted area vanish (screencast attached showing this below).
&lt;/p&gt;
&lt;p&gt;
Here's some CSS changes I tried that fixed it:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Lower the text-indent to something higher (as in smaller negative number) than about &lt;code&gt;-8000px&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Set the &lt;code&gt;.widget&lt;/code&gt; element position to &lt;code&gt;static&lt;/code&gt;
(previously set to &lt;code&gt;relative&lt;/code&gt;)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Here's some screencasts:
&lt;/p&gt;
&lt;p&gt;
Detailing how to create the bug:
&lt;a style="padding:0; border:none" href="http://d.pr/i/WEil+"&gt;&lt;img src="http://d.pr/i/WEil+" alt="http://d.pr/i/WEil+" crossorigin="anonymous" title="http://d.pr/i/WEil+" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Example showing why I think it's some sort of "max paint width" rendering issue:
&lt;a style="padding:0; border:none" href="http://d.pr/i/gLzq+"&gt;&lt;img src="http://d.pr/i/gLzq+" alt="http://d.pr/i/gLzq+" crossorigin="anonymous" title="http://d.pr/i/gLzq+" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Example showing how setting the &lt;code&gt;position&lt;/code&gt; on the &lt;code&gt;.widget&lt;/code&gt; item to &lt;code&gt;static&lt;/code&gt; fixes things:
&lt;a style="padding:0; border:none" href="http://d.pr/i/4P9a+"&gt;&lt;img src="http://d.pr/i/4P9a+" alt="http://d.pr/i/4P9a+" crossorigin="anonymous" title="http://d.pr/i/4P9a+" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39890 (Fix return value type of wp_nav_menu) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 16 Feb 2017 16:08:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39890#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39890#comment:3/1487261316612129</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40062" title="Docs: Correct `@return` value type for `wp_nav_menu()`.
Props chesio. ..."&gt;40062&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Correct &lt;code&gt;@return&lt;/code&gt; value type for &lt;code&gt;wp_nav_menu()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props chesio.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39890" title="#39890: defect (bug): Fix return value type of wp_nav_menu (closed: fixed)"&gt;#39890&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40062]: Docs: Correct `@return` value type for `wp_nav_menu()`.  Props chesio. ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 16 Feb 2017 16:08:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40062</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40062/1487261316135943</guid>
      <description>&lt;p&gt;
Docs: Correct &lt;code&gt;@return&lt;/code&gt; value type for &lt;code&gt;wp_nav_menu()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props chesio.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39890" title="#39890: defect (bug): Fix return value type of wp_nav_menu (closed: fixed)"&gt;#39890&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39890 (Fix return value type of wp_nav_menu) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 16 Feb 2017 16:08:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39890#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39890#comment:2/1487261308679524</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39890 (Fix return value type of wp_nav_menu) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 16 Feb 2017 16:05:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39890#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39890#comment:1/1487261131414201</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>39890.patch attached to Ticket #39890</title>
      
        <dc:creator>chesio</dc:creator>

      <pubDate>Thu, 16 Feb 2017 16:04:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39890/39890.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39890/39890.patch/1487261084144399</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39890 (Fix return value type of wp_nav_menu) created</title>
      
        <dc:creator>chesio</dc:creator>

      <pubDate>Thu, 16 Feb 2017 16:04:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39890</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39890/1487261044005887</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
Return value type for wp_nav_menu should be &lt;code&gt;string|false|void&lt;/code&gt;, not &lt;code&gt;object|false|void&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Cheers,
Česlav
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39889 (Improve/Fix REST Response on Multisite when an endpoint for a ...) created</title>
      
        <dc:creator>nerrad</dc:creator>

      <pubDate>Thu, 16 Feb 2017 15:52:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39889</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39889/1487260374780679</guid>
      <description>&lt;p&gt;
Currently if you hit the endpoint for a domain on a site that doesn't exist it will behave the same as on a normal request.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;visit &lt;a class="ext-link" href="https://nonexistentsubdomain.eventsmart.com/wp-json"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://nonexistentsubdomain.eventsmart.com/wp-json&lt;/a&gt; in a REST client.
&lt;/li&gt;&lt;li&gt;Take note of the "Location" header in the response: &lt;a class="ext-link" href="https://eventsmart.com/wp-signup.php?new=nonexistentsite"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://eventsmart.com/wp-signup.php?new=nonexistentsite&lt;/a&gt;.  It's also returned with a HTTP 302
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Granted this is kind of edgecase, but I think it'd be better to handle things a bit better on REST requests.  The question is how?  I think from the standpoint of the REST client it'd be better to just return a 404 and a "site doesnt' exist" message (or something to that affect).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21666 (Customizer reset/undo/revert) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 16 Feb 2017 15:39:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21666#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21666#comment:35/1487259546053003</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21666#comment:34" title="Comment 34"&gt;folletto&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In the case of revisions inside a changeset, consider where a user starts making changes and then saves a draft or sends the URL off for someone else to iterate on; each time a user saves a draft of the changeset, a new revision can be made. These revisions are for changes that haven't been published yet, whereas the contents of previously published changesets are.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This feels a lot to expose in a general UI. Can't we start with the design above, and then leave the sub-changeset (revisions inside a changeset) for plugins?
&lt;/p&gt;
&lt;p&gt;
If it's possible, we can review the behaviour of the sharing URL in this context while we iterate.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Inspecting Revisions
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree this could be nice, but I'd probably mirror the question above on being maybe plugin territory, or at the very least can be explored in an incremental step of this feature.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree with keeping this small and focused on the mockup for now, with new featured introduced incrementally in future iterations. Let's try to get smaller features out the door so we don't get bogged down in the bigger details. IMO it's easier to release something focused but still a good feature in itself, then iterate to make it more full-featured. Think of it like &lt;a class="ext-link" href="https://medium.com/@awilkinson/skateboard-bike-car-6bec841ed96e#.9nt1drwhn"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;releasing a skateboard&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>gonom9</dc:creator>

      <pubDate>Thu, 16 Feb 2017 15:31:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:98</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:98/1487259109907324</guid>
      <description>&lt;p&gt;
Thanks to @afercia the code look neater. :)
&lt;/p&gt;
&lt;p&gt;
Changes in new patch:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Add support for image caption&lt;/strong&gt;
&lt;/li&gt;&lt;li&gt;Clean up PHP and JS code style to meet the WP coding standard.
&lt;/li&gt;&lt;li&gt;Update &lt;code&gt;@since&lt;/code&gt; notations
&lt;/li&gt;&lt;li&gt;A11y: "Select Media" becomes a real button.
&lt;/li&gt;&lt;li&gt;Usability: show media type filters in the media modal.
&lt;/li&gt;&lt;li&gt;JS: all strings are translated.
&lt;/li&gt;&lt;li&gt;PHP: no longer use &lt;code&gt;extract()&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>32417.8.diff attached to Ticket #32417</title>
      
        <dc:creator>gonom9</dc:creator>

      <pubDate>Thu, 16 Feb 2017 15:31:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32417/32417.8.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32417/32417.8.diff/1487259078123956</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39693 (Fix missing assignment of widgets on theme switch) updated</title>
      
        <dc:creator>folletto</dc:creator>

      <pubDate>Thu, 16 Feb 2017 15:19:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39693#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39693#comment:17/1487258364867623</guid>
      <description>&lt;p&gt;
I didn't know there was a more specific ticket. So this is just about the re-assignment logic the other instead is about what happens when the reassignment logic can't find a spot? Ok.
&lt;/p&gt;
&lt;p&gt;
Cross posted there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27404 (Widget Customizer: Allow adding inactive widgets to widget areas) updated</title>
      
        <dc:creator>folletto</dc:creator>

      <pubDate>Thu, 16 Feb 2017 15:19:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27404#comment:55</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27404#comment:55/1487258340266464</guid>
      <description>&lt;p&gt;
Sorry, I posted the mock on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39693" title="#39693: enhancement: Fix missing assignment of widgets on theme switch (closed: fixed)"&gt;#39693&lt;/a&gt;, I wasn't aware of a more specific issue here.
&lt;/p&gt;
&lt;p&gt;
The mockup above does a simple implementation of the suggestion above:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote&gt;
&lt;p&gt;
It would be very useful if widgets that were made inactive as part of a theme switch could be grouped in a way to easily batch-add them to a sidebar in the new theme.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
From the other ticket: the goal here is exclusively to provide access to widgets that were dropped during a theme switch (or any other reason) with the additional restriction of having minimal impact.
Features of the "Presets" i2 concept:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Inactive widgets have a special separated area in the "Add a widget" panel.
&lt;/li&gt;&lt;li&gt;They are searchable as the other widgets, content included if possible
&lt;/li&gt;&lt;li&gt;They can be removed, and the removal has an extra trick here: one can position the mouse in the top-right X and keep clicking, removing all the inactive widgets easily in sequence (we probably need a form of undo for the ideal experience).
&lt;/li&gt;&lt;li&gt;The second line of the widget instead of showing the details shows when they were removed, thus giving a simple indication of how old a widget is.
&lt;/li&gt;&lt;li&gt;I avoided subtitle labels for the sections, but we can introduce them if we want. The current state might still work well enough.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
That's all. It's an approach "low key" enough to be effective, but at the same time very visible as it's inside the main "Add" flow: a user that "lost" a widget will get there, even just because they have to re-add them.
&lt;/p&gt;
&lt;p&gt;
Given the idea of groups as well, the mockup above is able to scale later to be grouped as needed, and folded, and so on.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>customizer-widget-presets-i2.png attached to Ticket #27404</title>
      
        <dc:creator>folletto</dc:creator>

      <pubDate>Thu, 16 Feb 2017 15:15:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27404/customizer-widget-presets-i2.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27404/customizer-widget-presets-i2.png/1487258118890902</guid>
      <description>&lt;p&gt;
Customizer widgets "Presets" area i2
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39693 (Fix missing assignment of widgets on theme switch) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 16 Feb 2017 15:07:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39693#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39693#comment:16/1487257657841830</guid>
      <description>&lt;p&gt;
My only concern is, does it become unwieldy if you had a bunch of widgets? But I think we can figure that out via testing, and with better widget switching in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39693" title="#39693: enhancement: Fix missing assignment of widgets on theme switch (closed: fixed)"&gt;#39693&lt;/a&gt;, that might not even be a big issue. Let's try it.
&lt;/p&gt;
&lt;p&gt;
Worth including what theme you were using it with, or nah?
&lt;/p&gt;
&lt;p&gt;
Edit: this is &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39693" title="#39693: enhancement: Fix missing assignment of widgets on theme switch (closed: fixed)"&gt;#39693&lt;/a&gt;. 😑 For some reason I thought we were in &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/27404" title="#27404: feature request: Widget Customizer: Allow adding inactive widgets to widget areas (assigned)"&gt;#27404&lt;/a&gt;. Want to move the mockup over to that ticket, @folletto?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32296 (Customize: Increase width of controls pane to give more room on high ...) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 16 Feb 2017 14:32:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32296#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32296#comment:51/1487255530660744</guid>
      <description>&lt;p&gt;
Also, can someone add a screenshot of the patch on a super wide monitor? (I just made my browser wider, but I have a small screen, so I couldn't get the full effect.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32296 (Customize: Increase width of controls pane to give more room on high ...) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 16 Feb 2017 14:31:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32296#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32296#comment:50/1487255478082808</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/32296/32296.diff" title="Attachment '32296.diff' in Ticket #32296"&gt;32296.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/32296/32296.diff" title="Download"&gt;​&lt;/a&gt; feels like a good short-term compromise. I'd be fine with merging it and exploring a more flexible solution later this year, pending any structural changes to the Customizer.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39888 (Right after delete author - PHP notices on '%s is currently editing') updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 16 Feb 2017 14:25:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39888#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39888#comment:2/1487255144203464</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;code&gt;wp_check_post_lock()&lt;/code&gt; could check if the user ID exists and return false otherwise.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39879 (wp_get_sites() with a false limit no longer returns all sites) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 16 Feb 2017 14:15:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39879#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39879#comment:2/1487254503759319</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12423 (Include default code editor) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 16 Feb 2017 11:54:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12423#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12423#comment:34/1487246041826601</guid>
      <description>&lt;p&gt;
Just to confirm what was discussed on Slack yesterday (see link to the Slack logs above), here's a couple screenshots. Worth noting these kind of editors should be tested on Windows with NVDA or JAWS or other Windows screen readers, since VoiceOver uses a different interaction model.
&lt;/p&gt;
&lt;p&gt;
As @westonruter pointed out, CodeMirror &lt;a class="ext-link" href="http://codemirror.net/doc/internals.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;does not use contentEditable internally&lt;/a&gt;. Also, it "decouples" the underlying textarea from the presentation of the content. Basically the textarea is almost always empty.
&lt;/p&gt;
&lt;p&gt;
Using a screen reader, when navigating content in "browse mode" (e.g. using the arrow keys): the textarea is hidden just visually so screen readers announce it and it's empty. After the textarea, the presentation of the editor content is announced as it was normal text in the page:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/PwxwgTpEkD.png"&gt;&lt;img src="https://cldup.com/PwxwgTpEkD.png" alt="https://cldup.com/PwxwgTpEkD.png" crossorigin="anonymous" title="https://cldup.com/PwxwgTpEkD.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
When entering "forms mode" to operate inside the textarea, there's no content at all. As said, the textarea is initially empty and screen readers just announce "blank":
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/byJgt9dNxW.png"&gt;&lt;img src="https://cldup.com/byJgt9dNxW.png" alt="https://cldup.com/byJgt9dNxW.png" crossorigin="anonymous" title="https://cldup.com/byJgt9dNxW.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It is possible to enter content in the textarea, and the visual presentation gets updated with the new content but when trying to read out what you just entered, the textarea is empty again. This is because, in non-technical terms, CodeMirror clears out the textarea as soon as the arrows keys or Enter get pressed, since it needs to move the cursor in the visual presentation of the content.
&lt;/p&gt;
&lt;p&gt;
Quick video where I've made the CodeMirror textarea visible to illustrate what happens under the hood: &lt;a class="ext-link" href="https://cloudup.com/iQRX47naOxY"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/iQRX47naOxY&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39888 (Right after delete author - PHP notices on '%s is currently editing') updated</title>
      
        <dc:creator>esemlabel</dc:creator>

      <pubDate>Thu, 16 Feb 2017 11:53:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39888#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39888#comment:1/1487246032342595</guid>
      <description>&lt;p&gt;
Maybe need both to remove: _edit_lock and _edit_last or just _edit_last, which contains user ID
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39888 (Right after delete author - PHP notices on '%s is currently editing') created</title>
      
        <dc:creator>esemlabel</dc:creator>

      <pubDate>Thu, 16 Feb 2017 11:14:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39888</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39888/1487243652529871</guid>
      <description>&lt;p&gt;
After deleting autor, who has just edited some post, the error will occur in the next few minutes in posts list table:
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;PHP Notice:  Trying to get property of non-object in \wp-admin\includes\class-wp-posts-list-table.php on line 910&lt;/em&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$locked_text = esc_html( sprintf( __( '%s is currently editing' ), $lock_holder-&amp;gt;display_name ) );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Need some fix to immediately remove edit_lock meta with deleted author id from posts.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39264 (Add WP-API JS Client unit tests to core) reopened</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 16 Feb 2017 10:12:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39264#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39264#comment:35/1487239978242828</guid>
      <description>&lt;p&gt;
See &lt;a class="ext-link" href="https://wordpress.slack.com/conversation/core-restapi/p1487181499004418"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack thread&lt;/a&gt;, &lt;code&gt;JSON_UNESCAPED_SLASHES﻿⁠⁠⁠⁠&lt;/code&gt; isn't available for PHP &amp;lt; 5.4.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39887 (function  of  wp_editor) updated</title>
      
        <dc:creator>kkking</dc:creator>

      <pubDate>Thu, 16 Feb 2017 10:02:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39887#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39887#comment:4/1487239364844028</guid>
      <description>&lt;p&gt;
@swissspidy
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action( 'add_meta_boxes', function(){
    $key  = "test";
    $key1 = "test1";
    add_meta_box($key1,'test',function($post)use($key){
        wp_editor('', $key);
    });
} );
&lt;/pre&gt;&lt;p&gt;
I find if &lt;code&gt;$key&lt;/code&gt; equal &lt;code&gt;$key1&lt;/code&gt;,it's show &lt;a style="padding:0; border:none" href="http://ww2.sinaimg.cn/large/0060lm7Tgy1fcsg0pzpohj31490e8747.jpg"&gt;&lt;img src="http://ww2.sinaimg.cn/large/0060lm7Tgy1fcsg0pzpohj31490e8747.jpg" alt="http://ww2.sinaimg.cn/large/0060lm7Tgy1fcsg0pzpohj31490e8747.jpg" crossorigin="anonymous" title="http://ww2.sinaimg.cn/large/0060lm7Tgy1fcsg0pzpohj31490e8747.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #19173,​39887 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 16 Feb 2017 09:50:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=19173%2C39887</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=19173%2C39887/1487238637822681</guid>
      <description>duplicate: &lt;p&gt;
Ah thanks, now I see what you mean.
&lt;/p&gt;
&lt;p&gt;
This issue is being tracked in &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/19173" title="#19173: defect (bug): Issues with wp_editor() when used inside of a meta box. (reopened)"&gt;#19173&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
From the comments there:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
wp_editor() shouldn't be used in a metabox. do_action('edit_page_form') or do_action('edit_form_advanced') are the proper places for it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This only applies for wp_editor() with the visual editor enabled. HTML-only should be fine.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #39885 (Wordpress editor is not accessible on the Mac using VoiceOver) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 16 Feb 2017 09:48:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39885#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39885#comment:2/1487238488773954</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hello @zhenikar and welcome to Trac! Which browser are you using together with VoiceOver? Unfortunately not all browsers and screen readers combinations work well in the editor (and also outside of the editor). The recommended browser for VoiceOver is Safari. Though navigation through text in the editor is sometimes difficult, most of the VoiceOver shortcuts for reading text work decently with Safari 10, at least for me.
&lt;/p&gt;
&lt;p&gt;
Instead, when I try to use VoiceOver with Chrome, I can reproduce some of the issues you described. As far as I know, they're working to improve Chrome compatibility with VoiceOver, see for example this ticket on the Chromium bug tracker: &lt;a class="ext-link" href="https://bugs.chromium.org/p/chromium/issues/detail?id=530826"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://bugs.chromium.org/p/chromium/issues/detail?id=530826&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
If this is not the case, could you please describe your setup and workflow?
&lt;/p&gt;
&lt;p&gt;
I'd also suggest to try the "Text mode". The editor has two modes: "Visual" and "Text". Before the editor, there are two buttons to switch mode. The "Text" mode gives you an ordinary textarea that should be simpler to use.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39887 (function  of  wp_editor) updated</title>
      
        <dc:creator>kkking</dc:creator>

      <pubDate>Thu, 16 Feb 2017 09:35:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39887#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39887#comment:2/1487237711223678</guid>
      <description>&lt;p&gt;
@swissspidy
&lt;/p&gt;
&lt;p&gt;
hello ，I put this code to functions.php
&lt;/p&gt;
&lt;p&gt;
open "wp-admin/post-new.php"
&lt;/p&gt;
&lt;p&gt;
it show like  this image
&lt;a style="padding:0; border:none" href="http://ww2.sinaimg.cn/large/0060lm7Tgy1fcsg0pzpohj31490e8747.jpg"&gt;&lt;img src="http://ww2.sinaimg.cn/large/0060lm7Tgy1fcsg0pzpohj31490e8747.jpg" alt="http://ww2.sinaimg.cn/large/0060lm7Tgy1fcsg0pzpohj31490e8747.jpg" crossorigin="anonymous" title="http://ww2.sinaimg.cn/large/0060lm7Tgy1fcsg0pzpohj31490e8747.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39885 (Wordpress editor is not accessible on the Mac using VoiceOver) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Thu, 16 Feb 2017 09:14:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39885#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39885#comment:1/1487236472055422</guid>
      <description>&lt;p&gt;
Hi zhenikar!
&lt;/p&gt;
&lt;p&gt;
Welcome to Trac! Thanks for reporting this problem, we'd be happy to try to make the editor more accessible. Did this problem start recently, or has it always been like this? Which browser are you using VoiceOver with? It'd be good to know so we can reproduce the issues. What other program are you using to create the page before pasting it into WordPress? It sounds like we could learn a lot from that program to make WordPress work better for you. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39887 (function  of  wp_editor) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 16 Feb 2017 08:59:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39887#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39887#comment:1/1487235550593882</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hey there,
&lt;/p&gt;
&lt;p&gt;
Welcome to Trac! What exactly is the problem with &lt;code&gt;wp_editor()&lt;/code&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39887 (function  of  wp_editor) created</title>
      
        <dc:creator>kkking</dc:creator>

      <pubDate>Thu, 16 Feb 2017 08:54:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39887</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39887/1487235241611328</guid>
      <description>&lt;pre class="wiki"&gt;add_action( 'add_meta_boxes', function(){
    $key = "test";
    add_meta_box($key,'test',function() use($key){
        wp_editor('', $key);
    });
} );
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #31818 (Uniform Search Form Display/Experience) updated</title>
      
        <dc:creator>rianrietveld</dc:creator>

      <pubDate>Thu, 16 Feb 2017 08:29:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31818#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31818#comment:24/1487233754582040</guid>
      <description>&lt;p&gt;
I wonder if many users know what a delay is and search for an option to change it if they think it's too short.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>formatting.diff attached to Ticket #32939</title>
      
        <dc:creator>Dualcube</dc:creator>

      <pubDate>Thu, 16 Feb 2017 07:46:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32939/formatting.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32939/formatting.diff/1487231164440808</guid>
      <description>&lt;p&gt;
We added a filter called update_locale_for_remove_accents which could be used to change the WP default locale for installations that want to make use of the special cases for hardcoded locales when those are different in their local installation.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39338 (class-wp-hook.php - apply_filters() infinite loop) updated</title>
      
        <dc:creator>frettled</dc:creator>

      <pubDate>Thu, 16 Feb 2017 07:40:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39338#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39338#comment:25/1487230834507952</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39338#comment:23" title="Comment 23"&gt;gitlost&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It's been said before but I'll repeat it:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$frettld_doesnt_see&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$frettld_doesnt_see&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"There is no infinite loop unless WP_Hook is in some unstable condition."&lt;/span&gt;
        &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"How does WP_Hook get into some unstable condition?"&lt;/span&gt;
        &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Nobody knows."&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;
Jeez.
&lt;/p&gt;
&lt;p&gt;
Thanks for antagonizing me, and for making this a really nice and hostile enviroment for reports.
&lt;/p&gt;
&lt;p&gt;
I'll be sure to let others know how you treat people here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39886 (Invalid jQuery Live Event in handlers.min.js file.) created</title>
      
        <dc:creator>MMDeveloper</dc:creator>

      <pubDate>Thu, 16 Feb 2017 07:03:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39886</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39886/1487228584699714</guid>
      <description>&lt;p&gt;
Go to wp-includes/js/swfupload/handlers.min.js
&lt;/p&gt;
&lt;p&gt;
At bottom of file you will see reference to ".live(" jquery event, which no longer exists. This jQuery event should be renamed to ".on(". This is a small change that is required.
&lt;/p&gt;
&lt;p&gt;
More info:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://api.jquery.com/live/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://api.jquery.com/live/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
As of jQuery 1.7, the .live() method is deprecated. Use .on() to attach event handlers.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39879 (wp_get_sites() with a false limit no longer returns all sites) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Thu, 16 Feb 2017 06:34:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39879#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39879#comment:1/1487226887735211</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;code&gt;39879.1.diff&lt;/code&gt; is a first pass at a test and fix. I haven't had time to test it thoroughly, though, so I'd appreciate more eyes on it.
&lt;/p&gt;
&lt;p&gt;
A new test wasn't actually required here; the existing tests would have caught this bug if a sufficient number of sites existed in the database. Creating that many sites introduces a performance issue to the test suite, though. The time required to run the &lt;code&gt;wp-get-site&lt;/code&gt; group increases from &lt;code&gt;~10&lt;/code&gt; seconds to &lt;code&gt;~50&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I don't have a good solution to that right now; does anyone have any ideas?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39879.1.diff attached to Ticket #39879</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Thu, 16 Feb 2017 06:28:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39879/39879.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39879/39879.1.diff/1487226506437443</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39671 (Customize: Further improve inline documentation) updated</title>
      
        <dc:creator>4nickpick</dc:creator>

      <pubDate>Thu, 16 Feb 2017 06:11:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39671#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39671#comment:9/1487225475493768</guid>
      <description>&lt;p&gt;
Still digging into the js end of Customizer. If there's any particularly bad file/method/section, or somewhere you think would be a good starting point, that would be helpful.
&lt;/p&gt;
&lt;p&gt;
I'm specifically looking into these files:
&lt;code&gt;customize-base.js&lt;/code&gt;
&lt;code&gt;customize-loader.js&lt;/code&gt;
&lt;code&gt;customize-models.js&lt;/code&gt;
&lt;code&gt;customize-preview.js&lt;/code&gt;
&lt;code&gt;customize-preview-nav-menus.js&lt;/code&gt;
&lt;code&gt;customize-preview-widgets.js&lt;/code&gt;
&lt;code&gt;customize-selective-refresh.js&lt;/code&gt;
&lt;code&gt;customize-views.js&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
A lot of methods missing docs completely, I'll be starting creating stubs for those.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39671-2.patch attached to Ticket #39671</title>
      
        <dc:creator>4nickpick</dc:creator>

      <pubDate>Thu, 16 Feb 2017 06:10:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39671/39671-2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39671/39671-2.patch/1487225429258325</guid>
      <description>&lt;p&gt;
tweak docs on Partial's &lt;code&gt;sanitize_js_callback&lt;/code&gt; argument
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36726 (Date Picker field label not translated after 4.5.1) updated</title>
      
        <dc:creator>ashokrane</dc:creator>

      <pubDate>Thu, 16 Feb 2017 05:06:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36726#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36726#comment:3/1487221595195100</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36726 (Date Picker field label not translated after 4.5.1) updated</title>
      
        <dc:creator>ashokrane</dc:creator>

      <pubDate>Thu, 16 Feb 2017 05:06:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36726#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36726#comment:2/1487221567302341</guid>
      <description>&lt;p&gt;
@rafa0192 Can you tell me whether the datepicker is in admin or frontend? And is the datepicker added via any plugin?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39885 (Wordpress editor is not accessible on the Mac using VoiceOver) created</title>
      
        <dc:creator>zhenikar</dc:creator>

      <pubDate>Thu, 16 Feb 2017 02:13:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39885</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39885/1487211235482334</guid>
      <description>&lt;p&gt;
I'm a blind Web developer and have a very difficult time using the Wordpress editor. When I am on the main editing pane, the screen reader does not read the contents of my text, nor does it stay in one place. Every time I do a carriage return, my cursor jumps to the top of the page--very frustrating. It also will not read anything but, "Blank line." Also frustrating.
&lt;/p&gt;
&lt;p&gt;
I need to create the page in another program and paste the code into Wordpress, but that also creates an issue when I need to edit a page.
&lt;/p&gt;
&lt;p&gt;
Maybe there is something I am missing to make the editor more accessible?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39869 (WP_Widget in FacebookPageFeedWidget is deprecated since version 4.3.0! Use) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 16 Feb 2017 01:15:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39869#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39869#comment:2/1487207758211192</guid>
      <description>&lt;i&gt;Resolution&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @developersba, this Trac is used for enhancements and bug reporting for the WordPress core software.
&lt;/p&gt;
&lt;p&gt;
Issues with a particular plugin should be reported to the plugin author.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39884 (Twenty Seventeen: No responsive menu, logo always has the same size) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 16 Feb 2017 00:42:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39884#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39884#comment:1/1487205722819953</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39884 (Twenty Seventeen: No responsive menu, logo always has the same size) created</title>
      
        <dc:creator>reinhardted</dc:creator>

      <pubDate>Thu, 16 Feb 2017 00:05:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39884</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39884/1487203510048144</guid>
      <description>&lt;p&gt;
in the website &lt;a class="ext-link" href="http://kraut-und-kochen.de"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://kraut-und-kochen.de&lt;/a&gt; - menu and logo work correctly
in the website &lt;a class="ext-link" href="http://praxis-szalay-kosaca.de"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://praxis-szalay-kosaca.de&lt;/a&gt; - menu and logo don't work
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item>
   </channel>
</rss>