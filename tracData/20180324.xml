<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #43622 (Improve error messages) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Sat, 24 Mar 2018 23:37:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43622#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43622#comment:1/1521934668359411</guid>
      <description>&lt;p&gt;
Here's a few more related tickets:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/16243" title="#16243: enhancement: Unhelpful error messages when updating default category (new)"&gt;#16243&lt;/a&gt; Unhelpful error messages when updating default category
&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/28845" title="#28845: enhancement: Better error messages when uploading theme as plugin and vice versa (new)"&gt;#28845&lt;/a&gt; Better error messages when uploading theme as plugin and vice versa
&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/33374" title="#33374: enhancement: Improvements for the messages visible in the plugin manager (new)"&gt;#33374&lt;/a&gt; Improvements for the messages visible in the plugin manager
&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/38669" title="#38669: defect (bug): Standardize &amp;#34;found in trash&amp;#34; messages (new)"&gt;#38669&lt;/a&gt; Standardize "found in trash" messages
&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/41142" title="#41142: defect (bug): Theme editing: inconstancies with messages between this and plugin editing (new)"&gt;#41142&lt;/a&gt; Theme editing: inconstancies with messages between this and plugin editing
&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/42269" title="#42269: enhancement: i18n: Unify permission error messages for content import/export (new)"&gt;#42269&lt;/a&gt; i18n: Unify permission error messages for content
&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/42735" title="#42735: enhancement: Add missing periods to some (error) messages (new)"&gt;#42735&lt;/a&gt; Add missing periods to some error messages
&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/42945" title="#42945: defect (bug): Not all error messages are capitalized (new)"&gt;#42945&lt;/a&gt; Not all error messages are capitalized
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43626 (Searching for tags using slugs work for English but does not work for ...) updated</title>
      
        <dc:creator>tobifjellner</dc:creator>

      <pubDate>Sat, 24 Mar 2018 20:32:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43626#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43626#comment:3/1521923532077822</guid>
      <description>&lt;p&gt;
Well. The tricky thing is that mostly people will be searching not for slugs, but rather for content... :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41242 (Image crop not working in mobile screen.) closed</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sat, 24 Mar 2018 20:25:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41242#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41242#comment:22/1521923108151307</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42874" title="Media: Fix image cropping on touch screen devices.
* In initCrop, ..."&gt;42874&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: Fix image cropping on touch screen devices.&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;In initCrop, handle touch events in addition to mouse events.
&lt;/li&gt;&lt;li&gt;In imageSelect jQuery plugin, accept event.which of 0 as provided by touch events.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Props yahil, alexgso, joemcgill.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42818" title="Media: Fix image cropping on touch screen devices.
* In initCrop, ..."&gt;[42818]&lt;/a&gt; to the 4.9 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41242" title="#41242: defect (bug): Image crop not working in mobile screen. (closed: fixed)"&gt;#41242&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42874]: Media: Fix image cropping on touch screen devices. * In initCrop, ...</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sat, 24 Mar 2018 20:25:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42874</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42874/1521923107641174</guid>
      <description>&lt;p&gt;
Media: Fix image cropping on touch screen devices.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;In initCrop, handle touch events in addition to mouse events.
&lt;/li&gt;&lt;li&gt;In imageSelect jQuery plugin, accept event.which of 0 as provided by touch events.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Props yahil, alexgso, joemcgill.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42818" title="Media: Fix image cropping on touch screen devices.
* In initCrop, ..."&gt;[42818]&lt;/a&gt; to the 4.9 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41242" title="#41242: defect (bug): Image crop not working in mobile screen. (closed: fixed)"&gt;#41242&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43626 (Searching for tags using slugs work for English but does not work for ...) updated</title>
      
        <dc:creator>ehabsan</dc:creator>

      <pubDate>Sat, 24 Mar 2018 19:38:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43626#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43626#comment:2/1521920303530622</guid>
      <description>&lt;p&gt;
Searching using the encoded slug actually worked :) that means a fix would be to encode the text before searching
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43578 (Unexpected MYSQL data format) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sat, 24 Mar 2018 18:58:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43578#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43578#comment:3/1521917888523766</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Interesting case.
&lt;/p&gt;
&lt;p&gt;
43578.diff makes sure that only built-in/core tables abide by the &lt;code&gt;field_types&lt;/code&gt; rules. Custom tables will always default formats to &lt;code&gt;%s&lt;/code&gt;, unless the developer specifically fiddled with &lt;code&gt;$wpdb-&amp;gt;field_types&lt;/code&gt; in some way.
&lt;/p&gt;
&lt;p&gt;
How it works, the first time &lt;code&gt;$wpdb-&amp;gt;process_field_formats()&lt;/code&gt; is called two internal (static) lists are built - one with the current tables (which is almost certainly going to only contain core tables), and one with the current field types (which is also almost certainly going to only containt core field types).
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;process_field_formats()&lt;/code&gt; now accepts a third ghost parameter (since it's protected we cannot just add it as a regular parameter since warnings are going to be thrown). A &lt;code&gt;_doing_it_wrong&lt;/code&gt; message is sent out to all subclasses not supplying the third parameter. The third parameter is the &lt;code&gt;$table&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
When the field formats are processed, we make sure that &lt;code&gt;$table&lt;/code&gt; is a built-in table before letting one of the &lt;code&gt;field_types&lt;/code&gt; supply the default format for a field. We also allow custom field overrides to be added to &lt;code&gt;field_types&lt;/code&gt;, these will be respected, except in cases where the field name matches a built-in field.
&lt;/p&gt;
&lt;pre class="wiki"&gt;// without patch
"INSERT INTO `wp_test` (`id`, `user_id`) VALUES (%s, %d)"
// with patch regular
"INSERT INTO `wp_test` (`id`, `user_id`) VALUES (%s, %s)"
// with patch custom field
$wpdb-&amp;gt;field_types['balance'] = '%d';
"INSERT INTO `wp_test` (`id`, `user_id`, `balance`) VALUES (%s, %s, %d)"
// with patch custom field collission
$wpdb-&amp;gt;field_types['user_id'] = '%d'; // not much sense, since it already exists
"INSERT INTO `wp_test` (`id`, `user_id`) VALUES (%s, %s)" // note the %s, drawback?
&lt;/pre&gt;&lt;p&gt;
It is probably a bad idea to reformat &lt;code&gt;$wpdb-&amp;gt;field_types&lt;/code&gt;, since it is public and can be changed or read by developers. Keeping it as is is crucial. One idea to overcome this limitation is make &lt;code&gt;$field_types&lt;/code&gt; an object that implements &lt;code&gt;ArrayAccess&lt;/code&gt;, and has an &lt;code&gt;add_field_type( $field, $format, $table )&lt;/code&gt; method. This is probably over-engineering, though.
&lt;/p&gt;
&lt;p&gt;
Thoughts?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43578.diff attached to Ticket #43578</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sat, 24 Mar 2018 18:57:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43578/43578.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43578/43578.diff/1521917841082206</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43569 (Post not updated in backend) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sat, 24 Mar 2018 16:45:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43569#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43569#comment:2/1521909937901226</guid>
      <description>&lt;p&gt;
Hi @emmeci , welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
This Trac is used for enhancements and bug reporting for the WordPress core software, not for individual support questions. Please try the &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/&lt;/a&gt; support forums to get help with your site.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43627 (Method call uses 2 parameters, but method signature uses 1 parameters) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 24 Mar 2018 16:42:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43627#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43627#comment:2/1521909772533947</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43627.diff attached to Ticket #43627</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sat, 24 Mar 2018 16:40:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43627/43627.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43627/43627.diff/1521909655489355</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43627 (Method call uses 2 parameters, but method signature uses 1 parameters) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 24 Mar 2018 16:38:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43627#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43627#comment:1/1521909521905478</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Previously: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24770" title="#24770: defect (bug): Function &amp;#34;do_items&amp;#34; calls &amp;#34;do_item&amp;#34; with an unexpected parameter (closed: invalid)"&gt;#24770&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is simple class inheritance. The &lt;code&gt;do_item()&lt;/code&gt; method in &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-includes/class.wp-dependencies.php#L59"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;class.wp-dependencies.php&lt;/a&gt; is a placeholder meant to be overwritten when extending the class. When handling scripts &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-includes/class.wp-scripts.php#L19"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WP_Dependencies is extended with WP_Scripts&lt;/a&gt;. So &lt;code&gt;$this-&amp;gt;do_item()&lt;/code&gt; executes the &lt;code&gt;do_item()&lt;/code&gt; method of &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-includes/class.wp-scripts.php#L77"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WP_Scripts&lt;/a&gt; that expects the second argument. (The WP_Dependencies::do_item() is still used in WP_Scripts but note how it's called with &lt;code&gt;parent::do_item($handle)&lt;/code&gt;.)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24770" title="#24770: defect (bug): Function &amp;#34;do_items&amp;#34; calls &amp;#34;do_item&amp;#34; with an unexpected parameter (closed: invalid)"&gt;#24770&lt;/a&gt; was not about the signature though, but rather about a missing &lt;code&gt;wp_footer()&lt;/code&gt; call in a theme.
&lt;/p&gt;
&lt;p&gt;
Let's use this ticket to add &lt;code&gt;$group&lt;/code&gt; parameter to &lt;code&gt;WP_Dependencies::do_item()&lt;/code&gt; for consistency with &lt;code&gt;WP_Scripts::do_item()&lt;/code&gt;, to avoid further confusion.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40245 (Youtube embeds lack title attribute) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 24 Mar 2018 14:03:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40245#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40245#comment:26/1521900201238393</guid>
      <description>&lt;p&gt;
If we‘re going to add that, I think that filter should be renamed to oembed_iframe_title_attribute or something. Also, it needs to be documented.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sat, 24 Mar 2018 13:35:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:40/1521898557292224</guid>
      <description>&lt;p&gt;
@azaozz
Great, I'll take a look!
&lt;/p&gt;
&lt;p&gt;
I like the idea of using the percentage method for shorter text, which the likely the majority use case. Ideally, when Gutenberg will also add localstorage support for autosaves and we can store those much more frequently.
&lt;/p&gt;
&lt;p&gt;
@aduth
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Finally, if we follow-through with this metric, would we want these thresholds to be filterable?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
A single filter at the end of the process that passes the difference calculation results (&lt;code&gt;wp_create_revision_for_api_autosave&lt;/code&gt; ) is sufficient for plugins to provide custom behavior based on the difference. An extra filter for the threshold by itself seems like overkill.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43614 (Tweak the Dashboard Gutenberg callout) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 24 Mar 2018 12:34:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43614#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43614#comment:7/1521894854644388</guid>
      <description>&lt;p&gt;
The previous GIF file size is about 1.5 MB, the new one about 1.2 MB. To my knowledge, since it's used in a &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element, browsers will always load the image, even in the responsive view when it's not actually displayed. I'm not sure there are ways to avoid this other than JavaScript hacks. I'd rather consider to use it as a background image set only in a CSS media query for large screens, if possible. Browsers are able to determine which assets to load based on media queries.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43626 (Searching for tags using slugs work for English but does not work for ...) updated</title>
      
        <dc:creator>tobifjellner</dc:creator>

      <pubDate>Sat, 24 Mar 2018 12:17:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43626#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43626#comment:1/1521893856868137</guid>
      <description>&lt;p&gt;
What happens if you search for the URLEncoded slug "%D8%B3%D9%84%D8%AC1"?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43627 (Method call uses 2 parameters, but method signature uses 1 parameters) created</title>
      
        <dc:creator>kaggdesign</dc:creator>

      <pubDate>Sat, 24 Mar 2018 09:59:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43627</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43627/1521885567269202</guid>
      <description>&lt;p&gt;
wp-includes/class.wp-dependencies.php, line 106
&lt;/p&gt;
&lt;p&gt;
Method do_item() called with 2 parameters:
&lt;/p&gt;
&lt;pre class="wiki"&gt;				if ( $this-&amp;gt;do_item( $handle, $group ) ) {
					$this-&amp;gt;done[] = $handle;
				}
&lt;/pre&gt;&lt;p&gt;
Method signature has 1 parameter (same file, line 125)
&lt;/p&gt;
&lt;pre class="wiki"&gt;	public function do_item( $handle ) {
		return isset( $this-&amp;gt;registered[ $handle ] );
	}
&lt;/pre&gt;&lt;p&gt;
Even taking into consideration further inheritance, second parameter $group should be added to method signature, to avoid code misunderstanding, and Code Smell warning in PhpStorm.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43454 (Add UI elements to make the user aware of image geo data) closed</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Sat, 24 Mar 2018 09:03:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43454#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43454#comment:8/1521882225478842</guid>
      <description>maybelater: &lt;p&gt;
@desrosj unfortunately, let's close this ticket along with &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9257" title="#9257: enhancement: EXIF GPS data (closed: maybelater)"&gt;#9257&lt;/a&gt; (GDPR Compliance).
This is plugin territory now :)
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43616 (Incorrect display settings when inserting images to posts) updated</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Sat, 24 Mar 2018 08:38:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43616#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43616#comment:1/1521880717161584</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43626 (Searching for tags using slugs work for English but does not work for ...) created</title>
      
        <dc:creator>ehabsan</dc:creator>

      <pubDate>Sat, 24 Mar 2018 07:37:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43626</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43626/1521877061790727</guid>
      <description>&lt;p&gt;
If i have created a tag with name: tag1 and slug: slug1 then searching for slug1 will return tag1 in the results, if i do the same thing but with Arabic then tag1 will not be returned.
&lt;/p&gt;
&lt;p&gt;
Which means that searching for tags using slugs work for English but not for Arabic - probably for all other languages that don't use English characters
&lt;/p&gt;
&lt;p&gt;
Here is how to reproduce the bug
1) create a new tag: name: tag1, slug: slug1
2) create a new tag: name: تاج1, slug:سلج1
3) search for tags using "slug1" phrase =&amp;gt; tag1 will be in the results
4)search for tags using "سلج1" phrase =&amp;gt; تاج1 will &lt;strong&gt;not&lt;/strong&gt; be in the results
&lt;/p&gt;
&lt;p&gt;
I have done the previous steps in a fresh installation of WordPress.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43625 (When there are invalid items in a menu, the customizer enters an ...) updated</title>
      
        <dc:creator>flamboyantpretender</dc:creator>

      <pubDate>Sat, 24 Mar 2018 07:02:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43625#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43625#comment:1/1521874930992041</guid>
      <description>&lt;p&gt;
Update: Can confirm, adding a page link to the menu and then later on removing that page renders a menu item "invalid".
&lt;/p&gt;
&lt;p&gt;
Update2: It seems the error is actually triggered by calling another outer file that echoes something, but the error gets fixed by removing the invalid menu item.
&lt;/p&gt;
&lt;p&gt;
I created a new file:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;?&lt;/span&gt;&lt;span class="nx"&gt;php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;echo_hey&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'hey'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Linked it up within my functions.php, as such:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;require_once&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;get_template_directory_uri&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/inc/echo_hello.php'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Then, within my header.php (or really anywhere), I called it:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;echo_hey&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
This printed the 'hey' but sent the Customizer into the refresh loop and generated this error at times:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;Warning&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Cannot&lt;/span&gt; &lt;span class="nx"&gt;modify&lt;/span&gt; &lt;span class="nx"&gt;header&lt;/span&gt; &lt;span class="nx"&gt;information&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;headers&lt;/span&gt; &lt;span class="nx"&gt;already&lt;/span&gt; &lt;span class="nx"&gt;sent&lt;/span&gt; &lt;span class="nx"&gt;by&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;output&lt;/span&gt; &lt;span class="nx"&gt;started&lt;/span&gt; &lt;span class="nx"&gt;at&lt;/span&gt; &lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;\xampp\htdocs\wordpress\wp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;content\themes\s&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;master\includes\Sprout\Contact\ContactBlock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;php&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;\xampp\htdocs\wordpress\wp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;admin\includes\misc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;php&lt;/span&gt; &lt;span class="nx"&gt;on&lt;/span&gt; &lt;span class="nx"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;1114&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Keep in mind that this is with &lt;strong&gt;output_buffering&lt;/strong&gt; set to &lt;strong&gt;Off&lt;/strong&gt; in the php.ini file, but if we allow a buffer of, say, 4096, this error dissapears, but the refresh bug still happens if we have an invalid menu item - but gets fixed if we remove the invalid menu item, as I've stated before.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43625 (When there are invalid items in a menu, the customizer enters an ...) created</title>
      
        <dc:creator>flamboyantpretender</dc:creator>

      <pubDate>Sat, 24 Mar 2018 06:54:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43625</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43625/1521874498115908</guid>
      <description>&lt;p&gt;
I had an issue where I echoed certain things on the homepage.
&lt;/p&gt;
&lt;p&gt;
Strangely enough, removing that part of code fixed it, but adding something that would 'echo' things out broke it again.
&lt;/p&gt;
&lt;p&gt;
Long story short, I decoupled every single thing in my theme and discovered that when you call &lt;code&gt;wp_nav_menu&lt;/code&gt;, like so:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
                            &lt;span class="nx"&gt;wp_nav_menu&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                                &lt;span class="s1"&gt;'theme_location'&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'menu-1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="s1"&gt;'menu_id'&lt;/span&gt;       &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'primary-menu'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="s1"&gt;'menu_class'&lt;/span&gt;    &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'menu szWeo1-unique-menu'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                &lt;span class="s1"&gt;'container'&lt;/span&gt;        &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'false'&lt;/span&gt;
                            &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
but there are invalid items &lt;em&gt;(removed pages or so, &lt;strong&gt;I believe&lt;/strong&gt;)&lt;/em&gt; within that menu, the Customizer enters an infinite refresh loop and it tries to re-render that menu, but gets stuck, aborts and repeats.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Replication should be easy&lt;/strong&gt;,  simply create an item in the menu that corresponds to a page, then delete that page. This should render the item within the menu "invalid". I can't exactly say that this will work, but please do contribute if you know a way of rendering these items invalid in a consistent way.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>43624.patch attached to Ticket #43624</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Sat, 24 Mar 2018 03:58:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43624/43624.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43624/43624.patch/1521863923422882</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43624 (Pass EXIF data to the wp_read_image_metadata filter) created</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Sat, 24 Mar 2018 03:57:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43624</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43624/1521863865758808</guid>
      <description>&lt;p&gt;
Currently, if a function hooking into &lt;code&gt;wp_read_image_metadata&lt;/code&gt; wants to use the image's EXIF data to change the attachment meta, it needs to check and reprocess the EXIF data using &lt;code&gt;exif_read_data()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
The processed EXIF data should just be made available through the filter hook.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43623 (your lawyers can help site, run by word press, needs to be update or ...) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sat, 24 Mar 2018 03:30:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43623#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43623#comment:1/1521862237978698</guid>
      <description>invalid: &lt;p&gt;
WordPress is software for publishing a website. WordPress doesn't host or control the content of any websites that are published using it. You'll need to directly contact the owner of the website in this case.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43623 (your lawyers can help site, run by word press, needs to be update or ...) created</title>
      
        <dc:creator>tanbarrister</dc:creator>

      <pubDate>Sat, 24 Mar 2018 03:05:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43623</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43623/1521860758982544</guid>
      <description>&lt;p&gt;
My name is Drew Harwick and I am an attorney in Chicagoland. Please go to the google search engine and type in "Drew Harwick Attorney" As you scroll down, on the right you will see my picture and google plus. Google plus has various reviews about me. One of the reviews is from an ex-client named Allen Burgess. Next, scroll down on the caches under the same google search and you will see a site with the url "www.lawyerscanhelp.com/drew-Harwick-Hoffman-estates-Illinois"  That site is run by wordpress. That site needs to be updated because the review that Allen Burgess gives on google plus is now different than the review on lawyers can help. Please update Allen Burgess review on the wordpress url listed to be the same as on google plus. Also, what I really prefer is that I be allowed to opt out on your lawyers can help site and be deleted altogether. Please do one or the other.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43617 (Nonce invalid messages non-informative, needs changed) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Sat, 24 Mar 2018 01:58:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43617#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43617#comment:2/1521856723387704</guid>
      <description>&lt;p&gt;
Screenshot of error page in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43617/43617.png" title="Attachment '43617.png' in Ticket #43617"&gt;43617.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43617/43617.png" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Thanks for the report, I agree this can be improved.
&lt;/p&gt;
&lt;p&gt;
Some logic &lt;em&gt;may&lt;/em&gt; need to be added to core to differentiate between form submissions and link actions.
&lt;/p&gt;
&lt;p&gt;
Related &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38332" title="#38332: enhancement: &amp;#34;Cheating&amp;#34; message insults; needs changing (closed: fixed)"&gt;#38332&lt;/a&gt;, &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43622" title="#43622: enhancement: Improve error messages (new)"&gt;#43622&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43617.png attached to Ticket #43617</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Sat, 24 Mar 2018 01:52:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43617/43617.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43617/43617.png/1521856329809583</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43622 (Improve error messages) created</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Sat, 24 Mar 2018 01:50:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43622</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43622/1521856209965570</guid>
      <description>&lt;p&gt;
Audit and improve error messages throughout core.
&lt;/p&gt;
&lt;p&gt;
Many errors contain generic text (something went wrong, expired link warnings) without further explanation, in these cases further details can be added.
&lt;/p&gt;
&lt;p&gt;
Others could do with a wholesale rewrite to improve clarity for non-technical users and/or shift blame away from the user - &lt;code&gt;Slow down cowboy, no need to check for new mails so often!&lt;/code&gt;, for example.
&lt;/p&gt;
&lt;p&gt;
Follow up to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38332" title="#38332: enhancement: &amp;#34;Cheating&amp;#34; message insults; needs changing (closed: fixed)"&gt;#38332&lt;/a&gt;, related &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43617" title="#43617: enhancement: Nonce invalid messages non-informative, needs changed (new)"&gt;#43617&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 23 Mar 2018 23:18:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:22/1521847111696022</guid>
      <description>&lt;p&gt;
43443.3.patch is the same as update.43443.2.diff just cleaned a bit of white space.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43443.3.patch attached to Ticket #43443</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 23 Mar 2018 23:17:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43443/43443.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43443/43443.3.patch/1521847025959210</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36455 (Call opcache_reset() after plug-in, theme or core update) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 23 Mar 2018 23:01:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36455#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36455#comment:38/1521846084457721</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43619 (Introduce new PHP cross-version compat function `is_iterable()`) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Fri, 23 Mar 2018 22:58:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43619#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43619#comment:4/1521845926531195</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Fri, 23 Mar 2018 22:19:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:21/1521843596777833</guid>
      <description>&lt;p&gt;
@mikejolley - I'm having trouble applying either of your latest patches - can you double check them?
&lt;/p&gt;
&lt;pre class="wiki"&gt;src $ svn up
Updating '.':
At revision 42873.
src $ patch -p0 &amp;lt; update.43443.
update.43443.2.diff  update.43443.diff
src $ patch -p0 &amp;lt; update.43443.
update.43443.2.diff  update.43443.diff
src $ patch -p0 &amp;lt; update.43443.diff
patching file wp-includes/user.php
patching file wp-login.php
Hunk #3 FAILED at 874.
Hunk #4 FAILED at 889.
2 out of 4 hunks FAILED -- saving rejects to file wp-login.php.rej
src $ svn revert wp-includes/user.php
Reverted 'wp-includes/user.php'
src $ svn revert wp-login.php
Reverted 'wp-login.php'
src $ patch -p0 &amp;lt; update.43443.2.diff
patching file wp-includes/user.php
patching file wp-login.php
Hunk #3 FAILED at 874.
Hunk #4 FAILED at 889.
2 out of 4 hunks FAILED -- saving rejects to file wp-login.php.rej
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 23 Mar 2018 21:42:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:39/1521841354125733</guid>
      <description>&lt;p&gt;
In 43316.9.diff:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Fixed/tweaked logic in &lt;code&gt;create_item()&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Added check if &lt;code&gt;DOING_AUTOSAVE&lt;/code&gt; is defined.
&lt;/li&gt;&lt;li&gt;Added check if the post_author is the current user when updating a draft.
&lt;/li&gt;&lt;li&gt;Added slashes when calling &lt;code&gt;wp_update_post()&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Removed &lt;code&gt;update_item()&lt;/code&gt;. The "business logic" of autosaves is either to create, delete or update the autosave revision. Don't think we need a separate &lt;code&gt;update_item()&lt;/code&gt; which may actually need to delete the item :)
&lt;/li&gt;&lt;li&gt;Fixed the logic a bit and added slashing to &lt;code&gt;create_post_autosave()&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Changed the detection of "significantly different" content. Now uses combination of percentage for shorter content and fixed size for longer content. It's still not ideal, but seems sufficient and very fast.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Still TODO: thinking we need few more tests especially testing content with slashes. That would be good for the posts controller too :)
&lt;/p&gt;
&lt;p&gt;
@adamsilverstein could you have a look if all is good? :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43316.9.diff attached to Ticket #43316</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 23 Mar 2018 21:25:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43316/43316.9.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43316/43316.9.diff/1521840329399217</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41316 (Introduce "Try Gutenberg" callout) updated</title>
      
        <dc:creator>Ov3rfly</dc:creator>

      <pubDate>Fri, 23 Mar 2018 21:03:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41316#comment:78</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41316#comment:78/1521839029435991</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41316#comment:77" title="Comment 77"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Isn't it the same for images on the About page though?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In terms of &lt;a class="ext-link" href="https://make.wordpress.org/core/tag/gdpr-compliance/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;#gdpr-compliance&lt;/a&gt; it is the same for any content hosted on third party servers.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42998 (Custom HTML Widget uses widget_text twice in markup) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 23 Mar 2018 20:56:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42998#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42998#comment:10/1521838598070817</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/42998#comment:7" title="Comment 7"&gt;alexvorn2&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I found we can add the 4th parameter "1" in the preg_replace function, that will replace only once, so it will look like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$args['before_widget'] = preg_replace( '/(?&amp;lt;=\sclass=["\'])/', 'widget_text ', $args['before_widget'], 1 );
&lt;/pre&gt;&lt;p&gt;
But what if we have wrapper div elements? ... that will appear before not only after.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think you have the right approach here. The wrapper element &lt;em&gt;should&lt;/em&gt; have a class added to it, or else things won't work as expected in the Customizer preview: &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/blob/7c2f975/src/wp-includes/js/customize-preview-widgets.js#L609-L619"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/wordpress-develop/blob/7c2f975/src/wp-includes/js/customize-preview-widgets.js#L609-L619&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The only hardening that may be warranted is to check if the &lt;code&gt;before_widget&lt;/code&gt; actually starts with an element that has a &lt;code&gt;class&lt;/code&gt; attribute in it. For example:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;preg_match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'#^&amp;lt;[^&amp;gt;]+class=[^&amp;gt;]+&amp;gt;#'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'before_widget'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'before_widget'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;preg_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'/(?&amp;lt;=\sclass=["\'])/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'widget_text '&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'before_widget'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
But that's probably somewhat overkill.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41316 (Introduce "Try Gutenberg" callout) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 23 Mar 2018 20:48:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41316#comment:77</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41316#comment:77/1521838137636686</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41316#comment:76" title="Comment 76"&gt;Ov3rfly&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Callout gif animation is hosted on third party server.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Isn't it the same for images on the About page though?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43556 (Ensure only sidebar sections are considered when comparing against ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 23 Mar 2018 20:48:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43556#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43556#comment:3/1521838084256987</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43556/43556.diff" title="Attachment '43556.diff' in Ticket #43556"&gt;43556.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43556/43556.diff" title="Download"&gt;​&lt;/a&gt; makes sense to me.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I was thinking it was counting the Inactive Widget Area when it shouldn't
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@joyously There shouldn't be a section registered for inactive widget areas: &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/blob/7c2f975/src/wp-includes/class-wp-customize-widgets.php#L428-L468"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/wordpress-develop/blob/7c2f975/src/wp-includes/class-wp-customize-widgets.php#L428-L468&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
There _is_ as setting registered for the inactive widgets sidebar, however.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43328 (Add support for Web App Manifests) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 23 Mar 2018 20:40:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43328#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43328#comment:3/1521837649133147</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Excellent. Let's do that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41316 (Introduce "Try Gutenberg" callout) updated</title>
      
        <dc:creator>Ov3rfly</dc:creator>

      <pubDate>Fri, 23 Mar 2018 20:23:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41316#comment:76</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41316#comment:76/1521836598210043</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Callout gif animation is hosted on third party server.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40035 (Site registered date uses different time zone from last updated) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 23 Mar 2018 20:11:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40035#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40035#comment:2/1521835908711415</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38743 (Introduce add_action_once()) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Fri, 23 Mar 2018 20:03:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38743#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38743#comment:6/1521835428818550</guid>
      <description>&lt;p&gt;
To tell you the truth, I had initially misread your issue. I was going to work on this as I thought "Wow, this is really useful!". Then, I started implementing it, and reading into your implementation, and realized that you need something different :)
&lt;/p&gt;
&lt;p&gt;
And I apologize for skimming the name you came up with initially, though :)
&lt;/p&gt;
&lt;p&gt;
Judging by the amount of starsgazers on this issue, though, seems like people are indeed interested in unique callback adding, although not sure how coordinated the use would be. Like how do you get plugin developers to use &lt;code&gt;ensure_action()&lt;/code&gt; instead of &lt;code&gt;add_action()&lt;/code&gt;, as protection for their own filters perhaps?
&lt;/p&gt;
&lt;p&gt;
Thoughts?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43621 (Introduce `add_action_once` and `add_filter_once` sugar.) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Fri, 23 Mar 2018 19:56:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43621#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43621#comment:3/1521834993382955</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Initial implementation and tests for &lt;code&gt;add_action_once&lt;/code&gt;, &lt;code&gt;add_filter_once&lt;/code&gt; in 43621.once.diff. This depends on two new methods inside &lt;code&gt;WP_Hook&lt;/code&gt;, both of which are implemented and tested in 43621.wp_hook.diff
&lt;/p&gt;
&lt;p&gt;
@johnbillion Indeed, my usual use-case for ephemeral callbacks is for writing self-cleaning tests. However, I have recently found myself suppressing &lt;code&gt;wp_mail&lt;/code&gt; sending via the &lt;code&gt;phpmailer_init&lt;/code&gt; hook for several emails being sent out in a row.
&lt;/p&gt;
&lt;p&gt;
Another practical example, I thought of is to augment the first title on a post archive page:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter_once( 'the_title', 'color_the_title_red' );
&lt;/pre&gt;&lt;p&gt;
This would make the topmost post on the page be output with a red title, while the rest is output in the regular way.
&lt;/p&gt;
&lt;p&gt;
I hope this makes sense.
&lt;/p&gt;
&lt;p&gt;
Special thanks to @hokku @campusboy1987 @denisco @SergeyBiryukov for reviewing and working on this during our online contributor workshop.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43621.once.diff attached to Ticket #43621</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Fri, 23 Mar 2018 19:47:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43621/43621.once.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43621/43621.once.diff/1521834460487209</guid>
      <description>&lt;p&gt;
add_action_once, add_filter_once (depends on WP_Hook::previous_callback feature)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>43621.wp_hook.diff attached to Ticket #43621</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Fri, 23 Mar 2018 19:47:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43621/43621.wp_hook.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43621/43621.wp_hook.diff/1521834432273139</guid>
      <description>&lt;p&gt;
Add WP_Hook::current_callback, WP_Hook::previous_callback (w/ tests)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35710 (Make aria-label on TinyMCE buttons translatable.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 23 Mar 2018 19:09:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35710#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35710#comment:10/1521832158919236</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-editor by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1521832156000658"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43621 (Introduce `add_action_once` and `add_filter_once` sugar.) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 23 Mar 2018 19:06:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43621#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43621#comment:2/1521831970721912</guid>
      <description>&lt;p&gt;
This is certainly a pattern that the test suite uses, and I could see a use for it. That said, is it a pattern that's used in non-test code often?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42985 (No error message returned by empty wp-login.php form) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 23 Mar 2018 18:55:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42985#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42985#comment:12/1521831312491864</guid>
      <description>&lt;p&gt;
Related: &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/43037" title="#43037: defect (bug): Login error message &amp;#34;Invalid username. Lost your password?&amp;#34; is confusing (reviewing)"&gt;#43037&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43364 (After blur on the custom text field the date format should update below.) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 23 Mar 2018 18:52:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43364#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43364#comment:8/1521831144289635</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The patch looks good to me. It just needs some adjustments to spacings. I'd also recommend to decrease the interval from &lt;code&gt;800&lt;/code&gt; to &lt;code&gt;500&lt;/code&gt;. WordPress is already using &lt;code&gt;500&lt;/code&gt; in a few places in the admin, for example for some search fields using underscore &lt;code&gt;.debounce()&lt;/code&gt;. See also a similar &lt;code&gt;setTimeout()&lt;/code&gt; implementation for the "insert link" search:
&lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-includes/js/wplink.js?rev=42807#L72"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-includes/js/wplink.js?rev=42807#L72&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43412 (Comments: row action links and forms accessibility improvements) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 23 Mar 2018 18:23:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43412#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43412#comment:4/1521829385873294</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43412/43412.diff" title="Attachment '43412.diff' in Ticket #43412"&gt;43412.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43412/43412.diff" title="Download"&gt;​&lt;/a&gt; is a first pass for better link / buttons semantics. Some testing would be nice :)
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;check in the comments lists pages and in the dashboard, all the UI controls work as expected
&lt;/li&gt;&lt;li&gt;check using a screen reader all UI controls that "do something" are announced as buttons, and UI controls that navigate to a page are announced as links.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Additionally, to start implementing the "proximity of controls" principle (see &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/40822" title="#40822: defect (bug): Addressing Proximity in the admin area (new)"&gt;#40822&lt;/a&gt;) and to introduce consistency, the patch aligns the Reply and Quick edit forms buttons on the left. Screenshots:
&lt;/p&gt;
&lt;p&gt;
before:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/9vOa-gSotk.png"&gt;&lt;img src="https://cldup.com/9vOa-gSotk.png" alt="https://cldup.com/9vOa-gSotk.png" crossorigin="anonymous" title="https://cldup.com/9vOa-gSotk.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
after:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/KymCNBNbsL.png"&gt;&lt;img src="https://cldup.com/KymCNBNbsL.png" alt="https://cldup.com/KymCNBNbsL.png" crossorigin="anonymous" title="https://cldup.com/KymCNBNbsL.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Note: the same change applies to the Quick Edit form and the Reply form in the Dashboard.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27954 (Add FORCE_SSL option to enable HTTPS everywhere on the site) updated</title>
      
        <dc:creator>thomaswm</dc:creator>

      <pubDate>Fri, 23 Mar 2018 18:17:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27954#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27954#comment:31/1521829072102407</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27954#comment:30" title="Comment 30"&gt;westonruter&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There's this ticket and there is &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/28521" title="#28521: enhancement: FORCE_SSL constant for really forcing SSL (new)"&gt;#28521&lt;/a&gt;. Should this be closed and the current status moved over to &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/28521" title="#28521: enhancement: FORCE_SSL constant for really forcing SSL (new)"&gt;#28521&lt;/a&gt;?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, probably.
&lt;/p&gt;
&lt;p&gt;
This ticket focuses on the HTTP redirect to the HTTPS URL, whereas &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/28521" title="#28521: enhancement: FORCE_SSL constant for really forcing SSL (new)"&gt;#28521&lt;/a&gt; is about rewriting local URLs in the HTML sourcecode to HTTPS. But these two things really go together and I'm not sure if it makes sense to have two separate tickets for them.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43412.diff attached to Ticket #43412</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 23 Mar 2018 18:15:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43412/43412.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43412/43412.diff/1521828930904710</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43534 (Wonky element attributes after coding standards cleanup) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 23 Mar 2018 18:13:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43534#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43534#comment:5/1521828793861465</guid>
      <description>&lt;p&gt;
Noticed a few more cases, not sure they should be fixed here.
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-admin/includes/meta-boxes.php?rev=42827#L760"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-admin/includes/meta-boxes.php?rev=42827#L760&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-admin/includes/template.php?rev=42827#L2168"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-admin/includes/template.php?rev=42827#L2168&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-admin/includes/template.php?rev=42827#L2180"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-admin/includes/template.php?rev=42827#L2180&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>postphotos</dc:creator>

      <pubDate>Fri, 23 Mar 2018 18:11:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:37/1521828688345694</guid>
      <description>&lt;p&gt;
I agree with @azaozz - a cool "Please edit this!" button that requires an admin to OK the text, at least on the first time they see this, would be good.
&lt;/p&gt;
&lt;p&gt;
I think of the clever interference modal when editing a theme or plugin:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Heads up!
You appear to be making direct edits to your theme in the WordPress dashboard. We recommend that you don’t!
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
(I think this was @melchoyce's work too?)
&lt;/p&gt;
&lt;p&gt;
Something that reads like
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Heads up!
This Privacy Policy is a very important part of your website. We believe you should do X, Y and Z. We've got sample text for you to use (as do these plugins A, B + C) but it is your responsibility to understand your site. You should further adding details about your site's specific customizations (whether that be advertising, analytics, plugins or cookies) should be done.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Something that reads clear enough for an end user, but formal and inclusive enough that @webdevlaw would like it.
&lt;/p&gt;
&lt;p&gt;
I see it as a modal and prompting admins to do a bit of reading, including a "remind me about this later" bit. In reality, this release might be the first time that many people hear about GDPR, and giving some context should help those confused.
&lt;/p&gt;
&lt;p&gt;
Let me know if there's anything I can do to help with this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38743 (Introduce add_action_once()) updated</title>
      
        <dc:creator>tfrommen</dc:creator>

      <pubDate>Fri, 23 Mar 2018 18:06:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38743#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38743#comment:5/1521828400013205</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38743#comment:4" title="Comment 4"&gt;soulseekah&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Opps, looks like &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43621" title="#43621: feature request: Introduce `add_action_once` and `add_filter_once` sugar. (new)"&gt;#43621&lt;/a&gt; is intending to use the same name. Do you think you can come up with a different name concept? :)
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;add_filter_unique()&lt;/code&gt; maybe?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hm, interesting. In both cases, that name would make sense.
&lt;/p&gt;
&lt;p&gt;
In &lt;strong&gt;this&lt;/strong&gt; case, I could think of something like &lt;code&gt;ensure_action()&lt;/code&gt;... Not sure. Also, there's not really an interest in this at all, considering both the &lt;em&gt;impact&lt;/em&gt; opening this ticket has had, and also the plugin API is not really young, and yet noone ever really seems to have needed something like this...?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43289 (Menu link to front page won't display the page content in Twenty ...) updated</title>
      
        <dc:creator>fouzul</dc:creator>

      <pubDate>Fri, 23 Mar 2018 18:03:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43289#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43289#comment:3/1521828207177597</guid>
      <description>&lt;p&gt;
help me , i also have the same issue
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43289#comment:1" title="Comment 1"&gt;jacofuego&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Sorry the website address is www.rehearsalstudioexeter.uk
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43289 (Menu link to front page won't display the page content in Twenty ...) updated</title>
      
        <dc:creator>fouzul</dc:creator>

      <pubDate>Fri, 23 Mar 2018 18:02:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43289#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43289#comment:2/1521828155313092</guid>
      <description>&lt;p&gt;
now is it working ? what you did ? please let me know
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43621 (Introduce `add_action_once` and `add_filter_once` sugar.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 23 Mar 2018 17:54:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43621#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43621#comment:1/1521827655322427</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38743 (Introduce add_action_once()) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Fri, 23 Mar 2018 17:54:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38743#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38743#comment:4/1521827648887537</guid>
      <description>&lt;p&gt;
Oops, looks like &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43621" title="#43621: feature request: Introduce `add_action_once` and `add_filter_once` sugar. (new)"&gt;#43621&lt;/a&gt; is intending to use the same name. Do you think you can come up with a different name concept? :)
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;add_filter_unique()&lt;/code&gt; maybe?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43621 (Introduce `add_action_once` and `add_filter_once` sugar.) created</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Fri, 23 Mar 2018 17:49:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43621</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43621/1521827385969680</guid>
      <description>&lt;p&gt;
It is often useful (especially when writing tests for filters, actions) to run a callback only once, regardless of how many times the filter/action is actually applied/done.
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter_once( 'test_action_once', '__return_true' );
$this-&amp;gt;assertTrue( apply_filters( 'test_action_once', false ) );
$this-&amp;gt;assertFalse( apply_filters( 'test_action_once', false ) );
&lt;/pre&gt;&lt;p&gt;
This would allow developers to run anonymous callbacks that remove themselves from the filter after running once. This can currently be done with the following ugly workarounds:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action( 'run_many_times', function() {
    // do stuff once and self-destruct
    remove_action( 'run_many_times', current(﻿ $GLOBALS['wp_filter'][ current_filter() ]-&amp;gt;callbacks[ 10 ] )['function'] );
} );
&lt;/pre&gt;&lt;p&gt;
or
&lt;/p&gt;
&lt;pre class="wiki"&gt;$once = null;
add_action( 'run_many_times', $null = function() use ( &amp;amp;$once ) {
    // do stuff once and self-destruct
    remove_action( 'run_many_times', $once );
} );
&lt;/pre&gt;&lt;p&gt;
This is &lt;strong&gt;not&lt;/strong&gt; a duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/38743" title="#38743: feature request: Introduce add_action_once() (new)"&gt;#38743&lt;/a&gt;, the concept is different, the naming is the same, yes.
&lt;/p&gt;
&lt;p&gt;
Non-clashing names here?
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;​add_self_destructing_filter()﻿&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;add_ephemeral_filter()&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
open to other suggestions :)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #28521 (FORCE_SSL constant for really forcing SSL) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 23 Mar 2018 17:34:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28521#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28521#comment:11/1521826460959377</guid>
      <description>&lt;p&gt;
Has anyone talked about starting a feature plugin for working on implementation? I'm keen to collaborate on this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43412 (Comments: row action links and forms accessibility improvements) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 23 Mar 2018 17:29:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43412#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43412#comment:3/1521826176837554</guid>
      <description>&lt;p&gt;
Note: the above should be applied also to the similar links in the "Recent Comments" Dashboard widget.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43312 (PHP 7.2 warning in wp_kses_attr()) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 23 Mar 2018 17:21:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43312#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43312#comment:26/1521825713474809</guid>
      <description>fixed: &lt;p&gt;
Right, while the logic of that particular piece has changed, the logic of the function is still the same. It just bails earlier, avoiding some extra work.
&lt;/p&gt;
&lt;p&gt;
Thank you for raising the issue, it's good to have this documented.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43620 (Privacy Policy page design) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Fri, 23 Mar 2018 17:02:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43620#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43620#comment:2/1521824547857798</guid>
      <description>&lt;p&gt;
Also, it might be possible for us to determine internally when a plugin has provided a change for their suggested policy. For the initial implementation, it might be helpful to display a "Updated on {DATE}" in the context of a plugin's row - what do you think @melchoyce ?
&lt;/p&gt;
&lt;p&gt;
(Down the road we could get fancy and do diffs or something, but I think all we need to do for the initial implementation is note when the suggested policy for a plugin last changed.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43620 (Privacy Policy page design) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Fri, 23 Mar 2018 16:59:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43620#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43620#comment:1/1521824390843291</guid>
      <description>&lt;p&gt;
Thank you @melchoyce !  At the top of the mockup you say “reviewing… making any necessary edits… and then copying and pasting” - where will the user edit? (The order suggests the suggested policies meta box allows for editing _before_ it is copied and pasted.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Privacy Policy: Classic Editor.png attached to Ticket #43620</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Fri, 23 Mar 2018 16:48:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43620/Privacy%20Policy%3A%20Classic%20Editor.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43620/Privacy%20Policy%3A%20Classic%20Editor.png/1521823715201182</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43620 (Privacy Policy page design) created</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Fri, 23 Mar 2018 16:48:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43620</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43620/1521823686565057</guid>
      <description>&lt;p&gt;
Related to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43491" title="#43491: enhancement: Automatically create a Privacy Policy page when installing WordPress (closed: fixed)"&gt;#43491&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43473" title="#43473: enhancement: Add default text for a privacy policy (closed: fixed)"&gt;#43473&lt;/a&gt;, this ticket addresses the design of the Privacy Policy page.
&lt;/p&gt;
&lt;p&gt;
This design is a riff off of &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43435/edit-privacy-policy-page.png" title="Attachment 'edit-privacy-policy-page.png' in Ticket #43435"&gt;ticket:43435:edit-privacy-policy-page.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43435/edit-privacy-policy-page.png" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The draft has three main pieces:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Plugin Policies:
&lt;ul&gt;&lt;li&gt;This is a collapsible box that lives above the Editor.
&lt;/li&gt;&lt;li&gt;The header is styled like a warning notice, to attract attention to the text. The header contains an explanation of what the box contains and what you're supposed to do with it.
&lt;/li&gt;&lt;li&gt;Each plugin providing a privacy policy will have a blurb and a "copy" button.
&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Question&lt;/strong&gt;: Should the copy button copy text to the editor (I'd relabel it to "add to page page" or something), or just to your clipboard?
&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Question&lt;/strong&gt;: Should there be some way to collapse or hide individual plugin blurbs?
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Core Policies:
&lt;ul&gt;&lt;li&gt;Core policies are automatically inserted into the page content.
&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Question&lt;/strong&gt;: Do we see us making changes to this text between the first GDPR release, and when Gutenberg is released?
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Confirmation:
&lt;ul&gt;&lt;li&gt;This is inspired by the "Are you sure, [Author]?" confirmation the wordpress.org/news posts have.
&lt;/li&gt;&lt;li&gt;The point of this extra step is to encourage people to review their privacy policy before publishing it.
&lt;/li&gt;&lt;li&gt;When you check the box, the Publish button goes from disabled to enabled.
&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Question&lt;/strong&gt;: Is this overkill?
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Please note that none of the UI copy is final.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43312 (PHP 7.2 warning in wp_kses_attr()) updated</title>
      
        <dc:creator>apokalyptik</dc:creator>

      <pubDate>Fri, 23 Mar 2018 16:46:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43312#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43312#comment:25/1521823565632540</guid>
      <description>&lt;p&gt;
That is a breakdown I can get behind, the work for the proof needed to be done and it needed to be explicit and explained how this was still correct and functionally equivalent. Thanks very much :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43312 (PHP 7.2 warning in wp_kses_attr()) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Fri, 23 Mar 2018 16:41:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43312#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43312#comment:24/1521823300873873</guid>
      <description>&lt;p&gt;
&lt;code&gt;count&lt;/code&gt;ing a boolean will always return 1. Be it &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, doesn't matter. So the old logic is actually flawed. The &lt;code&gt;wp_kses_attr&lt;/code&gt; did indeed not short-circuit in the first condition and fell through doing useless, extra work (&lt;code&gt;wp_kses_hair&lt;/code&gt;, &lt;code&gt;preg_replace&lt;/code&gt;). But if you look at the resulting string and what it is composed of, then you'll see that it is absolutely the same as in the case of short-circuiting.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;return "&amp;lt;$element$attr2$xhtml_slash&amp;gt;";&lt;/code&gt; is equal to &lt;code&gt;return "&amp;lt;$element$xhtml_slash&amp;gt;";&lt;/code&gt;, &lt;code&gt;$attr2&lt;/code&gt; is an empty string of attributes, composed of &lt;code&gt;$attrarr&lt;/code&gt; which is empty when &lt;code&gt;false&lt;/code&gt; is passed.
&lt;/p&gt;
&lt;p&gt;
Thus, the logic is absolutely identical, minus the extra work that nobody really cares about. If anything, WordPress became faster :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43614 (Tweak the Dashboard Gutenberg callout) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Fri, 23 Mar 2018 15:25:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43614#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43614#comment:6/1521818705044167</guid>
      <description>&lt;p&gt;
I have updated the gif here: &lt;a class="ext-link" href="https://cldup.com/BmlTdSIs5T.gif"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cldup.com/BmlTdSIs5T.gif&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41316 (Introduce "Try Gutenberg" callout) updated</title>
      
        <dc:creator>wpmarkuk</dc:creator>

      <pubDate>Fri, 23 Mar 2018 15:12:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41316#comment:75</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41316#comment:75/1521817969791861</guid>
      <description>&lt;p&gt;
I really worry about this appearing in sites when it still has the potential to adversely effect people's site who activate it. Take my example here:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://markwilkinson.blog/2018/03/testing-gutenberg-on-this-blog/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://markwilkinson.blog/2018/03/testing-gutenberg-on-this-blog/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I lost support for the types of gallery I was using and with Gutenberg active they don't work anymore. Moreover the posts I have edited in Gutenberg with those galleries don't revert back to how they were when the plugin is deactivated.
&lt;/p&gt;
&lt;p&gt;
For me it need to be made much clearer that this is software not to be run on a live site without testing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>mikejolley</dc:creator>

      <pubDate>Fri, 23 Mar 2018 15:12:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:20/1521817935955738</guid>
      <description>&lt;p&gt;
Latest diff above.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Takes care of the email rewording @allendav requested
&lt;/li&gt;&lt;li&gt;Allows extra request data to be passed with the request and passed to the actions.
&lt;/li&gt;&lt;li&gt;Makes the option/user meta names more consistent
&lt;/li&gt;&lt;li&gt;Adds an inline comment explaining use of &lt;code&gt;hash&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>update.43443.2.diff attached to Ticket #43443</title>
      
        <dc:creator>mikejolley</dc:creator>

      <pubDate>Fri, 23 Mar 2018 15:10:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43443/update.43443.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43443/update.43443.2.diff/1521817847708229</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>mikejolley</dc:creator>

      <pubDate>Fri, 23 Mar 2018 15:08:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:19/1521817735285895</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
If we switch to a CPT for facilitating the approvals, we wouldn't use the options/meta approach anymore right?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It depends. I've built this with other uses in mind - maybe things that don't need a log like account resets. Trying to make it generic as possible but useful this this use case too :)
&lt;/p&gt;
&lt;p&gt;
Let me send my latest diff and you can take a look. I'm not concerned with an extra update to set the log confirmed when the action fires TBH. In fact, having an action too might be good because it can mean our core log could be replaced/enhanced with outside code.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Fri, 23 Mar 2018 15:05:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:18/1521817557933959</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43443#comment:17" title="Comment 17"&gt;mikejolley&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@allendav I actually think that would be a mistake here. We should keep this mechanism for the approval only, not make it into a log.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm in the middle of hooking up everything and I've gotten to the point where I'd like to fill a WP_List_Table with the requests and their status
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If this what we're doing, with a CPT, when the request is triggered it should be logged as pending, then approval should be obtained with the email.
&lt;/p&gt;
&lt;p&gt;
When confirmed, hook in and update the log entry. Then the log is independent of this mechanism.
&lt;/p&gt;
&lt;p&gt;
What we may want to add is instead a way to pass data with the action so when it's confirmed, the data is passed to the action. Then you could for example pass the log ID so it's updated :)
&lt;/p&gt;
&lt;p&gt;
Sound good?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If we switch to a CPT for facilitating the approvals, we wouldn't use the options/meta approach anymore right?
&lt;/p&gt;
&lt;p&gt;
And, if we switch to a CPT, would we not want this patch/code to store the approval in post meta itself instead of relying on code in a separate patch?
&lt;/p&gt;
&lt;p&gt;
I _do_ like the idea of having the action (including passing hooked callbacks the CPT id and action in play) so that plugins can do additional things with this approval mechanism you've created beyond the storing of request-started, request-approved in a CPT.
&lt;/p&gt;
&lt;p&gt;
Does that make sense?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43614 (Tweak the Dashboard Gutenberg callout) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 23 Mar 2018 15:00:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43614#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43614#comment:5/1521817202012532</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Without the "for you," it reads a little bit like the overlord wants to control my content.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@bph you made a point here :) I can easily imagine slightly incorrect translations in other languages might turn this message in something a bit worrying. Ideally, the original English text should be as clear as possible to avoid the risk.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43615 (Shake Tremor Bug on Admin Area) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 23 Mar 2018 14:56:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43615#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43615#comment:1/1521817015080437</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43618 (get_the_excerpt breaking wp-json API) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 23 Mar 2018 14:53:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43618#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43618#comment:1/1521816780920371</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 23 Mar 2018 14:51:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:36/1521816664064127</guid>
      <description>&lt;p&gt;
The idea in the above screenshot is to have a postbox that will show only when editing the privacy policy page. That postbox will contain all privacy related text suggested by core and plugins to assist the site owners in creating their privacy policy.
&lt;/p&gt;
&lt;p&gt;
In addition if any of the available text changes (after a core or plugin update) it will get highlighted to alert the site owner to review and edit the policy.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>edit-privacy-policy-page.png attached to Ticket #43435</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 23 Mar 2018 14:44:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43435/edit-privacy-policy-page.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43435/edit-privacy-policy-page.png/1521816269615610</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43614 (Tweak the Dashboard Gutenberg callout) updated</title>
      
        <dc:creator>bph</dc:creator>

      <pubDate>Fri, 23 Mar 2018 14:43:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43614#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43614#comment:4/1521816208824834</guid>
      <description>&lt;p&gt;
I would suggest a simple change in this sentence: "WordPress is working on a better way to control your content. How about giving it a try early?" and add "for you" and make WordPress be more like a group of people.
&lt;/p&gt;
&lt;p&gt;
It could read "WordPress developers (or contributors) are working on a better way for you to control your content. How about giving it a try early?"
&lt;/p&gt;
&lt;p&gt;
Without the "for you," it reads a little bit like the overlord wants to control my content.  And it might help if users that are people behind the software working for people, rather than being this corporate entity.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43619 (Introduce new PHP cross-version compat function `is_iterable()`) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Fri, 23 Mar 2018 14:36:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43619#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43619#comment:3/1521815815561851</guid>
      <description>&lt;p&gt;
@jrf Yes, of course, the functionality proposed here can and should already go in with a next minor release. I just thought your proposed polyfills demonstrate the growing need for a more systematic approach, that's why I linked.
&lt;/p&gt;
&lt;p&gt;
Using functions like the above makes the code more future-proof and less error-prone, so there's no reason not to add this small polyfill.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43619 (Introduce new PHP cross-version compat function `is_iterable()`) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Fri, 23 Mar 2018 14:32:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43619#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43619#comment:2/1521815560811390</guid>
      <description>&lt;p&gt;
@schlessera I hadn't seen that ticket, thanks for pointing it out. I totally agree with the approach.
All the same, the need to make backfills load in a more modular manner is independent of the need for the functionality proposed here to be added.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43619 (Introduce new PHP cross-version compat function `is_iterable()`) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Fri, 23 Mar 2018 14:16:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43619#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43619#comment:1/1521814577947479</guid>
      <description>&lt;p&gt;
Related to this &amp;amp; &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43583" title="#43583: enhancement: Introduce new PHP cross-version compat function `is_countable()` (closed: fixed)"&gt;#43583&lt;/a&gt;:
Considering the growing need to add PHP polyfills and other compat code to Core (due to the fact that PHP has a higher velocity than WordPress), we should look into using a more systematic approach to compatibility code come 5.0, like described in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/42264" title="#42264: enhancement: Systematic way of dealing with compat code and polyfills (new)"&gt;#42264&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #43295,​43596 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 23 Mar 2018 14:13:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=43295%2C43596</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=43295%2C43596/1521814390567796</guid>
      <description>&lt;p&gt;
Duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43295" title="#43295: defect (bug): One theme update notice is showing in another Theme Details popup (new)"&gt;#43295&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Tickets #43295,​43603 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 23 Mar 2018 14:12:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=43295%2C43603</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=43295%2C43603/1521814374282750</guid>
      <description>&lt;p&gt;
Duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43295" title="#43295: defect (bug): One theme update notice is showing in another Theme Details popup (new)"&gt;#43295&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Tickets #41341,​43603 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 23 Mar 2018 14:12:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=41341%2C43603</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=41341%2C43603/1521814323659829</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/41341" title="#41341: defect (bug): Theme update notification appearing multiple times (new)"&gt;#41341&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #43312 (PHP 7.2 warning in wp_kses_attr()) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 23 Mar 2018 14:11:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43312#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43312#comment:23/1521814317867847</guid>
      <description>&lt;p&gt;
I still don't see how it's function differently now? Could you explain this with a real world use case please?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #41341,​43596 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 23 Mar 2018 14:11:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=41341%2C43596</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=41341%2C43596/1521814315487082</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/41341" title="#41341: defect (bug): Theme update notification appearing multiple times (new)"&gt;#41341&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #43545 (Helper functions: Anonymizing data in a standardized way) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 23 Mar 2018 14:06:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43545#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43545#comment:15/1521813962301125</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43545 (Helper functions: Anonymizing data in a standardized way) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 23 Mar 2018 14:05:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43545#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43545#comment:14/1521813931535036</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
We could maybe create a Ip_zero, and a IP_partially...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Actually think there was a court ruling in Germany requiring anonymized IPs to be cut to only the first two octets, i.e. 192.168.0.0. This makes them really useless for any purpose :(
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43619 (Introduce new PHP cross-version compat function `is_iterable()`) created</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Fri, 23 Mar 2018 14:03:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43619</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43619/1521813802030372</guid>
      <description>&lt;p&gt;
Similar to and related to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43583" title="#43583: enhancement: Introduce new PHP cross-version compat function `is_countable()` (closed: fixed)"&gt;#43583&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
PHP 7.2 introduced a warning when count() is used on something non-countable.
&lt;/p&gt;
&lt;p&gt;
PHP 7.1 introduced a new function called &lt;code&gt;is_iterable()&lt;/code&gt; which basically checks:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;if (is_array($foo) || $foo instanceof Traversable) {
    // $foo is traversable
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
See: &lt;a class="ext-link" href="http://php.net/manual/en/function.is-iterable.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://php.net/manual/en/function.is-iterable.php&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
When &lt;code&gt;count()&lt;/code&gt; is used to check if an array is traverable, i.e. usable in a &lt;code&gt;foreach(){}&lt;/code&gt;, it would be better to replace the &lt;code&gt;count()&lt;/code&gt; check with a call to &lt;code&gt;is_iterable()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
To that end, I would like to suggest adding this new function to the &lt;code&gt;wp-includes/compat.php&lt;/code&gt; file, like so:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;if ( ! function_exists( 'is_iterable' ) ) :
        function is_iterable( $var ) {
                return ( ( is_array( $var ) &amp;amp;&amp;amp; ! empty( $var ) || $var instanceof Traversable );
        }
}
endif;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
This seems like low hanging fruit. Both the &lt;code&gt;instanceof&lt;/code&gt; operator as well as the &lt;code&gt;Traversable&lt;/code&gt; interface were already available in PHP 5.2.4, so there should be no cross-version compatibility issues with introducing this function.
&lt;/p&gt;
&lt;p&gt;
The function would provide an easy helper function to help fix the various issues where the warning is currently being reported - both for Core as well as for plugin/theme devs -.
&lt;/p&gt;
&lt;p&gt;
Existing code like this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;if ( count( $var ) &amp;gt; 0 ) {
        foreach( $var as $key =&amp;gt; $value) {
                // Do something.
        }
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
can then be replaced by:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;if ( is_iterable( $var ) ) {
        foreach( $var as $key =&amp;gt; $value) {
                // Do something.
        }
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The function would also still allow for code refactoring from arrays to objects. /cc @schlessera
&lt;/p&gt;
&lt;p&gt;
I would suggest introducing this function ASAP and not to wait for a major release.
&lt;/p&gt;
&lt;p&gt;
Related issues (there are probably more, but a quick search yielded these):
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43583" title="#43583: enhancement: Introduce new PHP cross-version compat function `is_countable()` (closed: fixed)"&gt;#43583&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43374" title="#43374: defect (bug): PHP 7.2 Warning: count(): Parameter must be an array or an object that ... (closed: fixed)"&gt;#43374&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43368" title="#43368: defect (bug): Fix the warning of count() in php 7.2.0 (closed: duplicate)"&gt;#43368&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43312" title="#43312: defect (bug): PHP 7.2 warning in wp_kses_attr() (closed: fixed)"&gt;#43312&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43216" title="#43216: defect (bug): IXR Server Warning (closed: fixed)"&gt;#43216&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43201" title="#43201: defect (bug): PHP Warning:  count(): Parameter must be an array or an object that ... (closed: fixed)"&gt;#43201&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43216" title="#43216: defect (bug): IXR Server Warning (closed: fixed)"&gt;#43216&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43201" title="#43201: defect (bug): PHP Warning:  count(): Parameter must be an array or an object that ... (closed: fixed)"&gt;#43201&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42860" title="#42860: defect (bug): PHP 7.2 warning - Parameter must be an array or an object that ... (closed: fixed)"&gt;#42860&lt;/a&gt;, &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/42814" title="#42814: defect (bug): PHP 7.2 Warning: ...wp-includes/post-template.php on line 284 (reopened)"&gt;#42814&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42147" title="#42147: defect (bug): Change mention of URI to URL in /wp-admin/options-permalink.php (closed: fixed)"&gt;#42147&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42498" title="#42498: defect (bug): Replace count() call with empty() in get_settings_errors() to prevent ... (closed: fixed)"&gt;#42498&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>mikejolley</dc:creator>

      <pubDate>Fri, 23 Mar 2018 14:02:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:17/1521813759179718</guid>
      <description>&lt;p&gt;
@allendav I actually think that would be a mistake here. We should keep this mechanism for the approval only, not make it into a log.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm in the middle of hooking up everything and I've gotten to the point where I'd like to fill a WP_List_Table with the requests and their status
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If this what we're doing, with a CPT, when the request is triggered it should be logged as pending, then approval should be obtained with the email.
&lt;/p&gt;
&lt;p&gt;
When confirmed, hook in and update the log entry. Then the log is independent of this mechanism.
&lt;/p&gt;
&lt;p&gt;
What we may want to add is instead a way to pass data with the action so when it's confirmed, the data is passed to the action. Then you could for example pass the log ID so it's updated :)
&lt;/p&gt;
&lt;p&gt;
Sound good?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43312 (PHP 7.2 warning in wp_kses_attr()) updated</title>
      
        <dc:creator>apokalyptik</dc:creator>

      <pubDate>Fri, 23 Mar 2018 13:53:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43312#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43312#comment:22/1521813214012520</guid>
      <description>&lt;p&gt;
I'm proposing that a patch pushed through on this ticked should keep the logic the same, piece for piece, and fix the php 7.2 warnings. If you think kses needs to function differently in some way... you should make another ticket and it should be addressed there... even the &lt;strong&gt;possibility&lt;/strong&gt; of subtly breaking kses is an unacceptable risk when including a patch that ostensibly only silences an error.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37110 (Update to jQuery 3.*) updated</title>
      
        <dc:creator>zakkath</dc:creator>

      <pubDate>Fri, 23 Mar 2018 13:40:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37110#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37110#comment:34/1521812433105994</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37110#comment:33" title="Comment 33"&gt;bigcloudmedia&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I have clients for whom PCI DSS compliance is a requirement, and in their most recent scan they got flagged for the jQuery library in WP Core, with the instruction to upgrade to 3.0.0 or higher, in order to fix &lt;strong&gt;CVE 2015-9251&lt;/strong&gt; and &lt;strong&gt;CVE 2016-10707&lt;/strong&gt;.    Is there any way to fast track this change so that other people with similar requirements don't get stuck?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You might want to implement a plugin that de-registers &lt;code&gt;jquery&lt;/code&gt; in WordPress and re-registers it either with a CDN copy of jQuery v3.x or include a copy with the plugin. That will get them compliant in that regard ASAP.
&lt;/p&gt;
&lt;p&gt;
It is odd to note that there does not seem to be much movement on this issue. @adamsilverstein  put out a patch for testing and that was the last thing... 4 months ago.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43545 (Helper functions: Anonymizing data in a standardized way) updated</title>
      
        <dc:creator>jesperher</dc:creator>

      <pubDate>Fri, 23 Mar 2018 13:37:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43545#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43545#comment:13/1521812258011104</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43545#comment:11" title="Comment 11"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This sounds good but imho there are far too many options to anonymize things. It would be handy for translatable strings but not for numbers, tokens, etc. For example: what would be an anonymized &lt;code&gt;id&lt;/code&gt; or &lt;code&gt;email&lt;/code&gt; or &lt;code&gt;url&lt;/code&gt;? All these should be empty strings.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I kind of agree on numbers - when first creating the list, it was kind of a brainstorm on different types of data.
&lt;/p&gt;
&lt;p&gt;
For the ID part, i dont think we can anonymize that.
But for the email part i still think this i very relevant, because of the way WordPress uses mail adresses, and how a lot of code normally us depending on the the data to be of a valid email type.
Then i belive it is better, to create a "standard" of how it us anonymized, and help plugin developers to use this feature, istead of it beeing done on 1000 different ways.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'd also argue that an anonymized IP address is &lt;code&gt;0.0.0.0&lt;/code&gt; (if not an empty string). Don't see any value to try and keep partial user data for general purposes. If a plugin requires to retain specific data, it can choose to anonymize it in a specific way.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We could maybe create a Ip_zero, and a IP_partially or something like that, to make both methods avaviable.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I like the translatable &lt;code&gt;text&lt;/code&gt; and &lt;code&gt;longtext&lt;/code&gt;, but they seem too long? Something like &lt;code&gt;Deleted&lt;/code&gt; and &lt;code&gt;Deleted by the author.&lt;/code&gt; would be enough imho.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You might be right on this.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, two different filters, one of which is dynamic (a.k.a very hard to read/use) for few strings seem excessive :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I disagree.
It is also used in that way other places in core, with dynamic hooks. Like on creating/saving posts.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43618 (get_the_excerpt breaking wp-json API) created</title>
      
        <dc:creator>DannyCooper</dc:creator>

      <pubDate>Fri, 23 Mar 2018 13:35:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43618</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43618/1521812123970663</guid>
      <description>&lt;p&gt;
When creating a dynamic block for Gutenberg I added this code to a plugin:
&lt;/p&gt;
&lt;pre class="wiki"&gt;register_block_type( 'my-plugin/latest-post', array(
	'render_callback' =&amp;gt; 'my_plugin_render_block_latest_posts',
) );
function my_plugin_render_block_latest_posts( $atts ) {
	$output = '';
	$args = array(
		'posts_per_page' =&amp;gt; 3,
	);
	$query = new WP_Query( $args );
	if ( $query-&amp;gt;have_posts() ) :
		while ( $query-&amp;gt;have_posts() ) :
			$query-&amp;gt;the_post();
			$output .= '&amp;lt;li&amp;gt;';
			$output .= get_the_excerpt();
			$output .= '&amp;lt;/li&amp;gt;';
		endwhile;
		wp_reset_postdata();
	else :
		$output .= 'No posts found.';
	endif;
	return $output;
}
&lt;/pre&gt;&lt;p&gt;
For some reason, get_the_excerpt is causing this error in /wp-json/wp/v2/posts:
&lt;/p&gt;
&lt;p&gt;
Fatal error: Maximum function nesting level of '256' reached, aborting! in /app/public/wp-includes/plugin.php on line &amp;lt;i&amp;gt;899&amp;lt;/i&amp;gt;
&lt;/p&gt;
&lt;p&gt;
When I remove get_the_excerpt() or replace it with get_the_content() the error disappears.
&lt;/p&gt;
&lt;p&gt;
I use 'Local by Flywheel' and this is happening on PHP5.6 and 7
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43545 (Helper functions: Anonymizing data in a standardized way) updated</title>
      
        <dc:creator>jesperher</dc:creator>

      <pubDate>Fri, 23 Mar 2018 13:28:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43545#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43545#comment:12/1521811722334250</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43545#comment:10" title="Comment 10"&gt;postphotos&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;pre class="wiki"&gt;case 'date':
                        //should we ever make something to do this? - can dates be personal?
&lt;/pre&gt;&lt;p&gt;
Birthdates or the day when a user joins a service, for example, could partly reveal identity as it filters a larger dataset into a smaller one.
&lt;/p&gt;
&lt;p&gt;
It reminds me of the great dialogue in the #gdpr-compliance Slack channel about how user agents aren't exactly anonymous... Also, &lt;a class="ext-link" href="https://www.eff.org/deeplinks/2010/01/tracking-by-user-agent"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the EFF wrote a great post a few years back&lt;/a&gt; about what a user agent contains.
&lt;/p&gt;
&lt;p&gt;
My proposal would be to, on random submit for &lt;code&gt;time&lt;/code&gt;, just return &lt;code&gt;0 UTC&lt;/code&gt;/&lt;a class="ext-link" href="https://en.wikipedia.org/wiki/Unix_time"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Thursday, January 1, 1970&lt;/a&gt;, which should indicate, universally, that this date was redacted.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think you are right on this one. I will make it so it returns 0 / January 1, 1970, nomatter what the input is.
&lt;/p&gt;
&lt;p&gt;
For the user agents - i dont see other solution right now, than just to return an empty string.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>aduth</dc:creator>

      <pubDate>Fri, 23 Mar 2018 12:48:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:38/1521809284059283</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
If the autosave content is significantly different, create a revision. I used a value of 250 (characters)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
"Significantly different" is a hard thing to define (and the target of many an algorithm). I could write a haiku, blast it away and start from scratch, and it's surely significantly different, though doesn't qualify by this definition. This is where @azaozz's suggestion of percentage difference may work better (though still not so much for my haiku destruction). As implemented, it's based on the addition of characters from the new content, meaning also that eliminating content doesn't qualify (absolute difference). Finally, if we follow-through with this metric, would we want these thresholds to be filterable?
&lt;/p&gt;
&lt;p&gt;
Related:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="http://www.php.net/manual/en/function.similar-text.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.php.net/manual/en/function.similar-text.php&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://us1.php.net/manual/en/function.levenshtein.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://us1.php.net/manual/en/function.levenshtein.php&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
(To prior notes of performance, both of these may have poor performance characteristics for comparing long texts)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43617 (Nonce invalid messages non-informative, needs changed) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Fri, 23 Mar 2018 12:30:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43617#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43617#comment:1/1521808219050932</guid>
      <description>&lt;p&gt;
I would caution exposing the word 'nonce' as it has slang meanings we probably do not want to show to a user in some cultures, for example the UK. I understand it is a technical term, but it is also not a great slang word.
&lt;/p&gt;
&lt;p&gt;
I am however in favour of making the message more appropriate leaving out that word.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5761 (Make comments_open and pings_open filterable) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 23 Mar 2018 11:55:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5761#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5761#comment:2/1521806118723781</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-editor by gziolo. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1521806116000451"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41175 (Twenty Seventeen: The letters in words with i, j, l look all the same ...) updated</title>
      
        <dc:creator>mhloppy</dc:creator>

      <pubDate>Fri, 23 Mar 2018 11:53:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41175#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41175#comment:3/1521805988357858</guid>
      <description>&lt;p&gt;
For anyone who, like me, finds this thread searching for a solution:
&lt;/p&gt;
&lt;p&gt;
I also noticed this issue on multiple Windows systems (8.1, 10) in multiple browsers (Chrome, Firefox). After much fruitless searching, my eventual workaround / half-solution was to modify part of the css.
&lt;/p&gt;
&lt;p&gt;
Under section 19.0 (Media Queries) of style.css you'll find the following (although there'll be a bit more spacing than I'm showing here).
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
h3 {
font-size: 22px;
font-size: 1.375rem;
}
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
which is specifying the font size of h3 (header 3). For some reason bolding the latter size results in what the previous screenshots have shown (at least in Windows?), with "i" and other "dotted" letters not rendering as expected. I changed the second value to 1.4rem and it solved this issue for me.
&lt;/p&gt;
&lt;p&gt;
If there are similar issues with the font rendering oddly in headers with "i" etc, then try making tiny adjustments to these sizes - especially if you make them slightly rounder numbers. Section 5.0 also has some other stuff related to text format. Using Inspect Element in your browser, you can find out what the css file is specifying a specific string of text to format as/with (search online if you need help with inspect element).
&lt;/p&gt;
&lt;p&gt;
I do not understand what the root cause is here (does Windows not like rendering such un-round numbers?), but hopefully this helps other people.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37181 (Use metadata api in *_network_options) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Fri, 23 Mar 2018 11:06:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37181#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37181#comment:48/1521803207347546</guid>
      <description>&lt;p&gt;
In &lt;a href="https://core.trac.wordpress.org/attachment/ticket/37181/37181.10.diff"&gt;37181.10.diff&lt;/a&gt; I updated the patch after coding standard changes.
&lt;/p&gt;
&lt;p&gt;
There are now, 3 tests that pass. If you could take a look, @jeremyfelt that would be great :D
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37181.10.diff attached to Ticket #37181</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Fri, 23 Mar 2018 11:03:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37181/37181.10.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37181/37181.10.diff/1521803025480997</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>37181.9.diff attached to Ticket #37181</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Fri, 23 Mar 2018 10:59:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37181/37181.9.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37181/37181.9.diff/1521802746128417</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43617 (Nonce invalid messages non-informative, needs changed) created</title>
      
        <dc:creator>mpol</dc:creator>

      <pubDate>Fri, 23 Mar 2018 10:34:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43617</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43617/1521801251052806</guid>
      <description>&lt;p&gt;
As a followup to the "Cheating uh?" patch that has gone into WP 4.9.5, I think the message for an invalid Nonce can be improved.
&lt;/p&gt;
&lt;p&gt;
I often run into the situation where I leave a webpage open for a day, planning to respond with a comment or something similar. By the time I post something, the Nonce is invalid. I then get an empty page with "Are you sure you want to do that?". I think "Yes" and reload the page, only to have the same error. I get slightly annoyed at the UI and have to hit the Back-button of my browser, which needs active thinking.
&lt;/p&gt;
&lt;p&gt;
I think I am not alone in this. It is not just spammers hitting these messages. And I think it can be improved.
&lt;/p&gt;
&lt;p&gt;
I think it would be good to explain what happened, even if it is too technical. The Nonce was invalid, and that needs to be conveyed. I am just not sure how what is a fitting message for most users while still informative.
"The Nonce on the page did not validate. If you are sure you want to do this, please go back and try again." might be a better message.
&lt;/p&gt;
&lt;p&gt;
It could be followed by a backlink taking you back to the previous page. That could be based on the HTTP Referrer. If that is not available, a link with JavaScript with a 'history.back()' could do this job. I am not sure if that last option will refresh the page and thus the Nonce.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43608 (Display missing module error for GD when on Media Settings) updated</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Fri, 23 Mar 2018 09:24:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43608#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43608#comment:1/1521797054945663</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43614 (Tweak the Dashboard Gutenberg callout) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Fri, 23 Mar 2018 08:05:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43614#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43614#comment:3/1521792313306972</guid>
      <description>&lt;p&gt;
If we're looking at tweaking it, perhaps taking a second look at pushing people towards GitHub as well?
&lt;/p&gt;
&lt;p&gt;
GitHub is fine if you're a developer, but if you are an end user, which is a large part of our target audience with the callout, it's an unknown place with more "techy" users for the most part.
&lt;/p&gt;
&lt;p&gt;
When wanting to share an enhancement on GitHub, you need to go to Issues &amp;gt; New Issue (I didn't have an issue, I had an idea). You are then greeted by a two-page scroll of pre-filled text in, many of the parts would make no sense to a non-developer.
&lt;/p&gt;
&lt;p&gt;
When you read the description on GitHub, it's pointed out that the easiest way to give feedback is in the #core-editor slack channel (we're now sending them back again, to a place without any real moderation I might add), and requiring them to make a .org account in the first place.
&lt;/p&gt;
&lt;p&gt;
Perhaps it's more sensible to direct them to the Gutenberg plugin forums? They would still need a .org account, but it's one step instead of 3. It's also a plain text form which many users are familiar with, and it has moderation tools (after all, experience shows that passions run hot in times of change).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43312 (PHP 7.2 warning in wp_kses_attr()) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 23 Mar 2018 08:04:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43312#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43312#comment:21/1521792267192159</guid>
      <description>&lt;p&gt;
@apokalyptik What are you proposing here? Just renaming the ticket to something else? Unless I'm missing something, the output is the same. Mostly because &lt;code&gt;wp_kses_attr_check()&lt;/code&gt; previously returned false in this case.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43616 (Incorrect display settings when inserting images to posts) created</title>
      
        <dc:creator>nnikolov</dc:creator>

      <pubDate>Fri, 23 Mar 2018 08:00:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43616</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43616/1521792054703863</guid>
      <description>&lt;p&gt;
Hello.
&lt;/p&gt;
&lt;p&gt;
When I select multiple images to be inserted into a post, and &lt;strong&gt;change&lt;/strong&gt; the display settings (alignment and size), after I insert them only one of them has the correct settings. If I didn't change the settings, it works fine.
&lt;/p&gt;
&lt;p&gt;
Please watch this short video: &lt;a class="ext-link" href="https://drive.google.com/open?id=1IEKy9GtHDPgtiVt5GoYrKej1f-22AMkZ"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://drive.google.com/open?id=1IEKy9GtHDPgtiVt5GoYrKej1f-22AMkZ&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;I am using Windows 7, the latest Mozilla Firefox, WordPress 4.9.4, all plugins deactivated, default theme. I replicated the bug on multiple sites.&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
Regards.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43312 (PHP 7.2 warning in wp_kses_attr()) updated</title>
      
        <dc:creator>apokalyptik</dc:creator>

      <pubDate>Fri, 23 Mar 2018 06:06:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43312#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43312#comment:20/1521785216851450</guid>
      <description>&lt;p&gt;
@soulseekah I was simply asked to review the patch, and noted the difference on visual inspection of the diff.  All I know is that the diff changes the logic of the code being touched: That given the same specific input the output of the code block differs pre and post patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43312 (PHP 7.2 warning in wp_kses_attr()) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Fri, 23 Mar 2018 05:57:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43312#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43312#comment:19/1521784663047195</guid>
      <description>&lt;p&gt;
@apokalyptik Oooh, thanks. What's test case here? Why haven't one of the many possible test failures been triggered?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12955 (Add get_post filter) updated</title>
      
        <dc:creator>danieliser</dc:creator>

      <pubDate>Fri, 23 Mar 2018 05:15:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12955#comment:64</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12955#comment:64/1521782142676266</guid>
      <description>&lt;p&gt;
@Mte90 What are you looking for in terms of examples? How a get_post object filter would look? Or how it looks now without it, or what it would look like with final removed and an extendable model.
&lt;/p&gt;
&lt;p&gt;
Keep in mind if you remove final and we can extend WP_Post, that is only half the issue. This ticket is still 100% relevant as you are gonna still need to manually loop over $query-&amp;gt;posts and replace WP_Post objects with your new Custom_Post object.
&lt;/p&gt;
&lt;p&gt;
All of which can be avoided if there is a way to modify which class is used to instantiate the object returned.
&lt;/p&gt;
&lt;p&gt;
So if you had both tickets merged we could easily define a custom class extending WP_Post, then call built in WP methods such as get_posts, new WP_Query() etc and return a ready to use loop of our Custom_Post objects.
&lt;/p&gt;
&lt;p&gt;
Just a simplification for the growing needs of custom data object structures wrapped around the custom post type systems.
&lt;/p&gt;
&lt;p&gt;
I have examples of nearly all of these in one plugin, though we copied and prefixed WP_Post without final. IE we use custom objects, have query wrappers to replace WP_Post etc. Takes up a lot of code ;).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 23 Mar 2018 04:03:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:37/1521777819462612</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43316/43316.8.diff" title="Attachment '43316.8.diff' in Ticket #43316"&gt;43316.8.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43316/43316.8.diff" title="Download"&gt;​&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If the autosave content is significantly different, create a revision. I used a value of 250 (characters) which i think is around a paragraph, i realized a percent might not work, for a very large document for example a revision would only get made aver a huge change. one save per paragraph seems about right, i'd like some feedback though. is this approach multi character compatible I wonder?
&lt;/li&gt;&lt;li&gt;Add a  filter &lt;code&gt;wp_create_revision_for_api_autosave&lt;/code&gt; enabling control of the revision creation behavior
&lt;/li&gt;&lt;li&gt;For the collection endpoint, return all the autosaves, not just those belonging to to the current user.
&lt;/li&gt;&lt;li&gt;Regenerate fixtures.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
@azaozz what else remains?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43316.8.diff attached to Ticket #43316</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 23 Mar 2018 04:00:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43316/43316.8.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43316/43316.8.diff/1521777646393910</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>43316.7.diff attached to Ticket #43316</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 23 Mar 2018 03:52:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43316/43316.7.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43316/43316.7.diff/1521777165994977</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43615 (Shake Tremor Bug on Admin Area) created</title>
      
        <dc:creator>Marius84</dc:creator>

      <pubDate>Fri, 23 Mar 2018 03:47:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43615</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43615/1521776852581246</guid>
      <description>&lt;p&gt;
When you have 4+ more themes installed and want to switch and move from one theme to another theme some glitch happen and you can see some tremor/shake on admin area.
&lt;/p&gt;
&lt;p&gt;
I have made a video to explain this situation so you can reply the bug.
&lt;/p&gt;
&lt;p&gt;
video: &lt;a class="ext-link" href="https://www.dropbox.com/s/gytv3yblnp7g5rn/IMG_1759.MOV?dl=0"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.dropbox.com/s/gytv3yblnp7g5rn/IMG_1759.MOV?dl=0&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43216 (IXR Server Warning) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 23 Mar 2018 00:52:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43216#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43216#comment:7/1521766329195736</guid>
      <description>&lt;p&gt;
It's been mentioned elsewhere that the changes in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42652" title="XML-RPC: Add default values to IXR_Message for PHP 7.2 compatibility ..."&gt;[42652]&lt;/a&gt; may not be compatible with existing uses, specifically the &lt;code&gt; = false;&lt;/code&gt; additions.
&lt;/p&gt;
&lt;p&gt;
Although there's unlikely to be any side effects of this, I'm commenting to say that only the &lt;code&gt; = array()&lt;/code&gt; change was really needed here, and the rest was mostly just irrelevant.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42505 (Docblock improvements for 5.1) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 23 Mar 2018 00:33:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42505#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42505#comment:29/1521765233588721</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42873" title="Docs: Correct method reference in a comment for ..."&gt;42873&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Correct method reference in a comment for &lt;code&gt;Bulk_Plugin_Upgrader_Skin::$plugin_info&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42677" title="Docs: Update the hook docs for `update_bulk_theme_complete_actions`.
 ..."&gt;[42677]&lt;/a&gt; for &lt;code&gt;Bulk_Theme_Upgrader_Skin::$theme_info&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/42505" title="#42505: task (blessed): Docblock improvements for 5.1 (new)"&gt;#42505&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42873]: Docs: Correct method reference in a comment for ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 23 Mar 2018 00:33:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42873</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42873/1521765233103728</guid>
      <description>&lt;p&gt;
Docs: Correct method reference in a comment for &lt;code&gt;Bulk_Plugin_Upgrader_Skin::$plugin_info&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42677" title="Docs: Update the hook docs for `update_bulk_theme_complete_actions`.
 ..."&gt;[42677]&lt;/a&gt; for &lt;code&gt;Bulk_Theme_Upgrader_Skin::$theme_info&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/42505" title="#42505: task (blessed): Docblock improvements for 5.1 (new)"&gt;#42505&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43614 (Tweak the Dashboard Gutenberg callout) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 23 Mar 2018 00:06:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43614#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43614#comment:2/1521763613499226</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-editor by pento. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1521763611000114"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43614 (Tweak the Dashboard Gutenberg callout) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 23 Mar 2018 00:06:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43614#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43614#comment:1/1521763560011013</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43614 (Tweak the Dashboard Gutenberg callout) created</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 23 Mar 2018 00:05:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43614</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43614/1521763548517702</guid>
      <description>&lt;p&gt;
There are a couple of tweaks to be made to the callout.
&lt;/p&gt;
&lt;p&gt;
The GIF we have loaded is showing a pretty old interface, we should replace that before 4.9.5 is release.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://s.w.org/images/core/gutenberg-screenshot.gif?20180322"&gt;&lt;img src="https://s.w.org/images/core/gutenberg-screenshot.gif?20180322" alt="https://s.w.org/images/core/gutenberg-screenshot.gif" crossorigin="anonymous" title="https://s.w.org/images/core/gutenberg-screenshot.gif" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Also, @nikolam noted in Slack that he was confused by the similarity of the "Install Today", "Activate Today" , and "Try Today" messages on the button. @melchoyce, @karmatosed, do you have thoughts on this?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item>
   </channel>
</rss>