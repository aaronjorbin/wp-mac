<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #49072 (Move readme.html &amp; license.txt out of project root (maybe into Uploads?)) updated</title>
      
        <dc:creator>tobifjellner</dc:creator>

      <pubDate>Tue, 24 Dec 2019 22:26:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49072#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49072#comment:4/1577226364851585</guid>
      <description>&lt;p&gt;
I don't like the idea of moving these files into /wp-content/uploads&lt;br /&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Some WordPress installations may place the /uploads directory even on a separate server. The WordPress installation shouldn't really put anything in the uploads directory.
&lt;/li&gt;&lt;li&gt;The file readme.html is updated now and then. It includes important information about WordPress' environment demands. But a system update shouldn't never change &lt;strong&gt;anything&lt;/strong&gt; in the /updates directory.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Also keep in mind that several translated versions of WordPress will either replace these files and/or add a localized version with a different name.&lt;br /&gt;
If we move license.txt and readme.html, then we would also need to shuffle around the corresponding localized versions.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39768 (Incorrect image returned with attachment_url_to_postid()) updated</title>
      
        <dc:creator>archon810</dc:creator>

      <pubDate>Tue, 24 Dec 2019 19:31:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39768#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39768#comment:12/1577215871849268</guid>
      <description>&lt;p&gt;
Looking forward to it in 5.4.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49059 (Whitespace inside p element in wp-signup.php should be removed) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 24 Dec 2019 18:48:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49059#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49059#comment:24/1577213317512947</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/49059#comment:23" title="Comment 23"&gt;johnjamesjacoby&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I added the commit keyword originally, and you removed it. Keyword wars are uncooperative.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is not a "keyword war" :) In my opinion this is not a good change to make. Removing the "commit" keyword is the result of that review. I'm sorry if I'm failing to express that more convincingly/in better words.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Over the last couple of days I've been trying to convince you and the original poster that even small changes like this one have to be assessed from all possible sides. The proposed change is a small enhancement to the outputted HTML white space and at the same time a small decrease to source code readability mostly because it removes code highlighting.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Arguments like this one are wholly unproductive. The notifications from this ticket are causing me too much anxiety, because you're wrong &lt;em&gt;and&lt;/em&gt; you're not listening and you're not trying to be helpful, so I'm unsubscribing.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sorry if you feel that way, and yes, this is causing me a lot of anxiety too. All I tried to do was a simple review of a small code change that seems to slightly enhance one thing but slightly diminish another.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39768 (Incorrect image returned with attachment_url_to_postid()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 24 Dec 2019 17:53:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39768#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39768#comment:11/1577210000230942</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39768#comment:10" title="Comment 10"&gt;archon810&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
An alternate solution, and one we went with, is to get all the rows in PHP and if &amp;gt;1, go through them and do a case sensitive match in PHP.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks, that actually seems the most straightforward option here, without any side effects that I can think of.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Implemented in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39768/39768.3.diff" title="Attachment '39768.3.diff' in Ticket #39768"&gt;39768.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39768/39768.3.diff" title="Download"&gt;​&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39768.3.diff attached to Ticket #39768</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 24 Dec 2019 17:51:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39768/39768.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39768/39768.3.diff/1577209917561089</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #48303 (Docblock improvements for 5.4) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 24 Dec 2019 16:17:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48303#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48303#comment:51/1577204238797293</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47009" title="Docs: Use a third-person singular verb for comment template function ..."&gt;47009&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Use a third-person singular verb for comment template function descriptions, per the documentation standards.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/48303" title="#48303: task (blessed): Docblock improvements for 5.4 (new)"&gt;#48303&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [47009]: Docs: Use a third-person singular verb for comment template function ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 24 Dec 2019 16:17:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47009</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47009/1577204237688020</guid>
      <description>&lt;p&gt;
Docs: Use a third-person singular verb for comment template function descriptions, per the documentation standards.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/48303" title="#48303: task (blessed): Docblock improvements for 5.4 (new)"&gt;#48303&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #49076 (get_comment_author_url() missing inline doc description for Code Reference) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 24 Dec 2019 16:08:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49076#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49076#comment:4/1577203715552475</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47008" title="Docs: Improve documentation for `get_comment_author_url()`.
Props ..."&gt;47008&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Improve documentation for &lt;code&gt;get_comment_author_url()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props stevenlinx.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49076" title="#49076: defect (bug): get_comment_author_url() missing inline doc description for Code Reference (closed: fixed)"&gt;#49076&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [47008]: Docs: Improve documentation for `get_comment_author_url()`.  Props ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 24 Dec 2019 16:08:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47008</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47008/1577203714458568</guid>
      <description>&lt;p&gt;
Docs: Improve documentation for &lt;code&gt;get_comment_author_url()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props stevenlinx.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49076" title="#49076: defect (bug): get_comment_author_url() missing inline doc description for Code Reference (closed: fixed)"&gt;#49076&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #49076 (get_comment_author_url() missing inline doc description for Code Reference) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 24 Dec 2019 16:08:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49076#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49076#comment:3/1577203684098416</guid>
      <description>&lt;p&gt;
Hi there, welcome back to WordPress Trac! Thanks for the patch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The "must be within The Loop, or a comment loop" piece is probably not particularly relevant to the specific function, as it applies to other comments template functions as well. The rest looks good, though could perhaps be incorporated into the existing description and &lt;code&gt;@return&lt;/code&gt; tag to avoid repetition.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #10726,​49079 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 24 Dec 2019 15:57:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=10726%2C49079</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=10726%2C49079/1577203029102899</guid>
      <description>duplicate: &lt;p&gt;
Hi there, thanks for the ticket!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
We're already tracking this enhancement in &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/10726" title="#10726: enhancement: Admin notifications for more than 1 email (reopened)"&gt;#10726&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Tickets #15317,​49074 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 24 Dec 2019 15:54:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=15317%2C49074</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=15317%2C49074/1577202860512083</guid>
      <description>duplicate: &lt;p&gt;
Hi there, welcome to WordPress Trac!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks for the report, we're already tracking this issue in &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/15317" title="#15317: defect (bug): My Sites limited to 23 sites on Admin Bar (assigned)"&gt;#15317&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #49079 (Allow more than one admin email (multiple recipients)) created</title>
      
        <dc:creator>apedog</dc:creator>

      <pubDate>Tue, 24 Dec 2019 15:25:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49079</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49079/1577201119038542</guid>
      <description>&lt;p&gt;
WordPress should allow setting more than one admin email.&lt;br /&gt;
Case in point: allow for both client/owner and maintainer/dev/administrator to receive admin emails (updates and critical error notifications etc.)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I know that there are plugins out there that do this, but when a site encounters a critical error, plugins are usually the first things to go. So plugins might not be as reliable. I believe this functionality should exist in core.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Obviously adding a new email would require verification by a current admin, and verification of new email added.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49078 (Media Library permission checks in WordPress) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 24 Dec 2019 15:03:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49078#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49078#comment:2/1577199794207470</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49076 (get_comment_author_url() missing inline doc description for Code Reference) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 24 Dec 2019 14:48:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49076#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49076#comment:2/1577198927451141</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49078 (Media Library permission checks in WordPress) updated</title>
      
        <dc:creator>danskoya</dc:creator>

      <pubDate>Tue, 24 Dec 2019 13:31:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49078#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49078#comment:1/1577194291327013</guid>
      <description>&lt;p&gt;
platform:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Apache HTTPD 2.4.41, OpenSSL 1.1.1d, (mod_php) PHP 7.4&lt;br /&gt;
WordPress 5.3.2 (no plugins, default 2019 theme, no hard-coded mods)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49078 (Media Library permission checks in WordPress) created</title>
      
        <dc:creator>danskoya</dc:creator>

      <pubDate>Tue, 24 Dec 2019 13:19:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49078</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49078/1577193581364012</guid>
      <description>&lt;p&gt;
If permissions to ~/uploads/ are not set correctly (or was modified in some manner), deleting media will only delete database references (item(s) will disappear from the Media Library view) but the actual files are not deleted.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
However, when uploading media, permission errors are displayed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This seems to be the the default behavior.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When was the last time you checked the contents of ~/uploads/ directory?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49077 (Add https://github.com/WordPress/wordpress-develop to Packagist) created</title>
      
        <dc:creator>clarinetlord</dc:creator>

      <pubDate>Tue, 24 Dec 2019 11:03:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49077</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49077/1577185391342422</guid>
      <description>&lt;p&gt;
Currently, the WordPress Develop repo is not on Packagist, even though it now has a composer.json file (thanks to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43558" title="#43558: enhancement: Add `composer.json` file for development dependencies (closed: fixed)"&gt;#43558&lt;/a&gt;). In order to use as a dependency, for example to use as a foundation to building an automated testing suite for a theme or plugin, you need to manually add the Github URL as an additional repository definition in your project's composer.json file. Normally this wouldn't be much of an issue, but due to the large number of branches and tags, Composer has to search the entire repo to generate a list of tags and branches available on every install/update, which takes several minutes! Adding WordPress Develop to Packagist (to be alongside &lt;a class="ext-link" href="https://packagist.org/packages/wordpress/phpdoc-parser"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://packagist.org/packages/wordpress/phpdoc-parser&lt;/a&gt;), would parse and cache branches and tags as they are released via the Packagist Github hook.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49076 (get_comment_author_url() missing inline doc description for Code Reference) updated</title>
      
        <dc:creator>stevenlinx</dc:creator>

      <pubDate>Tue, 24 Dec 2019 09:19:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49076#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49076#comment:1/1577179173098039</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>tck49076.diff attached to Ticket #49076</title>
      
        <dc:creator>stevenlinx</dc:creator>

      <pubDate>Tue, 24 Dec 2019 09:17:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49076/tck49076.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49076/tck49076.diff/1577179055328237</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49076 (get_comment_author_url() missing inline doc description for Code Reference) created</title>
      
        <dc:creator>stevenlinx</dc:creator>

      <pubDate>Tue, 24 Dec 2019 09:08:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49076</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49076/1577178531626282</guid>
      <description>&lt;p&gt;
The Code Reference page is missing the description field , which the Codex page has. The DevHub (Code Reference) description field came from inline docs of source code header.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Code Reference : get_comment_author_url()&lt;br /&gt;
&lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/get_comment_author_url/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/reference/functions/get_comment_author_url/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Codex : get_comment_author_url()&lt;br /&gt;
&lt;a class="ext-link" href="https://codex.wordpress.org/Function_Reference/get_comment_author_url"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Function_Reference/get_comment_author_url&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49075 (Twenty Twenty: Inserted images not responsive at smaller browser widths) created</title>
      
        <dc:creator>JarretC</dc:creator>

      <pubDate>Tue, 24 Dec 2019 08:32:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49075</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49075/1577176344455419</guid>
      <description>&lt;p&gt;
Reported on the forums here initially:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://wordpress.org/support/topic/posts-images-are-not-responsive"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/posts-images-are-not-responsive&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When decreasing the browser width down to the &amp;gt; 600px width you'll start to see some images being cut off. This is due to the following code:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;.entry-content &amp;gt; *:not(.alignwide):not(.alignfull):not(.alignleft):not(.alignright):not(.is-style-wide) {
	max-width: 58rem;
	width: calc(100% - 4rem);
}
&lt;/pre&gt;&lt;p&gt;
As inserted images are placed inside of a &amp;lt;figure&amp;gt; element the code sets the max-width to something wider than what the browser width is. If the inserted image has a width set inline, it'll cause it to display past the border of the browser.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
max-width could be set to either 100% in this case or could be targeted using media queries to something where if the browser width is less than 600px the max-width is then set to 100%&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #48958 (Twenty Twenty: Multiple Block Left/Right Align Display Issues) updated</title>
      
        <dc:creator>JarretC</dc:creator>

      <pubDate>Tue, 24 Dec 2019 08:27:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48958#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48958#comment:3/1577176026370024</guid>
      <description>&lt;p&gt;
Related: &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/48718" title="#48718: defect (bug): Twenty Twenty: Block Left/Right Align Display Issues (assigned)"&gt;#48718&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This is due to the elements being absolutely positioned. I haven't yet figured out a good workaround without removing the absolute positioning entirely and placing the images inside of the content "box" like the majority of other sites do that would fix this issue.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49074 (Can't scroll to bottom of multisite list in menu) created</title>
      
        <dc:creator>amazewebsite</dc:creator>

      <pubDate>Tue, 24 Dec 2019 07:07:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49074</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49074/1577171252463743</guid>
      <description>&lt;p&gt;
In a multi site dashboard when logged as admin, with a long list of multi sites it's not possible to scroll to bottom of list in the menu&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://i.ibb.co/8BCzDPB/Screen-Shot-2019-12-24-at-12-47-19-AM.png"&gt;&lt;img src="https://i.ibb.co/8BCzDPB/Screen-Shot-2019-12-24-at-12-47-19-AM.png" alt="https://i.ibb.co/8BCzDPB/Screen-Shot-2019-12-24-at-12-47-19-AM.png" crossorigin="anonymous" title="https://i.ibb.co/8BCzDPB/Screen-Shot-2019-12-24-at-12-47-19-AM.png" /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49072 (Move readme.html &amp; license.txt out of project root (maybe into Uploads?)) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Tue, 24 Dec 2019 05:13:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49072#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49072#comment:3/1577164433153617</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I really struggle to see where you're coming from here, they're not "untracked"&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Bad word choice on my part, but I couldn’t think of anything better at the time.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
By untracked, I meant to convey that these files are uniquely served raw and without any PHP intervention, unlike favicon.ico and robots.txt which both have handlers when the files are not otherwise present (or filtered in some other way.)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I don’t think license.txt or readme.html are the kinds of files that make sense to handle dynamically like a favicon or robots file, but I also don’t think it makes sense to bundle them in the root of every single installation, especially when no commonly popular Apache or Nginx ruleset for WordPress have ever attempted to 404 them, redirect them, or anything else.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
So step one in my mind is to find a way to simply remove these files from the project root. Step two is to include them in a way that feels intentional, possibly even as a fun improvement.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
macOS &lt;a class="ext-link" href="http://osxdaily.com/2014/08/20/famous-steve-jobs-speech-hidden-mac-easter-egg/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;famously ships with&lt;/a&gt; a not-so-hidden copy of the “Here’s to the crazy ones” speech. I do still think it would be fun if WordPress shipped with the GPL license as an Attachment that a User &lt;em&gt;might&lt;/em&gt; read, as opposed to a raw file they never will. That’s just a single idea off the top of my head, to soften the blow of WordPress not shipping with a copy of the GPL license at all, which isn’t what I’m suggesting. Hopefully that clarifies somewhat?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>fullpatch-v5-44867-image-editor-save-modified-image-as-a-new-copy.patch attached to Ticket #44867</title>
      
        <dc:creator>drzraf</dc:creator>

      <pubDate>Tue, 24 Dec 2019 04:29:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44867/fullpatch-v5-44867-image-editor-save-modified-image-as-a-new-copy.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44867/fullpatch-v5-44867-image-editor-save-modified-image-as-a-new-copy.patch/1577161757244117</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49014 (Silence set_time_limit() call in wp-admin/includes/class-wp-upgrader.php) updated</title>
      
        <dc:creator>autotutorial</dc:creator>

      <pubDate>Tue, 24 Dec 2019 04:03:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49014#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49014#comment:4/1577160202273987</guid>
      <description>&lt;p&gt;
Thanks for your answer from WordPress 5.2 the minimum php requirement is 5.6.20, I wonder if you have any precedent to temporarily disable error_reporting(0) in order not to use the suppression operator (it's slow).&lt;br /&gt;
Obviously for all those probable functions disabled but necessary for WordPress ini_get, ini_set, chmod, buffer, temporary directory etc.&lt;br /&gt;
Downloading the file the weight is known but the Download and Upload speed is unknown, you could add a pre-calculation for the zip files (WordPress update, plugin, repository theme)&lt;br /&gt;
, subsequently calculate the variable speed.&lt;br /&gt;
For the second question, I am afraid there is not much to do to create the code to handle this because it is very complex.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49056 (Can we stop bundling default themes?) updated</title>
      
        <dc:creator>autotutorial</dc:creator>

      <pubDate>Tue, 24 Dec 2019 03:27:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49056#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49056#comment:10/1577158037684521</guid>
      <description>&lt;p&gt;
I will add a note for the default theme.&lt;br /&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/5.3-branch/wp-includes/default-constants.php#L407"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/5.3-branch/wp-includes/default-constants.php#L407&lt;/a&gt;&lt;br /&gt;
it is also possible to force the use of a predefined theme in the wp-config.php file, before each modification make a backup of the database and files.&lt;br /&gt;
I changed it to a WordPress multisite 5.3 directly from the core file.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49072 (Move readme.html &amp; license.txt out of project root (maybe into Uploads?)) updated</title>
      
        <dc:creator>apedog</dc:creator>

      <pubDate>Tue, 24 Dec 2019 02:10:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49072#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49072#comment:2/1577153450242301</guid>
      <description>&lt;p&gt;
These two files might belong in a WordPress installation (well, pre-installation anyway) but I don't feel they belong in &lt;em&gt;&lt;strong&gt;my&lt;/strong&gt;&lt;/em&gt; database. I don't want them in my SQL tables nor in my uploads folder. Why spread the clutter?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
These files are as useful as &lt;code&gt;wp-config-sample.php&lt;/code&gt; - very useful up until the point my site is up and running. Not so much afterwards.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Maybe they can find their home as links next to &lt;code&gt;about.php&lt;/code&gt; &lt;code&gt;credits.php&lt;/code&gt; etc. It would certainly give them the visibility you feel they need.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44586 (SQL mode test results broken in MySQL 8.0.11) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Tue, 24 Dec 2019 01:45:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44586#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44586#comment:2/1577151947594038</guid>
      <description>&lt;p&gt;
Related &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44384" title="#44384: defect (bug): InnoDB doesn't support SPATIAL indexes for query CREATE TEMPORARY TABLE (closed: fixed)"&gt;#44384&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44586 (SQL mode test results broken in MySQL 8.0.11) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Tue, 24 Dec 2019 01:42:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44586#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44586#comment:1/1577151744932648</guid>
      <description>&lt;p&gt;
I can replicate this as well as an additional DB test failure. I am using MySQL 8.0.16 locally.&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;There were 3 failures:
1) Tests_DB::test_set_sql_mode
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
-    0 =&amp;gt; 'IGNORE_SPACE'
-    1 =&amp;gt; 'NO_AUTO_CREATE_USER'
+    0 =&amp;gt; 'ERROR_FOR_DIVISION_BY_ZERO'
+    1 =&amp;gt; 'NO_ENGINE_SUBSTITUTION'
+    2 =&amp;gt; 'NO_ZERO_IN_DATE'
 )
.../tests/phpunit/includes/abstract-testcase.php:682
.../tests/phpunit/tests/db.php:303
2) Tests_DB::test_set_allowed_incompatible_sql_mode
Failed asserting that an array contains 'ONLY_FULL_GROUP_BY'.
.../tests/phpunit/tests/db.php:343
3) Tests_dbDelta::test_spatial_indices
Failed asserting that an array is empty.
.../tests/phpunit/tests/dbdelta.php:576
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49072 (Move readme.html &amp; license.txt out of project root (maybe into Uploads?)) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 24 Dec 2019 00:50:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49072#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49072#comment:1/1577148636799160</guid>
      <description>&lt;p&gt;
In my humble opinion, I personally disagree with several fundamental ideas behind your train of thought, but I like where you're going with it.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://wordpress.org/license.txt"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/license.txt&lt;/a&gt;&lt;br /&gt;
All of the immediately above URLs do not work, and result in a 404 page.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That sounded like something we should fix, it now loads the WordPress.org License info page instead.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Some folks recommend removing these files as a security precaution&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We're both on the same page here, removing them only removes one minor way to identify a site as running WordPress - removing them provides no benefit what-so-ever (Sorry security plugins who love to block these files).&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Some folks delete these files from their internal WordPress forks simply to reduce their maintenance footprint&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
"Some" here would be the incredibly few people who track WordPress in their own VCS system, there's no legitimate reason to remove the files to reduce the burden here since WordPress is just going to add them back in (if using WordPress upgrades, o many 3rd party tooling) - although their lack of being on the filesystem should no longer force WordPress to abort using partial upgrade packages when it finds them missing for minor releases - but it'll add them back for the next major upgrade.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Once installed, though, these files become invisibly burdensome on the web server, as they are untracked in PHP and rarely changing in the WordPress project.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I really struggle to see where you're coming from here, they're not "untracked" unless you consider &lt;code&gt;wp-login.php&lt;/code&gt; to also be untracked - they're treated the same as any other WordPress file and updated/refreshed with each WordPress update, they're not left to rot, and are only invisible if you never knew they existed in the first place (which is the ideal situation - most end-users shouldn't need to see these specific files) since the content (as i'll go into below) would be far better off presented in an entirely different manner.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Ultimately though, I have always considered these files to be assets that belong inside of WordPress, not outside of it.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That I can agree with; however, these files are not intended to be used &lt;em&gt;within&lt;/em&gt; WordPress, they're specifically designed for use &lt;em&gt;outside&lt;/em&gt; of WordPress, and given that these two use-cases are significantly different, it makes very little sense in combining it.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
What I think you really want to say here, is that you feel the content of these files provides useful content to the end user, specifically, so that they a) understand the license of what WordPress is (license.txt) and b) understand the requirements of WordPress and where to get support (readme.html).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
On the license front - Linking to, or displaying the raw license, is a common way for software to present it to the end-user, but is one that is ignored and never read by the vast majority of even technically minded people - I doubt many of the WordPress users who would appreciate what the GPL provides to them would ever actually read the GPL and not get bored. So I don't think that's the right approach for WordPress. I actually appreciate the effort that has been taken in the About section, viewable at a URL similar to &lt;a class="ext-link" href="https://dd32.id.au/wp-admin/freedoms.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://dd32.id.au/wp-admin/freedoms.php&lt;/a&gt; (Toolbar -&amp;gt; W -&amp;gt; About WordPress -&amp;gt; Freedoms). That page does a great job IMHO of explaining what freedoms the license gives, although it lacks in actually defining the license and the actual license text is at least two clicks away from the page, it's a lot more useful to the average WordPress user than the raw license ever would be. I obviously think that could be improved, in both linking to the license text and explicitly defining what it is (Rather than just "GPL")&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
On the Requirements and Support front, I wouldn't mind seeing the requirements spelt out somewhere, but for the majority of users, Site Health provides a better insight into that than what listing the requirements ever would. Support is available through the Admin Toolbar with the W menu listing Documentation (Codex - That should be updated), Support (Forums), and Feedback (Feedback Forum). I think we could obviously do better there as well. I would even argue that a "Where to get help" in the about section would be a useful addition, pull the support section from the readme and expose it there in a nice readable manner - although that will also show that &lt;code&gt;readme.html&lt;/code&gt; probably needs it's support section updating.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
tl;dr: I'm not against exposing this data more, I just don't believe it's the right format to be doing it in. Just my 5c.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48955 (WP 5.3.1 changes cause potential backwards compatibility breakage with kses) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Tue, 24 Dec 2019 00:38:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48955#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48955#comment:24/1577147939413560</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/48955#comment:21" title="Comment 21"&gt;aduth&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What about plugins which respect the documented string type, and would likewise break if a feature enhancement to support arrays was adopted?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
(examples)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Arguably, it was never the case that &lt;code&gt;wp_kses&lt;/code&gt; would have worked as expected with an array value filtered by any of the plugins above.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The reason I keep harping on about the documentation is that it serves as a contract against which backwards-compatibility should be measured.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is a fair point, and the examples you listed (which look like they will mostly either do nothing or cause a warning and perhaps some minor breakage) are a good argument against changing the long-documented behavior. However I don't think accidentally breaking an undocumented behavior that is being actively used is necessarily the right idea, either.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If a plugin comes to rely on an incidental, undocumented behavior, it's unfortunate if that behavior changes over time. [...] Given the choice, we should seek to uphold support for the documented behavior.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Making functions conform more closely to their documented behavior is good, but that doesn't mean incidental, undocumented behavior that people are relying on has to stop working.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Another path to take (already suggested above) would be to restore the array behavior but add a deprecation notice when an array is passed to any of the relevant functions. I'm thinking now that this is probably the best solution.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
we should be especially cautious with added feature support for these functions, given their sensitive nature and the expanded complexity of supporting additional combinations of arguments.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Also a fair point, but you'd be trading a hypothetical concern against something that is known to be a problem today:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/48955#comment:2" title="Comment 2"&gt;iCaleb&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We're seeing quite a few errors stem from this unfortunately on a number of sites, with some PHP errors coming from popular plugins.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
From Caleb's same comment, "deprecation notices followed by strict type checking later on" seems like a sensible way to handle this, addressing broken sites in the short term and predictability/complexity in the longer term.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49073 (Edit Media aspectratio-free selection not possible after setting ...) created</title>
      
        <dc:creator>TBschen</dc:creator>

      <pubDate>Mon, 23 Dec 2019 23:40:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49073</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49073/1577144445312511</guid>
      <description>&lt;p&gt;
Go to media, edit an image, click on the Edit Image button&lt;br /&gt;
If you select part of the image, you can freely decide its selection (works).&lt;br /&gt;
If you enter an aspect ratio on the right and delete the numbers afterwards, your aspect ratio is still what was entered before. You can't get a aspectratio-free selection anymore until you reload.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49072 (Move readme.html &amp; license.txt out of project root (maybe into Uploads?)) created</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Mon, 23 Dec 2019 23:13:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49072</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49072/1577142786759791</guid>
      <description>&lt;p&gt;
On the majority of WordPress installations, it is possible to navigate to 2 files that are outside of the control of PHP:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://nacin.com/license.txt"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://nacin.com/license.txt&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://nacin.com/readme.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://nacin.com/readme.html&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
One could argue that it is a good thing these files are visible; that the GPL license is something worth sharing at the root, or that the Famous 5 Minute Install is still an idea worth promoting.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
However, it is not uncommon to re/move these files, or otherwise obscure them via other means (server configurations, running WordPress in a subdirectory, etc...)&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://ma.tt/license.txt"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://ma.tt/license.txt&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://wordpress.com/license.txt"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.com/license.txt&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://wordpress.org/license.txt"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/license.txt&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
All of the immediately above URLs do not work, and result in a 404 page.&lt;br /&gt;
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Some folks recommend removing these files as a security precaution, though I'm not confident this ultimately protects from very much.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Some folks delete these files from their internal WordPress forks simply to reduce their maintenance footprint, particularly when they do not need to distribute their changes.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Ultimately though, I have always considered these files to be assets that belong &lt;em&gt;inside&lt;/em&gt; of WordPress, not &lt;em&gt;outside&lt;/em&gt; of it. &lt;code&gt;license.txt&lt;/code&gt; is important to the person who downloaded and installed it, not to any visitor of the site, and the same can be said about &lt;code&gt;readme.html&lt;/code&gt;. That's why, I believe, these assets would be better served as part of the Default Site Content, specifically inside the Media Library.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm imagining that, upon a successful installation, these files would be moved out of the root of the installation, and into corresponding Media Attachments, as the very first 2 files in the Media Library.&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;This helps promote the ideologies of the GPL to end users, and hopefully forces us to consider how valuable the content inside of &lt;code&gt;readme.html&lt;/code&gt; really is these days (it still links to Planet, IRC, the Codex, and a number of other deprecated locations.)
&lt;/li&gt;&lt;li&gt;This helps users familiarize themselves with what kinds of files can exist inside the Media Library (&lt;code&gt;.html&lt;/code&gt; is not an allowed file type, so this would likely need a total rethink, maybe a &lt;code&gt;.txt&lt;/code&gt; file is sufficient?)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The reason I'm including the proposed solution above, is because I think these files still need to exist in the root as part of the pre-installation experience. Once installed, though, these files become invisibly burdensome on the web server, as they are untracked in PHP and rarely changing in the WordPress project.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This is another one of those far-out JJJ ideas that I'm not expecting much serious traction on, but I do think would be a welcome improvement to the overall WordPress installation process. Other OSS projects do something similar with their own bundled assets (NextCloud, GitLab, etc...) so this is not a completely new idea.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49071 (None of the images with the file name ending -300x250 will work as ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Dec 2019 22:29:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49071#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49071#comment:2/1577140186951090</guid>
      <description>&lt;p&gt;
Related: &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/46822" title="Upload: fix `wp_unique_filename()` to prevent name collisions with ..."&gt;[46822]&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42437" title="#42437: defect (bug): Thumbnails can overwrite other uploads if filename matches (closed: fixed)"&gt;#42437&lt;/a&gt;, &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/49063" title="#49063: defect (bug): Media Upload: -1 appended to brand new filename (new)"&gt;#49063&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49071 (None of the images with the file name ending -300x250 will work as ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Dec 2019 22:27:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49071#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49071#comment:1/1577140076469545</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49071 (None of the images with the file name ending -300x250 will work as ...) created</title>
      
        <dc:creator>mmoro</dc:creator>

      <pubDate>Mon, 23 Dec 2019 22:22:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49071</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49071/1577139772379019</guid>
      <description>&lt;p&gt;
If I upload an image called image-300x250.jpg (or any other with ending -300x250) via media gallery I can see the image (and 150x150 version) in the upload folder but the image thumbnail is blank in the media gallery.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The image is blank also in the Gutenberg editor screen and in the front end. Anyway the correct img src url seems to be found in the front end html code.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #48955 (WP 5.3.1 changes cause potential backwards compatibility breakage with kses) updated</title>
      
        <dc:creator>aduth</dc:creator>

      <pubDate>Mon, 23 Dec 2019 22:14:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48955#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48955#comment:23/1577139273672137</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/48955#comment:22" title="Comment 22"&gt;xkon&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It seems that due to the mentioned hook &lt;code&gt;add_filter( 'pre_kses', 'wp_pre_kses_block_attributes', 10, 3 );&lt;/code&gt; the &lt;code&gt;parse_blocks()&lt;/code&gt; is running everywhere throughout the admin. Is this expected behavior?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes. These screens use one or more of the &lt;code&gt;wp_kses&lt;/code&gt; family of functions. The default KSES behavior will now filter a markup string for block content.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See also: &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/48955#comment:18" title="Comment 18"&gt;comment:18&lt;/a&gt; &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49059 (Whitespace inside p element in wp-signup.php should be removed) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Mon, 23 Dec 2019 21:29:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49059#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49059#comment:23/1577136570059537</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm sorry but I don't see what's "not helpful" here? :)&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Please read the sentence immediately following the one you quoted.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As posted abode, IDEs can highlight HTML tags nicely but not when they are outputted as static/hard-coded PHP strings.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This has nothing to do with the issue being discussed.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
My opinion is that "white space" changes like this one should not be done one-file-at-a-time&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
My opinion (and 15 years of WordPress history supports this) is if improvements like these do not happen a little bit at time, they will never get done at all.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It is completely nonsensical (and against your own points) to argue &lt;em&gt;for&lt;/em&gt; changing 8000 lines at once, many of which have nothing to do with the simple issue being discussed here.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That's why I added the close keyword.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I added the commit keyword originally, and you removed it. Keyword wars are uncooperative. Arguments like this one are wholly unproductive. The notifications from this ticket are causing me too much anxiety, because you're wrong &lt;em&gt;and&lt;/em&gt; you're not listening and you're not trying to be helpful, so I'm unsubscribing.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49069 (Multisite: 404 template isn't used in network installs when a file ...) updated</title>
      
        <dc:creator>apedog</dc:creator>

      <pubDate>Mon, 23 Dec 2019 21:26:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49069#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49069#comment:6/1577136391093836</guid>
      <description>&lt;p&gt;
@henrywright &lt;br /&gt;
I've no experience with multisite, so I've no idea why WordPress's default .htaccess rules are as they are.&lt;br /&gt;
I was treating this as a support question. Figuring this ticket would be flagged as &lt;code&gt;invalid&lt;/code&gt; by someone else down the road, I thought I'd chime in with an easy solution.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Adding an &lt;code&gt;ErrorDocument&lt;/code&gt; rule by default might be considered an opinionated solution, that could affect others in ways I don't know.&lt;br /&gt;
I've no idea if WordPress &lt;em&gt;should&lt;/em&gt; redirect server 404's to a WordPress document. And even if so, if it perhaps should redirect to &lt;code&gt;/404.php&lt;/code&gt; and not &lt;code&gt;/index.php&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Adding a line of code to your &lt;code&gt;.htaccess&lt;/code&gt; is an easy and reasonable fix.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48955 (WP 5.3.1 changes cause potential backwards compatibility breakage with kses) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Mon, 23 Dec 2019 20:58:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48955#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48955#comment:22/1577134725220969</guid>
      <description>&lt;p&gt;
Sorry for bumping in as I didn't know about this ticket and it took me way longer to find out why Customizer was producing massive amounts of errors for me today as an array was trying to pass from some custom options.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It seems that due to the mentioned hook &lt;code&gt;add_filter( 'pre_kses', 'wp_pre_kses_block_attributes', 10, 3 );&lt;/code&gt; the &lt;code&gt;parse_blocks()&lt;/code&gt; is running everywhere throughout the admin. Is this expected behavior?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As an example:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
1] I've added &lt;code&gt;an error_log( $content );&lt;/code&gt; at &lt;code&gt;wp-includes\blocks.php:511&lt;/code&gt;.&lt;br /&gt;
2] Went into my Appearance -&amp;gt; Themes&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
debug.log shows:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;[23-Dec-2019 20:36:57 UTC] Twenty Twenty
[23-Dec-2019 20:36:57 UTC] the WordPress team
[23-Dec-2019 20:36:57 UTC] Our default theme for 2020 is designed to take full advantage of the flexibility of the block editor. Organizations and businesses have the ability to create dynamic landing pages with endless layouts using the group and column blocks. The centered content column and fine-tuned typography also makes it perfect for traditional blogs. Complete editor styles give you a good idea of what your content will look like, even before you publish. You can give your site a personal touch by changing the background colors and the accent color in the Customizer. The colors of all elements on your site are automatically calculated based on the colors you pick, ensuring a high, accessible color contrast for your visitors.
&lt;/pre&gt;&lt;p&gt;
Same thing happens on Plugins page for each existing plugin so on so forth.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
---&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also note that if the filter is simply commented out, there are no errors produced at all from any of the Arrays that options in the Customizer might be returning.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Again sorry if this might be throwing the conversation off, but it hasn't been making any sense to me for hours now the part of why having an output everywhere from the admin area when there are no blocks involved at all (at least as far as I know ).&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48955 (WP 5.3.1 changes cause potential backwards compatibility breakage with kses) updated</title>
      
        <dc:creator>aduth</dc:creator>

      <pubDate>Mon, 23 Dec 2019 20:49:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48955#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48955#comment:21/1577134141699341</guid>
      <description>&lt;p&gt;
What about plugins which respect the documented string type, and would likewise break if a feature enhancement to support arrays was adopted?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For example:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/Automattic/jetpack/blob/e67bea6/modules/shortcodes/youtube.php#L109"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/Automattic/jetpack/blob/e67bea6/modules/shortcodes/youtube.php#L109&lt;/a&gt;&lt;br /&gt;
Filtering as string: &lt;a class="ext-link" href="https://github.com/Automattic/jetpack/blob/e67bea6/modules/shortcodes/youtube.php#L37"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/Automattic/jetpack/blob/e67bea6/modules/shortcodes/youtube.php#L37&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/category-icons/trunk/category_icons.php?rev=744383#L37"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/category-icons/trunk/category_icons.php?rev=744383#L37&lt;/a&gt;&lt;br /&gt;
Filtering as string: &lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/category-icons/trunk/category_icons.php?rev=744383#L447"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/category-icons/trunk/category_icons.php?rev=744383#L447&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/twitter-embed/trunk/twitter-embed.php?rev=2074143#L29"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/twitter-embed/trunk/twitter-embed.php?rev=2074143#L29&lt;/a&gt;&lt;br /&gt;
Filtering as string: &lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/twitter-embed/trunk/twitter-embed.php?rev=2074143#L47"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/twitter-embed/trunk/twitter-embed.php?rev=2074143#L47&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/article-directory/trunk/article-directory.php?rev=333204#L37"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/article-directory/trunk/article-directory.php?rev=333204#L37&lt;/a&gt;&lt;br /&gt;
Filtering as string: &lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/article-directory/trunk/article-directory.php?rev=333204#L33"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/article-directory/trunk/article-directory.php?rev=333204#L33&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/yubikey-plugin/trunk/yubikey.php?rev=832195#L421"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/yubikey-plugin/trunk/yubikey.php?rev=832195#L421&lt;/a&gt;&lt;br /&gt;
Filtering as string: &lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/yubikey-plugin/trunk/yubikey.php?rev=832195#L407"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/yubikey-plugin/trunk/yubikey.php?rev=832195#L407&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/superpack/tags/0.3.1/inc/class-superpack-shortcodes.php#L67"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/superpack/tags/0.3.1/inc/class-superpack-shortcodes.php#L67&lt;/a&gt;&lt;br /&gt;
Filtering as string: &lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/superpack/tags/0.3.1/inc/class-superpack-shortcodes.php#L101"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/superpack/tags/0.3.1/inc/class-superpack-shortcodes.php#L101&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/another-soundcloud-quicktag/trunk/another-soundcloud-quicktag.php?rev=333652#L30"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/another-soundcloud-quicktag/trunk/another-soundcloud-quicktag.php?rev=333652#L30&lt;/a&gt;&lt;br /&gt;
Filtering as string: &lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/another-soundcloud-quicktag/trunk/another-soundcloud-quicktag.php?rev=333652#L33"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/another-soundcloud-quicktag/trunk/another-soundcloud-quicktag.php?rev=333652#L33&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/shortcake-bakery/trunk/inc/class-shortcake-bakery.php?rev=1649994#L77"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/shortcake-bakery/trunk/inc/class-shortcake-bakery.php?rev=1649994#L77&lt;/a&gt;&lt;br /&gt;
Filtering as string: &lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/shortcake-bakery/trunk/inc/class-shortcake-bakery.php?rev=1649994#L105"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/shortcake-bakery/trunk/inc/class-shortcake-bakery.php?rev=1649994#L105&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/article-directory-redux/trunk/icwp-adr.php?rev=900910#L67"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/article-directory-redux/trunk/icwp-adr.php?rev=900910#L67&lt;/a&gt;&lt;br /&gt;
Filtering as string: &lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/article-directory-redux/trunk/icwp-adr.php?rev=900910#L189"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/article-directory-redux/trunk/icwp-adr.php?rev=900910#L189&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/shoplocket/trunk/shoplocket.php?rev=688408#L44"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/shoplocket/trunk/shoplocket.php?rev=688408#L44&lt;/a&gt;&lt;br /&gt;
Filtering as string: &lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/shoplocket/trunk/shoplocket.php?rev=688408#L187"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/shoplocket/trunk/shoplocket.php?rev=688408#L187&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/wpdirectory/trunk/wpdirectory.php?rev=185104#L29"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/wpdirectory/trunk/wpdirectory.php?rev=185104#L29&lt;/a&gt;&lt;br /&gt;
Filtering as string: &lt;a class="ext-link" href="https://plugins.trac.wordpress.org/browser/wpdirectory/trunk/wpdirectory.php?rev=185104#L25"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.trac.wordpress.org/browser/wpdirectory/trunk/wpdirectory.php?rev=185104#L25&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Arguably, it was never the case that &lt;code&gt;wp_kses&lt;/code&gt; would have worked as expected with an array value filtered by any of the plugins above.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The reason I keep harping on about the documentation is that it serves as a contract against which backwards-compatibility should be measured. It acts as a promise that the framework will behave in a particular way under a specific set of conditions, of which the given arguments shape is one such condition. For plugins which passed an array value, there was no guarantee on the behavior, in much the same way that I could call &lt;code&gt;wp_insert_post( new DateTime() )&lt;/code&gt;, and it might do something different years from now than it does today.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If a plugin comes to rely on an incidental, undocumented behavior, it's unfortunate if that behavior changes over time. But for each one of those cases, there are many more where a plugin does target the documented signature, and may similarly break if we were to change the behavior of the function. Given the choice, we should seek to uphold support for the documented behavior.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
There's also a question of just how far feature support should extend. Without delving into specifics, I can already imagine at least one potential security concern that could result from the proposed enhancement to KSES functions. This leads me to resurface a &lt;a class="ext-link" href="https://wordpress.slack.com/archives/C02RQBWTW/p1576528487144300"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;point I had raised in a recent Slack conversation&lt;/a&gt; (&lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;link requires registration&lt;/a&gt;), wherein we should be especially cautious with added feature support for these functions, given their sensitive nature and the expanded complexity of supporting additional combinations of arguments.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If we treat this as a feature enhancement, it should be evaluated on its own merits, and implemented in mind of the potential impact on existing usage as documented. On that basis, I'm personally not convinced it should be supported.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49059 (Whitespace inside p element in wp-signup.php should be removed) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 23 Dec 2019 20:06:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49059#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49059#comment:22/1577131568955680</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/49059#comment:20" title="Comment 20"&gt;johnjamesjacoby&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
just makes this part of the code a bit more inconsistent, and a bit harder to read&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Statements like this are not helpful.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm sorry but I don't see what's "not helpful" here? :)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As posted abode, IDEs can highlight HTML tags nicely but not when they are outputted as static/hard-coded PHP strings. &lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
"Better" and "worse" are opinions. "Inconsistent" is relative, because this patch is literally only about providing consistency to this file.&lt;br /&gt;
...&lt;br /&gt;
can you please patch this file yourself here so others can better understand what you mean?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yep, I understand. My opinion is that "white space" changes like this one should not be done one-file-at-a-time and should be considered as part of the coding standards. Otherwise this results in adding more and more "cases" to the 8,000 &lt;code&gt;?&amp;gt;&lt;/code&gt; and about 700 &lt;code&gt;echo 'string';&lt;/code&gt; which doesn't "fix" anything. That's why I added the &lt;code&gt;close&lt;/code&gt; keyword.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49059 (Whitespace inside p element in wp-signup.php should be removed) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 23 Dec 2019 19:47:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49059#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49059#comment:21/1577130425337975</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/49059#comment:19" title="Comment 19"&gt;henry.wright&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Yes, that would be ideal :)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
And yes, perhaps it's time to look again at the PHP coding standards and try to come up with some changes that will make this better. Don't think implementing a templating system is possible at this point, that ship has sailed long ago. But perhaps can start by looking at the code and come up with an uniform way of "separating" PHP and HTML. Looks like there are currently over 8,000 &lt;code&gt;?&amp;gt;&lt;/code&gt; and about 700 &lt;code&gt;echo 'string';&lt;/code&gt; in WP. That's a lot of places that need considering :)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49059 (Whitespace inside p element in wp-signup.php should be removed) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Mon, 23 Dec 2019 19:46:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49059#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49059#comment:20/1577130392777944</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
just makes this part of the code a bit more inconsistent, and a bit harder to read&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Statements like this are not helpful. They minimize the experiences of other contributors who are attempting to improve &amp;amp; simplify code that (we all agree) is not good in its current iteration. "Better" and "worse" are opinions. "Inconsistent" is relative, because this patch is literally only about providing consistency to this file.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
@azaozz, since you have a strong opposing opinion, can you please patch this file yourself here so others can better understand what you mean? If you won't, I think @SergeyBiryukov's patch provides much needed consistency to this file, right or wrong by any current or future coding standards, and recommend it be committed as is.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49059 (Whitespace inside p element in wp-signup.php should be removed) updated</title>
      
        <dc:creator>henry.wright</dc:creator>

      <pubDate>Mon, 23 Dec 2019 19:31:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49059#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49059#comment:19/1577129492105173</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
The general idea in the WP coding standards is that source code readability is more important than controlling white space in the outputted HTML&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
To me, we should have both. There will be a pattern or standard we can arrive at which does not output unintended whitespace and is readable when viewing the file source&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49059 (Whitespace inside p element in wp-signup.php should be removed) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 23 Dec 2019 19:25:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49059#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49059#comment:18/1577129107393335</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/49059#comment:15" title="Comment 15"&gt;henry.wright&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think the approach used in the patch is a nice improvement.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sorry but I don't think so. This is (mostly) a "coding standards" question, and I agree with @johnjamesjacoby that this ticket is not the place to propose or discuss changes there :)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Switching from stopping and starting the interpreter to &lt;code&gt;echo&lt;/code&gt; just makes this part of the code a bit more inconsistent, and a bit harder to read (IDEs can highlight HTML tags nicely but not when they are outputted as static/hard-coded PHP strings).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The general idea in the WP coding standards is that source code readability is more important than controlling white space in the outputted HTML. This includes formatting the source code in a way that is easy to highlight by various IDEs and "source code editors", and keeping HTML and PHP easily distinguishable when reading the code.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49069 (Multisite: 404 template isn't used in network installs when a file ...) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Mon, 23 Dec 2019 18:15:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49069#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49069#comment:5/1577124923389629</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@henrywright Unfortunately, as far as I know, the &lt;a class="ext-link" href="https://httpd.apache.org/docs/current/mod/mod_rewrite.html#rewritecond"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;RewriteCond&lt;/a&gt; syntax is not expressive enough to "improve the pattern matching".&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
However, I'm not sure if this is what @apedog was suggesting in his comment (and I'd never thought of this before), but since the &lt;a class="ext-link" href="https://httpd.apache.org/docs/2.4/mod/core.html#errordocument"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;ErrorDocument&lt;/a&gt; directive is allowed in .htaccess, changing the multiste mod_rewrite rules to the following seems to works:&lt;br /&gt;
&lt;/p&gt;
&lt;h2 id="newmultisitesub-directoryrewriterules"&gt;new multisite sub-directory rewrite rules&lt;/h2&gt;
&lt;pre class="wiki"&gt;RewriteEngine On
RewriteBase /
RewriteRule ^index\.php$ - [L]
# the following is the new rule.
# it forces WP to handle the request when apache detects a 404 as a result of
# the "RewriteRule ^([_0-9a-zA-Z-]+/)?(.*\.php)$ $2 [L]" rule.
ErrorDocument 404 /index.php
# add a trailing slash to /wp-admin
RewriteRule ^([_0-9a-zA-Z-]+/)?fwp-admin$ $1wp-admin/ [R=301,L]
RewriteCond %{REQUEST_FILENAME} -f [OR]
RewriteCond %{REQUEST_FILENAME} -d
RewriteRule ^ - [L]
RewriteRule ^([_0-9a-zA-Z-]+/)?(wp-(content|admin|includes).*) $2 [L]
RewriteRule ^([_0-9a-zA-Z-]+/)?(.*\.php)$ $2 [L]
RewriteRule . index.php [L]
&lt;/pre&gt;&lt;h2 id="newmultisitesub-domainrewriterules"&gt;new multisite sub-domain rewrite rules&lt;/h2&gt;
&lt;pre class="wiki"&gt;RewriteEngine On
RewriteBase /
RewriteRule ^index\.php$ - [L]
# the following is the new rule.
# it forces WP to handle the request when apache detects a 404 as a result of
# the "RewriteRule ^(.*\.php)$ $1 [L]" rule.
ErrorDocument 404 /index.php
# add a trailing slash to /wp-admin
RewriteRule ^wp-admin$ wp-admin/ [R=301,L]
RewriteCond %{REQUEST_FILENAME} -f [OR]
RewriteCond %{REQUEST_FILENAME} -d
RewriteRule ^ - [L]
RewriteRule ^(wp-(content|admin|includes).*) $1 [L]
RewriteRule ^(.*\.php)$ $1 [L]
RewriteRule . index.php [L]
&lt;/pre&gt;&lt;p&gt;
I've tried the above on a few local multisites and it seems to work.  I haven't tested it enough to know whether it will cause unintended consequences.  Would love to get some more feedback from others.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As I've never used nginx, I have no idea whether there is an equivalent for it's rules (or IIS, for that matter).&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45423 (Use custom capabilities for the block editor's reusable blocks.) updated</title>
      
        <dc:creator>skorasaurus</dc:creator>

      <pubDate>Mon, 23 Dec 2019 18:08:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45423#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45423#comment:19/1577124482689943</guid>
      <description>&lt;p&gt;
I'm running into this right now as we have users who we wish to access reusable blocks on custom post types. We want to simplify the editing experience for our internal staff by only showing them the content that they work on; (some custom post types) and not all content of the post type 'posts' which is the current behavior as mentioned in this ticket. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
While developing, I had mistakenly assumed that the read_blocks permission would give them permission to access the blocks (both core and reusable) &lt;br /&gt;
(and this wasn't documented anywhere, to my knowledge, until I delved into the code and then found this ticket).  &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As a result, I am guessing as a work-around users/agencies creating their own plugins with their own blocks instead of using reusable blocks and I may end up taking the same approach. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49056 (Can we stop bundling default themes?) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Dec 2019 17:58:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49056#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49056#comment:9/1577123883943228</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47007" title="Docs: Correct the note about the `CORE_UPGRADE_SKIP_NEW_BUNDLED` ..."&gt;47007&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Correct the note about the &lt;code&gt;CORE_UPGRADE_SKIP_NEW_BUNDLED&lt;/code&gt; constant in &lt;code&gt;$_new_bundled_files&lt;/code&gt; global description.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In order to tell WordPress not to install new bundled themes on update, &lt;code&gt;CORE_UPGRADE_SKIP_NEW_BUNDLED&lt;/code&gt; should be set to &lt;code&gt;true&lt;/code&gt;, as the name suggests, not &lt;code&gt;false&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39064" title="Upgrade: Install new themes upon upgrade again.
This partially reverts ..."&gt;[39064]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props tomgreer, knutsp, crdunst.&lt;br /&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/49056" title="#49056: defect (bug): Can we stop bundling default themes? (new)"&gt;#49056&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [47007]: Docs: Correct the note about the `CORE_UPGRADE_SKIP_NEW_BUNDLED` ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Dec 2019 17:58:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47007</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47007/1577123882727202</guid>
      <description>&lt;p&gt;
Docs: Correct the note about the &lt;code&gt;CORE_UPGRADE_SKIP_NEW_BUNDLED&lt;/code&gt; constant in &lt;code&gt;$_new_bundled_files&lt;/code&gt; global description.
&lt;/p&gt;
&lt;p&gt;
In order to tell WordPress not to install new bundled themes on update, &lt;code&gt;CORE_UPGRADE_SKIP_NEW_BUNDLED&lt;/code&gt; should be set to &lt;code&gt;true&lt;/code&gt;, as the name suggests, not &lt;code&gt;false&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39064" title="Upgrade: Install new themes upon upgrade again.
This partially reverts ..."&gt;[39064]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Props tomgreer, knutsp, crdunst.
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/49056" title="#49056: defect (bug): Can we stop bundling default themes? (new)"&gt;#49056&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #49056 (Can we stop bundling default themes?) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Dec 2019 17:44:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49056#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49056#comment:8/1577123089985394</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/49056#comment:2" title="Comment 2"&gt;crdunst&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
2) If WP doesn't handle 'no themes' gracefully, shouldn't we change that behaviour? A simple message on the front-end, and a notice on the back-end: "you have no theme installed, please install one" or similar?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think that was addressed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/25666" title="Show a proper error message on the dashboard when the current theme is ..."&gt;[25666]&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21670" title="#21670: defect (bug): ERROR: The themes directory is either empty or doesn’t exist. Please ... (closed: fixed)"&gt;#21670&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36335" title="Themes: Show an error message to logged-in users if a template file ..."&gt;[36335]&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21931" title="#21931: enhancement: White screen of death if theme can't be found (closed: fixed)"&gt;#21931&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/49056#comment:6" title="Comment 6"&gt;tomgreer&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I disagree with the argument about the need for fallback in case the active theme can't be loaded.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Another argument is that not bundling new default themes provides a bad user experience for users seeking to experiment with them, see &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39064" title="Upgrade: Install new themes upon upgrade again.
This partially reverts ..."&gt;[39064]&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38551" title="#38551: defect (bug): Twenty Seventeen is not installed with WordPress updates. (closed: fixed)"&gt;#38551&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/49056#comment:7" title="Comment 7"&gt;tomgreer&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Please clarify, what value should be assigned to CORE_UPGRADE_SKIP_NEW_BUNDLED to tell WordPress not to installs themes when the core is updated? &lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks for pointing that out, it does look confusing.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Reading through the related commits and tickets:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17576" title="Be a party-pooper; No more Akismet Dancing upon upgrade; Respect ..."&gt;[17576]&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14484" title="#14484: task (blessed): Make WordPress core updates only update the core (closed: fixed)"&gt;#14484&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/18225" title="Core support for partial updates. see #10611."&gt;[18225]&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10611" title="#10611: task (blessed): Support Partial core upgrades (closed: fixed)"&gt;#10611&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/22226" title="When upgrading a site to/from a  Beta, alpha, or non-stable release, ..."&gt;[22226]&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21789" title="#21789: enhancement: Twenty Twelve as default theme (closed: fixed)"&gt;#21789&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/35738" title="Upgrade: New themes are not automatically installed on upgrade. This ..."&gt;[35738]&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34306" title="#34306: task (blessed): Twenty Sixteen as default theme (closed: fixed)"&gt;#34306&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39064" title="Upgrade: Install new themes upon upgrade again.
This partially reverts ..."&gt;[39064]&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38551" title="#38551: defect (bug): Twenty Seventeen is not installed with WordPress updates. (closed: fixed)"&gt;#38551&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The comment &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34306#comment:8" title="Comment 8 for #34306: task (blessed): Twenty Sixteen as default theme (closed: fixed)"&gt;8:ticket:34306&lt;/a&gt; clarifies the intention behind explicitly setting the constant to &lt;code&gt;false&lt;/code&gt; to re-enable installing new default themes at the time. Some implementation details have changed between the patches &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34306/34306.2.diff" title="Attachment '34306.2.diff' in Ticket #34306"&gt;34306.2.diff:ticket:34306&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34306/34306.2.diff" title="Download"&gt;​&lt;/a&gt; and &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34306/34306.3.diff" title="Attachment '34306.3.diff' in Ticket #34306"&gt;34306.3.diff:ticket:34306&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34306/34306.3.diff" title="Download"&gt;​&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It looks like current comment refers to a part of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/35738" title="Upgrade: New themes are not automatically installed on upgrade. This ..."&gt;[35738]&lt;/a&gt; that was later reverted in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39064" title="Upgrade: Install new themes upon upgrade again.
This partially reverts ..."&gt;[39064]&lt;/a&gt;. The comment should be updated to reflect the initial intention of the constant as introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17576" title="Be a party-pooper; No more Akismet Dancing upon upgrade; Respect ..."&gt;[17576]&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14484#comment:23" title="Comment 23 for #14484: task (blessed): Make WordPress core updates only update the core (closed: fixed)"&gt;23:ticket:14484&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
To summarize, in order to tell WordPress not to install new themes on update, &lt;code&gt;CORE_UPGRADE_SKIP_NEW_BUNDLED&lt;/code&gt; should be set to &lt;code&gt;true&lt;/code&gt;, as the name suggests.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48955 (WP 5.3.1 changes cause potential backwards compatibility breakage with kses) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Mon, 23 Dec 2019 17:28:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48955#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48955#comment:20/1577122103296216</guid>
      <description>&lt;p&gt;
Passing an array to the kses functions worked previously because it was just a chain of &lt;code&gt;preg_replace_callback&lt;/code&gt; calls, and that function accepts either a string or an array.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The approach that is friendliest to the existing ecosystem would be to add unit tests to make sure the KSES functions continue working with an array as they have for many years, fix this behavior again in the code, and document passing an array as a valid option.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/48955/48955.test.diff" title="Attachment '48955.test.diff' in Ticket #48955"&gt;attachment:48955.test.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/48955/48955.test.diff" title="Download"&gt;​&lt;/a&gt; is a first step towards this approach. It is still passing against the 4.9 branch.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>48955.test.diff attached to Ticket #48955</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Mon, 23 Dec 2019 17:20:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/48955/48955.test.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/48955/48955.test.diff/1577121659210829</guid>
      <description>&lt;p&gt;
Test for wp_kses + array
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49069 (Multisite: 404 template isn't used in network installs when a file ...) updated</title>
      
        <dc:creator>henry.wright</dc:creator>

      <pubDate>Mon, 23 Dec 2019 16:58:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49069#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49069#comment:4/1577120307376537</guid>
      <description>&lt;p&gt;
@apedog &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The pattern matching described by @pbiron could be improved rather than fixing this at the server level&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45423 (Use custom capabilities for the block editor's reusable blocks.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 23 Dec 2019 16:54:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45423#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45423#comment:18/1577120071166619</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-editor by skorasaurus. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1577120069072900"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49056 (Can we stop bundling default themes?) updated</title>
      
        <dc:creator>tomgreer</dc:creator>

      <pubDate>Mon, 23 Dec 2019 16:47:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49056#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49056#comment:7/1577119627502642</guid>
      <description>&lt;p&gt;
I assumed that CORE_UPGRADE_SKIP_NEW_BUNDLED needs to be set to TRUE for WordPress to skip installing the default theme as part of core update. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
But the source code comments say "To disable new themes from being installed on upgrade, explicitly define CORE_UPGRADE_SKIP_NEW_BUNDLED as false." That's counter-intuitive. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
So I explored the code. It appears to me the comment is wrong. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Please clarify, what value should be assigned to CORE_UPGRADE_SKIP_NEW_BUNDLED to tell WordPress not to installs themes when the core is updated? &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49069 (Multisite: 404 template isn't used in network installs when a file ...) updated</title>
      
        <dc:creator>apedog</dc:creator>

      <pubDate>Mon, 23 Dec 2019 16:39:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49069#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49069#comment:3/1577119192109761</guid>
      <description>&lt;p&gt;
&lt;code&gt;ErrorDocument&lt;/code&gt; directive is your friend.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://httpd.apache.org/docs/2.4/custom-error.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://httpd.apache.org/docs/2.4/custom-error.html&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49069 (Multisite: 404 template isn't used in network installs when a file ...) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Mon, 23 Dec 2019 16:25:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49069#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49069#comment:2/1577118338341078</guid>
      <description>&lt;p&gt;
Because of those 2 .htaccess rewrite rules the web server, and not WP, handles those requests, which is why the 404 template never gets called.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49056 (Can we stop bundling default themes?) updated</title>
      
        <dc:creator>tomgreer</dc:creator>

      <pubDate>Mon, 23 Dec 2019 16:23:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49056#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49056#comment:6/1577118189318098</guid>
      <description>&lt;p&gt;
I'm thrilled to learn about the CORE_UPGRADE_SKIP_NEW_BUNDLED constant. We've been busy deleting and re-deleting twenty-twenty from every site we maintain (about 60). We delete because they will never be needed and will require time and attention when patches are released.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
By the way, I agree with @crdunst. You are wasting a tremendous amount of bandwidth and disk storage by auto-installing each year's new theme by default. I see websites just about every day with twenty-twelve, thirteen, fourteen, etc. installed. And none have ever been used. What a waste!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I disagree with the argument about the need for fallback in case the active theme can't be loaded. That's a tremendously weak argument. First of all, that almost never happens with an active website -- and second, I would want the website to crash and notify like it does on a fatal error as I'm sure that my content would look terrible using twenty-twenty. I'd want to be notified so I could address the issue.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49069 (Multisite: 404 template isn't used in network installs when a file ...) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Mon, 23 Dec 2019 16:19:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49069#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49069#comment:1/1577117944436821</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This only happens when the file extension is &lt;code&gt;.php&lt;/code&gt; and is because of the .htaccess rewrite rules that are used with multisite.&lt;br /&gt;
&lt;/p&gt;
&lt;h2 id="multisitesub-directoryrewriterules"&gt;multisite sub-directory rewrite rules&lt;/h2&gt;
&lt;pre class="wiki"&gt;RewriteEngine On
RewriteBase /
RewriteRule ^index\.php$ - [L]
# add a trailing slash to /wp-admin
RewriteRule ^([_0-9a-zA-Z-]+/)?wp-admin$ \$1wp-admin/ [R=301,L]
RewriteCond %{REQUEST_FILENAME} -f [OR]
RewriteCond %{REQUEST_FILENAME} -d
RewriteRule ^ - [L]
RewriteRule ^([_0-9a-zA-Z-]+/)?(wp-(content|admin|includes).*) \$2 [L]
# the following rule is the "culprit" and is necessary for URLs like:
# https://example.com/sub-site/wp-login.php
RewriteRule ^([_0-9a-zA-Z-]+/)?(.*\.php)$ \$2 [L]
RewriteRule . index.php [L]
&lt;/pre&gt;&lt;h2 id="multisitesub-domainrewriterules"&gt;multisite sub-domain rewrite rules&lt;/h2&gt;
&lt;pre class="wiki"&gt;RewriteEngine On
RewriteBase /
RewriteRule ^index\.php$ - [L]
# add a trailing slash to /wp-admin
RewriteRule ^([_0-9a-zA-Z-]+/)?wp-admin$ \$1wp-admin/ [R=301,L]
RewriteCond %{REQUEST_FILENAME} -f [OR]
RewriteCond %{REQUEST_FILENAME} -d
RewriteRule ^ - [L]
RewriteRule ^(wp-(content|admin|includes).*) \$1 [L]
# the following rule is the "culprit" and is necessary for URLs like:
# https://sub-site.example.com/wp-login.php
RewriteRule ^(.*\.php)$ \$1 [L]
RewriteRule . index.php [L]
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49059 (Whitespace inside p element in wp-signup.php should be removed) updated</title>
      
        <dc:creator>henry.wright</dc:creator>

      <pubDate>Mon, 23 Dec 2019 15:52:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49059#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49059#comment:17/1577116363143807</guid>
      <description>&lt;p&gt;
1 thing worth mentioning is network traffic. The whitespace we are referring to travels through the network. Whitespace in PHP doesn't. The impact will be negligible obviously&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49070 (Gutenberg and &lt;!--more--&gt;) created</title>
      
        <dc:creator>arena</dc:creator>

      <pubDate>Mon, 23 Dec 2019 15:42:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49070</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49070/1577115744708195</guid>
      <description>&lt;p&gt;
When creating a new post, whenever i insert the &amp;lt;!--more--&amp;gt; text in a block using the html editor, it is saved properly.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When i come back to edit the post, sometimes the text is displayed as interpreted html sometimes it is displayed with the html editor ...&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In the first case (interpreted html), if i modify another block and save the post, the  &amp;lt;!--more--&amp;gt; is suppressed !&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49069 (Multisite: 404 template isn't used in network installs when a file ...) created</title>
      
        <dc:creator>henry.wright</dc:creator>

      <pubDate>Mon, 23 Dec 2019 15:31:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49069</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49069/1577115060139127</guid>
      <description>&lt;p&gt;
The WordPress 404 template isn't used when certain URLs are visited. For example:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://commons.gc.cuny.edu/sites/file.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://commons.gc.cuny.edu/sites/file.php&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://blogs.harvard.edu/file.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://blogs.harvard.edu/file.php&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Note this seems to happen in network installs only. I can't reproduce when using a single install.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49056 (Can we stop bundling default themes?) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 23 Dec 2019 15:16:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49056#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49056#comment:5/1577114188553270</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #forums by pbiron. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/forums/p1577114187282000"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49068 (wp-login.php is available to a user after authentication) updated</title>
      
        <dc:creator>henry.wright</dc:creator>

      <pubDate>Mon, 23 Dec 2019 15:10:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49068#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49068#comment:3/1577113855895300</guid>
      <description>&lt;p&gt;
Hi @SergeyBiryukov thanks for pointing out. I added a comment to the master ticket&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14949 (Login gives false assurance of having logged out) updated</title>
      
        <dc:creator>henry.wright</dc:creator>

      <pubDate>Mon, 23 Dec 2019 15:08:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14949#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14949#comment:30/1577113729612787</guid>
      <description>&lt;p&gt;
If I am able to visit the wp-login.php page and see a form asking for a username and password, as a user, I would assume I am not authenticated.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Making the text "You are now logged out" not display doesn't go far enough in my opinion.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49068 (wp-login.php is available to a user after authentication) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Dec 2019 14:59:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49068#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49068#comment:2/1577113172046047</guid>
      <description>&lt;p&gt;
Hi there, thanks for the report!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
We're already tracking this issue in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/14949" title="#14949: defect (bug): Login gives false assurance of having logged out (new)"&gt;#14949&lt;/a&gt; (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41533" title="#41533: defect (bug): Deny access to wp-login.php for authenticated users (closed: duplicate)"&gt;#41533&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/48832" title="#48832: defect (bug): wp-login.php page shows even if I am logged in. (closed: duplicate)"&gt;#48832&lt;/a&gt;). Also related: &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/47088" title="#47088: defect (bug): Visting wp-login.php whilst logged in logs you out (reopened)"&gt;#47088&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #41533,​49068 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 23 Dec 2019 14:57:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=41533%2C49068</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=41533%2C49068/1577113057695203</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41533" title="#41533: defect (bug): Deny access to wp-login.php for authenticated users (closed: duplicate)"&gt;#41533&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #49068 (wp-login.php is available to a user after authentication) created</title>
      
        <dc:creator>henry.wright</dc:creator>

      <pubDate>Mon, 23 Dec 2019 14:52:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49068</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49068/1577112736083044</guid>
      <description>&lt;p&gt;
A user can continue to access wp-login.php after they are authenticated if they visit example.com/wp-login.php.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Unless there is a reason why wp-login.php should be accessible if a user has already authenticated I propose we restrict access to stop a form being shown to them if they visit the page directly.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Tickets #44253,​49067 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Dec 2019 14:34:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=44253%2C49067</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=44253%2C49067/1577111651548737</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47006" title="Docs: Improve documentation for admin menu functions:
* ..."&gt;47006&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Improve documentation for admin menu functions:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;get_admin_page_parent()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_admin_page_title()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_plugin_page_hook()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_plugin_page_hookname()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;user_can_access_admin_page()&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Add missing descriptions and &lt;code&gt;@since&lt;/code&gt; tags.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props subrataemfluence, kennithnichol, stevenlinx, SergeyBiryukov.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44253" title="#44253: defect (bug): @return missing in doc comment of get_admin_page_parent function (closed: fixed)"&gt;#44253&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49067" title="#49067: defect (bug): get_admin_page_title() needs inline doc for description (closed: fixed)"&gt;#49067&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [47006]: Docs: Improve documentation for admin menu functions:  * ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Dec 2019 14:34:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47006</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47006/1577111650354728</guid>
      <description>&lt;p&gt;
Docs: Improve documentation for admin menu functions:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;get_admin_page_parent()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_admin_page_title()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_plugin_page_hook()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_plugin_page_hookname()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;user_can_access_admin_page()&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Add missing descriptions and &lt;code&gt;@since&lt;/code&gt; tags.
&lt;/p&gt;
&lt;p&gt;
Props subrataemfluence, kennithnichol, stevenlinx, SergeyBiryukov.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44253" title="#44253: defect (bug): @return missing in doc comment of get_admin_page_parent function (closed: fixed)"&gt;#44253&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49067" title="#49067: defect (bug): get_admin_page_title() needs inline doc for description (closed: fixed)"&gt;#49067&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #49067 (get_admin_page_title() needs inline doc for description) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Dec 2019 14:11:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49067#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49067#comment:2/1577110310354007</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44253 (@return missing in doc comment of get_admin_page_parent function) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Dec 2019 14:11:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44253#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44253#comment:5/1577110301403884</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49067 (get_admin_page_title() needs inline doc for description) updated</title>
      
        <dc:creator>stevenlinx</dc:creator>

      <pubDate>Mon, 23 Dec 2019 09:11:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49067#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49067#comment:1/1577092314948471</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>49067.diff attached to Ticket #49067</title>
      
        <dc:creator>stevenlinx</dc:creator>

      <pubDate>Mon, 23 Dec 2019 09:10:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49067/49067.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49067/49067.diff/1577092246413514</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49067 (get_admin_page_title() needs inline doc for description) created</title>
      
        <dc:creator>stevenlinx</dc:creator>

      <pubDate>Mon, 23 Dec 2019 08:54:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49067</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49067/1577091279451709</guid>
      <description>&lt;p&gt;
get_admin_page_title()&lt;br /&gt;
&lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/get_admin_page_title/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/reference/functions/get_admin_page_title/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49065 (Bug em Imagens e Artigos) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Dec 2019 05:56:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49065#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49065#comment:1/1577080565314597</guid>
      <description>invalid: &lt;p&gt;
Hi there, welcome to WordPress Trac! Thanks for the ticket.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm sorry to hear you are having issues with WordPress. Please note that this Trac is used for enhancements and bug reporting for the WordPress core software, not for individual support questions.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Please continue with your topic on support forums to get help with your site: &lt;a class="ext-link" href="https://pt.wordpress.org/support/topic/problema-na-edicao-de-artigos-e-imagens/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://pt.wordpress.org/support/topic/problema-na-edicao-de-artigos-e-imagens/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #49066 (Twenty Twenty: Font characters rendered as symbols) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 23 Dec 2019 03:22:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49066#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49066#comment:1/1577071333043832</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi there, welcome to WordPress Trac! Thanks for the report.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Just noting it's an issue with Chrome 79.0.3945.88 that's being tracked here:&lt;br /&gt;
&lt;a class="ext-link" href="https://bugs.chromium.org/p/chromium/issues/detail?id=1036250"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://bugs.chromium.org/p/chromium/issues/detail?id=1036250&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49066 (Twenty Twenty: Font characters rendered as symbols) created</title>
      
        <dc:creator>pikta</dc:creator>

      <pubDate>Mon, 23 Dec 2019 01:08:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49066</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49066/1577063287144308</guid>
      <description>&lt;p&gt;
Twenty Twenty theme fonts showed as symbols. It only happens to the Mac computer(s) with the Chrome browser. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Chrome Version 79.0.3945.88 (Official Build) (64-bit)&lt;br /&gt;
Mac OS Catalina 10.15.2&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Here is the page that has the original fonts: &lt;a class="ext-link" href="https://brunosautoinc.com/privacy"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://brunosautoinc.com/privacy&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I manually changed fonts on other pages so the content is readable. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49065 (Bug em Imagens e Artigos) created</title>
      
        <dc:creator>leandroborges86</dc:creator>

      <pubDate>Mon, 23 Dec 2019 00:21:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49065</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49065/1577060481684119</guid>
      <description>&lt;p&gt;
Bom dia!&lt;br /&gt;
Desde o dia 19/12 percebi que meu site não estava aparecendo banners nos artigos e nem no widgets que foram anexados diretos da Biblioteca de Multimídia.&lt;br /&gt;
Ao tentar acessar todos meus artigos não estou conseguindo abrir pela página de edição.&lt;br /&gt;
Já efetuei alguns procedimentos como atualizar o WordPress para a versão 5.3.2 e desativei todos os plugins, como teste. Mesmo assim não tive nenhum resultado. Não conseguindo acessar meus artigos de toda forma.&lt;br /&gt;
Também tentei ao mudar o tema para o padrão, mesmo assim não resolveu.&lt;br /&gt;
Alguém poderia me ajudar com esse problema?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Desde já agradeço.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Atenciosamente,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Leandro Borges&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item>
   </channel>
</rss>